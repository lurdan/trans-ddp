<!doctype debiandoc system>

<!--
 Debian's Bug Tracking System.
 Copyright (C)1997 Ian Jackson and Christian Schwarz;
 released under the terms of the GNU
 General Public License, version 2 or (at your option) any later.
 -->

<book>

<title>Das Fehlerverfolgungssystem von Debian (BTS)
<author>Ian Jackson <email/ijackson@gnu.ai.mit.edu/
<author>Christian Schwarz <email/schwarz@debian.org/
<version>version 0.2, <date>

<copyright>Copyright &copy;1997 Ian Jackson and Christian Schwarz.
<p>

This manual is free software; you may redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2, or (at your option) any
later version.
<p>

This is distributed in the hope that it will be useful, but
<em>without any warranty</em>; without even the implied warranty of
merchantability or fitness for a particular purpose.  See the GNU
General Public License for more details.
<p>

A copy of the GNU General Public License is available as
<tt>/usr/doc/copyright/GPL</tt> in the Debian GNU/Linux distribution
or on the World Wide Web at
<tt>http://www.gnu.org/copyleft/gpl.html</tt>. You can also obtain it
by writing to the Free Software Foundation, Inc., 675 Mass Ave,
Cambridge, MA 02139, USA.
<p>

    <toc sect>

    <chapt>Ueber dieses Handbuch<p>

	Dieses Handbuch erklärt Debians Fehlerverarbeitungssystem.
	Es soll eine Einführung und zugleich eine Referenz für die Benutzer
	und Betreuer von Debian sein.
      <p>
        Am Anfang wird ein Fehlerbericht durch eine herkömmliche E-Mail
	Nachricht an <tt>submit@bugs.debian.org</tt> eingereicht. Diesem wird
	dann eine Nummer zugeteilt, der Benutzer erhält eine Bestätigung und
	der Bericht wird an die <tt>debian-bugs-dist</tt> Mailingliste
	weitergeleitet. Wenn der Absender eine `Package` Linie im Bericht
	hinzugefügt hat wird auch der Betreuer dieses Pakets direkt informiert.
      <p>
        Die Betreffzeile (`Subject`) wird durch <tt>Bug#nnn</tt> ergänzt und
	die `Reply-To` Zeile wird so gesetzt dass der Absender des Fehlers und
	<tt>nnn@bugs.debian.org</tt> enthalten ist.
      <p>

    <chapt>Einen Fehlerbericht einreichen<p>

      <sect>Der Vorgang
	<p>
	  Wenn Sie einen Fehler berichten wollen (dieser Fehler kann in
	  irgendeinem Teil des Debian GNU/Linux Systems sein, z.B in einem
	  Dokument oder einem Paket), senden Sie bitte eine E-Mail Nachricht
	  an <tt>submit@bugs.debian.org</tt>.
	<p>
	  Der Fehlerbericht wird automatisch von einem Programm verarbeitet,
	  auf die <tt>debian-bugs-dist</tt> Mailingliste gesandt (Sie können
	  das verhindern, bitte lesen Sie weiter unten) und an den
	  verantwortlichen Betreuer weitergeleitet. Dazu sollte der
	  Fehlerbericht Pseudo-Kopfzeilen enthalten am Anfang der Nachricht
	  damit das Fehlerverfolgungssystem den Fehler einem bestimmten
	  Paket zuordnen kann und den zuständigen Betreuer ermitteln.
	<p>
	  Die Pseudokopfzeilen für einen Fehlerbericht im Paket <tt>foo</tt>
	  mit der Versionsnummer <tt>1.0-1</tt> würde wie folgt aussehen:
	  <example>
	    Package: foo
	    Version: 1.0-1
	  </example>
	  Da es `Kopfzeile` genannt wird heisst das dass diese am Anfang der
	  E-Mail Nachricht stehen müssen. (Merken Sie sich,
	  das Fehlerverfolgungssystem geht mit Nachrichten mit MIME Ahängen
	  zurzeit nicht korrekt um. Zum Beispiel sollten Sie den Bericht nicht
	  mit PGP signieren da die PGP Trennungslinie als beschädigte Kopfzeile
	  erkannt würde.)
	<p>
	  Das Fehlerverwaltungssystem kennt verschiedene <em>Pseudo-Pakete</em>
	  für Teile von Debian die nicht in Form eines Pakets bestehen. Diese
	  sind:
	  <taglist>
<tag><tt/base/
<item>Fehler im Basissystem
<tag><tt/bootdisk/
<item>Fehler in den Startdisketten
<tag><tt/rootdisk/
<item>Fehler im Festplattenabbild
<tag><tt/bugs.debian.org/
<item>Das Fehlerverwaltungssystem, @bugs.debian.org
<tag><tt/ftp.debian.org/
<item>Probleme mit dem FTP-Server
<tag><tt/nonus.debian.org/
<item>Probleme mit dem non-US Bereich
<tag><tt/www.debian.org/
<item>Probleme an der Website
<tag><tt/project/
<item>Probleme bezüglich der Projektverwaltung
<tag><tt/general/
<item>Generelle Probleme (z.B, dass viele Manpages den Berechtigungsmodus 755 verwenden)
<tag><tt/kernel/
<item>Problems with the Linux kernel, or that shipped with Debian
<tag><tt/lists.debian.org/
<item>The mailing lists, debian-*@lists.debian.org.
	  </taglist>
	  (An up-to-date list of supported <em/pseudo packages/ can be
	  found at the WWW interface of the bug tracking system.)
	<p>

	  If you have a buggy program you want to report a bug against
	  then you'll have to determine the package name and version
	  for the program first.  You can get these using <tt>dpkg
	  --search</tt> and <tt>dpkg --list</tt>; see <tt>dpkg
	  --help</tt> for a further explanation.
	<p>

      <sect>The contents of a bug report
	<p>

	  Your bug report should contain the following pieces of
	  information:
	  <list>
	    <item> The <em>exact</em> and <em>complete</em> text of
		any error messages printed or logged. This is very
		important!

	    <item> Exactly what you typed or did to demonstrate the
	    problem.
		
	    <item> A description of the incorrect behaviour: exactly
		what behaviour you were expecting, and what you
		observed. A transcript of an example session is a good
		way of showing this.

	    <item> A suggested fix, or even a patch, if you have one.

	    <item> Details of the configuration of the program with
		the problem.  Include the complete text of its
		configuration files.

	    <item> The version of the whole Debian system you are
	    using.

	    <item> What kernel version you're using (type uname -a).

	    <item> What shared C library you're using (type <tt>ls -l
	    /lib/libc.so.5</tt>).

	    <item> Any other details of your Linux system, if it seems
		appropriate.  For example, if you had a problem with a
		Debian Perl script, you would want to provide the
		version of the `perl' binary (perl -v).

	    <item> Appropriate details of the hardware in your
		system. If you're reporting a problem with a device
		driver please list <em>all</em> the hardware in your
		system, as problems are often caused by IRQ and I/O
		address conflicts.

	    <item>
		Include any detail that seems relevant - you are in
		very little danger of making your report too long by
		including too much information. If they are small
		please include in your report any files you were using
		to reproduce the problem (uuencoding them if they may
		contain odd characters etc.).
	      <p>
	  </list>
	<p>

	  Please don't report several unrelated bugs - especially ones
	  in different packages - in one message. Also, please don't
	  mail your bug report to any mailing lists or recipients
	  other than <tt>submit@bugs.debian.org</tt>.
	<p>
    
      <sect>An example
	<p>
	  A bug report, with mail header, looks something like this:
	  <example>
	    To: submit@bugs.debian.org
	    From: diligent@testing.linux.org
	    Subject: Hello says `goodbye'
	    
	    Package: hello
	    Version: 1.3-2
	    
	    When I invoke `hello' without arguments from an ordinary shell
	    prompt it prints `goodbye', rather than the expected `hello, world'.
	    Here is a transcript:

	    $ hello
	    goodbye
	    $ /usr/bin/hello
	    goodbye
	    $

	    I suggest that the output string, in hello.c, be corrected.

	    I am using Debian 1.1, kernel version 1.3.99.15z
	    and libc 5.2.18.3.2.1.3-beta.
	  </example>
	<p>
	  
      <sect>Using dpkg to find the package and version for the report
	<p>
	  If you are reporting a bug in a command, you can find out
	  which package installed it by using <tt/dpkg --search/. You
	  can find out which version of a package you have installed
	  by using <tt/dpkg --list/ or <tt/dpkg --status/.
	<p>
	  For example:
<example>
$ which dpkg
/usr/bin/dpkg
$ type dpkg
dpkg is hashed (/usr/bin/dpkg)
$ dpkg --search /usr/bin/dpkg
dpkg: /usr/bin/dpkg
$ dpkg --search '*/dpkg'
dpkg: /usr/doc/copyright/dpkg
dpkg: /var/lib/dpkg
dpkg: /usr/bin/dpkg
dpkg: /usr/lib/dpkg
dpkg: /usr/doc/dpkg
$ dpkg --list dpkg
Desired=Unknown/Install/Remove/Purge
| Status=Not/Installed/Config-files/Unpacked/Failed-config/Half-installed
|/ Err?=(none)/Hold/Reinst-required/X=both-problems (Status,Err: uppercase=bad)
||/ Name            Version        Description
+++-===============-==============-============================================
ii  dpkg            1.2.9elf       Package maintenance system for Debian Linux
$ dpkg --status dpkg
Package: dpkg
Essential: yes
Status: install ok installed
Priority: required
Section: base
Maintainer: Ian Jackson &lt;ian@chiark.chu.cam.ac.uk&gt;
Version: 1.2.9elf
Replaces: dpkgname
Pre-Depends: libc5 (>= 5.2.18-2), ncurses3.0
Conflicts: dpkgname
Description: Package maintenance system for Debian Linux
 This package contains the programs which handle the installation and
 removal of packages on your system.
 .
 The primary interface for the dpkg suite is the `dselect' program;
 a more low-level and less user-friendly interface is available in
 the form of the `dpkg' command.

$
</example>
<p>

      <sect>Minor bugs
	<p>
	  If a bug report is minor (for example, a documentation typo
	  or other trivial build problem), or you're submitting many
	  reports at once, send them to
	  <tt>maintonly@bugs.debian.org</tt> or
	  <tt>quiet@bugs.debian.org</tt>. <tt>maintonly</tt> will send
	  the report on to the package maintainer (provided you supply
	  a correct Package line in the pseudo-header and the
	  maintainer is known), and <tt>quiet</tt> will not forward it
	  anywhere at all but only file it as a bug (useful if, for
	  example, you are submitting many similar bugs and want to
	  post only a summary).
	<p>   

	  If you do this the bug system will set the <tt>Reply-To</tt>
	  of any forwarded message so that replies will by default be
	  processed in the same way as the original report.
	<p>

      <sect>Sending a copy of your report to other addresses
	<p>
	  
	  Sometimes it is necessary to send a copy of a bug report to
	  somewhere else besides the <tt>debian-devel</tt> mailing
	  list and the package maintainer, which is where they are
	  normally sent.
	<p>

	  You could do this by CC'ing your bug report to the other
	  address(es), but then the other copies would not have the
	  bug report number put in the <tt>Reply-To</tt> field and the
	  <tt>Subject</tt> line of the mail header. When the
	  recipients reply they will probably preserve the
	  <tt>submit@bugs.debian.org</tt> entry in the header and have
	  their message filed as a new bug report. This leads to many
	  duplicated reports.
	<p>

	  The <em>right</em> way to do this is to use the
	  <tt>X-Debian-CC</tt> header. Add a line like this to your
	  message's mail header (not to the pseudo header with the
	  Package field):
	  <example>
	    X-Debian-CC: other-list@cosmic.edu
	  </example>

	  This will cause the bug tracking system to send a copy of
	  your report to the address(es) specified in the
	  <tt>X-Debian-CC</tt> line as well as to the
	  <tt>debian-devel</tt> mailing list.
	<p>

	  This feature can often be combined usefully with mailing
	  <tt>quiet@bugs.debian.org</tt> - see above.
	<p>   

      <sect>Unknown packages or bugs with no Package key
	<p>  

	  If the bug tracking system doesn't know who the maintainer
	  of the relevant package is it'll forward the report to the
	  <tt>debian-devel</tt> mailing list, even if
	  <tt>maintonly</tt> was used.
	<p>

	  When sending to <tt>maintonly@bugs.debian.org</tt> or to
	  <tt>nnn-maintonly@bugs.debian.org</tt> you should make sure
	  that the bug report is assigned to the right package, by
	  putting a correct Package at the top of an original
	  submission of a report, or by using the
	  <tt>control@bugs.debian.org</tt> service to (re)assign the
	  report appropriately first if it isn't correct already (see
	  below).
	<p>

    <chapt>Getting information about bugs<p>

	Each message received at or sent by the bug processing system
	is logged and made available in a number of ways.
      <p>
	
   Copies of the logs are available on the World Wide Web at
   <tt>http://www.chiark.greenend.org.uk/debian/Bugs/</tt> and
   <tt>http://www.debian.org/Bugs/</tt>.
   <p>
   The HTML files containing the bug report logs are available in the
   WebPages subdirectory of the Debian FTP archive, and will be available
   on mirror sites that haven't explicitly removed them from their mirror
   configuration. A web server which is configured to serve this part of
   the FTP area as a webtree will provide a local copy of the pages.
   <p>
   There is a mailserver which can send bug reports as plain text on
   request. To use it send the word <tt/help/ as the sole contents of
   an email to <tt>request@bugs.debian.org</tt> (the `Subject' of the
   message is ignored), or read the instructions on the World Wide Web
   or in this document.<p>
<sect>The mail interface
<p>

   There is a mailserver which can send the bug reports and indices as
   plain text on request.
<p>   
   To use it you send a mail message to <tt>request@bugs.debian.org</tt>. The
   `Subject' of the message is ignored, except for generating the `Subject'
   of the reply.
<p>   
   The body you send should be a series of commands, one per line. You'll
   receive a reply which looks like a transcript of your message being
   interpreted, with a response to each command. No notifications are
   sent to anyone for most commands; however, the messages are logged and
   made available in the WWW pages.
<p>   
   Any text on a line starting with a hash sign `#' is ignored; the server
   will stop processing when it finds a line starting with quit, stop,
   thank or two hyphens (to avoid parsing a signature). It will also stop
   if it encounters too many unrecognised or badly-formatted commands. If
   no commands are successfully handled it will send the help text for
   the server.
<p>

Here is a list of available commands:
<taglist>
<tag><tt>send bugnumber</tt>
<item><p>
<tag><tt>send-detail bugnumber</tt>
<item>
          Requests the transcript for the bug report in question.
          send-detail sends all of the `boring' messages in the
          transcript, such as the various auto-acks (you should usually
          use send as well, as the interesting messages are not sent by
          send-detail).
<tag><tt>index [full]</tt>
<item><p>
<tag><tt>index-summary by-package</tt>
<item><p>
<tag><tt>   index-summary by-number</tt>
<item>
          Request the full index (with full details, and including done
          and forwarded reports), or the summary sorted by package or by
          number, respectively.
          
<tag><tt>   index-maint</tt>
<item>
          Requests the index page giving the list of maintainers with
          bugs (open and recently-closed) in the tracking sytem.
          
<tag><tt>   index maint maintainer</tt>
<item>
          Requests the index pages of bugs in the system for all
          maintainers containing the string maintainer. The search term
          is a case insensitive substring. The bug index for each
          matching maintainer will be sent in a separate message.
          
<tag><tt>   send-unmatched [this|0]</tt>
<item><p>
          
<tag><tt>   send-unmatched last|-1</tt>
<item><p>
          
<tag><tt>   send-unmatched old|-2</tt>
<item>
          Requests logs of messages not matched to a particular bug
          report, for this week, last week and the week before. (Each
          week ends on a Wednesday.)
          
<tag><tt>   getinfo filename</tt>
<item>
          Request a file containing information about package(s) and or
          maintainer(s) - the files available are:
          
        maintainers
               The unified list of packages' maintainers, as used by the
               tracking system. This is derived from information in the
               Packages files, override files and pseudo-packages files.
        override.stable
        override.development
        override.contrib
        override.non-free
        override.experimental
        override.codeword
               Information about the priorities and sections of packages
               and overriding values for the maintainers. This
               information is used by the process which generates the
               Packages files in the FTP archive. Information is
               available for each of the main distribution trees
               available; the current stable and development trees are
               available by their codewords as well as by their release
               status.
        pseudo-packages.description
        pseudo-packages.maintainers
               List of descriptions and maintainers respectively for
               pseudo-packages.
               
<tag><tt>   refcards</tt>
<item>
          Requests that the mailservers' reference card be sent in plain
          ASCII.
          
<tag><tt>   help</tt>
<item>
          Requests that this help document be sent by email in plain
          ASCII.
          
<tag><tt>quit</tt>, <tt>stop</tt>
<item><p>
<tag><tt>   thank...</tt>
<item><p>          
<tag><tt>   --...</tt>
<item>
          Stops processing at this point of the message. After this you
          may include any text you like, and it will be ignored. You can
          use this to include longer comments than are suitable for #,
          for example for the benefit of human readers of your message
          (reading it via the tracking system logs or due to a CC or
          BCC).
          
<tag><tt>   #... </tt>
<item>
          One-line comment. The # must be at the start of the line.
          
<tag><tt>   debug level</tt>
<item>
          Sets the debugging level to level, which should be a
          nonnegative integer. 0 is no debugging; 1 is usually
          sufficient. The debugging output appears in the transcript. It
          is not likely to be useful to general users of the bug system.
</taglist>          
   There is a reference card for the mailservers, available via the WWW,
   in bug-mailserver-refcard.txt or by email using the refcard command
   (see above).
<p>   
   If you wish to manipulate bug reports you should use the
   <tt>control@bugs.debian.org</tt>
   address, which understands a superset of the
   commands listed above. This is described in <ref id="mailcontrol"> or by
   sending help to control@bugs.
<p>   
   In case you are reading this as a plain text file or via email: an
   HTML version is available via the bug system main contents page
   <tt>http://www.debian.org/Bugs/</tt>.
<p>   
   Suggestions for future additions are welcome. Please mail
   owner@bugs.debian.org, debian-user@lists.debian.org or
   debian-devel@lists.debian.org.
<p>   

	<sect>Summary postings
	  <p>

	    Every Friday a list of outstanding bug reports is posted
	    to <tt>debian-devel</tt>, sorted by age of report; every
	    Tuesday a list of bug reports that have gone unanswered
	    too long is posted, sorted by package maintainer.

	  <p>   

	    If the maintainer of a package is listed incorrectly this
	    is usually because the maintainer has changed recently,
	    and the new maintainer hasn't yet uploaded a new version
	    of the package with a changed `Maintainer' control file
	    field. This will be fixed when the package is uploaded;
	    alternatively, there is an override file which the
	    distribution maintainers can edit to record the change in
	    maintainer, for example if a rebuild and reupload of the
	    package is not expected to be needed soon. Contact
	    <tt>iwj-mastercron@master.debian.org</tt> for changes to
	    the override file.

	  <p>   

      <chapt>Handling of bug reports<p>

	<sect>Followup messages
	  <p>

	    If a developer wishes to reply to a bug report without
	    marking the bug as done they may simply reply to the
	    message. Their reply will (by default) go to
	    <tt>nnn@bugs</tt> and to the original submitter of the bug
	    report. The bug tracking system will file the reply with
	    the rest of the logs for that bug report and forward it to
	    <tt>debian-devel</tt>.  The bug will not be marked as
	    done.

	  <p>   

	    If you wish to send a followup message which is not
	    appropriate for <tt>debian-devel</tt> you can do so by
	    sending it to <tt>nnn-quiet@bugs</tt> or
	    <tt>nnn-maintonly@bugs</tt>, which only file it (not
	    forwarding it anywhere) and send it on only to the
	    maintainer of the package in question, respectively.

	  <p>   

	    Do <em>not</em> use the `reply to all recipients' or
	    `followup' feature of your mailer unless you intend to
	    edit down the recipients substantially. In particular,
	    don't send a followup message both to
	    <tt>nnn@bugs.debian.org</tt> and to
	    <tt>submit@bugs.debian.org</tt>, because the bug system
	    will then get two copies of it and each one will be
	    forwarded to <tt>debian-devel</tt> separately.

	  <p>   

	<sect>Recording that you have passed on a bug report
	  <p>

	    When a developer forwards a bug report to the developer of
	    the general source package from which the Debian package
	    is derived, they should note this in the bug tracking
	    system as follows:

	  <p>

	    Make sure that the To field of your message to the author
	    to has only the author(s) address(es) in it; put both the
	    person who reported the bug and
	    <tt>nnn-forwarded@bugs.debian.org</tt> in the `CC' field.

	  <p>   

	    Ask the author to preserve the `CC' to
	    <tt>nnn-forwarded@bugs</tt> when they reply, so that the
	    bug tracking system will file their reply with the
	    original report.

	  <p>   

	    When the bug tracking system gets a message at
	    <tt>nnn-forwarded</tt> it will mark the relevant bug as
	    having been forwarded to the address(es) in the `To' field
	    of the message it gets.

	  <p>   

	    You can also manipulate the `forwarded to' information by
	    sending messages to <tt>control@bugs</tt>.

	  <p>   

	<sect>Closing bug reports
	  <p>

	    A developer who sees a bug on <tt>debian-devel</tt> and
	    takes responsibility for it should hit `Reply' in their
	    favourite mailreader, and then edit the `To' field to say
	    <tt>nnn-done@bugs.debian.org</tt> instead of
	    <tt>nnn@bugs</tt> (<tt>nnn-close</tt> is provided as an
	    alias for <tt>nnn-done</tt>).

	  <p>   

	    The address of the original submitter of the bug report
	    will be included in the default `To' field, because the
	    bug system included it in the `Reply-To.'

	  <p>   

	    `Done' messages are not automatically forwarded to the
	    mailing list, so it may sometimes be worthwhile including
	    the <tt>debian-devel</tt> mailing list if the other
	    developers are likely to be interested.

	  <p>   

	    The person closing the bug and the person who submitted it
	    will each get a notification about the change in status of
	    the report.

	  <p>

	<sect>Reopening, reassigning and manipulating bugs
	  <p>

	    It is possible to reassign bug reports to other packages,
	    to reopen erroneously-closed ones, to modify the
	    information saying to where, if anywhere, a bug report has
	    been forwarded, to change the titles of reports and to
	    merge and unmerge bug reports. This is done by sending
	    mail to <tt>control@bugs.debian.org</tt>.

	  <p>   

	    The format of these messages is described in the
	    folllowing sections.

	  <p>   



      <chapt id="mailcontrol">The mail control interface<p>

	<sect>How it works
	<p>

	  In addition to the mailserver on
	  <tt>request@bugs.debian.org</tt> which allows the retrieval
	  of bug data and documentation by email, there is another
	  server on <tt>control@bugs.debian.org</tt> which also allows
	  bug reports to be manipulated in various ways.

	<p>   

	  The control server works just like the request server,
	  except that it has some additional commands; in fact, it's
	  the same program. The two addresses are only separated to
	  avoid users making mistakes and causing problems while
	  merely trying to request information.

	<p>   

Here is a list of available commands:
<taglist>                                       
<tag><tt>   close bugnumber</tt>
<item>
          Close bug report `#bugnumber.'
<p>          
          A notification is sent to the user who reported the bug, but
          (in contrast to mailing <tt>bugnumber-done@bugs</tt>)
          the text of the
          mail which caused the bug to be closed is <em>not</em> included in
          that notification. The maintainer who closes a report should
          ensure, probably by sending a separate message, that the user
          who reported the bug knows why it is being closed.
<p>          
<tag><tt>   reassign bugnumber package</tt>
<item>
          Records that bug `#bugnumber' is a bug in package. This can be
          used to set the package if the user forgot the pseudo-header,
          or to change an earlier assignment. No notifications are sent
          to anyone (other than the usual information in the processing
          transcript).
<p>          
<tag><tt>   reopen bugnumber [originator-address|=]</tt>
<item>
          Reopens `#bugnumber' if it is closed.
<p>          
          By default you are recorded as the originator of the report, so
          that you will get the ack when it is closed again. This is to
          avoid flooding potentially-naive users with many notifications
          about the same report.
          <p>
          If you supply an originator-address the originator will be set
          to the address you supply; you can use `<tt>=</tt>'
          to keep the originator
          the same as it was before. It is usually a good idea to tell
          the person who is about to be recorded as the originator that
          you're reopening the report, so that they will know to expect
          the ack which they'll get when it is closed again.
          <p>
          If the bug is not closed then reopen won't do anything, not
          even change the originator. There is no way to change the
          originator of an open bug report (this is deliberate, so that
          you can't have a bug be closed and then deleted 28 days later
          without someone being told about it).
          <p>
<tag><tt>   forwarded bugnumber address</tt>
<item>
          Notes that bugnumber has been forwarded to the upstream
          maintainer at address. This does not actually forward the
          report. This can be used to change an existing incorrect
          forwarded-to address, or to record a new one for a bug that
          wasn't previously noted as having been forwarded.
          <p>
<tag><tt>   notforwarded bugnumber</tt>
<item>
          Forgets any idea that bugnumber has been forwarded to any
          upstream maintainer. If the bug was not recorded as having been
          forwarded then this will do nothing.
          <p>
<tag><tt>   retitle bugnumber new-title</tt>
<item>
          Changes the title of a bug report to that specified (the
          default is the Subject mail header from the original report.
          <p>
          Unlike most of the other bug-manipulation commands when used on
          one of a set of merged reports this will change the title of
          only the individual bug requested, and not all those with which
          it is merged.
          <p>
<tag><tt>   merge bugnumber bugnumber ...</tt>
<item>
          Merges two or more bug reports. When reports are merged
          opening, closing, marking or unmarking as forwarded and
          reassigning any of the bugs to a new package will have an
          identical effect on all of the merged reports.
          <p>
          Before bugs can be merged they must be in exactly the same
          state: either all open or all closed, with the same
          forwarded-to upstream author address or all not marked as
          forwarded, and all assigned to the same package or package(s)
          (an exact string comparison is done on the package to which the
          bug is assigned). If they don't start out in the same state you
          should use reassign, reopen and so forth to make sure that they
          are before using merge.
          <p>
          If any of the bugs listed in a merge command is already merged
          with another bug then all the reports merged with any of the
          ones listed will all be merged together. Merger is like
          equality: it is reflexive, transitive and symmetric.
          <p>
          Merging reports causes a note to appear on each report's logs;
          on the WWW pages this is includes links to the other bugs.
          <p>
          Merged reports are all expired simultaneously, and only when
          all of the reports each separately meet the criteria for
          expiry.
          <p>
<tag><tt>   unmerge bugnumber</tt>
<item>
          Disconnects a bug report from any other reports with which it
          may have been merged. If the report listed is merged with
          several others then they are all left merged with each other;
          only their associations with the bug explicitly named are
          removed.
          <p>
          If many bug reports are merged and you wish to split them into
          two separate groups of merged reports you must unmerge each
          report in one of the new groups separately and then merge them
          into the required new group.
          <p>
          You can only unmerge one report with each unmerge command; if
          you want to disconnect more than one bug simply include several
          unmerge commands in your message.
</taglist>
<p>
<sect>Summary of available options
<p>
<sect1>Synopsis of commands available at `request@bugs.debian.org'
<p>
<list>
<item><tt>send bugnumber</tt>
<item><tt>send-detail bugnumber</tt>
<item><tt>index [full]</tt>
<item><tt>index-summary by-package</tt>
<item><tt>index-summary by-number</tt>
<item><tt>index-maint</tt>
<item><tt>index maint maintainer-substring</tt>
<item><tt>send-unmatched [this|0]</tt>
<item><tt>send-unmatched last|-1</tt>
<item><tt>send-unmatched old|-2</tt>
<item><tt>getinfo filename</tt> (see below)
<item><tt>help</tt>
<item><tt>refcard</tt>
<item><tt>quit|stop|thank...|--...</tt>
<item><tt>#...</tt> _(comment)_
<item><tt>debug level</tt>
</list>
<p>       
<sect1>List of info files for `getinfo'
<p>
<list
<item><tt>maintainers</tt>
<item><tt>override.stable</tt>
<item><tt>override.development</tt>
<item><tt>override.contrib</tt>
<item><tt>override.non-free</tt>
<item><tt>override.experimental</tt>
<item><tt>override.codeword</tt>
<item><tt>pseudo-packages.description</tt>
<item><tt>pseudo-packages.maintainers</tt>
</list>
<p>       
<sect1>Synopsis of extra commands available at control mailserver
<p>
<list>
<item><tt>close bugnumber</tt> (you must separately tell originator why)
<item><tt>reassign bugnumber package</tt>
<item><tt>reopen bugnumber [originator-address|=]</tt>
<item><tt>forwarded bugnumber address</tt>
<item><tt>notforwarded bugnumber</tt>
<item><tt>retitle bugnumber new-title</tt>
<item><tt>merge bugnumber bugnumber ...</tt>
<item><tt>unmerge bugnumber</tt>
</list>
<p>       

<chapt>Additional features of the Bug Tracking System
<p>
	<sect>More-or-less obsolete subject-scanning feature
	  <p>  

	    Messages that arrive at submit or bugs whose Subject
	    starts <tt>Bug#nnn</tt> will be treated as having been
	    sent to <tt>nnn@bugs</tt>.  This is both for backwards
	    compatibility with mail forwarded from the old addresses,
	    and to catch followup mail sent to submit by mistake (for
	    example, by using reply to all recipients).

	  <p>   

	    A similar scheme operates for `maintonly,' `done,'
	    `quiet,' and `forwarded,' which treat mail arriving with a
	    `Subject' tag as having been sent to the corresponding
	    <tt>nnn-whatever@bugs</tt> address.

	  <p>   

	    Messages arriving at plain forwarded and done--i.e., with
	    no bug report number in the address--and without a bug
	    number in the Subject will be filed under `junk' and kept
	    for a few weeks, but otherwise ignored.

	  <p>   

	<sect>Future plans
	  <p>

	    At some point the `Package:' secondary header field may
	    become mandatory--at the moment omitting it just produces
	    a warning message.

	  <p>   

	<sect>Obsolete `X-Debian-PR: quiet' feature

	  <p>

	    It used to be possible to prevent the bug tracking system
	    from forwarding anywhere messages it received at
	    <tt>debian-bugs</tt>, by putting an <tt>X-Debian-PR:
	    quiet</tt> line in the actual mail header.

	  <p>   

	    This header line is now ignored. Instead, send your
	    message to <tt>quiet</tt> or <tt>nnn-quiet</tt> (or
	    maintonly or <tt>nnn-maintonly</tt>).

	  <p>


</book>
