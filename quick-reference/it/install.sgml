<!-- CVS revision of this document "$Revision: 1.13 $"  -->
<!-- CVS revision of original english document "1.48"  -->
<chapt id="install">Installazione di &debian;
<p>
La documentazione ufficiale sull'installazione di Debian è localizzata presso
<url id="&stable-info;"> e
<url id="&stable-install;">.
<p>
Per le versioni in fase di sviluppo è localizzata presso
<url id="&testing-info;" > e
<url id="&testing-install;">.
<p>
Sebbene "&book-title;" data dai giorni del rilascio della distribuzione potato,
gran parte del suo contenuto è indirizzato all'installazione di una &newdebian;.

<sect>Installazione di Linux
<p>
Nell'ottica di ridurre al minimo i rischi connessi con l'uso dei
pacchetti da testing ed unstable, è buona pratica avere un sistema con
un boot alternativo, in un sistema piccolo e stabile.

<sect1>Le basi della compatibilità hardware
<p>
Linux è compatibile con la maggior parte dei componenti per PC
esistenti. Può essere installato praticamente in ogni
configurazione. Per quanto mi riguarda, l'installazione è stata
semplice come per Window$ 95/98/Me. La lista di componenti compatibili
cresce di giorno in giorno.
<p>
Se avete un laptop, andate su:
<url id="http://www.linux-laptop.net/" name="Linux on Laptops">
per controllare la situazione compatibilità.
<p>
La mia raccomandazione per i componenti di un desktop è, invece,
"Siate conservativi."
<list>
<item>SCSI invece di IDE per il lavoro, IDE/ATAPI HD per uso privato.
<item>IDE/ATAPI CD-ROM (o CD-RW).
<item>PCI invece di ISA. In particolare per le NIC.
<item>Usate NIC economiche.  Tulip per PCI, NE2000 per ISA sono più che buone.
<item>Evitare PCMCIA (notebook) se siete alla prima installazione.
<item>Evitate le tastiere, mouse, ecc. USB, se non volete problemi.
</list>
Per macchine lente, bypassarne il disco rigido ed interfacciarle con
macchine più veloci per eseguire l'installazione di Linux può essere
una buona idea.
</sect1>

<sect1>Definire i componenti del PC --- il chipset
<p>
Durante l'installazione vi verranno richieste informazioni
sull'hardware o sui chipset, informazioni non sempre facili da
reperire. Ecco i miei consigli:
<enumlist>
  <item>Aprite il PC e guardate dentro. 
  <item>Scrivete i numeri presenti sui grossi chip, sulle schede
    grafiche, sulle schede di rete, sui chip situati vicino alle porte
    seriali ed alle porte IDE.
  <item>Scrivete i nomi scritti sul dorso delle schede PCI ed ISA.
</enumlist>
</sect1>

<sect1>Definire i componenti del PC --- &debian;
<p>
Dare i comandi seguenti all'interno di un sistema Linux già
installato, fornisce qualche idea sull'hardware presente e sulla sua
configurazione.
<example>
$ /sbin/lspci -v |less
$ less /proc/pci
$ less /proc/interrupts
$ less /proc/ioports
</example>
</sect1>

<sect1>Definire i componenti del PC --- altri S.O.
<p>
Una ulteriore fonte di informazione è rappresentata dagli altri
sistemi operativi.
<p>
Installate una distribuzione di Linux commerciale. I sistemi di
riconoscimento dell'hardware tendono ad essere migliori della
Debian. E' una cosa che potrebbe cambiare con l'arrivo di woody.
<p>
Installate Windows.  La configurazione attuale del PC può essere
ottenuta cliccando con il pulsante destro del mouse su "Risorse del
Computer" e poi "Proprietà", ottenendo informazioni tipo IRQ,
indirizzi di porta I/O, DMA. Alcune vecchie schede ISA potrebbero aver
bisogno di essere configurate sotto DOS, ed utilizzate di conseguenza.
</sect1>

<sect1>Il mito Lilo
<p>
Lilo è limitato ai primi 1024 cilindri. --- SBAGLIATO !
<p>
Il nuovo lilo, usato nella Debian potato ha il supporto lba32. Se il
BIOS o la scheda madre sono nuovi e possono supportare lba32, lilo
dovrebbe essere in grado di caricarsi oltre il vecchio limite dei 1024
cilindri.
<p>
Se avete tenuto il vostro vecchio lilo.conf, vi basterà aggiungere una
riga con "lba32" da qualche parte vicino all'inizio del file.
</sect1>

<sect1 id="bootfloppy">Scegliere i boot floppies
<p>
Il set di dischi denominato IDEPCI è il migliore se state installando
su un desktop. Il kernel IDEPCI sul dischetto boot omonimo abilita le
schede di rete PCI, permettendovi di ottenere praticamente tutto dalla
rete. Servono solo due floppy disk (boot e root).
<p>
Per sistemi particolari, potete creare un disco di salvataggio fatto
apposta, sostituendo l'immagine del kernel denominata "linux" sul
disco di salvataggio Debian con un'altra immagine compilata apposta
per la suddetta macchina. I dettagli dell'operazione li trovate sul
file readme.txt, sul dischetto di salvataggio. Il floppy è formattato
con il filesystem MSDOS, per cui potete utilizzare qualunque sistema
per leggerlo e modificarlo. Ciò dovrebbe rendere la vita più semplice a
coloro con particolari schede di rete, ecc..
<p>
Per schede di rete PCMCIA, configuratele con il setup specifico per
PCMCIA e non con il setup generico di rete.
</sect1>

<sect1>Installazione
<p>
Le note di rilascio ufficiali per l'aggiornamento sono reperibili presso
<url id="&stable-release;">
e
<url id="&testing-release;"> (in fase di completamento).
<p>
Alcuni consigli veloci per installare potato:
<enumlist>
<item> Preparate i dischetti rescue/root(/driver). (IDEPCI per il desktop)
<item> Fate il boot con i dischetti rescue e root.
<item> Fdisk/fsck/mount swap, root, tmp, var, home, usr, ecc.. (nessun supporto 2.0)
<item> Installate il S.O.. (Se avete IDEPCI, installabile via rete)
<item> Se utilizzate il floppy con il kernel standard, installate ora i drivers.
<item> Configurate i drivers. (Non ci sono opzioni se IDE)
<item> Installate il sistema base dalla rete o dal floppy. (base2_2.tgz) 
[WOODY: potrebbe non essere qui]
<item> Configurate il sistema base.
<item> Non installate lilo nel MBR, ed utilizzate un un mbr multi-boot.
<item> Fate il reboot. (non prendetevi la briga di creare un disco boot)
<item> Sì MD5, sì shadow, configurate anche gli user account
<item> Installate le funzioni avanzate (dselect **)
<item> Scegliete il minimo indispensabile ai vostri bisogni. Evitate emacs, 
nvi, tex, telnet, talk(d), includete mc, vim, kernel-image-2.2.18pre21 
(kernel completo se avete usato un disco IDE per l'installazione), ...
<item> Installate (scaricate tutto...)
<item> Rispondete si (= y) a tutte le domande di configurazione 
(sostituisce l'attuale)
<item> exim: scegliete 2 se siete dietro un firewall, 1 per una macchina 
per Internet.
</enumlist>
Per ulteriori informazioni su dselect, vedere <ref id="dselect">.
</sect1>

<sect1>Quale host ed IP usare per LAN
<p>
Esempio di configurazione di una LAN (C subnet: 192.168.1.0/24):
<example>
Internet
   |
   +--- Un ISP esterno fornisce il servizio POP (raggiunto da fetchmail)
   | 
  Un punto di accesso dell'ISP fornisce i servizi DHCP e SMTP
   |                     :
  Modem              (Dial-up)
   |                     :
Porta esterna della macchina gateway della LAN: eth0 (IP dato dal DHCP dell'ISP)
 usa un vecchio notebook (IBM Thinkpad, 486 DX2 50 MHz, 20 MB RAM)
 gira Linux con kernel 2.4 e ext3 fs.
 gira il pacchetto "ipmasq" (con patch più sicuro, NAT e firewall)
 gira il pacchetto "dhcp-client" configurato per eth0 (scavalca le impostazioni DNS)
 gira il pacchetto "dhcp" configurato per eth1
 gira "exim" come smarthost (modo 2)
 gira "fetchmail" con un intervallo lungo (fall back)
 gira "bind" come cache name server per Internet dalla LAN
            come name server autoritativo per il dominio LAN dalla LAN
 gira "ssh" sulle porte 22 e 8080 (connessione da ovunque)
 gira "squid" come cache server per l'archivio Debian (per APT)
Porta interna della macchina gateway della LAN: eth1 (IP = 192.168.1.1, fisso)
                         |
         +--- LAN Switch (10 base T) ---+
         |                              |
Alcuni clienti IP fissi sulla LAN     Alcuni clienti DHCP sulla LAN
(IP = 192.168.1.2-127, fisso)    (IP = 192.168.1.128-200, dinamico)
</example>
Vedere <ref id="gateway"> per i dettagli sulla configurazione del gateway server.
</sect1>

<sect1>Account utenti
<p>
Per avere lo stesso aspetto di "famiglia" tra le varie macchine, i
primi accounts che imposto sono sempre gli stessi.
<p>
Il primo account che creo è sempre uno del tipo "admin"
(uid=1000). Tutta la posta per il root viene reindirizzata lì. Questo
account è aggiunto al gruppo staff, al quale viene data una certa
quota di privilegi di root tramite il comando sudo. Vedere <ref
id="newuser"> per i dettagli.
</sect1>

<sect1>Partizionare il disco rigido ed impostare l'NFS
<p>
Per limitare i danni in caso di crash del sistema, preferisco tenere
partizioni diverse per directory diverse. Per esempio,
<example>
/          == (/ + /boot + /bin + /sbin)
           == 50MB+
/tmp       == 100MB+
/var       == 100MB+
/home      == 100MB+
/usr       == 700MB+ con X
/usr/local == 100MB
</example>
<p>
Le dimensioni della directory <tt>/usr</tt> dipende strettamente dal
tipo di applicazione X-window. <tt>/usr</tt> può essere di soli 300MB
per la sola console, di 2-3 GB se si vogliono installare varie
applicazioni di Gnome.

Quando <file>/usr</file> diventa troppo grande, la cura più efficace è spostare 
<file>/usr/share/</file> in una partizione diversa. Con i nuovi kernel 2.4 
pre-impacchettati, <file>/</file> può avere bisogno di più di 200MB di spazio.
<p>
Per esempio, la configurazione attuale della mia macchina che funge da
Internet gateway, è la seguente (output del comando <tt>df -h</tt>):
<example>
Filesystem Size Used Avail Use&percnt; Mounted on /dev/hda3 300M 106M 179M 38&percnt; /
/dev/hda7 100M 12M 82M 13&percnt; /home /dev/hda8 596M 53M 513M 10&percnt; /var /dev/hda6
100M 834k 94M 1&percnt; /var/lib/cvs /dev/hda9 596M 222M 343M 40&percnt; /usr /dev/hda10
596M 130M 436M 23&percnt; /var/cache/apt/archives /dev/hda11 1.5G 204M 1.2G 14&percnt;
/var/spool/squid
</example>
Le grosse dimensioni di /var/spool/squid sono per la funzione di proxy e per
lo scarico dei pacchetti.
<p>
Per dare un'idea, il seguente è l'output di <tt>fdisk -l</tt>.
<example>
# fdisk -l /dev/hda # commenti

/dev/hda1 1 41 309928+ 6 FAT16 # DOS /dev/hda2 42 84 325080 83 Linux # (non
utilizzata) /dev/hda3 * 85 126 317520 83 Linux # Main /dev/hda4 127 629
3802680 5 Extended /dev/hda5 127 143 128488+ 82 Linux swap /dev/hda6 144 157
105808+ 83 Linux /dev/hda7 158 171 105808+ 83 Linux /dev/hda8 172 253 619888+
83 Linux /dev/hda9 254 335 619888+ 83 Linux /dev/hda10 336 417 619888+ 83
Linux /dev/hda11 418 629 1602688+ 83 Linux
</example>
Ci sono alcune partizioni inutilizzate. Queste servono per installare una
seconda distribuzione di Linux, o come spazio per espandere qualche directory
in crescita.
<p>
Se avete più di due dischi, create le partizioni di swap su ognuno, per
guadagnare il massimo delle prestazioni.
<p>
Montare appropriatamente le partizioni avviene mediante il seguente
<tt>/etc/fstab</tt>.
<example>

# /etc/fstab: static file system information.  file system mount point type
#options dump pass /dev/hda3 / ext2 defaults,errors=remount-ro 0 1 /dev/hda5
#none swap sw 0 0 proc /proc proc defaults 0 0 /dev/fd0 /floppy auto
#defaults,user,noauto 0 0 /dev/cdrom /cdrom iso9660 defaults,ro,user,noauto 0
#0 mantenete le partizioni separate /dev/hda7 /home ext2 rw 0 2 /dev/hda8 /var
#ext2 rw 0 2 /dev/hda6 /var/lib/cvs ext2 rw 0 2 /dev/hda9 /usr ext2 rw 0 2
#/dev/hda10 /var/cache/apt/archives ext2 rw 0 2

# una partizione molto grande come proxy cache /dev/hda11 /var/spool/squid
ext2 rw 0 2

# DOS bootabile di backup /dev/hda1 /mnt/dos vfat rw,noauto 0 0 # Linux
bootabile di backup (non ancora fatto) /dev/hda2 /mnt/linux ext2 rw,noauto 0 0
# # nfs mounts mickey:/ /mnt/mickey nfs ro,noauto,intr 0 0 goofy:/ /mnt/goofy
nfs ro,noauto,intr 0 0 # minnie:/ /mnt/minnie smbfs
ro,soft,intr,credentials={filename} 0 2
</example>
Io uso qui le opzioni "noauto,intr" combinate con quella di default "hard" per
nfs. In tal modo, un processo che si blocca in seguito alla perdita di
connessione può essere recuperato mediante control-C.
<p>
Usare "rw,auto,soft,intr" per macchine con windows connesse tramite samba
(smbfs), può essere una buona idea. (FIXME)
<p>
Controllare autofs (FIXME)
<p>
Per i floppy, utilizzare "noauto,rw,sync,user,exec" previene la corruzione dei
file in caso di rimozione accidentale del disco prima di averlo smontato, però
rallenta il processo di scrittura.
<p>
Il server esterno nfs (goofy) risiede dietro il firewall (gateway). Dato che
sono l'unico ad usarla, ho delle regole di sicurezza sulla LAN molto
allentate. Per abilitare l'accesso nfs, il server nfs necessita di aggiungere
<tt>/etc/exports</tt> come segue:
<example>
# /etc/exports: lista di controllo degli accessi per filesystems che possono
essere esportati ai clienti NFS. Vedere exports(5).  / (rw,no_root_squash)
</example>
Ciò è richiesto per attivare il server nfs, in aggiunta all'installazione e ad
attivazione del server/client nfs.
<p>
Per semplicità, in genere creo un partizione singola di circa 2GB per
installazioni sperimentali e/o secondarie di linux. Opzionalmente condivido le
partizioni di swap e /tmp. Per questi scopi lo schema a partizioni multiple è
eccessivo. Se vi serve un semplice sistema a console, bastano 500MB.
</sect1>

<sect1>Linee guida per la memoria DRAM
<p>
Di seguito presento alcune (grandi) linee guida per le DRAM.
<example>
  4 MB: Il minimo necessario a far funzionale il kernel di Linux.  16 MB: Il
 minimo per un sistema con console.  32 MB: Il minimo per un semplice sistema
 X.  64 MB: Il minimo per X con GNOME/KDE.  128 MB: Il giusto per X con
 GNOME/KDE.  256+MB: Perché no? se ve le potete permettere. Le DRAM sono (ora)
 economiche.
</example>
L'opzione di boot mem=4m (o lilo append="mem=4m") vi mostra come il sistema si
comporta con soli 4MB di memoria installati. Il parametro di boot per lilo è
necessario per sistemi con vecchi BIOS e più di 64MB di memoria.
</sect1>

<sect1>Lo spazio di swap
<p>
Uso la formula seguente:
<example>
Swap totale = min(1x-2x RAM installata, 128 MB - 1 GB) Ogni swap &lt; 128 MB
Tenetele su dischi diversi.  Se ne ho la necessità, nella parte centrale del
disco rigido.
</example>
Anche se non ne avete mai bisogno, un pò di spazio swap (128MB) è comunque
desiderabile, in modo che un programma che ha un leak di memoria rallenti
progressivamente il sistema prima di bloccarlo definitivamente.
</sect1>
</sect>

<sect>Configurare Bash
<p>
Modifico gli script di inizio della shell a mio piacimento:
<example>
/etc/bash.bashrc Sostituire con copia privata /etc/profile Mantenere la copia
della distribuzione ( \w -&gt; \W) /etc/skel/.bashrc Sostituire con copia
privata /etc/skel/.profile Sostituire con copia privata
/etc/skel/.bash_profile Sostituire con copia privata ~/.bashrc Sostituire con
copia privata per tutti gli accounts ~/.profile Sostituire con copia privata
per tutti gli accounts ~/.bash_profile Sostituire con copia privata per tutti
gli accounts
</example>
<url id="examples/" name="Per i dettagli vedere i miei esempi."> Mi piacciono
i sistemi trasparenti, così imposto l'umask 002 o 022.
<p>
PATH viene impostato dai seguenti files di configurazione, in questo ordine.
<example>
/etc/login.defs - prima del PATH impostato per la shell /etc/profile ( può
chiamare /etc/bash.bashrc) ~/.bash_profile ( può chiamare ~/.bashrc)
</example>
</sect>

<sect>Configurare il mouse
<p>
In caso di un mouse PS/2 con scheda madre ATX, il flusso del segnale deve
essere:
<example>
mouse -&gt; /dev/psaux -&gt; gpm -&gt; /dev/gpmdata = /dev/mouse -&gt; X
</example>
Ciò permette alla tastiera/mouse di essere staccati e reinizializzati
lanciando nuovamente gpm alla riconnessione. X rimane funzionante.
<p>
Per il mouse PS2 Logitech a tre pulsanti, la combinazione delle configurazioni
dovrà essere:
<example>
/etc/gpm.conf /etc/X11/X86Config o X86Config4
=============================================================
device=/dev/psaux Section "Pointer" responsiveness= Protocol "IntelliMouse"
repeat_type=ms3 Device "/dev/gpmdata" type=ps2 append=""
--------------------------------------------------------------
device=/dev/psaux Section "Pointer" responsiveness= Protocol "IntelliMouse"
repeat_type=raw Device "/dev/gpmdata" type=ps2 append=""
</example>
Se si usa un normale mouse PS2 a due pulsanti, impostate il protocollo di X a
"Microsoft" ed abilitate "Emulate3Buttons".  Per mouse con lo scrolling,
potete dare ad X il vero protocollo "IMPS/2", utilizzando il secondo esempio.
Create un softlink /dev/gpmdata --&gt; /dev/mouse per accontentare alcune
utilità di configurazione.
<url id="examples/" name="Per i dettagli vedere i miei esempi.">
<p>
Per alcuni nuovi notebook Toshiba ultrapiatti: Attivare gpm prima di PCMCIA ngllo
script di inizializzazione del System-V. Ciò evita che gpm si pianti. Strano,
ma vero.
</sect>

<sect>Configurare NFS
<p>
Impostate NFS tramite /etc/exports.
<example>
# echo "/ *.domainname-for-lan-hosts(rw,no_root_squash,nohide)" \ &gt;&gt;
        /etc/exports
</example>
<url id="examples/" name="Per i dettagli vedere i miei esempi.">
</sect>

<sect>Configurare Samba
<p>
Impostare Samba in modalità "share" è molto più semplice, dato che crea un
drive di share sul modello WfW. E' comunque molto meglio l'impostazione in
modalità "user".
<p>
Samba può essere configurato con <tt>sambaconfig</tt> o vi:
<example>
$su -c "sambaconfig" $su -c "vi /etc/samba/smb.conf"
</example>
<url id="examples/" name="Per i dettagli vedere i miei esempi.">
<p>
L'aggiunta di un nuovo utente al file smbpasswd può essere fatta tramite
<tt>smbpasswd</tt>:
<example>
$su -c "smbpasswd -a nomeutente"
</example>
Per la migliore compatibilità, usate password criptate.
<p>
Livello OS significa quanto segue, maggiore il numero, più alta la priorità
come server.
<example>
0: Samba con attitudini molto lasse 1: Wfw 3.1, Win95, Win98, Win/me?  16: Win
NT WS 3.51 17: Win NT WS 4.0 32: Win NT SVR 3.51 33: Win NT SVR 4.0 255: Samba
con poteri estesi
</example>
La directory condivisa deve essere leggibile ed eseguibile da un determinato
gruppo, e l'utente deve far parte di detto gruppo.
</sect>

<sect id="lprlpd">Configurare la stampante
<p>
Installate LPRng al posto dello standard lpr.
<example>
# apt-get install lprng enscript gs
</example>
Allo stato attuale (Debian potato2.2r2), printtool e lprngtool non sono in
potato.  Scaricatene uno da woody/binary-all/admin ed installatelo con "dpkg
-i".
<p>
Se una macchina con window$ deve stampare tramite samba, l'accesso può
avvenire senza il filtro GS utilizzando il proprio windriver, oppure con il
filtro tramite drivers PS.
</sect>

<sect>Altri consigli di configurazione per l'host

<sect1>Installate pochi altri pacchetti ed attenetevi alla configurazione di
base
<p>
Vedere <ref id="dselect">. In genere elimino (_): TEX, nvi, ae, lynx, ed
 aggiungo (+): vim, ssh, lynx-ssl, mc.
<p>
Modificate /etc/inittab con CTRL-DEL-ALT=halt per un facile shutdown.
</sect1>

<sect1>Moduli
<p>
Impostateli durante la configurazione dei drivers durante l'installazione.  La
lista dei moduli è in /etc/modules.  Per un controllo manuale, io utilizzo
anche lsmod e depmod.
<p>
Aggiungo anche poche linee in /etc/modules per gestire l'ip-masquerading (ftp
ecc.) per i kernels 2.4.  <url id="examples/" name="Per i dettagli vedere i miei esempi.">

</sect1>

<sect1>Impostazione base del CD-RW
<p>
Modificate i files seguenti:
<example>
/etc/lilo.conf  (append="hdc=ide-scsi", lanciate lilo per attivarlo)
/dev/cdrom      (softlink # cd /dev; ln -sf scd0 cdrom)
/etc/modules    (aggiungere "ide-scsi" and "sg". "sr" a seguire, se 
                 necessario.)
</example>
Vedete <ref id="cdrw"> per i dettagli.
</sect1>

<sect1 id="apm">Grosse memorie e spegnimento automatico
<p>
Modificate /etc/lilo.conf come segue per impostare i parametri al boot
prompt in caso di grosse memorie (per i kernel 2.2) e per lo
spegnimento automatico (per apm):
<example>
append="mem=128M apm=on apm=power-off"
</example>
Lanciate lilo per installare queste nuove impostazioni.
"apm=power-off" è necessario per il SMP-kernel.  Si può fare lo stesso
direttamente al boot prompt. Vedere <ref id="bootprompt">.
<p>
Se apm è compilato come modulo, come avviene automaticamente nei
kernels Debian 2.4, lanciate "# insmod apm power_off=1" dopo il boot,
oppure impostate /etc/modules con:
<example>
# echo "apm power_off=1" &gt;&gt;/etc/modules
</example>
<p>
In alternativa, compilare il supporto ACPI raggiunge lo stesso scopo
con i kernels più nuovi, e sembra essere più "gentile" con SMP
(richiede l'ultimo Mobo). I kernels 2.4 con l'ultimo Mobo dovrebbero
riconoscere le grosse memorie correttemente.
<example>
CONFIG_PM=y
CONFIG_ACPI=y
...
CONFIG_ACPI_BUSMGR=m
CONFIG_ACPI_SYS=m
</example>
ed aggiungete le seguenti righe a /etc/modules nell'ordine.
<example>
ospm_busmgr
ospm_system
</example>
Oppure ricompilate il kernel con tutte le opzioni precedenti su "y". 
Nel caso dell'ACPI, non serve alcun parametro di boot.
</sect1>

<sect1>Altre modifiche di configurazione in /etc/*
<p>
Aggiunti i files seguenti
/etc/cron.deny (mancante, copiato /etc/at.deny)
</sect1>

</sect>

</chapt>



