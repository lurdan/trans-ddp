<!-- CVS revision of this document "$Revision: 1.1 $"  -->
<!-- CVS revision of original english document "1.6"  -->
<!--Line width ruler (ruler uses 78 characters)     34567890123456789012345-->
<chapt id="tutorial">GNU/Linux tutorials
<p>
This section provides a basic orientation to the Linux world for the real
newbie. If you have been using Linux for a while, use it as a reality check.

<sect>Information sources
<p>
<example>
# apt-get install doc-debian doc-linux-text apt-howto info \
                  man-db manpages less mc
</example>
Then look into the <url id="http://www.debian.org/doc/ddp"
name="Debian Documentation Project (DDP)"> which has the most authoritative
references for Debian.  Many of these documents are usually installed in
/usr/share/doc/.  Also look into /usr/share/doc-base/, which provides pointers
to the documents on the system.  Add 
"export CDPATH=.:/usr/share/doc:/usr/src/local" to ~/.bash_profile for 
easier access to documentation directories.
<p>
The <url id="http://www.linuxdoc.org/" name="Linux Documentation Project
(LDP)"> has the most authoritative general Linux references.  LDP contents are
usually installed in /usr/share/doc/HOWTO/.
<p>
Navigate through documents on local and remote ftp sites using F9 in Midnight
Commander (see <ref id="mc">). 
</sect>

<sect>Linux console

<sect1 id="login">Login
<p>
In an ordinary Linux system, there are 6 independent pseudo-terminals.  Switch
from one to another by pressing the <tt>Left-Alt</tt> key and <tt>F1</tt> -
<tt>F6</tt> keys simultaneously.  Each pseudo-terminal allows independent
login to accounts. The multi-user environment is a great Unix feature, and
very addictive.
<p>
It is considered a good Unix habit to login to a regular user account for most
purposes.  I have to admit I used to use the superuser account (root) more
than needed just because of its ease and my sloppiness.
<p>
Now I usually use a regular account with the commands "sudo", "super" or "su
-c" to gain limited root access.  
</sect1>

<sect1 id="newuser">Add user account
<p>
After system installation, I usually add a regular user account.
If the username is "penguin",
<example>
# adduser penguin
</example>
will create it.
<p>
I use the "vigr" command to edit /etc/group as follows:
<example>
src:x:40:admin, debian, ...
staff:x:50:admin
...
</example>
<!-- Osamu: maybe add a sentence to explain the function of these groups, for
the newbie? Or even the oldbie who doesn't use them? 

I think there was long discussion on this matter in debian-devel ML.
Some one famous is making document.  I do not know where is it.
I use src for CVS  but it owns /usr/src used for kernel compile.
staff is used for /usr/home so good for maintaining user accounts?
-->
<p>
Check out "adduser", "addgroup", "vipw", "vipw -s", "vigr", and
"vigr -s" for configuring users and groups properly.
</sect1>

<sect1>How to shut down
<p>
Just like any modern OS where files are cached in memory, Linux needs
a proper shutdown procedure before power can safely be turned off.
Here is the command in multi-user mode:
<example>
# shutdown -h now
</example>
Here is the command in single-user mode:
<example>
# poweroff -i -f
</example>
Wait until the system displays "System halted" then shut off power.
If apm is turned on by BIOS and Linux, the system will power down by itself.
See <ref id="apm"> for details.
</sect1>

<sect1>Command-line editing
<p>
The default shell, <tt>bash</tt>, has history-editing capability.
Just use the up-arrow key to enter the history and then use cursor keys as you
would expect.  Other important keystrokes to remember:
<example>
Ctrl-C:                  Terminate program
Ctrl-D:                  Terminate input
Ctrl-S:                  Halt output to screen
Ctrl-Q:                  Reactivate output to screen
Ctrl-Alt-Del:            Reboot/halt system (see /etc/inittab)
Lt-click-and-drag-mouse: Select and copy to the clipboard (gpm)
Ctrl-click-mouse:        Paste the clipboard to the cursor (gpm)
</example>
<p>
On a normal Linux console, only the left-hand <tt>Ctrl</tt> and <tt>Alt</tt>
keys work as expected.
</sect1>

<sect1>Very basic commands to remember
<p>
The following are very basic Unix commands:
<example>
ls, ls -al, ls -d, pwd, cd, cd ~user, cd -, cat /etc/passwd, less,
bg, fg, kill, killall, uname -a, type commandname, sync, netstat,
ping, traceroute, top, vi, ps aux, tar, zcat, grep, ifconfig, ...
</example>
<!-- Osamu: I removed a couple redundant commands and added a bit of
info below. -->
<p>
Check their meaning by entering the commands at a command prompt or by
entering "man " or "info " plus the command name. Many Linux commands will
display brief help information if you invoke them in one of the following
ways:
<example>
$ commandname --help
$ commandname -h
</example>
"whatis <em>commandname</em>" gives a one-line summary of any command on
the system for which there is a manual entry.
</sect1>

<sect1>X Window System
<p>
To start the X Window System from the console:
<!-- Osamu: formal name here per request in "man 7 X" manpage -->
<example>
# exec startx
</example>
Right-clicking the root window will bring up menu selections.
</sect1>

<sect1>More key moves
<p>
Some important keystrokes to remember for the Linux console:
<example>
Alt-F1 thru F6:       Switch to other pseudo-terminals
Ctrl-Alt-F1 thru F6:  Switch to other pseudo-terminals
                          (from an X-window, DOSEMU, etc.)
Alt-F7:               Switch back to X-window
Ctrl-Alt-minus:       Change screen resolution in X-window
Ctrl-Alt-plus:        Change screen resolution opposite way in X-window
Ctrl-Alt-Backspace:   Terminate X-windows
Alt-X, Alt-C, Alt-V:  Usual Windows/Mac Cut, Copy, Paste key combinations
                      with Ctrl- keys are replaced by these Alt- keys in
                      some programs such as Netscape Composer.
</example>
</sect1>
</sect>

<sect id="mc">Midnight Commander (MC)
<p>
Midnight Commander (MC) is a GNU "Swiss army knife" for the Linux console and
other terminal environments.  

<sect1>Install MC
<p>
<example>
# apt-get install mc
</example>
Then add the following function to ~/.bashrc (or to /etc/bash.bashrc, called 
from .bashrc).
<example>
mc ()
{
  mkdir -p ~/.mc/tmp 2&gt; /dev/null
  chmod 700 ~/.mc/tmp
  MC=~/.mc/tmp/mc-$$
  /usr/bin/mc -P "$@" &gt; "$MC"
  cd "$(cat $MC)"
  rm -f "$MC"
  unset MC;
}
</example>
This enables MC to change working directory upon exit.
<p>
If one is in a terminal, like kon and Kterm for Japanese, which utilizes
certain graphics characters, adding "-a" to the mc's command line may
help prevent problems.
</sect1>

<sect1>Start MC
<p>
<example>
$ mc
</example>
MC takes care of all file operations through its menu, requiring minimal 
user effort.
</sect1>

<sect1>File manager
<p>
The default is 2 directory panels containing file lists.  Another useful
mode is to set the right window to "information" to see file access privilege
information, etc. Following are some essential keystrokes. With the gpm daemon
running, one can use a mouse, too.  (Make sure to press the shift key to
obtain the normal behavior of cut and paste in MC.)
<list>
<item>F1: Help menu
<item>F3: Internal file viewer
<item>F4: Internal editor
<item>F9:  Activate pulldown menu
<item>F10: Exit Midnight Commander
<item>Tab: Move between 2 windows
<item>Insert: Mark file for a multiple-file operation such as copy
<item>Del: Delete file (Be careful&mdash;set MC to safe delete mode.)
<item>Cursor keys: Self-explanatory
</list>
</sect1>

<sect1>Command-line tricks:
<p>
<list>
<item>Any 'cd' command will change the directory shown on the selected screen.
<item>Control-Enter or Alt-Enter will copy a filename to the command line. Use
this with the 'cp' or 'mv' command together with command-line editing.
<item>Alt-Tab will show shell filename expansion choices.
<item>One can specify the starting directory for both windows as arguments to
MC; for example, "mc /etc /root".
<item>Esc + numberkey == Fn (i.e., Esc + 1 = F1, etc.; Esc + 0 = F10)
<item>Esc key       == Alt-key (= Meta, M-); i.e., type Esc + c for Alt-c
</list>
</sect1>

<sect1>Editor
<p>
The internal editor has an interesting cut-and-paste scheme. Pressing F3 marks
the start of a selection, a second F3 marks the end of selection and
highlights the selection. Then you can move your cursor. If you press F6, the
selected area will be moved to the cursor location. If you press F5, the
selected area will be copied and inserted at the cursor location.  F2 will
save the file. F10 will get you out. Most cursor keys work intuitively.
<p>
This editor can be directly started on a file:
<example>
$ mc -e filename_to_edit
$ mcedit filename_to_edit
</example>
<p>
This is not a multi-window editor but one can use multiple Linux consoles
to achieve the same effect. To copy between windows, use Alt-Fn-keys to switch
virtual consoles and use "File-&gt;Insert file" or "File-&gt;Copy to file"
to move a portion of a file to another file.
<!-- Osamu: you could try "&rarr;" instead of "-&gt;" to get a right arrow
above. It's valid SGML, but I don't know if all browsers support it. 

For this version 1, let us keep it as is for consistency.  
I will think about it for version 2,  Thanks. 
-->
<p>
This internal editor can be replaced with any external editor of choice.
<p>
Also, many programs use environment variables <tt>EDITOR</tt> or 
<tt>VISUAL</tt> to decide which editor to use.  If you are unconfortable
with vim, set these to "mcedit" by adding these lines to ~/.bashrc:
<example>
...
export EDITOR=mcedit
export VISUAL=mcedit
...
</example>
<p>
I do recommend setting these to vim if possible.  Getting used to 
vi(m) commands is the right thing to do, since they are always there in 
the Linux/Unix world.
</sect1>

<sect1>Viewer
<p>
Very smart viewer. This is a great tool for searching words in documents.  I
always use this for files in the /usr/share/doc directory. This is the fastest
way to browse through masses of Linux information. This viewer can be directly
started like so:
<example>
$ mc -v filename_to_view
</example>
(Note that some packages violate policy and still store their documents under
/usr/doc.)
</sect1>

<sect1>Auto start features
<p>
Press "Enter" on a file, and the appropriate program will
handle the content of the file. This is a very convenient MC feature.
<example>
executable:        Execute command
man, html file:    Pipe content to viewer software
tar, gz, rpm file: Browse its contents as if subdirectory
</example>
In order to allow these viewer/virtual file features to function, viewable
files should not be set as executable. Change their status using the chmod
command or via the MC file menu.
</sect1>

<sect1>FTP Virtual file system
<p>
MC can be used to access files over the Internet using FTP. Go to the menu
by pressing F9, then type "p" to activate the FTP virtual file system. Enter
a URL in the form "username:passwd@hostname.domainname", which will retrieve a
remote directory that appears like a local one.
</sect1>

</sect>


<sect>Further study
<p>
There are many good Unix entry-level references out there.  O'Reilly's books
are usually safe bets for good guidebooks in any field of computer topics. I
recommend <em>Unix Power Tools</em>, which is full of information.
<p>
<file>/usr/share/doc/HOWTO/en-txt/Tips-HOWTO.gz</file> 
(LDP) is another resource to check.
</sect>

</chapt>
