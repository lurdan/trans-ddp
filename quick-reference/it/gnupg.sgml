<!-- CVS revision of this document "$Revision: 1.9 $"  -->
<!-- CVS revision of original english document "1.11"  -->
<chapt id="gnupg">GnuPG
<p>
Per informazioni dettagliate, vedere
<file>/usr/share/doc/gnupg/README.gz</file>, oppure sfogliate <tt>man
gpg</tt>.

<sect>Installazione di GnuPG
<p>
Leggete il "GNU privacy handbook" (in woody, <package>gnupg-doc</package>).
<example>
# gpg --gen-key                         # genera una nuova chiave
# gpg --gen-revoke mio_user_ID          # genera una chiave di revoca 
per mio_user_ID
# host -l pgp.net | grep www|less       # cerca i pgp keyservers
</example>
Allo stato attuale buoni keyservers sono:
<example>
keyserver wwwkeys.eu.pgp.net
keyserver wwwkeys.pgp.net
</example>
Bisogna fare attenzione a non creare più di due sottochiavi,
altrimenti i keyservers su pgp.net corromperanno la vostra chiave. In
più, un solo keyserver può essere specificato in
<file>$HOME/.gnupg/options</file>
<p>
Sfortunatamente i seguenti keyservers non sono più funzionanti:
<example>
keyserver search.keyserver.net
keyserver pgp.ai.mit.edu
</example>

</sect>

<sect>Uso di GnuPG
<p>
Gestione dei file:
<example>
$ gpg  [options]  command  [args]
$ gpg {--armor|-a} {--sign|-s} file # firma un file in un file testo 
                                    # file.asc
$ gpg --clearsign file              # firma un file in chiaro
$ gpg --clearsign --not-dash-escaped patchfile  # firma un file senza 
                                                # patchfile
$ gpg --verify file                 # verifica un file firmato in chiaro
$ gpg -o file.sig {-b|--detach-sign} file    # crea una firma staccata
$ gpg --verify file.sig file        # verifica un file tramite file.sig
$ gpg -o crypt_file {--recipient|-r} nome {--encrypt|-e} file 
        # Criptatura mediante chiave pubblica destinata a                                   # "nome"
$ gpg -o crypt_file {--symmetric|-c} file # criptatura simmetrica
$ gpg -o file --decrypt crypt_file  # decrittatura
</example>
</sect>

<sect>Gestione di GnuPG
<p>
Gestione delle chiavi:
<example>
$ gpg --edit-key user_ID               # "help" per aiuto, interattivo
$ gpg -o file --exports                # esporta tutte le chiavi in un file 
$ gpg --imports file                   # importa tutte le chiavi da file
$ gpg --send-keys user_ID              # invia le chiavi dello user_ID specificato
                                       # al keyserver
$ gpg --recv-keys user_ID              # recupera la chiave dello user_ID dal
                                       # keyserver
$ gpg --list-keys user_ID              # elenca le chiavi dello user_ID
$ gpg --list-sigs user_ID              # elenca le firme dello user_ID
$ gpg --check-sigs user_ID             # verifica le firme dello user_ID
$ gpg --fingerprint user_ID            # verifica il fingerprint dello user_ID
$ gpg --list-sigs | grep '^sig' | grep '[User id not found]' \
  | awk '{print $2}' | sort -u | xargs gpg --recv-keys # prende le chiavi 
                                                       # sconosciute
  # aggiorna le chiavi per tutte le firme sconosciute.
</example>
Codice di confidenza:
<example>
-         Nessun codice assegnato / non ancora calcolato.
e         Il calcolo della confidenza è fallito.
q         Informazioni insufficienti per il calcolo.
n         Non confidare mai su detta chiave.
m         Confidenza parziale.
f         Confidenza totale.
u         Confidenza finale.
</example>
</sect>

<sect>Uso con Mutt
<p>
Aggiungete le righe seguenti a ~/muttrc per evitare che uno GnuPG troppo lento
venga lanciato automaticamente, ma solo quando necessario.
<example>
macro index S ":toggle pgp_verify_sig\n"
set pgp_verify_sig=no
</example>
</sect>

</chapt>
