<!-- CVS revision of this document "$Revision: 1.28 $"  -->
<chapt id="woody">Upgrading a distribution to <tt>testing</tt>

<![%f-ref;[
<p>
Official release notes for upgrading are located at
<url id="&stable-release;">
and
<url id="&testing-release;"> (work in progress).

<p>
The process for upgrading a system to <tt>testing/unstable</tt> flavors is: 
<list>
 <item> upgrade the APT system to the Woody version if your system is Potato, 
 since Potato's APT did not have the features described in the Woody
 <manref name="apt_preferences" section="5"> manpage.
 <item> modify your <file>/etc/apt/sources.list</file> and
 <file>/etc/apt/preferences</file> files, to include references to the
 "testing" section of the repositories you use. If you wish you can add
 references to the "unstable" section, too.
 <item> update your package lists, and
      install any packages that are now upgradeable.
</list> 
]]>


<sect id="woody-transition">Transition of APT to the Woody version
<p>
Network upgrade of the APT system and some core packages to the Woody versions 
can be done as follows after including <tt>stable</tt> sources 
in the <file>/etc/apt/sources.list</file> if you still run Potato.
<example>
# apt-get update
# apt-get install libc6 perl libdb2 debconf
# apt-get install apt apt-utils dselect dpkg
</example>


<sect id="testing-transition">Transition preparation (<tt>stable</tt> to <tt>testing</tt>)
<p>
Tracking the <tt>testing</tt> flavor of &debian; has a side effect of
providing very slow security fixes.  So be warned.
<p>
Network upgrade to <tt>testing</tt> can be done as follows (run the script 
<url id="&examples;" name="go-woody"> to do this in one command):
<p>
Empty the existing <file>sources.list</file> file:
<example>
# cd /etc/apt
# cp -f sources.list sources.old 
# :&gt;sources.list  
</example>
<p>
Get a clean list of repositories, for <tt>stable</tt>:
<example>
# cd /
# apt-setup noprobe 
    ... select repositories, accessed with HTTP or FTP methods
</example>
Add the <tt>testing</tt> section to this new list.
The <tt>deb-src</tt> lines are commented out.
<example>
# cd /etc/apt
# grep -e "^deb " sources.list  &gt;sources.deb
# grep -e "^deb-" sources.list  &gt;sources.src
# sed -e "s/stable/testing/"  sources.deb \
     &gt;&gt;sources.list
# sed -e "s/stable/testing/" sources.src | \
     sed -e "s/^deb-/#deb-/"  &gt;&gt;sources.list

# apt-get update
# apt-get install apt apt-utils
# cat &gt;preferences &lt;&lt;EOF
 Package: *
 Pin: release a=testing
 Pin-Priority: 600
 
 Package: *
 Pin: release a=unstable
 Pin-Priority: 50

 EOF
</example>
Optionally, add the "unstable" section of the archives.
<example>
# sed -e "s/stable/unstable/" sources.deb \
     &gt;&gt;sources.list
# sed -e "s/stable/unstable/" sources.src | \
     sed -e "s/^deb-/#deb-/"  &gt;&gt;sources.list
</example>
See <ref id="apt-install"> for the art of tuning 
<file>/etc/apt/sources.list</file> and <file>/etc/apt/preferences</file>.
<p>
Now you can update and upgrade, using one of the methods in the next section.
</sect>

<sect id="upgrade-system">Upgrade the &debian; system
<p>
After properly setting up <file>/etc/apt/sources.list</file> and
<file>/etc/apt/preferences</file> files, the system can be upgraded to
<tt>testing</tt>.  See <ref id="package"> for the basics, and see 
<ref id="apt-trouble"> if you encounter problems.

<sect1>Best upgrade practice using <prgn>dselect</prgn>
<p>
If a system has many packages which include <tt>-dev</tt> packages, etc., 
the following method using <prgn>dselect</prgn> is recommended for 
fine-grained package control.
<example>
# dselect update  # always do this before upgrade
# dselect select  # select additional packages
</example>
All your current packages will be selected when <prgn>dselect</prgn>
starts.  <prgn>dselect</prgn> may prompt you with additional packages
based on <tt>depends</tt>, <tt>suggests</tt>, and <tt>recommends</tt>.
If you do not want to add any packages, just type <tt>Q</tt>
to exit <prgn>dselect</prgn> again.
<example>
# dselect install
</example>
You will have to answer some package configuration questions during
this part of the process, so have your notes ready and allow some 
time for this part.  See <ref id="dselect">.
<p>
Use <prgn>dselect</prgn>. <strong>It always works :)</strong>

<![%f-ref;[
<sect1>Deprecated upgrade practice using <prgn>apt-get</prgn>
<p>
<strong>The use of <prgn>apt-get</prgn> described below is widespread
but it is <em>not</em> recommended for system upgrades.</strong>
]]>

If you need to upgrade without <prgn>dselect</prgn> after Woody,
consider <prgn>aptitude</prgn> and other options.

<![%f-ref;[
<p>
If a system does not have many packages or the &debian; archive 
did not have major changes, the following may be sufficient 
(sometimes).
<example>
# apt-get update # always do this before upgrade
 ... to upgrade the system with "depends" selections: 
# apt-get upgrade                     # always do this before upgrade
 ... to upgrade the whole system with "depends" selections: 
# apt-get -u dist-upgrade
 ... or to upgrade and stay with current dselect settings (new, better):
# apt-get -u dselect-upgrade         # use dselect setup result
</example>
<p>
Since this upgrade method uses <prgn>apt-get</prgn>, its handling of 
<em>recommends</em> and <em>suggests</em> is limited. 
See <ref id="depends">.
]]>
</sect>



</chapt>

