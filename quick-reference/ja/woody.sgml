<!-- CVS revision of this document "$Revision: 1.4 $"  -->
<!-- CVS revision of original english document "1.43"  -->
<chapt id="woody"><tt>stable</tt>, <tt>testing</tt>, 又は <tt>unstable</tt>
ディストリビューションへのアップグレード

<![%f-ref;[
<p>
アップグレード用の公式リリースノートは
<url id="&stable-release;">
および
<url id="&testing-release;"> (作業中) にあります。

<p>
<tt>stable</tt>, <tt>testing</tt>, 又は <tt>unstable</tt> 
ディストリビューションにシステムをアップグレードするには、
次に示す数段階の手順を踏むことが必要となるかもしれません。
<list>
 <item> Woody へのアップグレード (システムが Woody より前の場合)
 <item> <tt>stable</tt> へのアップグレード
 <item> <tt>testing</tt> へのアップグレード
 <item> <tt>unstable</tt> へのアップグレード
</list> 

Debian は中間のリリースを飛ばしたアップグレードをサポートしていません。

]]>


<sect id="woody-transition">Potato から Woody へのアップグレード
<p>
この手順は Potato の APT が現在の
<manref name="apt_preferences" section="5"> マニュアルページに記述
されている全ての機能をサポートしていないために分けて記述されています。
<p>
<file>/etc/apt/sources.list</file> に <tt>stable</tt> ソースだけを
含めた後に、次を実行することにより、<tt>stable</tt> 版に必要な APT
と主要パッケージをアップグレードします。
<example>
# apt-get update
# apt-get install libc6 perl libdb2 debconf
# apt-get install apt apt-utils dselect dpkg
</example>
次にシステムの残りの部分を Woody にアップグレードします。
<example>
# apt-get upgrade
# apt-get dist-upgrade
</example>

<sect id="testing-transition">アップグレードの準備
<p>
ネットワーク経由でパッケージを取得することにより、あるディストリビューション
から他のディストリビューションにアップグレードすることができます。
アップグレード作業は次のように行います。
<p>
<p>
まず <tt>stable</tt> 用のリポジトリのクリーンなリストを取得します。
<example>
# cd /etc/apt
# cp -f sources.list sources.list.old
# :&gt;sources.list 
# apt-setup noprobe 
</example>
<tt>testing</tt> にアップグレードしたい場合、この新しいリストに
<tt>testing</tt> ソースを追加します。
<tt>unstable</tt> にアップグレードしたい場合には、
<tt>unstable</tt> ソースも追加します。
<example>
# cd /etc/apt
# grep -e "^deb " sources.list &gt;srcs
# :&gt;sources.list  
# cp -f srcs sources.list
# sed -e "s/stable/testing/" srcs &gt;&gt;sources.list
# sed -e "s/stable/unstable/" srcs &gt;&gt;sources.list
# apt-get update
# apt-get install apt apt-utils
</example>

<file>/etc/apt/sources.list</file> と <file>/etc/apt/preferences</file>
のチューニング技術については <ref id="apt-install"> をご覧ください。
<p>
</sect>

<sect id="upgrade-system">アップグレード
<p>
上記に示したように <file>/etc/apt/sources.list</file> と
<file>/etc/apt/preferences</file> を適切に設定した後、システムの
アップグレードを開始できます。
<p>
しかしながら、&debian; の <tt>testing</tt> ディストリビューションを
追いかけることには、更新されたパッケージはまず <tt>unstable</tt> に
アップロードされ、後で <tt>testing</tt> に移って来るために、
セキュリティ修正を含むパッケージのインストールが
遅れるという副作用がありえるということに注意してください。
<p>
基本的なことは <ref id="package"> をご覧ください。そして、問題に
直面した場合は <ref id="apt-trouble"> をご覧ください。

<sect1> <prgn>dselect</prgn> を使用する
<p>
システムに <tt>-dev</tt> パッケージなどを含む多くのパッケージが存在する場合、
<prgn>dselect</prgn> を使用した次のような手段を用いたきめの細かいパッケージ
制御がお薦めです。
<example>
# dselect update  # アップグレード前には常にこれを実行する
# dselect select  # 追加パッケージを選択する
</example>
<prgn>dselect</prgn>を起動した時、現在の全パッケージが選択されています。
<tt>Depend</tt>, <tt>Suggest</tt>, そして <tt>Recommends</tt> に基づく
追加パッケージがある場合、<prgn>dselect</prgn> が入力を促すかもしれせん。
パッケージを追加したくない場合は、ただ <tt>Q</tt> を押せば、 <prgn>dselect</prgn>
は再び終了します。
<example>
# dselect install
</example>
<prgn>dselect</prgn> の install 作業中、パッケージの設定に関する質問に
いくつか答える必要があるでしょう。ですから、この過程のために時間とノート
を用意しておきましょう。<ref id="dselect"> をご覧ください。
<p>
<prgn>dselect</prgn> を使用してください。 <strong>常に動作します :)</strong>

<![%f-ref;[
<sect1><prgn>apt-get</prgn> を使用する
<p>
<example>
# apt-get update
# apt-get -t stable upgrade
# apt-get -t stable dist-upgrade
# apt-get -t testing upgrade
# apt-get -t testing dist-upgrade
# apt-get -t unstable upgrade
# apt-get -t unstable dist-upgrade
</example>
いったんシステムが Sarge まで到達したら、<prgn>apt-get</prgn>
の代わりに <prgn>aptitude</prgn> を使うことをお薦めします。
(<prgn>aptitude</prgn> は 上に示したものを含めた <prgn>apt-get</prgn> 
が受け取るオプションの多くを受け取ります。)
<p>
アップグレードを行い、現在の <tt>dselect</tt> 設定を保持するには、次を実行します。
<example>
# apt-get dselect-upgrade
</example>
<p>
<ref id="depends"> をご覧下さい。
]]>
</sect>


</chapt>