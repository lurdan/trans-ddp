<!-- CVS revision of this document "$Revision: 1.9 $"  -->
<!-- CVS revision of original english document "1.21"  -->

<chapt id="gnupg">GnuPG

<p>
Referenzen:
<list compact>
<item><manref name="gpg" section="1">. 
<item><file>&dochome;gnupg/README.gz</file>
<item><em>GNU privacy handbook</em> in 
 <file>&dochome;gnupg-doc/GNU_Privacy_Handbook/</file> 
 (installieren Sie das <package>gnupg-doc</package> Paket)
</list>

<sect>Installation von GnuPG
<p>
<example>
# gpg --gen-key                  # erzeugen eines neuen Schlüssels
# gpg --gen-revoke <var>Nutzer_ID</var>     # erzeugen eines Widerrufungs-
                                 # schlüssels für <var>Nutzer_ID</var>
# host -l pgp.net |grep www |less# pgp Schlüsselserver bestimmen
</example>
Ein guter Standard-Schlüsselserver sollte in
<file>$HOME/.gnupg/gpg.conf</file> (oder der alten Datei
<file>$HOME/.gnupg/options</file>) eingetragen sein:
<example>
keyserver hkp://subkeys.pgp.net
</example>
Hier muss man vorsichtig sein <strong>nicht mehr als 2 Unterschlüssel zu
erzeugen</strong>.  Sollten Sie dies tun, werden die Schlüsselserver auf
pgp.net Ihren Schlüssel <strong>korrumpieren</strong>. Nutzen Sie das neuere
<package>gnupg</package> (>1.2.1-2), um mit diesen korrupten Unterschlüssel
umzugehen. Vergleichen Sie <url id="&gpg-subkeys;">.
<p>
</sect>

<sect>Verwendung von GnuPG
<p>
Handhabung von Dateien:
<example>
$ gpg [Optionen] <var>Kommando [args]</var>
$ gpg {--armor|-a} {--sign|-s} <var>Datei</var> # signiere Datei in <var>Datei</var>.asc
$ gpg --clearsign <var>Datei</var>              # clear-sign Nachricht
$ gpg --clearsign --not-dash-escaped <var>Patchdatei</var> # clear-sign
                                     # Patchdatei
$ gpg --verify <var>Datei</var>                 # überprüfe clear-signed <var>Datei</var>
$ gpg -o <var>Datei.sig</var> {-b|--detach-sig} <var>Datei</var> # erzeuge losgelöste
                                     # Signatur
$ gpg --verify <var>Sign</var> <var>Datei</var>            # überprüfe <var>Datei</var> mit <var>Sign</var>
$ gpg -o <var>crypt_Datei</var> {--recipient|-r} <var>name</var> {--encrypt|-e} <var>Datei</var> 
                             # Public-Key Verschlüsselung für name
$ gpg -o <var>crypt_Datei</var> {--symmetric|-c} <var>Datei</var> # sym. Verschlüsselung
$ gpg -o <var>Datei</var> --decrypt crypt_Datei # Entschlüsselung
$ gpg --refresh-keys                   # Update local keyring
</example>
</sect>

<sect>Umgang mit GnuPG
<p>
Schlüsselmanagement:
<example>
$ gpg --edit-key <var>Nutzer_ID</var>   # "help" für Hilfe, interaktiv
$ gpg -o <var>Datei</var> --exports     # exportiere alle Schlüssel nach <var>Datei</var> 
$ gpg --imports <var>Datei</var>        # importiere alle Schlüssel von <var>Datei</var>
$ gpg --send-keys <var>Nutzer_ID</var>  # sende Schlüssel von <var>Nutzer_ID</var> zum
                             # Schlüsselserver
$ gpg --recv-keys <var>Nutzer_ID</var>  # empfange Schlüssel von <var>Nutzer_ID</var>
                             # vom Schlüsselserver
$ gpg --list-keys <var>Nutzer_ID</var>  # liste Schlüssel von <var>Nutzer_ID</var> auf
$ gpg --list-sigs <var>Nutzer_ID</var>  # liste Signatur von <var>Nutzer_ID</var> auf
$ gpg --check-sigs <var>Nutzer_ID</var> # überprüfe Signatur von <var>Nutzer_ID</var>
$ gpg --fingerprint <var>Nutzer_ID</var># überprüfe Fingerabdruck von <var>Nutzer_ID</var>
$ gpg --list-sigs | grep '^sig' | grep '[User id not found]' \
  | awk '{print $2}' | sort -u | xargs gpg --recv-keys
                             # unbekannte Schlüssel besorgen
  # aktualisiere Schlüssel für alle unbekannten Signaturen.
$ gpg --refresh-keys         # aktualisiere den lokalen Schlüsselring
</example>
Vertrauenscode:
<example>
-         Kein Besitzervertrauen zugewiesen / noch nicht berechnet.
e         Vertrauensberechnung schlug fehl.
q         Nicht genug Informationen für Berechnung.
n         Niemals diesem Schlüssel vertrauen.
m         Gerade noch vertrauenswert.
f         Voll vertrauenswert.
u         Äußerst vertrauenswert. 
</example>
Das folgende lädt meinen Schlüssel "<var>A8061F32</var>" auf den bekannten
Schlüsselserver <tt>hkp://subkeys.pgp.net</tt>:
<example>
$ gpg --keyserver hkp://subkeys.pgp.net --send-keys <var>A8061F32</var>
</example>
</sect>

<sect>Benutzung von GnuPG mit Anwendungen
<p>
<sect1>Benutzung von GnuPG mit Mutt
<p>
Fügen Sie folgendes zu <file>~/.muttrc</file> hinzu, um das langsame GnuPG
vom automatischen Starten abzuhalten, während es beim Drücken von
`<tt>S</tt>' im Indexmenü gestartet werden kann.
<example>
macro index S ":toggle pgp_verify_sig\n"
set pgp_verify_sig=no
</example>

<sect1 id="vimgpg">Benutzung von GnuPG mit Vim
<p>
Fügen Sie den Inhalt von <file>_vimrc</file> aus dem <url id="&examples;"
name="Beispielverzeichnis"> in <file>~/.vimrc</file> ein, um GnuPG 
transparent zu starten.

</chapt>
