<!-- CVS revision of this document "$Revision: 1.14 $"  -->
<!-- CVS revision of original english document "1.29"  -->
<!--Line width ruler (ruler uses 78 characters) 34567890123456789012345-->

<chapt id="edit">Editoren

<sect id="pop-editor">Populäre Editoren
<p>
Linux bietet viele Alternativen für Texteditoren in der Konsole, unter
anderem:
<list compact>
<item><prgn>vim</prgn>:    Mächtiger und kleiner Editor aus der BSD-Welt. VI
                           iMproved.
<item><prgn>emacs</prgn>:  Ultimativer und leistungsfähiger Editor aus der
                           GNU-Welt von RMS (Richard M. Stallman).
<item><prgn>xemacs</prgn>: Emacs: Die nächste Generation, ursprünglich von
                           Lucid.
<item><prgn>mcedit</prgn>: GNU-Editor für Anfänger. Identisch zu
                           <prgn>mc</prgn>'s internem Editor. Vergleiche
                           <ref id="mcedit">.
<item><prgn>ae</prgn>:     Kleiner Standardeditor (Potato). Nicht verwenden.
<item><prgn>nano</prgn>:   Kleiner GNU-Standardeditor (Woody). Emuliert
                           <prgn>pico</prgn>. 
<item><prgn>joe</prgn>:    Für altes WordStar- oder TurboPascal-Feeling.
<item><prgn>jed</prgn>:    Schneller, reichhaltiger menübasierter Editor mit
                           Emacs-Tastenzuordnungen.
<item><prgn>jove</prgn>:   Sehr kleiner Editor mit Emacs-Tastenzuordnungen.
<item><prgn>nvi</prgn>:    Neuer vi. Fehler-für-Fehler kompatibel mit dem
                           ursprünglichen vi.
</list>
<p>
Verwenden Sie <tt>update-alternatives --config editor</tt>, um den
Standardeditor zu wechseln. Viele Programme nutzen auch die
Umgebungsvariablen <tt>EDITOR</tt> oder <tt>VISUAL</tt> um zu entscheiden,
welcher Editor genutzt wird. Vergleichen Sie <ref id="mcedit">.
<p>
Einige bemerkenswerte X-basierte Texteditoren:
<list compact>
<item><prgn>gvim</prgn>: Vim mit GUI (graphische Benutzerschnittstelle)
      (<package>vim</package>- und <package>vim-gtk</package>-Paket)
<item><prgn>emacs</prgn>: Der eine wahre Emacs (automatische X-Erkennung). 
<item><prgn>xemacs</prgn>:  Emacs der nächsten Generation (automatische
      X-Erkennung). 
</list>
Diese X-basierten Kommandos nutzen Standardoptionen wie
<tt>-fn <var>a24</var></tt>, was das Leben für ältere Leute wie mich
einfacher macht :)  Vergleiche <ref id="xclnt">.
</sect>

<sect id="bin-editor">Rettungseditoren
<p>
Es gibt einige Editoren die sich in <file>/bin/</file> befinden. Einer von
diesen sollte installiert sein, um das Editieren von Dateien zu vereinfachen,
wenn auf <file>/usr/</file> nicht zugegriffen werden kann.
<p>
<list compact>
<item><package>elvis-tiny</package>: Minimaler vi-Editor (<prgn>vi</prgn> zum
      Starten)
<item><package>nano-tiny</package>:  Minimaler nicht-vi-Editor
      (<prgn>nano-tiny</prgn> zum Starten)
<item><package>nano</package>:  Minimaler nicht-vi-Editor
      (<prgn>nano</prgn> zum Starten) (Sarge)
<item><package>ed</package>:         Minimaler Editor (immer vorhanden, aber
      schwierig zu benutzen)
</list>
<p>

<sect>Emacs und Vim

<sect1>Vim Hinweise
<p>
Lesen Sie das "VIM - main help file"-Dokument durch Drücken von &lt;F1&gt;
während das Programm läuft.

<example>
&lt;F1&gt;           Hilfe
&lt;Esc&gt;          Zurück zum normalen Modus
V              Visueller Modus
i              Eingabemodus
:              Kommandozeilen Kommandos
:set tw=72     Setzen der Textbreite auf 72
&lt;F11&gt;          Eingabe- (Paste) Modus
:r! date -R    Einfügen des Datums entsprechend RFC-822
q<var>a</var>             Aufnahme der Tastenanschläge in Register <var>a</var>
q              Beenden der Aufnahme
@<var>a</var>             Ausführen der Tastenanschläge aus Register <var>a</var>
:edit <var>text.txt</var> Editieren einer anderen Datei <var>text.txt</var>
:wnext         Sichern der Datei und bearbeiten der nächsten
</example>

<tt>q</tt> und <tt>@</tt> können für einfache Makroaufnahmen und zum
Abspielen genutzt werden. Um beispielsweise ein Makro zu erzeugen, das 
HTML-Italic-Tags um das Wort unter dem Cursor einfügt, kann
<tt>qii&lt;i&gt;^[ea&lt;/i&gt;^[q</tt> (wobei <tt>^[</tt> die ESC-Taste ist)
genutzt werden. Die Eingabe von <tt>@i</tt> beim Start eines Wortes fügt
&lt;i&gt; und &lt;/i&gt; ein.
<p>
Vergleichen Sie auch <ref id="vimgpg">.
</sect1>

<sect1>Emacs-Hinweise
<p>
<example>
&lt;F1&gt;                Hilfe
&lt;F10&gt;               Menü
C-u M-! date -R     Einfügen des Datums entsprechend RFC-822
</example>
</sect1>

<sect1>Starten des Editors
<p>
<example>
Starten des Editors:                   emacs Datei  vim Datei
Starten mit vi-Kompatibilität:                      vim -C
Starten ohne vi-Kompatibilität:                     vim -N
Starten mit einkompilierten Standards: emacs -q     vim -N -u NONE
</example>
</sect1>

<sect1 id="editkey">Zusammenfassung der Editorkommandos (Emacs, Vim)
<p>
<example>
beenden:                        C-x C-c         :qa /:wq /:xa /:q!
zurücksetzen/Kommandomodus:     C-g             &lt;Esc&gt;
zurück (links):                 C-b             h
vorwärts (rechts):              C-f             l
nächstes (herunter):            C-n             j
vorheriges (hoch):              C-p             k
StArt der Zeile (^):            C-a             0
Ende der Zeile ($):             C-e             $
mehrere Kommandos:              C-u nnn cmd     nnn cmd
mehrere Kommandos:              M-Ziffer cmd
abspeichern:                    C-x C-s         :w Datei
zum Anfang des Puffers:         M-&lt;             1G
zum Ende des Puffers:           M-&gt;             G
eine Seite vorwärts scrollen:   C-v             ^F
1/2 Seiten vorwärts scrollen:                   ^D
eine Zeile vorwärts scrollen:                   ^E
eine Seite rückwärts scrollen:  M-v             ^B
1/2 Seiten rückwärts scrollen:                  ^U
eine Zeile rückwärts scrollen:                  ^Y
das andere Fenster scrollen:    M-C-v
unter Cursor löschen:           C-d             x
löschen bis zum Zeilenende:     C-k             D
inkrementelle Suche vorwärtS:   C-s
inkrementelle Suche Rückwärts:  C-r
vorwärtS suchen:                C-s Enter       /
Rückwärts suchen:               C-r Enter       ?
inkr. Suche nach reg. Ausd.:    M-C-s
inkr. Suche rückw. n. reg. Ausd.: M-C-r
suche nach regulären Ausdruck:  M-C-s Enter     /
suche rückw. nach reg. Ausd.:   M-C-r Enter     ?
Hilfe:                          C-h C-h         :help
Hilfe Apropos:                  C-h a
Hilfe zu Tastenzuordnungen:     C-h b           :help [key]
Info Seiten anzeigen:           C-h i
Hilfe Hauptmodus:               C-h m
Hilfe Tutorial:                 C-h t           :help howto
rückgängig:                     C-_             u
nochmals tun (redo):            C-f             ^R
markiere die Cursorposition:    C-@             m{a-zA-Z}
wechseln der Markierung und Pos.: C-x C-x
springe zur Mark. in akt. Datei:                '{a-z}
springe zur Mark. in jeder Datei:               '{A-Z}
Bereich kopieren:               M-w             {visual}y
Bereich entfernen:              C-w             {visual}d
Bereich einfügen:               C-y             <![%FIXME;[p y ? XXX FIXME XXX]]>
einfügen des gelöschten Textes: M-y             p
in Großbuchstaben umwandeln:    C-x C-u         {visual}U
in Kleinbuchstaben umwandeln:   C-x C-l         {visual}u
einfügen spezieller Zeichen:    C-q octalnum/keystroke  
                                                ^V decimal/keystroke
ersetzen:                       M-x replace-string  :&percnt;s/aaa/bbb/g
ersetzen regulärer Ausdrücke:   M-x replace-regexp  :&percnt;s/aaa/bbb/g
vor Ersetzen nachfragen:        M-&percnt;                 :&percnt;s/aaa/bbb/gc
vor Ersetzen nachfragen:        M-x query-replace
vor Ersetzen reg. Aus. nachfragen: M-x query-replace-regexp
Datei öffnen:                   C-x C-f         :r file
Datei sichern:                  C-x C-s         :w
alle Puffer speichern:          C-x s           :wa
speichern unter:                C-x C-w file    :w file
nach Puffer fragen:             C-x b
Puffer anzeigen:                C-x C-b         :buffers
Read-only Flag wechseln:        C-x C-q         :set ro
nach Puffer fragen und löschen: C-x k
vertikal aufteilen:             C-x 2           :split
horizontal aufteilen:           C-x 3           :vsplit (ver. 6)
in anderes Fenster wechseln:    C-x o           ^Wp
entfernen dieses Fensters:      C-x 0           :q
entfernen anderer Fenster:      C-x 1           ^Wo
Shell im Hintergrund starten:   M-x compile
Shell im Hintergrund killen:    M-x kill-compilation
make starten:                                   :make Makefile
Fehlermeldungen überprüfen:     C-x`            :echo errmsg
Shell starten und aufzeichnen:  M-x shell       :!script -a tmp
...clean BS, ...                                :!col -b &lt;tmp &gt;record
...sichern/abrufen der Aufz.:   C-x C-w record  :r record
Shell starten:                  M-! sh          :sh
Kommando starten:               M-! Kmd         :!Kmd
Kommando starten und einfügen:  C-u M-! Kmd     :r!Kmd
Filter starten:                 M-| Datei       {visual}:w Datei
Filter starten und einfügen:    C-u M-| Filter  {visual}:!Filter
Option anzeigen:                                :se[t] {Option}?
Option auf Standard zurücksetzen:               :se[t] {Option}&
boolsche Option zurücksetzen:                   :se[t] no{Option}
boolsche Option ändern:                         :se[t] inv{Option}
Textumbruch bei Spalte 72:                      :se tw=72
keinen Zeilenumbruch:                           :se tw=0
automatische Einrückung:                        :se ai
Tabulatoren expandieren:                        :se et
Kommentar angeben (E-Mail):                     :se comments=n:&gt;,n:\|

GDB starten                     M-x gdb
beschreibe den GDB-Mode         C-h m
eine Zeile ausführen            M-s
nächste Zeile                   M-n
eine Anweisung ausführen (stepi) M-i
aktuelle Funktion beenden       C-c C-f
weiter                          M-c
zur übergeordneten Funktion     M-u
zur untergeordneten Funktion    M-d
copy number from point, insert at the end<!-- FIXME -->
                                C-x &
setze einen Haltepunkt          C-x SPC
</example>
</sect1>

<sect1>Vim-Konfiguration
<p>
Um alle Vim-Eigenschaften und Syntax-Highlighting zu nutzen, müssen die
folgenden Zeilen in <file>~/.vimrc</file> oder <file>/etc/vimrc</file>
eingefügt werden:
<example>
set nocompatible
set nopaste
set pastetoggle=&lt;f11&gt;
syn on
</example>
Der Paste-Modus unterbindet Probleme mit der automatischen Einrückung bei
Markieren-und-Einfügen-Operationen in konsolenbasierten Terminals. Dies
bewirkt mehr als ein einfaches ":set noai".
<p>
Vergleichen Sie <ref id="vimgpg"> für die GnuPG-Integration.
</sect1>

<sect1>Ctags
<p>
Starten Sie <tt>apt-get install exuberant-ctags</tt> und <prgn>ctags</prgn> auf den
Quelldateien. Geben Sie <tt>:tag <var>Funktionsname</var></tt> in Vim ein,
um zur Zeile zu springen, wo <var>Funktionsname</var> beginnt.
Die Tags funktionieren mit C, C++, Java, Python und vielen anderen Sprachen.
<p>
Emacs besitzt die gleichen ctags-Fähigkeiten.
</sect1>

<sect1>Konvertierung eines mit Syntax-Highlighting versehenen Schirms in
       HTML
<p>
<tt>so \$VIMRUNTIME/syntax/2html.vim</tt> vom Vim-Kommandomodus konvertiert
hervorgehobenen Text nach HTML. Sichern Sie dies mit <tt>:w Datei.html</tt>
und <tt>:q</tt>. Dies ist nützlich für C-Code, etc.
</sect1>

<sect1>Aufteilen des Bildschirms mit <prgn>vim</prgn>
<p>
<prgn>vim</prgn> kann mehrere Dateien in mehrfach aufgeteilten Bildschirmen
editieren. Geben Sie <tt>:help usr_08.txt</tt> für Details ein.
<p>
Um die Bildschirmdarstellung für verschiedene Dateien aufzuteilen, ist am
vi-Kommandoprompt Folgendes einzugeben:
<example>
:split <var>andere-Datei</var>
:vsplit <var>andere-Datei</var>
</example>
Beim Shell-Prompt führt
<example>
$ vi -o Datei1.txt Datei2.txt   # horizontale Aufteilung
$ vi -O Datei1.txt Datei2.txt   # vertikale Aufteilung
</example>
zu einem Mehr-Fenster-vi.
<example>
$ vimdiff Datei.txt~ Datei.txt   # überprüfen der Änderungen von
$ vimdiff Datei.en Datei.fr      #  Datei.txt bzw. der Übersetzung
$ gvimdiff Datei.txt~ Datei.txt  # in X
</example>
ermöglicht einen schönen Blick auf die Unterschiede zwischen der
ursprünglichen und der Backup-Datei. In SGML erkennt es Tags, so dass der
Vergleich von Übersetzungen in diesem Modus sehr gut funktioniert.
<p>
Spezielle Cursor-Bewegungen mit Strg-W:
<example>
Strg-W +      vergrößern des Fensters
Strg-W -      verkleinern des Fensters
Strg-W h      wechseln ins linke Fenster
Strg-W j      wechseln in untere Fenster
Strg-W k      wechseln ins obere Fenster
Strg-W l      wechseln ins rechte Fenster
...
</example>
Nutzen Sie Folgendes zur Kontrolle (Synchronisation) des Bildschirm
Scrollens:
<example>
:set scrollbind
:set noscrollbind
</example>
</sect1>

</sect>

</chapt>
