<!-- CVS revision of this document "$Revision: 1.1 $"  -->
<!-- CVS revision of original english document "1.37"  -->
<chapt id="woody"><tt>testing</tt> へのアップグレード

<![%f-ref;[
<p>
アップグレード用の公式リリースノートは
<url id="&stable-release;">
および
<url id="&testing-release;"> (作業中) にあります。

<p>
The process for upgrading a system to <tt>testing/unstable</tt> flavors is: 
<tt>testing/unstable</tt> flavor へのアップグレード作業は次の通り:
<list>
 <item> システムが現在 Potato ならば APT システムを Woody のシステムに
 更新します。なぜなら Potato の APT は Woody が持つ機能を持っていないからです。
 <manref name="apt_preferences" section="5"> manpage をご覧ください。
 <item> <file>/etc/apt/sources.list</file> および 
 <file>/etc/apt/preferences</file> をあなたが使用しているリポジトリの
 "testing" セクションへの参照を含むように修正してください。"unstable" 
 セクションへの参照を追加したい場合も同様です。
 <item> パッケージリストを更新し、更新可能なパッケージをインストールします。
</list> 
]]>


<sect id="woody-transition">Woody 版の APT への移行
<p>
Network upgrade of the APT system and some core packages to the Woody versions 
can be done as follows after including <tt>stable</tt> sources 
in the <file>/etc/apt/sources.list</file> if you still run Potato.
まだ Potato を動かしているなら、APT システム並びにいくつかのコアパッケージの
Woody 版へのネットワークアップグレードは、 <file>/etc/apt/sources.list</file>
にある <tt>stable</tt> ソースを含めた後、次のように行えます:
<example>
# apt-get update
# apt-get install libc6 perl libdb2 debconf
# apt-get install apt apt-utils dselect dpkg
</example>


<sect id="testing-transition"><tt>stable</tt> から <tt>testing</tt> への移行の準備

<p>
&debian; の <tt>testing</tt> flavor を追いかけるとセキュリティ修正が
非常に遅いという副作用がありますので、警告しておきます。
<p>
<tt>testing</tt> へのネットワークアップグレードは次のように行えます:
(一つのコマンドとして実行するには <url id="&examples;" name="go-woody">
にあるスクリプトを実行してください)
<p>
既存の <file>sources.list</file> を空にして次を実行:
<example>
# cd /etc/apt
# cp -f sources.list sources.old 
# :&gt;sources.list  
</example>
<p>
<tt>stable</tt> 用のリポジトリのクリーンなリストを取得:
<example>
# cd /
# apt-setup noprobe 
    ... HTTP または FTP によりアクセスされるリポジトリを選択
</example>
この新しいリストに <tt>testing</tt> セクションを追加する。
<tt>deb-src</tt> 行はコメントアウトする。
<example>
# cd /etc/apt
# grep -e "^deb " sources.list  &gt;sources.deb
# grep -e "^deb-" sources.list  &gt;sources.src
# sed -e "s/stable/testing/"  sources.deb \
     &gt;&gt;sources.list
# sed -e "s/stable/testing/" sources.src | \
     sed -e "s/^deb-/#deb-/"  &gt;&gt;sources.list

# apt-get update
# apt-get install apt apt-utils
# cat &gt;preferences &lt;&lt;EOF
 Package: *
 Pin: release a=testing
 Pin-Priority: 600
 
 Package: *
 Pin: release a=unstable
 Pin-Priority: 50

 EOF
</example>
任意でアーカーブの "unstable" セクションを追加する。
<example>
# sed -e "s/stable/unstable/" sources.deb \
     &gt;&gt;sources.list
# sed -e "s/stable/unstable/" sources.src | \
     sed -e "s/^deb-/#deb-/"  &gt;&gt;sources.list
</example>
<file>/etc/apt/sources.list</file> および <file>/etc/apt/preferences</file>
のチューニング技術については <ref id="apt-install"> をご覧ください。
<p>
ついに update および upgrade を次の章にある手段のうち一つを用いて可能に
なりました。
</sect>

<sect id="upgrade-system">&debian; システムの更新
<p>
<file>/etc/apt/sources.list</file> および <file>/etc/apt/preferences</file>
を適切に設定した後、システムを <tt>testing</tt> にアップグレードできます。
基本的なことは <ref id="package"> をご覧ください。そして、問題に
直面した場合は <ref id="apt-trouble"> をご覧ください。

<sect1> <prgn>dselect</prgn> を使用した最良のアップグレード
<p>
システムに <tt>-dev</tt> パッケージなどを含む多くのパッケージが存在する場合、
<prgn>dselect</prgn> を使用した次のような手段によるきめの細かいパッケージ
制御がお薦めです。

<example>
# dselect update  # アップグレード前には常にこれを実行する
# dselect select  # 追加パッケージを選択する
</example>
<prgn>dselect</prgn>を起動した時、現在の全パッケージが選択されています。
<tt>depend</tt>、<tt>suggest</tt> ならびに <tt>recommends</tt> に基づく
追加パッケージがある場合、<prgn>dselect</prgn> が入力を促すかもしれせん。
パッケージを追加したくない場合は、ただ <tt>Q</tt> を押せば <prgn>dselect</prgn>
は再び終了します。
<example>
# dselect install
</example>
<prgn>dselect</prgn> の install 作業中、パッケージの設定に関する質問に
いくつか答える必要があるでしょう。ですから、この過程のために時間とノート
を用意しておきましょう。<ref id="dselect"> をご覧ください。
<p>
<prgn>dselect</prgn> を使用してください。 <strong>常に動作します :)</strong>

<![%f-ref;[
<sect1><prgn>apt-get</prgn> を使用して時代遅れのパッケージをアップグレードする
<p>
<strong>以下に述べる <prgn>apt-get</prgn> の使用は広まっていますが、
システムのアップグレードには<em>勧められません</em>。</strong>
]]>

Woody 以降で <prgn>dselect</prgn> を使用しないでアップグレードする必要が
ある場合、<prgn>aptitude</prgn> や同種のものを用いることを考えてください。

<![%f-ref;[
<p>
If a system does not have many packages or the &debian; archive 
did not have major changes, the following may be sufficient 
システムにあまりパッケージがインストールされていない、又は
&debian; アーカイブに大きな変化が無かった場合、次に示す方法が
(時には)効率的かもしれません。
<example>
# apt-get update # アップグレード前は常に実行する
 "depends" セレクションによりシステムをアップグレードするために次を実行:
# apt-get upgrade                     # アップグレード前は常に実行する
 "depends" セレクションによりシステム全体をアップグレードするために次を実行:
# apt-get -u dist-upgrade
 または現在の dselect の設定によりアップグレードまたは保持するために次を実行
 (新しく、上記方法より良い):
# apt-get -u dselect-upgrade         # dselect の設定結果を使用
</example>
<p>
本アップグレード方法は <prgn>apt-get</prgn> を使用するため、
<em>recommends</em> ならびに <em>suggests</em> の操作が制限されます。
<ref id="depends"> をご覧ください。
]]>
</sect>



</chapt>

