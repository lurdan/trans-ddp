<!doctype debiandoc public "-//DebianDoc//DTD DebianDoc//EN">

<debiandoc>

<book id="Debiandoc-example">
<title>Debiandoc example</title>
<author>
 <name>Osamu Aoki</name>
 <email>debian@aokiconsulting.com</email>
</author>

<version>Version 1.00</version>

<abstract>
This provide simple example of debiandoc-sgml document.
You can not place "ref" tag in here, if "info" need to be generated.
</abstract>

<copyright>
  <copyrightsummary>
    Copyright &copy; 2002 by Osamu Aoki <email>debian@aokiconsulting.com</>
  </copyrightsummary>
  <p>
  <url id="http://www.gnu.org/copyleft/gpl.html"
        name="This document may used under the terms of the GNU General Public License version 2 or higher.">
</copyright>
<toc sect1>  <!-- list section to sect1 -->
<chapt>Basics of document conventions
<p>

<sect id="effect-of-tag">Effect of tag
<p>
Followings will elucidate effect of each tag (check result in each format):
<taglist>
 <tag>"em"
  <item> &mdash; <em>empahsis</em>, _text_ HTML=italics
 <tag>"strong"
  <item> &mdash; <strong>more empahsis</strong>, _text_ HTML=PDF=BOLD
 <tag>"var"
  <item> &mdash; <var>metasyntactic variable</var>, &lt;text&gt; HTML=PDF=italics
 <tag>"prgn"
  <item> &mdash; <prgn>program-name-or-well-known-file-name</>, `text' HTML=PDF=fix
 <tag>"package"
  <item> &mdash; <package>package-name</package>, `text' HTML=PDF=fix
 <tag>"file"
  <item> &mdash; <file>/full/path/file/or/directory/name</>, `text' HTML=PDF=fix
 <tag>"tt"
  <item> &mdash; <tt>terminal input/output with <var>metasyntactic variable</></>,
    `text' HTML=PDF=fix (variable=italics fix)
</taglist>
If a section needs to be `<tt>terminal input/output</>' inside of text,
use ` and ' around tt-tag so ``...'' in text, `...' in other format.
<sect>Use of example section
<p>
Good for terminal interaction, table, ... where no-wrapping is desirable.
<example>
&lt;example&gt;
0        1         2         3         4         5         6         7
123456789012345678901234567890123456789012345678901234567890123456789012
&lt;- must be liess than 72 char (70 better) per line within example tag -&gt;
   this is because this section is not wrapped.
# root-shell-command &lt;var&gt;variable&lt;/var&gt;   # sgml original
# root-shell-command <var>variable</var>               # result
$ user-shell-command &lt;var&gt;variable&lt;/var&gt;
$ user-shell-command <var>variable</var>
&lt;/example&gt;
</example>

<sect>Cross reference examples
<p>
<list>
<item>&lt;ref id="effect-of-tag"&gt;:<ref id="effect-of-tag">
<item>&lt;manref name="ls" section="1"&gt;: <manref name="ls" section="1">
<item>&lt;url id="http://www.debian.org" name="Debian"&gt;:<url id="http://www.debian.org" name="Debian">
</list>

<sect>List examples
<p>
List:
<list>
<item>Item 1 (simple list)
 <list>
 <item>Item 1.1 (sublist)
 <item>Item 1.2 (sublist)
 </list>
<item>Item 2. Long list of word will wrap line into next line. 
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
 <p>Paragraph
<item>Item 3 <url id="http://www.debian.org/pub/debian/long/long/long/long/long/long/long/long/long/long/long/long/long/long/long/path"
 name="long-long-long-long-long-long-long-long-long-long-long-long-long-long-long-long-long-url-name">
<item>Item 4
</list>
<p>
Enumlist:
<enumlist>
<item>Item 1 (simple enumlist)
 <enumlist>
 <item>Item 1.1 (sub-enumlist)
 <item>Item 1.2 (sub-enumlist)
 </enumlist>
<item>Item 2
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
 <p>Paragraph
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
<item>Item 3
 <list>
 <item>Item 3.1 (sublist)
 <item>Item 3.2 (sublist)
 </list>
<item>Item 4 <url id="http://www.debian.org/pub/debian/long/long/long/long/long/long/long/long/long/long/long/long/long/long/long/path"
 name="long-long-long-long-long-long-long-long-long-long-long-long-long-long-long-long-long-url-name">
</enumlist>

Taglist:
<taglist>
<tag>Tag 1 <url id="http://www.debian.org/pub/debian/long/long/long/long/long/long/long/long/long/long/long/long/long/long/long/path"
 name="long-long-long-long-long-long-long-long-long-long-long-long-long-long-long-long-long-url-name">
<item>Item 1 (simple taglist)
 <enumlist>
 <item>Item 1.1 (sub-enumlist)
 <item>Item 1.2 (sub-enumlist)
 </enumlist>
<tag>Tag 2
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
<item>Item 2
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
 <p>Paragraph
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
  Long list of word will wrap line into next line.
<tag>Tag 3
<item>Item 3
 <list>
 <item>Item 3.1 (sublist)
 <item>Item 3.2 (sublist)
 </list>
<tag>Tag 4
<item>Item 4
</taglist>

<chapt>How to use this
<p>
<example>
$ debiandoc2text example.sgml
$ debiandoc2html example.sgml
$ debiandoc2latexpdf example.sgml
</example>

<chapt>Program suites name as proper name
<p>
The developer of Perl is Larry Wall
<p>
To check your Perl version, use `<tt>perl -V</tt>'.
<p>
<prgn>perl</prgn> should be located in <file>/usr/bin</file>.
<p>
Likewise, capitalize a program name when used to describe a well-known
program suite: Exim, Mutt, Elm, Vim, Samba, Emacs, etc.

</book>
</debiandoc>
