<!-- CVS revision of this document "$Revision: 1.1 $"  -->
<!-- CVS revision of original english document "1.37" -->

<chapt id="woody">將 distribution 升級至 <tt>testing</tt>

<![%f-ref;[
<p>
官方的升級通知發佈於
<url id="&stable-release;">
和
<url id="&testing-release;"> (正在進行中)。

<p>
將系統升級到 <tt>testing/unstable</tt> 的過程如下：
<list>
 <item>如果使用的系統是 Potato 請將 APT 版本升級到 Woody，因為 Potato 版本中的 
  APT 不具備 Woody 版本中的 <manref name="apt_preferences" section="5">。
 <item>修改 <file>/etc/apt/sources.list</file> 和 
  <file>/etc/apt/preferences</file> 檔，加入你使用的 repository 中的 "testing" 部
  分。如果你想的話，也可以加入 "unstable" 部分。
 <item>更新你的套件列表，並安裝所有你可以升級的套件。

</list> 
]]>


<sect id="woody-transition">將 APT 轉換到 Woody 版本
<p>
如果你用的還是 Potato 的話，可在 <file>/etc/apt/sources.list</file> 中加入
<tt>stable</tt> 的來源，然後使用下列步驟用網路升級的方式將 APT 系統以及一些核心
套件升級到 Woody 版本。
<example>
# apt-get update
# apt-get install libc6 perl libdb2 debconf
# apt-get install apt apt-utils dselect dpkg
</example>


<sect id="testing-transition">轉換的準備工作 (從 <tt>stable</tt> 到 <tt>testing</tt>)
<p>
請注意，跟隨 &debian; 的 <tt>testing</tt> 升級有一個負面影響，就是安全修正更新將會非常緩慢。
在此警告。
<p>
下面的操作可經由網路升級到 "testing" (亦可執行 <url id="&examples;"
name="go-woody"> 的 script，一個指令就完成了)：
<p>
清空現存的 <file>sources.list</file> 檔
<example>
# cd /etc/apt
# cp -f sources.list sources.old 
# :&gt;sources.list  
</example>
<p>
為 <tt>stable</tt> 建立一個乾淨的檔案庫 (repository) 列表
<example>
# cd /
# apt-setup noprobe 
    ... 選擇檔案庫，以 http 或 ftp 的方式存取
</example>
在這張新列表中添加 "testing" 的部分，將 <tt>deb-src</tt> 行註解掉。
<example>
# cd /etc/apt
# grep -e "^deb " sources.list  &gt;sources.deb
# grep -e "^deb-" sources.list  &gt;sources.src
# sed -e "s/stable/testing/"  sources.deb \
     &gt;&gt;sources.list
# sed -e "s/stable/testing/" sources.src | \
     sed -e "s/^deb-/#deb-/"  &gt;&gt;sources.list

# apt-get update
# apt-get install apt apt-utils
# cat &gt;preferences &lt;&lt;EOF
 Package: *
 Pin: release a=testing
 Pin-Priority: 600
 
 Package: *
 Pin: release a=unstable
 Pin-Priority: 50

 EOF
</example>
你可以選擇性的加入 archives 中的 "unstable" 的部分。
<example>
# sed -e "s/stable/unstable/" sources.deb \
     &gt;&gt;sources.list
# sed -e "s/stable/unstable/" sources.src | \
     sed -e "s/^deb-/#deb-/"  &gt;&gt;sources.list
</example>
請看 <ref id="apt-install"> 中說明調效 
<file>/etc/apt/sources.list</file> 和 <file>/etc/apt/preferences</file> 的藝術。
<p>
現在就可以用下一節所講的任意一種方法更新和升級系統了。
</sect>

<sect id="upgrade-system">升級 &debian; 系統
<p>
正確的設定好 <file>/etc/apt/sources.list</file> 和 
<file>/etc/apt/preferences</file> 文件後，系統即可升級到 <tt>testing</tt> 了。基
礎知識可參閱 <ref id="package"> ，如果遇到問題可參閱 <ref id="apt-trouble"> 。

<sect1>最好能使用 <prgn>dselect</prgn> 的方式來升級
<p>
如果系統裝了許多套件的 <tt>-dev</tt> 等套件，推薦下面使用 
<prgn>dselect</prgn> 的操作方法來進行套件的精細操作 (fine-grained package control)。
<example>
# dselect update  # 在升級前要先執行這一步
# dselect select  # 選擇附加的套件
</example>
當執行 <prgn>dselect</prgn> 時，所有你目前的套件都會被選擇， 
<prgn>dselect</prgn> 會基於 <tt>depends</tt> ， <tt>suggests</tt> 和 
<tt>recommends</tt> 來提示你附加的套件，如果不想添加任何套件，只需輸入 <tt>Q</tt> 退出 
<prgn>dselect</prgn> 。
<example>
# dselect install
</example>
在安裝過程中，必須回答一些有關套件設定的問題，準備好你的筆記本花點時間處理它們。
參閱 <ref id="dselect"> 。
<p>
使用 <prgn>dselect</prgn>看看，<strong>他做得還不錯 :)</strong>

<![%f-ref;[
<sect1>最好別用 <prgn>apt-get</prgn> 的方式來升級
<p>
<strong>下面描述了被廣泛使用的 <prgn>apt-get</prgn> 使用方式，但建議<em>不要
</em>用它來進行系統升級。</strong>
]]>

如果在 Woody 版之後你不想用 <prgn>dselect</prgn> 來升級，請考慮 
<prgn>aptitude</prgn> 或其它工具。

<![%f-ref;[
<p>
如果系統中的套件不多，或 Debian archive 沒有進行重大修改，下述操作（有時）就能勝
任。
<example>
# apt-get update # 在升級前總是先進行這一步
 ... 以 "depends" 的選擇來升級系統： 
# apt-get upgrade                     # 在升級前總是先進行這一步
 ... 以 "depends" 的選擇來升級整個系統： 
# apt-get -u dist-upgrade
 ... 或是升級並保留目前 dselect 的設定 (新的, 較好的)：
# apt-get -u dselect-upgrade         # 使用 dselect 設定的結果
</example>
<p>
使用 <prgn>apt-get</prgn> 方式升級將無法對 <em>recommends</em> 和 
<em>suggests</em> 類的套件進行操控。參閱 <ref id="depends"> 。
]]>
</sect>



</chapt>

