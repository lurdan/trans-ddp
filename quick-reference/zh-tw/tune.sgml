<!-- CVS revision of this document "$Revision: 1.11 $"  -->
<!-- CVS revision of original english document "1.171" -->
<chapt id="tune"> &debian; 系統調整
<p>
這一章節主要是說明如何在指令介面下設定系統組態。
<ref id="install">.  
<p>
如果您關心系統安全性，請閱讀 <url id="&securing-debian-howto;" name="Securing Debian Manual"> 來建構系統的安全性，該文件也可以安裝 <package>&p-securing-debian-howto;</package> 套件取得。

<sect id="init-hints"> 初始化系統的提示
<p>
&debian; 使用 System V 的 init 系統與流程，先閱讀 <ref id="init"> 了解大概內容。

<sect1 id="init-defaults">自定 init 命令稿
<p>
最簡單控管 init script 的方法是設定在<file>/etc/default</file>下的檔案中的系統環境變數。
<footnote>
<file>/etc/default/</file>下的檔案只有包含系統環境變數。當 init script 執行時會讀取對應的檔案來改變 init script 中預設的變數。請參閱 <url id="&etc-defaults;" name="peculiar"> 來了解 &debian; 選擇該目錄的原因。<file>/etc/default/</file>同等於 Red Hat 等系統中的 <file>/etc/sysconfig</file>。
</footnote>
舉例來說，<file>/etc/default/hotplug</file>就能控制<file>/etc/init.d/hotplug</file>的行為。可以自行編輯 motd，sulogin 等服務命令稿並放置在 <file>/etc/init.d/rcS</file> 讓系統開機時即可啟動。

<sect1 id="syslogd">設定系統登入日誌( system logging )
<p>
系統日誌是由 syslogd 這支程式控制，編輯 <file>/etc/syslog.conf</file> 設定日誌輸出型態。
透過 <package>colorize</package> 這個套件可以讓日誌檔更容易辨識。
查看 <manref name="syslogd" section="8"> 和 <manref name="syslog.conf" section="5"> 可以得到更多的訊息。
</sect1>

<sect1 id="hdtune">硬體最佳化(Optimizing hardware)
<p>
&debian; 保留了部份硬體最佳化的設定，系統管理者可以在安裝之後進行設定。

<list>
<item><package>hdparm</package>
 <list compact>
<item>硬碟讀寫最佳化軟體，效果十分顯著。
<item>請小心使用該軟體，最好先閱讀過 <manref name="hdparm" section="8"> 再嚐試。
<item><tt>hdparm -tT <var>/dev/hda</var></tt> ：測試 /dev/hda 的讀寫速度。
<item><tt>hdparm -q -c3 -d1 -u1 -m16 <var>/dev/hda</var></tt>： 加速新型的硬碟機。( 有可能照成錯誤 )
 </list>

<item><package>setcd</package>
 <list compact>
<item>光碟機讀寫最佳化軟體。.
<item><tt>setcd -x <var>2</var></tt>： 設定讀取速度為 <var>2</var>.倍速。
<item>閱讀 <manref name="setcd" section="1"> 可以得到更多資訊。
 </list>

<item><package>setserial</package>
 <list compact>
<item>串列埠管理工具集。
 </list>

<item><package>scsitools</package>
 <list compact>
<item>SCSI 裝置管理工具集。
 </list>

<item><package>memtest86</package>
 <list compact>
<item>記憶體檢測軟體。
 </list>

<item><package>hwtools</package>
 <list compact>
<item>低階硬體管理程式的集合。
  <list compact>
   <item><prgn>irqtune</prgn>: 改變硬體的 IRQ 優先權，使快速的裝置或服務可以擁有較高的優先權，比如加速串列埠數據機的產量達 3 倍等。

   <item><prgn>scanport</prgn>: 掃描 ISA 裝置從 0x100 到 0x3ff 的輸入輸出位置。
   <item><prgn>inb</prgn>: 從輸出輸入埠傾印資料並轉換成二進制和十六進制。
  </list>

 </list>

<item><package>schedutils</package>
 <list compact>
<item>Linux 程序排程工具
<item>包括了 <prgn>taskset</prgn>, <prgn>irqset</prgn>, <prgn>lsrt</prgn> 以及 <prgn>rt</prgn> 。
<item>另外還有 <prgn>nice</prgn> and <prgn>renice</prgn>(不包括)，可以全盤控制程序的排程參數。
 </list>
</list>
<p>
掛載檔案系統時加上 <tt>noatime</tt> 這個參數能提昇檔案讀寫的效率。
閱讀 <manref name="fstab" section="5"> 以及 <manref name="mount" section="8">。
<p>
部份的硬體裝置可以藉由 Linux Kernel 設定 proc 檔案系統來直接設定及最佳化。
閱讀 <ref id="proc-sys">。
<p>
Debian 納入了許多設定硬體特性的軟體。大部分的軟體都是針對筆記型電腦設計。底下是 Debian 中比較有趣的軟體：
<list compact>
<item><package>tpconfig</package> - 觸碰版設定軟體
<item><package>apmd</package> - 進階電源管理程式
<item><package>acpi</package> - 檢視 ACPI 裝置資訊的工具
<item><package>acpid</package> - 使用 ACPI 的工具集
<item><package>lphdisk</package> - 提供 Phoenix NoteBIOS 的硬體磁區休眠功能
<item><package>sleepd</package> - 設定筆記型電腦休眠狀態的軟體
<item><package>noflushd</package> - 讓閒置的硬碟可以停止運轉以節省電源
<item><package>big-cursor</package> - 提供 X 更大的滑鼠指標
<item><package>acme</package> - 啟動筆記型電腦上的多媒體功能鍵
<item><package>tpctl</package> - IBM ThinkPad 硬體裝置設定工具
<item><package>mwavem</package> - Mwave/ACP 數據機支援
<item><package>toshset</package> - Toshiba 筆記型電腦的硬體設定程式
<item><package>toshutils</package> - Toshiba 筆記型電腦相關工具
<item><package>sjog</package> - 支援 Sony Vaio 筆記型電腦上的 "Jog Dial" 的軟體
<item><package>spicctrl</package> - 調整 Sony Vaio 液晶螢幕亮度的軟體
</list>
ACPI 是一個全新的架構是且比 APM 要來的新且完整。
<p>
部份的套件需要特定的 Kernel 模組且已經納入最新的 Kernel Source 之中。如果硬體依然不支援，只好自行抓取修正檔並重新編譯 Kernel。

<sect>存取限制 ( Restricting access )

<sect1 id="loginctrl">利用 PAM 來控制登入程序
<p>
PAM (Pluggable Authentication Modules) 允許管理者控管使用者登入的方式。 
<example>
/etc/pam.d/*             # PAM 控制檔案的位置
/etc/pam.d/login         # PAM 控制登入的設定檔
/etc/security/*          # PAM 模組參數的設定檔
/etc/securetty           # 限制 root 從 console 模式下登入的設定檔
/etc/login.defs          # 登入系統之後的環境變數設定檔
</example>
<p>
如果想允許空白密碼的使用者登入系統，可以編輯 <file>/etc/pam.d/login</file> 並加入以下的訊息，此動作的風險很大，請管理者斟酌。
<example>
#auth       required   pam_unix.so nullok
auth       required   pam_permit.so
</example>
<prgn>xdm</prgn>, <prgn>gdm</prgn>...等軟體透過這樣的步驟也能允許空白密碼的使用者登入。

<p>
另一方面，使用 <package>cracklib2</package> 可以加強密碼安全機制，設定 <file>/etc/pam.d/passwd</file> 並加入以下的敘述。
<example>
password required       pam_cracklib.so retry=3 minlen=6 difok=3
</example>
使用 <prgn>passwd</prgn> 並加入 <tt>-e</tt> 這個參數會強迫使用者在下一次登入時必須修改密碼。
閱讀 <manref name="passwd" section="1"> 以取得更多的資訊。
<p>
在 Bash shell 的環境中，可以執行 <tt>ulimit -u 1000</tt> 來設定執行程序的最大值，或者直接編輯 <file>/etc/security/limits.conf</file>。
在該檔案中可以找到類似 <tt>core</tt> 的參數，試著編輯它即可。
<prgn>PATH</prgn> 的設定可以藉由 <file>/etc/login.defs</file> 的內容來初始化。

<p>
PAM 的文件被包裝在 <package>libpam-doc</package> 之中。在這個套件包裝的文件有：<em>Linux-PAM System Administrator's Guide</em>，涵蓋了如何設定 PAM 以及相關模組的說明。<em>The Linux-PAM Application Developers' Guide</em> 以及 <em>The Linux-PAM Module Writers' Guide</em>。
</sect1>

<sect1 id="wheel">"為何 GNU <prgn>su</prgn> 不支援 <tt>wheel</tt> 群組"
<p>
這是 Richard M. Stallman 的慣用語，可以在舊式的 <tt>info su</tt> 頁面底下找到。請不要擔心，目前 Debian 中的 <prgn>su</prgn> 程式是使用 PAM的，所以編輯 <file>/etc/pam.d/su</file> 並加入 <prgn>pam_wheel.so</prgn> 的敘述就可以限定那些使用者可以執行 <prgn>su</prgn>。底下以  Debian 中的 <tt>adm</tt> 群組當作範例；如何實現 BSD 中的 <tt>wheel</tt> 群組直接執行 <prgn>su</prgn> 且不需輸入密碼就能切換成 root。
<example>
# anti-RMS configuration in /etc/pam.d/su
auth       required   pam_wheel.so group=adm

# Wheel members to be able to su without a password
auth       sufficient pam_wheel.so trust group=adm
</example>

<sect1>Purposes of standard groups
<p>
比較特殊的群組：
<list compact>
<item>如果 <prgn>pam_wheel.so</prgn> 不加上 <tt>group=</tt> 參數指定群組名稱，則 <tt>root</tt> 群組便是 <prgn>su</prgn> 所定義的預設 wheel 群組。 
<item><tt>adm</tt> 群組可以讀取系統紀錄檔。 
<item><tt>cdrom</tt> 群組可以對光碟機進行存取的動作。
<item><tt>floppy</tt> 群組可以讀寫控制軟碟槽。
<item><tt>audio</tt> 群組可以讀寫音效裝置。
<item><tt>src</tt> 群組擁有管理軟體源碼的權限，比如 <file>/usr/src</file> 下的檔案存取。
<item><tt>staff</tt> 針對新上手的系統管理者或是系統諮詢帳號所規劃的群組，該群組的使用者擁有 <file>/usr/local</file> 以及 <file>/home</file> 的讀寫權。
</list>
<p>
想要了解更多的資料，請閱讀 <url id="&securing-debian-howto;" name="Securing Debian Manual"> 的 "FAQ"。Debian Woody 可以安裝 <package>&p-securing-debian-howto;</package> 套件取得該文件。<package>&p-base-passwd;</package> (>3.4.6) 更納入了權限的列表。

<sect1 id="sudo">更安全的工作環境 &ndash; <prgn>sudo</prgn>
<p>
對我而言，<prgn>sudo</prgn> 絕大部分是防止我做出愚笨的行為，使用 <prgn>sudo</prgn> 會是比直接切換成 root 更好的辦法。
<p>
安裝 <prgn>sudo</prgn> 之後，編輯好 <file><url id="&examples;" name="/etc/sudoers"></file> 就能啟動。順便檢查 <file>&dochome;sudo/OPTIONS</file> 中的 <tt>sudo</tt> 群組參數。

<p>
這個例子是說明 "staff" 群組透過 <prgn>sudo</prgn> 的設定之後便能以 root 身份執行任何程式；同樣地，"src" 群組透過 <prgn>sudo</prgn> 設定之後便能以 root 身份執行部份程式。

<p>
使用 <prgn>sudo</prgn> 的好處在於一般 user 只要輸入自己的密碼就能登入並被系統監視。
且能提供部份權限給予新上手的管理者練習。舉例來說：
<example>
$ sudo chown -R <var>myself</var>:<var>mygrp</var> .
</example>
<p>
如果你擁有 root 密碼，那麼你能以 root 權限來執行任何命令：
<example>
$ su -c "shutdown -h now"
Password:
</example>
(我知道我應該要加強管理者帳號的 <prgn>sudo</prgn> 權限。但這是我自家使用的伺服器，所以不用去煩惱這個問題。)
<p>
安裝 <package>super</package> 這個套件能夠讓一般使用者以 root 權限執行特定指令。
</sect1>
    
<sect1 id="tcpd">服務的存取限制
<p>
<em>super-server</em>, <prgn>inetd</prgn>, 在開機時被 <file>/etc/rc2.d/S20inetd</file> (for RUNLEVEL=2)呼叫並啟動，而這個檔案是 <file>/etc/init.d/inetd</file> 的一個 soft link。基本上，<prgn>inetd</prgn> 能啟動和控制其他的服務，減低系統負載度。
<p>
當一個服務對 <prgn>inetd</prgn> 送出需求時，它的通訊協定與服務可以從 <file>/etc/protocols</file> 以及 <file>/etc/services</file> 中找到，然後 <prgn>inetd</prgn> 便會搜尋 <file>/etc/inetd.conf</file> 找到適合的網際網路服務來對應，如果是 Sun-RPC 類型的服務，便會搜尋 <file>/etc/rpc.conf</file> 這一個設定檔。 
<p>
由於系統安全上的考量，請取消 <file>/etc/inetd.conf</file> 中不必要或是不使用的服務。Sun-RPC 服務需要啟動 NFS 以及其他 RPC 為主的程式。
<p>
有些時候，<prgn>inetd</prgn> 並不會直接啟動，而是透過 <prgn>tcpd</prgn> 這個 TCP/IP 服務控制程式並以 <file>/etc/inetd.conf</file> 中已定義的伺服器服務名稱來啟動。這個情況下，<prgn>tcpd</prgn> 在登入以及請求時必須使用 <file>/etc/hosts.deny</file> 以及 <file>/etc/hosts.allow</file> 進行附加的檢查，然後在執行相對應的服務程序。
<p>
如果您在新版的 &debian 上無法進行遠端登入，請將 <file>/etc/hosts.deny</file> 中的 "ALL: PARANOID" 給註解掉。
<p>
想要得知更多的資訊，請閱讀
<manref name="inetd" section="8">,  
<manref name="inetd.conf" section="5">, 
<manref name="protocols" section="5">,  
<manref name="services" section="5">,  
<manref name="tcpd" section="8">,  
<manref name="hosts_access" section="5">, 以及
<manref name="hosts_options" section="5">. 
<p>
有關 Sun-RPC 更多的訊息，請參閱
<manref name="rpcinfo" section="8">, 
<manref name="portmap" section="8">, 以及
<file>&f-portmap;</file>.

<sect1 id="ldap">集中式的認證功能 &ndash; LDAP
<p>
請使用 Use Lightweight Directory Access Protocol (LDAP)。
請參考：
<list compact>
<item><url id="&openldaphome;" name="OpenLDAP">
<item>OpenLDAP Admin Guide in the <package>openldap-guide</package> 套件
<item>LDP: <url id="&ldap-linux-howto;" name="LDAP Linux HOWTO">
<item>LDP: <url id="&ldap-implementation-howto;" name="LDAP Implementation HOWTO">
<item><url id="&ldap-use1;" name="OpenLDAP, extensive use reports">
<item><url id="&ldap-use2;" name="Open LDAP with Courier IMAP and Postfix">
</list>
</sect>


<sect id="cdrw">燒錄器
<p>
ATAPI/IDE 介面的燒錄器是越來越流行了。對於系統備份或是文件容量 &lt 640MB 的家用戶來說可是不錯的選擇。閱讀 LDP <url id="&cd-writing-howto;" name="CD-Writing-HOWTO"> 能夠得到更進階的資訊喔。

<sect1>簡介
<p>
首先，對於光碟片來說，燒錄器將資料寫入光碟片之後，已經無法回覆光碟上的資料。如果預算不是問題，建議直接購買 SCSI 介面的燒錄器來取代 ATAPI/IDE 介面的。如果要連接 IDE 裝置，請使用 PCI 匯流排(例如，在主機板上)而不要使用 ISA 匯流排( SB16 音效卡就是使用它)
<p>
如果您的燒錄器是 IDE 介面且 Kernel 為 2.2 或是 2.4 時，則需要 IDE-SCSI 來驅動燒錄功能。所以必須使用 SCSI 泛型驅動程式。底下有兩種方法可以達成上述功能，假設使用的是較新版本的 Kernel(如 2001 年三月的版本)。
<p>
Kernel 2.6 能使用原本的 IDE 驅動程式來取代 IDE-SCSI 並直接使用 <file>/dev/hd<var>x</var></file> 來存取 CD-RW 裝置。搭配 DMA 會更好。
</sect1>

<sect1>方法一：modules + <prgn>lilo</prgn>
<p>
如果您使用的是 Debian 所包裝的 kernel-image，請在 <file>/etc/lilo.conf</file> 中加入以下的字串。如果有多個選項請用空白分開：
<example>
append="hd<var>x</var>=ide-scsi ignore=hd<var>x</var>"
</example>
燒錄器的裝置代號標示法為 <tt>hd<var>x</var></tt>，其中的 <var>x</var> 代表以下的任一種硬體裝置：
<example>
hda          for a master on the first IDE port
hdb          for a slave on the first IDE port
hdc          for a master on the second IDE port
hdd          for a slave on the second IDE port
hde ... hdh  for a drive on an external IDE port or ATA66/100 IDE port
</example>
完成上述設定之後，以 root 權限執行以下的命令：
<example>
# lilo
# shutdown -h now
</example>
</sect1>


<sect1>方法二：recompile the kernel
<p>
Debian 使用 <prgn>make-kpkg</prgn> 來產生 kernel image。執行 <prgn>make-kpkg</prgn> 並加入 <tt>--append_to_version</tt> 的參數能夠建立多種 kernel images。請參閱 <ref id="kernel">。
<p>
執行 <tt>make menuconfig</tt> 加入底下的 kernel 參數與設定：
<list>
<item>bzImage
<item>Exclude the IDE CD driver (not a must, but simpler to do this)
<item>Compile in ide-scsi and sg, or make them modules
</list>
</sect1>

<sect1>設定步驟
<p>
以下的步驟可讓系統在開機時啟動燒錄器：
<example>
# echo ide-scsi &gt;&gt;/etc/modules
# echo sg       &gt;&gt;/etc/modules
# cd /dev; ln -sf scd0 cdrom
</example>
手動啟動可以這樣做：
<example>
# modprobe ide-scsi
# modprobe sg
</example>
重新開機之後，您可以用下列方式檢查：
<example>
$ dmesg|less
# apt-get install cdrecord
# cdrecord -scanbus
</example>
<p>
[Per Warren Dodge] 如果系統同時存在 CD-ROM 以及 CD-R/RW 的話，有時會造成 <tt>ide-scsi</tt> 和 <tt>ide-cd</tt> 的衝突。試著增加底下的設定到 <file>/etc/modutils/aliases</file> 並執行 <prgn>update-modules</prgn> 和重新開機：
<example>
pre-install      ide-scsi      modprobe ide-cd
</example>
這會使得 IDE 驅動程式比 <tt>ide-scsi</tt>  更早載入到核心。<tt>ide-cd</tt> 管理所有的 ATAPI CD-ROM&mdash;被指明忽略的裝置除外。剩下的裝置才由 <tt>ide-scsi</tt> 來控制。
</sect1>

<sect1>光碟映像檔 (可開機)
<p>
如何產生一個 <file>target-directory/</file> 下所有資料的光碟映像檔：<file>cd-image.raw</file>
(可開機, Joliet TRANS.TBL-enabled format; 如果不需要光碟開機，拿掉 <tt>-b</tt> 和 <tt>-c</tt> 參數)？先將一片開機磁片放入軟碟機中並執行
<example>
# dd if=<var>/dev/fd0</var> <var>target-directory/boot.img</var> 
# mkisofs -r -V <var>volume_id</var> -b <var>boot.img</var> -c <var>bootcatalog</var> -J -T \
        -o <var>cd-image.raw</var> <var>target_directory/</var>
</example>
<p>
另一個方法是產生一個開機 DOS 映像檔。假設一個開機片映像檔放在 <file><var>boot.img</var></file> 之下，則當軟碟開機時，CD-ROM 也會被驅動。您可以藉由 freeDOS 來達成這些動作。
<p>
光碟映像檔可以當成 loop 裝置來掛載。
<example>
# mount -t iso9660 -o ro,loop <var>cd-image.raw</var> /cdrom
# cd /cdrom
# mc
# umount /cdrom
</example>
</sect1>

<sect1>寫錄到燒錄機上(R, RW)：
<p>
先測試看看 (假設燒錄速度為兩倍)
<example>
# nice --10 cdrecord -dummy speed=2 dev=0,0 <var>disk.img</var>
</example>
如果無誤，則燒錄到 CD-R 只需執行以下指令
<example>
# nice --10 cdrecord -v -eject speed=2 dev=0,0 <var>disk.img</var>
</example>
或是燒錄到 CD-RW 的片子上
<example>
# nice --10 cdrecord -v -eject blank=fast speed=2 dev=0,0 <var>disk.img</var>
</example>
對於某些 CD-RW 來說，陸續的指令會好
<example>
# nice --10 cdrecord -v blank=all speed=2 dev=0,0 <var>disk.img</var>
</example>
接續如下
<example>
# nice --10 cdrecord -v -eject speed=2 dev=0,0 <var>disk.img</var>
</example>
為了預防清除 CD-RW 光碟片時出現 SCSI timeouts，則以上兩個步驟是必須的。而 <prgn>nice</prgn> 的值需要特別注意。
</sect1>

<sect1>產生一個光碟映像檔
<p>
有些版權光碟具有防拷的保護使得在使用 <prgn>dd</prgn> 時無法正確拷貝 ( Windows 98 便是其中之一 )。
您可以試用 <prgn>readcd</prgn> 這個指令來拷貝，<prgn>readcd</prgn> 包含在 <package>cdrecord</package> 套件之中。利用該軟體來複製光碟大綱以產生映像檔。如果是資料光碟，請先掛載它，並執行 <prgn>df</prgn> 來查詢光碟大小。將得到的 blocks (1 block = 1024 bytes) 數目除以 2 來取得 sector 數目 (1 sector = 2048)。
執行 <prgn>readcd</prgn> 並加入以下參數來建立映像檔並燒錄到 CD-R/RW。
<example>
# readcd dev=<var>target</var>,<var>lun</var>,<var>scsibusno</var> # select function 11
</example> 
大部分來說，只要將以上三個參數皆設為 0 就可以了。通常 <prgn>readcd</prgn> 所檢查出來的 sectors 數目都會過多！所以改用掛載時所產生的 block，sector 數目會比較好。
<p>
<prgn>dd</prgn> 對於光碟複製上可能會有些小問題。第一次執行 <prgn>dd</prgn> 時可能會產生錯誤訊息且映像檔會失去最末端的資料。第二次執行 <prgn>dd</prgn> 時如果沒指定大小，可能會產生過大的映像檔，當然，這些過多的資料都是無用的。目前解決的辦法是在執行第二次 <prgn>dd</prgn> 時指定正確的大小，第一次有錯誤時也不要退出光碟。假設由 <prgn>df</prgn> 查出來的大小為 <tt>46301184</tt> blocks，則執行以下指令兩次來取得正確的映像檔大小。(以我的經驗來說) 
<example>
# dd if=/dev/cdrom of=cd.img bs=2048 count=$((46301184/2))
</example>
</sect1>

<sect1>Debian 光碟映像檔
<p>
您可以在 <url id="&debian-cd;" name="Debian CD site"> 取得最新的 &debian; 光碟訊息。
<p>
如果您有高速網路，則可以考慮網路安裝：
<list compact>
<item>部份 <url id="&debian-floppyinst;" name="floppy images">.
<item>一個 <url id="&debian-netinst;" name="minimal bootable CD image">.
</list>
<p>
如果您的網路不夠快，則可以考慮從 <url id="&debian-venders;" name="CD vendor"> 來購買 &debian; 光碟。
<p>
除非您是映像檔測試者，否者請不要浪費頻寬來下載光碟映像檔(即使是使用 jigdo)。
<p>
另一個值得注意的光碟映像檔為 <url id="&knoppix;" 
name="KNOPPIX - Live Linux Filesystem On CD">。
您可以在光碟開機之後馬上擁有 &debian; 系統而不需安裝到硬碟內。

<!-- old document section
$ export CVSROOT=anonymous@cvs.debian.org:/cvs/debian-boot
$ cvs co debian-cd
</example>
Following is a summary of CD image creation. 
<example>
# apt-get install debian-cd
# cd /etc/debian-cd
# vim CONF.sh
$ . CONF.sh
$ make distclean
$ make status
$ make list COMPLETE=1 SIZELIMIT1=555000000 SRCSIZELIMIT=665000000
$ make official_images
 or if you want only binary images :
$ make bin-official_images
-->
</sect1>

<sect1>備份您的資料到 CD-R
<p>
如何備份重要的資料到 CD-R 呢？您可以採用備份 script <file><url id="&examples;" name='"backup"'></file>。也請留意 <ref id="archiving"> 以及 <ref id="diff-backup">。
</sect1>

<sect1>拷貝音樂光碟
<p>
我沒有測試過喔：
<example>
# apt-get install cdrecord cdparanoia
# cdparanoia -s -B
# cdrecord dev=0,0,0 speed=2 -v -dao -eject defpregap=1 -audio *.wav
</example>
或是
<example>
# apt-get install cdrdao #disk at once
# cdrdao read-cd --device /dev/cdrom --paranoia-mode 3 my_cd # read cd
# cdrdao write --device /dev/cdrom --speed 8 my_cd    # write a new CD
</example>
<prgn>cdrdao</prgn> 能夠完整複製光碟(沒有音軌空隙，等...)。
</sect1>

<sect1 id="dvd">燒錄 DVD-R，DVD-RW 和 DVD+RW
<p>
燒錄 DVD 光碟有兩種方式：
<list compact>
<item>使用 <package>growisofs</package> 並搭配 <package>mkisofs</package>。
<item>請依照 <file>&f-readmedvd;</file> 的說明重新編譯 <package>cdrecord</package> 並加入 dvd 支援來產生本地端建立的套件。
</list>
</sect1>
</sect>

<sect id="x">X 
<p>
X Window 系統是由 <url id="&xfree86home;" name="Xfree86"> 所提供的。
在 &debian; 上有兩個主要版本的 X 伺服器：
XFree86 版本 3.3(XF3) 以及 XFree86 版本 4.x(XF4)；兩者皆是以 X11R6 為基礎並由 <url id="&xorghome;" name="X.Org"> 所建構。
<p>
了解 X 的基本概念，您可以閱讀 <manref name="X" section="7">, LDP <url id="&xwindowuser-howto;" name="XWindow-User-HOWTO">, 以及 <url id="&remote-xapps-howto;" name="Remote X Apps mini-HOWTO">。
您可以閱讀 <package>xfree86-common</package> 套件中的 <file>&f-x-deb-faq;</file>，這是專對於 &debian; 的設計的使用者指南。其中 Branden Robinson 有一些有趣並且有權威的對 key binding 的討論。
<p>
<taglist>
<tag><ref id="xsrvr">
<item>此軟體將本地端主機的 X window 視窗或桌面顯示到使用者的螢幕(CRT, LCD) 並接受鍵盤與滑鼠的輸入。
<tag><ref id="xclnt">
<item>與 X 相容的應用軟體，可以在本地端或是遠地端的主機執行。
</taglist>
這些正好與一般的 "server" 和 "client" 的觀念相反。
<p>
有幾種方法可以讓 "X server" (顯示端) 接受遠端連線的 "X client" (程式端)：

<list>
<item><prgn>xhost</prgn> 方式
<list compact>
<item>主機列表機制 (很不安全)。
<item>未加密的協定 (易受到網路監聽攻擊)。
<item>如果可以，盡量不要使用。
<item>請參閱 <ref id="xhost"> 以及 <manref name="xhost" section="1x">。
</list>
<item><strong><prgn>xauth</prgn></strong> 方式
<list compact>
<item>MIT magic cookie 機制 (不算安全，但比 <prgn>xhost</prgn> 安全多)。
<item>未加密的協定 (易受到網路監聽攻擊)。
<item>如果是本地端連線，建議採用，比 <prgn>ssh -X</prgn> 更省資源。
<item>請參閱 <ref id="ss-xsu"> 以及 <manref name="xauth" section="1x">。
</list>
<item><prgn>xdm</prgn>, <prgn>wdm</prgn>, <prgn>gdm</prgn>, 
 <prgn>kdm</prgn>, ... 方式
<list compact>
<item>MIT magic cookie 機制 (不算安全，但比 <prgn>xauth</prgn> 安全多)。
<item>請參閱 <manref name="xdm" section="1x"> 以及 <manref name="Xsecurity" section="7"> 來建立簡單的存取權限控制。
<item>請參閱 <manref name="wdm" section="1x">, <manref name="gdm" section="8">, 
 和 <manref name="kdm.options" section="5"> 了解更多資訊。
<item>請閱讀 <ref id="custombootscripts"> 來了解如何在不刪除 <prgn>xdm</prgn> 套件時取消 <prgn>xdm</prgn> 並回到系統啟動的終端機畫面。
</list>
<item><strong><prgn>ssh -X</prgn></strong> 方式
<list compact>
<item>透過安全 shell 埠號轉送機制 (<strong>很安全</strong>)。
<item>加密的傳輸協定 (對於本地端使用簡直是浪費)。
<item>當遠端連線時，建議採用。
<item>請閱讀 <ref id="xssh">。
</list>
</list>
以上所有遠地端連接 X 的方式，除了 <prgn>ssh</prgn> 之外，都需要設定 X server 啟動 TCP/IP 連線，請閱讀 <ref id="xtcp">。

<sect1 id="x-system">X 套件
<p>
目前在 woody 上已經有許多 meta 套件能降低您安裝 X 系統的難度。
<taglist>
<tag><package>x-window-system-core</package>
<item>
此 metapackage 提供最基本工作站使用的 X Window 系統。它提供了 X 函式，X 伺服器 (<package>xserver-xfree86</package>)，以及一些字型和基本的 X clients 與工具。

<tag><package>x-window-system</package> 
<item>
此 metapackage 提供大部分的 XFree86 計畫的 X Window System 元件，以及一套許多有名的附屬應用程式。(包含了<package>x-window-system-core</package>、<package>twm</package>和<package>xdm</package>等組件，故安裝了它就不用再安裝<package>x-window-system-core</package>了)

<tag><package>xserver-common-v3</package> 
<item>
XFree86 3.x X 伺服器（X3）相關的軟體和工具。

<tag><package>xserver-*</package> 
<item>
X3伺服器器軟體的額外套件，包含了支援對那些新的 X4 伺服器(<package>xserver-xfree86</package>)不支援的硬體。如X4不支援某些老舊的ATI mach64卡，某些顯示卡在Woody版的X4中無法工作等等。（要獲得可用的套件，可執行 <tt>apt-cache search xserver-|less</tt>。所有這些X3伺服器均是基於<package>xserver-common-v3</package>的。）
</taglist>
<p>
大多數情況下，應該安裝<package>x-window-system</package>（如果要使用終端模式登入，需停用<package>xdm</package>，詳細方法參閱 <ref id="no-x-start">。）

<sect1 id="hdetect-x">X 的硬體偵測
<p>
在安裝系統之前只要先安裝以下軟體就能在配置 X 時偵測週邊硬體：
<list>
<item><package>discover</package> &ndash; 硬體偵測系統。
<item><package>mdetect</package> &ndash; 滑鼠自動偵測工具。
<item><package>read-edid</package> &ndash; VESA PnP 的硬體訊息監督器。
</list>

<sect1 id="xsrvr">X 伺服器
<p>
請參閱 <manref name="XFree86" section="1x"> 了解更多 X 伺服器的資訊。
<p>
從本地的終端機開啟 X 伺服器的方式:
<example>
$ startx -- :&lt;display&gt; <var>vtXX</var>
e.g.:
$ startx -- :1 vt8 -bpp 16
... start on vt8 connected to localhost:1 with 16 bpp mode
</example>
<tt>--</tt>後面接的是 X 伺服器的參數。
<p>
注意，在使用<file>~/.xserverrc</file> script 來自訂 X 伺服器啟動時所開啟的軟體時，請確定 <tt>執行</tt> 的是真正的 X 伺服器。如果沒這麼做會導致 X 伺服器啟動過慢以及退出。例如：
<example>
#!/bin/sh
exec /usr/bin/X11/X -dpi 100 -nolisten tcp
</example>

<sect2 id="config-x4">設定 X 伺服器 (Version 4)
<p>
(重新)設定 XF4 伺服器，
<example>
# dpkg-reconfigure --priority=low xserver-common
# dpkg-reconfigure --priority=low xserver-xfree86
</example>
將會產生 <file>/etc/X11/XF86Config-4</file> 文件並使用 <prgn>dexconf</prgn> script 來設定 X。 

<sect2 id="config-x3">設定 X 伺服器 (Version 3)
<p>
(重新)設定 XF3 伺服器，
<example>
# dpkg-reconfigure --priority=low xserver-common-v3
# dpkg-reconfigure --priority=low xserver-mach64
</example>
將會產生 <file>/etc/X11/XF86Config</file> 文件並使用 <prgn>xf86config-3</prgn> script 來設定 X。 

<sect2 id="manual-config-x">手動設定 X 伺服器
<p>
在 Woody 系統上，修改<file>/etc/X11/XF86Config-4</file>時，請<strong>不要修改以下文字間的設定</strong>
<!-- FIXME for XF3 -->
<example>
### BEGIN DEBCONF SECTION
[snip]
### END DEBCONF SECTION
</example>
<p>
正確的作法是 <strong>將自訂的內容加在定義段落之前</strong>。例如，新增顯示卡，可在設定檔<em>開頭</em>增加類似下面的內容：
<example>
Section "Device"
  Identifier        "Custom Device"
  Driver            "ati"
  Option            "NoAccel"
EndSection

Section "Screen"
  Identifier  "Custom Screen"
  Device      "Custom Device"
  Monitor     "Generic Monitor"
  DefaultDepth 24
  Subsection "Display"
    Depth       8
    Modes       "1280x960" "1152x864" "1024x768" "800x600" "640x480"
  EndSubsection
  Subsection "Display"
    Depth       16
    Modes       "1280x960" "1152x864" "1024x768" "800x600" "640x480"
  EndSubsection
  Subsection "Display"
    Depth       24
    Modes       "1280x960" "1152x864" "1024x768" "800x600" "640x480"
  EndSubsection
EndSection

Section "ServerLayout"
    Identifier        "Custom"
    Screen            "Custom Screen"
    InputDevice       "Generic Keyboard" "CoreKeyboard"
    InputDevice       "Configured Mouse" "CorePointer"
EndSection
</example>
<p>
在 Sarge (本文撰寫時為<tt>testing</tt> )系統上，如果您想再升級時保留使用者自訂<file>/etc/X11/XF86Config</file>的設定，請用 root 執行下列命令：
<example>
# cp /etc/X11/XF86Config-4 /etc/X11/XF86Config-4.custom
# md5sum /etc/X11/XF86Config-4 &gt; /var/lib/xfree86/XF86Config-4.md5sum
# dpkg-reconfigure xserver-xfree86
</example>
如果想美化字體，請依照 <ref id="xfs-tt"> 的說明來修改<file>/etc/X11/XF86Config-4</file>。
<!--
<p>
For XF3, in order to achieve <strong>font de-uglification</strong>, 
you need to edit the order of <tt>FontPath</tt> in
<file>/etc/X11/XF86Config</file> 
while adding <tt>:unscaled</tt> as follows.
<example>
FontPath        "/usr/X11R6/lib/X11/fonts/misc:unscaled"
FontPath        "/usr/X11R6/lib/X11/fonts/100dpi:unscaled"
FontPath        "/usr/X11R6/lib/X11/fonts/75dpi:unscaled"
FontPath        "/usr/X11R6/lib/X11/fonts/Type1"
FontPath        "/usr/X11R6/lib/X11/fonts/Speedo"
FontPath        "/usr/X11R6/lib/X11/fonts/misc"
FontPath        "/usr/X11R6/lib/X11/fonts/100dpi"
FontPath        "/usr/X11R6/lib/X11/fonts/75dpi"
</example>
<p>
If you use xfs serves fonts via a Unix Domain Socket, you may also edit
<tt>catalogue</tt> entry of <file>/etc/X11/fs/config</file> as:
<example>
catalogue = /usr/X11R6/lib/X11/fonts/misc:unscaled,
            /usr/X11R6/lib/X11/fonts/100dpi:unscaled,
            /usr/X11R6/lib/X11/fonts/75dpi:unscaled,
            /usr/X11R6/lib/X11/fonts/Type1,
            /usr/X11R6/lib/X11/fonts/Speedo,
            /usr/X11R6/lib/X11/fonts/misc,
            /usr/X11R6/lib/X11/fonts/100dpi,
            /usr/X11R6/lib/X11/fonts/75dpi,
</example>
<p>
These <tt>:unscaled</tt> tricks are deprecated in new XF4 and no longer
needed.
-->
<!-- per /usr/share/doc/xfree86-common/README.fonts.gz in 4.2.1 -->
<p>
並檢查其餘的 X 設定。不良的螢幕設定可能會造成更多比難看字型的問題，所以請調高您的螢幕更新頻率(85 Hz 不錯，75 Hz 還可以，60 Hz 就很糟了)。

<sect1 id="xclnt">X clients 
<p>
絕大多數的 X client 軟體都能用類似下面的命令啟動：
<example>
client $ xterm -geometry 80x24+30+200 -fn 6x10 -display <var>hostname</var>:0 &amp;
</example>
命令行中個參數的意義如下：
<list>
<item><tt>-geometry <var>WIDTH</var>x<var>HEIGHT</var>+<var>XOFF</var>+<var>YOFF</var></tt>：
視窗的初始尺寸與位置。

<item><tt>-fn <var>FONTNAME</var></tt>：用來顯示文字的字體。
 <tt><var>FONTNAME</var></tt> 可以是：
<list compact>
<item>a14: 普通字體
<item>a24: 大型字體
<item>... (使用<tt>xlsfont</tt>查詢可用的字體。)
</list>
<item><tt>-display <var>displayname</var></tt>: X server 的名稱。
 <tt><var>displayname</var></tt> 可以是：
<list compact>
<item><tt><var>hostname</var>:<var>D.S</var></tt>表示在名為<tt><var>hostname</var></tt>的主機的螢幕 <tt><var>D</var></tt> 上顯示的稱為 screen <tt><var>S</var></tt>；使用螢幕 D 的 X server 所間聽 TCP 埠號為 6000+D。

<item><tt><var>host</var>/unix:<var>D.S</var></tt>表示在<tt><var>host</var></tt> 主機的螢幕<var>D</var>上所顯示的稱為 screen <tt><var>S</var></tt>； 使用螢幕 D 的 X server 所監聽 <file>/tmp/.X11-unix/XD</file> (所以只能從主機 <tt><var>host</var></tt> 登入。

<item><tt><var>:D.S</var></tt>就是代表 <tt><var>host</var>/unix:<var>D.S</var></tt>，其中 <tt><var>host</var></tt>本地主機名稱。
</list>
</list>
<p>
預設的 X client 程式(應用端)的 <tt><var>displayname</var></tt> 可透過 DISPLAY 環境變數來設定。例如，在執行某 X client 軟體之前，執行下列命令之一就可以完成設定工作： 
<example>
$ export DISPLAY=:0 
        # 預設情況下，本地主機使用第一個 X screen
$ export DISPLAY=<var>hostname.fulldomain.name</var>:0.2
$ export DISPLAY=localhost:0
</example>
軟體啟動程序可以在 <file>~/.xinitrc</file> 中自定。例如：
<example>
xrdb -load $HOME/.Xresources
xsetroot -solid gray &amp;
xclock -g 50x50-0+0 -bw 0 &amp;
xload -g 50x50-50+0 -bw 0 &amp;
xterm -g 80x24+0+0 &amp;
xterm -g 80x24+0-0 &amp;
twm
</example>
如 <ref id="custom-x">所提到的，<prgn>startx</prgn> 不理會 <prgn>Xsession</prgn> 所有的常規操作。通常使用 <file>~/.xsession</file> 僅做為最後的辦法。 
請參閱<manref name="xsetroot" section="1x">，<manref name="xset" section="1x">以及<ref id="xresources">。
</sect1>

<sect1 id="x-session">X sessions
<p>
啟動 X session (X server + X client) 的方式如下：
<list compact>
<item><prgn>startx</prgn>：文字介面下用來啟動 X server 與 client 的 <prgn>xinit</prgn> 指令集。如果 <file>~/.xinitrc</file> 不存在，擇<file>/etc/X11/Xsession</file> 會透過執行 <file>/etc/X11/xinit/xinitrc</file> 時呼叫。
<item><prgn>xdm</prgn>, <prgn>gdm</prgn>, <prgn>kdm</prgn>, or
      <prgn>wdm</prgn>：X 顯示管理程式，用來啟動 X server 與 X client 且直接在 X 下控管帳號的登入。<file>/etc/X11/Xsession</file> 也會被呼叫。
</list>
請參閱 <ref id="no-x-start"> 了解從終端機啟動 X 的資訊。

<sect2 id="custom-x">自定 X sessions
<p>
預設的啟動 script <file>/etc/X11/Xsession</file>是<file>/etc/X11/Xsession.d/50xfree86-common_determine-startup</file> 以及<file>/etc/X11/Xsession.d/99xfree86-common_start</file> 的組合。
<p>
<file>/etc/X11/Xsession</file>的執行會受到<file>/etc/X11/Xsession.options</file>的影響，基本上，它使用<prgn>exec</prgn>命令執行系統中的程式，讀取的順序如下：
<enumlist compact>
<item><file>~/.xsession</file> or <file>~/.Xsession</file>，如果它被定義的話。
<item><file>/usr/bin/x-session-manager</file>，如果它被定義的話。
<item><file>/usr/bin/x-window-manager</file>，如果它被定義的話。
<item><file>/usr/bin/x-terminal-emulator</file>，如果它被定義的話。
</enumlist>
<p>
&debian; alternative 系統對這些命令有詳細的說明，請參閱 <ref id="alternatives">。
例如：
<example>
# update-alternatives --config x-session-manager
... or
# update-alternatives --config x-window-manager
</example>
如果想定義某 X 視窗管理程式為預設，同時保留已安裝的GNOME和KDE的session管理程式，可用<url id="&bug-xfree;"> 中第二個錯誤報告所附的檔案替換<file>/etc/X11/Xsession.d/50xfree86-common_determine-startup</file>（我希望它能早日加到發行版中），然後按下面的方法編輯<file>/etc/X11/Xsession.options</file>取消Xsession管理程式：

<example>
# /etc/X11/Xsession.options
#
# configuration options for /etc/X11/Xsession
# See Xsession.options(5) for an explanation of the available options.
# Default enabled
allow-failsafe
allow-user-resources
allow-user-xsession
use-ssh-agent
# Default disabled (enable them by uncommenting)
do-not-use-x-session-manager
#do-not-use-x-window-manager
</example>
<p>
如果不想按照上述的方法修改系統，則<package>gnome-session</package> 以及 <package>kdebase</package> 所附的 X session 管理程式就變成預設的了。移除掉他們的話，X 視窗管理程式就變成預設的視窗管理程式。(廢話，還有更好的主意嗎？)
<p>
對於那些 <file>/etc/X11/Xsession.options</file> 只包含一行 <tt>allow-user-xsession</tt> 的系統而言，任何定義了<file>~/.xsession</file> 或 <file>~/.Xsession</file>的使用者均可以自行定義<file>/etc/X11/Xsession</file>的行為。
<p>
<file>~/.xsession</file> 檔案中的最後一行命令，其格式應該為<tt>exec <var>some-window/session-manager</var></tt>，用來啟動您喜歡的 X 視窗/session 管理程式。
<p>
<file>&f-xsession;</file> 提供了一個相當不錯的<file>&f-xsession;</file> 範例。
<p>
我使用它來設定每一個使用者的視窗管理員，screen 存取以及語言支援。請參閱<ref id="s-w-manager">、<ref id="ss-xsu">、<ref id="x-cjk">。
<p>
如果您希望某些 X client 軟體可以自動啟動，請參閱<ref id="xclnt"> 的範例並寫到<file>~/.xsession</file>來取代<file>~/.xinitrc</file>。

<p>
使用者新增的 X 資源(resources)可以儲存在<file>~/.Xresources</file>，請參閱<ref id="xresources">。
<p>
使用者自訂的鍵盤與滑鼠按鍵配置檔是存放在<file>~/.xmodmaprc</file>。請參閱 <ref id="xmodmap">。

<sect2 id="s-w-manager">針對使用者啟動 X Session
<p>
依照 <ref id="custom-x"> 這一節所描述的，要啟動使用者自訂的 X session/window manager 可透過安裝相對應的軟體並在 <file>~/.xsession</file> 的最後加入以下內容
(我偏好 <package>blackbox</package>/<package>fluxbox</package> 因為簡潔快速。)：

<list>
<item>預設的 X session manager
<list compact>
<item>參閱 <ref id="alternatives">
<item><tt>exec /usr/bin/x-session-manager</tt>
</list>
<item>預設的 X window manager 
<list compact>
<item>參閱 <ref id="alternatives">
<item><tt>exec /usr/bin/x-window-manager</tt>
</list>

<item>GNOME session manager (loaded)
<list compact>
<item>須安裝的套件: <package>gnome-session</package>
<item><tt>exec /usr/bin/gnome-session</tt>
</list>

<item>KDE session manager (loaded)
<list compact>
<item>須安裝的套件: <package>kdebase</package> (or 
<package>kdebase3</package> for KDE3)
<item><tt>exec /usr/bin/kde2</tt>
</list>

<item>Blackbox window manager (lightweight, slick)
<list compact>
<item>須安裝的套件: <package>blackbox</package>
<item><tt>exec /usr/bin/blackbox</tt>
</list>

<item>Fluxbox window manager (lightweight, new blackbox)
<list compact>
<item>須安裝的套件: <package>fluxbox</package>
<item><tt>exec /usr/bin/fluxbox</tt>
</list>

<item>Xfce window manager (Mac OS-X, SUN CDE&ndash;like)
<list compact>
<item>須安裝的套件: <package>xfce</package>
<item><tt>exec /usr/bin/xfwm</tt>
</list>

<item>IceWM window manager (lightweight, GNOME alternative)
<list compact>
<item>須安裝的套件: <package>icewm</package>
<item><tt>exec /usr/bin/X11/icewm</tt>
</list>

<item>FVWM2 virtual window manager (lightweight, Win95-like)
<list compact>
<item>須安裝的套件: <package>fvwm</package>
<item><tt>exec /usr/bin/fvwm2</tt>
</list>

<item>Windowmaker window manager (somewhat NexT-like)
<list compact>
<item>須安裝的套件: <package>wmaker</package>
<item><tt>exec /usr/bin/wmaker</tt>
</list>

<item>Enlightenment window manager (loaded)
<list compact>
<item>須安裝的套件: <package>enlightenment</package>
<item><tt>exec /usr/bin/enlightenment</tt>
</list>

</list>
參閱 <url id="&windomanagerhome;" name="Window Managers for X">.


<sect2 id="kde-gnome">配置 KDE/GNOME
<p>
要建立完整的 KDE/GNOME 桌面環境，下列的綜合套件是很有用的：
<list compact>
<item>KDE: 安裝 <package>kde</package> 套件
<item>GNOME: 安裝 <package>gnome</package> 套件
</list>
使用能夠額外安裝 <tt>Recommends</tt> 的套件管理程式，如 <prgn>dselect</prgn> and <prgn>aptitude</prgn>，將會提供比 <prgn>apt-get</prgn> 更豐富的軟體供您選擇。
<p>
如果想從 console 登入，請確定先取消 X display managers，例如 <package>kdm</package>，<package>gdm</package>以及<package>wdm</package>，這會影響<ref id="no-x-start"> 這一節中所提及的關聯性問題。
<p>
如果您想使用 GNOME 取代 KDE 來當視窗管理程式的話，請參閱 <ref id="alternatives"> 的方法來設定 <prgn>x-session-manager</prgn>。

<sect1 id="xtcp">Using X over TCP/IP
<p>
Because a remote TCP/IP socket connection without encryption is prone 
to an eavesdropping attack, the default setting for X in recent 
&debian; versions disables the TCP/IP socket.  Consider using <prgn>ssh</prgn> 
for a remote X connection (see <ref id="xssh">). 
<p>
The method described here is not encouraged unless one is in a very secure 
environment behind a good firewall system with only trusted users present.
Use the following command to verify your current X server setting for the
TCP/IP socket:
<example>
# find /etc/X11 -type f -print0 | xargs -0 grep nolisten
/etc/X11/xinit/xserverrc:exec /usr/bin/X11/X -dpi 100 -nolisten tcp
</example>
Remove <tt>-nolisten</tt> to restore TCP/IP listening on the X server.
</sect1>
 
<sect1 id="xhost">Connecting to a remote X server &ndash; <prgn>xhost</prgn>
<p>
<prgn>xhost</prgn> allows access based on hostnames. This is very insecure.
The following will disable host checking and allow connections from anywhere 
if a TCP/IP socket connection is allowed (see <ref id="xtcp">):
<example>
$ xhost +
</example>
You can re-enable host checking with:
<example>
$ xhost -
</example>
<p>
<prgn>xhost</prgn> does not distinguish between different users on the 
remote host. Also, hostnames (addresses actually) can be spoofed. 
<p>
This method must be avoided even with more restrictive host criteria
if you're on an untrusted network (for instance with dial-up PPP
access to the Internet).  參閱 <manref name="xhost" section="1x">.
</sect1>

<sect1 id="xssh">Connecting to a remote X server &ndash; <prgn>ssh</prgn>
<p>
The use of <prgn>ssh</prgn> enables a secure connection from a local X server 
to a remote application server.  
<list>
<item>Set <tt>X11Forwarding</tt> and <tt>AllowTcpForwarding</tt> entries 
to <tt>yes</tt> in <file>/etc/ssh/sshd_config</file> of the remote host,
if you want to avoid corresponding command-line options.
<item>Start the X server on the local host.
<item>Open an <prgn>xterm</prgn> in the local host.
<item>Run <prgn>ssh</prgn> to establish a connection with the remote site.  
<example>
localname @ localhost $ ssh -q -X -l loginname remotehost.domain
Password:
.....
</example>
<item>Run X application commands on the remote site.
<example>
loginname @ remotehost $ gimp &
</example>
</list>
This method allows the display of the remote X client output as if it 
were locally connected through a local UNIX domain socket.
</sect1>

<sect1 id="xtermfaq">The X terminal emulator &ndash; <prgn>xterm</prgn>
<p>
Learn everything about <prgn>xterm</prgn> at <url id="&xtermfaq;">.
</sect1>

<sect1 id="xresources">X resource
<p>
Many older X programs, such as <prgn>xterm</prgn>, use the X resource database
to configure their appearance.  The file <file>~/.Xresources</file> is used
to store user resource specifications.  This file is automatically
merged into the default X resources upon login. The system-wide defaults of 
X resources are stored in <file>/etc/X11/Xresources/*</file> and application 
defaults of them are stored in <file>/etc/X11/app-defaults/*</file>.  Use
these settings as the starting points.

<p>
Here are some helpful settings to add to your
<file>~/.Xresources</file> file:
<example>
! Set the font to a more readable 9x15
XTerm*font: 9x15

! Display a scrollbar
XTerm*scrollBar: true

! Set the size of the buffer to 1000 lines
XTerm*saveLines: 1000

! Large kterm screen
KTerm*VT100*fontList: -*-fixed-medium-r-normal--24-*,\
 -*-gothic-medium-r-normal--24-*,\
 -*-mincho-medium-r-normal--24-*
</example>
To make these settings take effect immediately, merge them into the
database using the command:
<example>
xrdb -merge ~/.Xresources
</example>
See <manref name="xrdb" section="1x">.

<sect1 id="xmodmap">Keymaps and pointer button mappings in X
<p>
The <prgn>xmodmap</prgn> program is used to edit and display the
keyboard  modifier map  and  keymap  table that are used by client
applications to convert event keycodes into keysyms in X.
<example>
$ xmodmap -pm 
 ... display the current modifier map
$ xmodmap -pk | pager
 ... display the current keymap table
$ xmodmap -e "pointer = 3 2 1" # set mouse for the left hand.
$ xmodmap ~/.xmodmaprc # set keyboad as in ~/.xmodmaprc
</example>
It is usually run from the user's session startup script,
<file>~/.xsession</file>. 
<!--
User-customized keymaps and pointer button mappings in X can be
specified in <file>~/.xmodmaprc</file>.
-->
<p>
To get the <tt>keycode</tt>, run <prgn>xev</prgn> in X and press keys.
To get the meaning of <tt>keysym</tt>, look into the MACRO definition in
<file>/usr/include/X11/keysymdef.h</file> file.  All the
<tt>#define</tt> statements in this file are named as <tt>XK_</tt>
prepended to the <tt>keysym</tt> names.
<p>
See <manref name="xmodmap" section="1x">.

<sect1 id="ss-xsu">Getting root in X
<p>
If a GUI program needs to be run with root privilege, use the following
procedures to display program output on a user's X server.
<strong>Never attempt to start an X server directly from the root
account</strong> in order to avoid possible security risks.
<p>
Start the X server as a normal user and open an <prgn>xterm</prgn> console.
Then:
<example>
$ XAUTHORITY=$HOME/.Xauthority
$ export XAUTHORITY
$ su root
Password:*****
# printtool &
</example>
When using this trick to <prgn>su</prgn> to a non-root user, make
sure <file>~/.Xauthority</file> is group readable by this non-root user.
<p>

<!-- this section moved up -->

To automate this command sequence, create a file
<file>~/.xsession</file> from the user's account, containing the following
lines:
<example>
# This makes X work when I su to the root account.
if [ -z "$XAUTHORITY" ]; then
        XAUTHORITY=$HOME/.Xauthority
        export XAUTHORITY
fi
unset XSTARTUP
# If a particular window/session manager is desired, uncomment
# the following and edit it to fit your needs.
#XSTARTUP=/usr/bin/blackbox
# This starts x-window/session-manager program
if [ -z "$XSTARTUP" ]; then
  if [ -x /usr/bin/x-session-manager ]; then
    XSTARTUP=x-session-manager
  elif [ -x /usr/bin/x-window-manager ]; then
    XSTARTUP=x-window-manager
  elif [ -x /usr/bin/x-terminal-emulator ]; then
    XSTARTUP=x-terminal-emulator
  fi
fi
# execute auto selected X window/session manager
exec $XSTARTUP
</example>
Then run <prgn>su</prgn> (not <tt>su -</tt>) in an
<prgn>xterm</prgn> window of the user.  Now GUI programs started from this
<prgn>xterm</prgn> can display output on this user's X window while running
with root privilege.  This trick works as long as the default 
<file>/etc/X11/Xsession</file> is
executed.  If a user set up his customization using <file>~/.xinitrc</file>
or <file>~/.xsession</file>, the above mentioned environment
variable <tt>XAUTHORITY</tt> needs to be set similarly in those scripts.

<p>Alternatively, <package>sudo</package> can be used to automate the command sequence:
<example>
$ sudo xterm
... or
$ sudo -H -s
</example>
Here <file>/root/.bashrc</file> should contain:
<example>
if [ $SUDO_USER ]; then
    sudo -H -u $SUDO_USER xauth extract - $DISPLAY | xauth merge -
fi
</example>
This works fine even with the home directory of the user on an NFS
mount, because root does not read the <file>.Xauthority</file> file.
<p>
There are also several specialized packages for this purpose:
<package>kdesu</package>, <package>gksu</package>, <package>gksudo</package>,
<package>gnome-sudo</package>, and <package>xsu</package>.  Some
other methods can be used to achieve similar results: creating a symlink from
<file>/root/.Xauthority</file> to the user's corresponding one; use of the
script <url id="&suxhome;" name="sux">; or putting "<tt>xauth merge
~<var>USER_RUNNING_X</var>/.Xauthority</tt>" in the root initialization script.
<p>
See more on the <url id="&deb-dev-su;" name="debian-devel mailing list">.
</sect1>

<sect1 id="xfs-tt">TrueType fonts in X
<p>
The standard <prgn>xfs</prgn> in XFree86-4 works fine with TrueType
fonts.  You have to install a third-party font server such as
<prgn>xfs-xtt</prgn>, if you are using XFree86-3.
<p>
You just need to make sure that whatever applications you want to use the
TrueType fonts are linked against libXft or libfreetype (you probably
don't even have to worry about this if you're using pre-compiled
.debs).
<p>
First set up font support infrastructure:
<list compact>
<item>Install <package>x-ttcidfont-conf</package> and
<package>defoma</package> packages. This automates generation of the
<file>fonts.scale</file> and <file>fonts.dir</file> files.
<example>
# apt-get install x-ttcidfont-conf
</example>
<item>Edit <file>/etc/X11/XF86Config-4</file> in the <tt>Section "Files"</tt>
as:
<example>
Section "Files"
    FontPath  "/var/lib/defoma/x-ttcidfont-conf.d/dirs/TrueType"
    FontPath  "/usr/share/fonts/truetype"
    FontPath  "/usr/lib/X11/fonts/CID"
    FontPath  "/usr/lib/X11/fonts/Speedo"
    FontPath  "/usr/lib/X11/fonts/misc"
    FontPath  "/usr/lib/X11/fonts/cyrillic"
    FontPath  "/usr/lib/X11/fonts/100dpi:unscaled"
    FontPath  "/usr/lib/X11/fonts/75dpi:unscaled"
    FontPath  "/usr/lib/X11/fonts/Type1"
EndSection
</example>
The first line will setup XFree86 to use any TrueType fonts you install
from &debian; packages.  
Type1 font entry is moved down since XFree86 does a rather poor job of
rendering Type1 fonts.
The <tt>:unscaled</tt> trick for bitmap fonts should not be needed for
new XF4 anymore but I included it here just be sure.
<!-- per /usr/share/doc/xfree86-common/README.fonts.gz in 4.2.1 -->
<p>
In order to preserve manual changes of <file>/etc/X11/XF86Config-4</file>
follow instructions in <ref id="manual-config-x">.
</list>
<p>
Then install DFSG font packages:
<list compact>
<item>Western TrueType fonts:
<list compact>
<item><package>ttf-bitstream-vera</package>: A set of high-quality
TrueType fonts created by Bitstream, Inc.
<footnote>
Though this is not available in Woody, you can install this from Sarge.
</footnote>
<item><package>ttf-freefont</package>: A set of free high-quality
TrueType fonts covering the UCS character set.
<item><package>ttf-thryomanes</package>: A TrueType Unicode font
covering Latin, Greek, Cyrillic, and IPA.
</list>
<item>Asian fonts:
<list compact>
<item><package>tfm-arphic-bsmi00lp</package>: Chinese Arphic "AR PL
Mingti2L Big5" TrueType font TeX font metric data
<item><package>tfm-arphic-bkai00mp</package>: Chinese Arphic "AR PL
KaitiM Big5" TrueType font TeX font metric data
<item><package>tfm-arphic-gbsn00lp</package>: Chinese Arphic "AR PL
SungtiL GB" TrueType font TeX font metric data
<item><package>tfm-arphic-gkai00mp</package>: Chinese Arphic "AR PL
KaitiM GB" TrueType font TeX font metric data
<item><package>ttf-baekmuk</package>: Korean Baekmuk series TrueType fonts
<item><package>hbf-jfs56</package>: Chinese Jianti Fangsong 56x56 bitmap
font (GB2312) for CJK
<item><package>hbf-cns40-b5</package>: Chinese Fanti Song 40x40 bitmap
font (Big5) for CJK
<item><package>hbf-kanji48</package>: Japanese Kanji 48x48 bitmap font
(JIS X-0208) for CJK
</list>
</list>
<!-- Need to watch Japanese font issue -->
<p>
Since <strong>Free</strong> fonts are sometimes limited, installing
or sharing some commercial TrueType fonts is an option for a &debian;
users. In order to make this process easy for the user, 
some convenience packages have been created:
<list compact>
<item><package>ttf-commercial</package>
<item><package>msttcorefonts (>1.1.0)</package>
<footnote>
The package in Woody does not work as of 8/2002 due to a change in
Microsoft's website.  Use Sarge version even in Woody instead.
</footnote>
</list>
You'll have a really good selection of TrueType fonts at the expense of
contaminating your <strong>Free</strong> system with non-Free fonts.

<p>
All these font packages in &debian; should work without any efforts
and appear available to all X programs that use the
regular "core" font system.  This includes things like Xterm, Emacs, and
most other non-KDE and non-GNOME applications.
<p>
Now, run <prgn>xfontsel</prgn> and select any TrueType fonts in the
fndry menu, you should be able to see many ungrayed out
entries in the "fmly" menu.
<p>
For KDE2.2 and GNOME1.4 (with libgdkxft0, which is a hack to get GTK 1.2
to do anti-aliased font rendering), you need to setup Xft1, as well.
Xft1 is highly deprecated, and is basically only used by GNOME1.4 and
KDE2.2.  Edit <file>/etc/X11/XftConfig</file> and add a line like
<example>
    dir "/var/lib/defoma/x-ttcidfont-conf.d/dirs/TrueType"
</example>
<p>
before the other dir lines.  
<footnote>
I don't have any xft1 stuff on my machine
anymore, so I'm not sure if you need to restart X or not before this
change will take effect.  I seem to remember that "xftcache" would
update the Xft1 cache, but it'd be good if someone could confirm that
for me.
</footnote>
<p>
For GNOME2 and KDE3 (post Sarge release), you need to setup
<package>fontconfig</package> which Xft2 uses to find fonts. 
<footnote>
<package>Fontconfig</package> does not exist in Woody.  
</footnote>
You shouldn't need to install anything extra for this
because every package using <package>fontconfig</package> Depends
on it (indirectly) already.
<p>
First, look in <file>/etc/fonts/fonts.conf</file>.  There should be a
line like the one below.  If not, open up
<file>/etc/fonts/local.conf</file> and add this
<example>
    &lt;dir&gt;/var/lib/defoma/x-ttcidfont-conf.d/dirs/TrueType&lt;/dir&gt;
</example>
just after the &lt;fontconfig&gt; line.
<p>
<package>Fontconfig</package> should pick these up immediately, and
"fc-list" should list your new fonts.  Another neat feature of
<package>fontconfig</package> is that you can just drop fonts in
<file>~/.fonts/</file> and all your fontconfigified programs will have
access to them immediately.
<p>
If you manually install a new set of TrueType fonts while in X without
using &debian; package, run
<example>
# xset fp rehash
</example>
to get XFree86 to look at the contents of that directory again and to
pickup new ones.

<sect1 id="ss-browser">Web Browser in X
<p>
There are a few web browser packages with graphical display capabilities
as of the Woody release:
<list compact>
<item><package>mozilla</package> The Mozilla browser (new)
<item><package>galeon</package> Mozilla-based browser with a Gnome UI (new)
<item><package>konqueror</package> KDE browser
<item><package>dillo</package> GTK browser
<item><package>amaya-gtk</package> W3C reference browser
<item><package>amaya-lesstif</package> W3C reference browser
<item><package>netscape-...</package> (many, old)
<item><package>communicator-...</package> (many, old)
<item>...
</list>
The version of <package>mozilla</package> must match 
the version that <package>galeon</package> requires.  Although they differ in
UI, these two programs share the Gecko HTML rendering engine.
<p>
Plug-ins for browsers such as <package>mozilla</package> and
<package>galeon</package> can be enabled by installing "<tt>*.so</tt>" 
manually in the plug-in directory and restarting the browsers.
<p>
Plug-in resources:
<list compact>
<item>Java plug-in: install binary "J2SE" from <url id="&javasunhome;">.
<item>Flash plug-in: install binary "Macromedia Flash Player 5" from
 <url id="&flashhome;">.
<item><package>freewrl</package>: VRML browser and Netscape plug-in
<item>...
</list>
</sect1>

<!-- CJK and X moved to bottom with different name to locale section -->

</sect>

<sect id="ssh">SSH
<p>
SSH (Secure SHell) is the secure way to connect over the Internet.  A free
version of SSH called OpenSSH is available as the <package>ssh</package>
package in &debian;.

<sect1 id="ssh-basics">Basics of SSH
<p>
First install the OpenSSH server and client.
<example>
# apt-get update && apt-get install ssh
</example>
The non-US entry in the <file>/etc/apt/source.list</file> is required.
<file>/etc/ssh/sshd_not_to_be_run</file> must not be present if one wishes to 
run the OpenSSH server.
<p>
SSH has two authentication protocols:
<list>
<item>SSH protocol version 1: 
 <list compact>
<item>Potato version only supports this protocol.
<item>available authentication methods:
  <list compact>
<item>RSAAuthentication: RSA identity key based user authentication
<item>RhostsAuthentication: .rhosts based host authentication 
 (insecure, disabled)
<item>RhostsRSAAuthentication: .rhosts authentication combined with 
 RSA host key (disabled)
<item>ChallengeResponseAuthentication: RSA challenge-response authentication
<item>PasswordAuthentication: password based authentication
  </list>
 </list>
<item>SSH protocol version 2: 
 <list compact>
<item>post-Woody versions use this as the primary protocol.
<item>available authentication methods:
  <list compact>
<item>PubkeyAuthentication: public key based user authentication
<item>HostbasedAuthentication: <file>.rhosts</file> or
 <file>/etc/hosts.equiv</file> authentication 
 combined with public key client host authentication  (disabled)
<item>ChallengeResponseAuthentication: challenge-response authentication
<item>PasswordAuthentication: password based authentication
  </list>
 </list>
</list>

<p>
Be careful about these differences if you are migrating to Woody or using 
a non-&debian; system.  
<p>
參閱 <file>/usr/share/doc/ssh/README.Debian.gz</file>,
<manref name="ssh" section="1">, 
<manref name="sshd" section="8">,
<manref name="ssh-agent" section="1">, and
<manref name="ssh-keygen" section="1"> for details.

<p>
Following are the key configuration files:

<list>

<item><file>/etc/ssh/ssh_config</file>: SSH client defaults.
 參閱 <manref name="ssh" section="1">.  Notable entries are:

 <list compact>
<item><tt>Host</tt>: Restricts the following declarations 
  (up to the next Host keyword) to be only for those hosts 
   that match one of the patterns given after the keyword.
<item><tt>Protocol</tt>: Specifies the SSH protocol versions.  
 The default is "2,1".
<item><tt>PreferredAuthentications</tt>: Specifies the SSH2 client 
 authentication method.  The default is 
"hostbased,publickey,keyboard-interactive,password".
<item><tt>PasswordAuthentication</tt>: If you want to log in with 
 a password, you have to make sure this is not set <tt>no</tt>.
<item><tt>ForwardX11</tt>: The default is disabled.  This can be
 overridden by the command-line option "<tt>-X</tt>".
 </list>

<item><file>/etc/ssh/sshd_config</file>: SSH server defaults.
 參閱 <manref name="sshd" section="8">.  Notable entries are:

 <list compact>
<item><tt>ListenAddress</tt>: Specifies the local addresses 
 <prgn>sshd</prgn> should listen on. Multiple options are permitted.
<item><tt>AllowTcpForwarding</tt>: The default is disabled.  
<item><tt>X11Forwarding</tt>: The default is disabled.  
 </list>

<item><file>$HOME/.ssh/authorized_keys</file>: the lists of the default 
public keys that clients use to connect to this account on this host.
參閱 <manref name="ssh-keygen" section="1">.

<item><file>$HOME/.ssh/identity</file>: 
參閱 <manref name="ssh-add" section="1">
and <manref name="ssh-agent" section="1">.
</list>

<p>
The following will start an <prgn>ssh</prgn> connection from a client.
<example>
$ ssh username@hostname.domain.ext
$ ssh -1 username@hostname.domain.ext # Force SSH version 1
$ ssh -1 -o RSAAuthentication=no -l username foo.host
    # force password on SSH1
$ ssh -o PreferredAuthentications=password -l username foo.host
    # force password on SSH2
</example>
For the user, <prgn>ssh</prgn> functions as a smarter and more secure 
<prgn>telnet</prgn> (will not bomb with ^]).

</sect1>

<sect1 id="ssh-forward">Port forwarding for SMTP/POP3 tunneling
<p>
To establish a pipe to connect to port 25 of <var>remote-server</var> from port 4025 of
localhost, and to port 110 of <var>remote-server</var> from port 4110 of localhost
through <prgn>ssh</prgn>, execute on the local machine:
<example>
# ssh -q -L 4025:remote-server:25 4110:remote-server:110 \
           username@remote-server
</example>
This is a secure way to make connections to SMTP/POP3 servers over the Internet.
Set the <tt>AllowTcpForwarding</tt> entry to <tt>yes</tt> in 
<file>/etc/ssh/sshd_config</file> of the remote host.
</sect1>

<sect1 id="ssh-rsa">Connecting with fewer passwords &ndash; RSA
<p>
One can avoid having to remember a password for each remote system by using
RSAAuthentication (SSH1 protocol) or PubkeyAuthentication (SSH2 protocol).  
<p>
On the remote system, set the respective entries,
"RSAAuthentication yes" or "PubkeyAuthentication yes", in 
<file>/etc/ssh/sshd_config</file>.
<p>
Then generate authentication keys locally and install the public key
on the remote system:
<example>
$ ssh-keygen          # RSAAuthentication: RSA1 key for SSH1
$ cat .ssh/identity.pub | ssh user1@remote \
        "cat - &gt;&gt;.ssh/authorized_keys"
...
$ ssh-keygen -t rsa   # PubkeyAuthentication: RSA key for SSH2
$ cat .ssh/id_rsa.pub | ssh user1@remote \
        "cat - &gt;&gt;.ssh/authorized_keys"
...
$ ssh-keygen -t dsa   # PubkeyAuthentication: DSA key for SSH2
$ cat .ssh/id_dsa.pub | ssh user1@remote \
        "cat - &gt;&gt;.ssh/authorized_keys"
</example>
One can change the passphrase later with "<tt>ssh-keygen -p</tt>".
Make sure to verify settings by testing the connection.  In case of any
problem, use "<tt>ssh -v</tt>".
<p>
You can add options to the entries in <prgn>authorized_keys</prgn> to limit
hosts and to run specific commands. 參閱 <manref name="sshd" section="8"> for details.
<p>
Note that SSH2 has <tt>HostbasedAuthentication</tt>. For this to work, 
you must adjust the settings of <tt>HostbasedAuthentication</tt> to <tt>yes</tt> in 
both <file>/etc/ssh/sshd_config</file> on the server machine and 
<file>/etc/ssh/ssh_config</file> or <file>$HOME/.ssh/config</file> on 
the client machine.
</sect1>

<sect1 id="ssh-client">Dealing with alien SSH clients
<p>
There are a few free SSH clients available for non-Unix-like platforms.
<taglist>
<tag>Windows
<item><url id="&puttyhome;" name="puTTY"> (GPL)
<tag>Windows (cygwin)
<item>SSH in <url id="&cygwinhome;" name="cygwin"> (GPL)
<tag>Macintosh Classic
<item><url id="&macsshhome;" name="macSSH"> (GPL) [Note that Mac OS X
  includes OpenSSH; use <tt>ssh</tt> in the Terminal application]
</taglist>
See also <url id="&sfdochome;" name="SourceForge.net, site documentation">, 
"6. CVS Instructions".

<sect1 id="ssh-agent">Setting up <prgn>ssh-agent</prgn>
<p>
It is safer to protect your SSH authentication key with a passphrase.
If it was not set, use <tt>ssh-keygen -p</tt> to set it.
<p>
Place your public key (e.g. <file>~/.ssh/id_rsa.pub</file>) 
into <file>~/.ssh/authorized_keys</file> on a remote host using
a password-based connection to the remote host as described in
<ref id="ssh-rsa">.
<example>
$ ssh-agent bash # or run zsh/tcsh/pdksh program instead.
$ ssh-add ~/.ssh/id_rsa
Enter passphrase for /home/osamu/.ssh/id_rsa:
Identity added: /home/osamu/.ssh/id_rsa (/home/osamu/.ssh/id_rsa)
$ scp <var>foo</var> <var>user@remote.host:foo</var>
 ... no passphrase needed from here on :-)
$^D
 ... terminating ssh-agent session
</example>
For the X server, normal &debian; startup scripts execute 
<prgn>ssh-agent</prgn> as parent process.  So you only need to execute 
<prgn>ssh-add</prgn> once.
<p>
For more, read <manref name="ssh-agent" section="1">and
<manref name="ssh-add" section="1">.
</sect1>

<sect1 id="ssh-trouble">Troubleshooting SSH
<p>
If you have problems, check the permissions of configuration files and run
<prgn>ssh</prgn> with the "<tt>-v</tt>" option.
<p>
Use the "<tt>-P</tt>" option if you are root and have trouble with a firewall;
this avoids the use of server ports 1&ndash;1023.
<p>
If <prgn>ssh</prgn> connections to a remote site suddenly stop working, it may be the
result of tinkering by the sysadmin, most likely a change in
<prgn>host_key</prgn> during system maintenance.  After making sure this is
the case and nobody is trying to fake the remote host by some clever hack, one
can regain a connection by removing the <prgn>host_key</prgn> entry from
<file>$HOME/.ssh/known_hosts</file> on the local machine.
</sect1>

</sect>

<sect id="mail">Mail
<p>
Mail configuration divides into three categories:
<list>
<item>mail transfer agent (MTA): <prgn>exim4</prgn>, <prgn>exim</prgn>,

 <prgn>postfix</prgn>, 
 <prgn>sendmail</prgn>, <prgn>qmail</prgn>, <prgn>ssmtp</prgn>,
 <prgn>nullmailer</prgn>, ...
<item>mail utilities: <prgn>procmail</prgn>, <prgn>fetchmail</prgn>, 
<prgn>mailx</prgn>, <prgn>crm114</prgn>, ...
<item>mail user agent (MUA): <prgn>mutt</prgn>,
<prgn>emacs</prgn>+<prgn>gnus</prgn>, ...
</list>

<sect1 id="mta">Mail transport agents (MTAs)
<p>
For a full-featured MTA, use <package>exim</package> in Woody and
use <package>exim4</package> in Sarge.
<footnote>
Following sections use <prgn>exim</prgn> in examples.  For Sarge
replace this with <prgn>exim4</prgn> as needed.
</footnote>
References:
<list compact>
<item><package>exim-doc</package> and <package>exim-doc-html</package> 
 packages for <package>exim</package>
<item><package>exim4-doc-info</package> and 
 <package>exim4-doc-html</package> packages for <package>exim4</package>
<item><url id="&eximhome;">
</list>
The only reasonable alternative MTA is <package>postfix</package> if you
care about security. <package>sendmail</package> and
<package>qmail</package> are available as &debian; packages but are not
recommended. 
<p>
If you do not need the relay capability of an MTA as in the case of a
satellite system such as a laptop PC, you may consider using one of these 
lightweight packages:
<list compact>
<item><prgn>ssmtp</prgn>: needs an SMTP connection and is alias-capable, or
<item><prgn>nullmailer</prgn>: can spool but is not alias-capable.
</list>
At this moment, I find <prgn>exim</prgn> to be more suitable even for
my personal workstation machine, which is a laptop PC.
<p>
You may need to remove <prgn>exim</prgn> for the installation of 
these conflicting packages:
<example>
# dpkg -P --force-depends exim
# apt-get install nullmailer         # or ssmtp
</example> 

<sect2 id="exim-smart">Smarthost
<p>
If you are running <prgn>exim4</prgn> or <prgn>exim</prgn> on a host 
which is connected
through the consumer grade services, please make sure to send outgoing
mail through a smarthost offered by your ISP or some others.
<footnote>
You must follow this rule for any hosts on dial-up, DSL, cable services
or LAN through some broadband router.  Even if your home host has a
fixed IP from your ISP, it is still a good idea to follow this rule.
Most workstations and home servers fall into this category.
</footnote>
There are few good reasons:
<list compact>
<item>to ensure SMTP retries since your ISP's smarthost usually have
more reliably connection.
<item>to avoid sending mail directly from a <strong>dynamic IP
address</strong> which will likely be blocked by dial-up spam lists. 
<item>to save your local bandwidth to send mails with multiple
recipients. 
</list>
<p>
The only conceivable exceptions are:
<list compact>
<item>the emergency cure for your ISP's SMTP service trouble.
<item>an experiment for the educational purpose.
<item>your host being a professionally hosted server.
</list>

<sect2 id="exim-base">Basic configuration of Exim
<p>
In order to use <prgn>exim4</prgn> or <prgn>exim</prgn> as your MTA, configure the following:
<example>
/etc/exim/exim.conf     "eximconfig" to create and edit (exim)
/etc/exim4/*            "dpkg-reconfigure exim4" to create and edit (exim4)
/etc/inetd.conf         comment out smtp to run exim as daemon
/etc/email-addresses    Add spoofed source address lists
</example>
check filters using <prgn>exim4</prgn> or <prgn>exim</prgn> with 
<tt>-brw, -bf, -bF, -bV, ...</tt> etc.

<sect2 id="addr-catchall">Setting up a catchall for nonexistent email addresses under Exim
<p>
In <file>/etc/exim/exim.conf</file> (Woody or later),
in the DIRECTORS part, at the end (after the localuser: director)
add a catch-all director that matches all addresses that the
previous directors couldn't resolve (per Miquel van Smoorenburg):
<example>
catchall:
  driver = smartuser
    new_address = <var>webmaster@mydomain.com</var>
</example>
<p>
If one wants to have more a detailed recipe for each virtual domain, etc., 
add the following at the end of <file>/etc/exim/exim.conf</file> 
(per me, not well tested):
<example>
*@yourdomain.com ${lookup{$1}lsearch*{/etc/email-addresses} \
        {$value}fail} T
</example>
Then have an "*" entry in <file>/etc/email-addresses</file>.
</sect2>

<sect2 id="addr-rewrite">Configuring selective address rewriting for outgoing mail under Exim
<p>
<!-- Derrick 'dman' Hudson dman@dman.ddts.net -->
Selective address rewrite for outgoing mail to produce
proper "From:" headers can be done using <prgn>exim</prgn>
by configuring near the end of <file>/etc/exim/exim.conf</file>:
<example>
*@host1.something.dyndns.org \
  "${if eq {${lookup{$1}lsearch{/etc/passwd}{1}{0}}} {1}  \
   {$0}{$1@somethig.dyndns.org}}"  frFs
</example>
This rewrites all addresses matching <tt>*@host1.something.dyndns.org</tt>.
<enumlist>
<item>It searches through <file>/etc/password</file> to see if the local part ($1)
   is a local user or not.
<item>If it is a local user, it rewrites the address to the same thing it was in
   the first place ($0).
<item>If it is not a local user, it rewrites the domain part.
</enumlist>

<sect2 id="smtp-aauth">Configuring SMTP authentication under Exim
<p>
Some SMTP services such as yahoo.com require SMTP auth.
Configure <file>/etc/exim/exim.conf</file> as follows:
<example>
remote_smtp:
  driver = smtp
  authenticate_hosts = smtp.mail.yahoo.com
...

smarthost:
  driver = domainlist
  transport = remote_smtp
  route_list = "* smtp.mail.yahoo.com bydns_a"
...

plain:
  driver = plaintext
  public_name = PLAIN
  client_send = "^cmatheson3^this_is_my_password"
</example>
Do not forget double quotes in the last line.

<sect1 id="fetchmail">Fetching mail &ndash; Fetchmail
<p>
<prgn>fetchmail</prgn> is run in daemon mode to fetch mail from a POP3 account
with an ISP into the local mail system.  Configure:
<example>
/etc/init.d/fetchmail   
/etc/rc?.d/???fetchmail run update-rc.d fetchmail default priority 30
/etc/fetchmailrc        configuration file (chown 600, owned by fetchmail)
</example>
<p>
Information on how to start <prgn>fetchmail</prgn> as a daemon from the
<prgn>init.d</prgn> script for Potato is confusing (Woody fixed this). See the
sample <file>/etc/init.d/fetchmail</file> and <file>/etc/fetchmailrc</file>
files in the <url id="&examples;" name="example scripts">.
<p>
If your email headers are contaminated by ^M due to your ISP's mailer, add
"stripcr" to your options in <file>$HOME/.fetchmailrc</file>:
<example>
options fetchall no keep stripcr
</example>
</sect1>

<sect1 id="procmail">Processing mail &ndash; Procmail
<p>
<prgn>procmail</prgn> is a local mail delivery and filter program. One needs to create 
<file>$HOME/.procmailrc</file> for each account that uses it. Example:
<url id="&examples;" name="_procmailrc">
</sect1>

<sect1 id="crm114">Processing spam with <package>crm114</package>
<p>
<package>crm114</package> package provides
<prgn>/usr/share/crm114/mailfilter.crm</prgn> script which is written in
CRM114.  This script provides a very effective spam filter which can be
trained by feeding the spam and the ham.
<p>
CRM114 is a small language designed to write filters in; consider it to 
be a version of grep with super powers. See <manref name="crm" section="1">.
</sect1>

<sect1 id="mutt">Reading mail &ndash; Mutt
<p>
Use <prgn>mutt</prgn> as the mail user agent (MUA) in combination with
<prgn>vim</prgn>.
Customize with <file>~/.muttrc</file>; for example:

<example>
# use visual mode and "gq" to reformat quotes
set editor="vim -c 'set tw=72 et ft=mail'"
#
# header weeding taken from the manual (Sven's Draconian header weeding)
#
ignore *
unignore from: date subject to cc
unignore user-agent x-mailer
hdr_order from subject to cc date user-agent x-mailer
auto_view application/msword
....
</example>
<p>
Add the following to <file>/etc/mailcap</file> or
<file>$HOME/.mailcap</file> to display HTML mail and MS Word attachments
inline:
<example>
text/html; lynx -force_html &percnt;s; needsterminal;
application/msword; /usr/bin/antiword '&percnt;s'; copiousoutput;
description="Microsoft Word Text"; nametemplate=&percnt;s.doc
</example>

</sect1>

</sect>

<sect id="l10n">Localization
<p>
&debian; is internationalized, offering support for a growing number of
languages and local usage conventions. The next subsection lists some of the
forms of diversity that &debian; currently supports, and the following
subsections discuss <strong>localization</strong>, the process of customizing
your working environment to allow current input and output of your chosen
language(s) and conventions for dates, numeric and monetary formats, and other
aspects of a system that differ according to your region.

<sect1 id="languages">Basics of localization
<p>
There are several aspects to customizing for localization and national 
language support.

<sect2 id="keyboard">Localizing the keyboard
<p>
&debian; is distributed with keymaps for nearly two dozen
keyboards.  In Woody, reconfigure the keyboard by:

<list compact>
<item><tt>dpkg-reconfigure --priority=low console-data # console</tt>
<item><tt>dpkg-reconfigure --priority=low xserver-xfree86   # XF4</tt>
<item><tt>dpkg-reconfigure --priority=low xserver-common-v3 # XF3</tt>
</list>
</sect2>

<sect2 id="data-stream">Localizing data files
<p>
The vast majority of Debian software packages support data 
    handling of non-US-ASCII characters through the LC_CTYPE environment 
    variable offered by the <strong>locale</strong> technology in glibc.
   
    <list compact>
    <item>8-bit clean: practically all programs
    <item>other Latin character sets (e.g. ISO-8859-1 or ISO-8859-2): the
                  majority of programs
    <item>multibyte languages such as Chinese, Japanese, or Korean:
                  many new applications
    </list>
</sect2>

<sect2 id="display">Localizing the display
<p>
X can display any coding, including UTF-8, and supports all fonts.
The list includes not only all the 8-bit fonts but also 16-bit fonts 
such as Chinese, Japanese, or Korean.  Multibyte character input
method is supported by the <ref id="x-input"> mechanism.   
See <ref id="x-cjk"> and <ref id="x-utf-8">.
<p>
Japanese EUC code display is also available in a (S)VGA graphics console
through the <package>kon2</package> package.  There is an alternative new
Japanese display, <package>jfbterm</package>, which uses a frame-buffer
console, too.  In these console environments, the Japanese input method must
be supplied by the application.  Use <package>egg</package> package for Emacs
and use japanized <package>jvim</package> package for a Vim environment.
<p>
Installation of non Unicode fonts to X will help in displaying documents
with any encoding in X.  So do not worry too much about encoding of fonts.
</sect2>

<sect2 id="translation">Localizing messages and documentation
<p>
Translations exist for many of the text messages and documents that
    are displayed in the &debian; system, such as error messages, standard
    program output, menus, and manual pages.
    Currently, support for manual pages in German, Spanish, Finnish, French,
    Hungarian, Italian, Japanese, Korean, Polish, Portuguese, Chinese,
    and Russian is provided through the <tt>manpages-<var>LANG</var></tt>
    packages (where <var>LANG</var> is a comma-separated list of two-letter
    ISO country codes.  Use <tt>apt-cache search manpages-|less</tt> to get a 
    list of available Unix manual pages.)
    <p>
    To access an NLS manual page, the user must set the environment variable
    LC_MESSAGES to the appropriate string. For example, in the case of the 
    Italian-language manual pages,
    LC_MESSAGES needs to be set to <tt>it</tt>.  The <prgn/man/ program will
    then search for Italian manual pages under <file>/usr/share/man/it/</file>.
</sect2>
</sect1>

<sect1 id="locales">Locales
<p>
Debian supports <strong>locale</strong> technology.  Locale is a mechanism
that allows programs to provide suitable output and functionality according to
local conventions such as character set, format for date and time, currency
symbol, and so on. It uses environment variables to determine the appropriate
behavior. For example, assuming you have both the American English and German
locales installed on your system, the error messages of many programs can be
multilingual:
<example>
$ LANG="en_US" cat foo
cat: foo: No such file or directory
$ LANG="de_DE" cat foo
cat: foo: Datei oder Verzeichnis nicht gefunden
</example>
Glibc offers support for this functionality to programs as a library.  See
<manref name="locale" section="7">.

<sect1 id="base-locale">Introduction to locales
<p>
Full locale description consists of 3 parts: <tt>xx_YY.ZZZZ</tt>.
<list compact>
<item><strong><tt>xx</tt></strong>: ISO 639 language codes (lower case)
<item><strong><tt>YY</tt></strong>: ISO 3166 country codes (upper case)
<item><strong><tt>ZZZZ</tt></strong>: codeset, i.e., character set or encoding
identifier.
</list>
<p>
For language codes and country codes, see pertinent description in the
<tt>info gettext</tt>.
<p>
Please note this codeset part may be normalized internally to achieve
cross platform compatibility by removing all <tt>-</tt> and by
converting all characters into lower case.  Typical codesets are:
<list compact>
  <item><strong>UTF-8</strong>: Unicode for all regions, mostly in 1-3 Octets (new
       de facto standard)
  <item><strong>ISO-8859-1</strong>: western Europe (de facto old standard)
  <item><strong>ISO-8859-2</strong>: eastern Europe (Bosnian, Croatian, Czech,
       Hungarian, Polish, Romanian, Serbian, Slovak,  Slovenian)
  <item><strong>ISO-8859-3</strong>: Maltese
  <item><strong>ISO-8859-5</strong>: Macedonian, Serbian
  <item><strong>ISO-8859-6</strong>: Arabic
  <item><strong>ISO-8859-7</strong>: Greek
  <item><strong>ISO-8859-8</strong>: Hebrew
  <item><strong>ISO-8859-9</strong>: Turkish
  <item><strong>ISO-8859-11</strong>: Thai (=TIS-620)
  <item><strong>ISO-8859-13</strong>: Latvian, Lithuanian, Maori
  <item><strong>ISO-8859-14</strong>: Welsh
  <item><strong>ISO-8859-15</strong>: western Europe with euro
  <item><strong>KOI8-R</strong>: Russian
  <item><strong>KOI8-U</strong>: Ukrainian
  <item><strong>CP1250</strong>: Czech, Hungarian, Polish (MS Windows origin)
  <item><strong>CP1251</strong>: Bulgarian, Byelorussian (MS Windows origin)
  <item><strong>eucJP</strong>: Unix style Japanese (=ujis)
  <item><strong>eucKR</strong>: Unix style Korean 
  <item><strong>GB2312</strong>: Unix style Simplified Chinese (=GB, =eucCN) for zh_CN
  <item><strong>Big5</strong>: Traditional Chinese for zh_TW
  <item><strong>sjis</strong>: Microsoft style Japanese (Shift-JIS) 
</list>
As for the meaning of basic encoding system jargons:
<list compact>
<item><strong>ASCII</strong>: 7 bits (0-0x7f)
<item><strong>ISO-8859-?</strong>: 8 bits (0-0xff)
<item><strong>ISO-10646-1</strong>: Universal Character Set (UCS) (31 bits, 0-0x7fffffff)
<item><strong>UCS-2</strong>: First 16 bit of UCS as straight 2 Octets (Unicode: 0-0xffff)
<item><strong>UCS-4</strong>: UCS as straight 4 Octets (UCS: 0-0x7fffffff)
<item><strong>UTF-8</strong>: UCS encoded in 1-6 Octets (mostly in 3 Octets)
<item><strong>ISO-2022</strong>: 7 bits (0-0xff) with the escape sequence.
ISO-2022-JP is the most popular encoding for the Japanese e-mail.
<item><strong>EUC</strong>: 8 bits + 16 bits combination (0-0xff), Unix style
<item><strong>Shift-JIS</strong>: 8 bits + 16 bits combination (0-0xff), Microsoft
style.
</list>
ISO-8859-?, EUC, ISO-10646-1, UCS-2, UCS-4, and UTF-8 share the same
code with ASCII for the 7 bit characters.  EUC or Shift-JIS uses
high-bit characters (0x80-0xff) to indicate that part of encoding is 16
bit.  UTF-8 also uses high-bit characters (0x80-0xff) to indicate non 7
bit character sequence bytes and this is the most sane encoding system 
to handle non-ASCII characters.
<p>
Please note the byte order difference of Unicode implementation:
<list compact>
<item><strong>Standard  UCS-2, UCS-4</strong>: big endian
<item><strong>Microsoft UCS-2, UCS-4</strong>: little endian for ix86 (machine-dependent)
</list>
See <ref id="recode"> for conversion between various character sets.
For more see <url id="&intro-i18n;" name="Introduction to i18n">.

<sect1 id="activate-locales">Activating locale support
<p>
&debian; does <strong>not</strong> come with all available
locales pre-compiled. Check <file>/usr/lib/locale</file> to see which
locales (besides the default "C") are compiled for your system. If the one
you need is not present, you have two options:
<list compact>
 <item>Edit <file>/etc/locale.gen</file> to add the desired locale, then
   run <prgn>locale-gen</prgn> as root to compile it. 參閱 <manref
   name="locale-gen" section="8"> and the manpages listed in its "SEE ALSO"
   section.
 <item>Run <tt>dpkg-reconfigure locales</tt> to reconfigure the
   <package>locales</package> package. Or if it is not already installed,
   installing <package>locales</package> will invoke the debconf interface to
   let you choose needed locales and compile the database.
 <!--  XXX FIXME XXX 
 <item>Run <prgn>localedef</prgn> manually from user account to compile 
   the locale database and use it by setting 
   <tt>LOC_PATH</tt> 
   environment variable.  For example for <tt>en_GB.UTF-8</tt>:
   <example>
$ localedef -v -c -i en_GB -f UTF-8 <var>somewhere/</var>en_GB.UTF-8
$ export LOC_PATH=<var>somewhere/</var>
   </example>
 -->
</list>

<sect1 id="env-locale">Activating a particular locale
<p>
The following environment variables are evaluated in this order to provide
particular locale values to programs:
<enumlist>
<item>LANGUAGE: This environment variable consists of a colon-separated 
      list of locale names in order of priority. Used only if the POSIX
      locale is set to a value other than "C" [in Woody; the Potato version
      always has priority over the POSIX locale]. (GNU extension)
<item>LC_ALL: If this is non-null, the value is used for all locale
      categories. (POSIX.1) Usually "" (null).
<item>LC_*: If this is non-null, the value is used
      for the corresponding category (POSIX.1).  Usually "C".
<p>
      LC_* variables are:
 <list compact>
<item>LC_CTYPE: Character classification and case conversion.
<item>LC_COLLATE: Collation order.
<item>LC_TIME: Date and time formats.
<item>LC_NUMERIC: Non-monetary numeric formats.
<item>LC_MONETARY: Monetary formats.
<item>LC_MESSAGES: Formats of informative and diagnostic messages and
            interactive responses.
<item>LC_PAPER: Paper size.
<item>LC_NAME: Name formats.
<item>LC_ADDRESS: Address formats and location information.
<item>LC_TELEPHONE: Telephone number formats.
<item>LC_MEASUREMENT: Measurement units (Metric or Other).
<item>LC_IDENTIFICATION: Metadata about the locale information.
 </list>
<item>LANG:   If this is non-null and LC_ALL is undefined, the value is used
      for all LC_* locale categories with undefined values. (POSIX.1) Usually
      "C".
</enumlist>
Note that some applications (e.g., Netscape 4) ignore LC_* settings.
<p>
The <prgn>locale</prgn> program can display active locale settings and
available locales; see <manref name="locale" section="1">. (NOTE: <tt>locale
-a</tt> lists all the locales that your system knows about; this does
<em>not</em> mean that all of them are compiled! See
<ref id="activate-locales">.)

<sect1 id="ISO-locale">ISO 8601 date format locale
<p>
The locale support for the international date standard of <tt>yyyy-mm-dd</tt>
(ISO 8601 date format) is provided by the locale called <tt>en_DK</tt>, 
"English in Denmark", which is a bit of joke :-)
This seems to work only in a console screen for <prgn>ls</prgn>.

<!-- beyond locale moved to below -->

<sect1 id="iso-8859-1">Example for the US (ISO-8859-1)
<p>
Add the following lines to <file>~/.bash_profile</file>:
<example>
LC_CTYPE=en_US.ISO-8859-1
export LC_CTYPE
</example>

<sect1 id="france">Example for France with Euro sign (ISO-8859-15)
<p>
Add the following lines to <file>~/.bash_profile</file>:
<example>
LANG=fr_FR@euro
export LANG
LC_CTYPE=fr_FR@euro
export LC_CTYPE
</example>
<p>
Configure the keyboard for French "AZERTY" as described in <ref id="keyboard">;
add French manual pages by installing <package>manpages-fr</package>.  The
Right-Alt key in the US is called Alt-Gr in Europe.  Pressing this together
with other keys creates numerous accented and special characters.  For example,
Alt-Gr+E creates a Euro sign.
<p>
Most western European languages can be configured similarly.
<p>
參閱 <url id="&debian-euro-support;" name="Debian Euro HOWTO"> for 
adding support for the new Euro currency and 
<url id="&debian-fr-howto;" name="Utiliser et configurer Debian pour le francais"> 
for more details in French.

<sect1 id="x-cjk">Example for a multilingual X window system
<p>
Let us set up a multilingual X window system which simultaneously
supports Japanese, English, German, and French with EUC, UTF-8, and
ISO-8859-1 encodings in different consoles.
<p>
I will show you a customization using the &debian; menu system.  See the
details of &debian; menu system in <url id="&f-menu;">.  I also create a
shortcut to the <prgn>mozilla</prgn> web browser in this example.
 <footnote>
In this example, 2 bug work arounds are deployed for the version of
<prgn>blackbox</prgn> in 2003. I use <tt>sh -c</tt> in command. Also
<file>~/.menu/*</file> entry is not used but root requiring
<file>/etc/menu/*</file> was used instead.
 </footnote>
<list>

 <item>add locale support for the Japanese ja_JP.eucJP locale and other
 required locales using the method described at <ref id="l10n">. (for
 all)

 <item>install Kana-to-Kanji conversion system and dictionary (for
 Japanese):
  <list compact>
  <item><package>canna</package> &ndash; Local server ("free-beer" license), or
  <item><package>freewnn-jserver</package> &ndash; Network-extensible server 
   (Public Domain)
  </list>

 <item>install Japanese input method system (for Japanese):
  <list compact>
  <item><package>kinput2-canna</package> &ndash; for X, or
  <item><package>kinput2-canna-wnn</package> &ndash; for X, and
  <item><package>egg</package> &ndash; directly works with Emacsen even
    in console (optional)
  </list>

 <item>Install compatible terminals (for all):
  <list compact>
  <item><package>xterm</package> &ndash; X (for ISO-8859-1 and UTF-8),
  <item><package>kterm</package> &ndash; X (for Japanese EUC), and
  <item><package>mlterm</package> &ndash; X (multilingual).
  </list>

 <item>add all the Japanese font packages. (for all)

 <item>create the <file>~/.xsession</file> that sets the user-specific X 
  environment as described in <ref id="custom-x"> (for all):
 
<example>
#!/bin/sh
# This makes X work when I su to root.
if [ -z "$XAUTHORITY" ]; then
        XAUTHORITY=$HOME/.Xauthority
        export XAUTHORITY
fi

# Set specific environment through debian menu system.
# Reset locale
unset LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES 
unset LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT 
unset LC_IDENTIFICATION LC_ALL LANG LANGUAGE PAGER
# set locale default in X
LANG=C
# export locale
export LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES 
export LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT 
export LC_IDENTIFICATION LC_ALL LANG LANGUAGE PAGER
###
# activate input method for Japanese with kinput2
kinput2 &
XMODIFIERS="@im=kinput2"
export XMODIFIERS
# How about blackbox window manager (lightweight)
exec blackbox
#exec xfwm
#exec wmaker
</example>

 <item>set locale in <file>~/.bash_profile</file> for Linux consoles
 (for all).
 
 <item>remove locale settings from <file>~/.bashrc</file>, if existed
 (for all).

 <item>create few files in <file>/etc/menu/</file> (for all).
 <list compact>
 <item><file>/etc/menu/xterm-local</file>: (add new entries to menu)
 <footnote>
Use a file name which does not overwrap with any package names.
 </footnote>
<example>
?package(xterm):\
 needs=x11\
 section=XShells\
 longtitle="XTerm: terminal emulator (en_US.ISO-8859-1)"\
 title="XTerm (en_US.ISO-8859-1)"\
 command="sh -c 'LC_ALL=en_US.ISO-8859-1 xterm'"
?package(xterm):\
 needs=x11\
 section=XShells\
 longtitle="XTerm: terminal emulator (de_DE.ISO-8859-1)"\
 title="XTerm (de_DE.ISO-8859-1)"\
 command="sh -c 'LC_ALL=de_DE.ISO-8859-1 xterm -T xterm-de'"
?package(xterm):\
 needs=x11\
 section=XShells\
 longtitle="XTerm: terminal emulator for X with Unicode support (Japanese)"\
 title="UXTerm (ja_JP.UTF-8)"\
 command="sh -c 'LC_ALL=ja_JP.UTF-8 uxterm'"
</example>
 <item><file>/etc/menu/kterm</file>: (override the system default)
 <footnote>
Use a file name which overwraps with the package name.
 </footnote>
<example>
?package(kterm):\
 needs="x11"\
 section="XShells"\
 command="sh -c 'LC_ALL=ja_JP.eucJP PAGER=w3m /usr/X11R6/bin/kterm -xim'" \
 title="Kanji Terminal"
?package(kterm):\
 needs="x11"\
 section="XShells"\
 command="sh -c 'LANG=ja_JP.eucJP \
          LC_MESSAGES=en_US.ISO-8859-1 PAGER=w3m /usr/X11R6/bin/kterm -xim'" \
 title="Kanji Terminal (bilingal)"
</example>
 <item><file>/etc/menu/mozilla-local</file>: (add a new shortcut)
 <footnote>
 The slash in <tt>section="/"</tt> enables entry to the initial menu,
 and the leading space in <tt>title=" Mozilla Navigator"</tt> enables
 entry to the top of the list.
 </footnote>
<example>
?package(mozilla-browser):needs="x11" section="/" \
        title=" Mozilla Navigator" command="mozilla-1.5" hints="Web browsers" \
        icon=/usr/share/pixmaps/mozilla.xpm
</example>
 <item>run <prgn>update-menus</prgn> from the root account.
 </list>
 <item>add the following lines to <file>~/.muttrc</file> (for Japanese):

<example>
# UTF-8 support is not popular in popular Japanese EMACS environment
# 7-bit encoding of iso-2022-jp is easier for everyone.
# default encoding order = us-ascii --&gt; iso-8859-1 --&gt; iso-2022-jp
set send_charset="us-ascii:iso-8859-1:iso-2022-jp"
set allow_8bit=no
</example>
 <item>activate XIM <prgn>kinput2</prgn> for X applications (for
 Japanese):
  <list compact>
  <item>add <tt>*inputMethod: kinput2</tt> and <tt>KTerm*VT100*OpenIm:
  true</tt> to your X resources file,
  <file>~/.Xresources</file>  (it looks like Debian takes care of this
  automatically somehow).
  <item>Some applications (such as <prgn>mlterm</prgn>) also allow 
  you to set up <tt>*inputMethod:</tt> and other information dynamically 
  at runtime (press <strong>Ctrl-MouseButton-3</strong> in <prgn>mlterm</prgn>).
  </list>
 <item>start X by typing <tt>startx</tt> or from one of the display
  managers (<prgn>xdm</prgn>, <prgn>gdm</prgn>, <prgn>kdm</prgn>,
  <prgn>wdm</prgn>, ...)  (for all).
 <item>start a Japanese-compatible application such as
  Vim 6, (x)emacs21, mc-4.5, mutt-1.4, ... in <prgn>kterm</prgn>  (for
  Japanese).
  (Emacs seems to be the most popular platform, though I do not use it.)
 <item>press <strong>Shift+Space</strong> to toggle Japanese 
  character input mode on and off (for Japanese).
 <item>read the localized manual page by starting command in localized
 console (for all).
</list>
For other CJK language supports, see the following sections and <url
id="&suse-cjk;" name="SuSE pages for CJK">.

<sect1 id="x-input">Alternative X input methods
<!-- I need feed back from Chinese and Korean people for here -->
<p>
There are many alternative X input methods support packages available:
<example>
Language   LC_CTYPE     XIM server XMODIFIERS              Start key
Japanese   ja_JP*       kinput2    "@im=kinput2"           Shift-Space
Korean     ko_KR*       ami        "@im=Ami"               Shift-Space
Chinese(T) zh_TW.Big5   xcin       "@im=xcin-zh_TW.big5"   Ctrl-Space
Chinese(S) zh_CN.GB2312 xcin       "@im=xcin-zh_CN.GB2312" Ctrl-Space
</example>
<p>
Japanese input method <prgn>kinput2</prgn> is offered by the packages
such as <package>kinput2-canna-wnn</package>,
<package>kinput2-canna</package>, and <package>kinput2-wnn</package>.
Japanese needs dictionary server such as <package>canna</package> and
<package>freewnn-jserver</package> to be practical.

<!--
<p>
Korean and Chinese may also use dictionary server such as 
<package>freewnn-kserver</package> and
<package>freewnn-cserver</package> too.
-->

<sect1 id="x-term">X terminal emulators
<p>
There are many X consoles which support simple 8 bit encodings
when pertinent font packages are installed:
<list compact>
  <item><package>xterm</package> &ndash; The X terminal emulator
  <item><package>gnome-terminal</package> &ndash; <package>xterm</package> 
   for Gnome
  <item><package>konsole</package> &ndash; <package>xterm</package> 
   for KDE
  <item><package>rxvt</package> &ndash; VT102 terminal (lighter)
  <item><package>aterm</package> &ndash; VT102 for Afterstep WM
  <item><package>eterm</package> &ndash; VT102 for Enlightment WM
  <item><package>wterm</package> &ndash; VT102 for WindowMaker WM
</list>
<p>
Multi-byte encoding supports of X console are provided by
<package>xterm</package> through UTF-8 encoding (<ref id="x-utf-8">).
Other traditional encoding supports are in progress (as of 2003).
Following packages offer traditional encoding supports:
<list compact>
  <item><package>aterm-ml</package> &ndash; Multi-lingual
  <item><package>kterm</package> &ndash; Multi-lingual (Japanese, ...)
  <item><package>rxvt-ml</package> &ndash; Multi-lingual
  <item><package>wterm-ml</package> &ndash; Multi-lingual 
  <item><package>cxterm-big5</package> &ndash; Chinese (Trad., Big5)
  <item><package>cxterm-gb</package> &ndash; Chinese (Simp., GB)
  <item><package>cxterm-ks</package> &ndash; Chinese (KS)
  <item><package>cxterm-jis</package> &ndash; Japanese
  <item><package>hanterm-classic</package> &ndash; Korean (Hangul)
  <item><package>hanterm-xf</package> &ndash; Korean (Hangul)
  <item><package>hztty</package> &ndash; Chinese (GB, Big5, zW/HZ)
</list>
For <prgn>kterm</prgn> (and possibly others), you may want to 
activate XIM through menu after Ctrl-middle-click mouse action.

<sect1 id="x-utf-8">UTF-8 support for the X terminal emulator
<p>
UTF-8 support for X terminal emulator is provided by the
<prgn>uxterm</prgn> program in the <package>xterm</package> package for
XFree86 4.x.  It enables support for all languages.  It is a wrapper
around the <manref name="xterm" section="1"> program that invokes the
latter program with the "UXTerm" X resource class set.
<p>
For example, to enable nice large display of English, Russian, Japanese,
Chinese, and Korean characters, add following to your
<file>~/.Xresources</file> after installing all the pertinent fonts:
<example>
! set large font
UXTerm*font: -misc-fixed-medium-r-normal-*-18-120-100-100-c-90-iso10646-1
! Use XIM for Japanese
*inputMethod: kinput2
</example> 
Then run <tt>xrdb -merge ~/.Xresources</tt> to update X resources as
described in <ref id="xresources">.
<p>
Although most of the popular console program packages such as
<package>vim</package>, <package>mutt</package>, and
<package>emacs</package> have been made compatible with UTF-8 recently
(Woody-Sarge).  Program such as <package>mc</package> still is not UTF-8
compatible but simply 8-bit clean. If you are editing 7 bit ASCII part
of unknown or mixed encoding file, it is safer to use the locale unaware
8-bit clean editor.
<p>
Everyone will need this in the future.
參閱 <url id="&unicode-howto;" name="The Unicode HOWTO">.

<sect1 id="fb-utf-8">Example for UTF-8 in a framebuffer console
<p>
UTF-8 support on a FB console is provided by <package>bterm</package>
used in the <prgn>debian-installer</prgn>.

<sect1 id="beyond-locale">Beyond locales
<p>
When you are first setting the system up for a <strong>national
language environment</strong>, please consider using
<prgn>tasksel</prgn> or <prgn>aptitude</prgn> to find out what packages
are selected by choosing the corresponding language environment task.
The package choice made is useful even for a multilingual setup.  If
you encounter any package dependency conflicts during the install to
your carefully configured system, avoid installing any software that
conflicts with the existing system.  You may have to use
<prgn>update-alternative</prgn> to regain the original state for some
commands since a newly installed one may have higher priority than
existing ones.
<p>
Newer major programs are using glibc 2.2 and are mostly internationalized.  So
a specially localized version such as <prgn>jvim</prgn> for Vim may not be
needed as its functionality is offered by <prgn>vim</prgn> version 6.0 in X.
In reality, it is still somewhat rough-edged.  Since <prgn>jvim</prgn> has a
version compiled with direct Japanese input method (<prgn>canna</prgn>)
support even in the console and addresses many other Japanese-specific issues
maturely, you may still want it :-)
<p>
Programs may need to be configured beyond <tt>locale</tt> configuration
to enable a comfortable working environment.  The
<package>language-env</package> package and its command
<prgn>set-language-env</prgn> greatly eases this process.
<p>
Also see the internationalization document, <url id="&intro-i18n;" 
name="Introduction to i18n">. It is aimed at developers but is also 
useful for system administrators.
</sect1>

</sect>
</chapt>

