<!-- CVS revision of this document "$Revision: 1.23 $"  -->
<!-- CVS revision of original english document "1.27"  -->
<!--Line width ruler (ruler uses 78 characters) 34567890123456789012345-->

<chapt id="edit">Editeurs

<sect  id="pop-editor">Editeurs populaires
<p>
Linux offre plusieurs solutions comme éditeurs en mode texte. Parmi eux&nbsp;:
<list compact>
<item><prgn>vim</prgn>&nbsp;:    Éditeur puissant et léger hérité de BSD. VI iMproved (VI aMélioré).
<item><prgn>emacs</prgn>&nbsp;:  L'éditeur ultime et lourd hérité de GNU. L'original de RMS (Richard M. Stallman).
<item><prgn>xemacs</prgn>&nbsp;: Emacs: The Next Generation (la nouvelle génération), à l'origine par Lucid.
<item><prgn>mcedit</prgn>&nbsp;: Éditeur GNU pour débutant. Identique à l'éditeur interne de <prgn>mc</prgn>. Voir <ref id="mcedit">.
<item><prgn>ae</prgn>&nbsp;:     Petit éditeur par défaut (Potato). À éviter.
<item><prgn>nano</prgn>&nbsp;:   Petit éditeur GNU par défaut (Woody). Emule <prgn>pico</prgn>.
<item><prgn>joe</prgn>&nbsp;:    Pour les vieux habitués de WordStar ou de TurboPascal.
<item><prgn>jed</prgn>&nbsp;:    Éditeur rapide et complet avec menus et raccourcis Emacs.
<item><prgn>jove</prgn>&nbsp;:   Très petit éditeur avec raccourcis Emacs.
<item><prgn>nvi</prgn>&nbsp;:    Nouveau vi. Compatible bogue pour bogue avec le vi original.
</list>
<p>
Utilisez <tt>update-alternatives --config editor</tt> pour changer d'éditeur
par défaut. De plus, beaucoup de programmes utilisent les variables
d'environnement <tt>EDITOR</tt> ou <tt>VISUAL</tt> pour décider quel éditeur
utiliser. Voir <ref id="mcedit">.
<p>
Il existe aussi quelques éditeurs de texte pour X&nbsp;:
<list compact>
<item><prgn>gvim</prgn>&nbsp;: Vim avec une interface graphique (paquets <package>vim</package> et <package>vim-gtk</package>)
<item><prgn>emacs</prgn>&nbsp;: Le vrai Emacs (détecte X automatiquement)
<item><prgn>xemacs</prgn>&nbsp;: L'Emacs nouvelle génération (détecte X automatiquement)
</list>
Ces commandes xclient prennent des options standard comme <tt>-fn
<var>a24</var></tt> qui rendent les choses faciles pour les plus vieux comme
moi :-) Voir <ref id="xclnt">.
</sect>

<sect id="bin-editor">Editeurs de sauvetage
<p>
Il y a quelques éditeurs dans <file>/bin</file>. L'un d'eux doit être installé
pour faciliter l'édition de fichiers quand <file>/usr</file> n'est pas
accessible.
<p>
<list compact>
<item><package>elvis-tiny</package>&nbsp;: Editeur minimum type vi (<prgn>vi</prgn> pour le démarrer)
<item><package>nano-tiny</package>&nbsp;:  Editeur minimum non vi (<prgn>nano-tiny</prgn> pour le démarrer)
<item><package>ed</package>&nbsp;:         Editeur minimum (toujours là mais difficile à utiliser)
</list>
<p>

<sect>Emacs et Vim

<sect1>Conseils pour Vim
<p>
Lisez la page «&nbsp;VIM - main help file&nbsp;» en tapant &lt;F1&gt; dans le programme.

<example>
&lt;F1&gt;     Aide
&lt;esc&gt;    Retour au mode normal
V              Mode visuel
i              Mode insertion
:              Commandes en ligne
:set tw=72     Paramètre la largeur du texte à 72
&lt;F11&gt;    Mode Insertion (collage)
:r! date -R    Insertion de la date selon RFC-822
q<var>a</var>  Enregistre la frappe dans le registre <var>a</var>
q              Arrête l'enregistrement de la frappe
@<var>a</var>  Exécute la frappe enregistrée dans le registre <var>a</var>
:edit <var>foo.txt</var> Edite un autre fichier en chargeant
<var>foo.txt</var>
:wnext         Enregistre le fichier courant et édite le fichier suivant
</example>

<tt>q</tt> et <tt>@</tt> peuvent être utilisés pour enregistrer et exécuter de
simples macros. Par exemple, pour créer une macro qui insère des balises HTML
pour l'italique autour du mot sur lequel se trouve le curseur, vous pourriez
taper <tt>qii&lt;i&gt;^[ea&lt;/i&gt;^[q</tt> (où <tt>^[</tt> est la touche
ESC). Taper <tt>@i</tt> au début d'un mot ajoute les balises &lt;i&gt; et
&lt;/i&gt;.
<p>
Voir aussi <ref id="vimgpg">.

</sect1>

<sect1>Conseils pour Emacs
<p>
<example>
&lt;F1&gt;          Aide
&lt;F10&gt;         Menu
C-u M-! date -R     Insertion de la date selon RFC-822
</example>
</sect1>

<sect1>Démarrer l'éditeur
<p>
<example>
démarrer l'éditeur :            emacs nom_de_fichier    vim nom_de_fichier
démarrage en compatibilité vi :                         vim -C
démarrage en non-compatible vi :                        vim -N
démarrage en mode par défaut :  emacs -q                vim -N -u NONE
</example>
</sect1>

<sect1 id="editkey">Résumé des commandes de l'éditeur (Emacs, Vim)
<p>
<example>
Sortie :                    C-x C-c         :qa /:wq /:xa /:q!
Retour/mode commande :    C-g             &lt;esc&gt;
Retour(gauche) :          C-b             h
Après(droite) :           C-f             l
Suivant(en bas) :         C-n             j
Précédent(en haut) :      C-p             k
Début de ligne(^) :       C-a             0
Fin de ligne($) :         C-e             $
Commandes mUltiples :     C-u nnn cmd     :count cmd
Commandes Multiples :     M-digitkey cmd
Sauvegarder le fichier :  C-x C-s         :w file
Début du tampon :         M-&lt;          1G
Fin du tampon :           M-&gt;           G
Écran suivant :           C-v             ^F
1/2 écran suivant :                       ^D
Ligne suivante :                          ^E
Revenir d'1 écran :       M-v             ^B
Revenir d'1/2 écran :                     ^U
Ligne précédente :                        ^Y
Avance l'autre fenêtre :  M-C-v
Effacer sous le curseur : C-d             x
Effacer à partir du curseur 
jusqu'à la fin de ligne : C-k             D
iRecherche en avant :     C-s
iRecherche en arrière :   C-r
Chercher en avant :       C-s enter       /
Chercher en arrière :     C-r enter       ?
iRecherche avec
expression rationnelle :  M-C-s
iRecherche en arrière avec
expression rationnelle :  M-C-r
Chercher avec
expression rationnelle :  M-C-s enter     /
Chercher en arrière avec
expression rationnelle :  M-C-r enter     ?
Aide :                    C-h C-h         :help
Aide Apropos :            C-h a
Aide sur les liens :      C-h b           :help key
Aide Info :               C-h i
Help mode Majeur :        C-h m
Aide tutorial :           C-h t           :help howto
Annulation :              C-_             u
Refaire :                 C-f             ^R
Marquer la position
du curseur :              C-@             m{a-zA-Z}
Échange Marque
et position :             C-x C-x
Aller à la marque dans
le fichier actuel :                       '{a-z}
Aller à la marque dans
n'importe quel fichier :                  '{A-Z}
Copier région :           M-w             {visual}y
Tuer région :             C-w             {visual}d
Copier et garder tampon : C-y             <![%FIXME;[p y ? XXX FIXME
XXX]]>
Copier depuis le tampon : M-y             p
Conversion d'une zone
en majuscules :           C-x C-u
Conversion d'une zone
en minuscules :           C-x C-l
Insère un caractère
spécial :                 C-q octalnum/keystroke  ^V decimal/keystroke
Remplace :                M-x replace-string      :&percnt;s/aaa/bbb/g
Remplace regexp :         M-x replace-regexp      :&percnt;s/aaa/bbb/g
Recherche et remplace :   M-&percnt;                     :&percnt;s/aaa/bbb/gc
Recherche et remplace :   M-x query-replace
Recherche et remplace avec
expression rationnelle :  M-x query-replace-regexp
Ouvre un fichier :        C-x C-f         :r file
Sauvegarde le fichier :   C-x C-s         :w
Sauve tous les tampons :  C-x s           :wa
Sauvegarde sous :         C-x C-w file    :w file
Demande un tampon :       C-x b
Liste le tampon :         C-x C-b         :buffers
Commute en lecture seule :C-x C-q         :set ro
Demande et tue le tampon :C-x k
Scinde verticalement :    C-x 2           :split
Scinde horizontalement :  C-x 3           :vsplit (ver. 6)
Va à une autre fenêtre :  C-x o           ^Wp
Efface cette fenêtre :    C-x 0           :q
Efface autre fenêtre :    C-x 1
Lance un shell
en arrière-plan :         M-x compile
Tue un shell lancé
en arrière-plan :         M-x kill-compilation
Lance make :                              :make Makefile
Inspecte les messages d'erreur : C-x` 
Lance un shell et enregistre :   M-x shell       :!script -a tmp
...clean BS, ...                                :!col -b &lt;tmp &gt;record
sauve/rappelle le shell/enregistre : C-x C-w record  :r record
Lance shell :                    M-! sh          :sh
Lance une commande :             M-! cmd         :!cmd
Lance une commande et insère :   C-u M-! cmd     :r!cmd
Lance un filtre :                M-| file        {visual}:w file
Lance un filtre et insère :      C-u M-| filter  {visual}:!filter
Montre une option                               :se[t] {option}?
relance l'option                                :se[t] {option}&
relance une option booléenne                    :se[t] no{option}
commute une option booléenne                    :se[t] inv{option}
met le texte sur 72 colonnes                    :se tw=72
pas d'organisation du texte                     :se tw=0
autoindentation                                 :se ai
étend la tabulation                             :se et
spécifie un commentaire (courrier)              :se comments=n:&gt;,n:\|

Lance GDB                       M-x gdb                        
décrit le mode GDB              C-h m                          
saute une ligne                 M-s
va à la ligne suivante          M-n
saute une instruction (stepi)   M-i                            
Finit le cadre de la pile courante      C-c C-f                        
continue                        M-c                            
up arg frames                   M-u                            
down arg frames                 M-d                            
copie le numéro à partir du point, insère à la fin 
                                C-x &                          
positionne un point d'arrêt     C-x SPC                        
</example>
</sect1>

<sect1>Configuration de Vim
<p>
Afin de mettre en surbrillance les spécificités et la syntaxe avec Vim, ajoutez les lignes suivantes dans 
<file>~/.vimrc</file> ou <file>/etc/vimrc</file>&nbsp;:
<example>
set nocompatible
set nopaste
set pastetoggle=&lt;f11&gt;
syn on
</example>
Le mode paste permet d'éviter que l'autoindentation n'interfère avec le
couper/coller en mode console/terminal. C'est mieux que faire un simple ":set
noai".
<p>
Voir <ref id="vimgpg"> pour l'intégration de GnuPG.
</sect1>

<sect1>Ctags
<p>
<tt>apt-get install exuberant-ctags</tt> et lancez <prgn>ctags</prgn> dans les
fichiers source.  Taper <tt>:tag <var>function_name</var></tt> dans vim pour
aller à la ligne qui commence <var>function_name</var>.  Les balises marchent
pour C, C++, Java, Python, beaucoup d'autres langages.
<p>
Emacs a les mêmes possibilités avec les ctags.
</sect1>

<sect1>Convertir un écran avec syntaxe en surbrillance en un source HTML
<p>
<tt>so \$VIMRUNTIME/syntax/2html.vim</tt> avec Vim en mode commande
convertira le texte en texte html.  Sauvegarder avec <tt>:w file.html</tt> et
<tt>:q</tt>.  Très utile pour du code C, etc.
</sect1>

<sect1>Ecran scindé avec <prgn>vim</prgn>
<p>
<prgn>vim</prgn> peut éditer plusieurs fichiers dans un environnement
multi-fenêtré en scindant l'écran. Tapez <tt>:help usr_08.txt</tt> pour plus
de détails.
<p>
Pour scinder l'écran pour afficher différents fichiers, tapez à l'invite de
commande de vi&nbsp;:
<example>
:split <var>another-file</var>
:vsplit <var>another-file</var>
</example>
Ou à l'invite du shell&nbsp;:
<example>
$ vi -o file1.txt file2.txt   # Séparation horizontale
$ vi -O file1.txt file2.txt   # Séparation verticale
</example>
lancera vi en mode multi-fenêtré.
<example>
$ vimdiff file.txt~ file.txt         # donne les changements récents
                                       de file.txt
$ vimdiff file.en.sgml file.fr.sgml  # donne les changements dans la
                                       traduction
$ gvimdiff file.txt~ file.txt        # sous X
</example>
fournit une vue sympa des différences entre un original et un fichier de
sauvegarde. En SGML, cela fait la correspondance des balises, donc comparer
les traductions dans ce mode marche très bien.
<p>
Mouvements spéciaux du curseur avec CTRL-W&nbsp;:
<example>
CTRL-W +      augmente la taille d'une fenêtre
CTRL-W -      réduit la taille d'une fenêtre
CTRL-W h      se déplace vers la fenêtre de gauche
CTRL-W j      se déplace vers la fenêtre en dessous
CTRL-W k      se déplace vers la fenêtre au dessus
CTRL-W l      se déplace vers la fenêtre de droite
...
</example>
Les commandes suivantes permettent de contrôler le défilement de l'écran&nbsp;:
<example>
:set scrollbind
:set noscrollbind
</example>
</sect1>

</sect>

</chapt>
