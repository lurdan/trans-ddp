<chapt id="edit">Editeurs

<sect>Editeurs
<p>
Il existe plusieurs solutions pour les éditeurs sous Linux.
<list>
<item>vim:    Éditeur puissant. Léger. vi amélioré; en anglais = vi improved.
<item>emacs:  L'éditeur ultime. Lourd. Le nirvana de RMS (Richard M. Stallman).
<item>mcedit: Éditeur pour newbie.
<item>ae:     Petit éditeur par défaut.[POTATO] À éviter.
<item>nano:   Petit éditeur par défaut.[WOODY]
<item>joe:    Pour les vieux habitués de WordStar ou de TurboPascal.
<item>jed:    Éditeur complet avec menu rapide avec des liaisons emacs.
<item>jove:   Très petit éditeur avec des liaisons emacs.
<item>nvi:    Vi réinventé.
</list>
Utilisez "update-alternatives --config editor" pour changer d'éditeur par
défaut.
</sect>

<sect>Emacs et Vim

<sect1>Conseils pour Vim
<p>
<example>
&lt;F1&gt;          Aide
&lt;esc&gt;         Retour au mode normal
V                   Mode visuel
i                   Mode insertion
:                   Commandes en ligne
:set tw=72          Paramètre la largeur du texte à 72
&lt;F11&gt;         Mode Insertion (collage)
:r! date -R         Insertion de la date selon RFC-822
q<var>a</var>       Enregistre la frappe dans le registre <var>a</var>
@<var>a</var>       Exécute la frappe enregistrée dans le registre <var>a</var>
</example>

<tt>q</tt> et <tt>@</tt> peuvent être utilisés pour enregistrer et exécuter de
simples macros. Par exemple, pour créer une macro qui insère des balises HTML
pour l'italique autour du mot sur lequel se trouve le curseur, vous pourriez
taper <tt>qi&lt;i&gt;^[ea&lt;/i&gt;^[q</tt> (où <tt>^[</tt> est la touche
ESC). Taper <tt>@i</tt> au début d'un mot ajoute les balises &lt;i&gt; et
&lt;/i&gt;.

</sect1>

<sect1>Conseils Emacs
<p>
<example>
&lt;F1&gt;          Aide
&lt;F10&gt;         Menu
C-u M-! date -R     Insertion de la date selon RFC-822
</example>
</sect1>

<sect1>Démarrer avec l'éditeur
<p>
<example>
démarrer l'éditeur:                   		emacs nom_de_fichier	vim nom_de_fichier
démarrage en vi:                      		vim -v
démarrage en éditeur compatible vi:   		vim -C
démarrage en non-compatible vi:       		vim -N
démarrage avec le mode compilation par défaut:  emacs -q	        vim -N -u NONE
</example>
</sect1>

<sect1 id="editkey">Sommaire des commandes de l'éditeur (emacs, vim)
<p>
<example>
exit:                          C-x C-c         :qa /:wq /:xa /:q!
Retour/mode commande:          C-g             &lt;esc&gt;
Retour(gauche):                C-b             h
Après(droite):                 C-f             l
Suivant(en bas):               C-n             j
Précédent(en haut):            C-p             k
Début de ligne(^):             C-a             0
Fin de ligne($):               C-e             $
Commandes multiples:           C-u nnn cmd     :count cmd
Commandes Multiples:           M-digitkey cmd
Sauvegarder le fichier:        C-x C-f         :w file
Début du tampon:               M-&lt;          1G
Fin du tampon:                 M-&gt;           G
Écran suivant:		       C-v             ^F
Demi-écran suivant:			       ^D
Ligne suivante:		                       ^E
Revenir d'un écran:	       M-v             ^B
Revenir d'un demi-écran:	               ^U
Revenir d'une ligne:	                       ^Y
Aller à la fenêtre suivante:   M-C-v
Effacer sous le curseur:       C-d             x
Effacer à partir du curseur 
jusqu'à la fin de ligne:       C-k             D
iRecherche en avant:            C-s
iRecherche en arrière:          C-r
Chercher en avant:              C-s enter       /
Chercher en arrière:            C-r enter       ?
ichercher regexp:               M-C-s
ichercher en arrière regexp:    M-x isearch-backward-regexp
Chercher regexp:                M-C-s enter     /
Chercher en arrière regexp:     M-x isearch-backward-regexp enter
                                                ?
Aide:                           C-h C-h         :help
Aide Apropos:                   C-h a
Aide sur les liens:             C-h b           :help key
Aide Info:                      C-h i
Help mode Majeur:               C-h m
Aide tutorial:                  C-h t           :help howto
Annulation:                     C-_             u
Refaire:                        C-f             ^R
Marquer la position du curseur: C-@             m{a-zA-Z}
Échange Marque et position:     C-x C-x
Aller à la marque dans le fichier:              '{a-z}
Aller à la marque dans tous les fichiers:       '{A-Z}
copier région:                   M-w             {visual}y
Tuer région:                    C-w             {visual}d
Copier depuis le tampon:        C-y             p y
Copier depuis le tampon suivant:M-y             p
Conversin d'une zone en haut
de casse:                       C-x C-u
conversion d'une zone en bas
de casse:                       C-x C-l
Insère un caractère spécial:    C-q octalnum/keystroke
remplace:                       M-x replace-string      s/aaa/bbb/g
remplace regexp:                M-x replace-regexp      s/aaa/bbb/g
recherche et remplace:          M-%
recherche et remplace:          M-x query-replace
query replace regexp:           M-x query-replace-regexp
Ouvre un fichier:               C-x C-f         :r file
Sauvegarde le fichier:          C-x C-s         :w
Sauve tous les tampons:         C-x s           :wa
Sauvegarde sous:                C-x C-w file    :w file
Demande un tampon:              C-x b
Liste le tampon:                C-x C-b
Commute en lecture seule:       C-x C-q         :
Demande et tue le tampon:       C-x k
Scinde verticalement:           C-x 2
Scinde horizontalement:         C-x 3
Va à une autre fenêtre:         C-x o
Efface cette fenêtre:           C-x 0
Efface d'autre(s) fenêtre(s):   C-x 1
Lance un shell en arrière-plan: M-x compile
Tue un shell en arrière-plan:   M-x kill-compilation
Lance make:                     :make Makefile
Inspecte les messages d'erreur: C-x` 
Lance un shell et enregistre:   M-x shell       :!script -a tmp
...clean BS, ...                                :!col -b &lt;tmp &gt;record
sauve/rappelle le shell/enregistre: C-x C-w record  :r record
Lance shell:                    M-! sh          :sh
Lance une commande:             M-! cmd         :!cmd
Lance une commande et insère:   C-u M-! cmd     :r!cmd
Lance un filtre:                M-| file        {visual}:w file
Lance un filtre et insère:      C-u M-| filter  {visual}:!filter
Montre une option                               :se[t] {option}?
relance l'option                                :se[t] {option}&
relance une option booléenne                    :se[t] no{option}
commute une option booléenne                    :se[t] inv{option}
met le texte sur 72 colonnes                    :se tw=72
pas d'organisation du texte                     :se tw=0
autoindentation                                 :se ai
étend la tabulation                             :se et
spécifie un commentaire (courrier)              :se comments=n:&gt;,n:\|

Lance GDB                       M-x gdb                        
décrit le mode GDB              C-h m                          
saute une ligne                 M-s
va à la ligne suivante          M-n
saute une instruction (stepi)   M-i                            
Finit le cadre de la pile courante      C-c C-f                        
continue                        M-c                            
up arg frames                   M-u                            
down arg frames                 M-d                            
copie le numéro à partir du point, insère à la fin 
                                C-x &                          
Indique une césure              C-x SPC                        
</example>
</sect1>

<sect1>Configuration de Vim
<p>
Afin de mettre en surbrillance les spécificités et la syntaxe avec Vim, aller
dans "~/.vimrc" ou "/etc/vimrc" comme suit:
<example>
set nocompatible
set nopaste
set pastetoggle=&lt;f11&gt;
syn on
</example>
Le mode paste permet d'éviter que l'autoindentation n'interfère avec le
couper/coller en mode console/terminal. C'est mieux que faire un simple ":set
noai".
</sect1>

<sect1>Les balises C
<p>
"apt-get install exuberant-ctags" et lancez ctags dans les fichiers source.
Taper ":tag function_name" dans vim pour aller à la ligne commence
"function_name".  Les balises marchent pour C, C++, Java, Python, beaucoup
d'autres langages.
<p>
[FIXME] emacs possède les mêmes balises.
</sect1>

<sect1>Convertir un écran avec syntaxe en surbrillance en un source html
<p>
"so \$VIMRUNTIME/syntax/2html.vim" avec une commande en mode vim convertira le
texte en texte html.  Sauvegarder avec ":w file.html" et ":q".  Très utile
pour du code C, etc.
</sect1>
</sect>

</chapt>
