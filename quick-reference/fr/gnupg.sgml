<!-- CVS revision of this document "$Revision: 1.8 $"  -->
<!-- CVS revision of original english document "1.11"  -->
<chapt id="gnupg">GnuPG
<p>
Consultez <file>/usr/share/doc/gnupg/README.gz</file> pour des informations
détaillées ou lisez <tt>man gpg</tt>.

<sect>Installer GnuPG
<p>
Lisez le manuel de GNU privacy (dans woody, <package>gnupg-doc</package>).
<example>
# gpg --gen-key                   # génère une nouvelle clé
# gpg --gen-revoke my_user_ID     # génère une clé de révocation pour
                                  # my_user_ID
# host -l pgp.net | grep www|less # cherche les serveurs de clés pgp
</example>
Aujourd'hui, les bons serveurs de clés sont :
<example>
keyserver wwwkeys.eu.pgp.net
keyserver wwwkeys.pgp.net
</example>
Il faut faire attention de ne pas créer plus de deux sous-clés. Si vous le
faites, les serveurs de clés de pgp.net vont corrompre votre clé. De plus, un
seul serveur de clés peut être spécifié dans votre
<file>$HOME/.gnupg/options</file>
<p>
Malheureusement, les serveurs suivants ne fonctionnent plus :
<example>
keyserver search.keyserver.net
keyserver pgp.ai.mit.edu
</example>
</sect>

<sect>Utiliser GnuPG
<p>
Gestion de fichiers :
<example>
$ gpg  [options]  command  [args]
$ gpg {--armor|-a} {--sign|-s} file # signe file dans le fichier file.asc
$ gpg --clearsign file              # signe file sans le chiffrer
$ gpg --clearsign --not-dash-escaped patchfile  # signe sans le chiffrer patchfile
$ gpg --verify file         # vérifie un fichier signé sans chiffrement
$ gpg -o file.sig {-b|--detach-sign} file # crée une signature détachée
$ gpg --verify file.sig file        # vérifie file à l'aide de file.sig
$ gpg -o crypt_file {--recipient|-r} name {--encrypt|-e} file 
        # chiffrement à clé publique pour le destinataire name
$ gpg -o crypt_file {--symmetric|-c} file # chiffrement symétrique
$ gpg -o file --decrypt crypt_file        # déchiffrement
</example>
</sect>

<sect>Gérer GnuPG
<p>
Gestion des clés :
<example>
$ gpg --edit-key user_ID               # "help" pour l'aide, intéractive
$ gpg -o file --exports                # exporte toutes les clés vers le fichier file
$ gpg --imports file                   # importe toutes les clés depuis un fichier file
$ gpg --send-keys user_ID              # envoie la clé de user_ID vers un serveur de clés
$ gpg --recv-keys user_ID              # reçoit la clé de user_ID depuis le serveur de clés
$ gpg --list-keys user_ID              # liste les clés de user_ID
$ gpg --list-sigs user_ID              # liste les  signatures de user_ID
$ gpg --check-sigs user_ID             # vérifie la signature de user_ID
$ gpg --fingerprint user_ID            # vérifie l'empreinte de user_ID
$ gpg --list-sigs | grep '^sig' | grep '[User id not found]' \
  | awk '{print $2}' | sort -u | xargs gpg --recv-keys # get unknownkeys
  # met à jour les clés pour toutes les signatures inconnues
</example>
Code de confiance :
<example>
-         Pas de confiance assignée au possesseur / pas encore calculée
e         Calcul de la confiance échoué
q         Pas assez d'informations pour le calcul
n         Ne jamais faire confiance à cette clé
m         Confiance marginale
f         Confiance complète
u         Confiance ultime
</example>
</sect>

<sect>Utilisation avec Mutt
<p>
Ajoutez les instructions suivantes à <file>~/.muttrc</file> pour éviter que
GnuPG, qui est lent, s'exécute automatiquement mais soit quand même utile.
<example>
macro index S ":toggle pgp_verify_sig\n"
set pgp_verify_sig=no
</example>
</sect>

</chapt>
