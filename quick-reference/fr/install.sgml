<!-- CVS revision of this document "$Revision: 1.4 $"  -->
<!-- CVS revision of original english document "1.21"  -->
<CHAPT ID="install">Installation du système Debian GNU/Linux
<p>
Bien que ce document ait été commencé à l'époque de Potato, la majeure partie
de son contenu vise l'édition Woody (Debian 3.0).

<sect>Préface
<p>
Les exemples de commandes dans ce document supposent que le lecteur utilise le shell Bash. Conventions :
<example>
# commande en compte root
$ commande en compte utilisateur
... description de l'action
</example>

Pour la documentation de Bash, "man bash", et consultez aussi le HOWTO <file>/usr/share/doc/HOWTO/en-txt/Bash-Prog-Intro-HOWTO.gz</file>.
<p>
Tous les scripts d'exemples sont situés à 
<url id="http://qref.sourceforge.net/quick/examples/" 
name="http://qref.sourceforge.net/quick/examples/">.
Dans ce répertoire, le "." débutant un nom de fichier caché est changé en "_".
</sect>

<sect>Les Fondements de la Distribution
<p>
Debian GNU/Linux est distribués en 3 versions: 
<list>
<item>stable:   Correct comme serveur. Ennuyeux comme Station de Travail (ST).
<item>testing:  Correct comme ST pendant qu'on lit debian-devel-announce.
<item>unstable: Ne jamais suivre cette version, à moins de la connaître.  Upgrader de manière sélective et avec prudence.
</list>
En janvier 2002, ces versions correspondent à potato (qualité de production),
woody (beta-test, très stable maintenant), et sid (alpha-test).  Lorsque les
paquetages dans unstable n'ont plus de bug grave répertorié pendant une
première semaine ou plus, ils sont automatiquement intégrés dans testing. 
<p>
En théorie, il y a deux choses que vous pouvez faire pour faire tourner les
derniers logiciels.
<p>
<ref id="apt-install">: Plus pour ST.
<p>
<ref id="port">: Plus pour le serveur.
<p>
Je vais présenter ici de l'information de base pour vivre heureusement avec
les derniers logiciels en tirant parti de la distribution Debian testing et de
unstable.
Pour ceux qui sont impatients, allez à <ref id="survival"> immédiatement.
Joyeuse mise à jour !
</sect>

<sect>Installation du système Linux
<p>
En vue de minimiser les risques associés aux paquetages testing et unstable,
c'est une bonne habitude de configurer le système Linux en dual boot avec un
autre système Linux plus petit et stable.

<sect1>Compatibilité matérielle de base
<p>
Linux est compatible avec la plupart des matériels PC. Linux peut être
installé sur presque tout système. Pour moi il a été aussi facile à installer
que Windows 95/98/Me.  Il semble que la liste des compatibilités matérielles
s'allonge encore.
<p>
Si vous possédez un PC portable, consultez :
<url id="http://www.linux-laptop.net/" name="Linux on Laptops">
pour identifier sa situation.
<p>
Ma recommandation pour le matériel type PC de bureau est "Soyez juste
conservateur."
<list>
<item>SCSI sur IDE pour le travail, IDE/ATAPI HD pour l'utilisation privée.
<item>IDE/ATAPI CD-ROM (or CD-RW).
<item>PCI sur ISA. Spécialement pour NIC (réseau).
<item>Utilisez une NIC de base.  Tulip pour PCI, NE2000 pour ISA conviennent bien.
<item>Évitez PCMCIA (notebook) comme première tentative d'installation de Linux.
<item>Pas de clavier ou de souris USB, ... à moins de vouloir faire face à un défi.
</list>
Pour une machine lente, extraire son disque dur et le connecter dans une autre
machine plus rapide pour accélérer l'installation est une bonne idée.  
</sect1>

<sect1>Trouver le matériel du PC et le chipset
<p>
Durant l'installation, on sera interrogé sur le matériel ou le chipset.
Ces informations ne sont pas toujours faciles à trouver. Voici mes conseils :
<p>
(1) Ouvrez le PC et inspectez l'intérieur. 
<p>
(2) Enregistrez les chiffres qui sont sur la grande puce de la carte graphique, de la carte réseau, 
sur la puce à côté des ports série et la puce à côté des ports IDE.  
<p>
(3) Enregistrez les noms des cartes imprimés au dos des cartes PCI et ISA.
</sect1>

<sect1>Trouver le matériel du PC avec GNU/Debian
<p>
Les commandes suivantes sur le système Linux installé devraients donner
quelqu'idée sur le matériel présent et la configuration.
<example>
$ lspci -v |less
$ less /proc/pci
$ less /proc/interrupts
$ less /proc/ioports
</example>
</sect1>

<sect1>Trouver le matériel du PC avec d'autres systèmes d'exploitation (SE)
<p>
D'autres sources d'information concernant le matériel peuvent être obtenues
avec d'autres SE.
<p>
Installez une autre distribution Linux commerciale.  La détection du matériel
tend à être meilleure que celle de Debian, pour l'instant.  Ceci peut changer
avec la nouvelle woody.
<p>
Installez Windows.  La configuration matérielle peut être obtenue en faisant
un clic droit sur "My computer" pour aller sur propriétés/ Enregistrez toutes
les ressources d'information comme IRQ, I/O port address, DMA. Quelques
vieilles cartes ISA doivent être configurées sous DOS et utilisées dans cette
mesure.
</sect1>

<sect1>Le Mythe Lilo 
<p>
Lilo est limité à 1024 cylindres.  &mdash; FAUX !
<p>
Le nouveau <prgn>lilo</prgn> (LInux boot LOader) utilisé avec la version potato
de Debian supporte lba32. Si le BIOS de la carte mère est assez récent pour
supporter lba32, <prgn>lilo</prgn> devrait être capable de charger au-delà de
la limite des 1024 cylindres.
<p>
Assurez-vous simplement d'ajouter la ligne "lba32" vers le début de votre fichier <prgn>lilo.conf</prgn> si vous avez gardé un vieux <prgn>lilo.conf</prgn>.
</sect1>

<sect1 id="bootfloppy">Choix des disquettes de boot
<p>
Un disque IDEPCI est ce qu'il y a de meilleur si vous installez sur une machine
de bureau. Le noyau IDEPCI sur un boot disque IDEPCI reconnaît les cartes
réseau PCI, bien que vous pouvez obtenir presque tout hors réseau.  Vous avez
besoin seulement de 2 disquettes (boot et root).
<p>
Pour les systèmes spéciaux, créez une disquette de secours en remplaçant
l'image appelée "linux" sur la disquette de secours Debian par une autre image
compressée du noyau compilée ailleurs pour la machine.  Les détails sont
documentés dans le fichier <file>readme.txt</file> de la disquette de secours.
La disquette est formattée en MSDOS, aussi vous pouvez utiliser n'importe quel
système pour lire et éditer ce fichier.  Ceci peut rendre la vie plus facile à
ceux qui possèdent une carte réseau spéciale, etc..
<p>
Pour les cartes réseau PCMCIA, installez un setup PCMCIA et n'installez pas une
configuration réseau standard.
</sect1>

<sect1>Installation
<p>
Les conseils rapides pour l'installation de potato sont (description des boîtes
de dialogue) :
<enumlist>
<item> Préparer l'ensemble de disquettes secours/root(/driver). (IDEPCI pour ordinateur de bureau)
<item> Booter avec les disquettes secours et root.
<item> Fdisk/fsck/mount swap, root, tmp, var, home, usr, etc.. (pas de support de la version 2.0)
<item> Install OS. (Pour IDEPCI, le réseau est installable)
<item> Si la disquette avec noyau standard est utilisée, installez les disques de pilotes ici.
<item> Configurez les pilotes. (Il n'y a pas de possibilité d'option ici, avec IDE)
<item> Installez le système de base à partir du réseau ou de la disquette. (<file>base2_2.tgz</file>) [WOODY: peut ne pas être là]
<item> Configurez le système de base.
<item> N'installez pas <prgn>lilo</prgn> comme MBR et utilisez le mbr multi-boot.
<item> Relancez le système. (Ne créez pas en même temps un boot sur disquette)
<item> MD5 yes, shadow yes, configurez aussi un compte utilisateur
<item> Install advanced (dselect **) -- pour les débutants choisissez simple
<item> Sélectionnez un ensemble minimum à votre goût. Exclure emacs, nvi, tex, telnet,
talk(d), et inclure mc, vim, kernel-image-2.2.18pre21 (noyau complet si le disque 
IDE est utilisé pour l'installation), ...
<item> Install (download all...)
<item> Pour toutes les questions de configuration, répondre = y (remplace current)
<item> exim: séléctionner 2 pour une machine derrière un pare-feu, 1 pour une machine reliée à Internet.
</enumlist>
Pour plus d'informations sur dselect, voir <ref id="dselect">.
</sect1>

<sect1>Host et IP à utiliser
<p>
J'utilise un sous-réseau de classe C à la maison,
<example>
192.168.1.1     gateway (Linux SMB/NFS/DNS/DHCP/MAIL/SQUID Server)
192.168.1.2     minnie  (Windows98J, Pentium 233MMX)
192.168.1.3     goofy   (Linux ST, Celeron 433MHz SMP)
192.168.1.4     mickey  (Linux ST, Pentium 233MMX CD-RW)
192.168.1.5     pooh    (WindowsMEJ, Celeron 650 CD-RW)
...
192.168.1.DHCP          (DHCP=100-200)
</example>
</sect1>

<sect1>Comptes Utilisateurs.
<p>
Afin d'avoir une organisation cohérente entre toutes les machines, quelques
premiers comptes sont toujours les mêmes sur mon système.
<p>
Je définis toujours le premier compte comme "admin" (uid=1000).  Tous les
messages de root sont dirigés ici.  Ce compte est fait pour être un membre d'un
groupe qui possède une bonne quantité de privilèges avec la commande
<prgn>sudo</prgn>.  Voir <ref id="newuser"> pour les détails.
</sect1>

<sect1>Partition du disque dur et configuration de NFS
<p>
Je préfère avoir différentes partitions pour différentes arborescences de
répertoires, afin de limiter les dommages en cas de plantage du système. Par
exemple :
<example>
/          == (/ + /boot + /bin + /sbin)
           == 50MO+
/tmp       == 100MO+
/var       == 100MO+
/home      == 100MO+
/usr       == 700MO+ avec X
/usr/local == 100MO
</example>
<p>
La taille du répertoire <file>/usr</file> est très dépendante des applications
X-window.  <file>/usr</file> peut être de 300MO s'il n'y a qu'un
terminal-console, et 2GO&ndash;3GO est un bon chiffre  si on installe un
certain nombre d'applications Gnome.
<p>
Par exemple, le statut courant de la machine qui sert de passerelle Internet
est le suivant  (sortie de la commande <tt>df -h</tt>) :
<example>
Filesystem            Size  Used Avail Use% Mounted on
/dev/hda3             300M  106M  179M  38% /
/dev/hda7             100M   12M   82M  13% /home
/dev/hda8             596M   53M  513M  10% /var
/dev/hda6             100M  834k   94M   1% /var/lib/cvs
/dev/hda9             596M  222M  343M  40% /usr
/dev/hda10            596M  130M  436M  23% /var/cache/apt/archives
/dev/hda11            1.5G  204M  1.2G  14% /var/spool/squid
</example>
La grande taille de <file>/var/spool/squid</file> est pour le proxy en vue du
téléchargement des paquetages.
<p>
Ci-dessous la sortie de <tt>fdisk -l</tt> pour donner une idée.
<example>
# fdisk -l /dev/hda # comment

/dev/hda1             1        41    309928+   6  FAT16 # DOS
/dev/hda2            42        84    325080   83  Linux # (pas utilisé)
/dev/hda3   *        85       126    317520   83  Linux # Principal
/dev/hda4           127       629   3802680    5  Extended
/dev/hda5           127       143    128488+  82  Linux swap
/dev/hda6           144       157    105808+  83  Linux
/dev/hda7           158       171    105808+  83  Linux
/dev/hda8           172       253    619888+  83  Linux
/dev/hda9           254       335    619888+  83  Linux
/dev/hda10          336       417    619888+  83  Linux
/dev/hda11          418       629   1602688+  83  Linux
</example>
Quelques partitions inutilisées existent.  Elles sont réservées pour installer
une seconde distribution Linux ou une réserve d'espace pour une arborescence de
répertoires en expansion.
<p>
S'il y a plus de 2 disques, il faut installer une partition de swap par disque
pour atteindre une performance maximale.  
<p>
Le montage de ces partitions est en accord avec les indications de
<file>/etc/fstab</file>.
<example>

# /etc/fstab: information du fichier système statique.
#
# file system	mount point	type	options		       dump pass
/dev/hda3	/		ext2	defaults,errors=remount-ro 0 1
/dev/hda5	none		swap	sw			0 0
proc		/proc		proc	defaults		0 0
/dev/fd0	/floppy		auto	defaults,user,noauto	0 0
/dev/cdrom	/cdrom		iso9660	defaults,ro,user,noauto	0 0
#
# conserve les partitions séparées
/dev/hda7	/home		ext2	rw			0 2
/dev/hda8	/var		ext2	rw			0 2
/dev/hda6	/var/lib/cvs	ext2	rw			0 2
/dev/hda9	/usr		ext2	rw			0 2
/dev/hda10	/var/cache/apt/archives ext2	rw		0 2

# une très grande partition pour le cache proxy
/dev/hda11	/var/spool/squid ext2	rw			0 2

# backup bootable sous DOS
/dev/hda1	/mnt/dos	vfat	rw,noauto		0 0
# backup bootable sous système Linux (pas fait)
/dev/hda2	/mnt/linux	ext2	rw,noauto		0 0
#
# montages nfs 
mickey:/	/mnt/mickey	nfs	ro,noauto,intr		0 0
goofy:/		/mnt/goofy	nfs	ro,noauto,intr		0 0
# minnie:/ /mnt/minnie smbfs ro,soft,intr,credentials={filename} 0 2
</example>
Ici j'utilise <tt>noauto,intr</tt> combiné avec l'option par défaut en "dur"
pour nfs.  De cette  manière, les arrêts de procédure dus à une connexion morte
peuvent être réactivés par control-C.
<p>
Pour une machine sous Windows connectée avec Samba (smbfs), <tt>rw,auto,soft,intr</tt>
peut être une bonne idée. (FIXME)
<p>
Contrôle de autofs (FIXME)
<p>
Pour un lecteur de disquettes, utiliser <tt>noauto,rw,sync,user,exec</tt> au lieu prévient les corruptions de données après une éjection accidentelle du disque sans le démonter, mais cela ralentit l'écriture.
<p>
Le serveur Linux nfs externe (goofy) se trouve derrière un pare-feu
(passerelle). J'ai une politique de sécurité très relâchée sur LAN puisque je
suis le seul à l'utiliser. Pour obtenir un accès nfs, le côté du serveur nfs a
besoin qu'on ajoute <file>/etc/exports</file> comme suit :
<example>
# /etc/exports: la liste de contrôle d'accès pour les systèmes de fichier qui peuvent être exportés
#               vers les clients NFS.  Voir exports(5).
/       (rw,no_root_squash)
</example>
Ceci est utile pour activer le serveur nfs en plus de l'installation et de
l'activation d'un client/serveur nfs.
<p>
Je crée généralement une seule partition de 2GO pour une installation
expérimentale et/ou secondaire et paresseuse de Linux, pour plus de simplicité.
Je partage optionnellement les partitions swap et <file>/tmp</file> pour ces
installations.  Le schéma de multi-partitionnement est trop complexe pour ces
usages.  Si on a besoin d'un système simple utilisé en console, 500MO peuvent
être largement suffisants.
</sect1>

<sect1>Guide de la mémoire DRAM 
<p>
Ce qui suit sont des indications grossières de la ligne directrice pour DRAM.
<example>
  4 MO :  Minimum suffisant pour faire fonctionner le noyau Linux.
 16 MO :  Minimum pour un usage du système en mode console.
 32 MO :  Minimum pour un système X simple.
 64 MO :  Minimum pour un système X avec GNOME/KDE.
128 MO :  Confortable pour le système X avec GNOME/KDE.
256+MO :  Pourquoi pas si ça vous chante. La DRAM est bon marché.
</example>
L'option de boot <tt>mem=4m</tt> (ou lilo <tt>append="mem=4m"</tt>) montrera
comment le système se comporterait en ayant 4MO de mémoire installée.  Le
paramétrage du boot de Lilo  est requis pour un système ayant plus de 64MO de
mémoire avec un vieux BIOS.
</sect1>

<sect1>Espace de Swap
<p>
J'utilise la ligne directrice suivante :
<example>
Total swap = min(1x-2x de RAM installée, 128 MO - 1 GO)
Chaque swap  &lt; 128 MO
Installation sur un disque différent.
Utilisation de la partie centrale du disque, si je le souhaite.
</example>
Même si vous n'en avez pas besoin, de l'espace de swap (128MO) est requis,
sinon le système ralentit avant de planter avec un programme qui manque de
mémoire.
</sect1>
</sect>

<sect>Configuration Bash
<p>
Je modifie les scripts de démarrage à mon goût sur tout le système :
<example>
/etc/bash.bashrc        Remplace avec un script personnalisé
/etc/profile            Garde copie de la distribution ( \w -&gt; \W)
/etc/skel/.bashrc       Remplace avec une copie privée
/etc/skel/.profile      Remplace avec une copie privée
/etc/skel/.bash_profile Remplace avec une copie privée
~/.bashrc           Remplace avec une copie privée pour tous les comptes
~/.profile          Remplace avec une copie privée pour tous les comptes
~/.bash_profile     Remplace avec une copie privée pour tous les comptes
</example>
<url id="examples/" name="Voir détails dans mon exemple."> 
J'aime les systèmes transparents, j'ai donc paramétré umask 002 ou 022.
<p>
<tt>PATH</tt> est paramétré par les fichiers de configuration suivants, dans
cet ordre.
<example>
/etc/login.defs  - avant que le shell paramètre PATH
/etc/profile     ( peut appeler /etc/bash.bashrc)
~/.bash_profile  ( peut appeler ~/.bashrc)
</example>
</sect>

<sect>Configuration de la souris 
<p>
En cas d'un connecteur de souris de type PS/2 sur une carte mère ATX. Le signal
sera :
<example>
mouse -&gt; /dev/psaux -&gt; gpm -&gt; /dev/gpmdata = /dev/mouse -&gt; X
</example>
Ceci permet au clavier ou à la souris d'être déconnecté et réinitialisé en
redémarrant gpm après  reconnexion.  X restera activé !
<p>
Pour les souris Logitech 3 boutons PS2, la combinaison de configuration sera:
<example>
/etc/gpm.conf                 /etc/X11/X86Config or X86Config4
=============================================================
device=/dev/psaux             Section "Pointer"
responsiveness=                 Protocol    "IntelliMouse"
repeat_type=ms3                 Device      "/dev/gpmdata"
type=ps2
append=""
--------------------------------------------------------------
device=/dev/psaux             Section "Pointer"
responsiveness=                 Protocol    "IntelliMouse"
repeat_type=raw                 Device      "/dev/gpmdata"
type=ps2
append=""
</example>
Si une souris normale à 2 boutons PS2 est utilisée, paramétrez le protocole X à
<tt>Microsoft</tt> et validez <tt>Emulate3Buttons</tt>.  Pour les souris à
roulette, vous pouvez ajuster X au protocole réel, comme  <tt>IMPS/2</tt> en
utilisant le second cas.  Créez un lien symbolique <file>/dev/gpmdata</file>
--&gt; <file>/dev/mouse</file> pour réussir la configuration  de l'utilitaire. 
<url id="examples/" name="Voir les détails dans mon exemple.">
<p>
Pour certains portables récents Toshiba : activez <prgn>gpm</prgn> avant PCMCIA
dans le  script System-V init.  Ceci évite à <prgn>gpm</prgn> de planter.
Étrange, mais vrai.
</sect>

<sect>Configuration NFS
<p>
Configurer NFS dans <file>/etc/exports</file>.
<example>
# echo "/ *.domainname-for-lan-hosts(rw,no_root_squash,nohide)" \
        &gt;&gt; /etc/exports
</example>
<url id="examples/" name="Voir détails dans mon exemple.">.
</sect>

<sect>Configuration Samba
<p>
Configurer Samba en mode "partage" est plus facile pour créer un partage du
disque de type WfW.  Mais c'est mieux de le configurer en mode "utilisateur". 
<p>
Samba peut être configuré à l'aide de <prgn>sambaconfig</prgn> ou
<prgn>vi</prgn>:
<example>
$su -c "sambaconfig"
$su -c "vi /etc/samba/smb.conf"
</example>
<url id="examples/" name="Voir détails dans mon exemple.">
<p>
Ajouter un nouvel utilisateur au fichier smbpasswd peut être fait par
<prgn>smbpasswd</prgn> :
<example>
$su -c "smbpasswd -a username"
</example>
Assurez-vous de l'utilisation d'un mot de passe crypté pour une meilleure
compatibilité.
<p>
Le rang de l'OS signifie ce qui suit et plus grand est le nombre, plus haute
est la priorité du serveur.
<example>
0:      Samba avec des comportements relâchés
1:      Wfw 3.1, Win95, Win98, Win/me?
16:     Win NT WS 3.51
17:     Win NT WS 4.0
32:     Win NT SVR 3.51
33:     Win NT SVR 4.0
255:    Samba avec beaucoup de puissance
</example>
Assurez-vous que les utilisateurs sont membres du groupe possédant le
répertoire qui est partagé et que le bit d'exécution du répertoire est
positionné à accès.
</sect>

<sect>Configuration de l'Imprimante 
<p>
Installez LPRng au lieu du classique <prgn>lpr</prgn>.
<example>
# apt-get install lprng enscript gs
</example>
Dans la version de Debian potato 2.2r2 de mars 2001, <prgn>printtool</prgn> et
<prgn>lprngtool</prgn> ne font pas partie des paquets.  Récupérez un de ces
paquets dans  <file>woody/binary-all/admin</file> et faites <tt>dpkg -i</tt>
pour l'installer.
<p>
Si la machine Windows accède à l'impression par Samba, l'accès doit se faire
sans le filtre GS (GhostScript) par le biais du pilote d'imprimante Windows, ou
bien l'accès peut se faire par le filtre GS au travers des pilotes d'imprimante
PostScript comme avec Apple Laser Writer.
</sect>

<sect>Autres conseils de configuration de l'hôte

<sect1>Installer quelques paquetages supplémentaires et faire les choses "de base".
<p>
Voir <ref id="dselect">. J'élimine habituellement (_) : TEX, nvi, ae, lynx, et
j'ajoute (+) : vim, ssh, lynx-ssl, mc.
<p>
Editer <file>/etc/inittab</file> pour avoir CTRL-DEL-ALT=halt afin d'éteindre
aisément la machine.
</sect1>

<sect1>Modules
<p>
Configurer les pilotes en les installant.  Lister les noms de module dans
<file>/etc/modules</file>.  J'utilise <prgn>lsmod</prgn> et <prgn>depmod</prgn>
pour les contrôler manuellement.
<p>
Ajouter aussi quelques lignes dans <file>/etc/modules</file> pour mettre en
route ip-masquerading (ftp etc.)
<url id="examples/" name="Voir détails dans mon exemple.">

</sect1>

<sect1>Configuration de base de CD-RW 
<p>
Éditer les fichiers suivants:
<example>
/etc/lilo.conf  (ajouter append="hdc=ide-scsi", 
                 lancer lilo pour activer)
/dev/cdrom      (lien relatif # cd /dev; ln -sf scd0 cdrom)
/etc/modules    (ajouter "ide-scsi" et "sg".  Si besoin est "sr" 
                 après cela.)
</example>
Voir <ref id="cdrw"> pour les détails.
</sect1>

<sect1 id="apm">Grande capacité mémoire et arrêt automatique 
<p>
Éditer <file>/etc/lilo.conf</file> comme suit pour configurer les paramètres du
prompt de démarrage pour la mémoire de grande capacité (pour les noyaux 2.2) et
l'arrêt automatique (pour apm) :
<example>
append="mem=128M apm=on apm=power-off"
</example>
Lancer <prgn>lilo</prgn> pour installer cette configuration.
<tt>apm=power-off</tt> est requis pour un noyau multiprocesseur (SMP).  La même
chose peut être faite directement au prompt de boot. Voir <ref
id="bootprompt">.
<p>
Si apm est compilé comme module comme c'est le cas par défaut dans les noyaux
2.4 de Debian, lancez <tt># insmod apm power_off=1</tt> après le boot ou
configurez <file>/etc/modules</file> par :
<example>
# echo "apm power_off=1" &gt;&gt;/etc/modules
</example>
<p>
De manière alternative, compiler le support ACPI permet d'atteindre le même
but avec les nouveaux noyaux et semble plus compatible avec SMP (requiert une
carte mère récente).  Le noyau 2.4 avec une carte mère récente devrait
correctement détecter les grandes capacité mémoire.
<example>
CONFIG_PM=y
CONFIG_ACPI=y
...
CONFIG_ACPI_BUSMGR=m
CONFIG_ACPI_SYS=m
</example>
et ajouter les lignes suivantes dans <file>/etc/modules</file> selon cet ordre.
<example>
ospm_busmgr
ospm_system
</example>
Ou recompiler le noyau avec toutes les options ci-dessus en cochant
"y".  Dans tous les cas, avec ACPI, aucun des paramètres du prompt de boot
n'est requis.
</sect1>

<sect1>Autre configuration à vérifier dans <file>/etc</file>
<p>
Vous pouvez avoir envie d'ajouter un fichier <file>/etc/cron.deny</file>, qui
manque dans l'installation standard de Debian (vous pouvez copier
<file>/etc/at.deny</file>).
</sect1>

</sect>

</chapt>



