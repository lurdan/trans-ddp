<!-- CVS revision of this document "$Revision: 1.10 $"  -->
<!-- CVS revision of original english document "1.18"  -->

<chapt id="gateway">Construire une passerelle avec &debian;
<p>
Linux permet d'avoir une machine passerelle tout usage, avec NAT, mail, DHCP,
cache DNS, cache proxy HTTP, CVS, NFS, et services Samba pour un réseau local
personnel.

<sect>Configuration réseau
<p>

<sect1 id="ip-class">Configuration de la passerelle
<p>
Le réseau local  utilise des adresses IP des plages ci-dessous pour éviter les
collisions d'adresses avec l'Internet.
<example>
Class A: 10.0.0.0                    avec masque 255.0.0.0
Class B: 172.16.0.0 - 172.31.0.0     avec masque 255.255.0.0
Class C: 192.168.0.0 - 192.168.255.0 avec masque 255.255.255.0
</example>
<p>
Debian utilise  <file>/etc/network/interfaces</file> pour la configuration IP.
<p>
Par exemple, si <file>eth0</file> est connectée à l'Internet avec une adresse
IP fournie par DHCP et <file>eth1</file> est connectée au réseau local,
<file>/etc/network/interfaces</file> est configuré comme suit (Woody ou
version plus récente) :
<example>
auto eth0
iface eth0 inet dhcp

auto eth1
iface eth1 inet static
address 192.168.1.1
network 192.168.1.0
netmask 255.255.255.0
broadcast 192.168.1.255
</example>
Exécutez les commandes suivantes pour mettre à jour la configuration réseau
avec le nouveau <file>/etc/network/interfaces</file> :
<example>
# /etc/init.d/networking restart
</example>
Rappel : le fichier <file>interfaces</file> de Woody est incompatible avec
celui de Potato.
<p>
Si le système utilise une carte réseau PCMCIA, il faut configurer le réseau
dans <file>/etc/pcmcia/network.opts</file> à la place.
<p>
En cas de doute, consultez la sortie des commandes suivantes :
<example>
# ifconfig
# cat /proc/pci
# cat /proc/interrupts
# dmesg|more
</example>
Parfois, les connexions DSL (PPPoE ?) ont des problèmes de MTU. Consultez le
<url id="http://www.linuxdoc.org/HOWTO/DSL-HOWTO/index.html" name="DSL-HOWTO">
du LDP.
</sect1>

<sect1>IP-masquerade
<p>
Les machines du LAN peuvent accéder à l'Internet à travers une passerelle qui
utilise IP-masquerade (NAT).
<example>
# apt-get install ipmasq
</example>
Appliquez les règles de l'exemple pour fortifier la protection
<prgn>ipmasq</prgn>. Consultez
<file>/usr/share/doc/ipmasq/examples/stronger/README</file>.
<!-- Now upstream is current
Updated scripts here:
<url id="http://qref.sourceforge.net/quick/examples/"
name="A80firewall.def I80firewall.def O80firewall.def">.
-->
Pour l'image du noyau Debian 2.4, assurez-vous de charger les modules
appropriés. Consultez <ref id="kernel-net">.
<p>
Pour l'image du noyau Debian 2.2, éditez <file>Z92timeouts.rul</file> dans
<file>/etc/masq/rules</file> comme suit :
<example>
# tcp, tcp-fin, udp
# 2hr, 10 sec, 160 sec - default
# 1 day, 10 min, 10 min - longer example
$IPCHAINS -M -S 86400 600 600
</example>
De plus, si le réseau est accédé par une carte PCMCIA, <prgn>ipmasq</prgn> a
besoin d'être démarré depuis <file>/etc/pcmcia/network.opts</file>. Consultez
<file>/usr/share/doc/ipmasq/ipmasq.txt.gz</file>.
</sect1>

<sect1>Points principaux de la configuration réseau pour une passerelle
<p>
Ensemble de programmes typique :
<example>
# apt-get install nfs samba dhcpd dhcp-client bind squid procmail fetchmail
# apt-get install ssh cvs
</example>
<p>
Ensuite, consultez les fichiers suivants :
<example>
/etc/init.d/dhcpd       (éditer pour avoir LAN = eth1)
/etc/host.allow         (ALL: 192.168.0.0/16 127.0.0.0/8) pour NFS
/etc/exports            (besoin pour NFS)
/etc/bind/db.192.168.1  (à ajouter)
/etc/bind/db.lan        (à ajouter)
/etc/bind/named.conf    (à éditer)
/etc/resolve.conf       (à éditer)
/etc/hosts
/etc/dhcpd.conf         (éditer pour avoir LAN = eth1)
/etc/dhclient.conf      (éditer pour forcer le DNS local)
/etc/samba/smb.conf
/etc/exim/exim.conf
/etc/mailname
/etc/aliases
/etc/squid.conf         (ajouter toutes les adresses IP des machines du LAN
comme machines autorisées)
</example>
<prgn>bind</prgn> crée un cache DNS local et transforme l'hôte local en
serveur DNS. Consultez le fichier <file>/etc/resolve.conf</file> :
<example>
nameserver 127.0.0.1
search lan.aokiconsulting.com
</example>
</sect1>

</sect>

<sect>Gérer plusieurs connexions à l'Internet
<p>
[FIXME] Politique de routage : (par Phil Brutsche
pbrutsch@tux.creighton.edu) Voir le <url id="http://ds9a.nl/2.4Routing/"
name="Manuel d'iproute"> pour les détails. Le contrôle de traffic peut aussi
être intéressant.
<p>
Environnement :
<example>
eth0: 192.168.1.2/24; gateway 192.168.1.1
eth1: 10.0.0.2/24; gateway 10.0.0.1
Pas de masquerading sur cette machine.
</example>
Un peu de magie :
<example>
# ip rule add from 192.168.1.2 lookup 1
# ip rule add from 10.0.0.2 lookup 2
# ip route add to default via 10.0.0.1 metric 0
# ip route add to default via 192.168.1.1 metric 1
# ip route add table 1 to 192.168.1.0/24 via eth0
# ip route add table 1 to 10.0.0.2/24 via eth1
# ip route add table 1 to default via 192.168.1.1
# ip route add table 2 to 192.168.1.0/24 via eth0
# ip route add table 2 to 10.0.0.2/24 via eth1
# ip route add table 2 to default via 10.0.0.2
</example>
[FIXME] Je n'ai jamais fait cela. Comment configurer une connexion RTC en
cas de défaillance d'une connexion rapide ?
</sect>


</chapt>
