<!-- CVS revision of this document "$Revision: 1.3 $"  -->
<!-- CVS revision of original english document "1.3"  -->
<chapt id="gateway">Construire une passerelle avec Debian GNU/Linux
<p>
Voici ma configuration pour une machine passerelle. Serveur de Mail, serveur
DHCP, cache DNS, proxy Web, serveur CVS, serveur NFS, server SMB, etc.

<sect>Configuration réseau
<p>
Ici se trouvent les informations de configuration réseau.

<sect1>Réseau privé
<p>
Il est recommandé d'utiliser les adresses IP suivantes pour le réseau privé.
Le réseau privé est un LAN séparé par un pare-feu utilisant
l'IP-masquerade(NAT).
<example>
Class A: 10.0.0.0                    avec masque 255.0.0.0
Class B: 172.16.0.0 - 172.31.0.0     avec masque 255.255.0.0
Class C: 192.168.0.0 - 192.168.255.0 avec masque 255.255.255.0
</example>
<p>
Ma préférence pour mon réseau privé à la maison va pour la classe C. Je ne
peux avoir au maximum que 254 machines avec la classe C, mais cela est
amplement suffisant. Je choisis 192.168.1.0 comme adresse de mon réseau privé
par habitude. Chaque machine est assignée une adresse manuellement parmi
192.168.1.1, 192.168.1.2, 192.168.1.3, ..., 192.168.1.254.
<p>
J'utilise 192.168.0.0/24 pour le proxy transparent (squid).
<p>
Mon masque de réseau est 255.255.255.0 et mon adresse de diffusion est
192.168.1.255. J'utilise 192.168.1.1 pour la machine passerelle. (Certaines
distributions préconfigurent 192.168.1.254 pour la passerelle pendant
l'installation. Faites attention.)
</sect1>

<sect1>Configuration de la passerelle
<p>
La passerelle vers l'Internet est une Debian Potato 2.2 avec la configuration
suivante.
<example>
Paramètres d'installation :
    hostname=gateway (J'utilise maintenant le nom donné par mon FAI à la
place.)
    domainname=lan.aokiconsulting.com (pareil qu'au-dessus.)
Actuellement 2 cartes réseau PCMCIA 10 base/T (cartes PCI Tulip auparavant)
sont installées :
    externe : connectée à un modem câble ATT@HOME 
    interne : connectée à un commutateur 100 baseT
</example>
<p>
Debian utilise /etc/network/interfaces pour la configuration IP, alors que
Redhat utilise /etc/sysconfig/network.
<url id="examples/" name="Consultez les exemples de /etc/network/interfaces">
<p>
Consultez la sortie des commandes suivantes en cas de problème :
<example>
# ifconfig
# cat /proc/pci
# cat /proc/interrupts
# dmesg|more
</example>
</sect1>

<sect1>Points principaux de la configuration réseau pour une passerelle
<p>
Pour une passerelle entre un LAN et Internet à la maison, vous pouvez combiner
toutes les fonctions sur la même machine.
<example>
Paquets :
    ipmasq, bind, squid, exim, dhcpd, samba, nfs (kernel)
Connnexion à Internet par câble @Home (adresse IP fixe attribuée par DHCP)
FAI :
    bootp -&gt; no		(On utilise l'IP fixe à la place)
    ip = 24.19.151.xxx		(IP attribuée par le FAI, eth0)
    gw = 24.19.151.1		(IP attribuée par le FAI)
    ns = 24.1.4.12 24.1.4.14	(DNS fournis par le FAI, pour l'installation
seulement)

LAN :

    Internet (n'importe quelle IP)
        |
    Passerelle du FAI:(24.19.151.1)
        |
    eth0:(24.19.151.xxx)=hostname.long-cable-isp-domain-name.home.com
    PC pare-feu (IPMASQ)
    eth1:(192.168.1.1)=gateway.aokiconsulting.com
        |
    PC du LAN
    eth0:(FIXEE : 192.168.1.2-99)=???.lan.aokiconsulting.com
          DHCP :  192.168.1.100-200)

Le PC pare-feu utilise ipmasq fortifié (pas de connexion serveur sur un port
&lt; 1024).

Toutes les machines du LAN sont sur le domaine "lan.aokiconsulting.com".
Toutes les machines du LAN ont des noms sympas et faciles à retenir.
Toutes les machines du LAN ont l'adresse mail internet de
"???.lan.aokiconsulting.com".
Enregistrement DNS (public dans vhost en utilisant csoftadm)
    gateway			IN	A	24.19.151.xxx
    *.lan.aokiconsulting.com.	MX	5	gateway.aokiconsulting.com.
    gateway.aokiconsultgin.com.	MX	5	gateway.aokiconsulting.com.

/etc/init.d/dhcpd       (éditer pour exécuter dhcpd, seulement sur eth1)
/etc/host.allow         (ALL: 192.168.0.0/16 127.0.0.0/8) pour NFS
/etc/exports            (manquait)
/etc/bind/db.192.168.1  (à ajouter)
/etc/bind/db.lan        (à ajouter)
/etc/bind/named.conf    (à éditer)
/etc/resolve.conf       (à éditer)
/etc/hosts
/etc/ipmasq/rules/*     (voir ci-dessous pour les détails)
/etc/dhcpd.conf         (à remplacer avec le fichier local)
/etc/samba/smb.conf
/etc/squid.conf         (ajouter toutes les adresses IP des machines du LAN
comme machines autorisées)
/etc/exim.conf
Check file: /etc/resolve.conf
nameserver 127.0.0.1
search lan.aokiconsulting.com
#nameserver 24.1.4.xxx
</example>
<p>
Rappel : le fichier "interfaces" de woody n'est pas compatible avec celui de
potato. De plus, l'installation de bind crée un serveur DNS cache et change le
DNS pour le DNS local.
</sect1>
</sect>

<sect>Pare-feu avec ipmasq et squid
<p>
Le moyen le plus facile de configurer un pare-feu simple est d'installer deux
cartes réseau sous Linux et d'utiliser le paquet ipmasq pour configurer un
système de filtrage de paquets qui bloque presque tous les ports de serveurs
(&lt; 1024) vers l'Internet. Cela peut se faire en insérant 
<url id="examples/" name="A80firewall.def, I80firewall.def and
O80firewall.def"> dans /etc/ipmasq/rules/.
<example>
# apt-get install ipmasq
 ... installe A80firewall.def, I80firewall.def/rul and O80firewall.def/rul
# cp A80firewall.def A80firewall.rul; vi A80firewall.rul # à personaliser
# ipmasq -v
</example>
<p>
Pour éviter d'être déconnecté lors d'un transfert de gros fichiers ou mails,
changer les timeouts d'ipmasq peut se révéler utile dans un environnement de
réseau privé. Cela peut aussi introduire des risques au niveau de la sécurité,
c'est donc à utiliser avec prudence.
Editez Z92timeouts.rul dans /etc/masq/rules comme suit :
<example>
# tcp, tcp-fin, udp
# 2hr, 10 sec, 160 sec - default
# 1 day, 10 min, 10 min - current
$IPCHAINS -M -S 86400 600 600
</example>
<p>
Remarques :
<list>
 <item>   Port 137:139 sont les services NetBIOS
 <item>   224.0.0.0/240.0.0.0 est une adresse multicast
 <item>   Le serveur DHCP ne doit fonctionner que pour le réseau interne s'il
est installé.
</list>
<p>
Je ne m'embête pas à fermer les ports ouverts parce que les scripts de
filtrage IP décrits ci-dessus bloquent les connexions depuis l'Internet tout
en servant le LAN avec ces services. Cela est bien pour une petit LAN mais
peut ne pas être une bonne chose en environnement industriel. Editez
/etc/inet.d pour fermer les ports des services inutilisés.
<p>
De plus, si le réseau est accédé par des cartes réseau PCMCIA, ipmasq doit
être démarré depuis /etc/pcmcia/network.opts (consultez
/usr/share/doc/ipmasq/ipmasq.txt.gz)
<p>
Même si un proxy HTTP transparent est de trop, il faut configurer un proxy
HTTP. Cela fait une grosse différence lors de la mise à jour de Debian par
HTTP.
<p>
Pour activer un proxy HTTP transprent, utilisez le noyau 2.4 et suivez
/usr/share/doc/squid/README.transparent-proxy.gz.
</sect>

<sect>Gérer plusieurs connexions à l'Internet
<p>
[A CORRIGER] Politique de routage : (par Phil Brutsche
pbrutsch@tux.creighton.edu) Voir <url id="http://ds9a.nl/2.4Routing/"
name="Manuel d'iproute"> pour les détails. Le contrôle de traffic peut aussi
être intéressant.
<p>
Environnement :
<example>
eth0: 192.168.1.2/24; gateway 192.168.1.1
eth1: 10.0.0.2/24; gateway 10.0.0.1
Pas de masquerading sur cette machine.
</example>
Un peu de magie :
<example>
# ip rule add from 192.168.1.2 lookup 1
# ip rule add from 10.0.0.2 lookup 2
# ip route add to default via 10.0.0.1 metric 0
# ip route add to default via 192.168.1.1 metric 1
# ip route add table 1 to 192.168.1.0/24 via eth0
# ip route add table 1 to 10.0.0.2/24 via eth1
# ip route add table 1 to default via 192.168.1.1
# ip route add table 2 to 192.168.1.0/24 via eth0
# ip route add table 2 to 10.0.0.2/24 via eth1
# ip route add table 2 to default via 10.0.0.2
</example>
[A CORRIGER] Je n'ai jamais fait cela. Comment configurer une connexion RTC en
cas de défaillance d'une connexion rapide ?
</sect>

<sect>Logiciels de courrier électronique
<p>
La configuration du courrier électronique se divise en trois parties :
<list>
<item>MTU : exim
<item>MUA : mutt
<item>Utilitaires : procmail, fetchmail, mail,...
</list>

<sect1>Agent utilisateur pour le mail (Mail user agent) (Mutt)
<p>
Utilisez mutt comme agent utilisateur pour le mail (MUA) associé à vim.
Personalisez-le avec "~/.muttrc":
<example>
# utiliser le mode visuel et "gq" pour reformater les citations
set editor="vim -c 'set tw=72 et ft=mail'"
#
# sélection des en-têtes prise dans le manuel ("Sven's Draconian header
# weeding")
#
ignore *
unignore from: date subject to cc
unignore user-agent x-mailer
hdr_order from subject to cc date user-agent x-mailer
auto_view application/msword
....
</example>
Ajouter ce qui suit dans /etc/mailcap :
<example>
text/html; lynx -force_html %s; needsterminal;
application/msword; /usr/bin/antiword '%s'; copiousoutput;
description="Microsoft Word Text"; nametemplate=%s.doc
</example>
Maintenant les .doc de M$ Word peuvent être lus (non testé).

<sect1>Agent de transport de mail (Mail transport agent) (Exim)
<p>
Utilisez exim comme agent de transport de mail (MTA). Configurez-le :
<example>
/etc/exim.conf          "eximconfig" pour créer et éditer
/etc/inetd.conf         mettez smtp en commentaire pour exécuter exim en tant
que daemon
/etc/email-addresses    ajoutez les listes d'adresses sources spoofées
Vérifiez le filtre avec exim -brw, -bf, -bF, -bV, ... etc.
</example>
</sect1>
<sect1>Tout récupérer pour les adresses e-mail non existantes (Exim)
<p>
Dans /etc/exim.conf (ou /etc/exim/exim.conf si vous utilisez woody), dans la
partie DIRECTORS, à la fin (après localuser: director) ajoutez une directive
"catch-all"
qui correspond à toutes les adresses que la directive précédente ne
pouvait résoudre (par Miquel van Smoorenburg)
<example>
catchall:
  driver = smartuser
    new_address = webmaster@mydomain.com
</example>
<p>
Si vous souhaitez une recette plus détaillée pour chaque domaine virtuel,
ajoutez ce qui suit à la fin de exim.conf (par moi, non testé)
<example>
*@yourdomain.com ${lookup{$1}lsearch*{/etc/email-addresses} {$value}fail} T
</example>
Et ajoutez une entrée "*" dans /etc/email-addresses.
</sect1>

<sect1>Utilitaire de courrier électronique (fetchmail)
<p>
"fetchmail" est exécuté en mode daemon et récupère le courrier électronique du
compte POP3 du FAI sur le système de mail local. Configurez :
<example>
/etc/init.d/fetchmail   voir ci-dessous pour le script
/etc/rc?.d/???fetchmail exécutez update-rc.d fetchmail defaults 30
/etc/fetchmailrc        fichier de configuration (chown 600)
/etc/init.d/fetchmail
</example>
<p>
Les informations pour démarrer fetchmail en mode daemon depuis un script
init.d dans potato ne sont pas claires (woody devrait corriger cela)
<url id="examples/" name="/etc/init.d/fetchmail and /etc/fetchmailrc">
<p>
Si vos en-têtes de mails sont contaminées par des ^M dûs au logiciel de
courrier électronique de votre FAI, ajoutez 'stripcr' aux options dans
~/.fetchmailrc :
<example>
options fetchall no keep stripcr
</example>
</sect1>

<sect1>Utilitaire de courrier électronique (procmail)
<p>
Procmail est un filtre pour le courrier électronique délivré. Il faut créer un
~/.procmailrc" pour chaque compte.
<example>
# Tout le courrier délivré vers un Maildir à la Qmail, c'est-à-dire suivi par /
# Pas besoin de verrou

MAILDIR=$HOME/Mail
DEFAULT=$MAILDIR/Inbox/
LOGFILE=$MAILDIR/Maillog

#################  Filtres de messages   ######################

# longueur de message pour Maildir (qmail)
:0 Bfh
* H ?? !^Lines:
* -1^0
*  1^1 ^.*$
| formail -A "Lines: $="

# Ajoute un en-tête "Content-Type: application/pgp" pour que Mutt sache que le
# mail est chiffré.
:0 fBw
* ^-----BEGIN PGP MESSAGE-----
* !Content-type: multipart
| formail -i "Content-Type: application/pgp; format=text; x-action=encryptsign"

# Ajoute un en-tête "Content-Type: application/pgp" pour que Mutt sache que le
# mail est signé.
:0 fBw
* ^-----BEGIN PGP SIGNED MESSAGE-----
* !Content-type: multipart
| formail -i "Content-Type: application/pgp; format=text; x-action=sign"

####################  Messages classés vers des dossiers  ##################

# Filtre pour le courrier indésirable
:0
* ^From:.*MAILER-DAEMON
Spam/
#/dev/null

:0
* ^To:.*nospam@aokiconsulting.com
Spam/

# Mailing List
:0
* ^Resent-Sender.*debian-user-request@lists.debian.org
debian-user/

# Filtre pour SirCam, de LinuxToday, Tue Jul 24 22:28:09 PDT 2001
:0 Bh
*I send you this file in order to have your advice
*daeLRCQEM9KJEIN8JAwAdBmLRCQEi1QkCIkQi0\QkDCtEJAiLVCQEiUIEg8QUXV9eW8NTVldV
 | (formail -rtb -I "Precedence: junk" \
 -I "Subject: SirCam Virus Spam Worm"; \
 echo "Your computer is infected with the SirCam worm. Please see"; \
 echo "http://www.wired.com/news/technology/0,1282,45427,00.html for more information." \
 echo "This is an automatically generated message.") \
 | $SENDMAIL -oi -t
</example>
</sect1>

</sect>

</chapt>
