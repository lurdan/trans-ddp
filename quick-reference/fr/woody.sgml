<!-- CVS revision of this document "$Revision: 1.12 $"  -->
<!-- CVS revision of original english document "1.22"  -->
<chapt id="woody">Mise à jour d'une distribution

<![%f-ref;[
<p>
Les notes de version officielles pour mettre à jour sont situées à 
<url id="&stable-release;">
et
<url id="&testing-release;"> (en développement).

<sect>Préparation de la transition («&nbsp;stable&nbsp;» vers «&nbsp;testing&nbsp;»)
<p>
Une mise à jour via le réseau vers «&nbsp;testing&nbsp;» peut être effectuée comme suit
(lancer le script suivant <url id="&examples;" name="go-woody"> pour le faire
en une seule commande)&nbsp;:
<example>
# cd /etc/apt
# cp -f sources.list sources.old 
# :&gt;sources.list  
# cd /
# apt-setup noprobe 
 ... sélectionner http ou ftp
# cd /etc/apt
# grep -e "^deb " sources.list             &gt;sources.deb
# grep -e "^deb-" sources.list             &gt;sources.src
# sed -e "s/^d/#d/" \
  /usr/share/doc/apt/examples/sources.list &gt;sources.list
# sed -e "s/stable/testing/"  \
  sources.deb &gt;&gt;sources.list
# apt-get update
# apt-get install apt apt-utils
# cat &gt;preferences &lt;&lt;EOF
 Package: *
 Pin: release a=testing
 Pin-Priority: 700
 
 Package: *
 Pin: release a=unstable
 Pin-Priority: 70

 EOF
# sed -e "s/stable/unstable/" sources.deb \
  &gt;&gt;sources.list
# sed -e "s/stable/unstable/" sources.src | \
 sed -e "s/^deb-/#deb-/"  &gt;&gt;sources.list
</example>
Conseils pour <file>/etc/apt/preferences</file> (voir <manref
name="apt_preferences" section="5">)&nbsp;:
<example>
suivre stable&nbsp;:			changer la Pin-Priority de testing sur  80
suivre testing&nbsp;:			garder en l'état (installe les paquets de unstable avec /unstable)
suivre testing (unstable)&nbsp;: 	changer Pin-Priority de unstable sur 600
suivre unstable (testing)&nbsp;: 	changer Pin-Priority de unstable sur 800
</example>
Un conseil concernant le choix de Pin-Priority&nbsp;: aller de haut en bas de
la table précédente, commencer en haut immédiatement après la sortie d'une
nouvelle version stable et descendre dans la table au fur et à mesure que le
le gel de la version suivante de la distribution approche.
<p>
Des exemples de <file>/etc/apt/preferences</file> qui permettent de garder
certains paquets clé en version mure tout en suivant des versions moins mures
pour d'autres paquets non essentiels sont disponibles dans le <url
id="&examples;" name="sous-répertoire des exemples"> sous les noms
<file>preferences.testing</file> et <file>preferences.unstable</file>. Au
contraire, <file>preferences.stable</file> force tous les paquets à être
mis à niveau inférieur vers «&nbsp;stable&nbsp;».
<p>
Faites en sorte de configurer APT pour l'usage d'un proxy, si
nécessaire, en réglant la variable d'environnement <tt>http_proxy</tt> ou en
réglant la valeur de http dans <file>/etc/apt/apt.conf</file>.
<p>
La procédure décrite dans cette section ne fait que mettre à jour
APT et un ensemble minimum de paquets afin d'éviter des problèmes
de dépendance.
</sect>
]]>

<sect>Mise à jour vers «&nbsp;testing&nbsp;»
<p>
Après la préparation ci-dessus, le système peut être mis à jour.

<sect1>Meilleure méthode de mise à jour avec <prgn>dselect</prgn>
<p>
Si le système comprend beaucoup de paquets <tt>-dev</tt>, etc., la méthode
suivante avec <prgn>dselect</prgn> est recommandée pour un contrôle fin des
paquets.
<example>
# dselect update # à faire avant chaque mise à jour
# dselect select # sélectionne les paquets «&nbsp;suggests&nbsp;» et «&nbsp;recommends&nbsp;»
# dselect install
</example>
<prgn>dselect</prgn> fonctionne toujours :)

<![%f-ref;[
<sect1>Méthode obsolète de mise à jour avec <prgn>apt-get</prgn>
<p>
<strong>L'utilisation de <prgn>apt-get</prgn> décrite ci-dessous est répandue
mais n'est <em>pas</em> recommandée pour des mises à jour du système.</strong>
]]>

Si vous devez mettre à jour sans <prgn>dselect</prgn> après Woody, considérez
l'utilisation d'<prgn>aptitudes</prgn> ou d'autres options.

<![%f-ref;[
<p>
Si un système n'a pas beaucoup de paquets installés ou si l'archive &debian;
n'a pas de changements majeurs, ce qui suit peut être suffisant (parfois).
<example>
# apt-get update # à faire avant la mise à jour
 ... pour mettre à jour l'ensemble du système avec les sélections «&nbsp;depends&nbsp;»
# apt-get -u dist-upgrade # à faire avant la mise à jour
 ... pour mettre à jour le système entier avec les sélections «&nbsp;depends&nbsp;»
# apt-get -u dist-upgrade
 ... ou pour mettre à jour en gardant les sélections de dselect (meilleure solution)
# apt-get -u dselect-upgrade # utilise les sélections de dselect
</example>
<p>
Comme cette méthode de mise à jour utilise <prgn>apt-get</prgn>, la gestion
des paquets <em>recommends</em> et <em>suggests</em> est limitée. Voir <ref
id="depends">.
]]>

</sect>

<sect>Configuration de Woody 
<p>
Pour un système Woody fraîchement installé, éditer
<file>/etc/apt/sources.list</file>, <file>/etc/apt/apt.conf</file>, et
<file>/etc/apt/preferences</file> pour réaliser la même structure que celle
décrite dans la section ci-dessus.
<p>
APT dans Potato n'avait pas les fonctions décrites dans <manref
name="apt_preferences" section="5">.
</sect>

<![%f-ref;[
<sect id="spy">Améliorer le fichier <file>sources.list</file>
<p>
Améliorer le fichier <file>sources.list</file> en testant chaque site sur son
temps de latence et sa bande passante.
<example>
# apt-get install apt-spy
# cd /etc/apt ; mv sources.list sources.list.org
# apt-spy -d testing -l sources.apt
</example>
<prgn>netselect-apt</prgn> est similaire à <prgn>apt-spy</prgn>. Il crée un
fichier <file>sources.list</file> plus complet, mais utilise une méthode moins
bonne pour choisir le meilleur mirroir (comparaison des temps de ping).
<prgn>apt-setup</prgn> est la méthode manuelle pour sélectionner les mirroirs
de <file>sources.list</file>, mais c'est toujours le meilleur moyen de choisir
des mirroirs tant que <prgn>apt-spy</prgn> n'a pas été amélioré.
<p>
Ces efforts d'optimisation n'ont pas produit d'amélioration significative pour
moi. L'utilisation des sites les plus proches dans <prgn>apt-setup</prgn> a
suffit.
</sect>

]]>

</chapt>
