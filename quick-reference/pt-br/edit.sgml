<!-- CVS revision of this document "$Revision: 1.1 $" -->
<!-- CVS revision of original english document "1.25"  -->
<!--Line width ruler (ruler uses 78 characters) 34567890123456789012345-->

<chapt id="edit">Editores

<sect id="pop-editor">Editores populares
<p>
O Linux oferece muitas alternativas para editores de texto de
console. Entre eles:
<list compact>
<item><prgn>vim</prgn>:    Editor poderoso e leve, herdado do BSD.  VI
 iMproved.
<item><prgn>emacs</prgn>:  Editor definitivo e pesado, herdado do
 GNU. Original de RMS (Richard M. Stallman). 
<item><prgn>xemacs</prgn>: Emacs: A Próxima Geração, originalmente de
 Lucid. 
<item><prgn>mcedit</prgn>: Editor GNU para novatos. 
  Idêntico ao editor interno do <prgn>mc</prgn>. Veja <ref
 id="mcedit">. 
<item><prgn>ae</prgn>:     Pequeno editor padrão (Potato). Evite-o.
<item><prgn>nano</prgn>:   Pequeno editor GNU padrão (Woody). Emula o
 <prgn>pico</prgn>. 
<item><prgn>joe</prgn>:    Para saudosistas do WordStar ou TurboPascal.
<item><prgn>jed</prgn>:    Editor rápido, com muitos recursos e
 direcionado a menus com atalhos de tecla do Emacs.
<item><prgn>jove</prgn>:   Editor muito pequeno com teclas de atalho do
 emacs. 
<item><prgn>nvi</prgn>:    Novo vi.  Compatível Bug-a-bug com o vi
 original. 
</list>
<p>
Use <tt>update-alternatives --config editor</tt> para mudar o editor
padrão. Além disso, muitos programas usam as variáveis de ambiente
<tt>EDITOR</tt> ou <tt>VISUAL</tt> para decidir qual editor usar. Veja
<ref id="mcedit">. 
<p>
Há também alguns editores de texto baseados no X notáveis:
<list compact>
<item><prgn>gvim</prgn>: Vim com GUI (pacote <package>vim</package> e
  pacote <package>vim-gtk</package>)
<item><prgn>emacs</prgn>:  O Verdadeiro e Único Emacs (auto-detecta X).
<item><prgn>xemacs</prgn>:  Próxima geração do Emacs (auto-detecta o X). 
</list>
Esses comandos xclient usam opções padrões como <tt>-fn
<var>a24</var></tt>,  que tornam mais fácil a vida de pessoas mais
velhas como eu :)  Veja <ref id="xclnt">.
</sect>

<sect id="bin-editor">Editores de recuperação
<p>
Há uns poucos editores que se localizam em <file>/bin</file>.  Um desses
deve ser instalado para facilitar a edição de arquivos quando
<file>/usr</file> não estiver acessível. 
<p>
<list compact>
<item><package>elvis-tiny</package>: Editor vi mínimo (<prgn>vi</prgn>
 para iniciar)
<item><package>nano-tiny</package>:  Editor não-vi mínimo
 (<prgn>nano-tiny</prgn> para iniciar)
<item><package>ed</package>:         Editor mínimo (sempre lá mas
 difícil de usar)
</list>
<p>

<sect>Emacs e Vim

<sect1>Dicas para o Vim
<p>
Leia o documento "VIM - main help file" pressionando &lt;F1&gt; ao
executar o programa.

<example>
&lt;F1&gt;           Ajuda
&lt;esc&gt;          Volta ao modo normal
V              Modo Visual
i              Modo Inserção
:              Comandos de linha de comando
:set tw=72     Ajusta largura do texto para 72
&lt;F11&gt;          Modo insere (cola)
:r! date -R    Insere data RFC-822
q<var>a</var>             Grava teclas de atalho no registrador <var>a</var>
q              Interrompe a gravação de teclas de atalho
@<var>a</var>             Executa teclas de atalho do registrador <var>a</var>
:edit <var>foo.txt</var>  Edita outro arquivo carregando <var>foo.txt</var>
:wnext         Grava o arquivo atual e edita o próximo arquivo
</example>

<tt>q</tt> e <tt>@</tt> podem ser usados para registro simples de macro
e execução. Por exemplo, para criar macro que insira tags de itálico HTML
ao redor de uma palavra no cursor, você poderia entrar
<tt>qii&lt;i&gt;^[ea&lt;/i&gt;^[q</tt> (onde <tt>^[</tt> é a tecla
ESC). Então digitar <tt>@i</tt> no começo de uma palavra adicionaria as
tags &lt;i&gt; e &lt;/i&gt;.
<p>
Consulte também <ref id="vimgpg">.
</sect1>

<sect1>Dicas para o Emacs
<p>
<example>
&lt;F1&gt;                Ajuda
&lt;F10&gt;               Menu
C-u M-! date -R     Insere data RFC-822
</example>
</sect1>

<sect1>Iniciando o editor
<p>
<example>
iniciar o editor:               emacs filename  vim filename
iniciar em compatível vi:                       vim -C
iniciar em não compatível vi:                   vim -N
iniciar com padrão compilado:   emacs -q        vim -N -u NONE
</example>
</sect1>

<sect1 id="editkey">Resumo de comandos do Editor (Emacs, Vim)
<p>
<example>
sair:                           C-x C-c         :qa /:wq /:xa /:q!
voltar/modo comando:            C-g             &lt;esc&gt;
para trás(esquerda):            C-b             h
para Frente(direita):           C-f             l
próxima(abaixo):                C-n             j
anterior(acima):                C-p             k
início da linhA(^):             C-a             0
fim da linha($):                C-e             $
mÚltiplos comandos:             C-u nnn cmd     nnn cmd
Múltiplos comandos:             M-digitkey cmd
salvar arquivo:                 C-x C-s         :w file
início do buffer:               M-&lt;             1G
fim do buffer:                  M-&gt;             G
rola para frente 1 tela:        C-v             ^F
rola para frente 1/2 tela:                      ^D
rola para frente 1 linha:                       ^E
rola para trás 1 tela:          M-v             ^B
rola para trás 1/2 tela:                        ^U
rola para trás 1 linha:                         ^Y
rola a outra janela:            M-C-v
apaga sob o cursor:             C-d             x
apaga do cursor ao fim linha:   C-k             D
iSearch para frente:            C-s
isearch para trás:              C-r
procura à frente:               C-s enter       /
procura para tRás:              C-r enter       ?
isearch regexp:                 M-C-s
isearch regexp para trás:       M-C-r
procura regexp:                 M-C-s enter     /
procura regexp para trás:       M-C-r enter     ?
ajuda:                          C-h C-h         :help
ajuda Apropos:                  C-h a
ajuda comandos teclado:         C-h b           :help [key]
ajuda Info:                     C-h i
ajuda Major mode:               C-h m
ajuda Tutorial:                 C-h t           :help howto
desfazer:                       C-_             u
Refazer:                        C-f             ^R
Marcar posição do cursor:       C-@             m{a-zA-Z}
trocar marca e posição:         C-x C-x
ir para marca arquivo atual:                    '{a-z}
ir para marca qualquer arquivo:                 '{A-Z}
copiar região:                  M-w             {visual}y
recortar região:                C-w             {visual}d
colar e manter buffer:          C-y             <![%FIXME;[p y ? XXX FIXME XXX]]>
colar do buffer recortado:      M-y             p
converte região em maiúsculas:  C-x C-u         {visual}U
converte região em minúsculas:  C-x C-l         {visual}u
Inserir caracter especial:      C-q octalnum/keystroke  
                                                ^V decimal/keystroke
substituir:                     M-x replace-string      :&percnt;s/aaa/bbb/g
substituir regexp:              M-x replace-regexp      :&percnt;s/aaa/bbb/g
consultar e substituir:         M-&percnt;                     :&percnt;s/aaa/bbb/gc
consultar e substituir:         M-x query-replace
consultar e substituir regexp:  M-x query-replace-regexp
Abrir arquivo:                  C-x C-f         :r file
Salvar arquivo:                 C-x C-s         :w
Salvar todos os buffers:        C-x s           :wa
Salvar como:                    C-x C-w file    :w file
Mudar de buffer:                C-x b
Listar buffers:                 C-x C-b         :buffers
Trocar somente leitura:         C-x C-q         :set ro
Fechar buffer indicado:         C-x k
Dividir na vertical:            C-x 2           :split
Dividir na horizontal:          C-x 3           :vsplit (ver. 6)
Ir para outra janela:           C-x o           ^Wp
Excluir esta janela:            C-x 0           :q
Excluir outra(s) janela(s):     C-x 1           ^Wo
Executar shell em bg:           M-x compile
Destruir shell em bg:           M-x kill-compilation
Executar make:                                  :make Makefile
verificar mensagem de erro:     C-x`            :echo errmsg
executar shell e gravar:        M-x shell       :!script -a tmp
...limpar BS, ...                                :!col -b &lt;tmp &gt;record
...salvar/reler registro shell: C-x C-w record  :r record
executar shell:                 M-! sh          :sh
executar comando                M-! cmd         :!cmd
executar comando e inserir:     C-u M-! cmd     :r!cmd
executar filtro:                M-| file        {visual}:w file
executar filtro e inserir:      C-u M-| filter  {visual}:!filter
exibir opção                                    :se[t] {option}?
redefinir opção para padrão                     :se[t] {option}&
redefinir opção booleana                        :se[t] no{option}
trocar estado opção booleana                    :se[t] inv{option}
quebrar texto na coluna 72                      :se tw=72
não quebrar                                     :se tw=0
autoindent                                      :se ai
expandir tab                                    :se et
especificar comentário (mail)                   :se comments=n:&gt;,n:\|

executar GDB                    M-x gdb                        
descrever modo GDB              C-h m                          
passo uma linha                 M-s
próxima linha                   M-n
passo uma instrução (stepi)     M-i                            
finaliza stack frame atual      C-c C-f                        
continuar                       M-c                            
subir arg frames                M-u                            
descer arg frames               M-d                            
copiar número do ponto, inserir no final 
                                C-x &                          
definir break point             C-x SPC                        
</example>
</sect1>

<sect1>Configuração do Vim
<p>
Para usar todos os recursos do Vim e destaque de sintaxe, inclua as
seguintes linhas em <file>~/.vimrc</file> ou <file>/etc/vimrc</file>:
<example>
set nocompatible
set nopaste
set pastetoggle=&lt;f11&gt;
syn on
</example>
Modo Paste permite evitar que o autoindent interfira com operações de
cortar e colar em um terminal console. Isso faz mais que um simples
":set noai". 
<p>
Veja <ref id="vimgpg"> para integração com GnuPG.
</sect1>

<sect1>Ctags
<p>
<tt>apt-get install exuberant-ctags</tt> e execute ctags nos arquivos
fontes. Digite <tt>:tag <var>function_name</var></tt> no Vim e irá
para a linha onde <var>function_name</var> começa. As tags funcionam
para C, C++, Java, Python, e muitas outras linguagens.
<p>
O Emacs tem as mesmas capacidades ctags.
</sect1>

<sect1>Converter uma tela com sintaxe destacada em fonte HTML 
<p>
<tt>so \$VIMRUNTIME/syntax/2html.vim</tt> a partir do modo comando do
Vim converterá texto destacado em texto HTML.  Salve com <tt>:w
arquivo.html</tt> e <tt>:q</tt>.  Útil para código C, etc.
</sect1>

<sect1>Dividir a tela com o <prgn>vim</prgn>
<p>
O <prgn>vim</prgn> pode editar vários arquivos em um ambiente de tela
multi-dividida. Digite <tt>:help usr_08.txt</tt> para mais detalhes.
<p>
Para dividir a tela entre arquivos diferentes, digite no prompt de
comando do vi:
<example>
:split <var>outro-arquivo</var>
:vsplit <var>outro-arquivo</var>
</example>
Ou na linha de comando:
<example>
$ vi -o arquivo1.txt arquivo2.txt   # Divide horizontalmente
$ vi -O arquivo1.txt arquivo2.txt   # Divide verticalmente
</example>
produzirá um vi multi-janela.
<example>
$ vimdiff file.txt~ file.txt         # verifica mudanças recentes de file.txt
$ vimdiff file.en.sgml file.fr.sgml  # verifica mudanças de tradução
$ gvimdiff file.txt~ file.txt        # no X
</example>
produzirá uma agradável visão das diferenças entre um arquivo original
e uma cópia de segurança. Em SGML ele combina tags, então a comparação
de traduções neste modo funciona muito bem.
<p>
Movimentos especiais do cursor com comandos CTRL-W:
<example>
CTRL-W +      aumentar o tamanho de uma janela
CTRL-W -      diminuir o tamanho de uma janela
CTRL-W h      ir para a janela da esquerda
CTRL-W j      ir para a janela abaixo
CTRL-W k      ir para a janela acima
CTRL-W l      ir para a janela da direita
...
</example>
Use o seguinte para controlar a rolagem da tela:
<example>
:set scrollbind
:set noscrollbind
</example>
</sect1>

</sect>

</chapt>
