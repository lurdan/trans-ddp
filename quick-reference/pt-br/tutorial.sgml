<!-- CVS revision of this document "$Revision: 1.3 $"  -->
<!-- CVS revision of original english document "1.38"   -->
<!--Line width ruler (ruler uses 78 characters)     34567890123456789012345-->

<chapt id="tutorial">Tutoriais do &debian;

<p>
Essa seção fornece uma orientação básica sobre o mundo Linux para o verdadeiro
novato. Se você já tiver usado o Linux por algum tempo, use-a como uma
verificação da realidade.

<sect>Fontes de informação
<p>
Procure no <url id="&debiandoc;"
name="Projeto de Documentação do Debian (DDP)">, que tem as referências de maior
autoridade sobre o Debian.  Muitos desses documentos geralmente são instalados em
<file>/usr/share/doc/</file>.  Procure também no diretório
<file>/usr/share/doc-base/</file>, que fornece apontamentos para os documentos
no sistema.  Adicione 
<tt>export CDPATH=.:/usr/share/doc:/usr/src/local</tt> ao arquivo
<file>~/.bash_profile</file> para ter um acesso mais fácil aos diretórios de
documentação.
<p>
O <url id="&linuxdoc;" name="Projeto de Documentação do Linux
(LDP)"> tem a maior autoridade sobre referências gerais sobre o Linux. Os
conteúdos do LDP geralmente são instalados em <file>/usr/share/doc/HOWTO/</file>.
<p>
Navegue através dos documentos locais e em sites FTP remotos usando F9
no Midnight Commander (veja <ref id="mc">). 
</sect>

<sect>O console Linux

<sect1 id="login">Login
<p>
Em um sistema Linux comum, há seis pseudo-terminais independentes. Alterne de
um para outro pressionando a tecla Alt-Esquerdo e as teclas
F1&ndash;F6 simultaneamente.  Cada pseudo-terminal permite
logins indepentes para  contas. O ambiente multi-usuário é um grande recurso
do Unix, e muito importante. 
<p>
É considerado um bom hábito de Unix efetuar login em uma conta de usuário
regular para muitos propósitos.  Eu tenho que admitir que já usei a conta do
super-usuário (root) mais do que o necessário apenas porque isso é fácil e sou
descuidado.
<p>
Agora eu geralmente uso uma conta regular com comandos <tt>sudo</tt>,
<tt>super</tt>, ou <tt>su -c</tt> para obter acesso root limitado.  
</sect1>

<sect1 id="newuser">Criar uma conta de usuário
<p>
Depois da instalação do sistema, eu geralmente crio uma conta de usuário regular.
Se o nome de usuário for "pinguim",
<example>
# adduser pinguim 
</example>
criará a conta.
<p>
Eu uso o comando <tt>vigr</tt> para editar o arquivo <file>/etc/group</file>
como a seguir: 
<example>
adm:x:4:admin
src:x:40:admin, debian, ...
...
</example>
No sistema de instalação padrão, os membros do grupo <tt>adm</tt> podem ler
muitos arquivos de log em <file>/var/log/</file>, e podem usar o
<prgn>xconsole</prgn>. O grupo <tt>staff</tt> é dono de <file>/home</file>,
tornando seus membros adequados para manter contas de usuários. O grupo
<tt>src</tt> é dono de <file>/usr/src/</file>, usado para compilação de
kernel, etc. Para ver o significado oficial de grupo e usuário, veja uma
versão recente do documento <url id="&f-users-and-groups;"
name="users-and-groups">.
<p>
Eu pessoalmente uso o grupo <tt>adm</tt> para usuários que executam tarefas
administrativas e têm o privilégio <prgn>su</prgn> exclusivo (veja <ref
id="wheel">) e <tt>src</tt> para CVS (veja <ref id="cvs">).
<p>
Verifique o <prgn>adduser</prgn>, <prgn>addgroup</prgn>, 
<prgn>vipw</prgn>, <tt>vipw -s</tt>, <prgn>vigr</prgn>, e o
<tt>vigr -s</tt> para configurar os grupos e os usuários apropriadamente.
</sect1>

<sect1>Como desligar
<p>
Como qualquer SO moderno onde os arquivos são armazenados temporariamente na
memória, o Linux precisa de um procedimento especial de desligamento antes que
possa ser seguramente desligado. Aqui está o comando em modo multi-usuário:
<example>
# shutdown -h now
</example>
Aqui está o comando em modo usuário único:
<example>
# poweroff -i -f
</example>
Aguarde até que o sistema exiba "System halted" e então desligue.
Se o APM for ativado pela BIOS e o Linux, o sistema se desligará sozinho.  Veja
<ref id="apm"> para obter mais detalhes.
</sect1>

<sect1>Edição de linha de comando
<p>
O shell padrão, <prgn>bash</prgn>, tem capacidade de edição de histórico.
Use simplesmente a tecla da seta para cima para entrar no histórico e então use
as teclas de cursor como você esperaria.  Outros atalhos de teclas importantes a
serem lembrados: 
<example>
Ctrl-U:                    Apaga linha antes do cursor
Ctrl-D:                    Termina a entrada
Click-esq-e-arrasta-mouse: Seleciona e copia para o clipboard (gpm)
Click botão meio mouse:    Cola o clipboard no cursor (gpm)
Ctrl-V TAB:                Entra TAB sem expansão.
</example>
<p>
Em um console Linux normal, apenas as teclas Ctrl e Alt
esquerdas funcionam como esperado.
</sect1>

<sect1>Execução de comando
<p>
Execução de comando típica usa a seguinte linha de seqüência shell:
<example>
$ LC_ALL=fr ls -la
</example>
Aqui, o programa <prgn>ls</prgn> é executado como o trabalho em primeiro
plano (foreground) com a variável de ambiente <tt>LC_ALL</tt> definida para
<tt>fr</tt> para locale francês e o argumento de linha de comando definido
como <tt>-la</tt> para listar tudo em detalhes. Se a linha de comando for
sufixada por sinal <tt>&amp;</tt> então o comando é executado como trabalho
em plano de fundo (background). Trabalhos em plano de fundo (background
job) permitem ao usuário executar múltiplos programas em um único shell.
<p>
A execução de comando pode ser gerenciada pelos seguintes comandos de
teclado.
<example>
Ctrl-C:                  Termina o programa
Ctrl-Z:                  Pára o programa temporariamente
Ctrl-S:                  Trava saída para tela
Ctrl-Q:                  Reativa saída para tela
Ctrl-Alt-Del:            Reinicia/halt sistema (veja /etc/inittab)
</example>
Para detalhes sobre o gerenciamento da execução de programa, procure por
<tt>jobs</tt>, <tt>fg</tt>, <tt>bg</tt> e <tt>stop</tt> em <manref
name="bash" section="1">.
</sect1>

<sect1>Comandos muito básicos a lembrar
<p>
Os comandos seguintes são muito básicos do Unix:
<example>
ls, ls -al, ls -d, pwd, cd, cd ~user, cd -, 
cat /etc/passwd, less, bg, fg, kill, killall, 
uname -a, type <var>nomedecomando</var>, sync, netstat,
ping, traceroute, top, vi, ps aux, tar, zcat, 
grep, ifconfig, ...
</example>
<p>
Verifique seus significados usando-os em um prompt de comando ou
digitando <tt>man</tt> ou <tt>info</tt> mais o nome do comando. Muitos
comandos Linux exibirão uma breve informação de ajuda se você
chamá-los de uma dessas maneiras:
<example>
$ nomedocomando --help
$ nomedocomando -h
</example>
<tt>whatis <em>nomedocomando</em></tt> dá um resumo de qualquer
comando no sistema para o qual exista uma entrada de manual.
</sect1>

<sect1>Sistema X Window 
<p>
Para iniciar o Sistema X Window a partir do console:
<!-- Osamu: formal name here per request in "man 7 X" manpage -->
<example>
# exec startx
</example>
Clicando com o botão direito no plano de fundo abre-se um menu de seleções.
</sect1>

<sect1>Comandos de teclado importantes
<p>
Há alguns comandos de teclado importantes para o console Linux a serem
lembrados ("mais" e "menos" referem-se às teclas no bloco
numérico): 
<example>
Alt-F1 até F6:        Alterna para outros pseudo-terminais
Ctrl-Alt-F1 até F6:   Alterna para outros pseudo-terminais
                      (a partir do X window, DOSEMU, etc.)
Alt-F7:               Volta para o X window
Ctrl-Alt-menos:       Muda a resolução da tela no X window
Ctrl-Alt-mais:        Muda a resolução da tela no X window no sentido oposto
Ctrl-Alt-Backspace:   Finaliza o programa servidor X11
Alt-X, Alt-C, Alt-V:  Combinações de tecla para Cortar, Copiar, Colar com Ctrl-
            comuns do Windows/Mac são substituídas por essas combinações Alt- em
            alguns programas como o Netscape Composer.
</example>
</sect1>
</sect>

<sect id="mc">Midnight Commander (MC)
<p>
O Midnight Commander (MC) é um "canivete suíço" do GNU para o console Linux e
outros ambientes de terminal.  

<sect1>Instalar o MC
<p>
<example>
# apt-get install mc
</example>
Então modifique o arquivo <file>~/.bashrc</file> (ou
<file>/etc/bash.bashrc</file>, chamado a partir de <file>.bashrc</file>),
como descrito em sua página de manual, <manref name="mc" section="1">, sob a
opção <tt>-P</tt>. 
Isso permite que o MC mude o diretório de trabalho após finalizar.
<p>
Se você estiver em um terminal, como <prgn>kon</prgn> e <prgn>Kterm</prgn> para
os japoneses, que usam alguns caracteres gráficos, acrescentar um
<tt>-a</tt> à linha de comando do MC pode ajudar a prevenir problemas.
</sect1>

<sect1>Iniciar o MC
<p>
<example>
$ mc
</example>
O MC executa todas as operações com arquivos através de seu menu,
necessitando de um esforço mínimo do usuário.
</sect1>

<sect1>Gerenciador de arquivos
<p>
O padrão são dois painéis de diretórios contendo listas de
arquivos. Outro modo útil é definir a janela direita para "info" para ver
a informação de privilégio de acesso dos arquivos, etc. A seguir estão alguns
comandos de teclado essenciais. Com o daemon <prgn>gpm</prgn> sendo executado,
pode-se usar o mouse também.  (Não esqueça de pressionar a tecla shift para ter
o comportamento normal de cortar e colar no MC.)
<list compact>
<item>F1: Menu de ajuda
<item>F3: Visualizador de arquivos interno
<item>F4: Editor interno
<item>F9:  Ativar o menu
<item>F10: Sair do Midnight Commander
<item>Tab: Mover entre as 2 janelas
<item>Insert: Marcar o arquivo para operação de múltiplos arquivos como cópia
<item>Del: Apagar o arquivo (Tenha cuidado &mdash; configure o MC para o
  modo de eliminação segura.)
<item>Teclas de cursor: Auto explicativo
</list>
</sect1>

<sect1>Truques de linha de comando
<p>
<list>
<item>Qualquer comando <prgn>cd</prgn> mudará o diretório exibido na janela
  selecionada.
<item>Ctrl-Enter ou Alt-Enter copiará um nome de arquivo
  para a linha de comando. Use isso com os comandos <prgn>cp</prgn> ou
  <prgn>mv</prgn> junto com edição de linha de comando.
<item>Alt-Tab exibirá possibilidades de expansão de um nome de arquivo
  no shell.
<item>Pode-se especificar o diretório inicial para ambas as janelas como
  argumentos para o MC; por exemplo, <tt>mc /etc /root</tt>.
<item>Esc + <var>tecla_numérica</var> == F<var>n</var> (isto é,
      Esc + `1' = F1, etc.;
      Esc + `0' = F10)
<item>Tecla Esc      == tecla Alt (= Meta,
  M-); isto é, tecle Esc + `c' se quiser Alt-c.
</list>
</sect1>

<sect1 id="mcedit">Editor
<p>
O editor interno tem um interessante esquema de cortar-e-colar. Pressionando 
F3, marca-se o início da seleção e um segundo F3 marca o fim e
destaca a seleção. Você pode então mover seu cursor. Se você pressionar 
F6, a área selecionada será movida para o local do cursor. Se
pressionar F5, a área selecionada será copiada e inserida no local do
cursor. Para salvar o arquivo, tecle  F2. Para sair, use o
F10. Muitas teclas de cursor funcionam intuitivamente.
<p>
Esse editor pode ser iniciado diretamente em um arquivo:
<example>
$ mc -e nome_do_arquivo_a_editar
$ mcedit nome_do_arquivo_a_editar
</example>
<p>
Esse editor não é multi janela, mas pode-se usar vários consoles Linux
para obter o mesmo efeito. Para copiar entre janelas, use as teclas
Alt-F<var>n</var> para alternar entre os consoles virtuais e
use "Arquivo-&gt;Inserir arquivo" ou "Arquivo-&gt;copiar para Arquivo"
para mover uma parte de um arquivo para outro.
<!-- Osamu: you could try "&rarr;" instead of "-&gt;" to get a right arrow
above. It's valid SGML, but I don't know if all browsers support it. 

For this version 1, let us keep it as is for consistency.  
I will think about it for version 2,  Thanks. 

Anyway, PS/PDF compile is real problem
-->
<p>
Esse editor interno pode ser substituído por qualquer editor externo de sua escolha.
<p>
Além disso, muitos programas usam as variáveis de ambiente  <tt>EDITOR</tt> ou 
<tt>VISUAL</tt> para decidir qual editor a ser usado.  Se você não se sentir
confortável com o <prgn>vim</prgn>, defina essas variáveis para o
<tt>mcedit</tt> adicionando essas linhas ao arquivo <file>~/.bashrc</file>:
<example>
...
export EDITOR=mcedit
export VISUAL=mcedit
...
</example>
<p>
Eu recomendo que elas sejam definidas para <tt>vim</tt> se possível.  Aprender
os comandos do vi(m) é a coisa certa a fazer, já que eles sempre estão lá no
mundo Linux/Unix.
</sect1>

<sect1>Visualizador
<p>
Esse é um visualizador muito esperto. É uma grande ferramenta para procurar
palavras em documentos. Eu o uso sempre para os arquivos no diretório
<file>/usr/share/doc</file>.  Essa é a maneira mais rápida de navegar entre as
massas de informação do Linux. Esse visualizador pode ser iniciado diretamente assim:
<example>
$ mc -v nome_do_arquivo_a_visualizar
</example>
(Note que alguns pacotes violam a política e ainda guardam seus documentos
no diretório <file>/usr/doc</file>.)
</sect1>

<sect1>Recursos de auto início
<p>
Pressione Enter em um arquivo, e o programa apropriado manipulará seu
conteúdo.  Esse é um recurso muito conveniente do MC.
<example>
executável:           Executa o comando
arquivo man, html:    Direciona o conteúdo para o programa visualizador
arquivo tar, gz, rpm: Navega em seu conteúdo com se fosse um subdiretório
</example>
Para permitir que esses recursos de visualizador/arquivo virtual funcionem, os
arquivos visualizáveis não devem estar definidos como executáveis. Mude seus
estados usando o comando <prgn>chmod</prgn> através do menu de arquivo do MC.
</sect1>

<sect1>Sistema de arquivo virtual FTP
<p>
O MC pode ser usado para acessar arquivos na Internet usando FTP. Vá para o menu
pressionando F9, e então tecle `p' para ativar o sistema de
arquivos virtual FTP. Digitando uma URL na forma
<tt>nomeusuario:senha@nomemaquina.nomedominio</tt>, será obtido seu diretório
remoto, que parecerá como um local.
</sect1>

</sect>

<sect id="file-system">Básico do sistema de arquivos GNU/Linux
<p>
Cada arquivo e diretório no sistema GNU/Linux é associado a um usuário que é
seu dono (owner) e um grupo que pertence a ele. Todas as informações de
arquivo são gravadas em uma estrutura de dados chamada <strong>inode</strong>.

<sect1 id="file-perm">Permissões de acesso de arquivo e diretório
<p>
As permissões de acesso a arquivo e diretório são definidas separadamente
para as três seguintes categorias de usuários afetados:
<list compact>
<item>o <strong>usuário</strong> (user) que é dono do arquivo (u),
<item>outros usuários no <strong>grupo</strong> (group) ao qual o arquivo
pertence (g), e
<item>todos os <strong>outros</strong> (other) usuários (o).
</list>
<p>
Para um arquivo, cada permissão correspondente possibilita:
<list compact>
<item><strong>ler</strong> (r) (read): para examinar o conteúdo do arquivo
<item><strong>escrever</strong> (w) (write): para modificar o arquivo
<item><strong>executar</strong> (x): para executar o arquivo como um comando
</list>
<p>
Para um diretório, cada permissão correspondente possibilita:
<list compact>
<item><strong>ler</strong> (r): para listar o conteúdo do diretório
<item><strong>escrever</strong> (w): para adicionar ou remover arquivos no
diretório
<item><strong>executar</strong> (x): para acessar arquivos no diretório
</list>
Aqui, permissão de <strong>executar</strong> no diretório não significa
apenas permitir a leitura dos arquivos em seu diretório, mas também permite
que se veja seus atributos como o tamanho e o tempo de modificação.
<p>
Para obter as informações de permissão (e outras) sobre arquivos e diretórios,
usa-se o <prgn>ls</prgn>. Consulte <manref name="ls" section="1">. Quando o
<prgn>ls</prgn> é invocado com a opção <tt>-l</tt>, exibe essas informações
na seguinte ordem:
<list compact>
<item>o <strong>tipo de arquivo</strong> (primeiro caracter)
 <list compact>
 <item>-: arquivo normal
 <item>d: diretório
 <item>l: ligação simbólica (symlink)
 <item>c: nó de dispositivo caracter
 <item>b: nó de dispositivo bloco
 </list>
<item>as <strong>permissões</strong> de acesso do arquivo (os próximos nove
caracteres consistindo de três caracteres cada para usuário (user), grupo
(group), e outros (other) nessa ordem)
<item>o <strong>número de ligações diretas</strong> (hard links) para o
arquivo
<item>o nome do <strong>usuário</strong> que é dono do arquivo
<item>o nome do <strong>grupo</strong> ao qual o arquivo pertence
<item>o <strong>tamanho</strong> do arquivo em caracteres (bytes)
<item>a <strong>data e hora</strong> do arquivo (mtime)
<item>o <strong>nome</strong> do arquivo.
</list>
<p>
Para mudar o dono do arquivo, usa-se o <prgn>chown</prgn> a partir da conta
root. Veja <manref name="chown" section="1">. Para mudar o grupo do
arquivo, usa-se o <prgn>chgrp</prgn> a partir da conta do dono do arquivo ou
da conta root. Veja <manref name="chgrp" section="1">. Para mudar as
permissões de acesso de arquivo e diretório, usa-se o <prgn>chmod</prgn> a
partir da conta do dono do arquivo ou da conta root. Consulte <manref
name="chmod" section="1">.
<p>
Por exemplo, para fazer uma árvore de diretórios ser de propriedade de um
usuário <var>foo</var> e compartilhada por um grupo <var>bar</var>, execute
os seguintes comandos a partir da conta root:
<example>
# cd /algum/local/
# chown -R <var>foo</var>:<var>bar</var> .
# chmod -R ug+rwX,o=rX .
</example>
<p>
Há mais três bits de permissão especiais:
<list compact>
<item><strong>set user ID</strong> (s ou S ao invés do x do usuário),
<item><strong>set group ID</strong> (s ou S ao invés do x do grupo), e 
<item><strong>sticky bit</strong> (t ou T ao invés do x de outros).
</list>
Aqui a saída de <prgn>ls -l</prgn> para esses bits é transformada em
maiúsculas se os bits de execução estiverem ocultos devido a essas saídas
estarem desabilitadas.
<p>
Definir <strong>set user ID</strong> para um arquivo executável permite que
um usuário execute o arquivo executável com ID do dono do arquivo (por
exemplo <strong>root</strong>). Similarmente, definir <strong>set group
ID</strong> em um arquivo executável permite que um usuário execute o arquivo
executável com o group ID do arquivo (por exemplo
<strong>root</strong>). Devido a esses ajustes poderem causar sérios riscos de
segurança, suas habilitações requerem cuidado extra.
<p>
Definir <strong>set group ID</strong> para um diretório permite o esquema de
criação de arquivo no estilo BSD, onde todos os arquivos criados no
diretório pertencem ao <strong>grupo</strong> do diretório.
<p>
Definir <strong>sticky bit</strong> em um diretório impede que um arquivo
no diretório seja removido por um usuário que não é dono do arquivo. Para
assegurar o conteúdo de um arquivo em diretórios globalmente graváveis como
<file>/tmp</file> ou em diretórios graváveis por grupo, é necessário não
apenas que a permissão de <strong>escrita</strong> (write) esteja desativada
para o arquivo, mas também ativar o <strong>sticky bit</strong>  no
diretório. Caso contrário, o arquivo pode ser removido e um novo arquivo
pode ser criado com o mesmo nome por qualquer usuário que tenha permissão de
escrita no diretório.
<p>
Aqui estão alguns exemplos interessantes das permissões de arquivo.
<example>
$ ls -l /etc/passwd /etc/shadow /dev/ppp /usr/sbin/pppd
crw-rw----    1 root     dip      108,   0 Jan 18 13:32 /dev/ppp
-rw-r--r--    1 root     root         1051 Jan 26 08:29 /etc/passwd
-rw-r-----    1 root     shadow        746 Jan 26 08:29 /etc/shadow
-rwsr-xr--    1 root     dip        234504 Nov 24 03:58 /usr/sbin/pppd
$ ls -ld /tmp /var/tmp /usr/local /var/mail /usr/src
drwxrwxrwt    4 root     root         4096 Feb  9 16:35 /tmp
drwxrwsr-x   10 root     staff        4096 Jan 18 13:31 /usr/local
drwxrwsr-x    3 root     src          4096 Jan 19 08:36 /usr/src
drwxrwsr-x    2 root     mail         4096 Feb  2 22:19 /var/mail
drwxrwxrwt    3 root     root         4096 Jan 25 02:48 /var/tmp
</example>
</sect1>

<sect1 id="timestamp">Marcas de tempo
<p>
Há três tipos de marcas de tempo para o arquivo GNU/Linux:
<list compact>
<item><strong>mtime</strong>: a hora da modificação (<tt>ls -l</tt>),
<item><strong>ctime</strong>: a hora da mudança de estado (<tt>ls -lc</tt>),
e
<item><strong>atime</strong>: a hora do último acesso (<tt>ls -lu</tt>).
</list>
Note que <strong>ctime</strong> não é a hora de criação do arquivo.
<list compact>
<item>Sobrescrever um arquivo altera <strong>mtime</strong>,
<strong>ctime</strong>, e <strong>atime</strong> do arquivo.
<item>Mudar a permissão ou o dono de um arquivo altera o
<strong>ctime</strong> e o <strong>atime</strong> do arquivo.
<item>Ler um arquivo altera o <strong>atime</strong> do arquivo.
</list> 
Note que até uma simples leitura de um arquivo no sistema GNU/Linux
normalmente causará uma operação de escrita de arquivo para atualizar a
informação de <strong>atime</strong> no <strong>inode</strong>. Montar um sistema de
arquivos com a opção <tt>noatime</tt> fará com que o sistema pule essa
operação e resultará em acesso para leitura mais rápido. Veja <manref
name="mount" section="8">.
</sect1>

<sect1 id="links">Ligações (links)
<p>
Há dois métodos para associar um arquivo <var>foo</var> a um nome de arquivo
diferente <var>bar</var>.
<list compact>
<item>uma <strong>ligação direta</strong> (hard link) é um nome duplicado para
um arquivo existente. (<tt>ln <var>foo</var> <var>bar</var></tt>),
<item><strong>ligação simbólica</strong>, ou "symlink", é um arquivo especial
que aponta para outro arquivo pelo nome (<tt>ln -s <var>foo</var> 
<var>bar</var></tt>).
</list>
Veja no seguinte exemplo as mudanças no contador de ligações e as sutis
diferenças  no resultado do comando <prgn>rm</prgn>.
<example>
$ echo "Conteúdo Original" &gt; <var>foo</var>
$ ls -l <var>foo</var>
-rw-r--r--    1 osamu    osamu           4 Feb  9 22:26 <var>foo</var>
$ ln <var>foo</var> <var>bar</var>     # hardlink
$ ln -s <var>foo</var> <var>baz</var>  # symlink
$ ls -l <var>foo</var> <var>bar</var> <var>baz</var>
-rw-r--r--    2 osamu    osamu           4 Feb  9 22:26 <var>bar</var>
lrwxrwxrwx    1 osamu    osamu           3 Feb  9 22:28 <var>baz</var> -&gt; <var>foo</var>
-rw-r--r--    2 osamu    osamu           4 Feb  9 22:26 <var>foo</var>
$ rm <var>foo</var>
$ echo "Novo Conteúdo" &gt; <var>foo</var>
$ cat <var>bar</var>
Conteúdo Original
$ cat <var>baz</var>
Novo Conteúdo
</example>
Uma ligação simbólica tem as permissões de acesso de arquivo como
"rwxrwxrwx" como mostrado no exemplo acima, com as permissões de acesso 
ditadas pelas permissões do arquivo apontado por elas.
<p>
O diretório <file>.</file> liga ao diretório em que aparece, então o
contador de ligações de qualquer diretório novo começa com 2. O diretório
<file>..</file> liga ao diretório superior, então o contador de ligações do
diretório aumenta com a adição de novos subdiretórios.
</sect1>
</sect>


<sect>Estudos adicionais
<p>
Há muitas referências boas de Unix para o nível iniciante por aí.  Os livros da O'Reilly
geralmente são escolhas seguras de bons guias em qualquer campo dos temas de
computadores. O documento <url id="&tips-howto;" name="O HOWTO de Dicas Linux"> do LDP é
outro recurso a ser verificado. Veja <ref id="support"> para obter mais recursos.

</sect>

</chapt>
