<!-- CVS revision of original english document "1.96"  -->
<chapt id="system">Debianin perusteet

<!--

Merged from 4 SGML files in FAQ February 2002
  ftparchives.sgml,
  pkg_basics.sgml,
  pkgtools.sgml,
  uptodate.sgml

Then retitled under "Debian fundamentals" with
 chapt moved to sect
 sect moved to sect1
 sect1 moved to sect2

Commented out reference to arches, should rewrite it to reference to
release manual/install manual soon.

Pieces imported from other parts of FAQ.
 Small section from customizing.sgml regarding init/runlevel is added.
 Small section from customizing.sgml regarding diverse is added.
 Small section from software.sgml regarding non-English is added.

Merged from other SGML files in FAQ February 2002
  kernel.sgml

Then retitled under "Debian fundamentals" with
 chapt moved to sect
 sect moved to sect1

Titles of sect/sect1 are changed to suit "Debian reference"

All minor edits I did left tracing information as comments.

Several sections were actually deleted since two consecutive -'s
made it impossible to comment out.

Also rewrote section to suit better for Potato and Woody.
Unless slink is used, how many people about dpkg-ftp :)

-->

<p>
Tämä kappale tarjoaa tavallisille käyttäjille perustietoa Debian
käyttöjärjestelmästä. Virallista tietoa löydät seuraavista oppaista:
<p>
<list compact>
<item>Debian Policy Manual
<item>Debian Developer's Reference
<item>Debian New Maintainers' Guide
<p>
</list>
Nämä on listattu kappaleessa <ref id="references">.

<p>
Jos etsit yleisluontoisempia selityksiä ja esimerkkejä, katso
lukua <ref id="package"> tai muita relevantteja lukuja.
<p>
Tämä luku perustuu "Debian FAQ" -oppaaseen. Debian-ylläpitäjien
alkuun pääsemisen helpottamiseksi ohjeiden järjestystä on muutettu
huomattavasti

<!--
"FTP archives" is now changed to simple "archives" since it can be reached
through HTTP and other methods
-->

<sect id="ftparchives">Debian-arkistot

<sect1 id="dirtree">Hakemistorakenteet

<p>Debiania varten pakatut ohjelmat ovat saatavissa FTP:llä tai HTTP:llä
jokaiselta <url id="&mirror-site;" name="Debianin peilipalvelimelta">
jostain hakemistopuusta.

<p>Seuraavat hakemistot löytyvät jokaiselta Debianin peilipalvelimelta
hakemiston <file>debian</file> alta.
<taglist>
  <tag><file>dists/</file>:
    <item>Tässä hakemistossa ovat "jakeluversiot" ja täältä hakeminen oli
    ennen kanoninen tapa saada tarjolla olevia Debianin julkaisuversioiden
    paketteja. Joitain vanhoja paketteja sekä tiedostot
    <file>Contents-*.gz</file> ja <file>Packages.gz</file> löytyvät vielä
    täältä.
  <tag><file>pool/</file>:
    <item>Debianin julkaisuversioiden kaikkien pakettien uusi fyysinen sijainti.
  <tag><file>tools/</file>:
    <item>DOS-apuohjelmia käynnistyslevykkeiden tekemiseen, kiintolevyn
    osiointiin, tiedostojen pakkaamiseen ja purkamiseen sekä Linuxin
    käynnistämiseen
  <tag><file>doc/</file>:
    <item>Debianin perusdokumentaatio, kuten FAQ (usein kysytyt kysymykset),
    ohjeet ohjelmavirheiden ilmoittamiseen, jne.
  <tag><file>indices/</file>:
    <item>Tiedosto pakettien ylläpitäjistä ja override-tiedostot.
  <tag><file>project/</file>:
    <item>Lähinnä ohjelmakehittäjille tarkoitettua materiaalia, kuten:
    <taglist>
      <tag><file>project/experimental/</file>:
        <item>Tämä hakemisto sisältää paketit ja apuohjelmat, joita
        kehitetään edelleen ja jotka ovat vielä alfa-testausvaiheessa.
        Näitä paketteja ei tulisi käyttää, koska ne voivat olla vaarallisia
        ja haitallisia jopa kokeneimmille käyttäjille.
      <tag><file>project/orphaned/</file>:
        <item>Paketit, jotka niiden ylläpitäjä on hylännyt, ja jotka on
            poistettu jakelusta.
    </taglist>
</taglist>

<sect1 id="dists">Debianin jakeluversiot

<p>Normaalisti <file>dists</file> hakemistossa on kolme Debianin
jakeluversiota. Niiden nimet ovat <tt>stable</tt> (vakaa), <tt>testing</tt>
(testattava) ja <tt>unstable</tt> (epävakaa) jakelu. Joskus siellä on myös
<tt>frozen</tt> (jäädytetty) jakeluversio. Kukin jakeluversio on
määritelty symbolisena linkkinä koodinimellä varustettuun hakemistoon <file>dists</file>-hakemistossa.

<sect1 id="stable"><tt>stable</tt>-jakeluversio

<p><tt>stable</tt>-jakeluversioon, &stabledebian;, lähetetyt paketit
tallennetaan <file>stable</file>-hakemistoon (joka on symbolinen linkki
hakemistoon <file>&stablecodenamedir;/</file>).
<list>
  <item><file>stable/main/</file>:
  Tässä hakemistossa ovat pakettien uusimpaan viralliseen Debian-jakeluun
  kuuluvat versiot.

  <p>Nämä paketit ovat kaikki vapaita, mikä tarkoittaa että ne noudattavat
  <url name="Debianin vapaiden ohjelmistojen ohjeistoa"
  id="&social-contract;#guidelines"> (DFSG). (Ohjeisto löytyy myös paketin
  <package>&p-social-contract;</package> asentamana hakemistosta
  <file>&f-social-contract;</file>.)

  <item><file>stable/non-free/</file>:
  Tässä hakemistossa olevat paketit eivät ole vapaita DFSG:n määritelmän
  mukaan.
  <p>
  Joidenkin pakettien lisenssit esimerkiksi kieltävät kaupallisen levityksen.
  Toisia taas saa levittää eteenpäin, mutta ne ovat maksullisia
  julkisohjelmia.

  <item><file>stable/contrib/</file>: Tässä hakemistossa olevat paketit
  ovat itse vapaita DFSG:n mukaisesti, mutta ovat riippuvaisia jostain
  paketista, joka <strong>ei</strong> ole vapaa.
</list>
Ylläolevien sijaintien lisäksi fyysiset paketit sijaitsevat nykyään
hakemistossa <file>pool</file> (<ref id="pools">).

<p><tt>stable</tt>-jakelun tämänhetkiset ongelmat raportoidaan
verkkosivulla <url id="&stable-problems;" name="Stablen ongelmat">.


<sect1 id="testing"><tt>testing</tt>-jakeluversio

<p>
<tt>testing</tt>-jakeluversioon, &testingdebian;, lähetetyt paketit
tallennetaan <file>testing</file>-hakemistoon (joka on symbolinen
linkki hakemistoon <file>&testingcodenamedir;/</file>), kun niitä on
jonkin aikaa testattu <tt>unstable</tt>-jakelussa.

Fyysiset paketit sijaitsevat nykyään hakemistossa <file>pool</file>
(<ref id="pools">).

<file>testing/</file>-hakemistossa on myös alihakemistot
<file>main</file>, <file>contrib</file> ja <file>non-free</file>,
jotka vastaavat <file>stable/</file>-jakelun alihakemistoja.

<p>Näistä paketeista tulee aina olla sama versio kaikilla
laitearkkitehtuureilla, joilla ne on käännetty ja pakettien tulee olla
asentuvia. Niissä tulee myös olla vähemmän julkaisukriittisiä virheitä
kuin <tt>unstable</tt>-jakelussa olevissa versioissa. Tällä pyritään
siihen, että <tt>testing</tt>-jakelu olisi aina lähes valmis
julkaisuversiokandidaatti. Lisää tietoa testausmekanismeista on sivulla
<url id="&testing-notes;">.

<p>
<tt>testing</tt>-jakelun tilasta kerrotaan seuraavilla sivuilla:
<list compact>
<item><url id="&update-excuses;"
         name="päivitysselitykset">
<item><url id="&testing-problems;"
         name="testausongelmat">
<item><url id="&release-critical;"
         name="julkaisukriittiset virheet">
<item><url id="&qa-base-bugs;"
         name="perusjärjestelmän virheet">
<item><url id="&qa-standard-bugs;"
         name="standard- (vakio-) ja task- (tehtävä-) pakettien virheet">
<item><url id="&qa-bugs;"
         name="muut virheet ja virheidenkorjaustalkoiden muistiinpanot">
</list>

<sect1 id="unstable"><tt>unstable</tt>-jakeluversio

<p><tt>unstable</tt>-jakeluversioon, jonka nimi on aina "Sid",
lähetetyt paketit tallennetaan <file>unstable</file>-hakemistoon (joka
on symbolinen linkki hakemistoon <file>sid/</file>), kun ne kopioidaan Debian-arkistoon. Paketit pysyvät hakemistossa kunnes ne siirretään
<file>testing/</file>-hakemistoon. Fyysiset paketit sijaitsevat nykyään
hakemistossa <file>pool</file> (<ref id="pools">). <file>unstable/</file>-hakemistossa on myös alihakemistot
<file>main</file>, <file>contrib</file> ja <file>non-free</file>,
jotka vastaavat <file>stable/</file>-jakelun alihakemistoja.

<p><tt>unstable</tt>-jakelu on vedos uusimmasta kehitysversiosta.
Käyttäjät ovat tervetulleita testaamaan ja käyttämään näitä paketteja,
mutta paketit eivät välttämättä ole kovin valmiita.
<tt>unstable</tt>-jakelun käytön etu on se, että käytössäsi on aina
Debian-projektin uusin versio; haittapuoli on se, että jos jokin
hajoaa, olet omillasi.

<p><tt>unstable</tt>-jakelun virheiden tilaa raportoidaan verkkosivulla
<url id="&unstable-problems;" name="Unstablen ongelmat">.

<!-- Above was enough
<sect1 id="sid">The Sid distribution

<p>Sid or <tt>unstable</tt> is the place where most of the packages
are initially uploaded. It will never be released directly, because packages
which are to be released will first have to be included in <tt>testing</tt>,
in order to be released in <tt>stable</tt> later on. Sid contains packages
for both released and unreleased architectures.

<p>The name "Sid" also comes from the "Toy Story" animated motion picture:
Sid was the boy next door who destroyed toys :-)
-->

<sect1 id="frozen"><tt>frozen</tt>-jakeluversio

<p>Kun <tt>testing</tt>-jakelu on tarpeeksi hyvässä kunnosssa, se
jäädytetään, mikä tarkoittaa ettei siihen hyväksytä enää uutta koodia,
vaan ainoastaan mahdollisia virheiden korjauksia. Tällöin myös luodaan
uusi testing-hakemisto <file>dists</file>-hakemistoon ja sille annetaan
uusi koodinimi. Jäädytettyä jakeluversiota testataan muutaman kuukauden
ajan muuttaen ja testaten sitä vuorotellen "testisykleissä".

<p>Jäädytetyn jakelun yhteydessä pidetään kirjaa pakettien virheistä,
jotka voivat viivästyttää paketin julkaisua tai estää koko jakelun
julkaisun. Kun virheiden määrä laskee alle hyväksyttävän enimmäismäärän,
jäädytetystä jakelusta tulee uusi <tt>stable</tt>, se julkaistaan ja
edellinen vakaa jakelu jää käytöstä (ja se siirretään arkistoon).

<sect1 id="codenames">Debianin jakeluversioiden koodinimet

<p>Fyysiset hakemistonimet <file>dists</file>-hakemistossa, kuten
<file>&stablecodenamedir;/</file> ja <file>&testingcodenamedir;/</file>,
ovat vain "koodinimiä". Kun Debianin jakelu on kehitysvaiheessa, sillä
ei ole versionumeroa vaan koodinimi. Näiden koodinimien tarkoituksena
on tehdä Debianin jakeluiden peilaamisesta helpompaa. (Jos todellisen
hakemiston kuten <file>unstable</file>:n nimi vaihtuisi yhtäkkiä
<file>stable/</file>:ksi, paljon tavaraa tarvitsisi turhaan ladata
uudestaan.)

<p>Tällä hetkellä <file>stable/</file> on symbolinen linkki hakemistoon
<file>&stablecodenamedir;/</file> ja <file>testing/</file> on symbolinen
linkki hakemistoon <file>&testingcodenamedir;/</file>. Tämä tarkoittaa,
että <tt>&stablecodename;</tt> on tämänhetkinen vakaa jakeluversio ja <tt>&testingcodename;</tt> on tämänhetkinen testattava jakeluversio.

<p><file>unstable/</file> on pysyvä linkki hakemistoon <file>sid/</file>,
koska epävakaa jakeluversio on aina nimeltään Sid.

<sect1 id="oldcodenames">Aikaisemmin käytetyt koodinimet.

<p>Seuraavat koodinimet on jo käytetty:
"Buzz" versiolle 1.1,
"Rex" versiolle 1.2,
"Bo" versiolle 1.3.x,
"Hamm" versiolle 2.0,
"Slink" versiolle 2.1,
"Potato" versiolle 2.2,
"Woody" versiolle 3.0 ja
"Sarge" versiolle 3.1.

<sect1 id="sourceforcodenames">Koodinimien lähde

<p>Tähän mennessä kaikki koodinimet ovat Pixarin elokuvasta
<em>Toy Story</em>.

<list compact>
  <item><strong>Buzz</strong> (Buzz Lightyear) oli avaruusmies,
  <item><strong>Rex</strong> oli tyrannosaurus,
  <item><strong>Bo</strong> (Bo Peep) oli lampaista huolehtiva tyttö,
  <item><strong>Hamm</strong> oli säästöpossu,
  <item><strong>Slink</strong> (Slinky Dog) oli lelukoira,
  <item><strong>Potato</strong> oli Mr. Potato Head -nukke,
  <item><strong>Woody</strong> oli karjapaimen,
  <item><strong>Sarge</strong> oli vihreiden muovisotilaiden johtaja,
  <item><strong>Etch</strong> (Etch-a-Sketch) oli piirtolelu,
  <item><strong>Sid</strong> oli naapurin poika, joka hajotti leluja.
</list>
<!--
  more info in http://www.pixar.com/featurefilms/ts/index.html
  or better yet http://us.imdb.com/M/title-exact?Toy&percnt;20Story&percnt;20(1995)
  or actually:
    http://us.imdb.com/Title?0114709 for TS1
    http://us.imdb.com/Title?0120363 for TS2
  we shouldn't put the links in, Pixar needs no additional propaganda
-->
<!--
  characters not used from Toy Story (yet):
    - Andy (the kid)
    - Snake
    - Robot
    - Scud (Sid's dog)
  and additional characters from Toy Story 2, also not yet used:
    - Jessie (the Yodelling Cowgirl)
    - Zurg (the Emperor)
    - Wheezy (the penguin)
    - Hannah (owner of Jessie)
    - Stinky Pete the Prospector (the old fat guy)
    - Mrs. Davis (Andy's Mom)
    - Barbie
-->

<sect1 id="pools"><file>pool</file>-hakemisto

<p>Aikaisemmin paketit olivat <file>dists</file>-hakemiston
alihakemistoissa sen mukaan mihin jakeluversioon ne kuuluivat. Tästä
aiheutui erinäisiä ongelmia, muun muassa suuria latausmääriä
peilipalvelimilla, kun suuria muutoksia tehtiin.

<p>Nykyään paketit pidetään suuressa "altaassa", joka on organisoitu
lähdekoodipakettien nimien mukaan. Jotta allas olisi hallittavissa, se
on jaettu osaston (<tt>main</tt>, <tt>contrib</tt> ja <tt>non-free</tt>)
ja lähdekoodipaketin nimen ensimmäisen kirjaimen mukaan
alihakemistoihin. Näissä hakemistoissa on useita tiedostoja:
binääripaketit jokaiselle laitearkkitehtuurille ja lähdekoodipaketit,
joista binääripaketit on käännetty.

<p>Kunkin paketin sijainti löytyy komennon <tt>apt-cache showsrc
<var>paketin-nimi</var></tt> tulosteen riviltä "Directory:". Esimerkiksi
<package>apache</package>-ohjelman paketit löytyvät hakemistosta
<file>pool/main/a/apache/</file>. Koska <tt>lib*</tt>-nimisiä paketteja
on niin paljon, niitä käsitellään hieman eri tavalla. Esimerkiksi
<package>libpaper</package>-paketit ovat hakemistossa
<file>pool/main/libp/libpaper/</file>.

<p>Jotkin ohjelmat, kuten <prgn>apt</prgn>, käyttävät
<file>dists</file>-hakemistoja edelleen tiedostojen indeksoimiseen.

<p>Normaalisti käyttäjän ei tarvitse huolehtia näistä, sillä uudempi
<prgn>apt</prgn> -ohjelma ja luultavasti myös vanhempi
<prgn>dpkg-ftp</prgn>-ohjelma hoitavat kaiken automaattisesti.
Lisätietoa löytyy dokumentista <url id="&pool-faq;"
name="RFC: implementation of package pools">.

<!-- bumped up from sect2 to sect1 -->
<sect1 id="sid-history">Sid-jakelun historiaa

<p>Kun nykyistä Sidiä ei ollut, Debianin arkistosivuston organisoinnissa
oli yksi suuri ongelma: oletuksena oli, että kun arkkitehtuuri lisättiin
sen hetkiseen <file>unstable/</file>-hakemistoon, se julkaistaisiin kun
kyseisestä jakelusta tulisi uusi <tt>stable</tt>. Monien arkkitehtuurien
kohdalla näin ei käynyt ja hakemistoja piti siirtää julkaisun aikaan.
Tämä oli epäkäytännöllistä, koska siirto kulutti paljon siirtokapasiteettia.

<p>Arkiston ylläpitäjät kiersivät ongelmaa useita vuosia laittamalla
julkaisemattomien arkkitehtuurien binääreitä erityiseen hakemistoon
nimeltä <file>sid</file>. Kun jokin arkkitehtuuri julkaistiin
ensimmäisen kerran, sen hetkisestä <file>stable/</file>-hakemistosta oli
linkki hakemistoon <file>sid/</file> ja siitä eteenpäin binäärit luotiin
normaalisti <file>unstable/</file>-hakemistoon. Tämä malli oli
käyttäjille jossain määrin hämmentävä.

<p>Siirryttäessä pakettialtaisiin (katso <ref id="pools">)
Woody-julkaisuversion kehityksen aikaan, binääripaketteja alettiin
säilyttää kanonisessa paikassa altaassa riippumatta jakelusta. Tällöin
version julkaisu ei enää aiheuta suuria latausmääriä (vaikka kehityksen
aikana siirtokapasiteetin kulutus onkin suurempaa).

<sect1 id="incoming">Palvelimelle ladatut paketit <file>incoming/</file>-hakemistossa.
<p>
Palvelimelle ladatut paketit laitetaan hakemistoon <url id="&incoming;">,
kun on ensin tarkistettu, että ne todella tulevat joltain
Debian-kehittäjältä. (Ne laitetaan alihakemistoon <file>DELAYED</file>,
jos lataaja ei ole kyseisen paketin ylläpitäjä (ns. Non-Maintainer
Upload eli NMU).) Kerran päivässä paketit siirretään hakemistosta
<file>incoming/</file> hakemistoon <file>unstable</file>.
<p>
Hätätilanteessa saatat haluta asentaa paketteja hakemistosta
<file>incoming/</file> jo ennen kuin ne ehtivät hakemistoon
<file>unstable/</file>.
</sect1>

<sect1 id="snapshot">Vanhempien pakettien hakeminen
<p>Uusimpia Debian-jakeluita säilytetään <file>debian</file>-hakemistossa
jokaisella <url id="&mirror-site;" name="Debian-peilipalvelimella">,
kun taas vanhempien Debian-jakeluiden, esimerkiksi Slinkin, arkistoja
säilytetään osoitteessa <url id="&archivehome;"> tai hakemistossa
<file>debian-archive</file> Debianin peilipalvelimilla.
<p>
Vanhemmat <tt>testing</tt>- ja <tt>unstable</tt>-paketit löytyvät
osoitteesta <url id="&snapshothome;">.

</sect1>

<sect1 id="archsections">Laitearkkitehtuuriosiot
<!--
What are all those directories inside <tt>dists/stable/main</tt>?
Simplified this !!!
-->

<p>Jokaisen päähakemistopuun (<file>dists/stable/main</file>,
<file>dists/stable/contrib</file>, <file>dists/stable/non-free</file>,
<file>dists/unstable/main</file>, jne.) sisällä binääripakettien
kuvaukset ovat alihakemistoissa, joiden nimet kertovat
laitearkkitehtuurin, jota varten paketit on käännetty.

<list>
  <item><file>binary-all/</file> paketeille, jotka ovat riippumattomia
 arkkitehtuurista. Tällaisia ovat esimerkiksi Perl-skriptit ja puhdas
 dokumentaatio.
  <item><file>binary-<var>alusta</var>/</file> paketeille, joita voi
  suorittaa tietyllä alustalla.
  <!-- Yes I simplified this -->
</list>

<p>Huomaa, että todelliset
binääripaketit eivät nykyään enää ole näissä hakemistoissa
vaan päätason <file>pool</file>-hakemistossa. Indeksitiedostot
(<file>Packages</file> ja <file>Packages.gz</file>) on jätetty
hakemistoihin taaksepäin yhteensopivuuden takaamiseksi.

<p>Lista tuetuista laitearkkitehtuureista löytyy kunkin jakeluversion
julkistusmuistiosta (<url id="&stable-release;" name="stable">,
<url id="&testing-release;" name="testing">).

<!-- Removed, above release note shall be enough.
<p>See <ref id="arches"> for more information.
-->

<sect1 id="source">Lähdekoodi

<p>Debian-systeemin kaikkien osien lähdekoodi on sisällytetty
järjestelmään. Lisäksi useimpien järjestelmän ohjelmien lisenssi
<strong>vaatii</strong>, että niiden lähdekoodia levitetään ohjelman
mukana tai että ohjelman mukana kerrotaan kuinka lähdekoodin voi saada.

<p>Yleensä lähdekoodeja pidetään joko <file>source</file>-hakemistoissa,
jotka sijaitsevat kaikkien arkkitehtuurispesifisten binäärihakemistojen
rinnalla, tai nykyään <file>pool</file>-hakemistossa (Kts. <ref id="pools">).
Hakeaksesi paketin lähdekoodin tuntematta Debian-arkiston rakennetta,
käytä komentoa <tt>apt-get source <var>paketin-nimi</var></tt>.

<p>Jotkin paketit, esimerkiksi <package>pine</package>, ovat saatavissa
ainoastaan lähdekoodipakettina lisenssirajoitusten takia. (Äskettäin
Pinen asennusta helpottamaan on luotu paketti
<package>pine-tracker</package>.) Kappaleissa <ref id="port"> ja
<ref id="packaging"> kerrotaan tavoista kääntää paketti manuaalisesti.

<p>Hakemistoissa <file>contrib</file> ja <file>non-free</file> olevien,
muodollisesti Debian-järjestelmään kuulumattomien, pakettien lähdekoodi
saattaa olla saatavissa tai sitten ei.

<sect id="pkg-basics">Debianin pakettienhallintajärjestelmä

<sect1 id="package-basics">Debian-pakettien yleiskuvaus

<p>Paketit yleensä sisältävät kaikki joidenkin tiettyjen komentojen tai
ominaisuuksien toteuttamiseen tarvittavat tiedostot. Debian-paketteja
on olemassa kahdenlaisia:
<list>
  <item><strong>Binääripaketteja</strong>, jotka sisältävät suoritettavia
  tiedostoja, asetustiedostoja, man/info-ohjesivuja, tekijänoikeustietoja
  ja muuta dokumentaatiota. Näitä paketteja levitetään Debianin omassa
  arkistointiformaatissa (kts. <ref id="deb-format">). Ne tunnistaa
  yleensä <tt>.deb</tt>-tiedostopäätteestä. Binääripaketit voi purkaa
  Debian-apuohjelmalla <prgn>dpkg</prgn>, jonka yksityiskohtaisemmat
  ohjeet löytyvät sen ohjesivulta.

  <item><strong>Lähdekoodipaketteja</strong>, jotka sisältävät
  lähdekoodipaketin sisällön kuvaavan <tt>.dsc</tt>-tiedoston (kertoo
  myös seuraavien tiedostojen nimet), tar-formaatissa olevan ja
  gzip-pakatun, alkuperäisen ja muuttamattoman lähdekooditiedoston
  <tt>.orig.tar.gz</tt>, sekä yleensä <tt>.diff.gz</tt>-tiedoston, joka
  sisältää alkuperäiseen lähdekoodiin Debiania varten tehdyt muutokset.
  Apuohjelmalla <prgn>dpkg-source</prgn> voi pakata ja purkaa
  Debian-lähdekoodipaketteja. Tarkemmat ohjeet löytyvät ohjelman
  ohjesivulta.
</list>

<p>Ohjelmia asennettaessa pakettienhallintajärjestelmä käyttää pakettien
ylläpitäjien asettamia "riippuvuuksia". Nämä riippuvuudet kuvataan
jokaisen paketin mukana olevassa <file>control</file>-tiedostossa.
Esimerkiksi GNU C-kääntäjän sisältävä paketti (<package>gcc</package>)
on riippuvainen paketista <package>binutils</package>, joka sisältää
linkittäjän ja kokoajan. Jos käyttäjä yrittää asentaa paketin
<package>gcc</package> asentamatta ensin pakettia
<package>binutils</package>, pakettienhallintajärjestelmä (dpkg)
pysähtyy ja tulostaa virheilmoituksen jossa se kertoo tarvitsevansa
myös paketin <package>binutils</package>. Käyttäjän on kuitenkin
mahdollista ohittaa tämä toiminnallisuus (kts. <manref name="dpkg"
section="8">). Lisätietoja löytyy alta kappaleesta <ref id="depends">.

<p>Debianin paketointityökaluja voidaan käyttää
<list>
  <item>pakettien tai niiden osien hallintaan ja muunteluun,
  <item>pakettien osiin jakamiseen, jos on tarve siirtää niitä rajallisen
    kokoisella tallennusmedialla kuten levykkeillä,
  <item>kehittäjien apuna pakettiarkistoa rakennettaessa ja
  <item>pakettien asentamiseen etänä Debianin arkistosivustolta.
</list>

<sect1 id="deb-format">Debian-pakettien formaatti

<p>Debianin "paketti" eli pakattu tiedosto sisältää tiettyyn
ohjelmistoon tai toisiinsa liittyviin ohjelmiin kuuluvia suoritettavia
tiedostoja, ohjelmakirjastoja ja dokumentaatiota. Yleensä Debianin
pakettien tiedostopääte on <tt>.deb</tt>.
<footnote>
<!-- Below added by Osamu based on a message posted by Colin Watson -->
<p><prgn>debian-installer</prgn>-projektin yhteydessä kehitettiin
paketit, joiden tiedostopääte on <tt>.udeb</tt>. Nämä ovat
mikro-<tt>.deb</tt> -paketteja, jotka eivät täysin noudata Debianin
linjauksia, joista puuttuu mm. dokumentaatio, ja jotka on tarkoitettu
ainoastaan <prgn>debian-installer</prgn>-ohjelman käyttöön. 
<tt>.deb</tt>- ja <tt>.udeb</tt>-pakettien tiedostomuodot ovat identtiset.
<tt>.udeb</tt>-pakettien käsittelyyn käytetty <prgn>udpkg</prgn>-ohjelma
on rajoittuneempi kuin standardi <prgn>dpkg</prgn> ja se tukee harvempia
pakettien riippuvuussuhteita. Tiedostopääte vaihdettiin, koska
Debian-arkiston ylläpitäjät eivät halunneet arkistoon
<tt>.deb</tt>-päätteisiä paketteja, jotka eivät täyttäneet kaikkia
paketeille asetettuja vaatimuksia. Uusi tiedostopääte korostaa eroa ja
pienentää mahdollisuutta, että käyttäjät tahattomasti asentaisivat
näitä paketteja oikeisiin järjestelmiin. <tt>.udeb</tt>-paketteja
käytetään perusasennuksen aikana hyvin rajoitetun Debian-järjestelmän
luomiseen.
</footnote>

<p>Debianin binääripakettien sisällön formaatti on kuvattu ohjesivulla
<manref name="deb" section="5">. Koska pakettien tämä sisäinen
formaatti saattaa vaihtua (Debianin julkaisuversioiden välillä), käytä
aina ohjelmaa <manref name="dpkg-deb" section="1">
<tt>.deb</tt>-tiedostojen muuttamiseen.

<!-- Below added by Osamu Not sure but should be right -->

<p>Ainakin Sarge-jakelussa kaikkia Debian-paketteja on voinut käsitellä
Unixin peruskomennoilla <prgn>ar</prgn> ja <prgn>tar</prgn>, vaikka
<prgn>dpkg</prgn>-komennot eivät olisi käytettävissä.

<sect1 id="pkgname">Debianin pakettitiedostojen nimeämiskäytännöt
<!--
Why are Debian package filenames so long?
-->
<p>Debian-pakettien tiedostonimet noudattavat seuraavaa käytäntöä:
<example>
<var>foo</var>_<var>ver</var>-<var>muut</var>_<var>ark</var>.deb
</example>
jossa, yleensä, <var>foo</var> on paketin nimi,
<var>ver</var> on ohjelman versionumero,
<var>muut</var> on Debian-version muutosnumero ja
<var>ark</var> kohdelaitearkkitehtuuri.
Pakettien nimiä on tietysti helppo muuttaa.
Tiedoston <var>tiedostonimi</var> todella sisältämän
paketin saat selville komennolla:
<example>dpkg --info <var>tiedostonimi</var></example>

<p>Debian-version muutosnumeron määrittää Debian-kehittäjä, tai kuka
tahansa paketin paketoi. Muutosnumeron muuttaminen yleensä merkitsee,
että paketointitapa on jollain tavalla muuttunut.

<!-- This get too detailed
<sect1 id="controlfile">The Debian control file
-->

<sect1 id="conffile">Paikallisten asetusten säilyttäminen
<!--
What is a Debian conffile
-->
<p>Paikallisen ylläpitäjän muokattaviksi tarkoitettuja tiedostoja
säilytetään hakemistossa <file>/etc/</file>. Debianin politiikka on,
että kaikki paikallisesti muokattavien tiedostojen muutosten tulee
säilyä pakettien päivityksessä.
<p>
Jos paikallisesti muokattavan tiedoston oletusversio toimitetaan
paketissa itsessään, tiedosto listataan "asetustiedostona".
Pakettienhallintajärjestelmä ei kysymättä ylläpitäjän lupaa päivitä
asetustiedostoja, joita ylläpitäjä on edellisen asennuksen jälkeen
muokannut. Toisaalta, jos ylläpitäjä ei ole muokannut asetustiedostoa,
se päivitetään muun paketin mukana. Lähes aina tämä on toivottavaa ja
siksi asetustiedostoihin tehtävät muutokset kannattaa minimoida.

<p>Pakettiin kuuluvat asetustiedostot voi listata ajamalla seuraavan
komennon.
<example>
dpkg --status <var>paketti</var>
</example>
Lista löytyy riviltä: "Conffiles:".

<p>Lisätietoja asetustiedostoista löytyy dokumentista Debian Policy Manual
kappaleesta "Configuration files". (Kts. <ref id="references">).

<sect1 id="maintscripts">Debianin ylläpitoskriptit
<!--
What is a Debian preinst, postinst, prerm, and postrm
  script?
-->
<p><!--These files-->
Debianin ylläpitoskriptit ovat suoritettavia komentotiedostoja, jotka
ajetaan automaattisesti ennen tai jälkeen paketin asennuksen. Nämä
tiedostot yhdessä <file>control</file>-nimisen tiedoston kanssa
muodostavat Debian-paketin "hallintaosion" (control section).

<p>Ylläpitotiedostoja ovat:
<taglist>
<tag>preinst
  <item>Tämä skripti suoritetaan ennen kuin Debian-paketin
  (<tt>.deb/</tt>) purkamista. Monet "preinst"-skriptit pysäyttävät
  päivitettäviin paketteihin liittyvät ajossa olevat palvelut kunnes
  asennus tai päivitys on valmis (eli "postint"-skripti on onnistuneesti
  suoritettu).
  
<tag>postinst
  <item>Tämä skripti tyypillisesti saattaa loppuun kaikki paketin
  tarvitsemat asetusten määrittelyt sen jälkeen, kun Debian-paketti
  (<tt>.deb</tt>) on purettu. Usein "postinst"-skriptit pyytävät
  käyttäjältä syötteitä ja varoittavat käyttäjää siitä, että jos tämä
  hyväksyy oletusasetukset, hänen tulisi muistaa määrittää asetukset
  myöhemmin tarvittaessa uudelleen. Monet "postinst"-skriptit myös
  suorittavat tarvittavat komennot pakettiin liittyvien palveluiden
  käynnistämiseksi asennuksen tai päivityksen jälkeen.
  
<tag>prerm
  <item>Tämä skripti tyypillisesti pysäyttää kaikkien pakettiin
  liittyvät taustaohjelmat. Skripti suoritetaan ennen pakettiin
  liittyvien tiedostojen poistamista.

<tag>postrm
  <item>Tämä skripti tyypillisesti muokkaa pakettiin liittyviä linkkejä
  ja muita tiedostoja tai poistaa paketin luomia tiedostoja. (Kts. myös
  <ref id="virtual">.)
</taglist>

<p>Nykyään kaikki hallintatiedostot löytyvät hakemistosta 
<file>/var/lib/dpkg/info</file>. Pakettiin <tt>foo</tt> liittyvien
tiedostojen nimi alkaa "foo" ja niiden tiedostopääte on "preinst",
"postinst", jne. Samassa hakemistossa oleva tiedosto
<file>foo.list</file> listaa kaikki paketin <tt>foo</tt> kanssa
asennetut tiedostot. (Huomaa, että näiden tiedostojen sijainti on
ohjelman <prgn>dpkg</prgn> määrittelemä ja saattaa muuttua.)

<sect1 id="priority">Pakettien prioriteetit
<!--
What is a Required/Important/Standard/Optional/Extra
package?
-->
<p>Jokaiselle Debian-paketille annetaan jakelun ylläpitäjien toimesta
<strong>prioriteetti</strong> auttamaan pakettienhallintajärjestelmää.
Prioriteetteja ovat:

<list>
  <item><strong>Required</strong>-paketit (vaadittavat) tarvitaan,
  jotta järjestelmä toimii oikein.
    <p>Tähän sisältyvät kaikki työkalut, joita tarvitaan järjestelmän
    vikojen korjaamiseen. Näitä paketteja ei tule poistaa tai järjestelmä
    saattaa hajota niin ettei edes ohjelmaa <prgn>dpkg</prgn> voida
    käyttää aiemman tilanteen palauttamiseen. Järjestelmä, jossa on
    ainoastaan Required-paketit on luultavasti riittämätön useimpiin
    tarkoituksiin, mutta mahdollistaa ylläpitäjälle järjestelmän
    käynnistämisen uudelleen ja uusien ohjelmien asentamisen.
  <item><strong>Important</strong>-paketit (tärkeät) tulisi löytyä
  jokaisesta Unixin kaltaisesta järjestelmästä.
    <p>Muilla paketeilla, joita ilman järjestelmä ei toimi hyvin tai ole
    käyttökelpoinen, on tämä prioriteetti. Tämä <strong>ei</strong>
    sisällä Emacsia, X11:sta tai TeX:ä tai mitään muuta suurta ohjelmaa.
    Nämä paketit tarjoavat vain perusrakenteen.
  <item><strong>Standard</strong>-paketit (vakio) ovat tavallisia
  kaikissa Linux-järjestelmissä ja sisältävät melko pienen, mutta ei
  liian rajoitetun komentoriviltä käytettävän järjestelmän.
    <p>Nämä paketit asennetaan oletuksena, jos käyttäjä ei valitse
    mitään muuta. "Standard" ei sisällä monia suuria ohjelmia, mutta
    sisältää Emacsin (joka on paremminkin osa systeemin perustaa kuin
    ohjelma) ja kohtuullisen osajoukon TeX:stä ja LaTeX:stö (jos tämä
    on mahdollista ilman X:ää).
  <item><strong>Optional</strong>-paketit (valinnaiset) sisältävät
  kaiken sen, mitä käyttäjä saattaisi haluta asentaa, vaikkei ohjelmia
  tuntisikaan, jos hänellä ei ole mitään erityisvaatimuksia.
    <p>Tämä sisältää X11:sta, täyden TeX-jakelun ja paljon ohjelmia.
  <item><strong>Extra</strong>-paketit joko ovat yhteensopimattomia
  jonkin korkeamman prioriteetin paketin kanssa, ovat tarpeettomia
  käyttäjille, jotka eivät niitä tunne, tai niillä on erityisvaatimuksia,
  joiden takia ne eivät saa prioriteettia "Optional".
</list>
<p>Huomaa erot pakettikuvauksissa seuraavien välillä: "Priority:
required", "Section: base" ja "Essential: yes". "Section: base"
tarkoittaa, että paketti asennetaan ennen kaikkea muuta uudessa
järjestelmässä. Useimmilla "Section: base"-paketeilla on "Priority:
required" tai ainakin "Priority: important" ja monet niistä on merkitty
tunnisteella "Essential: yes". "Essential: yes" tarkoittaa, että
poistettaessa pakettia järjestelmästä pakettienhallintaohjelmalle kuten
<prgn>dpkg</prgn> täytyy antaa ylimääräinen pakotusvalitsin, jotta poisto
onnistuu. Esimerkiksi paketeilla <package>libc6</package>,
<package>mawk</package> ja <package>makedev</package> on "Priority:
required" ja "Section: base", mutta ei tunnistetta "Essential: yes".

<sect1 id="virtual">Virtuaaliset paketit

<p>Virtuaalinen paketti on yleinen nimi, jolla tarkoitetaan mitä tahansa
yhtä pakettia joukosta paketteja, jotka kaikki tarjoavat saman
perustoiminnallisuuden. Esimerkiksi ohjelmat <prgn>tin</prgn> ja
<prgn>trn</prgn> ovat molemmat tarkoitettu uutisryhmien lukemiseen ja
niinpä kumpi tahansa niistä täyttää sellaisen ohjelman tarpeen, joka
toimiakseen vaatii, että järjestelmässä on uutisryhmien lukuohjelma.
Näin ollen molempien ohjelmien sanotaan tarjoavan virtuaalisen paketin
nimeltä <package>news-reader</package> (uutislukija).

<p>Vastaavasti monet paketit kuten <package>exim</package>,
<package>exim4</package>, <package>sendmail</package> ja 
<package>postfix</package> tarjoavat toiminnallisuuden sähköpostin
välitykseen. Niinpä sanotaan, että ne tarjoavat virtuaalisen paketin
<package>mail-transport-agent</package> (sähköpostin välitysohjelma).
Jos mikä tahansa niistä on asennettuna, tämän virtuaalisen paketin
olemassaolo riittää ohjelmalle, jolle on määritelty riippuvuus
sähköpostin välitysohjelmaan,

<p>Jos systeemiin on asennettuna useampia paketteja, jotka tarjoavat
saman virtuaalisen paketin, järjestelmän ylläpitäjä voi valita yhden
näistä ensisijaisesti käytettäväksi. Valinta tehdään komennolla
<prgn>update-alternatives</prgn>, joka on tarkemmin kuvattu
kappaleessa <ref id="alternatives">.

<sect1 id="depends">Pakettien riippuvuudet
<p>Debianin pakettienhallintajärjestelmä käyttää riippuvuusilmoituksia,
joilla ilmaistaan, että toimiakseen oikein tai paremmin paketti
vaatii, että jokin toinen paketti on asennettuna.
<list>
  <item>Paketti A <strong>riippuu</strong> (<strong>Depends</strong>)
  paketista B, jos B:n tulee ehdottomasti olla asennettuna, jotta A
  olisi käyttökelpoinen. Joissain tapauksissa A ei ole riippuvainen
  ainoastaan B:stä, vaan jostain tietystä B:n versiosta. Tällaisessa
  tapauksessa riippuvuus määritellään yleensä alarajana, joka
  tarkoittaa, että myös B:n uudemmat versiot kelpaavat.

  <item>Paketti A <strong>suosittelee</strong>
  (<strong>Recommends</strong>) pakettia B, jos paketin ylläpitäjä
  arvelee, että suurin osa käyttäjistä ei halua pakettia A ilman jotain
  paketin B tarjoamaa toiminnallisuutta.

  <item>Paketti A <strong>ehdottaa</strong>
  (<strong>Suggests</strong>) pakettia B, jos B sisältää pakettiin
  A liittyviä tiedostoja tai parantaa sen toiminnallisuutta. Sama
  riippuvuus ilmaistaan ilmoittamalla, että paketti B
  <strong>parantaa</strong> (<strong>Enhances</strong>) pakettia A.

  <item>Paketti A <strong>törmää</strong> (<strong>Conflicts</strong>)
  paketin B kanssa, kun A ei toimi kunnolla, jos B on asennettuna.
  Tämän riippuvuuden yhteydessä usein määritellään riippuvuus "korvaa".

  <item>Paketti A <strong>korvaa</strong> (<strong>Replaces</strong>)
  paketin B, kun B:n asentamat tiedostot poistetaan tai korvataan A:n
  tiedostoilla.

  <item>Paketti A <strong>tarjoaa</strong> (<strong>Provides</strong>)
  paketin B, kun kaikki B:n toiminnallisuus ja tiedostot sisältyvät A:han.
</list>

<p>Tarkempia tietoja näiden termien käytöstä löytyy dokumenteista
<em>Packaging Manual</em> ja <em>Policy Manual</em>.

<p>Huomaa, että ohjelmissa <prgn>dselect</prgn> ja <prgn>aptitude</prgn> voi tarkemmin määrätä
riippuvuuksilla <strong>Recommends</strong> ja <strong>Suggests</strong>
merkittyjen pakettien asennusta kuin ohjelmassa <prgn>apt-get</prgn>,
joka vain asentaa kaikki <strong>Depends</strong>-vaatimuksella merkityt
paketit ja jättää <strong>Recommends</strong>- ja
<strong>Suggests</strong>-merkityt paketit asentamatta. Molempien
ohjelmien uudemmat versiot pohjautuvat APT:iin. 

<sect1 id="pre-depends">Riippuvuuden "Pre-Depends" ("esi-riippuvuus") merkitys

<p><prgn>dpkg</prgn> aina määrittää paketin asetukset ennen kuin se
määrittää paketista riippuvan toisen paketin asetukset. Normaalisti
<prgn>dpkg</prgn> kuitenkin purkaa paketit satunnaisessa järjestyksessä,
johon ei vaikuta pakettien väliset riippuvuudet. (Purkuprosessi koostuu
tiedostojen paketista purkamisesta ja niiden siirtämisestä oikeisiin
paikkoihin. Kuitenkin, jos paketille on määritetty
"Pre-Depends"-riippuvuus jostain toisesta paketista, tämä toinen paketti
puretaan ja sen asetukset määritetään ennen kuin siitä riippuva paketti
edes puretaan.

<footnote>
Tämä mekanismi kehitettiin, jotta <tt>a.out</tt>-formaatista
ELF-formaattiin päivitettävät järjestelmät saadaan päivitettyä
turvallisesti. Tällaisessa päivityksessä pakettien
<strong>purkujärjestys</strong> oli oleellinen.
</footnote>

Tämän riippuvuuden käyttö pyritään minimoimaan.

<sect1 id="pkgstatus">Paketin tila
<!--
What is meant by unknown/install/remove/purge/hold in
  the package status?
-->
<p>Paketin tila voi olla "unknown" (tuntematon), "install" (asenna),
"remove" (poista), "purge" (siivoa) tai "hold" (säilytä).
Nämä "liput" kertovat mitä käyttäjä on halunnut paketille tehdä (joko
tehdessä valintoja ohjelman <prgn>dselect</prgn> valintaosiossa tai
käyttäen suoraan ohjelmaa <prgn>dpkg</prgn>).

<p>Lippujen merkitykset ovat:
<list compact>
  <item><strong>unknown</strong>  - käyttäjä ei ole koskaan kertonut
                haluaako hän paketin.
  <item><strong>install</strong>  - käyttäjä haluaa, että paketti on
                asennettu tai päivitetty.
  <item><strong>remove</strong>   - käyttäjä haluaa, että paketti
                poistetaan, mutta olemassa olevat asetustiedostot
                säilytetään.
  <item><strong>purge</strong>    - käyttäjä haluaa, että paketti
                poistetaan kokonaan, mukaan lukien sen asetustiedostot.
  <item><strong>hold</strong>     - käyttäjä haluaa, että paketin tilaa
                tai versiota ei muuteta mitenkään.
</list>

<sect1 id="puttingonhold">Pakettien päivittämisen estäminen
<!--
How do I put a package on hold?
Made major rewrite to accommodate new /etc/apt/preferences in progress
-->
<p>Pakettien päivittämisen estämiseen on kaksi tapaa ohjelmassa
<prgn>dpkg</prgn>, ja Woodystä alkaen ohjelmassa APT.

<p>Ohjelmassa <prgn>dpkg</prgn>, tallenna ensin lista valituista
paketeista:
<example>
dpkg --get-selections \* &gt; <var>valinnat.txt</var>
</example>
Sen jälkeen muuta tuloksena olevassa tiedostossa 
<file><var>valinnat.txt</var></file> säilytettävän paketin,
esimerkiksi <package>libc6</package>, rivi muodosta:
<example>
libc6                       install
</example>
muotoon:
<example>
libc6                       hold
</example>
Tallenna tiedosto ja lataa se <prgn>dpkg</prgn>:n tietokantaan komennolla:
<example>
dpkg --set-selections &lt; <var>valinnat.txt</var>
</example>
Jos tiedät säilytettävän paketin nimen, voit ajaa suoraan komennon:
<example>
echo libc6 hold | dpkg --set-selections
</example>
Tämä menetelmä säilyttää paketit kunkin paketin asennusvaiheessa.

<p>Saman voin tehdä ohjelmassa <prgn>dselect</prgn>. Etsi valintaosiossa
([S]elect) paketti, jonka nykyisen tilan haluat säilyttää ja paina
näppäintä `=' (tai `H'). Muutokset tulevat voimaan heti, kun poistut
valintaikkunasta.

<p>Woody:ssä ja sitä uudemmissa jakeluissa oleva APT-järjestelmä tarjoaa
uuden vaihtoehtoisen mekanismin pakettien säilyttämiseen päivityksen
aikana käyttäen <tt>Pin-Priority</tt>-järjestelmää. Katso ohjesivua
<manref name="apt_preferences" section="5"> ja dokumenttia
<url id="&apt-howto;"> tai pakettia <package>&p-apt-howto;</package>.

<sect1 id="sourcepkgs">Lähdekoodipaketit

<p>
Lähdekoodipaketteja levitetään hakemistossa <file>source</file>, josta
voit joko ladata ne manuaalisesti tai käyttää komentoa
<example>
apt-get source <var>foo</var>
</example>
niiden hakemiseen. (Katso ohjesivulta <manref name="apt-get" section="8">
kuinka tehdä tämä APT:lla.)

<sect1 id="sourcebuild">Binääripakettien rakentaminen lähdekoodipaketeista

<p>Kääntääksesi paketin <tt><var>foo</var></tt> tarvitset kaikki paketit
<file><var>foo_*</var>.dsc</file>, <file><var>foo_*</var>.tar.gz</file>
ja <file><var>foo_*.diff</var>.gz</file>. (Suoraan Debianille tehdyille
paketeille ei ole tiedostoa <tt>.diff.gz</tt>.)

<p>Kun sinulla on ne kaikki, jos paketti <package>dpkg-dev</package> on
asennettuna, komento
<example>
$ dpkg-source -x <var>foo_versio-muutosnumero</var>.dsc
</example>
purkaa paketin hakemistoon <tt><var>foo-versio</var></tt>.

<p>Anna seuraavat komennot paketoidaksesi binääripaketin:
<example>
$ cd foo-versio
$ su -c "apt-get update ; apt-get install fakeroot"
$ dpkg-buildpackage -rfakeroot -us -uc
</example>
Sitten:
<example>
# su -c "dpkg -i ../<var>foo_versio-muut_ark</var>.deb"
</example>
asentaaksesi rakentamasi paketin. Katso <ref id="port">.

<!-- Woody has simpler commands and build-depends -->

<sect1 id="creatingdebs">Uusien Debian-pakettien teko

<p>Tarkat ohjeet uusien pakettien tekemisestä löytyvät dokumentista
<em>New Maintainers' Guide</em>, jonka saat paketista
<package>maint-guide</package> tai sivulta <url id="&maint-guide;"
name="&urlname;">.
<!--
<url id="ftp://ftp.debian.org/debian/doc/package-developer/maint-guide.html.tar.gz">.
-->
<!--
<sect id="pkgtools">Package Management Tools
Once many were moved up here but now moved down
-->

<!--
Rarely used command for Woody, exclude but mention its manual page above.
<sect2 id="dpkg-deb">dpkg-deb
Removed below
-->

<!--
move up contents as a part of APT
<sect2 id="apt-get">apt-get
-->

<!--
Rarely use command for Woody, exclude but mention its manual page above.
<sect2 id="dpkg-split">dpkg-split
removed
-->

<!--
Moved down
<sect1 id="updaterunning">Upgrade running system
Debian claims to be able to update a running program;
  how is this accomplished?
-->

<!--
<sect1 id="whatpackages">How can I tell what packages are already installed
  on a Debian system?
removed dpkg list and status things here
-->

<!-- these information are in debian.sgml and above
<sect1 id="filesearch">How can I find out what package produced a particular
  file?
removed dpkg list and status things here
-->

<sect id="uptodate">Debian-järjestelmän päivittäminen

<p>Yksi Debianin tavoitteista on tarjota sujuva, turvallinen ja
luotettava päivitysprosessi. Pakettienhallintajärjestelmä varoittaa
ylläpitäjää tärkeistä muutoksista ja pyytää joskus ylläpitäjää tekemään
päätöksiä. Kannattaa myös lukea julkistusmuistio, joka toimitetaan
kaikilla Debian-CD:illä ja on luettavissa verkossa sivulla 
<url id="&stable-release;"> tai <url id="&testing-release;">.

<p>Käytännönläheinen opas päivittämiseen löytyy kappaleesta
<ref id="package">. Tässä kappaleessa ainoastaan hahmotellaan prosessi,
alkaen paketointityökaluista.

<sect1 id="dpkg"><prgn>dpkg</prgn>

<p>Tämä on pääasiallinen ohjelma pakettitiedostojen käsittelyyn. Ohjesivu
<manref name="dpkg" section="8"> tarjoaa ohjelman täyden kuvauksen.
<!-- "install dpkg" deleted because it's a required package -->

<p><prgn>dpkg</prgn> mukana tulee muutamia alkeellisia lisäohjelmia.

<list>
<item><prgn>dpkg-deb</prgn>: <tt>.deb</tt>-tiedostojen käsittelyyn
 <manref name="dpkg-deb" section="1">
<item><prgn>dpkg-ftp</prgn>: Vanhempi pakettitiedostojen hakukomento
 <manref name="dpkg-ftp" section="1">
<item><prgn>dpkg-mountable</prgn>: Vanhempi pakettitiedostojen hakukomento
 <manref name="dpkg-mountable" section="1">
<item><prgn>dpkg-split</prgn>: Jakaa suuren paketin pienempiin osiin.
 <manref name="dpkg-split" section="1">
</list>

APT-järjestelmä on korvannut ohjelmat <prgn>dpkg-ftp</prgn> ja
<prgn>dpkg-mountable</prgn>.

<!-- Insert APT and apt-get here: -->
<sect1 id="apt">APT

<p>APT (the Advanced Packaging Tool eli kehittynyt paketointityökalu)
on kehittynyt rajapinta Debianin pakettienhallintajärjestelmään. Se
sisältää useampia ohjelmia, joiden nimet tyypillisesti alkavat "apt-".
<prgn>apt-get</prgn>, <prgn>apt-cache</prgn> ja <prgn>apt-cdrom</prgn>
ovat komentorivityökaluja pakettien hallintaan. Ne toimivat myös
taustaohjelmina toisille työkaluille kuten <prgn>dselect</prgn> ja
<prgn>aptitude</prgn>.

Nykyään <prgn>aptitude</prgn> on suositeltu työkalu järjestelmäylläpitoon.

<p>Saadaksesi lisätietoa asenna paketit <package>apt</package> ja
<package>aptitude</package> ja lue ohjesivut:
<manref name="aptitude" section="8">,
<manref name="apt-get" section="8">,
<manref name="apt-cache" section="8">,
<manref name="apt-cdrom" section="8">,
<manref name="apt.conf" section="5">,
<manref name="sources.list" section="5"> ja
<manref name="apt_preferences" section="5">.

<p>Toinen tietolähde on <url id="&apt-howto;" name="APT HOWTO">.
Sen saa asennettua paketissa <package>apt-howto</package> hakemistoon
<file>&f-apt-howto;</file>.

<p><tt>apt-get upgrade</tt> ja <tt>apt-get dist-upgrade</tt>
hakevat ainoastaan paketit, joiden riippuvuussuhde on "Depends:" ja
jättävät huomioitta riippuvuussuhteet "Recommends:" ja "Suggests:".
Välttääksesi tämän käytä ohjelmaa <prgn>dselect</prgn>.

<!-- removed boring APT info -->

<!-- bump from sect2 to sect1 -->
<sect1 id="dselect-basics"><prgn>dselect</prgn>

<p>Tämä ohjelma on valikkopohjainen käyttöliittymä Debianin
pakettienhallintajärjestelmään. Se on erityisen hyödyllinen asennettaessa
järjestelmää ensimmäistä kertaa ja tehtäessä suuria päivityksiä. Katso
kappaletta <ref id="dselect">.

<p>Saadaksesi lisätietoa lue
<url id="&dselect-beginner;" name="dselect Documentation for Beginners">.

<!-- removed boring dselect info -->

<!-- move this up and make this sect1
<sect2 id="apt">APT
-->
<!-- remove this and mention above in dpkg
<sect2 id="dpkg-ftp">dpkg-ftp
-->
<!-- remove this
<sect2 id="mirror">mirror
-->

<!-- remove this section and mention above in dpkg
<sect2 id="dpkg-mountable">dpkg-mountable
-->

<!--
<sect1 id="upgradesingle">Must I go into single-user mode in order to
  upgrade a package?

<p>No.  Packages can be upgraded in place, even in running systems.
Debian has a <prgn>start-stop-daemon</prgn> program that is invoked to stop,
then restart running process if necessary during a package upgrade.
-->

<sect1 id="updaterunning">Ajossa olevan järjestelmän päivittäminen

<p>Debian-järjestelmän tiedostojärjestelmä tukee tiedostojen korvaamista
toisilla vaikka ne olisivat käytössä. Kun paketti päivitetään, kaikki
pakettiin liittyvät taustaprosessit käynnistetään uudelleen, jos ne on
asetettu ajettavaksi nykyisellä järjestelmän ajotasolla. Debian ei vaadi
siirtymistä yksikäyttäjä-tilaan päivitystä varten.

<sect1 id="savedebs">Ladatut ja pakettivarastossa olevat <tt>.deb</tt>-tiedostot

<p>Jos olet manuaalisesti ladannut pakettitiedostoja levyllesi (mikä ei
ole välttämätöntä, katso ylläolevaa ohjelmien <prgn>dpkg-ftp</prgn>
ja APT kuvausta), voit asennettuasi paketit poistaa lataamasi
<tt>.deb</tt>-tiedostot järjestelmästäsi.

<p>Jos käytät ohjelmaa APT, nämä tiedostot tallennetaan hakemistoon
<file>/var/cache/apt/archives</file>. Voit poistaa ne asennuksen jälkeen
(komennolla <tt>apt-get clean</tt>) tai kopioida ne toisen tietokoneen
<file>/var/cache/apt/archives</file>-hakemistoon välttyäksesi lataamasta
niitä uudelleen seuraavissa asennuksissa.

<sect1 id="keepingalog">Päivitysten kirjanpito

<p><prgn>dpkg</prgn> pitää kirjaa paketeista, jotka on purettu, joille
on määritetty asetukset ja jotka on poistettu tai siivottu, mutta ei
(nykyään) pidä kirjaa näiden toimien lopputuloksista. 

<p>Helpoin tapa kiertää tämä rajoitus on ajaa ohjelmat
<prgn>dpkg</prgn>, <prgn>dselect</prgn>, <prgn>apt-get</prgn>, jne.
ohjelman <manref name="script" section="1"> sisältä.

<sect id="boot">Debianin käynnistysprosessi

<sect1 id="init"><prgn>init</prgn>-ohjelma

<p>Kuten kaikki Unixit, Debian käynnistetään suorittamalla ohjelma
<prgn>init</prgn>. <prgn>init</prgn>-ohjelman asetustiedosto
(<file>/etc/inittab</file>) määrää, että ensimmäisenä suoritetaan skripti
<file>/etc/init.d/rcS</file>.
<p>
Seuraavat tapahtumat riippuvat siitä kumpi paketeista
<package>sysv-rc</package> ja <package>file-rc</package> on asennettuna.
(Paketti <package>file-rc</package> sisältää oman
<file>/etc/init.d/rcS</file>-skriptinsä ja käyttää tiedostoa rc-hakemistoissa
olevien symbolisten linkkien sijaan kontrolloidessaan mitkä ohjelmat
käynnistetään milläkin ajotasolla.)
<p>
Paketin <package>sysv-rc</package> <file>/etc/init.d/rcS</file>-tiedosto
ajaa kaikki hakemiston <file>/etc/rcS.d/</file> skriptit alustaakseen
järjestelmän. Tällöin mm. liitetään ja tarkistetaan
tiedostojärjestelmiä, ladataan moduleita, alustetaan
tietoliikenneyhteydet, asetetaan kellonaika ja niin edelleen. Tämän
jälkeen, yhteensopivuussyistä, se ajaa myös kaikki hakemiston
<file>/etc/rc.boot/</file> skriptit, joiden nimessä ei ole pistettä.
Jälkimmäinen hakemisto on varattu järjestelmän ylläpitäjän käyttöön,
mutta sen käyttöä ei suositella. Lisätietoa saat Debian Policy Manualin
kappaleista <ref id="init-hints"> ja
<url id="&sysvinit;" name="System run levels and init.d scripts">.
<p>
Debian ei käytä BSD-tyylistä <tt>rc.local</tt>-hakemistoa.

<sect1 id="runlevels">Järjestelmän ajotasot

<p>Käynnistysprosessin jälkeen <prgn>init</prgn> käynnistää kaikki
oletusajotasolla ajettavaksi määritellyt palvelut. Oletusajotaso
määritetään tiedoston <file>/etc/inittab</file> rivillä <tt>id</tt>.
Debianin oletuksissa <tt>id=2</tt>.
<p>
Debianissa käytetään seuraavia ajotasoja:
<list compact>
  <item>1 (yksikäyttäjä-tila),
  <item>2-5 (monikäyttäjä-tilat), and
  <item>0 (sammuttaa järjestelmän),
  <item>6 (käynnistää järjestelmän uudelleen).
</list>
Myös ajotasoja 7, 8 ja 9 voidaan käyttää, mutta niiden rc-hakemistoihin
ei automaattisesti kopioida skriptejä, kun paketteja asennetaan.
<p>
Ajotasoja vaihdetaan ohjelmalla <prgn>telinit</prgn>.
<p>
Vaihdettaessa jollekin ajotasolle, kaikki skriptit hakemistossa
<file>/etc/rc<var>ajotaso</var>.d/</file> suoritetaan.
Skriptin nimen ensimmäinen kirjain kertoo <strong>tavan</strong>,
jolla skripti ajetaan. Kirjaimella <tt>K</tt> alkaville skripteille
annetaan komentoriviargumentti <tt>stop</tt> (pysäytä) ja kirjaimella
<tt>S</tt> alkaville skripteille argumentti <tt>start</tt> (käynnistä).
Skriptit ajetaan aakkosjärjestyksessä. Tästä johtuen pysäytysskriptit
ajetaan ennen käynnistysskriptejä ja kirjaimien <tt>K</tt> ja <tt>S</tt>
perässä olevat kaksi numeroa määräävät ajojärjestyksen.
<p>
Hakemistossa <file>/etc/rc<var>ajotaso</var>.d</file> olevat skriptit
ovat oikeasti vain symbolisia linkkejä hakemiston
<file>/etc/init.d/</file> skripteihin. Nämä skriptit hyväksyvät myös
argumentit "restart" (käynnistä uudelleen) ja "force-reload" (pakota
uudelleenlataus). Näitä argumentteja voidaan käyttää järjestelmän
käynnistyksen jälkeen, jos taustaohjelma tarvitsee käynnistää
uudelleen tai pakottaa lukemaan asetustiedostonsa uudelleen.
<p>Esimerkiksi:
<example>
# /etc/init.d/exim4 force-reload
</example>

<sect1 id="custombootscripts">Ajotasojen muokkaaminen
<p>
Ajotasojen muokkaaminen on vaativa järjestelmän ylläpitäjän tehtävä.
Seuraavat ohjeet pätevät suurimmalle osalle palveluita.
<p>
Käynnistääksesi palvelun <var>palvelu</var> ajotasolla <var>R</var>,
luo symbolinen linkki
<file>/etc/rc<var>R</var>.d/S<var>xy</var><var>palvelu</var></file>,
joka osoittaa tiedostoon <file>../init.d/<var>palvelu</var></file>.
Järjestysnumeron <var>xy</var> tulisi olla sama kuin palvelulle
pakettia asennettaessa annettu numero.
<p>
Pysäyttääksesi palvelun, nimeä symbolinen linkki siten, että sen
nimi alkaa kirjaimella <tt>K</tt> <tt>S</tt>:n sijaan ja sen
järjestysnumero on 100 miinus <var>xy</var>.
<p>
Näiden muutosten tekeminen on helpointa ajotasoeditorilla kuten 
<prgn>sysv-rc-conf</prgn> tai <prgn>ksysv</prgn>.
<p>
On mahdollista poistaa palvelun symbolinen <tt>S</tt>-linkki
uudelleennimeämisen sijaan. Tällöin palvelua ei pysäytetä vaan se jää
<package>sysv-rc</package> init-järjestelmän mielestä "kelluvaan"
tilaan. Kun ajotasoa vaihdetaan, kyseistä palvelua ei käynnistetä eikä
pysäytetä vaan se jätetään siihen tilaan, jossa se oli.
Huomaa kuitenkin, että riippumatta palvelun tilasta kelluvassa tilassa
oleva palvelu käynnistetään, jos sen asentama paketti päivitetään.
Tämä on tunnettu nykyisen Debian-järjestelmän puute. Huomaa myös, että
ajotasojen 0 ja 6 <tt>K</tt>-linkit tulisi säilyttää. Jos poistat kaikki
palveluun liittyvät symboliset linkit, niin palvelun paketin
päivittäminen palauttaa linkit oletustasoille.
<p>
Hakemiston <file>/etc/rcS.d/</file> symbolisia linkkejä
<strong>ei</strong> suositella muutettavaksi mitenkään.

<sect id="diverse">Monimuotoisuuden tukeminen
<p>
Debian tarjoaa järjestelmän ylläpitäjälle useita tapoja toteuttaa
toiveitaan rikkomatta järjestelmää.
<list>
<item><prgn>dpkg-divert</prgn>, katso <ref id="dpkg-divert">.
<item><prgn>equivs</prgn>, katso <ref id="equivs">.
<item><prgn>update-alternative</prgn>, katso <ref id="alternatives">.
<item><prgn>make-kpkg</prgn> voi käyttää monia alkulataimia.
      Katso <manref name="make-kpkg" section="1"> and <ref id="kernel-debian">.
</list>
Kaikki hakemistopuussa <file>/usr/local/</file> olevat tiedostot kuuluvat
järjestelmän ylläpitäjälle eikä &debian; koske niihin. Useimmat hakemiston
<file>/etc/</file> alla olevat tiedostot ovat <tt>asetustiedostoja</tt>,
eikä &debian; muokkaa niitä päivityksen yhteydessä ellei ylläpitäjä
nimenomaan tätä pyydä.

<sect id="i18n">Kansainvälistäminen
<p>
&debian;-järjestelmä tukee useiden eri kielien merkki- ja
kirjoitusjärjestelmiä sekä komentorivillä että X:ssä. Useita dokumentteja,
ohjesivuja ja järjestelmäviestejä on käännetty yhä useammalle kielelle.
Asennuksen aikana Debian pyytää käyttäjää valitsemaan asennuskielen (ja
joskus myös kielen variantin).
<p>
Jos käyttämäsi järjestelmä ei tue kaikki kielen ominaisuuksia, joita
tarvitset, tai jos haluat vaihtaa kieltä tai asentaa uuden kieltäsi
tukevan näppäimistön, katso kappaletta <ref id="l10n">.

<sect id="kernel-details">Debian ja ydin (kernel)
<p>
Katso <ref id="kernel">.

<sect1 id="non-debian-kernel">Ytimen kääntäminen ei-Debian lähdekoodista

<p><!--Yes.  But you have-->
Debian menettelee seuraavasti otsaketietojen kanssa.

<p>Debianin C-kirjastot on käännetty käyttäen uusimman
<strong>stable</strong>-jakelun <strong>ytimen</strong> otsaketietoja.

<p>Esimerkiksi Debian-1.2 -julkaisu käytti otsaketietoja, joiden
versionumero oli 5.4.13. Tämä käytäntö poikkeaa kaikista Linux
FTP-sivustoilla levitetyistä lähdekoodipaketeista, jotka käyttävät
vielä uudempia versioita otsaketiedoista. Ytimen lähdekoodin mukana
levitetyt ytimen otsaketiedot löytyvät hakemistosta
<file>/usr/include/linux/include/</file>.

<p>Jos on tarpeen kääntää ohjelma uudempien ytimen otsaketietojen kanssa
kuin mitä paketti <package>libc6-dev</package> tarjoaa, on
käännöskomentoon lisättävä valitsin <tt>-I/usr/src/linux/include/</tt>.
Tämä on ollut tarpeen esimerkiksi paketoitaessa automaattista
liittäjäpalvelua (automounter daemon, <package>amd</package>).
Kun uusissa ytimissä muutettiin NFS:n sisäistä käsittelyä, ohjelma
<prgn>amd</prgn> tarvitsisi tätä tietoa. Tämä vaati uusimpien
ytimen otsikkotietojen käyttöä.

<sect1 id="customkernel">Työkaluja muokatun kernelin kääntämiseen

<p>Käyttäjien, jotka haluavat (tai joiden täytyy) kääntää itse muokattu
ydin, suositellaan lataamaan paketti <package>kernel-package</package>.
Paketti sisältää skriptejä ydinpaketin tekemiseen ja mahdollistaa
Debianin ytimen binäärikuvan sisältävän paketin rakentamisen pelkästään
ajamalla komennon
<example>
# make-kpkg kernel_image
</example>
ytimen lähdekoodin sisältävän hakemiston juuressa.
Ohjeita saat ajamalla komennon
<example>
# make-kpkg --help
</example>
ja ohjesivuilta <manref name="make-kpkg" section="1">
ja <ref id="kernel">.

<p>Käyttäjien tarvitsee erikseen ladata viimeisimmän (tai haluamansa)
ytimen lähdekoodi joltain Linux-arkistosivulta, ellei paketti
kernel-source-<var>versio</var> ole saatavilla (missä <var>versio</var>
on ytimen versio). Debianin <file>initrd</file> latausskripti vaatii
erityisen ytimen muutostiedoston nimeltä <prgn>initrd</prgn>.
Katso <url id="&bug-initrd;">.

<p>Yksityiskohtaiset ohjeet paketin <package>kernel-package</package>
käytöstä löytyvät tiedostosta
<file>/usr/share/doc/kernel-package/README.gz</file>.

<!-- TODO: check out a new source of details, this README isn't too useful,
  I'm told (joy) -->

<sect1 id="modules">Erityishuomioita modulien käytöstä

<p>Debianin paketti <package>modconf</package> tarjoaa komentoriviskriptin,
(<file>/usr/sbin/modconf</file>) jonka avulla voidaan muokata modulien
asetuksia. Skripti tuottaa valikkopohjaisen käyttöliittymän järjestelmän
ladattavien laiteajurien valitsemiseen. Valintojen pohjalta ohjelma
muokkaa tiedostoja <file>/etc/modules.conf</file> (joka listaa aliakset
ja muut argumentit, joita käytetään modulien yhteydessä),
<file>/etc/modules</file> (joka listaa käynnistyksen yhteydessä ladattavat
modulit) ja hakemiston <file>/etc/modutils/</file> tiedostoja.

<p>(Uusien) muokattujen kernelien rakentamista helpottavien
<file>Configure.help</file>-tiedostojen tapaan, paketti
<package>modconf</package> asentaa ohjetiedostoja (hakemistoon
<file>/usr/share/modconf/</file>), jotka sisältävät yksityiskohtaista
tiedota kunkin modulin sopivista argumenteista. Katso esimerkkejä
kappaleesta <ref id="kernel-modules">.

<sect1 id="removeoldkernel">Vanhan ydinpaketin poistaminen

<p><prgn>kernel-image-<var>NNN</var>.prerm</prgn>-skripti tarkistaa
yritätkö poistaa samaa ydintä, jota juuri ajat. Niinpä voit turvallisesti
poistaa tarpeettomat ydinpaketit komennolla:

<example>
# dpkg --purge --force-remove-essential kernel-image-<var>NNN</var>
</example>

(Korvaa <var>NNN</var> ytimen versio- ja muutosnumeroilla.)
</sect>
