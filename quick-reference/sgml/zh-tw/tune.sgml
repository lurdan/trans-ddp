<!-- CVS revision of this document "# Revision is not used here.#"  -->
<!-- CVS revision of original english document "1.176" -->
<chapt id="tune"> &debian; 系統調整
<p>
這一章節主要是說明如何在指令介面下設定系統組態。
<ref id="install">.  
<p>
如果您關心系統安全性，請閱讀 <url id="&securing-debian-howto;" name="Securing Debian Manual"> 來建構系統的安全性，該文件也可以安裝 <package>&p-securing-debian-howto;</package> 套件取得。

<sect id="init-hints"> 初始化系統的提示
<p>
&debian; 使用 System V 的 init 系統與流程，先閱讀 <ref id="init"> 了解大概內容。

<sect1 id="init-defaults">自定 init 命令稿
<p>
最簡單控管 init script 的方法是設定在<file>/etc/default</file>下的檔案中的系統環境變數。
<footnote>
<file>/etc/default/</file>下的檔案只有包含系統環境變數。當 init script 執行時會讀取對應的檔案來改變 init script 中預設的變數。請參閱 <url id="&etc-defaults;" name="peculiar"> 來了解 &debian; 選擇該目錄的原因。<file>/etc/default/</file>同等於 Red Hat 等系統中的 <file>/etc/sysconfig</file>。
</footnote>
舉例來說，<file>/etc/default/hotplug</file>就能控制<file>/etc/init.d/hotplug</file>的行為。可以自行編輯 motd，sulogin 等服務命令稿並放置在 <file>/etc/init.d/rcS</file> 讓系統開機時即可啟動。

<sect1 id="syslogd">設定系統登入日誌( system logging )
<p>
系統日誌是由 syslogd 這支程式控制，編輯 <file>/etc/syslog.conf</file> 設定日誌輸出型態。
透過 <package>colorize</package> 這個套件可以讓日誌檔更容易辨識。
查看 <manref name="syslogd" section="8"> 和 <manref name="syslog.conf" section="5"> 可以得到更多的訊息。
</sect1>

<sect1 id="hdtune">硬體最佳化(Optimizing hardware)
<p>
&debian; 保留了部份硬體最佳化的設定，系統管理者可以在安裝之後進行設定。

<list>
<item><package>hdparm</package>
 <list compact>
<item>硬碟讀寫最佳化軟體，效果十分顯著。
<item>請小心使用該軟體，最好先閱讀過 <manref name="hdparm" section="8"> 再嚐試。
<item><tt>hdparm -tT <var>/dev/hda</var></tt> ：測試 /dev/hda 的讀寫速度。
<item><tt>hdparm -q -c3 -d1 -u1 -m16 <var>/dev/hda</var></tt>： 加速新型的硬碟機。( 有可能照成錯誤 )
 </list>

<item><package>setcd</package>
 <list compact>
<item>光碟機讀寫最佳化軟體。.
<item><tt>setcd -x <var>2</var></tt>： 設定讀取速度為 <var>2</var>.倍速。
<item>閱讀 <manref name="setcd" section="1"> 可以得到更多資訊。
 </list>

<item><package>setserial</package>
 <list compact>
<item>串列埠管理工具集。
 </list>

<item><package>scsitools</package>
 <list compact>
<item>SCSI 裝置管理工具集。
 </list>

<item><package>memtest86</package>
 <list compact>
<item>記憶體檢測軟體。
 </list>

<item><package>hwtools</package>
 <list compact>
<item>低階硬體管理程式的集合。
  <list compact>
   <item><prgn>irqtune</prgn>: 改變硬體的 IRQ 優先權，使快速的裝置或服務可以擁有較高的優先權，比如加速串列埠數據機的產量達 3 倍等。

   <item><prgn>scanport</prgn>: 掃描 ISA 裝置從 0x100 到 0x3ff 的輸入輸出位置。
   <item><prgn>inb</prgn>: 從輸出輸入埠傾印資料並轉換成二進制和十六進制。
  </list>

 </list>

<item><package>schedutils</package>
 <list compact>
<item>Linux 程序排程工具
<item>包括了 <prgn>taskset</prgn>, <prgn>irqset</prgn>, <prgn>lsrt</prgn> 以及 <prgn>rt</prgn> 。
<item>另外還有 <prgn>nice</prgn> and <prgn>renice</prgn>(不包括)，可以全盤控制程序的排程參數。
 </list>
</list>
<p>
掛載檔案系統時加上 <tt>noatime</tt> 這個參數能提昇檔案讀寫的效率。
閱讀 <manref name="fstab" section="5"> 以及 <manref name="mount" section="8">。
<p>
部份的硬體裝置可以藉由 Linux Kernel 設定 proc 檔案系統來直接設定及最佳化。
閱讀 <ref id="proc-sys">。
<p>
Debian 納入了許多設定硬體特性的軟體。大部分的軟體都是針對筆記型電腦設計。底下是 Debian 中比較有趣的軟體：
<list compact>
<item><package>tpconfig</package> - 觸碰版設定軟體
<item><package>apmd</package> - 進階電源管理程式
<item><package>acpi</package> - 檢視 ACPI 裝置資訊的工具
<item><package>acpid</package> - 使用 ACPI 的工具集
<item><package>lphdisk</package> - 提供 Phoenix NoteBIOS 的硬體磁區休眠功能
<item><package>sleepd</package> - 設定筆記型電腦休眠狀態的軟體
<item><package>noflushd</package> - 讓閒置的硬碟可以停止運轉以節省電源
<item><package>big-cursor</package> - 提供 X 更大的滑鼠指標
<item><package>acme</package> - 啟動筆記型電腦上的多媒體功能鍵
<item><package>tpctl</package> - IBM ThinkPad 硬體裝置設定工具
<item><package>mwavem</package> - Mwave/ACP 數據機支援
<item><package>toshset</package> - Toshiba 筆記型電腦的硬體設定程式
<item><package>toshutils</package> - Toshiba 筆記型電腦相關工具
<item><package>sjog</package> - 支援 Sony Vaio 筆記型電腦上的 "Jog Dial" 的軟體
<item><package>spicctrl</package> - 調整 Sony Vaio 液晶螢幕亮度的軟體
</list>
ACPI 是一個全新的架構是且比 APM 要來的新且完整。
<p>
部份的套件需要特定的 Kernel 模組且已經納入最新的 Kernel Source 之中。如果硬體依然不支援，只好自行抓取修正檔並重新編譯 Kernel。

<sect>存取限制 ( Restricting access )

<sect1 id="loginctrl">利用 PAM 來控制登入程序
<p>
PAM (Pluggable Authentication Modules) 允許管理者控管使用者登入的方式。 
<example>
/etc/pam.d/*             # PAM 控制檔案的位置
/etc/pam.d/login         # PAM 控制登入的設定檔
/etc/security/*          # PAM 模組參數的設定檔
/etc/securetty           # 限制 root 從 console 模式下登入的設定檔
/etc/login.defs          # 登入系統之後的環境變數設定檔
</example>
<p>
如果想允許空白密碼的使用者登入系統，可以編輯 <file>/etc/pam.d/login</file> 並加入以下的訊息，此動作的風險很大，請管理者斟酌。
<example>
#auth       required   pam_unix.so nullok
auth       required   pam_permit.so
</example>
<prgn>xdm</prgn>, <prgn>gdm</prgn>...等軟體透過這樣的步驟也能允許空白密碼的使用者登入。

<p>
另一方面，使用 <package>cracklib2</package> 可以加強密碼安全機制，設定 <file>/etc/pam.d/passwd</file> 並加入以下的敘述。
<example>
password required       pam_cracklib.so retry=3 minlen=6 difok=3
</example>
使用 <prgn>passwd</prgn> 並加入 <tt>-e</tt> 這個參數會強迫使用者在下一次登入時必須修改密碼。
閱讀 <manref name="passwd" section="1"> 以取得更多的資訊。
<p>
在 Bash shell 的環境中，可以執行 <tt>ulimit -u 1000</tt> 來設定執行程序的最大值，或者直接編輯 <file>/etc/security/limits.conf</file>。
在該檔案中可以找到類似 <tt>core</tt> 的參數，試著編輯它即可。
<prgn>PATH</prgn> 的設定可以藉由 <file>/etc/login.defs</file> 的內容來初始化。

<p>
PAM 的文件被包裝在 <package>libpam-doc</package> 之中。在這個套件包裝的文件有：<em>Linux-PAM System Administrator's Guide</em>，涵蓋了如何設定 PAM 以及相關模組的說明。<em>The Linux-PAM Application Developers' Guide</em> 以及 <em>The Linux-PAM Module Writers' Guide</em>。
</sect1>

<sect1 id="wheel">"為何 GNU <prgn>su</prgn> 不支援 <tt>wheel</tt> 群組"
<p>
這是 Richard M. Stallman 的慣用語，可以在舊式的 <tt>info su</tt> 頁面底下找到。請不要擔心，目前 Debian 中的 <prgn>su</prgn> 程式是使用 PAM的，所以編輯 <file>/etc/pam.d/su</file> 並加入 <prgn>pam_wheel.so</prgn> 的敘述就可以限定那些使用者可以執行 <prgn>su</prgn>。底下以  Debian 中的 <tt>adm</tt> 群組當作範例；如何實現 BSD 中的 <tt>wheel</tt> 群組直接執行 <prgn>su</prgn> 且不需輸入密碼就能切換成 root。
<example>
# anti-RMS configuration in /etc/pam.d/su
auth       required   pam_wheel.so group=adm

# Wheel members to be able to su without a password
auth       sufficient pam_wheel.so trust group=adm
</example>

<sect1>Purposes of standard groups
<p>
比較特殊的群組：
<list compact>
<item>如果 <prgn>pam_wheel.so</prgn> 不加上 <tt>group=</tt> 參數指定群組名稱，則 <tt>root</tt> 群組便是 <prgn>su</prgn> 所定義的預設 wheel 群組。 
<item><tt>adm</tt> 群組可以讀取系統紀錄檔。 
<item><tt>cdrom</tt> 群組可以對光碟機進行存取的動作。
<item><tt>floppy</tt> 群組可以讀寫控制軟碟槽。
<item><tt>audio</tt> 群組可以讀寫音效裝置。
<item><tt>src</tt> 群組擁有管理軟體源碼的權限，比如 <file>/usr/src</file> 下的檔案存取。
<item><tt>staff</tt> 針對新上手的系統管理者或是系統諮詢帳號所規劃的群組，該群組的使用者擁有 <file>/usr/local</file> 以及 <file>/home</file> 的讀寫權。
</list>
<p>
想要了解更多的資料，請閱讀 <url id="&securing-debian-howto;" name="Securing Debian Manual"> 的 "FAQ"。Debian Woody 可以安裝 <package>&p-securing-debian-howto;</package> 套件取得該文件。<package>&p-base-passwd;</package> (>3.4.6) 更納入了權限的列表。

<sect1 id="sudo">更安全的工作環境 &ndash; <prgn>sudo</prgn>
<p>
對我而言，<prgn>sudo</prgn> 絕大部分是防止我做出愚笨的行為，使用 <prgn>sudo</prgn> 會是比直接切換成 root 更好的辦法。
<p>
安裝 <prgn>sudo</prgn> 之後，編輯好 <file><url id="&examples;" name="/etc/sudoers"></file> 就能啟動。順便檢查 <file>&dochome;sudo/OPTIONS</file> 中的 <tt>sudo</tt> 群組參數。

<p>
這個例子是說明 "staff" 群組透過 <prgn>sudo</prgn> 的設定之後便能以 root 身份執行任何程式；同樣地，"src" 群組透過 <prgn>sudo</prgn> 設定之後便能以 root 身份執行部份程式。

<p>
使用 <prgn>sudo</prgn> 的好處在於一般 user 只要輸入自己的密碼就能登入並被系統監視。
且能提供部份權限給予新上手的管理者練習。舉例來說：
<example>
$ sudo chown -R <var>myself</var>:<var>mygrp</var> .
</example>
<p>
如果你擁有 root 密碼，那麼你能以 root 權限來執行任何命令：
<example>
$ su -c "shutdown -h now"
Password:
</example>
(我知道我應該要加強管理者帳號的 <prgn>sudo</prgn> 權限。但這是我自家使用的伺服器，所以不用去煩惱這個問題。)
<p>
安裝 <package>super</package> 這個套件能夠讓一般使用者以 root 權限執行特定指令。
</sect1>
    
<sect1 id="tcpd">服務的存取限制
<p>
<em>super-server</em>, <prgn>inetd</prgn>, 在開機時被 <file>/etc/rc2.d/S20inetd</file> (for RUNLEVEL=2)呼叫並啟動，而這個檔案是 <file>/etc/init.d/inetd</file> 的一個 soft link。基本上，<prgn>inetd</prgn> 能啟動和控制其他的服務，減低系統負載度。
<p>
當一個服務對 <prgn>inetd</prgn> 送出需求時，它的通訊協定與服務可以從 <file>/etc/protocols</file> 以及 <file>/etc/services</file> 中找到，然後 <prgn>inetd</prgn> 便會搜尋 <file>/etc/inetd.conf</file> 找到適合的網際網路服務來對應，如果是 Sun-RPC 類型的服務，便會搜尋 <file>/etc/rpc.conf</file> 這一個設定檔。 
<p>
由於系統安全上的考量，請取消 <file>/etc/inetd.conf</file> 中不必要或是不使用的服務。Sun-RPC 服務需要啟動 NFS 以及其他 RPC 為主的程式。
<p>
有些時候，<prgn>inetd</prgn> 並不會直接啟動，而是透過 <prgn>tcpd</prgn> 這個 TCP/IP 服務控制程式並以 <file>/etc/inetd.conf</file> 中已定義的伺服器服務名稱來啟動。這個情況下，<prgn>tcpd</prgn> 在登入以及請求時必須使用 <file>/etc/hosts.deny</file> 以及 <file>/etc/hosts.allow</file> 進行附加的檢查，然後在執行相對應的服務程序。
<p>
如果您在新版的 &debian 上無法進行遠端登入，請將 <file>/etc/hosts.deny</file> 中的 "ALL: PARANOID" 給註解掉。
<p>
想要得知更多的資訊，請閱讀
<manref name="inetd" section="8">,  
<manref name="inetd.conf" section="5">, 
<manref name="protocols" section="5">,  
<manref name="services" section="5">,  
<manref name="tcpd" section="8">,  
<manref name="hosts_access" section="5">, 以及
<manref name="hosts_options" section="5">. 
<p>
有關 Sun-RPC 更多的訊息，請參閱
<manref name="rpcinfo" section="8">, 
<manref name="portmap" section="8">, 以及
<file>&f-portmap;</file>.

<sect1 id="ldap">集中式的認證功能 &ndash; LDAP
<p>
請使用 Use Lightweight Directory Access Protocol (LDAP)。
請參考：
<list compact>
<item><url id="&openldaphome;" name="OpenLDAP">
<item>OpenLDAP Admin Guide in the <package>openldap-guide</package> 套件
<item>LDP: <url id="&ldap-linux-howto;" name="LDAP Linux HOWTO">
<item>LDP: <url id="&ldap-implementation-howto;" name="LDAP Implementation HOWTO">
<item><url id="&ldap-use1;" name="OpenLDAP, extensive use reports">
<item><url id="&ldap-use2;" name="Open LDAP with Courier IMAP and Postfix">
</list>
</sect>


<sect id="cdrw">燒錄器
<p>
ATAPI/IDE 介面的燒錄器是越來越流行了。對於系統備份或是文件容量 &lt 640MB 的家用戶來說可是不錯的選擇。閱讀 LDP <url id="&cd-writing-howto;" name="CD-Writing-HOWTO"> 能夠得到更進階的資訊喔。

<sect1>簡介
<p>
首先，對於光碟片來說，燒錄器將資料寫入光碟片之後，已經無法回覆光碟上的資料。如果預算不是問題，建議直接購買 SCSI 介面的燒錄器來取代 ATAPI/IDE 介面的。如果要連接 IDE 裝置，請使用 PCI 匯流排(例如，在主機板上)而不要使用 ISA 匯流排( SB16 音效卡就是使用它)
<p>
如果您的燒錄器是 IDE 介面且 Kernel 為 2.2 或是 2.4 時，則需要 IDE-SCSI 來驅動燒錄功能。所以必須使用 SCSI 泛型驅動程式。底下有兩種方法可以達成上述功能，假設使用的是較新版本的 Kernel(如 2001 年三月的版本)。
<p>
Kernel 2.6 能使用原本的 IDE 驅動程式來取代 IDE-SCSI 並直接使用 <file>/dev/hd<var>x</var></file> 來存取 CD-RW 裝置。搭配 DMA 會更好。
</sect1>

<sect1>方法一：modules + <prgn>lilo</prgn>
<p>
如果您使用的是 Debian 所包裝的 kernel-image，請在 <file>/etc/lilo.conf</file> 中加入以下的字串。如果有多個選項請用空白分開：
<example>
append="hd<var>x</var>=ide-scsi ignore=hd<var>x</var>"
</example>
燒錄器的裝置代號標示法為 <tt>hd<var>x</var></tt>，其中的 <var>x</var> 代表以下的任一種硬體裝置：
<example>
hda          for a master on the first IDE port
hdb          for a slave on the first IDE port
hdc          for a master on the second IDE port
hdd          for a slave on the second IDE port
hde ... hdh  for a drive on an external IDE port or ATA66/100 IDE port
</example>
完成上述設定之後，以 root 權限執行以下的命令：
<example>
# lilo
# shutdown -h now
</example>
</sect1>


<sect1>方法二：recompile the kernel
<p>
Debian 使用 <prgn>make-kpkg</prgn> 來產生 kernel image。執行 <prgn>make-kpkg</prgn> 並加入 <tt>--append_to_version</tt> 的參數能夠建立多種 kernel images。請參閱 <ref id="kernel">。
<p>
執行 <tt>make menuconfig</tt> 加入底下的 kernel 參數與設定：
<list>
<item>bzImage
<item>Exclude the IDE CD driver (not a must, but simpler to do this)
<item>Compile in ide-scsi and sg, or make them modules
</list>
</sect1>

<sect1>設定步驟
<p>
以下的步驟可讓系統在開機時啟動燒錄器：
<example>
# echo ide-scsi &gt;&gt;/etc/modules
# echo sg       &gt;&gt;/etc/modules
# cd /dev; ln -sf scd0 cdrom
</example>
手動啟動可以這樣做：
<example>
# modprobe ide-scsi
# modprobe sg
</example>
重新開機之後，您可以用下列方式檢查：
<example>
$ dmesg|less
# apt-get install cdrecord
# cdrecord -scanbus
</example>
<p>
[Per Warren Dodge] 如果系統同時存在 CD-ROM 以及 CD-R/RW 的話，有時會造成 <tt>ide-scsi</tt> 和 <tt>ide-cd</tt> 的衝突。試著增加底下的設定到 <file>/etc/modutils/aliases</file> 並執行 <prgn>update-modules</prgn> 和重新開機：
<example>
pre-install      ide-scsi      modprobe ide-cd
</example>
這會使得 IDE 驅動程式比 <tt>ide-scsi</tt>  更早載入到核心。<tt>ide-cd</tt> 管理所有的 ATAPI CD-ROM&mdash;被指明忽略的裝置除外。剩下的裝置才由 <tt>ide-scsi</tt> 來控制。
</sect1>

<sect1>光碟映像檔 (可開機)
<p>
如何產生一個 <file>target-directory/</file> 下所有資料的光碟映像檔：<file>cd-image.raw</file>
(可開機, Joliet TRANS.TBL-enabled format; 如果不需要光碟開機，拿掉 <tt>-b</tt> 和 <tt>-c</tt> 參數)？先將一片開機磁片放入軟碟機中並執行
<example>
# dd if=<var>/dev/fd0</var> <var>target-directory/boot.img</var> 
# mkisofs -r -V <var>volume_id</var> -b <var>boot.img</var> -c <var>bootcatalog</var> -J -T \
        -o <var>cd-image.raw</var> <var>target_directory/</var>
</example>
<p>
另一個方法是產生一個開機 DOS 映像檔。假設一個開機片映像檔放在 <file><var>boot.img</var></file> 之下，則當軟碟開機時，CD-ROM 也會被驅動。您可以藉由 freeDOS 來達成這些動作。
<p>
光碟映像檔可以當成 loop 裝置來掛載。
<example>
# mount -t iso9660 -o ro,loop <var>cd-image.raw</var> /cdrom
# cd /cdrom
# mc
# umount /cdrom
</example>
</sect1>

<sect1>寫錄到燒錄機上(R, RW)：
<p>
先測試看看 (假設燒錄速度為兩倍)
<example>
# nice --10 cdrecord -dummy speed=2 dev=0,0 <var>disk.img</var>
</example>
如果無誤，則燒錄到 CD-R 只需執行以下指令
<example>
# nice --10 cdrecord -v -eject speed=2 dev=0,0 <var>disk.img</var>
</example>
或是燒錄到 CD-RW 的片子上
<example>
# nice --10 cdrecord -v -eject blank=fast speed=2 dev=0,0 <var>disk.img</var>
</example>
對於某些 CD-RW 來說，陸續的指令會好
<example>
# nice --10 cdrecord -v blank=all speed=2 dev=0,0 <var>disk.img</var>
</example>
接續如下
<example>
# nice --10 cdrecord -v -eject speed=2 dev=0,0 <var>disk.img</var>
</example>
為了預防清除 CD-RW 光碟片時出現 SCSI timeouts，則以上兩個步驟是必須的。而 <prgn>nice</prgn> 的值需要特別注意。
</sect1>

<sect1>產生一個光碟映像檔
<p>
有些版權光碟具有防拷的保護使得在使用 <prgn>dd</prgn> 時無法正確拷貝 ( Windows 98 便是其中之一 )。
您可以試用 <prgn>readcd</prgn> 這個指令來拷貝，<prgn>readcd</prgn> 包含在 <package>cdrecord</package> 套件之中。利用該軟體來複製光碟大綱以產生映像檔。如果是資料光碟，請先掛載它，並執行 <prgn>df</prgn> 來查詢光碟大小。將得到的 blocks (1 block = 1024 bytes) 數目除以 2 來取得 sector 數目 (1 sector = 2048)。
執行 <prgn>readcd</prgn> 並加入以下參數來建立映像檔並燒錄到 CD-R/RW。
<example>
# readcd dev=<var>target</var>,<var>lun</var>,<var>scsibusno</var> # select function 11
</example> 
大部分來說，只要將以上三個參數皆設為 0 就可以了。通常 <prgn>readcd</prgn> 所檢查出來的 sectors 數目都會過多！所以改用掛載時所產生的 block，sector 數目會比較好。
<p>
<prgn>dd</prgn> 對於光碟複製上可能會有些小問題。第一次執行 <prgn>dd</prgn> 時可能會產生錯誤訊息且映像檔會失去最末端的資料。第二次執行 <prgn>dd</prgn> 時如果沒指定大小，可能會產生過大的映像檔，當然，這些過多的資料都是無用的。目前解決的辦法是在執行第二次 <prgn>dd</prgn> 時指定正確的大小，第一次有錯誤時也不要退出光碟。假設由 <prgn>df</prgn> 查出來的大小為 <tt>46301184</tt> blocks，則執行以下指令兩次來取得正確的映像檔大小。(以我的經驗來說) 
<example>
# dd if=/dev/cdrom of=cd.img bs=2048 count=$((46301184/2))
</example>
</sect1>

<sect1>Debian 光碟映像檔
<p>
您可以在 <url id="&debian-cd;" name="Debian CD site"> 取得最新的 &debian; 光碟訊息。
<p>
如果您有高速網路，則可以考慮網路安裝：
<list compact>
<item>部份 <url id="&debian-floppyinst;" name="floppy images">.
<item>一個 <url id="&debian-netinst;" name="minimal bootable CD image">.
</list>
<p>
如果您的網路不夠快，則可以考慮從 <url id="&debian-venders;" name="CD vendor"> 來購買 &debian; 光碟。
<p>
除非您是映像檔測試者，否者請不要浪費頻寬來下載光碟映像檔(即使是使用 jigdo)。
<p>
另一個值得注意的光碟映像檔為 <url id="&knoppix;" 
name="KNOPPIX - Live Linux Filesystem On CD">。
您可以在光碟開機之後馬上擁有 &debian; 系統而不需安裝到硬碟內。

<!-- old document section
$ export CVSROOT=anonymous@cvs.debian.org:/cvs/debian-boot
$ cvs co debian-cd
</example>
Following is a summary of CD image creation. 
<example>
# apt-get install debian-cd
# cd /etc/debian-cd
# vim CONF.sh
$ . CONF.sh
$ make distclean
$ make status
$ make list COMPLETE=1 SIZELIMIT1=555000000 SRCSIZELIMIT=665000000
$ make official_images
 or if you want only binary images :
$ make bin-official_images
-->
</sect1>

<sect1>備份您的資料到 CD-R
<p>
如何備份重要的資料到 CD-R 呢？您可以採用備份 script <file><url id="&examples;" name='"backup"'></file>。也請留意 <ref id="archiving"> 以及 <ref id="diff-backup">。
</sect1>

<sect1>拷貝音樂光碟
<p>
我沒有測試過喔：
<example>
# apt-get install cdrecord cdparanoia
# cdparanoia -s -B
# cdrecord dev=0,0,0 speed=2 -v -dao -eject defpregap=1 -audio *.wav
</example>
或是
<example>
# apt-get install cdrdao #disk at once
# cdrdao read-cd --device /dev/cdrom --paranoia-mode 3 my_cd # read cd
# cdrdao write --device /dev/cdrom --speed 8 my_cd    # write a new CD
</example>
<prgn>cdrdao</prgn> 能夠完整複製光碟(沒有音軌空隙，等...)。
</sect1>

<sect1 id="dvd">燒錄 DVD-R，DVD-RW 和 DVD+RW
<p>
燒錄 DVD 光碟有兩種方式：
<list compact>
<item>使用 <package>growisofs</package> 並搭配 <package>mkisofs</package>。
<item>請依照 <file>&f-readmedvd;</file> 的說明重新編譯 <package>cdrecord</package> 並加入 dvd 支援來產生本地端建立的套件。
</list>
</sect1>
</sect>

<sect id="x">X 
<p>
X Window 系統是由 <url id="&xfree86home;" name="Xfree86"> 所提供的。
在 &debian; 上有兩個主要版本的 X 伺服器：
XFree86 版本 3.3(XF3) 以及 XFree86 版本 4.x(XF4)；兩者皆是以 X11R6 為基礎並由 <url id="&xorghome;" name="X.Org"> 所建構。
<p>
了解 X 的基本概念，您可以閱讀 <manref name="X" section="7">, LDP <url id="&xwindowuser-howto;" name="XWindow-User-HOWTO">, 以及 <url id="&remote-xapps-howto;" name="Remote X Apps mini-HOWTO">。
您可以閱讀 <package>xfree86-common</package> 套件中的 <file>&f-x-deb-faq;</file>，這是專對於 &debian; 的設計的使用者指南。其中 Branden Robinson 有一些有趣並且有權威的對 key binding 的討論。
<p>
<taglist>
<tag><ref id="xsrvr">
<item>此軟體將本地端主機的 X window 視窗或桌面顯示到使用者的螢幕(CRT, LCD) 並接受鍵盤與滑鼠的輸入。
<tag><ref id="xclnt">
<item>與 X 相容的應用軟體，可以在本地端或是遠地端的主機執行。
</taglist>
這些正好與一般的 "server" 和 "client" 的觀念相反。
<p>
有幾種方法可以讓 "X server" (顯示端) 接受遠端連線的 "X client" (程式端)：

<list>
<item><prgn>xhost</prgn> 方式
<list compact>
<item>主機列表機制 (很不安全)。
<item>未加密的協定 (易受到網路監聽攻擊)。
<item>如果可以，盡量不要使用。
<item>請參閱 <ref id="xhost"> 以及 <manref name="xhost" section="1x">。
</list>
<item><strong><prgn>xauth</prgn></strong> 方式
<list compact>
<item>MIT magic cookie 機制 (不算安全，但比 <prgn>xhost</prgn> 安全多)。
<item>未加密的協定 (易受到網路監聽攻擊)。
<item>如果是本地端連線，建議採用，比 <prgn>ssh -X</prgn> 更省資源。
<item>請參閱 <ref id="ss-xsu"> 以及 <manref name="xauth" section="1x">。
</list>
<item><prgn>xdm</prgn>, <prgn>wdm</prgn>, <prgn>gdm</prgn>, 
 <prgn>kdm</prgn>, ... 方式
<list compact>
<item>MIT magic cookie 機制 (不算安全，但比 <prgn>xauth</prgn> 安全多)。
<item>請參閱 <manref name="xdm" section="1x"> 以及 <manref name="Xsecurity" section="7"> 來建立簡單的存取權限控制。
<item>請參閱 <manref name="wdm" section="1x">, <manref name="gdm" section="8">, 
 和 <manref name="kdm.options" section="5"> 了解更多資訊。
<item>請閱讀 <ref id="custombootscripts"> 來了解如何在不刪除 <prgn>xdm</prgn> 套件時取消 <prgn>xdm</prgn> 並回到系統啟動的終端機畫面。
</list>
<item><strong><prgn>ssh -X</prgn></strong> 方式
<list compact>
<item>透過安全 shell 埠號轉送機制 (<strong>很安全</strong>)。
<item>加密的傳輸協定 (對於本地端使用簡直是浪費)。
<item>當遠端連線時，建議採用。
<item>請閱讀 <ref id="xssh">。
</list>
</list>
以上所有遠地端連接 X 的方式，除了 <prgn>ssh</prgn> 之外，都需要設定 X server 啟動 TCP/IP 連線，請閱讀 <ref id="xtcp">。

<sect1 id="x-system">X 套件
<p>
目前在 woody 上已經有許多 meta 套件能降低您安裝 X 系統的難度。
<taglist>
<tag><package>x-window-system-core</package>
<item>
此 metapackage 提供最基本工作站使用的 X Window 系統。它提供了 X 函式，X 伺服器 (<package>xserver-xfree86</package>)，以及一些字型和基本的 X clients 與工具。

<tag><package>x-window-system</package> 
<item>
此 metapackage 提供大部分的 XFree86 計畫的 X Window System 元件，以及一套許多有名的附屬應用程式。(包含了<package>x-window-system-core</package>、<package>twm</package>和<package>xdm</package>等組件，故安裝了它就不用再安裝<package>x-window-system-core</package>了)

<tag><package>xserver-common-v3</package> 
<item>
XFree86 3.x X 伺服器（X3）相關的軟體和工具。

<tag><package>xserver-*</package> 
<item>
X3伺服器器軟體的額外套件，包含了支援對那些新的 X4 伺服器(<package>xserver-xfree86</package>)不支援的硬體。如X4不支援某些老舊的ATI mach64卡，某些顯示卡在Woody版的X4中無法工作等等。（要獲得可用的套件，可執行 <tt>apt-cache search xserver-|less</tt>。所有這些X3伺服器均是基於<package>xserver-common-v3</package>的。）
</taglist>
<p>
大多數情況下，應該安裝<package>x-window-system</package>（如果要使用終端模式登入，需停用<package>xdm</package>，詳細方法參閱 <ref id="no-x-start">。）

<sect1 id="hdetect-x">X 的硬體偵測
<p>
在安裝系統之前只要先安裝以下軟體就能在配置 X 時偵測週邊硬體：
<list>
<item><package>discover</package> &ndash; 硬體偵測系統。
<item><package>mdetect</package> &ndash; 滑鼠自動偵測工具。
<item><package>read-edid</package> &ndash; VESA PnP 的硬體訊息監督器。
</list>

<sect1 id="xsrvr">X 伺服器
<p>
請參閱 <manref name="XFree86" section="1x"> 了解更多 X 伺服器的資訊。
<p>
從本地的終端機開啟 X 伺服器的方式:
<example>
$ startx -- :&lt;display&gt; <var>vtXX</var>
e.g.:
$ startx -- :1 vt8 -bpp 16
... start on vt8 connected to localhost:1 with 16 bpp mode
</example>
<tt>--</tt>後面接的是 X 伺服器的參數。
<p>
注意，在使用<file>~/.xserverrc</file> script 來自訂 X 伺服器啟動時所開啟的軟體時，請確定 <tt>執行</tt> 的是真正的 X 伺服器。如果沒這麼做會導致 X 伺服器啟動過慢以及退出。例如：
<example>
#!/bin/sh
exec /usr/bin/X11/X -dpi 100 -nolisten tcp
</example>

<sect2 id="config-x4">設定 X 伺服器 (Version 4)
<p>
(重新)設定 XF4 伺服器，
<example>
# dpkg-reconfigure --priority=low xserver-common
# dpkg-reconfigure --priority=low xserver-xfree86
</example>
將會產生 <file>/etc/X11/XF86Config-4</file> 文件並使用 <prgn>dexconf</prgn> script 來設定 X。 

<sect2 id="config-x3">設定 X 伺服器 (Version 3)
<p>
(重新)設定 XF3 伺服器，
<example>
# dpkg-reconfigure --priority=low xserver-common-v3
# dpkg-reconfigure --priority=low xserver-mach64
</example>
將會產生 <file>/etc/X11/XF86Config</file> 文件並使用 <prgn>xf86config-3</prgn> script 來設定 X。 

<sect2 id="manual-config-x">手動設定 X 伺服器
<p>
在 Woody 系統上，修改<file>/etc/X11/XF86Config-4</file>時，請<strong>不要修改以下文字間的設定</strong>
<!-- FIXME for XF3 -->
<example>
### BEGIN DEBCONF SECTION
[snip]
### END DEBCONF SECTION
</example>
<p>
正確的作法是 <strong>將自訂的內容加在定義段落之前</strong>。例如，新增顯示卡，可在設定檔<em>開頭</em>增加類似下面的內容：
<example>
Section "Device"
  Identifier        "Custom Device"
  Driver            "ati"
  Option            "NoAccel"
EndSection

Section "Screen"
  Identifier  "Custom Screen"
  Device      "Custom Device"
  Monitor     "Generic Monitor"
  DefaultDepth 24
  Subsection "Display"
    Depth       8
    Modes       "1280x960" "1152x864" "1024x768" "800x600" "640x480"
  EndSubsection
  Subsection "Display"
    Depth       16
    Modes       "1280x960" "1152x864" "1024x768" "800x600" "640x480"
  EndSubsection
  Subsection "Display"
    Depth       24
    Modes       "1280x960" "1152x864" "1024x768" "800x600" "640x480"
  EndSubsection
EndSection

Section "ServerLayout"
    Identifier        "Custom"
    Screen            "Custom Screen"
    InputDevice       "Generic Keyboard" "CoreKeyboard"
    InputDevice       "Configured Mouse" "CorePointer"
EndSection
</example>
<p>
在 Sarge (本文撰寫時為<tt>testing</tt> )系統上，如果您想再升級時保留使用者自訂<file>/etc/X11/XF86Config</file>的設定，請用 root 執行下列命令：
<example>
# cp /etc/X11/XF86Config-4 /etc/X11/XF86Config-4.custom
# md5sum /etc/X11/XF86Config-4 &gt; /var/lib/xfree86/XF86Config-4.md5sum
# dpkg-reconfigure xserver-xfree86
</example>
如果想美化字體，請依照 <ref id="xfs-tt"> 的說明來修改<file>/etc/X11/XF86Config-4</file>。
<!--
<p>
For XF3, in order to achieve <strong>font de-uglification</strong>, 
you need to edit the order of <tt>FontPath</tt> in
<file>/etc/X11/XF86Config</file> 
while adding <tt>:unscaled</tt> as follows.
<example>
FontPath        "/usr/X11R6/lib/X11/fonts/misc:unscaled"
FontPath        "/usr/X11R6/lib/X11/fonts/100dpi:unscaled"
FontPath        "/usr/X11R6/lib/X11/fonts/75dpi:unscaled"
FontPath        "/usr/X11R6/lib/X11/fonts/Type1"
FontPath        "/usr/X11R6/lib/X11/fonts/Speedo"
FontPath        "/usr/X11R6/lib/X11/fonts/misc"
FontPath        "/usr/X11R6/lib/X11/fonts/100dpi"
FontPath        "/usr/X11R6/lib/X11/fonts/75dpi"
</example>
<p>
If you use xfs serves fonts via a Unix Domain Socket, you may also edit
<tt>catalogue</tt> entry of <file>/etc/X11/fs/config</file> as:
<example>
catalogue = /usr/X11R6/lib/X11/fonts/misc:unscaled,
            /usr/X11R6/lib/X11/fonts/100dpi:unscaled,
            /usr/X11R6/lib/X11/fonts/75dpi:unscaled,
            /usr/X11R6/lib/X11/fonts/Type1,
            /usr/X11R6/lib/X11/fonts/Speedo,
            /usr/X11R6/lib/X11/fonts/misc,
            /usr/X11R6/lib/X11/fonts/100dpi,
            /usr/X11R6/lib/X11/fonts/75dpi,
</example>
<p>
These <tt>:unscaled</tt> tricks are deprecated in new XF4 and no longer
needed.
-->
<!-- per /usr/share/doc/xfree86-common/README.fonts.gz in 4.2.1 -->
<p>
並檢查其餘的 X 設定。不良的螢幕設定可能會造成更多比難看字型的問題，所以請調高您的螢幕更新頻率(85 Hz 不錯，75 Hz 還可以，60 Hz 就很糟了)。

<sect1 id="xclnt">X clients 
<p>
絕大多數的 X client 軟體都能用類似下面的命令啟動：
<example>
client $ xterm -geometry 80x24+30+200 -fn 6x10 -display <var>hostname</var>:0 &amp;
</example>
命令行中個參數的意義如下：
<list>
<item><tt>-geometry <var>WIDTH</var>x<var>HEIGHT</var>+<var>XOFF</var>+<var>YOFF</var></tt>：
視窗的初始尺寸與位置。

<item><tt>-fn <var>FONTNAME</var></tt>：用來顯示文字的字體。
 <tt><var>FONTNAME</var></tt> 可以是：
<list compact>
<item>a14: 普通字體
<item>a24: 大型字體
<item>... (使用<tt>xlsfont</tt>查詢可用的字體。)
</list>
<item><tt>-display <var>displayname</var></tt>: X server 的名稱。
 <tt><var>displayname</var></tt> 可以是：
<list compact>
<item><tt><var>hostname</var>:<var>D.S</var></tt>表示在名為<tt><var>hostname</var></tt>的主機的螢幕 <tt><var>D</var></tt> 上顯示的稱為 screen <tt><var>S</var></tt>；使用螢幕 D 的 X server 所間聽 TCP 埠號為 6000+D。

<item><tt><var>host</var>/unix:<var>D.S</var></tt>表示在<tt><var>host</var></tt> 主機的螢幕<var>D</var>上所顯示的稱為 screen <tt><var>S</var></tt>； 使用螢幕 D 的 X server 所監聽 <file>/tmp/.X11-unix/XD</file> (所以只能從主機 <tt><var>host</var></tt> 登入。

<item><tt><var>:D.S</var></tt>就是代表 <tt><var>host</var>/unix:<var>D.S</var></tt>，其中 <tt><var>host</var></tt>本地主機名稱。
</list>
</list>
<p>
預設的 X client 程式(應用端)的 <tt><var>displayname</var></tt> 可透過 DISPLAY 環境變數來設定。例如，在執行某 X client 軟體之前，執行下列命令之一就可以完成設定工作： 
<example>
$ export DISPLAY=:0 
        # 預設情況下，本地主機使用第一個 X screen
$ export DISPLAY=<var>hostname.fulldomain.name</var>:0.2
$ export DISPLAY=localhost:0
</example>
軟體啟動程序可以在 <file>~/.xinitrc</file> 中自定。例如：
<example>
xrdb -load $HOME/.Xresources
xsetroot -solid gray &amp;
xclock -g 50x50-0+0 -bw 0 &amp;
xload -g 50x50-50+0 -bw 0 &amp;
xterm -g 80x24+0+0 &amp;
xterm -g 80x24+0-0 &amp;
twm
</example>
如 <ref id="custom-x">所提到的，<prgn>startx</prgn> 不理會 <prgn>Xsession</prgn> 所有的常規操作。通常使用 <file>~/.xsession</file> 僅做為最後的辦法。 
請參閱<manref name="xsetroot" section="1x">，<manref name="xset" section="1x">以及<ref id="xresources">。
</sect1>

<sect1 id="x-session">X sessions
<p>
啟動 X session (X server + X client) 的方式如下：
<list compact>
<item><prgn>startx</prgn>：文字介面下用來啟動 X server 與 client 的 <prgn>xinit</prgn> 指令集。如果 <file>~/.xinitrc</file> 不存在，擇<file>/etc/X11/Xsession</file> 會透過執行 <file>/etc/X11/xinit/xinitrc</file> 時呼叫。
<item><prgn>xdm</prgn>, <prgn>gdm</prgn>, <prgn>kdm</prgn>, or
      <prgn>wdm</prgn>：X 顯示管理程式，用來啟動 X server 與 X client 且直接在 X 下控管帳號的登入。<file>/etc/X11/Xsession</file> 也會被呼叫。
</list>
請參閱 <ref id="no-x-start"> 了解從終端機啟動 X 的資訊。

<sect2 id="custom-x">自定 X sessions
<p>
預設的啟動 script <file>/etc/X11/Xsession</file>是<file>/etc/X11/Xsession.d/50xfree86-common_determine-startup</file> 以及<file>/etc/X11/Xsession.d/99xfree86-common_start</file> 的組合。
<p>
<file>/etc/X11/Xsession</file>的執行會受到<file>/etc/X11/Xsession.options</file>的影響，基本上，它使用<prgn>exec</prgn>命令執行系統中的程式，讀取的順序如下：
<enumlist compact>
<item><file>~/.xsession</file> or <file>~/.Xsession</file>，如果它被定義的話。
<item><file>/usr/bin/x-session-manager</file>，如果它被定義的話。
<item><file>/usr/bin/x-window-manager</file>，如果它被定義的話。
<item><file>/usr/bin/x-terminal-emulator</file>，如果它被定義的話。
</enumlist>
<p>
&debian; alternative 系統對這些命令有詳細的說明，請參閱 <ref id="alternatives">。
例如：
<example>
# update-alternatives --config x-session-manager
... or
# update-alternatives --config x-window-manager
</example>
如果想定義某 X 視窗管理程式為預設，同時保留已安裝的GNOME和KDE的session管理程式，可用<url id="&bug-xfree;"> 中第二個錯誤報告所附的檔案替換<file>/etc/X11/Xsession.d/50xfree86-common_determine-startup</file>（我希望它能早日加到發行版中），然後按下面的方法編輯<file>/etc/X11/Xsession.options</file>取消Xsession管理程式：

<example>
# /etc/X11/Xsession.options
#
# configuration options for /etc/X11/Xsession
# See Xsession.options(5) for an explanation of the available options.
# Default enabled
allow-failsafe
allow-user-resources
allow-user-xsession
use-ssh-agent
# Default disabled (enable them by uncommenting)
do-not-use-x-session-manager
#do-not-use-x-window-manager
</example>
<p>
如果不想按照上述的方法修改系統，則<package>gnome-session</package> 以及 <package>kdebase</package> 所附的 X session 管理程式就變成預設的了。移除掉他們的話，X 視窗管理程式就變成預設的視窗管理程式。(廢話，還有更好的主意嗎？)
<p>
對於那些 <file>/etc/X11/Xsession.options</file> 只包含一行 <tt>allow-user-xsession</tt> 的系統而言，任何定義了<file>~/.xsession</file> 或 <file>~/.Xsession</file>的使用者均可以自行定義<file>/etc/X11/Xsession</file>的行為。
<p>
<file>~/.xsession</file> 檔案中的最後一行命令，其格式應該為<tt>exec <var>some-window/session-manager</var></tt>，用來啟動您喜歡的 X 視窗/session 管理程式。
<p>
<file>&f-xsession;</file> 提供了一個相當不錯的<file>&f-xsession;</file> 範例。
<p>
我使用它來設定每一個使用者的視窗管理員，screen 存取以及語言支援。請參閱<ref id="s-w-manager">、<ref id="ss-xsu">、<ref id="x-cjk">。
<p>
如果您希望某些 X client 軟體可以自動啟動，請參閱<ref id="xclnt"> 的範例並寫到<file>~/.xsession</file>來取代<file>~/.xinitrc</file>。

<p>
使用者新增的 X 資源(resources)可以儲存在<file>~/.Xresources</file>，請參閱<ref id="xresources">。
<p>
使用者自訂的鍵盤與滑鼠按鍵配置檔是存放在<file>~/.xmodmaprc</file>。請參閱 <ref id="xmodmap">。

<sect2 id="s-w-manager">針對使用者啟動 X Session
<p>
依照 <ref id="custom-x"> 這一節所描述的，要啟動使用者自訂的 X session/window manager 可透過安裝相對應的軟體並在 <file>~/.xsession</file> 的最後加入以下內容
(我偏好 <package>blackbox</package>/<package>fluxbox</package> 因為簡潔快速。)：

<list>
<item>預設的 X session manager
<list compact>
<item>參閱 <ref id="alternatives">
<item><tt>exec /usr/bin/x-session-manager</tt>
</list>
<item>預設的 X window manager 
<list compact>
<item>參閱 <ref id="alternatives">
<item><tt>exec /usr/bin/x-window-manager</tt>
</list>

<item>GNOME session manager (loaded)
<list compact>
<item>須安裝的套件: <package>gnome-session</package>
<item><tt>exec /usr/bin/gnome-session</tt>
</list>

<item>KDE session manager (loaded)
<list compact>
<item>須安裝的套件: <package>kdebase</package> (or 
<package>kdebase3</package> for KDE3)
<item><tt>exec /usr/bin/kde2</tt>
</list>

<item>Blackbox window manager (lightweight, slick)
<list compact>
<item>須安裝的套件: <package>blackbox</package>
<item><tt>exec /usr/bin/blackbox</tt>
</list>

<item>Fluxbox window manager (lightweight, new blackbox)
<list compact>
<item>須安裝的套件: <package>fluxbox</package>
<item><tt>exec /usr/bin/fluxbox</tt>
</list>

<item>Xfce window manager (Mac OS-X, SUN CDE&ndash;like)
<list compact>
<item>須安裝的套件: <package>xfce</package>
<item><tt>exec /usr/bin/xfwm</tt>
</list>

<item>IceWM window manager (lightweight, GNOME alternative)
<list compact>
<item>須安裝的套件: <package>icewm</package>
<item><tt>exec /usr/bin/X11/icewm</tt>
</list>

<item>FVWM2 virtual window manager (lightweight, Win95-like)
<list compact>
<item>須安裝的套件: <package>fvwm</package>
<item><tt>exec /usr/bin/fvwm2</tt>
</list>

<item>Windowmaker window manager (somewhat NexT-like)
<list compact>
<item>須安裝的套件: <package>wmaker</package>
<item><tt>exec /usr/bin/wmaker</tt>
</list>

<item>Enlightenment window manager (loaded)
<list compact>
<item>須安裝的套件: <package>enlightenment</package>
<item><tt>exec /usr/bin/enlightenment</tt>
</list>

</list>
參閱 <url id="&windomanagerhome;" name="Window Managers for X">.


<sect2 id="kde-gnome">配置 KDE/GNOME
<p>
要建立完整的 KDE/GNOME 桌面環境，下列的綜合套件是很有用的：
<list compact>
<item>KDE: 安裝 <package>kde</package> 套件
<item>GNOME: 安裝 <package>gnome</package> 套件
</list>
使用能夠額外安裝 <tt>Recommends</tt> 的套件管理程式，如 <prgn>dselect</prgn> and <prgn>aptitude</prgn>，將會提供比 <prgn>apt-get</prgn> 更豐富的軟體供您選擇。
<p>
如果想從 console 登入，請確定先取消 X display managers，例如 <package>kdm</package>，<package>gdm</package>以及<package>wdm</package>，這會影響<ref id="no-x-start"> 這一節中所提及的關聯性問題。
<p>
如果您想使用 GNOME 取代 KDE 來當視窗管理程式的話，請參閱 <ref id="alternatives"> 的方法來設定 <prgn>x-session-manager</prgn>。

<sect1 id="xtcp">在TCP/IP的環境中使用X Window
<p>
因為遠端TCP/IP的連線是沒有經過加密的處理所以會有被竊聽的危險性存在，因此在最近的幾個 &debian; 版本中都會取消(disable)這個 TCP/IP socket。因此如果要遠端連線就必須使用 <prgn> ssh </prgn> 來建立連線(參閱 <ref id="xssh"> )。
<p>
這裡所使用的方法並不鼓勵您使用除非您所在的環境是一個在良好的防火牆後方而且只有信任的使用者會使用的安全環境中。如果是這樣請用以下的指令來設定您現在X server的設定。
<example>
# find /etc/X11 -type f -print0 | xargs -0 grep nolisten
/etc/X11/xinit/xserverrc:exec /usr/bin/X11/X -dpi 100 -nolisten tcp
</example>
移除<tt>-nolisten</tt>讓X server回復對TCP/IP的監聽。
</sect1>
 
<sect1 id="xhost">連接到遠端的X server &ndash; <prgn>xhost</prgn>
<p>
<prgn>xhost</prgn>以主機名稱(hostnames)為權限設定是非常不安全的。如果一個TCP／IP socket的連線是被允許的，則以下的步驟將會取消主機（host）的檢查並且允許從任何一個地方的連線。(參閱 <ref id="xtcp">):
<example>
$ xhost +
</example>
你可以用以下的步驟再開啟主機的檢查：
<example>
$ xhost -
</example>
<p>
<prgn>xhost</prgn> 並不會區別在遠端主機上不同的使用者。
並且主機名稱（hostnames）也可以被捏造。
<p>
如果你是在一個不被信任的網路中，這個方法必須避免使用，即使是在一個高度限制的主機環境中（例如利用PPP撥接上網的環境中）。參閱 <manref name="xhost" section="1x">.
</sect1>

<sect1 id="xssh">連線到遠端的 X server &ndash; <prgn>ssh</prgn>
<p>
<prgn>ssh</prgn> 能建立一道從本地端的 X server 到遠端的應用程式伺服器的安全連線。
<list>
<item>設定遠端主機的<file>/etc/ssh/sshd_config</file>設定檔，將 <tt>X11Forwarding</tt> 和 <tt>AllowTcpForwarding</tt> 的值設成 <tt>yes</tt>，這免除掉命令列啟動時需要的相關參數。
<item>啟動本地端主機的 X server。
<item>在本地主機開啟一個 <prgn>xterm</prgn> 視窗。
<item>執行 <prgn>ssh</prgn> 來建立與遠端站台的連線。  
<example>
localname @ localhost $ ssh -q -X -l loginname remotehost.domain
Password:
.....
</example>
<item>在遠端站台執行 X 應用程式指令。
<example>
loginname @ remotehost $ gimp &
</example>
</list>
這個方式允許輸出遠端的 X 用戶畫面，就像在本地端透過 UNIX domain socket 連接。
</sect1>

<sect1 id="xtermfaq">X 終端機模擬器 &ndash; <prgn>xterm</prgn>
<p>學習 <url id="&xtermfaq;"> 中關於 <prgn>xterm</prgn> 的所有東西。
</sect1>

<sect1 id="xresources">X 資源
<p>
許多舊有的 X 程式使用 X 資源資料庫來設定他們的外觀，如 <prgn>xterm</prgn>。<file>~/.Xresources</file> 用來儲存使用者資源明細。該檔在登入時會自動合併到預設的 X 資源。系統預設的 X 資源是儲存在 <file>/etc/X11/Xresources/*</file>，應用程式預設的資源檔是儲存在 <file>/etc/X11/app-defaults/*</file>。使用這些設定來當作學習的起點。

<p>
這些是對妳的<file>~/.Xresources</file>有用的設定：
<example>
! Set the font to a more readable 9x15
XTerm*font: 9x15

! Display a scrollbar
XTerm*scrollBar: true

! Set the size of the buffer to 1000 lines
XTerm*saveLines: 1000

! Large kterm screen
KTerm*VT100*fontList: -*-fixed-medium-r-normal--24-*,\
 -*-gothic-medium-r-normal--24-*,\
 -*-mincho-medium-r-normal--24-*
</example>
要即使改變設定的效果，執行底下指令合併它們到資料庫：
<example>
xrdb -merge ~/.Xresources
</example>
參閱 <manref name="xrdb" section="1x">。

<sect1 id="xmodmap">X 的按鍵和指標按鈕對應
<p>
<prgn>xmodmap</prgn> 程式用來編輯和顯示鍵盤修改表和按鍵對應表，用戶端程式用這些表格來轉換 X 裡的按鍵代碼事件(event keycodes)成按鍵符號(keysyms)。
<example>
$ xmodmap -pm 
 ... 顯示目前的 modifier 表
$ xmodmap -pk | pager
 ... 顯示目前的鍵盤對應表
$ xmodmap -e "pointer = 3 2 1" # 設定滑鼠為左手慣用
$ xmodmap ~/.xmodmaprc # 讀取 ~/.xmodmaprc 設定鍵盤
</example>
這些通常用者的對話(session)啟動 script ,<file>~/.xsession</file> 中執行。
<!--
User-customized keymaps and pointer button mappings in X can be
specified in <file>~/.xmodmaprc</file>.
-->
<p>
如何取得<tt>按鍵代碼(keycode)</tt>, 在 X 執行 <prgn>xev</prgn> 並按下測試的鍵.
如何取得<tt>按鍵符號(keysym)</tt>的意義, 查詢 <file>/usr/include/X11/keysymdef.h</file> 檔案中的巨集定義。該檔中的 <tt>#define</tt> 敘述被命名為 <tt>XK_</tt>，這些 <tt>XK_</tt> 是預留給<tt>按鍵符號(keysym)</tt>的名稱.
<p>
參閱 <manref name="xmodmap" section="1x">.

<sect1 id="ss-xsu">在 X 裡取得 root
<p>
如果一個 GUI 程式在執行時需要 root 特權，使用下列的步驟就能在使用者的 X server 顯示程式的輸出。為了避免可能造成的安全性問題，<strong>千萬不要嘗試直接從 root 帳號啟動 X server</strong>.
<p>
利用普通使用者啟動 X server 並開啟 <prgn>xterm</prgn> 主控台.
然後:
<example>
$ XAUTHORITY=$HOME/.Xauthority
$ export XAUTHORITY
$ su root
Password:*****
# printtool &
</example>
當使用<prgn>su</prgn> 到非 root 使用者時, 確定 <file>~/.Xauthority</file> 是允許群組讀取以便該非 root 使用者可以讀取.
<p>

<!-- this section moved up -->

要自動化這些指令流程, 建立該使用者帳號的 <file>~/.xsession</file>, 包含底下的敘述:
<example>
# This makes X work when I su to the root account.
if [ -z "$XAUTHORITY" ]; then
        XAUTHORITY=$HOME/.Xauthority
        export XAUTHORITY
fi
unset XSTARTUP
# If a particular window/session manager is desired, uncomment
# the following and edit it to fit your needs.
#XSTARTUP=/usr/bin/blackbox
# This starts x-window/session-manager program
if [ -z "$XSTARTUP" ]; then
  if [ -x /usr/bin/x-session-manager ]; then
    XSTARTUP=x-session-manager
  elif [ -x /usr/bin/x-window-manager ]; then
    XSTARTUP=x-window-manager
  elif [ -x /usr/bin/x-terminal-emulator ]; then
    XSTARTUP=x-terminal-emulator
  fi
fi
# execute auto selected X window/session manager
exec $XSTARTUP
</example>
接著在該使用者的<prgn>xterm</prgn>視窗執行<prgn>su</prgn> (不是 <tt>su -</tt>). 現在起, GUI 程式從這個<prgn>xterm</prgn>啟動的能夠在該使用者的 X 視窗顯示以 root 權限執行的程式的輸出畫面. 這個技巧只要在預設的<file>/etc/X11/Xsession</file>被執行的情況下成立. 如果一位使用者改用<file>~/.xinitrc</file>或<file>~/.xsession</file>來自定偏好，則上述展示的環境變數 <tt>XAUTHORITY</tt> 需要以類似的 script 來設定.

<p>另外, <package>sudo</package> 可用來自動化這些指令流程:
<example>
$ sudo xterm
... or
$ sudo -H -s
</example>
在這裡, <file>/root/.bashrc</file> 必須包含:
<example>
if [ $SUDO_USER ]; then
    sudo -H -u $SUDO_USER xauth extract - $DISPLAY | xauth merge -
fi
</example>
即使是該使用者的家目錄是 NFS 掛載的位置, 還是能正常運作, 因為 root 不需要讀取 <file>.Xauthority</file> 檔案.
<p>
還有幾個針對這個目的的套件:
<package>kdesu</package>, <package>gksu</package>, <package>gksudo</package>,
<package>gnome-sudo</package> 和 <package>xsu</package>. 其他方式可用來達成類似的結果: 建立 <file>/root/.Xauthority</file> 的符號連結到使用者對應的位置; 使用<url id="&suxhome;" name="sux"> 的 script; 或加入 "<tt>xauth merge~<var>USER_RUNNING_X</var>/.Xauthority</tt>" 到root 的初使 script.
<p>
更多訊息請參閱 <url id="&deb-dev-su;" name="debian-devel mailing list">.
</sect1>

<sect1 id="xfs-tt">在 X 的 TrueType 字型

<p>
在 XFree86-4 ，標準的 <prgn>xfs</prgn> 和 TrueType 字型運作良好。
如果你使用 XFree86-3 ，你必需安裝一 third-party 字型伺服器例如

<prgn>xfs-xtt</prgn> 。 
<p>
你只需要去確認你要使用 TrueType 字型的任何應用程式是靠 libXft 或 libfreetype 連結(如果你是使用pre-compiled .debs，你大概不需要去擔心 )。
<p>
首先設定字型支援基礎配備：
<list compact>
<item>安裝 <package>x-ttcidfont-conf</package> 和
<package>defoma</package> 套件。該套件會自動產生<file>fonts.scale</file> 和 <file>fonts.dir</file> 檔案。
<example>
# apt-get install x-ttcidfont-conf
</example>
<item>編輯 <file>/etc/X11/XF86Config-4</file> 的 <tt>Section "Files"</tt> 部份如下
<example>
Section "Files"
    FontPath  "/var/lib/defoma/x-ttcidfont-conf.d/dirs/TrueType"
    FontPath  "/usr/share/fonts/truetype"
    FontPath  "/usr/lib/X11/fonts/CID"
    FontPath  "/usr/lib/X11/fonts/Speedo"
    FontPath  "/usr/lib/X11/fonts/misc"
    FontPath  "/usr/lib/X11/fonts/cyrillic"
    FontPath  "/usr/lib/X11/fonts/100dpi:unscaled"
    FontPath  "/usr/lib/X11/fonts/75dpi:unscaled"
    FontPath  "/usr/lib/X11/fonts/Type1"
EndSection
</example>
第一行將會安裝 XFree86 來使用任何你從
 &debian; 套件安裝的 TrueType 字型。
自從 XFree86 支援較少 Type1 字型描繪，Type1的字型目錄就放在比較後面了。
bitmap字型的 <tt>:unscaled</tt> 方法在新的
 XF4 再也不需要，但我在這裡包含它只是做確認。
<!-- per /usr/share/doc/xfree86-common/README.fonts.gz in 4.2.1 -->
<p>
為了要保存手動修改 <file>/etc/X11/XF86Config-4</file>的部份，請接著 <ref id="manual-config-x"> 的指示。
</list>
<p>
然後安裝 DFSG 字型套件：
<list compact>
<item>西文 TrueType 字型：
<list compact>
<item><package>ttf-bitstream-vera</package>：一套由 Bitstream, Inc創造的高品質 TrueType 字型。
<footnote>
雖然 Woody 並沒有納入，你可以從 Sarge 來安裝這些字型。
</footnote>
<item><package>ttf-freefont</package>：一套開放高品質 TrueType 字型包含了 UCS 字元集。
<item><package>ttf-thryomanes</package>：一套 unicode 的 TrueType 字型，包含了 Latin, Greek, Cyrillic 和 IPA。
</list>
<item>亞洲字型：
<list compact>
<item><package>tfm-arphic-bsmi00lp</package>: Chinese Arphic "AR PL
Mingti2L Big5" TrueType font TeX font metric data
<item><package>tfm-arphic-bkai00mp</package>: Chinese Arphic "AR PL
KaitiM Big5" TrueType font TeX font metric data
<item><package>tfm-arphic-gbsn00lp</package>: Chinese Arphic "AR PL
SungtiL GB" TrueType font TeX font metric data
<item><package>tfm-arphic-gkai00mp</package>: Chinese Arphic "AR PL
KaitiM GB" TrueType font TeX font metric data
<item><package>ttf-baekmuk</package>: Korean Baekmuk 系列的 TrueType 字型
<item><package>hbf-jfs56</package>: Chinese Jianti Fangsong 56x56 bitmap
font (GB2312) for CJK
<item><package>hbf-cns40-b5</package>: Chinese Fanti Song 40x40 bitmap
font (Big5) for CJK
<item><package>hbf-kanji48</package>: Japanese Kanji 48x48 bitmap font
(JIS X-0208) for CJK
</list>
</list>
<!-- Need to watch Japanese font issue -->
<p>
自從 <strong>Free</strong> 字型有些限制開始，對 &debian; 使用者來說，安裝或分享一些商業性的 TrueType 字型變成一種選擇。
為了要使這程序對使用者來說更加容易，
一些便利的套件被開發出來：
<list compact>
<item><package>ttf-commercial</package>
<item><package>msttcorefonts (>1.1.0)</package>
<footnote>
由於 Microsoft 的網站在 8/2002 之後有更動，所以 Woody 裡的套件無法正常運作。請改用 Sarge 裡的版本。
</footnote>
</list>
You'll have a really good selection of TrueType fonts at the expense of
contaminating your <strong>Free</strong> system with non-Free fonts.

<p>
所有在 &debian; 的字型套件應該能無痛使用且所有的 X 程式只要使用 "core" 字型系統，就應該能使用這些字型。這包含了像是 Xterm, Emacs, 和許多其他非 KDE 和非 GNOME 的應用程式。
<p>
現在，執行 <prgn>xfontsel</prgn> 並選擇任何在 fndry 選單的 TrueType 字型，你應該能夠在 "fmly" 選單看到許多反灰階項目。
<p>
對 KDE2.2 和 GNOME1.4 (搭配 libgdkxft0 使得 GTK 1.2 能做出反鋸齒的效果) ，同樣地，你需要安裝 Xft1。Xft1 是非常過時了，並且基本上只有 GNOME1.4 和 KDE2.2 使用。輯編 <file>/etc/X11/XftConfig</file> 並增加一行
<example>
    dir "/var/lib/defoma/x-ttcidfont-conf.d/dirs/TrueType"
</example>
<p>
在其它 "dir" 行之前。
<footnote>
在我機器上已經沒有任何 xft1 的東西，所以我不確定你是不是需要重新啟動 X。我似乎記得 "xftcache" 會更新 Xft1 快取，但如果某人可以對我證實會更好。
</footnote>
<p>
針對 GNOME2 和 KDE3 (Sarge 之後的版本)，您需要設定 <package>fontconfig</package>使得 Xft2 能找到字型。 
<footnote>
Woody 沒納入 <package>Fontconfig</package>。
</footnote>
你不應該需要對這去安裝任何額外的東西，因為每一使用 <package>fontconfig</package> 的套件已經 (間接地) 相依於 (Depends) 它了。
<p>
首先，查閱 <file>/etc/fonts/fonts.conf</file>。應該有類似下面這一行。如果沒有，修改 <file>/etc/fonts/local.conf</file> 並增加
<example>
    &lt;dir&gt;/var/lib/defoma/x-ttcidfont-conf.d/dirs/TrueType&lt;/dir&gt;
</example>
只要在 &lt;fontconfig&gt; 這一行之後即可。
<p>
<package>Fontconfig</package> 應該能直接取得字型資訊，"fc-list" 應該能列出您的新字型。另一 <package>fontconfig</package> 的特色是你可以僅在<file>~/.fonts/</file> 中停用字型，而所有字型設定程式能夠即時接受更動。
<p>
如果你在 X 下手動安裝非 &debian; 套件的新 TrueType 字型，請執行
<example>
# xset fp rehash
</example>
使得 XFree86 重新查詢目錄的內容並產生新的資料。

<sect1 id="ss-browser">在 X 中的網頁瀏覽器
<p>
在 Woody 發行版本中，納入了一些解析影像功能的網頁瀏覽器套件：
<list compact>
<item><package>mozilla</package> Mozilla 瀏覽器 (新增的)
<item><package>galeon</package> 以 Mozilla 為基礎，套用 Gnome UI 的瀏覽器 (新增的)
<item><package>konqueror</package> KDE b瀏覽器
<item><package>dillo</package> GTK 瀏覽器
<item><package>amaya-gtk</package> W3C 參考瀏覽器 
<item><package>amaya-lesstif</package> W3C 參考瀏覽器
<item><package>netscape-...</package> (很多，舊式的)
<item><package>communicator-...</package> (很多，舊式的)
<item>...
</list>
<package>mozilla</package> 這個版本需要符合 <package>galeon</package> 所需要的版本。雖然他們在 UI 中不同，這兩個程式共用 Gecko HTML 的描繪引擎。
<p>
瀏覽器的外掛程式，例如 <package>mozilla</package> 和 <package>galeon</package> 可以靠著安裝 "<tt>*.so</tt>" 到 plug-in 目錄和重新啟動瀏覽器來生效。
<p>
外掛程式資源：
<list compact>
<item>Java 外掛程式：安裝 <url id="&javasunhome;"> 的 "J2SE" 二源碼。
<item>Flash 掛外程式：安裝 <url id="&flashhome;"> 的 "Macromedia Flash Player 5" 二源碼。
<item><package>freewrl</package>：VRML 瀏覽器和 Netscape 外掛程式
<item>...
</list>
</sect1>

<!-- CJK and X moved to bottom with different name to locale section -->

</sect>

<sect id="ssh">SSH
<p>
SSH (Secure SHell) 是連接網際網路的一個安全方式。Debian 納入的 free 的 SSH 版本為 OpenSSH，由 <package>ssh</package> 套件取得。

<sect1 id="ssh-basics">SSH 的基礎
<p>
首先，安裝 OpenSSH 伺服器和用戶端程式。
<example>
# apt-get update && apt-get install ssh
</example>
如果妳需要啟動 OpenSSH 伺服器，請移除 <file>/etc/ssh/sshd_not_to_be_run</file>。
<p>
SSH 有兩種認證的協定：
<list>
<item>SSH 協定版本 1: 
 <list compact>
<item>Potato 發行版本只支援該協定。
<item>可使用的認證方式：
  <list compact>
<item>RSAAuthentication: 以 RSA identity key 為主的使用者認證
<item>RhostsAuthentication: 以 .rhosts 的主機認證
 (不安全, 預設為取消)
<item>RhostsRSAAuthentication: .rhosts 認證與 RSA host key 的結合(預設為取消)
<item>ChallengeResponseAuthentication: RSA challenge-response authentication
<item>PasswordAuthentication: 密碼為主的認證
  </list>
 </list>
<item>SSH 協定版本 2: 
 <list compact>
<item>Woody 發行版本主要使用該協定。
<item>可使用的認證方式：
  <list compact>
<item>PubkeyAuthentication: 以 public key 為主的使用者認證
<item>HostbasedAuthentication: 以 <file>.rhosts</file> 或
 <file>/etc/hosts.equiv</file> 並結合 
 public key 的用戶主機認證 (預設為取消)
<item>ChallengeResponseAuthentication: challenge-response authentication
<item>PasswordAuthentication: 密碼為主的認證
  </list>
 </list>
</list>

<p>
請特別注意這些差異，尤其是轉換到 Woody 或使用其他非 &debian; 的系統。
<p>
詳情請參閱 <file>/usr/share/doc/ssh/README.Debian.gz</file>,
<manref name="ssh" section="1">, 
<manref name="sshd" section="8">,
<manref name="ssh-agent" section="1">, 和
<manref name="ssh-keygen" section="1">。

<p>
底下是主要的設定檔案：

<list>

<item><file>/etc/ssh/ssh_config</file>: 預設的 SSH 用戶端設定檔。
 參閱 <manref name="ssh" section="1">.  注意項目：

 <list compact>
<item><tt>Host</tt>: 限制符合匹配條件所指定的 
  (直到下一個 Host 保留字) 主機 
<item><tt>Protocol</tt>: 指定 SSH 的協定版本。  
 預設為 "2,1"。
<item><tt>PreferredAuthentications</tt>: 指定 SSH2 用戶端
 認證方式。預設為 
"hostbased,publickey,keyboard-interactive,password"。
<item><tt>PasswordAuthentication</tt>: 如果妳想採用密碼
 登入，妳必須確定該欄的值不是 <tt>no</tt>。
<item><tt>ForwardX11</tt>: 預設為取消。執行指令時加入
 "<tt>-X</tt>" 參數可強制啟動。
 </list>

<item><file>/etc/ssh/sshd_config</file>: 預設的 SSH 伺服器設定檔。
 參閱 <manref name="sshd" section="8">.  注意項目：

 <list compact>
<item><tt>ListenAddress</tt>: 指定 <prgn>sshd</prgn> 監聽的本地端位址。
 多個值是可允許的。
<item><tt>AllowTcpForwarding</tt>: 預設為取消。  
<item><tt>X11Forwarding</tt>: 預設為取消。  
 </list>

<item><file>$HOME/.ssh/authorized_keys</file>: 該列表為用戶端以該帳號連接到主機的公開金鑰(public key)。
參閱 <manref name="ssh-keygen" section="1">。

<item><file>$HOME/.ssh/identity</file>: 
參閱 <manref name="ssh-add" section="1">
和 <manref name="ssh-agent" section="1">.
</list>

<p>
底下的命令會從用戶端建立 <prgn>ssh</prgn> 連線。
<example>
$ ssh username@hostname.domain.ext
$ ssh -1 username@hostname.domain.ext # Force SSH version 1
$ ssh -1 -o RSAAuthentication=no -l username foo.host
    # force password on SSH1
$ ssh -o PreferredAuthentications=password -l username foo.host
    # force password on SSH2
</example>
對使用者而言，<prgn>ssh</prgn> 功能會比 <prgn>telnet</prgn> 聰明和安全 
(將不會有 ^] 問題)。

</sect1>

<sect1 id="ssh-forward">Port forwarding for SMTP/POP3 tunneling
<p>
如果妳想建立一個從本地端埠號 4025, 連接<var>遠端伺服器</var>埠號 25 的管線, 以及透過<prgn>ssh</prgn>從本地端埠號 4110 <var>遠端伺服器</var>埠號110, 請在本地主機執行:
<example>
# ssh -q -L 4025:remote-server:25 4110:remote-server:110 \
           username@remote-server
</example>
在網際網路上, 這是安全建立連線到 SMTP/POP3 伺服器的方式.
設定遠端主機的 <file>/etc/ssh/sshd_config</file> 檔案中 <tt>AllowTcpForwarding</tt> 項目, 將其值填入 <tt>yes</tt>.
</sect1>

<sect1 id="ssh-rsa">以少許密碼連線 &ndash; RSA
<p>使用 RSAAuthentication (SSH1 protocol) 或 PubkeyAuthentication (SSH2 protocol) 可免去記憶每一台遠端主機的登入密碼.
<p>
在遠端的系統上, 個別設定 <file>/etc/ssh/sshd_config</file> 檔案中的 "RSAAuthentication yes" 或 "PubkeyAuthentication yes".
<p>
然後在本地產生認證金鑰並安裝公開金鑰到遠端主機:
<example>
$ ssh-keygen          # RSAAuthentication: RSA1 key for SSH1
$ cat .ssh/identity.pub | ssh user1@remote \
        "cat - &gt;&gt;.ssh/authorized_keys"
...
$ ssh-keygen -t rsa   # PubkeyAuthentication: RSA key for SSH2
$ cat .ssh/id_rsa.pub | ssh user1@remote \
        "cat - &gt;&gt;.ssh/authorized_keys"
...
$ ssh-keygen -t dsa   # PubkeyAuthentication: DSA key for SSH2
$ cat .ssh/id_dsa.pub | ssh user1@remote \
        "cat - &gt;&gt;.ssh/authorized_keys"
</example>
執行 "<tt>ssh-keygen -p</tt>" 後可更改通關密碼.
記得測試連線以驗證設定正確. 為避免問題, 使用 "<tt>ssh -v</tt>".
<p>
妳可增加額外的選項到<prgn>authorized_keys</prgn>項目來限制主機並指定特定指令. 詳情參閱 <manref name="sshd" section="8">.
<p>
注意, SSH2 支援 <tt>HostbasedAuthentication</tt>. 為了使它運作, 妳必須更改伺服器機器上的<file>/etc/ssh/sshd_config</file>檔案, 將 <tt>HostbasedAuthentication</tt> 設定成 <tt>yes</tt>,或者設定在用戶端機器上的 <file>$HOME/.ssh/config</file> 檔案.
</sect1>

<sect1 id="ssh-client">與不同的 SSH 用戶端程式溝通
<p>
還有其他非 Unix-like 平台的 free SSH 用戶端程式.
<taglist>
<tag>Windows
<item><url id="&puttyhome;" name="puTTY"> (GPL)
<tag>Windows (cygwin)
<item>SSH in <url id="&cygwinhome;" name="cygwin"> (GPL)
<tag>Macintosh Classic
<item><url id="&macsshhome;" name="macSSH"> (GPL) [注意, Mac OS X 有內建 OpenSSH; 使用 Terminal application 中的 <tt>ssh</tt>]
</taglist>
也請參閱 <url id="&sfdochome;" name="SourceForge.net, site documentation">,"6. CVS Instructions".

<sect1 id="ssh-agent">設定 <prgn>ssh-agent</prgn>
<p>
設定通關密語來保護妳的 SSH 認證金鑰是比較安全。如果尚未設定，執行<tt>ssh-keygen -p</tt>來設定它。
<p>
以<ref id="ssh-rsa">描述的密碼為主的方式連線到遠端主機，將你的公開金鑰(例如：<file>~/.ssh/id_rsa.pub</file>)放在遠端主機的<file>~/.ssh/authorized_keys</file>。
<example>
$ ssh-agent bash # 或改執行 zsh/tcsh/pdksh 程式
$ ssh-add ~/.ssh/id_rsa
Enter passphrase for /home/osamu/.ssh/id_rsa:
Identity added: /home/osamu/.ssh/id_rsa (/home/osamu/.ssh/id_rsa)
$ scp <var>foo</var> <var>user@remote.host:foo</var>
 ... no passphrase needed from here on :-)
$^D
 ... terminating ssh-agent session
</example>
針對 X server 而言，正常的 &debian; 啟動的 script 會執行 <prgn>ssh-agent</prgn> 來當父程式。所以你只需要執行 <prgn>ssh-add</prgn> 一次。
<p>
更多訊息請參閱 <manref name="ssh-agent" section="1"> 和 <manref name="ssh-add" section="1">。
</sect1>

<sect1 id="ssh-trouble">SSH 錯誤解決
<p>
如果你遇到問題，檢查設定檔的權限並加入"<tt>-v</tt>"參數來執行 <prgn>ssh</prgn>。
<p>
當你是 root 且有防火牆上的問題，改使用"<tt>-P</tt>"參數；這會避免使用伺服器的1&ndash;1023的埠號。
<p>
如果連線到遠端站台的<prgn>ssh</prgn>連線突然失效，它可能是系統管理者在測試的關係，大部份在系統維護時改變<prgn>host_key</prgn>的值。確定是這個原因造成的而非他人試著駭入並竄改遠端主機的名稱，則移除掉本地端的<file>$HOME/.ssh/known_hosts</file>的<prgn>host_key</prgn>項目就能重獲得連線。
</sect1>

</sect>

<sect id="mail">Mail
<p>
郵件設定可分成三個種類：
<list>
<item>郵件傳送代理(MTA)：<prgn>exim4</prgn>, <prgn>exim</prgn>, <prgn>postfix</prgn>,  <prgn>sendmail</prgn>, <prgn>qmail</prgn>, <prgn>ssmtp</prgn>,  <prgn>nullmailer</prgn>, ...
<item>郵件工具：<prgn>procmail</prgn>, <prgn>fetchmail</prgn>, <prgn>mailx</prgn>, <prgn>crm114</prgn>, ...
<item>郵件用戶代理(MUA)：<prgn>mutt</prgn>, <prgn>emacs</prgn>+<prgn>gnus</prgn>, ...
</list>

<sect1 id="mta">郵件傳送代理 (MTAs)
<p>
針對全功能的 MTA 來說，使用 Woody 中的 <package>exim</package> 和 Sarge 中的 <package>exim4</package>。
<footnote>
接下來的部份以 <prgn>exim</prgn> 為例子。Sarge 的話則以 <prgn>exim4</prgn> 取代。
</footnote>
參考文件：
<list compact>
<item>針對 <package>exim</package> 的 <package>exim-doc</package> 和 <package>exim-doc-html</package> 套件
<item>針對 <package>exim4</package> 的 <package>exim4-doc-info</package> 和 <package>exim4-doc-html</package>
<item><url id="&eximhome;">
</list>
如果妳考量安全性，另一個可以接受的 MTA 是 <package>postfix</package>。<package>sendmail</package>和 <package>qmail</package>都納入 &debian; 套件庫中，但不推薦。
<p>
如果妳的隨身系統，例如筆記型電腦不需要 MTA 的 relay 功能，那麼妳可考慮使用這些輕量級的套件：
<list compact>
<item><prgn>ssmtp</prgn>：需要 SMTP 連線且支援別名，或者
<item><prgn>nullmailer</prgn>：可spool但不支援別名。
</list>
在寫本文時，我發現 <prgn>exim</prgn> 更適合我的工作電腦--筆記型電腦。
<p>
安裝底下不相容 <prgn>exim</prgn> 的套件時，妳就必須移除 <prgn>exim</prgn>：
<example>
# dpkg -P --force-depends exim
# apt-get install nullmailer         # 或 ssmtp
</example> 

<sect2 id="exim-smart">Smarthost
<p>
如果您的網路連線是消費性質的，如撥接型，而您想使用 <prgn>exim4</prgn> 或 <prgn>exim</prgn> 在您的主機上，請先確認送出的郵件是透過 ISP 或其他供應商提供的 smarthost 機制。
<footnote>
您必須遵循這規則並套用在撥接、DSL、cable或區網等透過寬頻路由器連接網路的主機。就算您的家用主機有固定 IP，還是建議採用該方法。大部份的工作站或家用服務可歸納於這個類型。
</footnote>
有許多好處：
<list compact>
<item>ISP 的 smarthost 通常有更可靠的連線使得 SMTP 重複寄送郵件。
<item><strong>動態 IP</strong>寄出的郵件可避免被當作撥接的 spam 列表。
<item>節省寄出多個收件者的郵件的頻寬。 
</list>
<p>
唯一可想到的壞處是：
<list compact>
<item>您的 ISP SMTP 服務如果出問題時的緊急救援處理。
<item>用來授課講解的實驗。
<item>您的主機是工作用網路伺服器。
</list>

<sect2 id="exim-base">Exim 基本設定
<p>
為了讓 <prgn>exim4</prgn> 或 <prgn>exim</prgn> 成為您的 MTA，請設定底下的檔案：
<example>
/etc/exim/exim.conf     執行 "eximconfig" 來建立和編輯 (exim)
/etc/exim4/*            執行 "dpkg-reconfigure exim4-config" 來建立和編輯 (exim4)
/etc/inetd.conf         註解 smtp 的敘述使 exim 能獨立運行
/etc/email-addresses    加入改寫郵件來源位置的列表
</example>
執行 <prgn>exim4</prgn> 或 <prgn>exim</prgn> 並加入 <tt>-brw, -bf, -bF, -bV, ...</tt> 等參數可用來檢查分析器。

<sect2 id="addr-catchall">在 Exim 下設定不存在的電郵位址的垃圾桶
<p>
在 <file>/etc/exim/exim.conf</file> (Woody 或更新的版本) 的
DIRECTORS 部份，在最後的地方 (localuser: director 之後)
加入清潔指揮器來處理該指揮器無法反解的位址 (per Miquel van Smoorenburg)：
<example>
catchall:
  driver = smartuser
    new_address = <var>webmaster@mydomain.com</var>
</example>
<p>
如果需要了解每個 Virtual Domain 詳細的處理方式，請在 <file>/etc/exim/exim.conf</file> 加入底下的敘述（這對我有用但沒完整測試過）：
<example>
*@yourdomain.com ${lookup{$1}lsearch*{/etc/email-addresses} \
        {$value}fail} T
</example>
然後加入 "*" 項目到 <file>/etc/email-addresses</file>。
</sect2>

<sect2 id="addr-rewrite">在 Exim 下設定寄出郵件的位址重寫
<p>
<!-- Derrick 'dman' Hudson dman@dman.ddts.net -->
寄出郵件的位址重寫會產生適當的 "From:" 標頭，使用 <prgn>exim</prgn> 能輕鬆達成該功能。只要設定 <file>/etc/exim/exim.conf</file> 檔案最後的部份：
<example>
*@host1.something.dyndns.org \
  "${if eq {${lookup{$1}lsearch{/etc/passwd}{1}{0}}} {1}  \
   {$0}{$1@something.dyndns.org}}"  frFs
</example>
這將會重寫所有符合 <tt>*@host1.something.dyndns.org</tt> 的位址。
<enumlist>
<item>它搜尋 <file>/etc/password</file> 檔案中的使用者 ($1) 是否為本機帳號。
<item>如果是，將會重寫位址中 ($0) 帳號所在的部份。
<item>如果不是，則重寫網域的部份。
</enumlist>

<sect2 id="smtp-aauth">在 Exim 下設定 SMTP 認證
<p>
部份 SMTP 服務如 yahoo.com 需要 SMTP 認證才能寄信。設定 <file>/etc/exim/exim.conf</file> 如下所示：
<example>
remote_smtp:
  driver = smtp
  authenticate_hosts = smtp.mail.yahoo.com
...

smarthost:
  driver = domainlist
  transport = remote_smtp
  route_list = "* smtp.mail.yahoo.com bydns_a"
...

plain:
  driver = plaintext
  public_name = PLAIN
  client_send = "^cmatheson3^this_is_my_password"
</example>
不要忘記最後一行的雙引號喔。

<sect1 id="fetchmail">擷取信件l &ndash; Fetchmail
<p>
<prgn>fetchmail</prgn> 是一套以 daemon 模式運行的郵件擷取軟體。它會透過 ISP 來擷取 POP3 帳號的郵件到本地端的郵件系統。設定檔案：
<example>
/etc/init.d/fetchmail   
/etc/rc?.d/???fetchmail 預設以優先權 30 來執行 update-rc.d fetchmail
/etc/fetchmailrc        設定檔 (權限 600，擁有者為 fetchmail)
</example>
<p>
Potato 版本中，敘述如何從 <prgn>init.d</prgn> script 以 daemon 模式啟動 <prgn>fetchmail</prgn> 是錯誤的(Woody 已經修正)。參閱 <url id="&examples;" name="example scripts"> 的 <file>/etc/init.d/fetchmail</file> 和 <file>/etc/fetchmailrc</file> 檔案。
<p>
如果您的郵件標頭因為 ISP 的郵件程式增加了 ^M 符號，請加入 "stripcr" 參數到 <file>$HOME/.fetchmailrc</file>：
<example>
options fetchall no keep stripcr
</example>
</sect1>

<sect1 id="procmail">處理郵件 &ndash; Procmail
<p>
<prgn>procmail</prgn> 是本地端郵遞和分析程式。使用者必須先建立 <file>$HOME/.procmailrc</file> 才能使用它。範例：<url id="&examples;" name="_procmailrc">
</sect1>

<sect1 id="crm114">使用 <package>crm114</package> 來處理垃圾郵件
<p>
<package>crm114</package> 套件提供了 <prgn>/usr/share/crm114/mailfilter.crm</prgn> script，該 script 是以 CRM114 所撰寫而且題攻了一個非常有效的垃圾信分析器，餵垃圾信給它就能訓練其處理能力。
<p>
CRM114 是一套小和用來設計分析器的語言。搭配 grep 能發揮出更大的功能。參閱 <manref name="crm" section="1">。
</sect1>

<sect1 id="mutt">閱讀郵件 &ndash; Mutt
<p>
使用 <prgn>mutt</prgn> 搭配 <prgn>vim</prgn> 來當作郵件用戶代理 (MUA)。請設定 <file>~/.muttrc</file>；例如：

<example>
# use visual mode and "gq" to reformat quotes
set editor="vim -c 'set tw=72 et ft=mail'"
#
# header weeding taken from the manual (Sven's Draconian header weeding)
#
ignore *
unignore from: date subject to cc
unignore user-agent x-mailer
hdr_order from subject to cc date user-agent x-mailer
auto_view application/msword
....
</example>
<p>
加入底下的敘述到 <file>/etc/mailcap</file> 或 <file>$HOME/.mailcap</file> 來顯示 HTML 郵件和 MS Word 夾檔：
<example>
text/html; lynx -force_html &percnt;s; needsterminal;
application/msword; /usr/bin/antiword '&percnt;s'; copiousoutput;
description="Microsoft Word Text"; nametemplate=&percnt;s.doc
</example>

</sect1>

</sect>

<sect id="l10n">Localization (l10n) 
<p>
&debian; 是國際化的，支援越來越多的語言和區域使用規則。下一節列出目前 &debian; 支援不同語言的差異性，下下一節則討論 <strong>localization</strong>，自訂您工作環境的步驟，允許目前選擇語言的輸入和輸出和日期規則，數字和貨幣格式以及不同於其他區域的差異。

<sect1 id="languages">localization 的基礎
<p>
有許多不同的方式來自定 localization 和 國際語言的支援。

<sect2 id="keyboard">Localizing 鍵盤
<p>
&debian; 發行版本支援了將近兩打的鍵盤對應表。在 Woody 系統，執行底下指令重新設定鍵盤：

<list compact>
<item><tt>dpkg-reconfigure --priority=low console-data # console</tt>
<item><tt>dpkg-reconfigure --priority=low xserver-xfree86   # XF4</tt>
<item><tt>dpkg-reconfigure --priority=low xserver-common-v3 # XF3</tt>
</list>
</sect2>

<sect2 id="data-stream">Localizing 資料檔案
<p>
過半數以上的 Debian 軟體支援處理非美國 ASCII 字元的資料，透過 glibc 的 <strong>locale</strong> 所提供的 LC_CTYPE 環境變數。
   
    <list compact>
    <item>8-bit clean：幾乎所有的程式
    <item>其他 Latin 字元集(例如 ISO-8859-1 or ISO-8859-2)：半數以上的程式
    <item>雙位元組(multibyte)語言，例如中文、日文、韓文：許多新程式
    </list>
</sect2>

<sect2 id="display">Localizing 顯示
<p>
X 能顯示任何編碼，包括 UTF-8並支援所有字型。該列表不只支援 8-bit 字型也包括 16-bit 字型，例如中文、日文和韓文。雙位元組字元輸入法是透過 <ref id="x-input"> 技術達到輸入的功能。參閱 <ref id="x-cjk"> 和 <ref id="x-utf-8">。
<p>
日文 EUC 代碼也能在 (S)VGA graphics 主控台下透過 <package>kon2</package> 顯示。目前有另一個新的日文顯示套件--<package>jfbterm</package>，也是利用 frame-buffer 主控台。在這些主控台環境，日文輸入法必須仰賴軟體的提供。使用 <package>egg</package> 套件搭配 Emacs 和日文化的 <package>jvim</package> 來使用 Vim 環境。
<p>
安裝非 Unicode 字型到 X 就能在 X 下顯示任何編碼的文件。所以不用太擔心字型的編碼問題。
</sect2>

<sect2 id="translation">Localizing 訊息和文件
<p>
許多的文字訊息和文件已經翻譯好並納入 &debian; 系統，例如錯誤訊息，標準的程式輸出，選單和說明文件。
目前說明文件支援的語言有--日文、西班牙文、芬蘭文、法文、匈牙利文、義大利文、日文、韓文、波蘭文、葡萄牙文、中文和俄羅斯文，只要安裝<tt>manpages-<var>LANG</var></tt>(<var>LANG</var> 是一個以逗號分隔的兩個字母的 ISO 國家代碼列表，執行 <tt>apt-cache search manpages-|less</tt> 來取得系統提供的 Unix 說明文件) 套件就能取得。
<p>
要存取 NLS 說明文件，使用者必須設定 LC_MESSAGE 環境變數。例如，以義大利文的說明文件來說，LC_MESSAGE 必須設定成 <tt>it</tt>。<prgn/man/ program 將會搜尋 <file>/usr/share/man/it/</file> 底下的義大利文的說明文件。
</sect2>
</sect1>

<sect1 id="locales">Locales
<p>
Debian 支援 <strong>locale</strong> 機制。 Locale 是一套允許程式提供適合的輸出和對應協定功能的技術，例如字元集、日期和時間格式、貨幣符號...等。它使用環境變數來決定適合的作法。舉例來說，假設您安裝了美式英文和德文的區域資料到系統，許多程式的錯誤訊息可變成多語言化：
<example>
$ LANG="en_US" cat foo
cat: foo: No such file or directory
$ LANG="de_DE" cat foo
cat: foo: Datei oder Verzeichnis nicht gefunden
</example>
Glibc 的功能以函式提供給程式呼叫。參閱 <manref name="locale" section="7">。

<sect1 id="base-locale">locales 簡介
<p>
完整的 locale 描述包含三個部份：<tt>xx_YY.ZZZZ</tt>。
<list compact>
<item><strong><tt>xx</tt></strong>：ISO 639 語言代碼(英文小寫)
<item><strong><tt>YY</tt></strong>：ISO 3166 國家代碼(英文大寫)
<item><strong><tt>ZZZZ</tt></strong>：代碼集合，也就是字元集或編碼標示？
</list>
<p>
關於語言代碼和國家代碼，請參閱<tt>info gettext</tt>中的相關敘述。
<p>
請注意這個代碼集合部份可能被"內部標準化"，為了完成跨平台的相容性，移除所有的<tt>-</tt>和轉換所有的字元為英文小寫。典型的代碼集合為：
<list compact>
  <item><strong>UTF-8</strong>：符合所有區域的萬國碼，大部份是 1-3 個八字元組成(new de facto standard)
  <item><strong>ISO-8859-1</strong>: western Europe (de facto old standard)
  <item><strong>ISO-8859-2</strong>: eastern Europe (Bosnian, Croatian, Czech,
       Hungarian, Polish, Romanian, Serbian, Slovak,  Slovenian)
  <item><strong>ISO-8859-3</strong>: Maltese
  <item><strong>ISO-8859-5</strong>: Macedonian, Serbian
  <item><strong>ISO-8859-6</strong>: Arabic
  <item><strong>ISO-8859-7</strong>: Greek
  <item><strong>ISO-8859-8</strong>: Hebrew
  <item><strong>ISO-8859-9</strong>: Turkish
  <item><strong>ISO-8859-11</strong>: Thai (=TIS-620)
  <item><strong>ISO-8859-13</strong>: Latvian, Lithuanian, Maori
  <item><strong>ISO-8859-14</strong>: Welsh
  <item><strong>ISO-8859-15</strong>: western Europe with euro
  <item><strong>KOI8-R</strong>: Russian
  <item><strong>KOI8-U</strong>: Ukrainian
  <item><strong>CP1250</strong>: Czech, Hungarian, Polish (MS Windows origin)
  <item><strong>CP1251</strong>: Bulgarian, Byelorussian (MS Windows origin)
  <item><strong>eucJP</strong>: Unix style Japanese (=ujis)
  <item><strong>eucKR</strong>: Unix style Korean 
  <item><strong>GB2312</strong>: Unix style Simplified Chinese (=GB, =eucCN) for zh_CN
  <item><strong>Big5</strong>: Traditional Chinese for zh_TW
  <item><strong>sjis</strong>: Microsoft style Japanese (Shift-JIS) 
</list>
As for the meaning of basic encoding system jargons:
<list compact>
<item><strong>ASCII</strong>: 7 bits (0-0x7f)
<item><strong>ISO-8859-?</strong>: 8 bits (0-0xff)
<item><strong>ISO-10646-1</strong>: Universal Character Set (UCS) (31 bits, 0-0x7fffffff)
<item><strong>UCS-2</strong>: First 16 bit of UCS as straight 2 Octets (Unicode: 0-0xffff)
<item><strong>UCS-4</strong>: UCS as straight 4 Octets (UCS: 0-0x7fffffff)
<item><strong>UTF-8</strong>: UCS encoded in 1-6 Octets (mostly in 3 Octets)
<item><strong>ISO-2022</strong>: 7 bits (0-0xff) with the escape sequence.
ISO-2022-JP is the most popular encoding for the Japanese e-mail.
<item><strong>EUC</strong>: 8 bits + 16 bits combination (0-0xff), Unix style
<item><strong>Shift-JIS</strong>: 8 bits + 16 bits combination (0-0xff), Microsoft
style.
</list>
ISO-8859-?, EUC, ISO-10646-1, UCS-2, UCS-4, 和 UTF-8 共用同一個 7-bit ASCII 字元代碼。 EUC 或 Shift-JIS 使用 high-bit 字元(0x80-0xff)來指示部份的編碼是 16-bit。UTF-8 也是使用 high-bit 字元(0x80-0xff) 來指示非 7-bit 字元序列位元組而這也是大部分編碼完整的系統處理非 ASCII 字元的方式。
<p>
請注意 Unicode 實作位元組順序的差異：
<list compact>
<item><strong>Standard  UCS-2, UCS-4</strong>: big endian
<item><strong>Microsoft UCS-2, UCS-4</strong>: little endian for ix86 (針對特定機器)
</list>
字元集的轉換請參閱 <ref id="recode">。
更多訊息請參閱 <url id="&intro-i18n;" name="Introduction to i18n">。

<sect1 id="activate-locales">啟動 locale 支援
<p>
&debian; <strong>不</strong>預先編譯所有的 locales。<file>/usr/lib/locale</file> 目錄下的 locales 資料(包含預設的 "C")是針對您的系統編譯出來的。如果您預期的 locale 並不存在，您有兩個作法：
<list compact>
 <item>編輯 <file>/etc/locale.gen</file> 加入想要的 locale，然後以 root 權限執行 <prgn>locale-gen</prgn> 來編譯它。參閱 <manref name="locale-gen" section="8"> 和 "SEE ALSO" 段落的說明文件。
 <item>執行 <tt>dpkg-reconfigure locales</tt> 來重新設定 <package>locales</package> 套件。如果尚未安裝，安裝 <package>locales</package> 套件會呼叫 debconf 介面讓您選擇需要的 locales 並編譯該資料庫。
 <!--  XXX FIXME XXX 
 <item>Run <prgn>localedef</prgn> manually from user account to compile 
   the locale database and use it by setting 
   <tt>LOC_PATH</tt> 
   environment variable.  For example for <tt>en_GB.UTF-8</tt>:
   <example>
$ localedef -v -c -i en_GB -f UTF-8 <var>somewhere/</var>en_GB.UTF-8
$ export LOC_PATH=<var>somewhere/</var>
   </example>
 -->
</list>

<sect1 id="env-locale">啟動特定的 locale
<p>
底下的環境變數設定步驟是針對程式給予特定的 locale 資訊：
<enumlist>
<item>LANGUAGE：該環境變數包含了依照優先權順序的冒號分隔的 locale 名稱列表。只有在 POSIX locale 被設定成非 "C" 以外的值才使用它[在 Woody 是這樣；Potato 發行版本 LANGUAGE 優先權總是高於 POSIX locale]。(GNU 擴充)
<item>LC_ALL：如果非空的，則該值會套用在所有的 locale 分類(POSIX.1)。通常是 ""(空的)。
<item>LC_*：如果非空的，則該值會套用在對應的分類(POSIX.1)。通常是 "C"。
<p>
      LC_* 變數是：
 <list compact>
<item>LC_CTYPE：字元分類和大小寫轉換。
<item>LC_COLLATE：字母字串順序比較。
<item>LC_TIME：日期和時間格式。
<item>LC_NUMERIC：非貨幣的數字格式。
<item>LC_MONETARY：貨幣格式。
<item>LC_MESSAGES：偵錯訊息和交談回應訊息的格式。
<item>LC_PAPER：紙張大小。
<item>LC_NAME：姓名格式。
<item>LC_ADDRESS：地址格式和位置資訊。
<item>LC_TELEPHONE：電話號碼格式。
<item>LC_MEASUREMENT：度量衡單位 (Metric or Other)。
<item>LC_IDENTIFICATION：辨識 locale 資訊的資料。
 </list>
<item>LANG：如果非空的且 LC_ALL 未定義，該值會套用在所有的 LC_* 分類，其值也是未定義的。(POSIX.1) 通常是 "C"。
</enumlist>
注意，有些程式(如 Netscape 4)會忽略 LC_* 的設定。
<p>
<prgn>locale</prgn> 程式能顯示目前使用的 locale 設定和可獲得的 locales 資料；參閱 <manref name="locale" section="1">。(注意：<tt>locale -a</tt> 列出系統支援的 locale；這並<em>不</em>表示所有的資料都編譯好！參閱 <ref id="activate-locales">。)

<sect1 id="ISO-locale">ISO 8601 日期格式 locale
<p>
locale 支援國際時間標準--<tt>yyyy-mm-dd</tt>(ISO 8601 日期格式)，是由 <tt>en_DK</tt> "English in Denmark" 這個 locale 所提供，然而，這有些好笑 :-)
這看來只能夠用在主控台畫面下執行<prgn>ls</prgn>的時候。

<!-- beyond locale moved to below -->

<sect1 id="iso-8859-1">US (ISO-8859-1) 的範例
<p>
加入底下的敘述到 <file>~/.bash_profile</file>：
<example>
LC_CTYPE=en_US.ISO-8859-1
export LC_CTYPE
</example>

<sect1 id="france"> France with Euro sign (ISO-8859-15)
<p>
加入底下的敘述到 <file>~/.bash_profile</file>：
<example>
LANG=fr_FR@euro
export LANG
LC_CTYPE=fr_FR@euro
export LC_CTYPE
</example>
<p>
按照<ref id="keyboard"> 設定法式鍵盤--"AZERTY"；安裝<package>manpages-fr</package>套件加入法文說明文件。US 的 Right-Alt 鍵在歐洲被稱為 Alt-Gr。按下該組合鍵和其他按鍵後會產生許多特別的腔調字元。例如，Alt-Gr+E 會產生 Euro 記號。
<p>
大部分的西歐語系也是同樣的設定方式。
<p>
參閱 <url id="&debian-euro-support;" name="Debian Euro HOWTO"> 來加入歐洲新的貨幣格式。法文的更多訊息請參閱 <url id="&debian-fr-howto;" name="Utiliser et configurer Debian pour le francais"> 。

<sect1 id="x-cjk">多語系的 X 視窗系統範例
<p>
讓我們來建立一個多語系的 X 視窗環境且同時支援日文，英文，德文和法文以及不同終端機下支援 EUC, UTF-8 和 ISO-8859-1 的編碼。
<p>
我將會展示如何自訂 &debian; 選單系統。參閱 <url id="&f-menu;"> 的 &debian; 選單系統。我也會示範建立一個 <prgn>mozilla</prgn> 網頁瀏覽器捷徑。
 <footnote>
這在個範例上，有兩個問題會影響到<prgn>blackbox</prgn>2003的發行版本。下指令時是在 <tt>sh -c</tt> 環境下。另外，root 不需要建立 <file>~/.menu/*</file> 項目，改用 <file>/etc/menu/*</file> 取代。
 </footnote>
<list>

 <item>使用 <ref id="l10n"> 章節所提及的方式加入日文 ja_JP.eucJP 的 locale 和其他需要的 locale 資料。（全部）

 <item>安裝 Kana-to-Kanji 轉換系統和字典 (針對日文語系)：
  <list compact>
  <item><package>canna</package> &ndash; 本地端伺服器 ("free-beer" license)，或
  <item><package>freewnn-jserver</package> &ndash; 加入網路功能的伺服器 (Public Domain)
  </list>

 <item>安裝日文輸入法系統 (針對日文語系)：
  <list compact>
  <item><package>kinput2-canna</package> &ndash; X 下 或
  <item><package>kinput2-canna-wnn</package> &ndash; X 下和
  <item><package>egg</package> &ndash; 在主控台下就能搭配 Emacsen 直接輸入日文(額外的)
  </list>

 <item>安裝相容的終端機 (針對所有語系)：
  <list compact>
  <item><package>xterm</package> &ndash; X (支援 ISO-8859-1 and UTF-8)，
  <item><package>kterm</package> &ndash; X (支援日文 EUC)，和
  <item><package>mlterm</package> &ndash; X (支援多語系)。
  </list>

 <item>加入所有日文字體套件。(針對所有語系)

 <item>依照 <ref id="custom-x"> 章節提及的方式，建立 <file>~/.xsession</file> 並設定使用者專屬的 X 環境(針對所有語系)：
 
<example>
#!/bin/sh
# This makes X work when I su to root.
if [ -z "$XAUTHORITY" ]; then
        XAUTHORITY=$HOME/.Xauthority
        export XAUTHORITY
fi

# Set specific environment through debian menu system.
# Reset locale
unset LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES 
unset LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT 
unset LC_IDENTIFICATION LC_ALL LANG LANGUAGE PAGER
# set locale default in X
LANG=C
# export locale
export LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES 
export LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT 
export LC_IDENTIFICATION LC_ALL LANG LANGUAGE PAGER
###
# activate input method for Japanese with kinput2
kinput2 &
XMODIFIERS="@im=kinput2"
export XMODIFIERS
# How about blackbox window manager (lightweight)
exec blackbox
#exec xfwm
#exec wmaker
</example>

 <item>針對 Linux 主控台設定 <file>~/.bash_profile</file> 的 locale 資訊 (針對所有語系)。
 
 <item>移除 <file>~/.bashrc</file> 已有的 locale 設定 (針對所有語系)。

 <item>建立新的檔案到<file>/etc/menu/</file>(針對所有語系)。
 <list compact>
 <item><file>/etc/menu/xterm-local</file>：(加入新項目到選單)
 <footnote>
使用一個不會重複到其他套件名稱的名字。
 </footnote>
<example>
?package(xterm):\
 needs=x11\
 section=XShells\
 longtitle="XTerm: terminal emulator (en_US.ISO-8859-1)"\
 title="XTerm (en_US.ISO-8859-1)"\
 command="sh -c 'LC_ALL=en_US.ISO-8859-1 xterm'"
?package(xterm):\
 needs=x11\
 section=XShells\
 longtitle="XTerm: terminal emulator (de_DE.ISO-8859-1)"\
 title="XTerm (de_DE.ISO-8859-1)"\
 command="sh -c 'LC_ALL=de_DE.ISO-8859-1 xterm -T xterm-de'"
?package(xterm):\
 needs=x11\
 section=XShells\
 longtitle="XTerm: terminal emulator for X with Unicode support (Japanese)"\
 title="UXTerm (ja_JP.UTF-8)"\
 command="sh -c 'LC_ALL=ja_JP.UTF-8 uxterm'"
</example>
 <item><file>/etc/menu/kterm</file>：(強制複寫系統預設)
 <footnote>
使用一個不會重複到這個套件的名字。
 </footnote>
<example>
?package(kterm):\
 needs="x11"\
 section="XShells"\
 command="sh -c 'LC_ALL=ja_JP.eucJP PAGER=w3m /usr/X11R6/bin/kterm -xim'" \
 title="Kanji Terminal"
?package(kterm):\
 needs="x11"\
 section="XShells"\
 command="sh -c 'LANG=ja_JP.eucJP \
          LC_MESSAGES=en_US.ISO-8859-1 PAGER=w3m /usr/X11R6/bin/kterm -xim'" \
 title="Kanji Terminal (bilingal)"
</example>
 <item><file>/etc/menu/mozilla-local</file>：(加入新捷徑)
 <footnote>
 <tt>section="/"</tt> 的斜線會使該項目加入到初始的選單中，<tt>title=" Mozilla Navigator"</tt> 前頭的空白會使該項目加入到列表最頂端。
 </footnote>
<example>
?package(mozilla-browser):needs="x11" section="/" \
        title=" Mozilla Navigator" command="mozilla-1.5" hints="Web browsers" \
        icon=/usr/share/pixmaps/mozilla.xpm
</example>
 <item>從 root 帳號執行 <prgn>update-menus</prgn>。
 </list>
 <item>加入底下的敘述到 <file>~/.muttrc</file> (針對日文語系)：

<example>
# UTF-8 support is not popular in popular Japanese EMACS environment
# 7-bit encoding of iso-2022-jp is easier for everyone.
# default encoding order = us-ascii --&gt; iso-8859-1 --&gt; iso-2022-jp
set send_charset="us-ascii:iso-8859-1:iso-2022-jp"
set allow_8bit=no
</example>
 <item>啟動 XIM <prgn>kinput2</prgn> 給 X 程式 (針對日文語系)：
  <list compact>
  <item>加入 <tt>*inputMethod: kinput2</tt> 和 <tt>KTerm*VT100*OpenIm:
  true</tt> 到您的 X 資源檔--<file>~/.Xresources</file>  (Debian 應該會有某些方式自動完成這個動作)。
  <item>有些程式 (例如 <prgn>mlterm</prgn>) 也允許您設定 <tt>*inputMethod:</tt> 和其他資訊，並在執行時動態載入(在 <prgn>mlterm</prgn> 按下<strong>Ctrl-MouseButton-3</strong>)。
  </list>
 <item>執行 <tt>startx</tt> 來啟動 X 或任一個顯示管理器 (<prgn>xdm</prgn>, <prgn>gdm</prgn>, <prgn>kdm</prgn>, <prgn>wdm</prgn>, ...)  (針對所有語系)。
 <item>在<prgn>kterm</prgn>下啟動一個相容日文的程式，例如 Vim 6, (x)emacs21, mc-4.5, mutt-1.4, ...(針對日文語系)(Emacs 看起來是滿多人用的，雖然我不使用它。)
 <item>按下 <strong>Shift+Space</strong> 來啟動/關閉日文字元輸入模式(針對日文語系)。 
 <item>在該語系相容的終端機下閱讀翻譯好的說明文件 (針對所有語系)。
</list>
針對 CJK 語系支援，請參閱接下來的章節和 <url id="&suse-cjk;" name="SuSE pages for CJK">。

<sect1 id="x-input">其他的 X 輸入法
<!-- I need feed back from Chinese and Korean people for here -->
<p>
還有許多其他的 X 輸入法支援的套件：
<example>
Language   LC_CTYPE     XIM server XMODIFIERS              Start key
Japanese   ja_JP*       kinput2    "@im=kinput2"           Shift-Space
Korean     ko_KR*       ami        "@im=Ami"               Shift-Space
Chinese(T) zh_TW.Big5   xcin       "@im=xcin-zh_TW.big5"   Ctrl-Space
Chinese(S) zh_CN.GB2312 xcin       "@im=xcin-zh_CN.GB2312" Ctrl-Space
</example>
<p>
日文輸入法 <prgn>kinput2</prgn> 程式是包在 <package>kinput2-canna-wnn</package>、<package>kinput2-canna</package> 和 <package>kinput2-wnn</package> 套件。理論上還需要辭典服務器如 <package>canna</package> 和 <package>freewnn-jserver</package> 才能使用。

<!--
<p>
Korean and Chinese may also use dictionary server such as 
<package>freewnn-kserver</package> and
<package>freewnn-cserver</package> too.
-->

<sect1 id="x-term">X 終端機
<p>
還有許多 X 終端機支援 8-bit 編碼，安裝相關的字型就能正常顯示：
<list compact>
  <item><package>xterm</package> &ndash; X 終端機
  <item><package>gnome-terminal</package> &ndash; Gnome 的 <package>xterm</package> 
  <item><package>konsole</package> &ndash; KDE 的 <package>xterm</package> 
  <item><package>rxvt</package> &ndash; VT102 終端機 (lighter)
  <item><package>aterm</package> &ndash; Afterstep WM 的 VT102 終端機
  <item><package>eterm</package> &ndash; Enlightment WM 的 VT102 終端機
  <item><package>wterm</package> &ndash; WindowMaker WM 的 VT102 終端機
</list>
<p>
<package>xterm</package>在 UTF-8 的編碼環境下就能支援雙位元組編碼(參閱 <ref id="x-utf-8">)。其他傳統編碼的終端機還在開發中(2003年時)。底下是已經支援傳統編碼的套間：
<list compact>
  <item><package>aterm-ml</package> &ndash; Multi-lingual
  <item><package>kterm</package> &ndash; Multi-lingual (Japanese, ...)
  <item><package>rxvt-ml</package> &ndash; Multi-lingual
  <item><package>wterm-ml</package> &ndash; Multi-lingual 
  <item><package>cxterm-big5</package> &ndash; Chinese (Trad., Big5)
  <item><package>cxterm-gb</package> &ndash; Chinese (Simp., GB)
  <item><package>cxterm-ks</package> &ndash; Chinese (KS)
  <item><package>cxterm-jis</package> &ndash; Japanese
  <item><package>hanterm-classic</package> &ndash; Korean (Hangul)
  <item><package>hanterm-xf</package> &ndash; Korean (Hangul)
  <item><package>hztty</package> &ndash; Chinese (GB, Big5, zW/HZ)
</list>
使用 <prgn>kterm</prgn> 時(或其他終端機)，您需要在選單上按下 Ctrl+滑鼠中鍵才能啟動 XIM。

<sect1 id="x-utf-8">支援 UTF-8 的 X 終端機
<p>
支援 UTF-8 的終端機有 XFree86 4.x 版本的 <package>xterm</package> 套件裡的 <prgn>uxterm</prgn> 程式。它支援所有的語言。它是一個啟動後續程式使用 "UXTerm" X 資源集的一個 wrapper(參閱<manref name="xterm" section="1">)。
<p>
舉例還說，使用漂亮的大字型來顯示英文、俄文、日文、中文和韓文文字時，安裝對應的字型套件後加入底下的設定到 <file>~/.Xresources</file> 檔案。
<example>
! set large font
UXTerm*font: -misc-fixed-medium-r-normal-*-18-120-100-100-c-90-iso10646-1
! Use XIM for Japanese
*inputMethod: kinput2
</example> 
然後執行 <tt>xrdb -merge ~/.Xresources</tt> 來更新 X 資源，就像 <ref id="xresources"> 這一節所提及的。
<p>
雖然大部分的終端機程式，例如 <package>vim</package>, <package>mutt</package> 和 <package>emacs</package> 已經相容 UTF-8(Woody-Sarge 之後的版本)了。但還是有少許的程式，如 <package>mc</package> 還不支援 UTF-8，可幸的是還有支援了 8-bit 編碼。如果您編輯 7-bit ASCII 字元到未知編碼或是混用編碼的檔案，建議是使用無法辨識 locale 且支援 8-bit 編碼的編輯器是比較安全。
<p>
未來，每個人都會用到這些東西。參閱 <url id="&unicode-howto;" name="The Unicode HOWTO">。

<sect1 id="fb-utf-8">支援 UTF-8 的 framebuffer 主控台
<p>
在 <prgn>debian-installer</prgn> 程式裡，<package>bterm</package> 是提供 FB 主控台支援 UTF-8 的套件。

<sect1 id="beyond-locale">locales 之外
<p>
當您第一次設定好<strong>國際語言環境</strong>之後，請使用 <prgn>tasksel</prgn> 或 <prgn>aptitude</prgn> 來安裝您的語言環境對應的套件。該套件的安裝選單也適用於多國語言設定。如果您在安裝過程時遇到相依性問題時，取消和避免安裝與系統衝突的套件。您或許需要使用 <prgn>update-alternative</prgn> 來回復指令安裝前的狀態，因為新安裝的套件有可能有更高的優先權覆蓋指令的連結。
<p>
使用 glibc 2.2 版的新版程式通常具備了國際化。所以特定的區域版本程式如 <prgn>jvim</prgn> 就不需要另外安裝，因為新的 <prgn>vim</prgn> 6.0 版本已經支援了它所提供的功能。事實上，還是有些小問題。由於 <prgn>jvim</prgn> 是針對日文輸入法支援所編譯的，所在在終端機上處理其他日文相關的文件，它還是很值得推薦的 :-)
<p>
應用程式有時需要忽略<tt>locale</tt>的設定才能適用於現有的工作環境。安裝 <package>language-env</package> 套件和使用其內建的指令 <prgn>set-language-env</prgn> 能很輕鬆地解決這些麻煩的步驟。
<p>
請參閱國際化相關文件，<url id="&intro-i18n;" name="Introduction to i18n">。該文件是針對開發者撰寫但也適用於系統管理者。
</sect1>

</sect>
<sect id="m17n">Multilingualization (m17n)
<p>
安裝 <package>language-env</package> 套件就能完成 <ref id="l10n"> 的設定步驟，該套件的目標就是將所有的語系視為一種語言。這些套件也使用傳統的編碼方式處理文字檔案。在這個環境下，您不能混用法文和日文文字，因為他們不相容 ISO-8859-1 和 EUC-JP。
<p>
使用 Gnome 和 KDE 程式在 UTF-8 的 locale 設定下，就能獲得多國語系的 UTF-8 桌面。（Sarge）在這樣的環境下，您能混用英文、中文、俄文和日文字元在任何 UTF-8 相同的軟體中。
<footnote>
在多國語系環境下，<package>language-env</package> 套件並不那麼實用。
</footnote>
<p>
在這樣的系統下，新的多國語系輸入法建議使用 <package>scim</package>。由 <package>scim</package> 提供的輸入法只需按下 Ctrl-Space 就能啟動或關閉。滑鼠點選 SCIM 的控制視窗就能切換輸入轉換引擎。
<p>
<package>vim</package> offers the multilingualized environment and can
handle both UTF-8 and conventionally encoded files (EUC-JP, ISO-8859-1,
...) when it is run under the UTF-8 console such as
<prgn>gnome-teminal</prgn>.  See vim help message with pressing [Esc]
and typing <tt>:help mbyte.txt</tt>.
</sect>

</chapt>

