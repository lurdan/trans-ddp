<!-- CVS revision of this document "# Revision is not used here.#"  -->
<!-- CVS revision of original english document "1.38"  -->
<!--Line width ruler (ruler uses 78 characters)     34567890123456789012345-->
<!-- Last complete proofreading (and comparing with the original english
     file) was done for rev. 1.25 (en). -->
<chapt id="tutorial">&debian;-Tutorials

<p>
Dieser Abschnitt bietet eine grobe Orientierung zur Linuxwelt für den
Neueinsteiger. Sollten Sie Linux schon eine Weile nutzen, so können Sie
Ihr Wissen testen.

<sect>Informationsquellen
<p>
Die ultimativen Referenzen für Debian sind im <url id="&debiandoc;"
name="Debian-Dokumentations-Projekt (DDP)"> zu finden. Viele dieser Dokumente
werden in <file>/usr/share/doc/</file> installiert. Man sollte auch in
<file>/usr/share/doc-base/</file> schauen, dies enthält Verweise auf die
Dokumentation auf dem System. Man kann 
<tt>export CDPATH=.:/usr/share/doc:/usr/src/local</tt> zu
<file>~/.bash_profile</file> hinzufügen, um einfacher auf die
Dokumentationsverzeichnisse zuzugreifen.
<p>
Das <url id="&linuxdoc;" name="Linux-Dokumentations-Projekt (LDP)"> hat die
maßgeblichsten allgemeinen Linux-Referenzen. Der LDP-Inhalt wird gewöhnlich
in <file>/usr/share/doc/HOWTO/</file> installiert.
<p>
Man kann durch Dokumente auf lokalen und entfernten FTP-Servern mittels
F9 im Midnight Commander (vergleiche <ref id="mc">) navigieren.
</sect>

<sect>Die Linux-Konsole

<sect1 id="login">Login
<p>
In einem gewöhnlichen Linux-System gibt es sechs unabhängige Pseudo-Terminals. 
Man kann zwischen diesen durch gleichzeitiges Drücken von Alt und
F1&ndash;F6 wechseln. Jedes Pseudo-Terminal erlaubt
ein unabhängiges Einloggen. Das Mehrbenutzersystem ist eine großartige
Unix-Eigenschaft und sehr suchterzeugend.
<p>
Es ist unter Unix eine gute Angewohnheit, sich für die meisten Arbeiten als
normaler Nutzer anzumelden. Ich muss zugeben, dass ich den
Administrationszugang (root) öfters als nötig der Einfachheit halber und aus
Schlamperei verwendete.
<p>
Nun verwende ich regelmäßig einen gewöhnlichen Zugang mit den Kommandos
<tt>sudo</tt>, <tt>super</tt> oder <tt>su -c</tt> um begrenzten root-Zugang
zu erhalten.  
</sect1>

<sect1 id="newuser">Hinzufügen eines neuen Nutzers
<p>
Nach der Systeminstallation richte ich gewöhnlich einen normalen Nutzerzugang
ein. Ist der Nutzername "pinguin", so wird
<example>
# adduser pinguin
</example>
ihn erzeugen.
<p>
Ich nutze das <tt>vigr</tt>-Kommando, um <file>/etc/group</file> wie folgt zu
editieren:
<example>
adm:x:4:admin
src:x:40:admin, debian, ...
...
</example>
Im standardmäßig installierten System, können Mitglieder der
<tt>adm</tt>-Gruppe viele Logdateien in <file>/var/log/</file> lesen und
<prgn>xconsole</prgn> nutzen. Der <tt>staff</tt>-Gruppe gehört
<file>/home</file> an, was den Mitgliedern das Verwalten von Nutzerzugängen
erlaubt. Der <tt>src</tt>-Gruppe gehört <file>/usr/src/</file> an, was zur
Kernelkompilation, etc. genutzt wird. Für die offizielle Bedeutung von
Nutzern und Gruppen vergleichen Sie <url id="&f-users-and-groups;"
name="Nutzer und Gruppen">.
<p>
Ich persönlich verwende die <tt>adm</tt>-Gruppe für Nutzer, die
administrative Aufgaben erfüllen und das exklusive <prgn>su</prgn>-Privileg
haben (vergleichen Sie <ref id="wheel">) und <tt>src</tt> für CVS (siehe
<ref id="cvs">).
<p>
Überprüfen Sie <prgn>adduser</prgn>, <prgn>addgroup</prgn>, 
<prgn>vipw</prgn>, <tt>vipw -s</tt>, <prgn>vigr</prgn> und
<tt>vigr -s</tt> für die korrekte Konfiguration von Nutzern und Gruppen.
</sect1>

<sect1>Wie man den Rechner herunterfährt
<p>
Wie nahezu jedes moderne Betriebssystem, das Dateien im Speicher
zwischenspeichert, muss Linux richtig heruntergefahren werden, bevor der
Rechner ausgeschaltet werden kann. Das entsprechende Kommando im
Mehrbenutzerbetrieb ist:
<example>
# shutdown -h now
</example>
Im Einzelnutzermodus ist
<example>
# poweroff -i -f
</example>
zu verwenden. Warten Sie bis das System "System halted" ausgibt und schalten
Sie danach aus. Wenn APM im BIOS und Linux aktiviert ist, schaltet sich der
Rechner selbstständig aus. Man vergleiche <ref id="apm"> für Details.
</sect1>

<sect1>Kommandozeilenbasiertes Editieren
<p>
Die Standard-Shell <prgn>bash</prgn> besitzt einige Fähigkeiten zur
Bearbeitung von alten Eingaben (der History). Benutzen Sie einfach die
Cursor-auf Taste um alte Eingaben zurückzuholen und danach wie üblich die
Cursor-Tasten. Andere wichtige Tastenkombinationen sind:
<example>
Strg-U:             Lösche die Zeile bis vor den Cursor
Strg-D:             Beende die Eingabe
markieren mit linker Maustaste:
                    Auswahl in die Zwischenablage kopieren (gpm)
mittlere Maustaste: Einfügen der Zwischenablage an der
                    Cursorposition (gpm)
Strg-V TAB:         Eingabe eines Tabulators ohne Expandierung.
</example>
<p>
In einer normalen Linux Konsole funktioniert nur die linke
Strg-Taste wie erwartet. <!-- rechte Alt Taste ist AltGr -->
</sect1>

<sect1>Kommandoausführung
<p>
Ein typisches Kommando wird durch die folgende Shell-Zeile ausgeführt:
<example>
$ LC_ALL=de ls -la
</example>
Hier wird das Programm <prgn>ls</prgn> im Vordergrund ausgeführt, mit der
für Deutsch auf <tt>de</tt> gesetzten Umgebungsvariablen <tt>LC_ALL</tt>.
<tt>-la</tt> ist das Kommandozeilen-Argument und bewirkt eine detaillierte
Ausgabe. Wird die Kommandozeile mit dem <tt>&amp;</tt>-Zeichen
abgeschlossen, so wird das Kommando im Hintergrund ausgeführt. Dies
ermöglicht es Nutzern, mehrere Programme in einer einzigen Shell zu starten.
<p>
Die Ausführung des Kommandos kann durch folgende Tastenkombinationen
beeinflusst werden.
<example>
Strg-C:          Beenden des Programms
Strg-Z:          Temporäres Unterbrechen des Programms
Strg-S:          Unterbrechen der Bildschirmausgabe
Strg-Q:          Ausgabe wieder aktivieren
Strg-Alt-Entf:   Neustarten/Beenden des Systems (siehe /etc/inittab)
</example>
Für das Management der Programmausführung vergleiche 
<manref name="bash" section="1"> für <tt>jobs</tt>, <tt>fg</tt>, <tt>bg</tt>
und <tt>kill</tt>.
</sect1>

<sect1>Die grundlegensten Kommandos zur Erinnerung
<p>
Die folgenden Kommandos sind für Unix-Systeme fundamental:
<example>
ls, ls -al, ls -d, pwd, cd, cd ~Benutzer, cd -, 
cat /etc/passwd, less, bg, fg, kill, killall, 
uname -a, type <var>Kommandoname</var>, sync, netstat,
ping, traceroute, top, vi, ps aux, tar, zcat, 
grep, ifconfig, ...
</example>
<p>
Sie können mehr über diese Kommandos herausfinden, indem Sie sie in der
Kommandozeile oder nach <tt>man</tt> bzw. <tt>info</tt> eingeben. Viele Linux
Kommandos geben eine kurze Meldung zur Benutzung aus, wenn sie mit einer der
folgenden Methoden gestartet werden:
<example>
$ Kommandoname --help
$ Kommandoname -h
</example>
<tt>whatis <em>Kommandoname</em></tt> gibt eine einzeilige Zusammenfassung
zu jedem Kommando mit einer Handbuchseite auf dem System aus.
</sect1>

<sect1>Das X-Window-System
<p>
Das X-Window-System lässt sich von der Konsole mit
<!-- Osamu: formal name here per request in "man 7 X" manpage -->
<example>
# exec startx
</example>
starten. Ein Rechtsklick auf den Hintergrund bringt eine Menüauswahl zum
Vorschein.
</sect1>

<sect1>Wichtige Tastaturkommandos
<p>
Einige bedeutende Tastenkombinationen für die Linux-Konsole sind
("Plus", "Minus" beziehen sich auf den numerischen
Ziffernblock):
<example>
Alt-F1 bis F6:       Wechsel auf anderes Pseudo-Terminal
Strg-Alt-F1 bis F6:  Wechsel auf anderes Pseudo-Terminal
                     (aus X-Windows, DOSEMU, etc.)
Alt-F7:              Wechsel zu X-Windows
Strg-Alt-Minus:      Ändern der Auflösung in X-Windows
Strg-Alt-Plus:       Ändern der Auflösung in X-Windows (umgekehrte
                     Reihenfolge)
Strg-Alt-Rücktaste:  Beenden des X11-Server-Programms
Alt-X, Alt-C, Alt-V: In üblichen Windows/Mac-Tastenkombinationen
                     zum Ausschneiden, Kopieren und Einfügen wird
                     die Strg-Taste durch Alt in einigen
                     Programmen wie Netscape Composer ersetzt.
</example>
</sect1>
</sect>

<sect id="mc">Midnight Commander (MC)
<p>
Der Midnight Commander (MC) ist ein GNU "Schweizer Armeemesser" für die
Linux-Konsole und andere textbasierte Umgebungen.  

<sect1>Installation von MC
<p>
<example>
# apt-get install mc
</example>
Danach sollten Sie <file>~/.bashrc</file> (oder
<file>/etc/bash.bashrc</file>, was von <file>.bashrc</file> verwendet wird)
entsprechend der Handbuchseite <manref name="mc" section="1"> unter <tt>-P</tt>
ändern. Dies bewirkt eine Änderung des Arbeitsverzeichnisses von MC beim
Beenden.
<p>
Befindet man sich in einem Terminal wie z.B. <prgn>kon</prgn> oder
<prgn>Kterm</prgn> für japanische Unterstützung, das verschiedene
graphische Zeichen unterstützt, so hilft eventuell das Hinzufügen von
<tt>-a</tt> zu MCs Kommandozeile bei Problemen.
</sect1>

<sect1>Starten von MC
<p>
<example>
$ mc
</example>
MC bietet für alle Dateioperationen Menüpunkte an, so dass nur minimaler
Aufwand nötig ist.
</sect1>

<sect1>Dateimanager
<p>
Standardmäßig gibt es zwei Verzeichnisansichten mit Dateilisten. Ein anderer
nützlicher Modus ist das Setzen des rechten Fensters auf "Info", um
Dateizugriffsrechte und andere Informationen zu sehen. Es folgen einige
wichtige Tastenkombinationen. Mit einem laufenden <prgn>gpm</prgn>-Daemon
kann man auch die Maus nutzen. (Stellen Sie sicher, dass Sie die Shift-Taste
drücken, um das normale Verhalten von Entfernen und Einfügen im MC zu
erhalten.)
<list compact>
<item>F1: Hilfe
<item>F3: interner Dateibetrachter
<item>F4: interner Editor
<item>F9: aktiviert das Menübar-Menü
<item>F10: beendet den Midnight Commander
<item>Tab: wechseln zwischen den beiden Fenstern
<item>Einf: markieren einer Datei für eine Operation wie Kopieren
<item>Entf: löschen einer Datei (Seien Sie vorsichtig &ndash; setzen
            Sie MC auf sicheres Löschen.)
<item>Cursor-Tasten: selbsterklärend
</list>
</sect1>

<sect1>Kommandozeilen-Tricks
<p>
<list>
<item>Ein <prgn>cd</prgn> wechselt das Verzeichnis im dargestellten Fenster.
<item>Strg-Enter oder Alt-Enter kopiert den Dateinamen
      in die Kommandozeile. Dies kann mit dem <prgn>cp</prgn>- oder
      <prgn>mv</prgn>-Programm und dem Kommandozeilen-Editor genutzt werden.
<item>Alt-Tab bestimmt die Dateinamenvervollständigung in der Shell.
<item>Man kann das Startverzeichnis für beide Fenster als Argumente an MC
      übergeben, z.B. <tt>mc /etc /root</tt>.
<item>Esc + <var>Ziffer</var> == F<var>n</var> (d.h.
      Esc + `1' = F1, etc.;
      Esc + `0' = F10).
<item>Esc == Alt (= Meta, M-), d.h.
      Esc + `c' steht für Alt-c.
</list>
</sect1>

<sect1 id="mcedit">Editor
<p>
Der interne Editor besitzt ein interessantes Entfernen-und-Einfügen-Schema.
Drücken von F3 markiert den Start einer Auswahl, ein zweites
F3 markiert das Ende der Auswahl und hebt diese hervor. Danach kann
man den Cursor bewegen. Beim Betätigen von F6 wird der hervorgehobene
Bereich an die Cursorposition verschoben. Drückt man F5, so wird
der ausgewählte Bereich an die aktuelle Cursorposition kopiert und eingefügt.
F2 sichert die Datei und F10 beendet den Editor. Die
meisten Cursortasten funktionieren wie üblich.
<p>
Dieser Editor kann direkt mit einer Datei aufgerufen werden:
<example>
$ mc -e Datei
$ mcedit Datei
</example>
<p>
Es handelt sich nicht um einen Mehr-Fenster-Editor, aber man kann mehrere
Linux-Konsolen nutzen, um den selben Effekt zu erreichen. Um zwischen
Fenstern zu kopieren, sind die Alt-F<var>n</var> Tasten zum Wechseln
der virtuellen Konsole und "Datei-&gt;Datei einfügen" oder "Datei-&gt;In
Datei kopieren" zum Verschieben eines Teils einer Datei in eine andere zu
verwenden.
<!-- Osamu: you could try "&rarr;" instead of "-&gt;" to get a right arrow
above. It's valid SGML, but I don't know if all browsers support it. 

For this version 1, let us keep it as is for consistency.  
I will think about it for version 2,  Thanks. 

Anyway, PS/PDF compile is real problem
-->
<p>
Dieser interne Editor kann durch einen beliebig anderen externen Editor
ersetzt werden.
<p>
Viele Programme nutzen die Umgebungsvariable <tt>EDITOR</tt> oder 
<tt>VISUAL</tt> um zu bestimmen, welcher Editor zu verwenden ist. Sollten Sie
mit <prgn>vim</prgn> nicht vertraut sein, setzen Sie diese auf
<tt>mcedit</tt>, indem Sie folgende Zeilen zu <file>~/.bashrc</file>
hinzufügen:
<example>
...
export EDITOR=mcedit
export VISUAL=mcedit
...
</example>
<p>
Ich empfehle, diese wenn möglich auf <tt>vim</tt> zu setzen. Die Verwendung
der vi(m)-Kommandos ist das richtige Vorgehen, da sie stets in einer 
Linux/Unix-Umgebung zu finden sind.
</sect1>

<sect1>Dateibetrachter
<p>
Dies ist ein guter Viewer und prima dazu geeignet, Wörter in Dokumenten zu
suchen. Ich nutze dies immer für Dateien im
<file>/usr/share/doc</file>-Verzeichnis.
Dies ist der schnellste Weg, um sich einen Überblick über
die mehr als umfangreiche Linux-Dokumentation zu verschaffen. Der
Dateibetrachter kann direkt mittels
<example>
$ mc -v Datei
</example>
gestartet werden. (Es ist zu beachten, dass einige Pakete die Regeln
verletzen und ihre Dokumentation noch unter <file>/usr/doc/</file> ablegen.)
</sect1>

<sect1>Auto-Start-Eigenschaften
<p>
Drückt man Enter für eine Datei, so wird ein entsprechendes Programm
den Inhalt der Datei verarbeiten. Dies ist eine sehr nützliche Eigenschaft
von MC.
<example>
ausführbare Dateien:  Kommando ausführen
man, html Dateien:    Darstellen des Inhalts mit Dateibetrachter
tar, gz, rpm Dateien: Inhalt als Unterverzeichnis einblenden
</example>
Damit diese Eigenschaften funktionieren, dürfen betrachtbare Dateien nicht
ausführbar sein. Ihr Status kann mittels des
<prgn>chmod</prgn>-Kommandos und dem Dateimenü von MC geändert werden.
</sect1>

<sect1>Virtuelles FTP-Dateisystem
<p>
MC kann zum Zugriff auf Dateien übers Internet mittels FTP genutzt werden.
Aktivieren Sie mittels F9 das Menü und drücken Sie dann `p'
für das virtuelle FTP-Dateisystem. Eine URL wird in der Form
<tt>Benutzername:Passwort@hostname.domainname</tt> eingegeben und MC stellt
daraufhin das entfernte Verzeichnis wie ein lokales dar.
</sect1>

</sect>

<sect id="file-system">Grundlagen des GNU/Linux-Dateisystems
<p>
Jede Datei und jedes Verzeichnis eines GNU/Linux-Systems ist mit einem Nutzer
verknüpft, der sie/es besitzt und einer Gruppe, zu welcher sie/es gehört.
Alle Dateiinformationen werden in einem <strong>Inode</strong> genannten 
Datensatz gespeichert.

<sect1 id="file-perm">Zugriffsrechte von Dateien und Verzeichnissen
<p>
Die Zugriffsrechte von Dateien und Verzeichnissen sind separat für die
folgenden drei Nutzerkategorien definiert:
<list compact>
<item>den <strong>Nutzer</strong> (user), der die Datei besitzt (u), 
<item>andere Nutzer der <strong>Gruppe</strong> (group), zu welcher die
      Datei gehört (g) und
<item>alle <strong>anderen</strong> (other) Nutzer (o).
</list>
<p>
Bei Dateien sind je folgende Rechte möglich:
<list compact>
<item><strong>lesbar</strong> (readable) (r): zum Auslesen des Inhalts der
      Datei
<item><strong>schreibbar</strong> (writable) (w): zum Modifizieren der Datei
<item><strong>ausführbar</strong> (executable) (x): zum Starten der Datei
      als Kommando
</list>
<p>
Für Verzeichnisse sind je folgende Rechte möglich:
<list compact>
<item><strong>lesbar</strong> (readable) (r): zum Anzeigen des
      Verzeichnisinhalts
<item><strong>schreibbar</strong> (writable) (w): zum Hinzufügen oder
      Entfernen von Dateien im Verzeichnis
<item><strong>ausführbar</strong> (executable) (x): zum Zugriff auf Dateien
      im Verzeichnis
</list>
Das <strong>ausführbar</strong>-Recht des Verzeichnisses bezieht sich nicht
nur auf das Lesen von Dateien im entsprechenden Verzeichnis, sondern auch
auf das Bestimmen der Attribute wie Größe und Modifizierungszeit.
<p>
Um diese und einige andere Informationen zu Dateien und Verzeichnissen zu
erhalten, kann <prgn>ls</prgn> genutzt werden. Vergleiche <manref name="ls"
section="1">.  
Wird <prgn>ls</prgn> mit der <tt>-l</tt>-Option gestartet, so werden die
folgenden Informationen in der folgenden Reihenfolge angezeigt:
<list compact>
<item>der <strong>Dateityp</strong> (erstes Zeichen)
 <list compact>
 <item>-: normale Datei
 <item>d: Verzeichnis (directory)
 <item>l: symbolischer Link
 <item>c: zeichenorientiertes Gerät
 <item>b: blockorientiertes Gerät
 </list>
<item>die <strong>Zugriffsrechte</strong> der Datei (die nächsten neun Zeichen
 sind je drei Zeichen für Nutzer, Gruppe und Andere in dieser Reihenfolge)
<item>die <strong>Anzahl der harten Links</strong> zur Datei
<item>der Name des <strong>Nutzers</strong> der die Datei besitzt
<item>der Name der <strong>Gruppe</strong> zu der die Datei gehört
<item>die <strong>Größe</strong> der Datei in Bytes
<item><strong>das Datum und die Zeit</strong> der Datei (Modifizierungszeit,
      mtime)
<item>der <strong>Name</strong> der Datei.
</list>
<p>
Um den Besitzer einer Datei zu ändern, wird <prgn>chown</prgn> von root
genutzt. Vergleiche <manref name="chown" section="1">. Zum Ändern der Gruppe
einer Datei, wird <prgn>chgrp</prgn> vom Besitzer der Datei oder root
verwendet. Vergleiche <manref name="chgrp" section="1">. Das Ändern der
Zugriffsrechte von Dateien oder Verzeichnissen erfolgt mit <prgn>chmod</prgn>
durch den Dateibesitzer oder root. Vergleiche <manref name="chmod"
section="1">.
<p>
Um z.B. einen Verzeichnisbaum dem Nutzer <var>nutzer</var> und der Gruppe
<var>gruppe</var> zuzuordnen, ist als root Folgendes auszuführen: 
<example>
# cd /Pfad/zum/Verzeichnis
# chown -R <var>nutzer</var>:<var>gruppe</var> .
# chmod -R ug+rwX,o=rX .
</example>
<p>
Es gibt drei weitere spezielle Zugriffsbits:
<list compact>
<item><strong>set user ID</strong> (s oder S anstatt Nutzer's x), 
<item><strong>set group ID</strong> (s oder S anstatt Gruppe's x) und
<item><strong>Sticky Bit</strong> (t oder T anstatt Andere's x).
</list>
Hier werden in der Ausgabe von <prgn>ls -l</prgn> diese Bits großgeschrieben,
wenn die ausführbar-Bits, die in der Ausgabe nicht mit dargestellt werden
können, nicht gesetzt sind.
<p>
Das Setzen der <strong>set user ID</strong> einer ausführbaren Datei, erlaubt
es einem Nutzer, die Datei mit den Rechten und der ID des Besitzers der Datei
auszuführen (z.B. <strong>root</strong>).
Ähnlich erlaubt das Setzen des <strong>set group ID</strong>-Rechts einer
ausführbaren Datei, dass diese mit der Gruppen-ID und den Gruppenrechten der
Datei (z.B. <strong>root</strong>) gestartet
wird. Dies kann zu Sicherheitsproblemen führen, deshalb erfordert das Setzen
dieser Bits spezielle Vorsicht.
<p>
Setzen der <strong>set group ID</strong> eines Verzeichnisses aktiviert das
BSD-artige Dateierzeugungs Schema, bei welchem alle im Verzeichnis erstellten
Dateien der Gruppe <strong>group</strong> des Verzeichnisses angehören. 
<p>
Das Setzen des <strong>Sticky Bits</strong> eines Verzeichnisses verhindert
das Entfernen einer Datei im Verzeichnis durch einen Nutzer, der nicht der
Besitzer ist. Um den Inhalt einer Datei in einem für alle oder auch für
Gruppenmitglieder schreibbaren Verzeichnis wie <file>/tmp</file> zu sichern,
genügt es nicht das <strong>schreibbar</strong>-Recht der Datei zu
entfernen, sondern es muss auch das <strong>Sticky Bit</strong> des
Verzeichnisses gesetzt werden. Andernfalls kann die Datei entfernt werden
und eine neue Datei mit gleichem Namen durch andere Nutzer mit Schreibrechten
im Verzeichnis angelegt werden.
<p>
Es folgen einige interessante Beispiele für Zugriffsrechte von Dateien.
<example>
$ ls -l /etc/passwd /etc/shadow /dev/ppp /usr/sbin/pppd
crw-rw----    1 root    dip   108,   0 Jan 18 13:32 /dev/ppp
-rw-r--r--    1 root    root      1051 Jan 26 08:29 /etc/passwd
-rw-r-----    1 root    shadow     746 Jan 26 08:29 /etc/shadow
-rwsr-xr--    1 root    dip     234504 Nov 24 03:58 /usr/sbin/pppd
$ ls -ld /tmp /var/tmp /usr/local /var/mail /usr/src
drwxrwxrwt    4 root    root      4096 Feb  9 16:35 /tmp
drwxrwsr-x   10 root    staff     4096 Jan 18 13:31 /usr/local
drwxrwsr-x    3 root    src       4096 Jan 19 08:36 /usr/src
drwxrwsr-x    2 root    mail      4096 Feb  2 22:19 /var/mail
drwxrwxrwt    3 root    root      4096 Jan 25 02:48 /var/tmp
</example>
</sect1>

<sect1 id="timestamp">Zeitmarken
<p>
Es gibt drei Arten von Zeitmarken für GNU/Linux Dateien:
<list compact>
<item><strong>mtime</strong>: die Modifizierungszeit (<tt>ls -l</tt>),
<item><strong>ctime</strong>: die Zeit der letzten Statusänderung
      (<tt>ls -lc</tt>) und
<item><strong>atime</strong>: die letzte Zugriffszeit (<tt>ls -lu</tt>).
</list>
Es ist zu beachten, dass <strong>ctime</strong> nicht der Zeitpunkt der
Dateierzeugung ist.  
<list compact>
<item>Das Überschreiben einer Datei ändert sowohl <strong>mtime</strong>,
      <strong>ctime</strong> als auch <strong>atime</strong> der Datei.
<item>Das Ändern der Rechte oder des Besitzers einer Datei ändert
      <strong>ctime</strong> und <strong>atime</strong> der Datei.
<item>Das Lesen einer Datei ändert <strong>atime</strong> der Datei.
</list>
Beachten Sie, dass selbst ein einfacher Lesezugriff auf eine Datei in einem
GNU/Linux-System normalerweise eine Schreiboperation erfordert, um die
<strong>atime</strong>-Zeit in der <strong>Inode</strong> anzupassen. Das
Mounten eines Dateisystems mit der <tt>noatime</tt>-Option unterlässt dies
und beschleunigt den Dateizugriff beim Lesen. Vergleiche <manref name="mount"
section="8">.
</sect1>

<sect1 id="links">Links
<p>
Es gibt zwei Methoden, um eine Datei <var>foo</var> mit einem anderen
Dateinamen <var>bar</var> zu verknüpfen.
<list compact>
<item>Ein <strong>harter Link</strong> (hard link) ist ein anderer Name für
      eine existierende Datei (<tt>ln <var>foo</var> <var>bar</var></tt>),
<item>Ein <strong>symbolischer Link</strong> (symlink) verweist auf eine
      andere Datei über den Namen (<tt>ln -s <var>foo</var>
      <var>bar</var></tt>).
</list>
Man vergleiche das folgende Beispiel für Änderungen der Anzahl der Links und
die feinen Unterschiede beim Anwenden des <prgn>rm</prgn>-Kommandos.
<example>
$ echo "ursprünglicher Dateiinhalt" &gt; <var>foo</var>
$ ls -l <var>foo</var>
-rw-r--r--    1 osamu    osamu           4 Feb  9 22:26 <var>foo</var>
$ ln <var>foo</var> <var>bar</var>     # hard link
$ ln -s <var>foo</var> <var>baz</var>  # symlink
$ ls -l <var>foo</var> <var>bar</var> <var>baz</var>
-rw-r--r--    2 osamu    osamu           4 Feb  9 22:26 <var>bar</var>
lrwxrwxrwx    1 osamu    osamu           3 Feb  9 22:28 <var>baz</var> -&gt; <var>foo</var>
-rw-r--r--    2 osamu    osamu           4 Feb  9 22:26 <var>foo</var>
$ rm <var>foo</var>
$ echo "neuer Dateiinhalt" &gt; <var>foo</var>
$ cat <var>bar</var>
ursprünglicher Dateiinhalt
$ cat <var>baz</var>
neuer Dateiinhalt
</example>
Alle symbolischen Links haben die Dateizugriffsrechte "rwxrwxrwx" wie im
obigen Beispiel gezeigt und deren Zugriffsrechte werden durch die Datei auf
die sie zeigen diktiert.
<p>
Das Verzeichnis <file>.</file> verweist auf das Verzeichnis in dem es sich
befindet, die Anzahl der Links für ein neues Verzeichnis beginnt bei 2. Das
Verzeichnis <file>..</file> verweist auf das übergeordnete Verzeichnis, die
Anzahl der Links eines Verzeichnisses erhöhen sich mit dem Erzeugen neuer
Unterverzeichnisse.
</sect1>
</sect>

<sect>Weiterführende Informationen
<p>
Es gibt viele gute Referenzen zum Einstieg in Unix. O'Reilly's Bücher sind
gewöhnlich gute Anleitungen für alle Computerthemen. Das LDP-Dokument
<url id="&tips-howto;" name="Linux Tipps HOWTO"> ist eine andere nützliche
Informationsquelle. Man vergleiche <ref id="support"> für weitere
Ressourcen.

</sect>

</chapt>
