<!-- CVS revision of this document "# Revision is not used here.#"  -->
<!-- CVS revision of original english document "1.98"  -->

<chapt id="install">Debian-System-Installationshinweise

<p>
Offizielle Dokumentation zur Installation von Debian ist unter
<url id="&stable-info;"> und <url id="&stable-install;"> zu finden.
<p>
Die Entwicklerversionen davon sind <url id="&testing-info;"> und
<url id="&testing-install;"> (befinden sich in Arbeit und sind manchmal
eventuell nicht vorhanden).
<p>
Obwohl dieses Kapitel ursprünglich für die Potato-Installation geschrieben
wurde, ist der größte Teil des Inhalts auf das Woody-Installationsprogramm
aktualisiert worden; beide sind sehr ähnlich. Da Sarge ein komplett anderes
Installationsprogramm verwenden wird, sollten Sie dies nur als Anhaltspunkt
für die Sarge-Installation verstehen.
Einige Schlüsselpakete haben auch geänderte Namen und Prioritäten. Zum
Beispiel ist der Standard-MTA von Sarge <package>exim4</package> anstatt
<package>exim</package> und <package>coreutils</package> wurde eingeführt,
um verschiedene Pakete zu ersetzen. Es ist eventuell nötig, einige Schritte
anzupassen.

<sect>Allgemeine Linux-System-Installationshinweise
<p>
Vergessen Sie nicht unter <url id="&debian-netinst;"> zu schauen, wenn Sie
nach einem kompakten CD-Image des &debian;-Installers suchen.
<p>
Die Verwendung der <tt>testing</tt>- oder <tt>unstable</tt>-Distribution
führt zum erhöhten Risiko, auf verschiedene Fehler zu stoßen.
Dieses Risiko kann durch ein Multi-Boot-Schema gemanagt werden, bei dem eine
stabilere &debian;-Distribution genutzt wird. Alternativ kann auch ein netter
Trick mit <prgn>chroot</prgn>, wie in
<ref id="chroot"> beschrieben, genutzt werden. Letzteres ermöglicht die
Nutzung verschiedener &debian;-Distributionen simultan auf verschiedenen
Konsolen.
<p>

<sect1>Grundlegendes zur Hardware-Kompatibilität
<p>
Linux ist zur meisten PC-Hardware kompatibel und kann auf fast jedem Rechner
installiert werden. Es war für mich so einfach wie eine
Windows-95/98/Me-Installation. Die Liste unterstützter Hardware wächst
beständig.
<p>
Sollten Sie einen Laptop besitzen, schauen Sie unter
<url id="&linonlap;" name="Linux auf Laptops">
für Hinweise zur Installation zu verschiedenen Marken und Modellen.
<p>
Meine Empfehlung zur Desktop-PC-Hardware ist "sei konservativ":
<list compact>
<item>SCSI statt IDE für die Arbeit, IDE/ATAPI-HD für private Nutzung.
<item>IDE/ATAPI-CD-ROM (oder -CD-RW).
<item>PCI statt ISA, insbesondere für die Netzwerkkarte (NIC).
<item>Verwende eine billige NIC. Tulip für PCI und NE2000 für ISA sind
      geeignet.
<item>Vermeide PCMCIA-Karten (Notebook) für die erste Linux-Installation.
<item>Keine USB-Tastatur, -Maus, ... es sei denn Sie
      lieben die Herausforderung.
</list>
<p>
Sollten Sie einen langsamen Rechner haben, so ist das vorübergehende Entfernen
und Einbauen der Festplatte in einen schnelleren Rechner für die
Installation eine gute Idee.
</sect1>

<sect1>Bestimmung der PC-Hardware und des Chipsatzes
<p>
Während der Installation wird man nach der eingebauten Hardware oder dem
Chipsatz des PCs gefragt. Manchmal sind diese Informationen nicht leicht zu
finden. Eine Möglichkeit ist:
<enumlist compact>
  <item>Öffnen des PC-Gehäuses.
  <item>Bestimmen der Aufdrucke auf den großen Chips auf der Graphik- und
        Netzwerkkarte, sowie den Chips nahe den seriellen und IDE-Anschlüssen.
  <item>Bestimmen der Kartennamen, die auf der Rückseite der PCI- und
        ISA-Karten aufgedruckt sind.
</enumlist>
</sect1>

<sect1>Bestimmung der PC-Hardware mit &debian;
<p>
Die folgenden Kommandos eines Linux-Systems sollten Aufschluss über aktuelle
Hardware und deren Konfiguration geben.
<example>
$ pager /proc/pci
$ pager /proc/interrupts
$ pager /proc/ioports
$ pager /proc/bus/usb/devices
</example>
Diese Kommandos können während der Installation in der Konsole nach Drücken
von Alt-F2 gestartet werden.
<p>
Nach der Basisinstallation können optionale Pakete wie
<package>pciutils</package>, <package>usbutils</package> und
<package>lshw</package> installiert werden, um erweiterte Informationen zum
System zu erhalten.
<example>
$ lspci -v | pager
$ lsusb -v | pager
# lshw | pager
</example>
<p>
Typische Verwendung von Interrupts:
<list compact>
  <item>IRQ0: Zeitausgabe (8254)
  <item>IRQ1: Tastatur-Controller
  <item>IRQ2: Kaskadierung zu IRQ8&ndash;IRQ15 bei PC-AT
  <item>IRQ3: zweiter serieller Anschluss (io-port=0x2F8)
        (<file>/dev/ttyS1</file>)
  <item>IRQ4: primärer serieller Anschluss (io-port=0x3F8)
        (<file>/dev/ttyS0</file>)
  <item>IRQ5: frei [Soundkarte (SB16: io-port=0x220, DMA-low=1, DMA-high=5)]
        <!--(war Festplatten-Interrupt beim XT) Linux is for 386 or later -->
  <item>IRQ6: Diskettenlaufwerks-Controller (io-port=0x3F0)
        (<file>/dev/fd0</file>, <file>/dev/fd1</file>)
  <item>IRQ7: paralleler Anschluss (io-port=0x378) (<file>/dev/lp0</file>)
  <item>IRQ8: Echtzeituhr (rtc)
  <item>IRQ9: Software-Interrupt (int 0x0A), Umleitung auf IRQ2
  <item>IRQ10: frei [Netzwerkkarte (NE2000: io-port=0x300)]
  <item>IRQ11: frei [(SB16-SCSI: io-port=0x340, SB16-IDE: io-port=0x1E8,0x3EE)]
  <item>IRQ12: PS/2-Maus
  <item>IRQ13: frei (war mathematischer Koprozessor 80287)
  <item>IRQ14: primärer IDE-Controller (<file>/dev/hda</file>,
        <file>/dev/hdb</file>)
  <item>IRQ15: sekundärer IDE-Controller (<file>/dev/hdc</file>,
        <file>/dev/hdd</file>)
</list>
Für alte nicht-PnP-ISA-Karten sollten Sie eventuell IRQ5, IRQ10 und IRQ11 auf
"non-PnP" im BIOS einstellen.
<p>
Für USB-Geräte werden die Geräteklassen in <file>/proc/bus/usb/devices</file>
mit <tt>Cls=<var>nn</var></tt> aufgeführt:
<list compact>
<item>Cls=00 : nicht benutzt
<item>Cls=01 : Audio (Lautsprecher, etc.)
<item>Cls=02 : Kommunikation (Modem, Netzwerkkarte, ...)
<item>Cls=03 : HID (Human Interface Device (Schnittstellen): Tastatur,
               Maus, Joystick)
<item>Cls=07 : Drucker
<item>Cls=08 : Massenspeicher (Diskettenlaufwerk, CD/DVD Laufwerk,
               Festplatte, Flash Speicher, ...)
<item>Cls=09 : Hub (USB Hub)
<item>Cls=255 : Hersteller spezifisch
</list>
Ist die Geräteklasse eines Gerätes nicht 255, so wird es von Linux unterstützt.
</sect1>

<sect1>Bestimmen der PC-Hardware mit anderen Betriebssystemen
<p>
Hardware-Informationen können auch von anderen Betriebssystemen erhalten
werden:
<p>
Man kann eine andere kommerzielle Linux-Distribution installieren. Die
Hardwareerkennung ist bei diesen oft besser, als dies bei Debian zurzeit der
Fall ist. (Diese Situation sollte ausgewogener sein, wenn
<prgn>debian-installer</prgn> mit Sarge eingeführt wird.)
<p>
In einem Windows-System kann die Hardware-Konfiguration durch Rechts-Klick
auf "Mein Computer" unter Eigenschaften / Gerätemanager erhalten werden. Die
Ressourcen wie IRQ, I/O-Portadressen sowie DMA sollten festgehalten werden.
Einige alte ISA-Karten müssen eventuell unter DOS konfiguriert werden.
</sect1>

<sect1>Ein Lilo-Mythos
<p>
"Lilo ist auf 1024 Zylinder beschränkt." Falsch!
<p>
Das neuere <prgn>lilo</prgn> das nach Debian-Potato verwendet wird, bietet
Unterstützung für lba32. Ist das BIOS des Motherboards aktuell genug um lba32
zu unterstützen, so sollte <prgn>lilo</prgn> in der Lage sein, auch von 
außerhalb der alten 1024-Zylindergrenze zu booten.
<p>
Es muss nur sichergestellt werden, dass die Zeile "lba32" irgendwo am Anfang
der <file>lilo.conf</file>-Datei hinzugefügt wird, wenn noch eine alte
<file>lilo.conf</file> vorhanden ist. Man vergleiche <file>&f-lilo;</file>.
</sect1>

<sect1 id="instgrub">GRUB
<p>
Der neue Bootloader <package>grub</package> des GNU-Hurd-Projekts kann auf
einem &debian;-Woody-System wie folgt installiert werden:
<example>
# apt-get update
# apt-get install grub-doc
# mc &f-grub-doc;
... lesen Sie den Inhalt
# apt-get install grub
# pager &f-grub;
... lesen Sie dies :)
</example>
Um das GRUB-Menü anzupassen, ist <file>&f-grub-menu;</file> zu editieren. Man
vergleiche <ref id="bootgrub"> zum Setzen von Bootparametern während des
Bootvorgangs, da sich dies leicht von der
<package>lilo</package>-Konfiguration unterscheidet.
</sect1>

<sect1 id="bootfloppy">Wahl der Boot-Disketten
<p>
In Potato nutzte ich IDEPCI für die normale Desktopinstallation. In Woody
bevorzuge ich bf2.4. Beide benutzen eine Version von
<package>boot-floppies</package> zum Erzeugen von Boot-Disketten.
<p>
Besitzen Sie eine PCMCIA-Netzwerkkarte, so müssen Sie die
Standard-Bootkonfiguration nutzen
(dies enthält die größte Anzahl von Disketten und
alle Treibermodule) und die Netzwerkkarte im PCMCIA-Menü konfigurieren; man
darf sie nicht im Standard-Netzwerk-Dialog einrichten.
<p>
Für spezielle Systeme kann es notwendig sein, eine angepasste Rettungsdiskette
zu erzeugen. Dies kann durch Ersetzen des Kernelimages namens "linux" auf der
&debian;-Rettungsdiskette, durch ein anderes komprimiertes Kernelimage, das
speziell für den Rechner erzeugt wurde, erreicht werden. Details sind in
<file>readme.txt</file> auf der Rettungsdiskette zu finden. Diese nutzt das 
MS-DOS-Dateisystem, so dass ein beliebiges System zum Auslesen und Editieren
verwendet werden kann. Dies sollte für Personen mit spezieller Netzwerkkarte,
etc. leicht zu bewältigen sein.
<p>
In Sarge wird wohl <prgn>debian-installer</prgn> und/oder 
<package>pgi</package> zur Erzeugung von Bootdisketten verwendet werden.
</sect1>

<sect1>Installation
<p>
Folgen Sie den offiziellen Anweisungen, die unter 
<url id="&stable-install;">
oder
<url id="&testing-install;"> (befindet sich in Arbeit und ist manchmal
eventuell nicht vorhanden) gefunden werden können.
<p>
Sollten Sie ein System mittels <prgn>boot-floppies</prgn> aus der <tt>testing</tt>
Distribution installieren, so kann es sein, dass Sie während der Installation
eine Konsole mittels Alt-F2 öffnen müssen, um in der Datei
<file>/etc/apt/sources.list</file> manuell Einträge von "stable" nach
"testing" zu ändern, um die APT-Quellen anzupassen.
<p>
Ich tendiere dazu, <prgn>lilo</prgn> in Partitionen wie <file>/dev/hda3</file>
zu installieren, während <prgn>mbr</prgn> in <file>/dev/hda</file> installiert
wird. Dies minimiert das Risiko, Bootinformationen zu überschreiben.
<p>
Während des Installationsvorgangs wähle ich folgende Werte.
<list compact>
<item>MD5-Passwörter "yes"
<item>shadow-Passwörter "yes"
<item>Install "advanced" (dselect **) und select
  <list compact>
    <item>Abwahl von emacs (falls gewählt), nvi, tex, telnet, talk(d); 
    <item>Auswahl von mc, vim und entweder nano-tiny oder elvis-tiny.
    <p>
     Vergleiche <ref id="dselect">. Selbst wenn Sie ein Emacs-Anhänger sind,
     vermeiden Sie es zunächst und begnügen Sie sich mit nano während der
     Installation. Man sollte auch andere große Pakete, so wie TeX (Potato
     wählte dies aus) zu diesem Moment noch nicht installieren. Vergleiche
     <ref id="bin-editor"> für den Grund, nano-tiny oder elvis-tiny jetzt zu
     installieren.
  </list>
<item>Alle Konfigurationsfragen während der Installationsdialoge der einzelnen
      Pakete mit "y" beantworten (ersetzt aktuellen Wert).
<item><package>exim</package>: wähle 2 für Rechner, da ich meine E-Mails durch
      den SMTP-Server meines Internetproviders (ISP) verschicke. 
</list>
<p>
Für weitere Informationen über dselect vergleiche <ref id="dselect">.
</sect1>

<sect1 id="ipmap">Hosts und IP im LAN
<p>
Beispiel einer LAN-Konfiguration (Klasse-C-Subnet: 192.168.1.0/24):
<example>
Internet
   |
   +--- Externer ISP für POP-Service (Zugriff mittels fetchmail)
   | 
  Access point ISP bietet DHCP-Service und SMTP relay service an
   |                     :
  Kabelmodem          (Dialup)
   |                     :
LAN-Gateway-Maschine, externer Port: eth0 (IP durch ISP's DHCP)
 altes Notebook (IBM Thinkpad, 486 DX2 50MHz, 20MB RAM)
 Linux 2.4 Kernel mit ext3 Dateisystem.
 "ipmasq" Paket (mit umfangreichem Patch, NAT und Firewall)
 "dhcp-client" Paket, konfiguriert für eth0 (überschreibt DNS-Werte)
 "dhcp" Paket konfiguriert für eth1
 starte "exim" als smarthost (Mode 2)
 starte "fetchmail" in großen Intervallen (zur Sicherheit)
 starte "bind" als Cache-Nameserver fürs Internet vom LAN
               als Nameserver fürs LAN-Netzwerk vom LAN
 starte "ssh" auf Port 22 und 8080 (Verbindung von überall)
 starte "squid" als Cache-Server für das Debianarchiv (für APT)
LAN-Gateway-Maschine, interner Port: eth1 (IP = 192.168.1.1, fest)
                         |
         +--- LAN-Switch (100base T) ---+
         |                              |
Einige feste IP-Clients im LAN Einige DHCP-Clients im LAN
(IP = 192.168.1.2-127, fest)   (IP = 192.168.1.128-200, dynamisch)
</example>
Man vergleiche <ref id="gateway"> für die Details zur Konfiguration des
Netzwerks und <ref id="net-router"> für die Details zur Konfiguration des
LAN-Gateway-Servers.
</sect1>

<sect1>Benutzerkonten
<p>
Um ein konsistentes Verhalten zwischen verschiedenen Systemen zu
gewährleisten, sind die ersten paar Benutzerkonten in meinem System stets
gleich.
<p>
Ich erzeuge immer zuerst ein normales Benutzerkonto mit einem Namen wie
"admin" (uid=1000) und leite die E-Mails an root an dies weiter. Diesem Konto
wird die Gruppe <tt>adm</tt> zugeordnet (siehe <ref id="wheel">) und es
können ihm einige root-Privilegien mit <prgn>su</prgn> (PAM-benutzend)
oder mit <prgn>sudo</prgn> zugeordnet werden. Vergleiche <ref id="newuser">
für Details.
</sect1>

<sect1>Anlegen von Dateisystemen
<p>
<sect2>Partitionierung der Festplatte
<p>
Ich bevorzuge die Verwendung verschiedener Partitionen für verschiedene
Verzeichnisbäume, um Schäden bei Systemabstürzen vorzubeugen. Ein Beispiel
dafür ist:
<example>
/          == (/ + /boot + /bin + /sbin)
           == 50MB+
/tmp       == 100MB+
/var       == 100MB+
/home      == 100MB+
/usr       == 700MB+ mit X
/usr/local == 100MB
</example>
<p>
Die Größe des <file>/usr</file>-Verzeichnis hängt sehr von installierten
X-Windows-Anwendungen und der Dokumentation ab. <file>/usr/</file> kann rund
300MB groß sein, wenn man nur mit der Konsole arbeitet, wobei 2GB&ndash;3GB
keine unübliche Größe ist, wenn man viele Gnome-Anwendungen installiert hat.

Wird <file>/usr/</file> zu groß, so ist das Verschieben von
<file>/usr/share/</file> auf eine andere Partition die effektivste Lösung.
Mit den neuen großen vorgefertigten Linux 2.4er-Kernel, kann <file>/</file>
mehr als 200MB benötigen.

<p>
Zum Beispiel ist der aktuelle Status meines Internet-Gateway-Rechners wie
folgt (Ausgabe des <tt>df -h</tt> Kommandos):
<example>
Filesystem          Größe Benut  Verf Ben&percnt; Eingehängt auf
/dev/hda3            300M  106M  179M  38&percnt; /
/dev/hda7            100M   12M   82M  13&percnt; /home
/dev/hda8            596M   53M  513M  10&percnt; /var
/dev/hda6            100M  834k   94M   1&percnt; /var/lib/cvs
/dev/hda9            596M  222M  343M  40&percnt; /usr
/dev/hda10           596M  130M  436M  23&percnt; /var/cache/apt/archives
/dev/hda11           1.5G  204M  1.2G  14&percnt; /var/spool/squid
</example>
(Der große reservierte Bereich für <file>/var/spool/squid/</file> ist für einen
Proxy-Cache für den Paketdownload.)
<p>
Es folgt die <tt>fdisk -l</tt> Ausgabe zur Veranschaulichung einer möglichen
Partitionierung:
<example>
# fdisk -l /dev/hda # Kommentar

/dev/hda1         1      41    309928+   6  FAT16 # DOS
/dev/hda2        42      84    325080   83  Linux # nicht benutzt
/dev/hda3  *     85     126    317520   83  Linux # root Partition
/dev/hda4       127     629   3802680    5  Extended
/dev/hda5       127     143    128488+  82  Linux swap
/dev/hda6       144     157    105808+  83  Linux
/dev/hda7       158     171    105808+  83  Linux
/dev/hda8       172     253    619888+  83  Linux
/dev/hda9       254     335    619888+  83  Linux
/dev/hda10      336     417    619888+  83  Linux
/dev/hda11      418     629   1602688+  83  Linux
</example>
Einige nicht benutzte Partitionen existieren. Diese sind für die Installation
einer zweiten Linux-Distribution oder als Erweiterung für wachsende
Verzeichnisbäume vorgesehen.

<sect2>Mounten von Dateisystemen
<p>
Das korrekte Mounten der obigen Dateisysteme wird durch folgende
<file>/etc/fstab</file> erreicht:
<example>

# /etc/fstab: statische Dateisystem-Informationen.
#
# Dateisystem Mountverzeichnis Typ  Optionen     dump Durchgang
/dev/hda3     /               ext2  defaults,errors=remount-ro 0 1
/dev/hda5     none            swap  sw                      0 0
proc          /proc           proc  defaults                0 0
/dev/fd0      /floppy         auto  defaults,user,noauto    0 0
/dev/cdrom    /cdrom       iso9660  defaults,ro,user,noauto 0 0
#
# einige separate Partitionen
/dev/hda7     /home           ext2  defaults                0 2
/dev/hda8     /var            ext2  defaults                0 2
/dev/hda6     /var/lib/cvs    ext2  defaults                0 2
# noatime beschleunigt den Dateizugriff beim Lesen
/dev/hda9     /usr            ext2  defaults,noatime        0 2
/dev/hda10    /var/cache/apt/archives ext2 defaults         0 2

# sehr große Partition für Proxy-Cache
/dev/hda11    /var/spool/squid ext2 rw                      0 2

# DOS-Backup
/dev/hda1     /mnt/dos        vfat  rw,noauto               0 0
# Backup des Linux Systems
/dev/hda2     /mnt/linux      ext2  rw,noauto               0 0
#
# nfs-mounts
mickey:/      /mnt/mickey     nfs   ro,noauto,intr          0 0
goofy:/       /mnt/goofy      nfs   ro,noauto,intr          0 0
# minnie:/ /mnt/minnie smbfs ro,soft,intr,credentials={filename} 0 2
</example>

Für NFS wird <tt>noauto,intr</tt> kombiniert mit der standardmäßigen
<tt>hard</tt>-Option benutzt. Damit ist es möglich, aufgrund abgebrochener
Verbindung hängende Prozesse mit Strg-C zu beenden. 
<p>
Für einen mit Samba (smbfs) angebundenen Windows Rechner ist
<tt>rw,auto,soft,intr</tt> eine gute Option. Siehe auch <ref id="samba">.
<p>
Für ein Diskettenlaufwerk ist <tt>noauto,rw,sync,user,exec</tt> zu empfehlen,
da dies Beschädigungen des Dateisystems durch einem unbeabsichtigten
Diskettenauswurf vor einem umount-Aufruf verhindert, allerdings verlangsamt
dies auch den Schreibzugriff.

<sect2>Autofs-mount
<p>
Wichtige Punkte zu auto-mount:
<list compact>
<item>Laden Sie das <tt>vfat</tt>-Modul, so dass <file>/etc/auto.misc</file>
      die Zeile <tt>-fstype=auto</tt> enthalten kann:
<example>
# modprobe vfat # vor dem Zugriff auf die Diskette
 ... oder um dies zu automatisieren
# echo "vfat" &gt;&gt; /etc/modules
 ... jetzt das System neu starten.
</example>
<item>Die Datei <file>/etc/auto.misc</file> ist wie folgt anzupassen:
<example>
floppy -fstype=auto,sync,nodev,nosuid,gid=100,umask=000 :/dev/fd0
 ... wobei gid=100 für "users" steht.
</example>
<item>Erzeugen Sie nun die Links <file>cdrom</file> und <file>floppy</file> in
      <file>/home/<var>user</var></file>, die auf
      <file>/var/autofs/misc/cdrom</file> bzw. 
      <file>/var/autofs/misc/floppy</file> verweisen.
<item>Nun ist <var>user</var> der "users"-Gruppe hinzuzufügen.
</list>

<sect2>NFS-mount
<p>
Der externe Linux-NFS-Server (goofy) befindet sich hinter einer Firewall
(gateway). Ich habe eine sehr lockere Sicherheitspolitik in meinem LAN, da
ich der einzige Nutzer bin. Zum Aktivieren des NFS-Zugangs muss auf der
NFS-Serverseite die Datei <file>/etc/exports</file> erzeugt werden:
<example>
# /etc/exports: die Zugriffskontrollliste für Dateisysteme, auf die
#               NFS-Clients zugreifen sollen. Siehe exports(5).
/       (rw,no_root_squash)
</example>
Dies ist nötig, um den NFS-Server zu konfigurieren, nachdem die NFS-Server-
und Client-Pakete installiert und aktiviert wurden.
<p>
Der Einfachheit halber erzeuge ich üblicherweise eine einzige 2GB Partition
für eine experimentelle oder schnelle zweite Linuxinstallation. Ich teile
wahlweise die swap- und <file>/tmp</file>-Partitionen für diese Installationen.
Ein aus mehreren Partitionen bestehendes System ist für diese Verwendung zu
kompliziert. Wenn nur ein einfaches Konsolen-System benötigt wird, so sind
500MB mehr als ausreichend.
</sect1>

<sect1>DRAM-Speicher-Richtlinien
<p>
Es folgen einige grobe Anhaltspunkte für DRAM.
<example>
  4MB:  Absolutes Minimum für den Linux-Kernel.
 16MB:  Minimum für ein angemessenes Konsolen-System.
 32MB:  Minimum für ein einfaches X-System.
 64MB:  Minimum für ein X-System mit GNOME/KDE.
128MB:  Empfohlen für komfortables Arbeiten mit X und GNOME/KDE.
256MB (oder mehr): Warum nicht, wenn man es sich leisten kann?
        DRAM ist billig.
</example>
Verwendung der Bootoption <tt>mem=4m</tt> (oder in lilo.conf
<tt>append="mem=4m"</tt>) zeigt, wie sich ein System mit 4MB Speicher verhält.
Ein lilo-Bootparameter wird für Systeme mit mehr als 64MB Speicher und einem
alten BIOS benötigt.
</sect1>

<sect1>Swap-Speicher
<p>
Ich verwende die folgenden Richtlinien für Swap:
<list compact>
<item>Jede Swap-Partition ist &lt; 128MB (bei Verwendung alter 2.0 Kernel),
      bzw. &lt; 2GB (bei Verwendung aktueller Kernel)
<item>Insgesamt = entweder das 1- bis 2-fache des installierten RAM oder
      128MB bis 2GB wird empfohlen
<item>Die Swap-Partitionen sind auf verschiedene Festplatten zu verteilen und
      mit den Optionen <tt>sw,pri=1</tt> in <file>/etc/fstab</file> zu
      mounten. Dies stellt sicher, dass der Kernel ein "striping RAID" der
      Swap-Partitionen nutzt und einen maximalen Durchsatz erreicht.
<item>Nach Möglichkeit sollte der mittlere Bereich der Festplatte verwendet
      werden.
</list>
<p>
Selbst wenn er niemals benötigt wird, ist etwas Swap-Speicher (128MB)
empfehlenswert, da das System langsamer wird, bevor es wegen Speichermangel
abstürzt.
</sect1>
</sect>

<sect id="bashconf">Bash-Konfiguration
<p>
Ich passe folgende Shell-Startskripte an meine Gewohnheiten an:
<example>
/etc/bash.bashrc        wird durch eigene Version ersetzt
/etc/profile            wird beibehalten (bis auf $PS1: \w -&gt; \W)
/etc/skel/.bashrc       wird durch eigene Version ersetzt
/etc/skel/.profile      wird durch eigene Version ersetzt
/etc/skel/.bash_profile wird durch eigene Version ersetzt
~/.bashrc               wird für alle Nutzer ersetzt
~/.profile              wird für alle Nutzer ersetzt
~/.bash_profile         wird für alle Nutzer ersetzt
</example>
<url id="&examples;"
 name="Vergleiche Details dazu in meinen Beispielskripten">. 
Ich bevorzuge ein transparentes System, deshalb setze ich
<prgn>umask</prgn> auf 002 oder 022.
<p>
<prgn>PATH</prgn> wird durch die folgenden Konfigurationsdateien in der Reihenfolge
<example>
/etc/login.defs  - bevor die Shell PATH setzt
/etc/profile     (startet eventuell /etc/bash.bashrc)
~/.bash_profile  (startet eventuell ~/.bashrc)
</example>
gesetzt.
</sect>

<sect id="gpm">Maus-Konfiguration
<p>
<sect1>PS/2-Mäuse
<p>
Im Falle einer Maus mit einem PS/2-Anschluss am ATX-Motherboard, sollte der
Signalfluss wie folgt sein:
<example>
Maus -&gt; /dev/psaux -&gt; gpm -&gt; /dev/gpmdata = /dev/mouse -&gt; X
</example>
Hier wurde ein symbolischer Link <file>/dev/mouse</file> verwendet, der auf
<file>/dev/gpmdata</file> verweist, um einige Konfigurationsprogramme
zufriedenzustellen und die erneute Konfiguration zu vereinfachen. 
(Entscheidet man sich beispielsweise dazu, den <prgn>gpm</prgn>-Daemon nicht
zu nutzen, so
muss der symbolische Link <file>/dev/mouse</file> auf <file>/dev/psaux</file>
geändert werden, nachdem <prgn>gpm</prgn> entfernt wurde.)
<p>
Dieser Signalfluss erlaubt, die Tastatur und die Maus zu entfernen und beim
Anstecken mit <prgn>gpm</prgn> neu zu initialisieren. X wird davon nicht
negativ beeinflusst!
<p>
Das Protokoll des Signalflusses zwischen <prgn>gpm</prgn>-Ausgabe und
X-Eingabe kann auf zwei Arten implementiert werden, als spezielles Protokoll wie
z.B. "ms3" (serielles Microsoft-3-Tasten-Mausprotokoll) oder "raw" (nutzt das
selbe Protokoll wie die angeschlossene Maus) und diese Wahl diktiert die Wahl
des in der X-Konfiguration benutzten Protokolls.
<p>
Ich werde die Konfiguration anhand einer 3-Tasten-Logitech (traditionelle
Unix-artige) -PS/2-Maus demonstrieren und im folgenden Beispiel beschreiben.
<p>
Sind Sie einer derjenigen, dessen Graphikkarte nicht durch den neuen X-Server
Version 4, sondern nur durch Version 3 unterstützt wird (einige
ATI-64-Bit-Karten), so muss <tt>/etc/X11/XF86Config</tt> anstatt von
<tt>/etc/X11/XF86Config-4</tt> im Folgenden konfiguriert werden.

<sect2 id="gpmms3">Der ms3-Protokoll-Ansatz
<p>
<example>
/etc/gpm.conf            | /etc/X11/XF86Config-4
=========================+======================================
device=/dev/psaux        | Section "InputDevice"
responsiveness=          |  Identifier "Konfigurierte Maus"
repeat_type=ms3          |  Driver     "mouse"
type=autops2             |  Option     "CorePointer"
append=""                |  Option     "Device"   "/dev/gpmdata"
sample_rate=             |  Option     "Protocol" "IntelliMouse"
                         | EndSection
</example>
Wenn diese Methode gewählt wird, so erfolgt die Anpassung des Maustyps
allein in der Datei <file>gpm.conf</file> und die X-Konfiguration bleibt
gleich. Man vergleiche <url id="&examples;" name="meine Beispielskripte">.

<sect2 id="gpmraw">Der raw-Protokoll-Ansatz
<p>
<example>
/etc/gpm.conf            | /etc/X11/XF86Config-4
=========================+======================================
device=/dev/psaux        | Section "InputDevice"
responsiveness=          |  Identifier "Configured Mouse"
repeat_type=raw          |  Driver     "mouse"
type=autops2             |  Option     "CorePointer"
append=""                |  Option     "Device"   "/dev/mouse"
sample_rate=             |  Option     "Protocol" "MouseManPlusPS/2"
                         | EndSection
</example>
Wenn diese Methode gewählt wird, so erfolgt die Anpassung des Maustyps in
<file>gpm.conf</file> sowie in der X-Konfiguration.

<sect2>Wie man andere Mäuse einrichtet
<p>
Der <prgn>gpm</prgn>-Gerätetyp <tt>autops2</tt> sollte die meisten PS/2-Mäuse
erkennen. Unglücklicherweise funktioniert dies nicht immer und ist in
vor-Woody-Versionen nicht verfügbar. In diesen Fällen sollte man <tt>ps2</tt>
oder <tt>imps2</tt> in <file>gpm.conf</file> anstatt von <tt>autops2</tt>
probieren. Um die von <prgn>gpm</prgn> unterstützten Mäuse zu bestimmen, kann man 
<tt>gpm -t help</tt> starten. Man vergleiche <manref name="gpm" section="8">.
<p>
Wird eine 2-Tasten-PS/2-Maus verwendet, so sollte das X-Protokoll die Option
<tt>Emulate3Buttons</tt> nutzen. Der Unterschied des Protokolls zwischen
der 2- und 3-Tasten-Maus wird automatisch erkannt und für <prgn>gpm</prgn>
eingerichtet, nachdem die mittlere Maustaste einmalig gedrückt wurde.
<p>
Für das X-Protokoll mit <ref id="gpmraw"> oder ohne <prgn>gpm</prgn> nutzt
man:
<list compact>
<item><tt>IntelliMouse</tt>: Maus mit seriellem Anschluss (<prgn>gpm</prgn>
      Repeater mit "ms3")
<item><tt>PS/2</tt>: PS/2-Anschluss-Maus (dies immer zuerst ausprobieren)
<item><tt>IMPS/2</tt>: beliebige PS/2-Anschluss-Mäuse (2, 3 oder Scroll
      Mäuse, besser)
<item><tt>MouseManPlusPS/2</tt>: Logitech PS/2-Anschluss-Maus
<item><tt>...</tt>
</list>
Ausführlicheres ist unter <url id="&mousexf86;"
name="Mouse Support in XFree86"> zu finden.
<p>
Eine typische Microsoft Scroll-Maus funktioniert am besten mit:
<example>
/etc/gpm.conf            | /etc/X11/XF86Config-4
=========================+======================================
device=/dev/psaux        | Section "InputDevice"
responsiveness=          |  Identifier "Konfigurierte Maus"
repeat_type=raw          |  Driver     "mouse"
type=autops2             |  Option     "CorePointer"
append=""                |  Option     "Device"   "/dev/mouse"
sample_rate=             |  Option     "Protocol" "IMPS/2"
                         |  Option     "Buttons" "5"
                         |  Option     "ZAxisMapping" "4 5"
                         | EndSection
</example>
<p>
Für einige aktuelle dünne Toshiba-Notebooks, kann das Aktivieren von
<prgn>gpm</prgn> vor PCMCIA im System-V-Init-Skript helfen, wenn das System
sonst hängenbleibt. Eigenartig aber wahr.

<sect1>USB-Mäuse
<p>
Stellen Sie sicher, dass Sie alle benötigten Kernel-Elemente einkompiliert
oder als Modul vorliegen haben:
<list compact>
<item>Unter "Input core support":
<list compact>
<item>"Input core support" (CONFIG_INPUT, <file>input.o</file>),
<item>"Mouse support" (CONFIG_INPUT_MOUSEDEV, <file>mousedev.o</file>),
</list>
<item>Unter "USB support":
<list compact>
<item>"Support for USB" (CONFIG_USB, <file>usbcore.o</file>),
<item>"Preliminary USB device filesystem" (CONFIG_USB_DEVICEFS),
<item>"UHCI" oder "OHCI" (CONFIG_USB_UHCI || CONFIG_USB_UHCI_ALT ||
       CONFIG_USB_OHCI, <file>usb-uhci.o</file> || <file>uhci.o</file> ||
       <file>usb-ohci.o</file>),
<item>"USB Human Interface Device (full HID) support" (CONFIG_USB_HID,
      <file>hid.o</file>) und
<item>"HID input layer support" (CONFIG_USB_HIDINPUT)
</list>
</list>
Die kleingeschriebenen Namen sind Modulnamen.
<p>
Wird devfs nicht genutzt, so ist eine Gerätedatei <file>/dev/input/mice</file> 
mit major 13 und minor 63 wie folgt anzulegen:
<example>
# cd /dev
# mkdir input
# mknod input/mice c 13 63
</example>
<p>
Für typische <strong>USB</strong>-Scroll-Mäuse, ist folgende Konfiguration
zu empfehlen:
<example>
/etc/gpm.conf            | /etc/X11/XF86Config-4
=========================+======================================
device=/dev/input/mice   | Section "InputDevice"
responsiveness=          |  Identifier "Konfigurierte Maus"
repeat_type=raw          |  Driver     "mouse"
type=autops2             |  Option     "SendCoreEvents" "true"
append=""                |  Option     "Device"   "/dev/input/mice"
sample_rate=             |  Option     "Protocol" "IMPS/2"
                         |  Option     "Buttons" "5"
                         |  Option     "ZAxisMapping" "4 5"
                         | EndSection
</example>
<p>
Man vergleiche <url id="&linuxusb;" name="das Linux USB Projekt"> für weitere
Informationen.

<sect1>Touchpad
<p>
Obwohl das Touchpad eines Laptops standardmäßig eine 2-Tasten-PS/2-Maus
emuliert, ermöglicht das <package>tpconfig</package>-Paket die volle
Kontrolle über das Gerät. Die Einstellung <tt>OPTIONS="--tapmode=0"</tt> in
<file>/etc/default/tpconfig</file> deaktiviert z.B. das ärgerliche "klicken
beim Antippen" Verhalten. Folgende <file>/etc/gpm.conf</file> ermöglicht
das Nutzen des Touchpads und einer externen USB-Maus in der Konsole:
<example>
device=/dev/psaux
responsiveness=
repeat_type=ms3
type=autops2
append="-M -m /dev/input/mice -t autops2"
sample_rate=
</example>

</sect>

<sect id="nfs">NFS-Konfiguration
<p>
NFS wird durch <file>/etc/exports</file> eingerichtet:
<example>
# apt-get install nfs-kernel-server
# echo "/ *.domainname-für-lan-hosts(rw,no_root_squash,nohide)" \
        &gt;&gt; /etc/exports
</example>
<url id="&examples;" name="Man vergleiche meine Beispielskripte für Details">.
</sect>

<sect id="samba">Samba-Konfiguration
<p>
Referenzen:
<list compact>
<item><url id="&sambahome;">
<item><package>samba-doc</package>-Paket
</list>
<p>
Das Einrichten von Samba im "share"-Mode ist viel einfacher, da dies die
Laufwerke wie unter WfW anspricht. Aber es wird empfohlen, den "user"-Mode
zu verwenden.
<p>
Samba kann durch <prgn>debconf</prgn> oder <prgn>vi</prgn> konfiguriert
werden:
<example>
# dpkg-reconfigure --priority=<var>low</var> samba # in Woody
# vi /etc/samba/smb.conf
</example>
<url id="&examples;" name="Man vergleiche meine Beispielskripte für Details">.
<p>
Das Hinzufügen eines neuen Nutzers zur <file>smbpasswd</file>-Datei kann mit
<prgn>smbpasswd</prgn> erfolgen:
<example>
$ su -c "smbpasswd -a Benutzername"
</example>
Man sollte sicherstellen, dass man verschlüsselte Passwörter für optimale
Kompatibilität verwendet.
<p>
Der Wert <tt>os level</tt> ist entsprechend zu den folgenden
Systemäquivalenzen zu setzen (je höher der Wert, um so größer ist die
Priorität als Server):
<example>
0:      Samba mit geringer Priorität
1:      WfW 3.1, Win95, Win98, Win/Me?
16:     Win NT WS 3.51
17:     Win NT WS 4.0
32:     Win NT SVR 3.51
33:     Win NT SVR 4.0
255:    Samba mit hoher Priorität
</example>
Es muss sichergestellt werden, dass die Nutzer der Gruppe angehören, welche
dem Verzeichnis zugeordnet ist, das den gemeinsamen Zugriff ermöglicht.
Außerdem muss der Verzeichnispfad entsprechende Ausführungsrechte haben, um
den Zugriff zu ermöglichen.
</sect>

<sect id="printer">Drucker-Konfiguration
<p>
Die traditionelle Methode ist <prgn>lpr</prgn>/<prgn>lpd</prgn>. Es gibt
allerdings ein neues System: CUPS&trade; (Common UNIX Printing System). PDQ
ist ein anderer Ansatz. Man vergleiche <url id="&printing-howto;"
name="Linux Printing HOWTO"> für weitere Informationen.

<sect1 id="lprlpd"><prgn>lpr</prgn>/<prgn>lpd</prgn>
<p>
Für die <prgn>lpr</prgn>/<prgn>lpd</prgn>-artigen Spooler
(<package>lpr</package>, <package>lprng</package> und
<package>gnulpr</package>) ist <file>/etc/printcap</file> wie folgt für
PostScript- und Nur-Text-Drucker anzupassen (die Grundlagen):
<example>
<var>lp</var>|<var>alias</var>:\
        :sd=/var/spool/lpd/<var>lp</var>:\
        :mx#0:\
        :sh:\
        :lp=/dev/lp0:
</example>
Bedeutung der obigen Zeilen:
<list compact>
<item>Kopfzeile: <var>lp</var> &ndash; Name der Druckerwarteschlange,
      <var>alias</var> = alias
<item>mx#0 &ndash; maximale Dateigröße ist nicht limitiert
<item>sh &ndash; Unterdrücken eines Deckblatts
<item>lp=/dev/lp0 &ndash; lokale Druckerschnittstelle oder port@host für
      entfernte Drucker
</list>
Dies ist eine gute Konfiguration für einen PostScript-Drucker. Auch für das
Drucken von einem Windows-Rechner mittels Samba ist dies eine geeignete
Konfiguration für alle von Windows unterstützten Drucker (bidirektionale
Kommunikation wird nicht unterstützt). Man muss die entsprechende
Druckerkonfiguration auf dem Windows-Rechner nutzen.
<p>
Sollte kein PostScript-Drucker vorhanden sein, muss man einen Filter mittels
<prgn>gs</prgn> aktivieren.  
Es gibt viele Konfigurationstools für das Einrichten von
<file>/etc/printcap</file>.
Jede der folgenden Möglichkeiten kommt in Frage:
<list compact>
<item><package>gnulpr</package>, (<package>lpr-ppd</package>) und 
      <package>printtool</package> &ndash; Ich nutze dies.
<item><package>lpr</package> und <package>apsfilter</package>
<item><package>lpr</package> und <package>magicfilter</package>
<item><package>lprng</package> und <package>lprngtool</package>
<item><package>lprng</package> und <package>apsfilter</package>
<item><package>lprng</package> und <package>magicfilter</package>
<!-- I can think of more combinations but I add them if someone  
  actually report me they got it working with them.  -->
</list>
<p>
Um graphische Konfigurationstools wie <prgn>printtool</prgn> zu verwenden,
vergleiche man <ref id="ss-xsu"> um root-Rechte zu erhalten. Mit
<prgn>printtool</prgn> erzeugte Druckerwarteschlangen nutzen <prgn>gs</prgn>
und agieren wie PostScript-Drucker. Beim Zugriff darauf, müssen deshalb
PostScript-Druckertreiber verwendet werden. Auf der Windows-Seite ist
"Apple LaserWriter" der Standard.
</sect1>

<sect1 id="cups">CUPS&trade;
<p>
Das Common UNIX Printing System (oder CUPS&trade;) wird mittels
<prgn>aptitude</prgn> durch Auswahl aller Pakete unter 
"Schnellauswahl (Tasks)" -&gt; 
"Servers" -&gt; 
"Druck-Server" installiert (Sarge).
Für beste Ergebnisse sollte <prgn>aptitude</prgn> wie folgt konfiguriert
sein:
"F10" -&gt;
"Optionen" -&gt; 
<!-- FIXME: aptitude contains a typo: Abhängigkeisbehandlung -->
"Abhängigkeitsbehandlung" -&gt; 
"[X] Empfohlene Pakete automatisch installieren". 
<p>
KDE- und Gnome-Desktop-Umgebungen bieten eine einfache Drucker-Konfiguration.
Alternativ kann das System mit einem beliebigen Web-Browser konfiguriert
werden, wenn <package>swat</package> installiert ist:
</p>
<p>
<example>
$ <var>meinBrowser</var> http://localhost:631
</example>
</p>
<p>
Ein Drucker kann wie folgt hinzugefügt werden:
<list>
<item>klicken auf "Printers" auf der Hauptseite und danach "Add Printer",
<item>Eingabe von "root" für den Nutzernamen und des entsprechenden Passworts,
<item>folgen Sie den weiteren Anweisungen zum Hinzufügen des Druckers,
<item>gehen Sie zurück zur "Printers" Seite und klicken Sie
      "Configure Printer" und
<item>fahren Sie fort, die Papiergröße, Auflösung und andere Parameter zu
      spezifizieren.
</list>
Weitere Informationen sind unter
<url id="http://localhost:631/documentation.html"> und
<url id="&cups-help;"> zu finden.
<p>
</sect1>

</sect>

<sect id="anacron">CRON für Desktop-PCs
<p>
Der Vixie-<package>cron</package> wird standardmäßig für die Ausführung
von Programmen zu bestimmten Zeiten installiert. Er funktioniert nicht gut,
falls Ihr System nicht Tag und Nacht läuft. Für einen Desktop-PC, sollten
Sie <package>anacron</package> statt <package>cron</package> installieren, um
dies Problem zu umgehen. Das Paket <package>fcron</package> kann alternativ
verwendet werden.
<p>
In <ref id="cronjob"> finden Sie Informationen zur Konfiguration von CRON-Jobs.
</sect>

<sect id="post-inst">Andere Installationshinweise

<sect1>Installation einiger weiterer Pakete nach der Basisinstallation
<p>
Sind Sie den bisherigen Anweisungen gefolgt, so haben Sie ein kleines aber
funktionsfähiges &debian;-System. Es ist nun ein guter Zeitpunkt, um größere
Pakete zu installieren.
<p>
Das erste was man jetzt wohl tun wird, ist den favorisierten Editor und alle
Programme die man benötigt mit <prgn>aptitude</prgn> auszuwählen. Man kann mehrere Emacs-Varianten
gleichzeitig installieren. Man vergleiche
<ref id="pop-editor">.
<p>
Danach sollten erneut mit <prgn>aptitude</prgn> (nahezu) alle Pakete unter 
"Tasks" --> "End-user" ausgewählt werden, um ein sehr komplettes
Endbenutzer-orientiertes Systen zu erhalten.
<p>
Ich editiere gewöhnlich <file>/etc/inittab</file> zum einfacheren
Herunterfahren des Rechners.
<example>
...
# What to do when CTRL-ALT-DEL is pressed.
ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -h now
...
</example>
</sect1>

<sect1>Module
<p>
Module für Gerätetreiber werden während der Basisinstallation konfiguriert.
<prgn>modconf</prgn> bietet danach eine menübasierte Modulkonfiguration.
Dieses Programm ist sehr nützlich, wenn einige Module während der
Basisinstallation ausgelassen wurden oder ein neuer Kernel seitdem
installiert wurde.
<p>
Alle vorzuladenden Module müssen in <file>/etc/modules</file> aufgelistet
werden. Ich nutze auch <prgn>lsmod</prgn> und <prgn>depmod</prgn> um dies
manuell zu kontrollieren.
<p>
Man sollte auch sicherstellen, einige Zeilen zu <file>/etc/modules</file>
hinzuzufügen, um IP-Masquerading (FTP, etc.) zu handhaben, falls Sie es
nicht aktiviert haben.

</sect1>

<sect1>Grundlegende CD-RW-Einrichtung
<p>
Für am IDE-Anschluss angeschlossene CD-RW-Laufwerke mit einem 2.4er-Kernel
editieren Sie die folgenden Dateien:
<example>
/etc/lilo.conf  (append="hdc=ide-scsi ignore=hdc" ist hinzuzufügen und
                 lilo zum Aktivieren zu starten)
/dev/cdrom      (symbolischer Link # cd /dev; ln -sf scd0 cdrom)
/etc/modules    (hinzufügen von "ide-scsi" und "sg", sowie "sr" danach wenn
                 nötig)
</example>
Man vergleiche <ref id="cdrw"> für Details.
</sect1>

<sect1 id="apm">Großer Speicher und automatisches Abschalten
<p>
Editieren Sie <file>/etc/lilo.conf</file> wie folgt, um Bootparameter für 
großen Speicher (für 2.2 Kernel) und automatisches Abschalten (für APM) zu
setzen:
<example>
append="mem=128M apm=on apm=power-off noapic"
</example>
Nun muss noch <prgn>lilo</prgn> zum Aktivieren dieser Einstellungen gestartet
werden. <tt>apm=power-off</tt> wird für SMP-Kernel verwendet und
<tt>noapic</tt> ist für meine fehlerhafte SMP-Hardware nötig. Das selbe kann
direkt durch Angabe der Optionen beim Boot-Prompt erreicht werden. Man
vergleiche <ref id="bootprompt">.
<p>
Wurde APM als Modul kompiliert wie in den Standard-Debian-2.4er-Kerneln, so ist
<tt>insmod apm power_off=1</tt> nach dem Booten zu starten oder
<file>/etc/modules</file> wie folgt zu modifizieren:
<example>
# echo "apm power_off=1" &gt;&gt;/etc/modules
</example>
<p>
Alternativ kann mit ACPI-Unterstützung das selbe mit neueren Kernel erreicht
werden und dies scheint SMP freundlicher zu sein (erfordert ein neueres
Motherboard). Der 2.4 Kernel auf neueren Motherboards sollte großen Speicher
korrekt erkennen.
<example>
CONFIG_PM=y
CONFIG_ACPI=y
...
CONFIG_ACPI_BUSMGR=m
CONFIG_ACPI_SYS=m
</example>
auch die folgenden Zeilen sollten in <file>/etc/modules</file> in dieser
Reihenfolge hinzugefügt werden:
<example>
ospm_busmgr
ospm_system
</example>
Es ist auch möglich, den Kernel mit all diesen auf "y" gesetzten
Kerneloptionen zu kompilieren. Auf jeden Fall sind keine Bootparameter mit
ACPI nötig.
</sect1>

<sect1 id="killecn">Eigenartige Probleme beim Zugriff auf einige Webseiten
<p>
Aktuelle Linux-Kernel aktivieren standardmäßig ECN, was Zugriffsprobleme bei
einigen Webseiten auf schlechten Routern zur Folge haben kann. Überprüfen
des ECN-Status:
<example>
# cat /proc/sys/net/ipv4/tcp_ecn
 ... oder
# sysctl net.ipv4.tcp_ecn
</example>
Zum Ausschalten ist
<example>
# echo "0" > /proc/sys/net/ipv4/tcp_ecn
 ... oder
# sysctl -w net.ipv4.tcp_ecn=0
</example>
zu verwenden. Um TCP-ECN bei jedem Start zu deaktivieren, ist
<file>/etc/sysctl.conf</file> zu editieren und
<example>
net.ipv4.tcp_ecn = 0
</example>
hinzuzufügen.
</sect1>

<sect1>Dialup-PPP-Konfiguration
<p>
Das <package>pppconfig</package>-Paket ist zur Nutzung eines dialup- (Modem)
PPP-Zugangs zu installieren.
<example>
# apt-get install pppconfig
# pppconfig
 ... folgen Sie den Anweisungen zur dialup-PPP-Konfiguration
# adduser <var>user_name</var> dip
 ... erlaube <var>user_name</var> Zugriff auf dialup-PPP
</example>
Dialup-PPP-Zugriff kann durch den Nutzer (<var>user_name</var>) mit
<example>
$ pon <var>ISP_name</var>  # starte PPP-Zugang zum ISP
 ... erfreuen Sie sich des Internets
$ poff <var>ISP_name</var> # beende PPP-Zugang, <var>ISP_name</var> optional
</example>
gestartet werden.
Man vergleiche <ref id="low-ppp"> für mehr Details.
</sect1>

<sect1>Andere Konfigurationsdateien in <file>/etc/</file>
<p>
Da in der Standard-Debian-Installation <file>/etc/cron.deny</file> fehlt,
sollte diese erzeugt werden (man kann <file>/etc/at.deny</file> kopieren).
</sect1>

</sect>

</chapt>

