<!-- CVS revision of this document "# Revision is not used here.#"  -->
<!-- CVS revision of original english document "1.27"  -->
<!--Line width ruler (ruler uses 78 characters) 34567890123456789012345-->

<chapt id="edit">Edytory

<sect id="pop-editor">Popularne edytory
<p>
Linux oferuje wiele alternatyw dla konsolowych edytorów tekstu. Wśród nich:
<list compact>
<item><prgn>vim</prgn>:    Potężny i lekki edytor, wywodzący się z BSD. VI iMproved.
<item><prgn>emacs</prgn>:  Podstawowy i ciężki edytor, wywodzący się z projektu GNU. 
 Autentyk RMS-a (Richarda M. Stallmana).
<item><prgn>xemacs</prgn>: Emacs: Następne pokolenie, pochodzący od Lucid.
<item><prgn>mcedit</prgn>: GNU edytor dla początkujących. 
  Identyczny z wewnętrznym edytorem z <prgn>mc</prgn>. Zobacz <ref id="mcedit">.
<item><prgn>ae</prgn>:     Domyślny mały edytor (Potato). Należy go unikać.
<item><prgn>nano</prgn>:   Domyślny mały edytor (Woody). Naśladuje
  <prgn>pico</prgn>. 
<item><prgn>joe</prgn>:    Dla fanów czasów WordStara lub TurboPascala.
<item><prgn>jed</prgn>:    Szybki, w pełni wyposażony, obsługiwany przez menu, ze skrótami klawiszowymi Emacsa.
<item><prgn>jove</prgn>:   Bardzo mały edytor ze skrótami klawiszowymi Emacsa.
<item><prgn>nvi</prgn>:    Nowy vi. Błąd w błąd kompatybilny z oryginalnym vi.
</list>
<p>
Aby zmienić domyślny edytor, użyj <tt>update-alternatives --config editor</tt>.
Wiele programów używa również zmiennych środowiskowych takich jak
<tt>EDITOR</tt> lub <tt>VISUAL</tt> aby zdecydować, którego edytora użyć. Zobacz
<ref id="mcedit">.
<p>
Także kilka edytorów środowiska X Window jest godnych uwagi:
<list compact>
<item><prgn>gvim</prgn>: Vim z interfejsem graficznym (Pakiety <package>vim</package> i <package>vim-gtk</package>).
<item><prgn>emacs</prgn>: Jedyny prawdziwy Emacs (automatycznie wykrywa X Window). 
<item><prgn>xemacs</prgn>: Emacs następnej generacji (automatycznie wykrywa X
Window). 
</list>
Wywołania tych klientów X zawierają standardowe opcje, takie jak  
<tt>-fn <var>a24</var></tt>, które ułatwiają życie starszym użytkownikom, takim 
jak ja :)  Zobacz <ref id="xclnt">.
</sect>

<sect id="bin-editor">Edytory awaryjne
<p>
Istnieje kilka edytorów umieszczonych w katalogu <file>/bin</file>.  Jeden z nich powinien 
być zainstalowany do prostego edytowania plików, gdy <file>/usr</file> jest nieosiągalne.
<p>
<list compact>
<item><package>elvis-tiny</package>: Minimalny edytor vi (<prgn>vi</prgn> aby uruchomić)
<item><package>nano-tiny</package>:  Minimalny edytor różny od vi (<prgn>nano-tiny</prgn> aby uruchomić)
<item><package>ed</package>:         Minimalny edytor (zawsze obecny, ale trudny w użyciu)
</list>
<p>

<sect>Emacs i Vim

<sect1>Wskazówki do Vima
<p>
Przeczytaj dokument „VIM - main help file” wciskając &lt;F1&gt; podczas pracy
programu.

<example>
&lt;F1&gt;           Pomoc
&lt;esc&gt;          Powrót do normalnego trybu
V              Tryb wizualny
i              Tryb wprowadzania
:              Polecenia linii poleceń
:set tw=72     Ustawia szerokość tekstu na 72
&lt;F11&gt;          Tryb wprowadzania (wklejania)
:r! date -R    Wstaw datę zgodną z RFC-822
q<var>a</var>             Zapisz sekwencję klawiszy w rejestrze <var>a</var>
q              Zatrzymaj zapisywanie sekwencji klawiszy
@<var>a</var>             Wykonaj sekwencję klawiszy z rejestru <var>a</var>
:edit <var>foo.txt</var>   Edytuj inny plik przez wczytanie <var>foo.txt</var>
:wnext         Zapisz bieżący plik i edytuj następny plik
</example>

<tt>q</tt> i <tt>@</tt> mogą być używane do zapisywania i odtwarzania prostych makr.
Na przykład, aby utworzyć makro, które wstawia znaczniki pochyłości HTML wokół
słowa pod kursorem, możesz wpisać <tt>qii&lt;i&gt;^[ea&lt;/i&gt;^[q</tt>
(gdzie <tt>^[</tt> jest klawiszem ESC). Gdy później ustawisz kursor na początku
słowa i wpiszesz <tt>@i</tt>, zostaną dodane znaczniki &lt;i&gt; i &lt;/i&gt;.
<p>
Zobacz również <ref id="vimgpg">.
</sect1>

<sect1>Wskazówki do Emacsa
<p>
<example>
&lt;F1&gt;                Pomoc
&lt;F10&gt;               Menu
C-u M-! date -R     Wstaw datę zgodną z RFC-822
</example>
</sect1>

<sect1>Uruchamianie edytora
<p>
<example>
uruchom edytor:                            emacs plik  vim plik
uruchom w trybie zgodności z vi:                       vim -C
uruchom w trybie niezupełnie zgodnym z vi:             vim -N
uruchom z opcjami domyślnymi:              emacs -q    vim -N -u NONE
</example>
</sect1>

<sect1 id="editkey">Podsumowanie poleceń edytorów (Emacs, Vim)
<p>
<example>
wyjście:                       C-x C-c         :qa /:wq /:xa /:q!
Powrót/tryb poleceń:           C-g             &lt;esc&gt;
Do tyłu (w lewo):              C-b             h
Do przodu (w prawo):           C-f             l
W dół:                         C-n             j
W górę:                        C-p             k
początek linii(^):             C-a             0
koniec linii($):               C-e             $
Polecenia wielokrotne:         C-u nnn polec   nnn polecenie
Polecenia wielokrotne:         M-cyfra polecenie
zapisz plik:                   C-x C-s         :w plik
początek bufora:               M-&lt;             1G
koniec bufora:                 M-&gt;             G
przewiń 1 ekran do przodu:     C-v             ^F
przewiń 1/2 ekranu do przodu:                  ^D
przewiń 1 linię do przodu:                     ^E
przewiń 1 ekran do tyłu:       M-v             ^B
przewiń 1/2 ekranu do tyłu:                    ^U
przewiń 1 linię do tyłu:                       ^Y
przewiń inne okno:              M-C-v
skasuj w miejscu kursora:       C-d             x
skasuj od kurs. do końca linii: C-k             D
przeszukiwanie w przód:         C-s
przeszukiwanie wstecz:          C-r
wyszukaj w przód:               C-s enter       /
wyszukaj wstecz:                C-r enter       ?
szukanie wyrażeń regularnych:   M-C-s
szukanie wyrażeń reg. wstecz:   M-C-r
znajdź wyrażenie regularne:     M-C-s enter     /
znajdź wyrażenie reg. wstecz:   M-C-r enter     ?               
Pomoc:                          C-h C-h         :help
Pomoc Apropos:                  C-h a
objaśnienia klawiszy:           C-h b           :help [klawisz]
Pomoc (Info):                   C-h i
Pomoc Główny tryb:              C-h m
Pomoc samouczek:                C-h t           :help howto
Cofnij (Undo):                  C-_             u
Anuluj cofnięcie (Redo):        C-f             ^R
Zaznacz pozycję kursora:        C-@             m{a-zA-Z}
Zmień zaznaczenie i pozycję:    C-x C-x
Idź do znacznika w bieżącym pliku:              '{a-z}
Idź do znacznika w dowolnym pliku:              '{A-Z}
kopiuj obszar:                  M-w             {w wizualnym}y
usuń obszar:                    C-w             {w wizualnym}d
Wklej i zachowaj bufor:         C-y             <![%FIXME;[p y ? XXX FIXME XXX]]>
Wklej z bufora usuniętych:      M-y             p
zmień obszar na duże litery:    C-x C-u         {w wizualnym}U
zmień obszar na małe litery:    C-x C-l         {w wizualnym}u
Wstaw znak specjalny:           C-q numer ósemkowo/sekwencja klawiszy 
                                                ^V dziesiętnie/sekwencja klawiszy
zastąp:                         M-x replace-string      :&percnt;s/aaa/bbb/g
zastąp wyrażenie regularne:     M-x replace-regexp      :&percnt;s/aaa/bbb/g
zastąp z potwierdzeniem:        M-&percnt;                     :&percnt;s/aaa/bbb/gc
zastąp z potwierdzeniem:        M-x query-replace
zastąp wyrażenie reg. z potwierdzeniem: M-x query-replace-regexp
Otwórz plik:                    C-x C-f         :r plik
Zapisz plik:                    C-x C-s         :w
Zapisz wszystkie bufory:        C-x s           :wa
Zapisz jako:                    C-x C-w plik    :w plik
zmień bufor:                    C-x b
wyświetl bufory:                C-x C-b         :buffers
Przełącz na tylko-do-odczytu:   C-x C-q         :set ro
zapytaj i usuń bufor:           C-x k
Podziel pionowo:                C-x 2           :split
Podziel poziomo:                C-x 3           :vsplit (wersja 6)
Przenieś do innego okna:        C-x o           ^Wp
Usuń to okno:                   C-x 0           :q
Skasuj inne okno (okna):        C-x 1           ^Wo
uruchom kompilację w tle:       M-x compile
usuń kompilację w tle:          M-x kill-compilation
uruchom make                                    :make Makefile
sprawdź informacje o błędach:   C-x`            :echo errmsg
uruchom powłokę logując wyjście: M-x shell      :!script -a tmp
...wyczyść znaki backspace, ...                 :!col -b &lt;tmp &gt;record
...zapisz/przywołaj zapis powłoki: C-x C-w record  :r record
uruchom powłokę:                M-! sh          :sh
uruchom polecenie:              M-! cmd         :!cmd
uruchom polecenie i wstaw:      C-u M-! cmd     :r!cmd
uruchom filtr:                  M-| plik        {wizualny}:w file
uruchom filtr i wstaw:          C-u M-| filter  {wizualny}:!filter
pokaż opcję:                                    :se[t] {opcja}?
przywróć wartość domyślną opcji                 :se[t] {opcja}&
ustaw opcję logiczną (boolean)                  :se[t] no{opcja}
przełącz opcję logiczną (boolean)               :se[t] inv{option}
zawiń tekst na 72. kolumnie                     :se tw=72
nie zawijaj                                     :se tw=0
automatycznie wcinaj                            :se ai
rozwijaj tabulator                              :se et
ustaw znaki komentarza (mail)                   :se comments=n:&gt;,n:\|

uruchom GDB                     M-x gdb                        
opisz tryb GDB                  C-h m                          
rusz się o jedną linię          M-s
następna linia                  M-n
rusz się o jedną instrukcję     M-i                            
zakończ bieżącą ramkę stosu     C-c C-f                        
kontynuuj                       M-c                            
podnieś ramki argumentów        M-u                            
upuść ramki argumentów          M-d                            
skopiuj ilość od punktu, wstaw na końcu: C-x &                          
ustaw pułapkę                   C-x SPC                        
</example>
</sect1>

<sect1>Konfiguracja Vima
<p>
W celu użycia wszystkich funkcji Vima oraz podświetlania składni, należy dodać
następujące linie do <file>~/.vimrc</file> lub <file>/etc/vimrc</file>:
<example>
set nocompatible
set nopaste
set pastetoggle=&lt;f11&gt;
syn on
</example>
Tryb wklejania umożliwia unikanie wpływu automatycznego wcinania przy operacjach
wytnij-i-wklej w terminalu. Robi on więcej niż proste „:set noai”.
<p>
Jeżeli interesuje Cię integracja z GnuPG, zobacz <ref id="vimgpg">.
</sect1>

<sect1>Ctags
<p>
<tt>apt-get install exuberant-ctags</tt> i uruchom <prgn>ctags</prgn> na 
plikach źródłowych. Wpisz <tt>:tag <var>nazwa_funkcji</var></tt> w Vimie, 
aby przeskoczyć do linii w
której <var>nazwa_funkcji</var> się zaczyna.
Znaczniki działają dla C, C++, Javy, Pythona i wielu innych języków.
<p>
Emacs posiada te same możliwości ctags.
</sect1>

<sect1>Konwersja ekranu z podświetlaniem składni do kodu HTML
<p>
<tt>so \$VIMRUNTIME/syntax/2html.vim</tt> wywołane z linii poleceń Vima zamieni
podświetlany tekst na kod HTML. Zapisz używając <tt>:w plik.html</tt> i
<tt>:q</tt>. Użytecznie dla kodu w języku C itd.
</sect1>

<sect1>Rozdzielanie ekranu w <prgn>vimie</prgn>
<p>
<prgn>vim</prgn> może edytować wiele plików w środowisku z wielokrotnie podzielonym ekranem.
W celu uzyskania szczegółowych informacji, wpisz <tt>:help usr_08.txt</tt>.
<p>
Aby rozdzielić ekran między różne pliki, wpisz w lini poleceń vi:
<example>
:split <var>inny-plik</var>
:vsplit <var>inny-plik</var>
</example>
Lub w linii poleceń powłoki:
<example>
$ vi -o file1.txt file2.txt   # Podział poziomy
$ vi -O file1.txt file2.txt   # Podział pionowy
</example>
wywoła to vi podzielonego na wiele okien.
<example>
$ vimdiff file.txt~ file.txt         # sprawdza ostatnie zmiany w file.txt
$ vimdiff file.en.sgml file.fr.sgml  # sprawdza zamiany w przekładzie/tłumaczeniu
$ gvimdiff file.txt~ file.txt        # w środowisku X Window
</example>
spowoduje wyświetlenie ładnego widoku zmian między oryginałem i kopią zapasową.
W przypadku SGML-a dopasowuje znaczniki, więc porównywanie tłumaczeń w tym
trybie działa bardzo dobrze.
<p>
Specjalne ruchy kursora wywoływane przez Ctrl-W:
<example>
Ctrl-W +      zwiększa rozmiar okna
Ctrl+W -      zmniejsza rozmiar okna
Ctrl-W h      przejdź do okna po lewej
Ctrl-W j      przejdź do okna poniżej
Ctrl-W k      przejdź do okna powyżej
Ctrl-W l      przejdź do okna po prawej
...
</example>
Aby kontrolować przewijanie ekranu użyj następujących opcji:
<example>
:set scrollbind
:set noscrollbind
</example>
</sect1>

</sect>

</chapt>
