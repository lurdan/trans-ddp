<!-- CVS revision of original english document "1.87"  -->
<chapt id="system">Fundamentos de Debian

<!-- 

Merged from 4 SGML files in FAQ February 2002
  ftparchives.sgml, 
  pkg_basics.sgml, 
  pkgtools.sgml, 
  uptodate.sgml

Then retitled under "Debian fundamentals" with 
 chapt moved to sect
 sect moved to sect1
 sect1 moved to sect2

Commented out reference to arches, should rewrite it to reference to 
release manual/install manual soon.
 
Pieces imported from other parts of FAQ.
 Small section from customizing.sgml regarding init/runlevel is added.
 Small section from customizing.sgml regarding diverse is added.
 Small section from software.sgml regarding non-English is added.

Merged from other SGML files in FAQ February 2002
  kernel.sgml

Then retitled under "Debian fundamentals" with 
 chapt moved to sect
 sect moved to sect1

Titles of sect/sect1 are changed to suit "Debian reference"

All minor edits I did left tracing information as comments.

Several sections were actually deleted since two consecutive -'s
made it impossible to comment out.

Also rewrote section to suit better for Potato and Woody.
Unless slink is used, how many people about dpkg-ftp :)

-->
<p>
Este capítulo proporciona información fundamental sobre el sistema
Debian para aquellos que no son desarrolladores. Para información
autorizada, consulte:i
<p>
<list compact>
<item>Manual de Normativa de Debian
<item>Referencia para los Desarrolladores de Debian
<item>Guía para Nuevos Encargados de Paquetes de Debian
<p>
</list>
listada en la sección <ref id="references">.


<p>
Si está buscando explicaciones menos detalladas, vaya directamente a la
<ref id="package"> o a los capítulos adecuados.
<p>
Este capítulo se basa en información obtenida de las "FAQ de Debian"
reorganizada totalmente a fin de permitir dar sus primeros pasos a los
administradores de sistemas Debian.

<!-- 
"FTP archives" is now changed to simple "archives" since it can be reached 
through HTTP and other methods
-->

<sect id="ftparchives">Los archivos Debian

<sect1 id="dirtree">Estructura de los directorios

<p>El software que ha sido empaquetado para &debian; está disponible en alguno
de los diversos árboles de directorios situados en cada 
<url id="&mirror-site;" 
     name="sitio réplica Debian">
a través de FTP o HTTP.

<p>En cada sitio réplica de Debian, bajo el directorio <file>debian</file>
se pueden encontrar los siguientes directorios:
<taglist>
  <tag><file>dists/</file>:
    <item>Este directorio contiene las "distribuciones" y se utilizan
    para acceder a los paquetes actualmente disponibles en las versiones
    y pre-versiones de Debian. Aún se pueden encontrar aquí algunos
    paquetes antiguos, archivos <file>Contents-*.gz</file>,
    y archivos <file>Packages.gz</file>.
  <tag><file>pool/</file>:
    <item>La nueva ubicación de todos los paquetes de todas las
    versiones y versiones previas de Debian.
<tag><file>tools/</file>:
    <item>Utilidades del DOS para crear discos de arranque, particionar su 
    unidad de disco, comprimir/descomprimir archivos y arrancar Linux.
  <tag><file>doc/</file>:
    <item>La documentación básica de Debian: FAQ, instrucciones para dar
          a conocer un fallo, etc.
  <tag><file>indices/</file>:
    <item>El archivo Maintainers y los archivos override.
  <tag><file>project/</file>:
    <item>principalmente recursos para el desarrollador, tales como:
    <taglist>
      <tag><file>project/experimental/</file>:
        <item>Este directorio contiene paquetes y herramientas que aún
        están en desarrollo y en la etapa alfa de prueba.  Los usuarios
        no deberían usar estos paquetes ya que pueden resultar peligrosos
        y perjudicial incluso para los más experimentados.
      <tag><file>project/orphaned/</file>:
        <item>Paquetes que han sido abandonados por las personas los tenían 
        a cargo y que han sido retirados de la distribución.
    </taglist>
</taglist>

<sect1 id="dists">Distribuciones Debian

<p>Normalmente existen tres distribuciones Debian en el directorio
<file>dists</file>: la distribución <tt>estable</tt> (stable) , la
distribución <tt>de prueba</tt> (testing) y la distribución <tt>inestable</tt>
(unstable). A veces existe una distribución <tt>congelada</tt> (véase <ref
id="frozen">).  Cada distribución viene definida por un enlace simbólico al
directorio real, utilizando un nombre de código en el directorio
<file>dists</file>

<sect1 id="stable">La distribución <tt>estable</tt>

<p>Los paquetes de la versión <tt>estable</tt>, &stabledebian;, 
se encuentran en el directorio <file>stable</file> (enlace simbólico a
<file>&stablecodenamedir;</file>):
<list>
  <item><file>stable/main/</file>:
  Este directorio contiene los paquetes que pertenecen a la 
  versión oficial más reciente del sistema &debian;.

  <p>Todos estos paquetes son libres, es decir, están de acuerdo con <url name="Las directivas del
  Software Libre de Debian" id="&social-contract;#guidelines"> (DFSG) (también
  disponible como <file>&f-social-contract;</file> que se instala mediante
  <package>&p-social-contract;</package>).

  <item><file>stable/non-free/</file>:  este directorio contiene paquetes
  que no se pueden considerar como libres de acuerdo con la DFSG.

  <p>Por ejemplo, algunos paquetes tienen licencias que prohiben su
  distribución comercial.  Otros pueden ser redistribuidos pero, de
  hecho, son shareware.

  <item><file>stable/contrib/</file>: este directorio contiene paquetes que
  son libres de acuerdo con la DFSG pero que dependen de algún modo de otro
  paquete que <em>no</em> es libre.
    
</list>
Actualmente, además de las ubicaciones anteriores, los paquetes nuevos
se encuentran físicamente en el directorio <file>pool</file> (<ref id="pools">).  

<p>El estado actual de los fallos de la distribución <tt>estable</tt> se
puede consultar en la página web <url id="&stable-problems;" name="Stable Problems">.

<sect1 id="testing">La distribución <tt>de prueba</tt>

<p>Los paquetes de la versión <tt>de prueba</tt>, &testingdebian;, se
encuentran en el directorio <file>testing</file> (enlace simbólico a
<tt>&testingcodenamedir;</tt>) tras haber sido probados durante cierto tiempo
en la rama <tt>inestable</tt>.  Actualmente, además de las ubicaciones
anteriores, los paquetes nuevos se localizan en el directorio
<file>pool</file> (<ref id="pools">).  Asimismo, también están los
subdirectorios <file>main</file>, <file>contrib</file> y <file>non-free</file>
que cumplen las mismas funciones que en la rama <file>estable</file>.

<p>Estos paquetes deben estar en sintonía con todas las arquitecturas para las
cuales fueron construidos y deben poder instalarse; además, deben tener menos
fallos críticos que las versiones que se encuentran en la rama
<tt>inestable</tt>. De esta manera, es de esperar que la rama <tt>de
prueba</tt> sea la posible candidata de la  próxima versión. Más detalles
sobre este mecanismo en: <url id="&testing-notes;">.



<p>El estado final de la distribución <tt>de prueba</tt> se puede
consultar en los siguientes sitios:

<list compact>
<item><url id="&update-excuses;" 
         name="update excuses">
<item><url id="&testing-problems;" 
         name="testing problems">
<item><url id="&release-critical;" 
         name="release-critical bugs">
<item><url id="&qa-base-bugs;" 
         name="base system bugs">
<item><url id="&qa-standard-bugs;" 
         name="bugs in standard and task packages">
<item><url id="&qa-bugs;" 
         name="other bugs and bug-squashing party notes">
</list>

<sect1 id="unstable">La distribución <tt>inestable</tt>

<p>Los paquetes de la versión <tt>inestable</tt>, denominada siempre "Sid", se
encuentran en el directorio <file>unstable</file> (enlace simbólico a
<file>sid</file>) tras haber sido transferidos al archivo Debian y permanecer
allí hasta su translado a la rama <file>de prueba</file> Actualmente, además
de las ubicaciones anteriores, los paquetes nuevos se ubican en el directorio
<file>pool</file> (<ref id="pools">).  Asimismo, también están los
subdirectorios <file>main</file>, <file>contrib</file> y <file>non-free</file>
que cumplen las mismas funciones que en la rama <file>estable</file>.

<p>La distribución <tt>inestable</tt> contiene la imagen más reciente
del sistema en desarrollo. Se alienta a los usuarios a usar y probar
estos paquetes pero se les advierte sobre su estado. La ventaja de usar
la distribución <tt>inestable</tt> es que uno siempre está actualizado
con lo último del proyecto &debian;&mdash; pero si deja de 
funcionar deberá conservar ambas partes :-)

<p>El estado actual de los fallos de la distribución <tt>inestable</tt>
se puede consultar en la página web 
<url id="&unstable-problems;" name="Problemas de la rama inestable">.

<!-- Above was enough <sect1 id="sid">The "sid" distribution

<p>Sid or <strong>unstable</strong> is the place where
most of the packages are initially uploaded. It will never be released
directly, because packages which are to be released will first have to
be included in <strong>testing</strong>, in order to be released in
<strong>stable</strong> later on. sid contains packages for both
released and unreleased architectures.

<p>The name "Sid" also comes from the "Toy Story" animated motion
picture: Sid was the boy next door who destroyed toys :-) -->

<sect1 id="frozen">La distribución <tt>congelada</tt> 

<p>Cuando la distribución <tt>de prueba</tt> está suficientemente madura
se "congela", es decir, ya no se aceptan programas nuevos y -de ser
necesario- sólo se eliminan fallos. Asimismo, en el directorio
<file>dists</file> se crea un nuevo árbol "de prueba" al que se le asigna un
nuevo nombre. La distribución congelada está durante algunos meses de
prueba con actualizaciones continuas y congelaciones totales denominadas
`ciclos de prueba. 

<p>En la distribución congelada se mantiene un registro de fallos que
pueden retrasar la liberación de un paquete o de la distribución
completa.  Una vez que los fallos están por debajo de los valores
máximos aceptables, la distribución congelada se transforma en la
distribución <tt>estable</tt>, es liberada y la versión estable anterior se
vuelve obsoleta (y se archiva).

<sect1 id="codenames">Los nombres de versión de la distribución Debian

<p>Los nombres de los directorios situados en el directorio
<file>dists</file>, tales como <file>&stablecodenamedir;</file> y
<file>&testingcodenamedir;</file>, son simplemente los "nombres de versión".
Cuando una distribución &debian; se encuentra en la etapa de desarrollo,
no tiene número de versión sino un "nombre de versión".  El propósito de
estos nombres es facilitar la replicación de la distribuciones &debian;
(si un directorio como <file>unstable</file> cambia de repente su
nombre a <file>stable</file>, sin ser necesario, se tendrían
que descargar un montón de cosas nuevamente).

<p>Actualmente, <file>stable/</file> es un enlace simbólico a
<tt>&stablecodenamedir;</tt> y <file>testing/</file> es un enlace simbólico a
<tt>&testingcodenamedir;</tt>. Esto significa que <tt>&stablecodename;</tt>
es la distribución estable y <tt>&testingcodename;</tt> la distribución
de prueba actuales.

<p><file>unstable</file> es un enlace simbólico permanente a <file>sid/</file>,
ya que Sid siempre es la distribución inestable. <!-- (see <ref
id="sid">).-->

<sect1 id="oldcodenames">Nombres de versión usados en el pasado

<p>Nombres de versión que ya han sido usados:
"Buzz" para la versión 1.1,
"Rex" para la versión 1.2,
"Bo" para la versión 1.3.x,
"Hamm" para la versión 2.0,
"Slink" para la versión 2.1, 
"Potato" para la versión 2.2,
"Woody" para la versión 3.0 y
"Sarge" para la versión 3.1.


<sect1 id="sourceforcodenames">El origen de los nombres de versión

<p>Hasta aquí han sido tomados de la película <em>Toy Story</em> de
Pixar.
<list compact>
  <item><strong>Buzz</strong> (Buzz Lightyear) era el cosmonauta,
  <item><strong>Rex</strong> era el tiranosaurio,
  <item><strong>Bo</strong> (Bo Peep) era la niña que cuidaba la oveja,
  <item><strong>Hamm</strong> era el cerdito alcancía,
  <item><strong>Slink</strong> (Slinky Dog) era el perro de juguete,
  <item><strong>Potato</strong> era, por supuesto, el Sr. Potato,
  <item><strong>Woody</strong> era el vaquero.
  <item><strong>Sarge</strong> era el líder del ejército de plástico verde,
  <item><strong>Etch</strong> (Etch-a-Sketch) era el pizarón,
  <item><strong>Sid</strong> era el vecinito que destruyó los juguetes.
</list>

<!--
  more info in http://www.pixar.com/featurefilms/ts/index.html 
  or better yet http://us.imdb.com/M/title-exact?Toy&percnt;20Story&percnt;20(1995)
  or actually:
    http://us.imdb.com/Title?0114709 for TS1
    http://us.imdb.com/Title?0120363 for TS2
  we shouldn't put the links in, Pixar needs no additional propaganda
-->
<!--
  characters not used from Toy Story (yet):
    - Andy (the kid)
    - Snake
    - Robot
    - Scud (Sid's dog)
  and additional characters from Toy Story 2, also not yet used:
    - Jessie (the Yodelling Cowgirl)
    - Zurg (the Emperor)
    - Wheezy (the 
    penguin)
    - Hannah (owner of Jessie)
    - Stinky Pete the Prospector (the old fat guy)
    - Mrs. Davis (Andy's Mom)
    - Barbie
-->

<sect1 id="pools">El directorio <tt>pool</tt>

<p>Históricamente, los paquetes se guardaban en el subdirectorio
<file>dists</file> correspondiente a una determinada distribución. Esto
ocasionaba diversos problemas, como -por ejemplo- un gran consumo del
ancho de banda de los sitios réplicas cuando se realizaban grandes
cambios.

<p>Actualmente, los paquetes se guardan en un gran `depósito',
estructurado según el nombre del paquete fuente. Para facilitar su uso,
el depósito está subdividido en secciones (<tt>main</tt>,
<tt>contrib</tt> y <tt>non-free</tt>) y por la primer letra del nombre
del paquete fuente. Estos directorios contienen diversos archivos: los
paquetes binarios para cada arquitectura y los paquetes fuentes a partir
de los cuales se han generado los mismos.

<p>Puede averiguar el lugar donde se encuentra un paquete ejecutando el
comando <tt>apt-cache showsrc <var>nombre_paquete</var></tt> y leyendo
la línea que dice `Directory:'. Por ejemplo, los paquetes de
<package>apache</package> se encuentran en
<file>pool/main/a/apache/</file>. Puesto que existen tantos paquetes
<tt>lib*</tt> estos son tratado de una manera especial: por ejemplo, los
paquetes <package>libpaper</package> se encuentran en
<file>pool/main/libp/libpaper/</file>.


<p>Los directorios <file>dists</file> aún se siguen utilizando para los
archivos índice usados por programas como <prgn>apt</prgn>. De todas
maneras, al momento de escribir este doucmento, las distribuciones
antiguas no han sido modificadas para usar estos 'depósitos' por lo que
verá rutas que contienen nombres de distribuciones tales como
<tt>potato</tt> o <tt>woody</tt> en el campo de cabecera "Directory".

<p>Normalmente, no se debe preocupar por nada de esto ya que la reciente
<prgn>apt</prgn> y probablemente la antigua <prgn>dpkg-ftp</prgn> se harán cargo en forma totalmente transparente. Si
desea más información, consulte las <url id="&pool-faq;" 
name="RFC: implementación de las herramientas de paquetes">.

<!-- bumped up from sect2 to sect1 -->
<sect1 id="sid-history">Algunas notas históricas sobre Sid

<p>Cuando la actual Sid no existía, la <!--FTP removed -->
organización del archivo Debian adolecía de un grave inconveniente: se
suponía que cuando una arquitectura era creada en la rama
<file>inestable</file>, iba a ser liberada cuando la distribución se
transformara en la nueva versión <tt>estable</tt>. Para muchas
arquitecturas éste no era el caso con lo cual los correspondientes
directorios debían desplazarse ante un nuevo lanzamiento.  Esto no
resultaba práctico ya que esta acción consumía ingentes cantidades de
ancho de banda.

<p>Los administradores del archivo evitaron el problema durante muchos
años ubicando los binarios de las arquitecturas no liberadas en un
directorio especial llamado <file>sid</file>. Cerca del lanzamiento de estas
arquitecturas se creaba un enlace entre la versión <file>estable</file> y
<file>sid</file> y a partir de allí eran creadas dentro de la rama
<file>inestable</file> de manera normal. Esta disposición era un tanto
confusa para los usuarios.

<p>Con la llegada de los repositorios de paquetes (véase <ref id="pools">)
durante el desarrollo de la distribución Woody, los paquetes
binarios comenzaron a guardarse en un lugar estándar del depósito,
independientemente de la distribución, de modo que al liberar una
distribución no se produciera un gran consumo de ancho de banda en los
sitios réplica (existe, no obstante, un consumo gradual del ancho de
banda durante el proceso de desarrollo).

<sect1 id="incoming">Transferencias de paquetes en <file>incoming/</file>
<p>
Los paquetes transferidos primero se ubican en <url id="&incoming;">
luego de haber sido analizados para asegurar que realmente provienen de
un desarrollador de Debian (y son ubicados en el subdirectorio
<file>DELAYED</file> en el caso de una transferencia de una persona que
no es encargada: Non-Maintainer Upload (NMU)). Una vez por día, se
transladan de <file>incoming/</file> a <file>unstable/</file>.

<p>
En una emergencia, si desea instalar paquetes desde <file>incoming/</file>
antes de ir a <file>unstable/</file>. 


<sect1 id="snapshot">Recuperando una paquete antiguo
<p>
Mientra que las distribuciones de Debian más recientes se encuentran en
el directorio <file>debian</file> de cada <url id="&mirror-site;"
name="sitio réplica">, los archivos de las antiguas distribuciones de
Debian tales como Slink se guardan en <url id="&archivehome;"> o en el
directorio <file>debian-archive</file> de cada sitio réplica de Debian. 
<p>
Los paquetes antiguos de la rama <tt>de prueba</tt> e <tt>inestable</tt> 
se pueden localizar en <url id="&snapshothome;">.

</sect1>

<sect1 id="archsections">Distintas arquitecturas
<!--
What are all those directories inside <tt>dists/stable/main</tt>?
Simplified this !!!
-->

<p>Dentro de cada uno de los árboles de directorios principales
(<file>dists/stable/main</file>,
<file>dists/stable/contrib</file>, <file>dists/stable/non-free</file>, 
<file>dists/unstable/main</file>, etc.) las entradas de los paquetes binarios
residen en subdirectorios cuyos nombres indican la arquitectura
para la cual fueron compilados.

<list>
  <item><file>binary-all/</file> para paquetes no dependen de la arquitectura.
    Aquí se incluyen, por ejemplo, scripts escritos en Perl o documentación.
  <item><file>binary-<var>platform</var>/</file> para paquetes que se ejecutan
   en una plataforma determinada.
  <!-- Yes I simplified this -->
</list>

<p>Por favor, observe que los paquetes binarios para la versión <tt>de
prueba</tt> y la versión <tt>inestable</tt> ya no residen en estos
directorios sino en el directorio de nivel superior <file>pool</file>. No
obstante, por cuestiones de compatibilidad hacia atrás se siguen
conservando los archivos índice (<file>Packages</file> y
<file>Packages.gz</file>).

<p>Para las arquitectura binarias actualmente soportadas, consulte las
Release Notes de cada distribución.  Se pueden ubicar en los sitios de
Notas de versión para <url id="&stable-release;" name="stable"> y <url
id="&testing-release;" name="testing">.

<!-- Removed, above release note shall be enough.
<p>See <ref id="arches"> for more information.
-->

<sect1 id="source">El código fuente

<p>En el sistema Debian se incluye el código fuente para todo. Por otra
parte, los términos de la licencia de la mayoría de los programas del
sistema <em>exigen</em> que se distribuyan junto con su código fuente o
que proporcionen una manera de obtenerlo.

<p>Normalmente el código fuente se distribuye a través de los
directorios <file>source</file>, que son paralelos a todos los directorios
que contienen los binarios correspondiente a una arquitectura específica
o, más recientemente, en el directorio <file>pool</file> (véase <ref
id="pools">). Para obtener el código fuente sin estar familiarizado con
la estructura del archivo <!--FTP--> Debian, pruebe hacer <tt>apt-get
source <var>nombre_paquete</var></tt>.

<p>Algunos paquetes, en especial <package>pine</package>, se distribuyen
únicamente como código fuente debido a las limitaciones impuestas por su
licencia (hace poco se ha incluido el paquete
<package>pine-tracker</package> para facilitar la instalación de Pine).
El procedimiento descrito en <ref id="port"> y <ref id="packaging">
describe la manera de contruir un paquete en forma manual.

<p>Para los paquetes de los directorios "contrib" y "non-free", que 
formalmente no forman parte del sistema Debian, el código fuente puede
o no estar disponible.

<sect id="pkg-basics">Sistema de administración de paquetes Debian

<sect1 id="package-basics">Repaso sobre los paquetes Debian

<p>Los paquetes contienen generalmente todos los archivos necesarios
para implementar un conjunto de comandos relacionados o características.
Existen dos tipos de paquetes Debian:
<list>
  <item><em>Paquetes binarios</em>, que contienen ejecutables, archivos de
  configuración, páginas man/info, información sobre derechos de autor y
  otra documentación. Estos paquetes se distribuyen en un formato 
  de archivo específico de Debian (véase <ref id="deb-format">); 
  que se distinguen por tener a <tt>.deb</tt> como extensión de archivo.
  Los paquetes binarios se pueden desempaquetar usando la utilidad de Debian
  <prgn>dpkg</prgn>; se brindan más detalles en la página del manual.

 <item><em>Paquetes fuentes</em>, que consisten en un archivo <tt>.dsc</tt>
  que describe el paquete (incluyendo el nombre de los archivos que siguen),
  un archivo <tt>.orig.tar.gz</tt> que contiene el código fuente original
  sin modificar en formato tar comprimido con gzip y, generalmente, 
  un archivo <tt>.diff.gz</tt> que contiene los cambios del código fuente
  original específicos de Debian. La utilidad <prgn>dpkg-source</prgn> empaqueta y
  desempaqueta los archivos fuentes de Debian; se brindan más detalles 
  en la página del manual.
</list>

<p>La instalación de software mediante el sistema de paquetes utiliza
"dependencias" que fueron señaladas por las personas a
cargo de los paquetes.  Estas dependencias están documentadas en el
archivo <file>control</file> asociado a cada paquete.  Por ejemplo, el
paquete que contiene el compilador C GNU (<package/gcc/) depende del
paquete <package/binutils/ que incluye el enlazador y ensamblador.  Si
un usario intenta instalar <package/gcc/ sin haber previamente instalado
<package/binutils/, el sistema de administración de paquetes (dpkg)
mostrará un mensaje de error diciendo que necesita también a
<package/binutils/ y abortará la instalación de <package/gcc/ (no
obstante, el usuario insistente puede hacer caso omiso, véase <manref
name="dpkg" section="8">)  Para más detalles, véase <ref id="depends">
más abajo.

<p>Las herramientas de los paquetes de Debian se pueden usar para:
<list>
  <item>manipular y administrar paquetes o partes de paquetes,
  <item>ayudar al usuario a dividir paquetes que deben distribuirse
    a través de medios de tamaño limitado como, por ejemplo, disketes
  <item>asistir a los desarrolladores en la construcción de paquetes y
  <item>ayudar a los usuarios a instalar paquetes que se encuentran
    <!--FTP-->en sitios Debian remotos.
</list>

<sect1 id="deb-format"> Formato de los paquetes Debian <!--binary-->

<p>Un "paquete" Debian o un archivo Debian contiene los archivos
ejecutables, bibliotecas y la documentación asociada con un programa
particular o con un conjunto de programas relacionados.  Normalmente, un
archivo Debian tiene ua extensión de archivo que termina en
<tt>.deb</tt>.

<p>La estructura interna del formato de paquetes binarios de Debian se
describen en la página del manual <manref name="deb" section="5">.
Puesto que el formato interno está sujeto a cambios (entre los
lanzamientos principales de &debian;), siempre utilice <manref
name="dpkg-deb" section="1"> para manipular archivos <tt>.deb</tt>.

<footnote>
<!-- Below added by Osamu based on a message posted by Colin Watson -->
<p>El proyecto <prgn>debian-installer</prgn> introdujo paquetes con nombres
que terminan en <tt>.udeb</tt>.  En pocas palabras, es un formato
micro-<tt>.deb</tt> que no necesita seguir estrictamente la política de
Debian, carece de ciertos contenidos como, por ejemplo, documentación y está
destinado a ser usado únicamente por el <prgn>debian-installer</prgn>, el
nuevo instalador de Debian que está siendo desarrollado para el lanzamiento de
Sarge.  El formato de archivo de <tt>.deb</tt> y <tt>.udeb</tt> son idénticos.
El programa <prgn>udpkg</prgn> utilizado para manipular paquetes
<tt>.udeb</tt> tiene una capacidad inferior que el estándar <prgn>dpkg</prgn>
y soporta pocas relaciones entre paquetes. La diferencia en el nombre es
debido a que los encargados del archivo de Debian no estaban contentos con los
<tt>.deb</tt>s del archivo que no seguían con la política de Debian, por lo
que fue elegido un nombre diferente para acentuar esta diferencia y para hacer
menos probable que la gente inconcientemente los instale en sistemas reales.
Los <tt>.udeb</tt>s son utilizados en el disco ram inicial durante la
instalación base para crear únicamente un sistema Debian muy restringido.
</footnote>

<p>Los detalles internos de este formato de paquete binario de Debian se
describen en la página del manual <manref name="deb" section="5">.  Puesto que
este formato está sujeto a cambios (entre los lanzamientos principales de
&debian;), siempre utilice <manref name="dpkg-deb" section="1"> para manipular
archivos <tt>.deb</tt>.

<!-- Below added by Osamu Not sure but should be right -->

<p>Por lo menos en la distribución Sarge, todos los archivos del repositorio
de Debian son manipulables por los comandos estándar Unix <prgn>ar</prgn> y
<prgn>tar</prgn>, incluso cuando los comandos de <prgn>dpkg</prgn> no se 
encuentran disponibles.


<sect1 id="pkgname">Convención usada para designar a los paquetes Debian
<!--
Why are Debian package file names so long? 
-->
<p>Los nombres de los paquetes Debian <!--binary--> siguen la siguiente
convención:
<example>
<var>loquesea</var>_<var>ver</var>-<var>rev</var>_<var>arq</var>.deb
</example>
donde generalmente <var>loquesea</var> es el nombre del paquete,
<var>ver</var> es el nombre de versión, <var>rev</var> es el número
de revisión y <var>arq</var> es la arquitectura. Por supuesto, los archivos 
se pueden fácilmente cambiar de nombre. 
Uno puede averiguar qué paquete esta realmente contenido en un nombre
de archivo <var>loquesea</var> ejecutando el siguiente comando:
<example>dpkg --info <var>loquesea</var></example>

<p>El número de revisión  es asignado
por el desarrollador Debian o por quien creó el paquete. Un cambio en el
número de revisión generalmente indica que a cambiado algún aspecto del
empaquetado.

<!-- This get too detailed
<sect1 id="controlfile">El archivo de control de Debian
-->

<sect1 id="conffile">Preservando la configuración local
<!--
What is a Debian conffile
-->
<p>Los archivos que pueden ser modificados por el administrador local se
encuentran en <file>/etc/</file>. La política de &debian; establece que
durante la actualización de paquetes se deben conservar todos los cambios de
archivos de configuración local. 
<p>
Si con el propio paquete viene una versión predeterminada de un archivo configurable
localmente éste se denomina "conffile". El sistema de administración
de paquetes no actualiza los archivos de configuración que han sido
modificados por el administrador. Por otra parte, si el archivo de
configuración no ha sido modificado por el administrador, entonces será
actualizado junto con el resto del paquete. 
<p>Para dstar los archivos de configuración de un paquete 
ejecute el siguiente comando:
<example>
dpkg --status <var>paquete</var></example> 
y consulte la línea "Conffiles:".

<p>
Para más información sobre los archivos de configuración puede
consultar la sección "Archivos de configuración" del Manual de 
Normativa de Debian (véase <ref id="references">).

<sect1 id="maintscripts">Scripts de mantenimiento de Debian
<!--
What is a Debian preinst, postinst, prerm, and postrm
  script?
-->
<p><!--These files--> 
Los scripts de mantenimiento de Debian son scripts ejecutables que se
ejecutan automáticamente antes o después de la instalación de un
paquete.  Todos estos archivos, junto con otro llamado <file>control</file>,
son parte de la sección "control" de un archivo Debian.

<p>Los archivos individuales son:
<taglist>
<tag/preinst/
  <item>Este script se ejecuta antes que su paquete sea desempaquetado
  de su archivo Debian (<tt/.deb/). Muchos scripts "preinst" detienen
  los servicios de los paquetes que están siendo actualizados hasta que
  la actualización o instalación de los mismos haya finalizado (luego de
  la ejecución exitosa del script "postinst").

<tag/postinst/
  <item>Generalmente este script completa la configuración requerida por
  un paquete una vez desempaquetado de su archivo Debian (<tt/.deb/).  A
  menudo, los scripts 'postinst' le piden al usuario ciertos datos y/o
  le advierte que si acepta los valores predeterminados deberá volver a
  reconfigurar el paquete cuando la situación lo requiera. Muchos
  scripts "postinst" a continuación ejecutan los comandos necesarios
  para reiniciar el servicio una vez que el paquete nuevo
  correspondiente haya sido instalado o actualizado.

<tag/prerm/
  <item>Generalmente, este script detiene los demonios asociados a un
  paquete.  Es ejecutado antes de la eliminación de los archivos 
  relacionados con el mismo.

<tag/postrm/
  <item>Generalmente, este script modifica los enlaces u otros archivos
  asociados a un paquete y/o elimina los archivos creados por él (véase,
  también <ref id="virtual">.)
</taglist>

<p>Actualmente, todos los archivos de control se pueden encontrar en el
directorio <file>/var/lib/dpkg/info</file>. Los archivos asociados al
paquete <tt>loquesea</tt> comienzan con la palabra "loquesea" y llevan
las extensiones "preinst", "postinst", etc., según corresponda.  El
archivo <file>loquesea.list</file> de este directorio lista todos los
archivos que fueron instalados con el paquete <tt>loquesea</tt>
(obsérvese, que la ubicación de estos archivos es interno a <prgn>dpkg</prgn>
y puede estar sujeto a cambios)

<sect1 id="priority">Prioridad de los paquetes
<!--
What is a Required/Important/Standard/Optional/Extra
package?
-->
<p>Los encargados de la distribución, asignan a cada paquete Debian una
<em>prioridad</em> para ayudar al sistema de administración de paquetes.
Las prioridades son:
<list>
  <item>Los paquetes <strong>requeridos</strong> son necesarios para el
  correcto funcionamiento del sistema.  
  <p>Esto incluye todas las herramientas necesarias para reparar
  inconvenientes en el sistema.  Nunca debería eliminar estos paquetes
  ya que podría inutilizar su sistema e incluso podría ser incapaz de
  poder usar <prgn>dpkg</prgn> para recuperarlo.  Los sistemas con únicamente con
  paquetes requeridos probablemente no sean utilizables, pero tienen la
  funcionalidad suficiente como para permitir al administrador del
  sistema arrancar e instalar más programas. 
  <item>Los paquetes <strong>Importantes</strong> son los que
  habitualmente se encuentran en cualquier sistema tipo Unix.  <p>Son
  otros paquetes sin los que el sistema no funcionará correctamente o no
  será totalmente utilizable. <em>No</em> incluye a Emacs, a X11, a Tex
  o cualquier otra aplicación grande. Estos paquetes sólo constituyen la
  infraestructura básica.
<item>Los paquetes <strong>Estándar</strong> son aquellos que están en
todo sistema Linux e incluyen un sistema en modo texto razonablemente
pequeño pero no por eso demasiado limitado.
    <p>Esto es lo que se intalará por defecto si el usuario no
    selecciona otra cosa más.  No incluye aplicaciones demasiado
    grandes, pero incluye Emacs (que es más una parte de la
    infraestructura que una aplicación) y un subconjunto razonable de
    TeX y LaTeX (si resulta ser posible sin X).
<item>Los paquetes <strong>Opcionales</strong> incluye a todos los
paquetes que probablemente desearía instalar incluso si no está
familiarizados con ellos y no tiene requerimientos específicos.
 <p>Esto incluye a X11, a la distribución completa de TeX y a un montón
 de aplicaciones.
  <item>Los paquetes <strong>Extra</strong> son aquellos que entran en
  conflicto con otros de mayor importancia, y que carecen
  de utilidad para los usuarios que no están familiarizados con
  ellos, o que necesitan de requerimientos específicos como para
  incluirlos como "Opcionales".
</list>
<p>En la descripción del paquete nótese las diferencias entre "Prioridad:
requerida", "Sección: base" y "Esencial: sí".  "Sección: base" significa que
el paquete se instalará antes que cualquier otro en un sistema nuevo. La
mayoría de los paquetes de la "Sección: base" posee una "Prioridad requerida"
o por lo menos una "Prioridad: importante" y muchos de ellos están marcados
con la etiqueta "Esencial: sí".  "Esencial: sí" significa que para que el
sistema de administración de paquetes tal como <prgn>dpkg</prgn> pueda
eliminarlo del mismo necesita de una opción extra para forzar su
desinstalación. Por ejemplo, <package>libc6</package>, <package>mawk</package>
y <package>makedev</package> tienen una "Prioridad: requerida" y una "Sección:
base" pero no llevan la etiqueta "Esencial: sí".

<sect1 id="virtual">Paquetes virtuales

<p>Un paquete virtual es un nombre genérico que se le asigna a cualquier
paquete de un grupo de paquetes que básicamente proporcionan la misma
funcionalidad.  Por ejemplo, tanto <prgn>tin</prgn> como <prgn>trn</prgn> son
lectores de noticias y, por lo tanto, deberán satisfacer cualquier
dependencia exigida por un programa que requiera de un lector de
noticias a fin de que éste resulte útil.  Se
dice que ambos proporcionan el "paquete virtual" llamado
<package>news-reader</package>.

<p>De manera similar, muchos paquetes tales como <package>exim</package>,
<package>exim4</package>, <package>sendmail</package> y
<package>postfix</package> proporcionan la funcionalidad de un agente de
transporte de correo.  Por lo tanto, se dice que proporcionan el mismo paquete
virtual <package>mail transport agent</package>.  Si se instala alguno de los
dos, cualquier programa que dependa de la instalación de un agente de
transporte de correo se ejecutará sin problemas debido a la existencia de este
paquete virtual.

<p>Debian posee un mecanismo de modo que, si se instala en un sistema
más de un paquete que proporciona el mismo paquete virtual, el
administrador puede configurar uno de los dos como paquete preferido.
El comando utilizado se llama <prgn>update-alternatives</prgn>
y se describe mas adelante en <ref id="alternatives">.
 
<sect1 id="depends">Dependencias entre paquetes
<p>El sistema de paquetes Debian maneja declaraciones de dependencia que se
utilizan para expresar que un paquete necesita de la instalación de otro para
funcionar.
<list>
  <item>El Paquete A <em>Depende</em> del Paquete B si B debe instalarse
  sí o sí para poder ejecutar A.  En algunos casos A Depende no sólo de
  B, sino  de una versión específica de B.  En este caso, la dependencia
  de versión constituye un límite inferior, es decir, A dependerá de
  cualquier versión de B más reciente que la versión especificada.
  
  <item>El Paquete A <em>Recomienda</em> al Paquete B si el encargado
  del mismo considera que la mayoría de los usuarios no querrán a A sin
  tener también la funcionalidad proporcionada por B. 
  
  <item>El Paquete A <em>Sugiere</em> al Paquete B si B contiene
  archivos que están relacionados y mejoran la  funcionalidad de A.
  La misma relación se expresa diciendo que el paquete B
  <strong>Mejora</strong> el paquete A.
  
  <item>El Paquete A <em>Está en conflicto</em> con el Paquete B cuando
  A no funciona si se instala B en el sistema.  A menudo los "Conflictos" están relacionados con "Reemplazos".  
 
 <item>El Paquete A <em>Reemplaza</em> el Paquete B cuando los archivos
  instalados por B se eliminan o se sobreescriben por
  los archivos de A.
 
 <item>El Paquete A <em>Proporciona</em> el Paquete B cuando todos los
  archivos y funcionalidad de B están incorporados en A.
</list>

<p>Información más detallada sobre el uso de cada uno de estos términos
se puede encontrar en el <em>Manual para la creación de paquetes</em> y el
<em>Manual de Normativa</em>.

<p>Obsérvese que <prgn>dselect</prgn> tiene un mayor control sobre los
paquetes considerados como  <strong>Recomendados</strong> y
<strong>Sugeridos</strong> que <prgn>apt-get</prgn>, el cual simplemente
obtiene todos los paquetes considerados como
<strong>Dependientes</strong> y deja todos los paquetes considerados
como <strong>Recomendados</strong> y <strong>Sugeridos</strong>.  En sus
versiones modernas ambos programas usan APT como interfaz.

<sect1 id="pre-depends">Significado de "Pre-depende"

<p><prgn>dpkg</prgn> configura siempre primero el paquete del cual otro
Depende. Sin embargo, <prgn>dpkg</prgn> generalmente desempaquete los archivos
de los paquetes de modo arbitrario independientemente de las dependencias
(desempaquetar consiste en extraer los archivos de un paquete y ubicarlos en
el lugar correcto) No obstante, si un paquete <strong>Pre-Depende</strong> de
otro éste último se desempaquetará y configurará primero.

<footnote>
Este mecanismo fue proporcionado para realizar actualizaciones del sistema seguras del
formato <tt>a.out</tt> al formato <tt>ELF</tt> en donde el
<strong>orden</strong> en que se desempaquetaban los paquetes es
crítica. 
</footnote>

El uso de esta dependencia se mantiene al mínimo.

<sect1 id="pkgstatus">Estado de un paquete <!-- What is meant by
unknown/install/remove/purge/hold in the package status?  --> <p> El
estado de un paquete puede ser "unknown" (desconocido), "install" (para
instalar), "remove" (para eliminar), "purge" (para purgar), o "hold" (en
espera). Estas banderas indican lo que el usuario quiere hacer con un
paquete (como viene indicado por las acciones del usuario en la sección
"Select" de <prgn>dselect</prgn> o por la invocación directa de
<prgn>dpkg</prgn> por parte del mismo).

<p>Significados:
<list>
  <item><strong>unknown</strong> (desconocido) - el usuario nunca indicó
  si deseaba el paquete. 
  <item><strong>install</strong> (para instalar)
  - el usuario desea instalar o actualizar el paquete.
  <item><strong>remove</strong> (para eliminar) - el usuario desea
  eliminar el paquete pero no sus archivos de configuración ya
  existentes.
  <item><strong>purge</strong> (para purgar) - el usuario desea eliminar
  completamente el paquete incluyendo sus archivos de configuración.
  <item><strong>hold</strong> (para conservar)  - el usuario no desea
  que el paquete sea procesado, es decir, quiere conservar la versión
  actual con su estado independientemente de cual sea.
</list>

<sect1 id="puttingonhold">Evitando la actualización de un paquete
<!--
How do I put a package on hold?
Made major rewrite to accommodate new /etc/apt/preferences in progress
-->
<p>Existen dos mecanismos para evitar la actualización de un paquete, 
mediante <prgn>dpkg</prgn> o, comenzando con Woody, mediante APT.

<p>Con <prgn>dpkg</prgn>, exporte primero la lista de las selecciones
de paquetes:
  <example>
  dpkg --get-selections &gt; <var>selections.txt</var>
  </example>
A continuación, edite el archivo resultante
<file><var>selecciones.txt</var></file>, cambiando la línea que contiene
el paquete que se desea conservar, por ejemplo <package/libc6/, de:
<example>
libc6                       install
</example>
a:
<example>
libc6                       hold
</example>
Guárdelo y actualice la base de datos de <prgn>dpkg</prgn> haciendo:
<example>
dpkg --set-selections <var>selectiones.txt</var>
</example>
O, si conoce el nombre del paquete que desea conservar, simplemente escriba:
<example>echo libc6 hold | dpkg --set-selections</example>
Este proceso conserva los paquetes durante el proceso de instalación 
de cada paquete.

<p>El mismo efecto se puede obtener mediante <prgn>dselect</prgn>.
Simplemente entre a la pantalla [S]elect, busque el paquete cuyo estado
desea conservar y presione la tecla `=' (o la tecla  `H'). Los cambios
se producirán inmediatamente al salir de la pantalla.

<p>En la distribución Woody el sistema a APT pose un mecanismo nuevo
alternativo para conservar paquetes durante el proceso de obtención de
archivos .deb usando <tt>Pin-Priority</tt>.  Véase la página del manual
<manref name="apt_preferences" section="5"> junto con
<url id="&apt-howto;"> o el paquete <package>&p-apt-howto;</package>.


<sect1 id="sourcepkgs">Paquetes fuente
<p>
Los paquetes fuente se distribuyen en un directorio denominado
<file>source</file> y se pueden descargar manualmente o usar
<example>
apt-get source loquesea
</example> 
para conseguirlos (consulte
la página del manual <manref name="apt-get" section="8"> para saber cómo
configurar APT para que haga esto).

<sect1 id="sourcebuild">Construir un paquete binario a partir de un
paquete fuente

<p>Para un paquete <tt>loquesea</tt>, necesitará los archivos
<file>loquesea_*.dsc</file>, <file>loquesea_*.tar.gz</file> y
<file>loquesea_*.diff.gz</file> para compilar los fuentes (observación:
para un paquete Debian nativo el paquete <tt>.diff.gz</tt> no existe).

<p>Una vez que los tiene a todos, y si tiene instalado el paquete
<package/dpkg-dev/ , el comando 
<example>
dpkg-source -x <var>loquesea_version-revision</var>.dsc
</example>
extraerá el paquete en un directorio llamado <tt><var>loquesea-version</var></tt>.
<p>
Ejecutar el siguiente comando para construir el paquete binario:
<example>
$ cd loquesea-version
$ su -c "apt-get update ; apt-get install fakeroot"
$ dpkg-buildpackage -rfakeroot -us -uc
</example>
Finalmente haga, 
<example>
# su -c "dpkg -i ../<var>loquesea_version-revision_arch</var>.deb"
</example>
para instalar el paquete recientemente construido.
Véase <ref id="port">.

<!-- Woody has simpler commands and build-depends -->

<sect1 id="creatingdebs">Creando paquetes Debian nuevos

<p>Para una información más detallada, consulte la
Guía para Nuevos Encargados de Paquetes de Debian
disponible en el paquete <package/maint-guide/ o en
<url id="&maint-guide;" name="&urlname;">.

<!--
<url id="ftp://ftp.debian.org/debian/doc/package-developer/maint-guide.html.tar.gz">.
-->
<!--
<sect id="pkgtools">Package Management Tools
Once many were moved up here but now moved down
-->

<!-- 
Rarely use command for Woody, exclude but mention its manual page above.
<sect2 id="dpkg-deb">dpkg-deb
Removed below
-->

<!--
move up contents as a part of APT
<sect2 id="apt-get">apt-get
-->

<!--
Rarely use command for woody, exclude but mention its manual page above.
<sect2 id="dpkg-split">dpkg-split
removed
-->

<!--
Moved down
<sect1 id="updaterunning">Upgrade running system
Debian claims to be able to update a running program;
  how is this accomplished?
-->

<!--
<sect1 id="whatpackages">How can I tell what packages are already installed
  on a Debian system?
removed dpkg list and status things here
-->

<!-- these information are in debian.sgml and above
<sect1 id="filesearch">How can I find out what package produced a particular
  file?
removed dpkg list and status things here
-->
<sect id="uptodate">Actualizando un sistema Debian

<p>Uno de los objetivos de Debian es proporcionar una manera de actualizar sin
problemas, segura y fiable. El sistema de paquetes alerta al administrador
sobre cambios importantes o, a veces, le solicita que tome decisiones. 

<p>También debería leer las Release Notes, el documento que describe los
detalles sobre actualizaciones específicas, que acompañan a todos los
CDs de Debian y disponibles en la WWW en <url id="&stable-release;"> o
<url id="&testing-release;">.

<p>
En <ref id="package"> se proporciona una guía práctica sobre
actualizaciones.  Esta sección describe solamente los detalles básicos
comenzando con las herramientas de empaquetar.


<sect1 id="dpkg"><prgn>dpkg</prgn>

<p>Este es el programa principal para manipular los archivos de un
paquete ; consulte <manref name="dpkg" section="8"> para una descripción
completa.  <!-- "install dpkg" deleted because it's a required package
-->

<p><prgn>dpkg</prgn> viene acompañado con diversos programas
suplementarios primitivos.

<list>
<item><prgn>dpkg-deb</prgn>: Manipula los archivos <tt>.deb</tt>. 
 <manref name="dpkg-deb" section="1">
<item><prgn>dpkg-ftp</prgn>: un antiguo comando para la obtención de paquetes. 
 <manref name="dpkg-ftp" section="1">
<item><prgn>dpkg-mountable</prgn>: un antiguo comando para la obtención de paquetes. 
 <manref name="dpkg-mountable" section="1">
<item><prgn>dpkg-split</prgn>: divide un paquete grande en archivos más pequeños. 
 <manref name="dpkg-split" section="1">
</list>

<prgn>dpkg-ftp</prgn> y <prgn>dpkg-mountable</prgn> han quedado obsoletos
luego de la introducción del sistema APT.

<!-- Insert APT and apt-get here: -->
<sect1 id="apt">APT

<p>APT (Advanced Packaging Tool) es una interfaz avanzada del sistema de
paquetes de Debian que consiste en diversos programas cuyos nombres
generalmente comienzan con "apt-".  <prgn>apt-get</prgn>,
<prgn>apt-cache</prgn> y <prgn>apt-cdrom</prgn> son herramientas de la
línea de comandos para el manejo de paquetes.  Estos también funcionan
como frontales de usuario para otras herramientas tales como
<prgn/dselect/ y <prgn/aptitude/.

<p>Para más información, instale el paquete <package/apt/ y lea 
<manref name="apt-get" section="8">,
<manref name="apt-cache" section="8">,
<manref name="apt-cdrom" section="8">,
<manref name="apt.conf" section="5">,
<manref name="sources.list" section="5">, 
<manref name="apt_preferences" section="5"> (Woody) y
<file>/usr/share/doc/apt/guide.html/index.html</file>.

<p>Una fuente alternativa de información es el 
<url id="&apt-howto;" name="APT HOWTO">.
Éste se puede instalar mediante <package/apt-howto/ en
<file>/usr/share/doc/apt-howto/en/apt-howto-en.html/index.html</file>.

<p><tt>apt-get upgrade</tt> y <tt>apt-get dist-upgrade</tt> tienden
a obtener todos los paquetes situados bajo "Dependen:" y
descarta todos los paquetes listados en "Recomendados:" y "Sugeridos:".  
Para evitar esto, use <prgn>dselect</prgn>.


<!-- removed boring APT info -->

<!-- bump from sect2 to sect1 -->
<sect1 id="dselect-basics"><prgn>dselect</prgn>

<p>Este programa es una interfaz de usuario con menús para el sistema de
administración de paquetes Debian. Particularmente resulta útil para las
primeras instalaciones y actualizaciones a gran escala.  Véase <ref
id="dselect">.

<p>Para más información, instale el paquete <package/install-doc/ y lea
<file>/usr/share/doc/install-doc/dselect-beginner.en.html</file> o <url
id="&dselect-beginner;" name="Documentación dselect para
principiantes">.


<!-- removed boring dselect info -->

<!-- move this up and make this sect1
<sect2 id="apt">APT
-->
<!-- remove this and mention above in dpkg
<sect2 id="dpkg-ftp">dpkg-ftp
-->
<!-- remove this
<sect2 id="mirror">mirror
-->

<!-- remove this section and mention above in dpkg
<sect2 id="dpkg-mountable">dpkg-mountable
-->

<!--
<sect1 id="upgradesingle">Must I go into single user mode in order to
  upgrade a package?

<p>No.  Packages can be upgraded in place, even in running systems.
Debian has a <prgn>start-stop-daemon</prgn> program that is invoked to stop,
then restart running process if necessary during a package upgrade.
-->

<sect1 id="updaterunning">Actualizando un sistema en funcionamiento

<p>El kernel (el sistema de archivos) en los sistemas &debian; admite el
reemplazo de archivos incluso cuando están siendo usados.

Cuando los paquetes son actualizados cualquier servicio proporcionado por
estos paquetes son reiniciados si han sido configurados para ejecutarse en el
nivel de ejecución presente. El sistema Debian no exige usar el modo
monousuario para actualizar un sistema en funcionamiento.

<sect1 id="savedebs">Archivos <tt>.deb</tt> descargados y en caché

<p>Si ha descargado manualmente los paquetes a su disco (lo cual no es
en absoluto necesario, véase arriba para la descripción de
<prgn>dpkg-ftp</prgn> o APT), entonces después de haber instalados puede
eliminarlos de su sistema.

<p>Si utiliza APT, los archivos se guardan en el caché situado en el
directorio <file>/var/cache/apt/archives</file>.  Tras la instalación
puede eliminarlos (<tt>apt-get clean</tt>) o copiarlos al directorio
<file>/var/cache/apt/archives</file> de otra máquina para economizar el
tiempo de descarga para instalaciones posteriores.

<!-- insert apt-get clean... thing and dselect configuration here XXXX
-->

<sect1 id="keepingalog">Mantener un registro de las actualizaciones

<p><prgn/dpkg/ mantiene un registro de los paquetes que han sido
desempaquetados, configurados, eliminados y/o purgados pero (hasta el
momento) no mantiene un registro de la actividad del terminal que tiene
lugar cuando el paquete está siendo manipulado.

<p>La manera más sencilla de superar este inconveniente consiste en
ejecutar las sesiones de <prgn>dpkg</prgn>, <prgn>dselect</prgn>,
<prgn>apt-get</prgn>, etc., con el programa <manref name="script"
section="1">.

<sect id="boot">El proceso de arranque de Debian 

<sect1 id="init">El programa <prgn>init</prgn>

<p>Al igual que todos los sistemas Unix, Debian arranca ejecutando el programa
<prgn>init</prgn>.  El archivo de configuración de <prgn>init</prgn> (que es
el <file>/etc/inittab</file>) indica que el primer script que se debe ejecutar
es el <file>/etc/init.d/rcS</file>.
<p>
Lo que ocurre a continuación depende de si se encuentra instalado el paquete
<package>sysv-rc</package> o el <package>file-rc</package>.
A continuación, supondremos que se encuentra instalado el paquete
<package>sysv-rc</package> (<package>file-rc</package> contiene su propio
script <file>/etc/init.d/rcS</file> y utiliza un archivo en vez de enlaces
simbólicos en los directorios rc para controlar qué servicios se inician 
en los diferentes niveles de ejecución)
<p>
El archivo <file>/etc/init.d/rcS</file> del paquete <package>sysv-rc</package>
ejecuta todos los scripts situados en <file>/etc/rcS.d/</file> para realizar
inicializaciones tales como la comprobación y montaje de los sistemas de
archivos, la carga de módulos, la inicialización de los servicios de red,
la configuración del reloj, etc. Luego, y por compatibilidad, también ejecuta
todos los archivos (excepto aquellos con un `.' en su nombre) situados en
<file>/etc/rc.boot/</file>.
Este último directorio está reservado para el administrador del sistema
y su utilización ha caído en desuso.
Véase <ref id="init-hints"> y el
<url id="&sysvinit;" name="Sistema de niveles de ejecución y scripts init.d">
en el Manual de Normativa de Debian para más información.
<p>
Debian no utiliza el directorio <tt>rc.local</tt> del tipo BSD.

<sect1 id="runlevels">Niveles de ejecución

<p>Luego de completar el proceso de arranque, <prgn>init</prgn> inicia todos
los servicios que han sido configurados para ejecutarse en el nivel de
ejecución predeterminado. Este último viene indicado por una entrada
<tt>id</tt> en el <file>/etc/inittab</file>.
Debian viene con <tt>id=2</tt>.

<p>
Debian utiliza los siguientes niveles de ejecución:
<list compact>
  <item>1 (modo monousuario),
  <item>2 al 5 (modos multiusuario) y
  <item>0 (apagar el sistema),
  <item>6 (reiniciar el sistema).
</list>
Tambien puede utilizarse los niveles de ejecución 7, 8 y 9 pero sus
directorios rc no se van llenando a medida que son instalados los paquetes.
<p>
Cambie los niveles de ejecución utilizando el comando <prgn>telinit</prgn>.

<p>
Al entrar a un nivel de ejecución se ejecutan todos los scripts ubicadosi
en <file>/etc/rc<var>nivel_de_ejecución</var>.d/</file>. La primera letra del nombre del
script determina la <strong>manera</strong> en que se ejecuta el
script:
Los scripts cuyos nombres comienzan con <tt>K</tt> se ejecutan con el
argumento <tt>stop</tt>.
Los scripts que comienzan con <tt>S</tt> se ejecutan con el argumento
<tt>start</tt>.
Los scripts se ejecutan de acuerdo al orden alfabético de sus nombres;
de esta manera los scripts "stop" se ejecutan antes que los scripts "start"
y los dos díguitos a continuación de <tt>K</tt> o <tt>S</tt> determinan el
orden en que se ejecutan los scripts.

<p>
Los scripts situados en  <file>/etc/rc<var>nivel_de_ejecución</var></file>
son de hecho sólo enlaces simbólicos que apuntan a los scripts situados en 
<file>/etc/init.d/</file>
Cada script también acepta como argumento "restart" y "force-reload";
estos métodos se pueden utilizar para reiniciar los servicios una vez que haya
sido arrancado el sistema o forzarlos para que vuelvan a cargar sus archivos
de configuración.


<p>Por ejemplo:
<example>
# /etc/init.d/exim4 force-reload
</example>

<sect1 id="custombootscripts">Personalizando los niveles de ejecución

<p>
La personalización de los niveles de ejecución es una tarea avanzada del
administrador del sistema. Los siguientes consejos son válidos para la mayoría
de los servicios.
<p>
Para habilitar el servicio <var>servicio</var> en el nivel de ejecución 
<var>R</var> cree el enlace simbólico
<file>/etc/rc<var>R</var>.d/S<var>xy</var><var>servicio</var></file>
con objetivo
<file>../init.d/<var>servicio</var></file>.
El número de secuencia <var>xy</var> debe ser igual al asignado 
al servicio cuando fue instalado el paquete.
<p>
Para deshabilitar un servicio, cambie de nombre el enlace simbólico 
de modo que su nombre comience con <tt>K</tt> y no con <tt>S</tt>
y su número de secuencia sea 100 menos <var>xy</var>.
<p>
Para estos fines, es conveniente usar un editor de niveles de ejecución tales
como <prgn>sysv-rc-conf</prgn> o <prgn>ksysv</prgn>.
<p>
En vez de cambiarle el nombre, es posible eliminar el enlace simbólico
<tt>S</tt> de un servicio de un directorio de niveles de ejecución
determinado.  Esto no deshabilita el servicio sino que lo deja en un estado
"potencial" al menos en lo que respecta al sistema init
<package>sysv-rc</package> : al cambiar de nivel de ejecución el servicio no
se lo activará ni se lo detendrá sino que se lo dejará como estaba,
independientemente si esta ejecutándose o no. Obsérvese, no obstante, que un
servicio que está en este estado potencial se activará si se actualiza su
paquete independientemente si estaba o no ejecutándose antes de la
actualización.  Este es un atajo conocido del sistema Debian actual.  Nótese
además que debería conservar los enlaces simbólicos <tt>K</tt> de un servicio
en los niveles de ejecución  0 y 6.  Si borra todos los enlaces simbolicos de
un servicio, entonces al actualizar el paquete del mismo restaurará todos los
enlaces simbólicos a su estado predeterminado de fábrica.

<p>
<strong>No</strong> es aconsejable realizar modificaciones
a los enlaces simbólicos situados en <file>/etc/rcS.d/</file>.


<sect id="diverse">En apoyo a la diversidad
<p>
Debian ofrece diversas alternativas para satisfacer los deseos del
administrador del sistema sin dañar al sistema. 
<list>
<item><prgn>dpkg-divert</prgn>, véase <ref id="dpkg-divert">.
<item><prgn>equivs</prgn>, véase <ref id="equivs">.
<item><prgn>update-alternative</prgn>, véase <ref id="alternatives">.
<item><prgn>make-kpkg</prgn> puede alojar distintos cargadores de arranque. 
      Véase <manref name="make-kpkg" section="1">.
</list>
Cualquier archivo situado en <file>/usr/local/</file> pertenece al
administrador del sistema y &debian; no los va a tocar. La mayoría los
archivos situados en <file>/etc/</file> <!-- mtab es una excepción --> son
<tt>conffiles</tt> (archivos de configuración) y &debian; no los
sobreescribirá durante una actualización salvo que el administrador del
sistema los solicite en forma explícita.

<sect id="i18n">Internacionalización
<p>
El sistema &debian; se encuentra internacionalizado y provee soporte
para la visualización y entrada de caracteres en diversos idiomas, tanto
en la consola como en X. Diversos, documentos, páginas del manual y
mensajes del sistema han sido traducidos en un número creciente de
idiomas. Durante la instalación, Debian le pide al usuario elegir el
idioma de instalación  ( y a veces una variante local del idioma)
<p> Si el sistema que ha instalado no soporta todas las características
que necesita de su idioma, si necesita cambiar de idioma o instalar un
teclado diferente que soporte su idioma, consulte <ref id="l10n">.

<sect id="kernel-details">Debian y el kernel

<p>
Véase <ref id="kernel">.

<sect1 id="non-debian-kernel">Compilando un kernel desde un fuente no
perteneciente a Debian

<p><!--Yes.  But you have-->
Uno tiene que comprender la política de Debian en relación a las cabeceras.

<p>Las bibliotecacs C de Debian se construyen con las versiones más reciente
de las cabeceras del <strong>kernel</strong> de la rama <strong>estable</strong>.

<p>Por ejemplo, la versión Debian-1.2 usaba la versión 5.4.13 de las
cabeceras.  Esta práctica contrasta con los paquetes fuentes del kernel
de Linux distribuidos por todos los sitios de archivos FTP de Linux que
usan incluso versiones más recientes de las cabeceras.  Los archivos de
cabecera del kernel distribuidos con los fuentes del mismo están
ubicados en <file>/usr/include/linux/include/</file>.

<p>Si necesita compilar un programa con las cabeceras del kernel que son
más nuevas que las proporcionadas por <package/libc6-dev/ debe incluir
al compilar <tt>-I/usr/src/linux/include/</tt> en la línea de comando.
Esto me ocurrió una vez con el empaquetado del demonio automounter
(<package/amd/).  Cuando los nuevos núcleos cambiaron algunos detalles
internos relacionados con el NFS, <prgn>amd</prgn> necesitaba saber de
ellos. Esto me obligó a incluir las cabeceras de los últimos núcleos.

<sect1 id="customkernel">Herramientas para crear núcleos personalizados

<p>A los usuarios que desean (o deben) crear un núcleo personalizado
se les recomienda descargar el paquete <package/kernel-package/.  
Este paquete contiene el script para crear el paquete del kernel y 
proporciona la posibilidad de crear un paquete Debian kernel-image
ejecutando el comando
<example>
# make-kpkg kernel_image
</example>
en el directorio principal de los fuentes del kernel.
La ayuda disponible se obtiene ejecutando el comando
<example>
# make-kpkg --help
</example>
o mediante la página del manual <manref name="make-kpkg" section="1">.
y <ref id="kernel">.

<p>Los usuarios deben descargar por cuenta propia el código fuente más
reciente del núcleo (o del núcleo de su preferencia) de su sitio Linux
favorito a menos que se encuentre disponible un paquete
kernel-source-<var>version</var> (donde <var>version</var> hace
referencia a la versión del kernel). El script de arranque
<file>initrd</file> de Debian requiere de un parche especial para el
kernel llamado <prgn>initrd</prgn>; véase <url id="&bug-initrd;">.
 
<p>En el archivo <file>/usr/doc/kernel-package/README</file> se dan
instrucciones detalladas para el uso del paquete
<package/kernel-package/.

<!-- TODO: check out a new source of details, this README isn't too useful,
  I'm told (joy) -->

<sect1 id="modules">Cuidados especiales para tratar con módulos

<p>El paquete <package/modconf/ de Debian proporciona un script de shell
(<file>/usr/sbin/modconf</file>) que se puede usar para personalizar la
configuración de los módulos.  Este script presenta una interfaz basada
en menús en donde el usuario puede elegir los distintos controladores de
dispositivos que se pueden cargar en el sistema.  Las respuestas se
utilizan para personalizar el archivo <file>/etc/modules.conf</file>
(que contiene los alias y demás argumentos que se deben usar para los
diferentes módulos) gracias a los archivos <file>/etc/modutils/</file> y
<file>/etc/modules</file> (que contiene los módulos que se deben cargar
durante el arranque).

<p>Al igual que los archivos (nuevos) <file>Configure.help</file> que ahora
están disponibles para admitir la construcción de núcleos personalizados, el
paquete <package/modconf/ package viene con una serie de archivos de ayuda (en
<file>/usr/share/modconf/</file>) que proporcionan información detallada sobre
los argumentos apropiados para cada uno de los módulos.  Véase <ref
id="kernel-modules"> para algunos ejemplos.


<sect1 id="removeoldkernel">Desinstalando el paquete de un kernel antiguo

<p>El script <prgn>kernel-image-<var>NNN</var>.prerm</prgn> comprueba si el
kernel que está actualmente ejecutando es el mismo que el que está
intentando desinstalar.  Por lo tanto, puede eliminar de manera segura
los núcleos que no desea seguir usando con el siguiente comando:

<example>
# dpkg --purge --force-remove-essential kernel-image-<var>NNN</var>
</example>

(obviamente, hay que reemplazar <var>NNN</var> por el número de versión
y revisión de su kernel)

</sect>
