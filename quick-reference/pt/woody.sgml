<!-- CVS revision of this document "$Revision: 1.3 $"  -->
<!-- CVS revision of original english document "1.22"  -->
<chapt id="woody">Atualizando uma distribuição

<![%f-ref;[
<p>
As notas de lançamento oficiais para atualização estão localizadas em
<url id="&stable-release;">
e
<url id="&testing-release;"> (trabalho em progresso).

<sect>Preparação para transição ("stable" para "testing")
<p>
Atualização pela rede para "testing" pode ser feita como explicado a
seguir (execute o script 
<url id="&examples;" 
name="go-woody"> para fazer isso em um comando):
<example>
# cd /etc/apt
# cp -f sources.list sources.old 
# :&gt;sources.list  
# cd /
# apt-setup noprobe 
 ... select http or ftp
# cd /etc/apt
# grep -e "^deb " sources.list             &gt;sources.deb
# grep -e "^deb-" sources.list             &gt;sources.src
# sed -e "s/^d/#d/" \
  /usr/share/doc/apt/examples/sources.list &gt;sources.list
# sed -e "s/stable/testing/"  \
  sources.deb &gt;&gt;sources.list
# apt-get update
# apt-get install apt apt-utils
# cat &gt;preferences &lt;&lt;EOF
 Package: *
 Pin: release a=testing
 Pin-Priority: 700
 
 Package: *
 Pin: release a=unstable
 Pin-Priority: 70

 EOF
# sed -e "s/stable/unstable/" sources.deb \
  &gt;&gt;sources.list
# sed -e "s/stable/unstable/" sources.src | \
 sed -e "s/^deb-/#deb-/"  &gt;&gt;sources.list
</example>
Um guia para o arquivo <file>/etc/apt/preferences</file> (veja <manref
name="apt_preferences" section="5">):
<example>
track stable:            mudar o Pin-Priority do testing para 80
track testing:           manter como está (instala unstable de /unstable)
track testing(unstable): mudar o  Pin-Priority do unstable para 600
track unstable(testing): mudar o  Pin-Priority do unstable para 800
</example>
Um conselho para a escolha do Pin-Priority é mudar do topo para a base
da tabela acima, conforme o tempo passa, começando no momento
imediatamente após um lançamento da distribuição até o momento do freeze
para o próximo lançamento. 
<p>
Exemplos de <file>/etc/apt/preferences</file> que travam alguns pacotes
chave na versão mais madura enquanto mantém outros pacotes não
essenciais na versão menos madura estão disponíveis no 
<url id="&examples;" name="subdiretório de exemplos"> como
<file>preferences.testing</file> e <file>preferences.unstable</file>.  Por
outro lado, o <file>preferences.stable</file> força todos os pacotes a
serem rebaixados para "stable".
<p>
Certifique-se de configurar o APT para usar um proxy, se necessário,
ajustando a variável de ambiente <tt>http_proxy</tt> para o valor do
http em <file>/etc/apt/apt.conf</file>.
<p>
O procedimento descrito nesta seção atualiza apenas o APT e um conjunto
mínimo de pacotes para evitar problemas	relacionados a dependências.
</sect>
]]>

<sect>Atualização para "testing"
<p>
Depois da preparação acima, o sistema pode ser atualizado.

<sect1>Melhor prática de atualização usando o <prgn>dselect</prgn>
<p>
Se um sistema tem muitos pacotes que incluem pacotes <tt>-dev</tt>,
etc., recomenda-se o método a seguir usando o <prgn>dselect</prgn> para
um controle de pacotes mais refinado. 
<example>
# dselect update # sempre faça isso antes de atualizar
# dselect select # selecione pacotes em "suggests" e "recommends"
# dselect install
</example>
O <prgn>dselect</prgn> sempre funciona :)

<![%f-ref;[
<sect1>Prática ruim de atualização com o <prgn>apt-get</prgn>
<p>
<strong>O uso do <prgn>apt-get</prgn> descrito abaixo é muito comum, mas
<em>não</em> é recomendado para atualizações de sistema.</strong>
]]>

Se você precisar atualizar sem o <prgn>dselect</prgn> depois do Woody,
considere usar o <prgn>aptitudes</prgn> e outras opções.

<![%f-ref;[
<p>
Se um sistema não tem muitos pacotes ou o repositório do &debian; não teve
grandes alterações, o método a seguir deve ser suficiente (algumas
vezes). 
<example>
# apt-get update # sempre faça isso antes de atualizar
 ... para atualizar o sistema com seleções "depends": 
# apt-get upgrade                 # sempre faça isso antes de atualizar
 ... para atualizar o sistema todo com seleções "depends" : 
# apt-get -u dist-upgrade
 ... ou para atualizar e manter com as seleções atuais do dselect (novo,
 melhor): 
# apt-get -u dselect-upgrade      # usa o resultado do ajuste do dselect
</example>
<p>
Uma vez que esse método de atualização usa o <prgn>apt-get</prgn>, sua
gestão de <em>recommends</em> e	<em>suggests</em> é limitada. 
Veja <ref id="depends">.
]]>

</sect>

<sect>Configuração do Woody
<p>
Para um sistema Woody instalado recentemente, edite os arquivos
<file>/etc/apt/sources.list</file>,  <file>/etc/apt/apt.conf</file>, e
<file>/etc/apt/preferences</file> para manter a mesma estrutura como
descrito na seção acima.
<p>
O APT no Potato não tinha as funções descritas em 
<manref name="apt_preferences" section="5">.
</sect>

<![%f-ref;[
<sect id="spy"><file>sources.list</file> otimizado
<p>
Crie o <file>sources.list</file> automaticamente, baseado na latência e
largura de banda.
<example>
# apt-get install apt-spy
# cd /etc/apt ; mv sources.list sources.list.org
# apt-spy -d testing -l sources.apt
</example>
O <prgn>netselect-apt</prgn> é muito similar ao <prgn>apt-spy</prgn>.
Ele cria um <file>sources.list</file> mais completo, mas usa um método
de escolha inferior para o melhor espelho (comparação de tempo de ping).
O <prgn>apt-setup</prgn> é o método manual para seleção dos espelhos no
<file>sources.list</file>,  mas ainda é a melhor maneira de escolher os
espelhos até que o <prgn>apt-spy</prgn> melhore.
<p>
Esses esforços de otimização não produziram uma melhora significativa
para mim. Usar sites próximos escolhidos com o <prgn>apt-setup</prgn>
foi suficiente. 
</sect>

]]>

</chapt>

