<!-- CVS revision of this document "$Revision: 1.1 $"  -->
<!-- CVS revision of original english document "1.27"  -->
<!--Line width ruler (ruler uses 78 characters) 34567890123456789012345-->

<chapt id="edit">Edytory

<sect id="pop-editor">Popularne edytory
<p>
Linux oferuje wiele alternatyw dla konsolowych edytorów tekstu. W¶ród nich:
<list compact>
<item><prgn>vim</prgn>:    Potê¿ny i lekki edytor, wywodz±cy siê z BSD. VI iMproved.
<item><prgn>emacs</prgn>:  Podstawowy i ciê¿ki edytor, wywodz±cy siê z projektu GNU. 
 Autentyk RMS-a (Richarda M. Stallmana).
<item><prgn>xemacs</prgn>: Emacs: Nastêpne pokolenie, pochodz±cy od Lucid.
<item><prgn>mcedit</prgn>: GNU edytor dla pocz±tkuj±cych. 
  Identyczny z wewnêtrznym edytorem z <prgn>mc</prgn>. Zobacz <ref id="mcedit">.
<item><prgn>ae</prgn>:     Domy¶lny ma³y edytor (Potato). Nale¿y go unikaæ.
<item><prgn>nano</prgn>:   Domy¶lny ma³y edytor (Woody). Na¶laduje
  <prgn>pico</prgn>. 
<item><prgn>joe</prgn>:    Dla fanów czasów WordStara lub TurboPascala.
<item><prgn>jed</prgn>:    Szybki, w pe³ni wyposa¿ony, obs³ugiwany przez menu, ze skrótami klawiszowymi Emacsa.
<item><prgn>jove</prgn>:   Bardzo ma³y edytor ze skrótami klawiszowymi Emacsa.
<item><prgn>nvi</prgn>:    Nowy vi. B³±d w b³±d kompatybilny z oryginalnym vi.
</list>
<p>
Aby zmieniæ domy¶lny edytor, u¿yj <tt>update-alternatives --config editor</tt>.
Wiele programów u¿ywa równie¿ zmiennych ¶rodowiskowych takich jak
<tt>EDITOR</tt> lub <tt>VISUAL</tt> aby zdecydowaæ, którego edytora u¿yæ. Zobacz
<ref id="mcedit">.
<p>
Tak¿e kilka edytorów ¶rodowiska X Window jest godnych uwagi:
<list compact>
<item><prgn>gvim</prgn>: Vim z interfejsem graficznym (Pakiety <package>vim</package> i <package>vim-gtk</package>).
<item><prgn>emacs</prgn>: Jedyny prawdziwy Emacs (automatycznie wykrywa X Window). 
<item><prgn>xemacs</prgn>: Emacs nastêpnej generacji (automatycznie wykrywa X
Window). 
</list>
Wywo³ania tych klentów X zawieraj± standardowe opcje, takie jak  
<tt>-fn <var>a24</var></tt>, które u³atwiaj± ¿ycie starszym u¿ytkownikom, takim 
jak ja :)  Zobacz <ref id="xclnt">.
</sect>

<sect id="bin-editor">Edytory awaryjne
<p>
Istnieje kilka edytorów umieszczonych w katalogu <file>/bin</file>.  Jeden z nich powinien 
byæ zainstalowany do prostego edytowania plików, gdy <file>/usr</file> jest nieosi±galne.
<p>
<list compact>
<item><package>elvis-tiny</package>: Minimalny edytor vi (<prgn>vi</prgn> aby uruchomiæ)
<item><package>nano-tiny</package>:  Minimalny edytor ró¿ny od vi (<prgn>nano-tiny</prgn> aby uruchomiæ)
<item><package>ed</package>:         Minimalny edytor (zawsze obecny, ale trudny w u¿yciu)
</list>
<p>

<sect>Emacs i Vim

<sect1>Wskazówki do Vima
<p>
Przeczytaj dokument "VIM - main help file" wciskaj±c &lt;F1&gt; podczas pracy
programu.

<example>
&lt;F1&gt;           Pomoc
&lt;esc&gt;          Powrót do normalnego trybu
V              Tryb wizualny
i              Tryb wprowadzania
:              Polecenia linii poleceñ
:set tw=72     Ustawia szeroko¶æ tekstu na 72
&lt;F11&gt;          Tryb wprowadzania (wklejania)
:r! date -R    Wstaw datê zgodn± z RFC-822
q<var>a</var>             Zapisz sekwencjê klawiszy w rejestrze <var>a</var>
q              Zatrzymaj zapisywanie sekwencji klawiszy
@<var>a</var>             Wykonaj sekwencjê klawiszy z rejestru <var>a</var>
:edit <var>foo.txt</var>   Edytuj inny plik przez wczytanie <var>foo.txt</var>
:wnext         Zapisz bie¿±cy plik i edytuj nastêpny plik
</example>

<tt>q</tt> i <tt>@</tt> mog± byæ u¿ywane do zapisywania i odtwarzania prostych makr.
Na przyk³ad, aby utworzyæ makro, które wstawia znaczniki pochy³o¶ci HTML wokó³
s³owa pod kursorem, mo¿esz wpisaæ <tt>qii&lt;i&gt;^[ea&lt;/i&gt;^[q</tt>
(gdzie <tt>^[</tt> jest klawiszem ESC). Gdy pó¼niej ustawisz kursor na pocz±tku
s³owa i wpiszesz <tt>@i</tt>, zostan± dodane znaczniki &lt;i&gt; i &lt;/i&gt;.
<p>
Zobacz równie¿ <ref id="vimgpg">.
</sect1>

<sect1>Wskazówki do Emacsa
<p>
<example>
&lt;F1&gt;                Pomoc
&lt;F10&gt;               Menu
C-u M-! date -R     Wstaw datê zgodn± z RFC-822
</example>
</sect1>

<sect1>Uruchamianie edytora
<p>
<example>
uruchom edytor:                            emacs plik  vim plik
uruchom w trybie zgodno¶ci z vi:                       vim -C
uruchom w trybie niezupe³nie zgodnym z vi:             vim -N
uruchom z opcjami domy¶lnymi:              emacs -q    vim -N -u NONE
</example>
</sect1>

<sect1 id="editkey">Podsumowanie poleceñ edytorów (Emacs, Vim)
<p>
<example>
wyj¶cie:                       C-x C-c         :qa /:wq /:xa /:q!
Powrót/tryb poleceñ:           C-g             &lt;esc&gt;
Do ty³u (w lewo):              C-b             h
Do przodu (w prawo):           C-f             l
W dó³:                         C-n             j
W górê:                        C-p             k
pocz±tek linii(^):             C-a             0
koniec linii($):               C-e             $
Polecenia wielokrotne:         C-u nnn polec   nnn polecenie
Polecenia wielokrotne:         M-cyfra polecenie
zapisz plik:                   C-x C-s         :w plik
pocz±tek bufora:               M-&lt;             1G
koniec bufora:                 M-&gt;             G
przewiñ 1 ekran do przodu:     C-v             ^F
przewiñ 1/2 ekranu do przodu:                  ^D
przewiñ 1 liniê do przodu:                     ^E
przewiñ 1 ekran do ty³u:       M-v             ^B
przewiñ 1/2 ekranu do ty³u:                    ^U
przewiñ 1 liniê do ty³u:                       ^Y
przewiñ inne okno:              M-C-v
skasuj w miejscu kursora:       C-d             x
skasuj od kurs. do koñca linii: C-k             D
przeszukiwanie w przód:         C-s
przeszukiwanie wstecz:          C-r
wyszukaj w przód:               C-s enter       /
wyszukaj wstecz:                C-r enter       ?
szukanie wyra¿eñ regularnych:   M-C-s
szukanie wyra¿eñ reg. wstecz:   M-C-r
znajd¼ wyra¿enie regularne:     M-C-s enter     /
znajd¼ wyra¿enie reg. wstecz:   M-C-r enter     ?               
Pomoc:                          C-h C-h         :help
Pomoc Apropos:                  C-h a
obja¶nienia klawiszy:           C-h b           :help [klawisz]
Pomoc (Info):                   C-h i
Pomoc G³ówny tryb:              C-h m
Pomoc samouczek:                C-h t           :help howto
Cofnij (Undo):                  C-_             u
Anuluj cofniêcie (Redo):        C-f             ^R
Zaznacz pozycjê kursora:        C-@             m{a-zA-Z}
Zmieñ zaznaczenie i pozycjê:    C-x C-x
Id¼ do znacznika w bie¿±cym pliku:              '{a-z}
Id¼ do znacznika w dowolnym pliku:              '{A-Z}
kopiuj obszar:                  M-w             {w wizualnym}y
usuñ obszar:                    C-w             {w wizualnym}d
Wklej i zachowaj bufor:         C-y             <![%FIXME;[p y ? XXX FIXME XXX]]>
Wklej z bufora usuniêtych:      M-y             p
zmieñ obszar na du¿e litery:    C-x C-u         {w wizualnym}U
zmieñ obszar na ma³e litery:    C-x C-l         {w wizualnym}u
Wstaw znak specjalny:           C-q numer ósemkowo/sekwencja klawiszy 
                                                ^V dziesiêtnie/sekwencja klawiszy
zast±p:                         M-x replace-string      :&percnt;s/aaa/bbb/g
zast±p wyra¿enie regularne:     M-x replace-regexp      :&percnt;s/aaa/bbb/g
zast±p z potwierdzeniem:        M-&percnt;                     :&percnt;s/aaa/bbb/gc
zast±p z potwierdzeniem:        M-x query-replace
zast±p wyra¿enie reg. z potwierdzeniem: M-x query-replace-regexp
Otwórz plik:                    C-x C-f         :r plik
Zapisz plik:                    C-x C-s         :w
Zapisz wszystkie bufory:        C-x s           :wa
Zapisz jako:                    C-x C-w plik    :w plik
zmieñ bufor:                    C-x b
wy¶wietl bufory:                C-x C-b         :buffers
Prze³±cz na tylko-do-odczytu:   C-x C-q         :set ro
zapytaj i usuñ bufor:           C-x k
Podziel pionowo:                C-x 2           :split
Podziel poziomo:                C-x 3           :vsplit (wersja 6)
Przenie¶ do innego okna:        C-x o           ^Wp
Usuñ to okno:                   C-x 0           :q
Skasuj inne okno (okna):        C-x 1           ^Wo
uruchom kompilacjê w tle:       M-x compile
usuñ kompilacjê w tle:          M-x kill-compilation
uruchom make                                    :make Makefile
sprawd¼ informacje o b³êdach:   C-x`            :echo errmsg
uruchom pow³okê loguj±c wyj¶cie: M-x shell      :!script -a tmp
...wyczy¶æ znaki backspace, ...                 :!col -b &lt;tmp &gt;record
...zapisz/przywo³aj zapis pow³oki: C-x C-w record  :r record
uruchom pow³okê:                M-! sh          :sh
uruchom polecenie:              M-! cmd         :!cmd
uruchom polecenie i wstaw:      C-u M-! cmd     :r!cmd
uruchom filtr:                  M-| plik        {wizualny}:w file
uruchom filtr i wstaw:          C-u M-| filter  {wizualny}:!filter
poka¿ opcjê:                                    :se[t] {opcja}?
przywróæ warto¶æ domy¶ln± opcji                 :se[t] {opcja}&
ustaw opcjê logiczn± (boolean)                  :se[t] no{opcja}
prze³±cz opcjê logiczn± (boolean)               :se[t] inv{option}
zawiñ tekst na 72. kolumnie                     :se tw=72
nie zawijaj                                     :se tw=0
automatycznie wcinaj                            :se ai
rozwijaj tabulator                              :se et
ustaw znaki komentarza (mail)                   :se comments=n:&gt;,n:\|

uruchom GDB                     M-x gdb                        
opisz tryb GDB                  C-h m                          
rusz siê o jedn± liniê          M-s
nastêpna linia                  M-n
rusz siê o jedn± instrukcjê     M-i                            
zakoñcz bie¿±c± ramkê stosu     C-c C-f                        
kontynuuj                       M-c                            
podnie¶ ramki argumentów        M-u                            
upu¶æ ramki argumentów          M-d                            
skopiuj ilo¶æ od punktu, wstaw na koñcu: C-x &                          
ustaw pu³apkê                   C-x SPC                        
</example>
</sect1>

<sect1>Konfiguracja Vima
<p>
W celu u¿ycia wszystkich funkcji Vima oraz pod¶wietlania sk³adni, nale¿y dodaæ
nastêpuj±ce linie do <file>~/.vimrc</file> lub <file>/etc/vimrc</file>:
<example>
set nocompatible
set nopaste
set pastetoggle=&lt;f11&gt;
syn on
</example>
Tryb wklejania umo¿liwia unikanie wp³ywu automatycznego wcinania przy operacjach
wytnij-i-wklej w terminalu. Robi on wiêcej ni¿ proste ":set noai".
<p>
Je¿eli interesuje Ciê integracja z GnuPG, zobacz <ref id="vimgpg">.
</sect1>

<sect1>Ctags
<p>
<tt>apt-get install exuberant-ctags</tt> i uruchom <prgn>ctags</prgn> na 
plikach ¼ród³owych. Wpisz <tt>:tag <var>nazwa_funkcji</var></tt> w Vimie, 
aby przeskoczyæ do linii w
której <var>nazwa_funkcji</var> siê zaczyna.
Znaczniki dzia³aj± dla C, C++, Javy, Pythona i wielu innych jêzyków.
<p>
Emacs posiada te same mo¿liwo¶ci ctags.
</sect1>

<sect1>Konwersja ekranu z pod¶wietlaniem sk³adni do kodu HTML
<p>
<tt>so \$VIMRUNTIME/syntax/2html.vim</tt> wywo³ane z linii poleceñ Vima zamieni
pod¶wietlany tekst na kod HTML. Zapisz u¿ywaj±c <tt>:w plik.html</tt> i
<tt>:q</tt>. U¿ytecznie dla kodu w jêzyku C itd.
</sect1>

<sect1>Rozdzielanie ekranu w <prgn>vimie</prgn>
<p>
<prgn>vim</prgn> mo¿e edytowaæ wiele plików w ¶rodowisku z wielokrotnie podzielonym ekranem.
W celu uzyskania szczegó³owych informacji, wpisz <tt>:help usr_08.txt</tt>.
<p>
Aby rozdzieliæ ekran miêdzy ró¿ne pliki, wpisz w lini poleceñ vi:
<example>
:split <var>inny-plik</var>
:vsplit <var>inny-plik</var>
</example>
Lub w linii poleceñ pow³oki:
<example>
$ vi -o file1.txt file2.txt   # Podzia³ poziomy
$ vi -O file1.txt file2.txt   # Podzia³ pionowy
</example>
wywo³a to vi podzielonego na wiele okien.
<example>
$ vimdiff file.txt~ file.txt         # sprawdza ostatnie zmiany w file.txt
$ vimdiff file.en.sgml file.fr.sgml  # sprawdza zamiany w przek³adzie/t³umaczeniu
$ gvimdiff file.txt~ file.txt        # w ¶rodowisku X Window
</example>
spowoduje wy¶wietlenie ³adnego widoku zmian miêdzy orygina³em i kopi± zapasow±.
W przypadku SGML-a dopasowuje znaczniki, wiêc porównywanie t³umaczeñ w tym
trybie dzia³a bardzo dobrze.
<p>
Specjalne ruchy kursora wywo³ywane przez Ctrl-W:
<example>
Ctrl-W +      zwiêksza rozmiar okna
Ctrl+W -      zmniejsza rozmiar okna
Ctrl-W h      przejd¼ do okna po lewej
Ctrl-W j      przejd¼ do okna poni¿ej
Ctrl-W k      przejd¼ do okna powy¿ej
Ctrl-W l      przejd¼ do okna po prawej
...
</example>
Aby kontrolowaæ przewijanie ekranu u¿yj nastêpuj±cych opcji:
<example>
:set scrollbind
:set noscrollbind
</example>
</sect1>

</sect>

</chapt>
