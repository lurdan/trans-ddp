<!-- CVS revision of this document "$Revision: 1.6 $"  -->
<!-- CVS revision of original english document "1.38"  -->

<!--Line width ruler (ruler uses 78 characters)     34567890123456789012345-->

<chapt id="tutorial">Samouczki Debiana

<p>
Ten rozdzia³ przedstawia nowym u¿ytkownikom podstawow± wiedzê o ¶wiecie
Linuksa.
Je¶li u¿ywa³e¶ ju¿ Linuksa, potraktuj go jako przypomnienie wiadomo¶ci.

<sect>¬ród³a informacji
<p>
Patrz do <url id="&debiandoc;"
name="Debian Documentation Project (DDP)">, gdzie znajduj± siê najbardziej
wiarygodne informacje o Debianie. Zazwyczaj wiele z tych dokumentów jest
instalowanych w <file>/usr/share/doc/</file>. Spójrz te¿ do
<file>/usr/share/doc-base/</file>, gdzie zamieszczone s± odno¶niki
do dokumentacji systemu. Dodaj 
<tt>export CDPATH=.:/usr/share/doc:/usr/src/local</tt> do
<file>~/.bash_profile</file>, aby mieæ 
³atwiejszy dostêp do katalogów z dokumentacj±.
<p>

<url id="&linuxdoc;" name="Linux Documentation Project
(LDP)"> posiada najbardziej wiarygodne, ogólne informacje o Linuksie.  
Zawarto¶æ LDP jest zwykle instalowana w
<file>/usr/share/doc/HOWTO/</file>.
<p>
Poruszaj siê w¶ród dokumentów na lokalnych i zdalnych FTP, u¿ywaj±c F9
w programie Midnight Commander (zob. <ref id="mc">). 
</sect>


<sect>Konsola Linuksa

<sect1 id="login">Login
<p>
W zwyk³ym systemie Linux znajduje siê sze¶æ niezale¿nych pseudoterminali. 
Prze³±czaj siê
miêdzy nimi wciskaj±c jednocze¶nie klawisze Lewy-Alt i klawisze
od F1 do F6. Ka¿dy pseudoterminal pozwala na niezale¿ne
logowanie siê do kont u¿ytkownika. ¦rodowisko wielou¿ytkownikowe to wspania³a
cecha Uniksa, po poznaniu której ciê¿ko pracowaæ inaczej.
<p>
Dobrym nawykiem uniksowym jest logowanie siê na konto zwyk³ego u¿ytkownika do
wiêkszo¶ci zadañ. Muszê przyznaæ, ¿e kiedy¶ u¿ywa³em konta superu¿ytkownika
(konto root) czê¶ciej, ni¿ potrzebowa³em, g³ównie z powodu wygody i mojego
niechlujstwa.
<p>
Obecnie, zwykle u¿ywam normalnego konta oraz polecenia <tt>sudo</tt>,
<tt>super</tt> czy <tt>su -c</tt>, aby uzyskaæ ograniczone przywileje roota.  
</sect1>


<sect1 id="newuser">Dodawanie konta u¿ytkownika
<p>
Po instalacji systemu zwykle dodajê konto zwyk³ego u¿ytkownika.
Je¶li nazw± u¿ytkownika jest &ldquor;penguin&rdquor;,
<example>
# adduser penguin
</example>
utworzy to konto.
<p>
U¿ywam polecenia <tt>vigr</tt> do modyfikacji <file>/etc/group</file> jak ni¿ej:
<example>
adm:x:4:admin
src:x:40:admin, debian, ...
...
</example>
Przy domy¶lnej instalacji systemu, cz³onkowie grupy <tt>adm</tt> mog±
czytaæ wiele plików dziennika z <file>/var/log/</file> oraz u¿ywaæ
<prgn>xconsole</prgn>. Grupa <tt>staff</tt> bêd±ca w³a¶cicielem
<file>/home</file>, sprawia, ¿e jej cz³onkowie mog± zarz±dzaæ kontami.
Grupa <tt>src</tt> jest w³a¶cicielem <file>/usr/src/</file>, który jest
u¿ywany do kompilacji j±dra, itd. By uzyskaæ pe³niejsze informacje
o znaczeniu u¿ytkowników i grup, zobacz <url id="&f-users-and-groups;"
name="U¿ytkownicy i grupy">.
<p>
Osobi¶cie u¿ywam grupy <tt>staff</tt> dla u¿ytkowników wykonuj±cych czynno¶ci
administracyjne i maj±cych wy³±czny przywilej <prgn>su</prgn>
(zob.<ref id="wheel">) oraz <tt>src</tt> dla CVS (zob. <ref id="cvs">).
<p>
Zobacz <prgn>adduser</prgn>, <prgn>addgroup</prgn>, 
<prgn>vipw</prgn>, <tt>vipw -s</tt>, <prgn>vigr</prgn>, oraz
<tt>vigr -s</tt> do w³a¶ciwej konfiguracji u¿ytkowników i grup.
</sect1>


<sect1>Jak zamykaæ system
<p>
Tak jak ka¿dy wspó³czesny OS, który cache'uje pliki w pamiêci, Linux wymaga
w³a¶ciwej procedury zamykania systemu, zanim zasilanie mo¿e zostaæ bezpiecznie
wy³±czone.  
Polecenie dla trybu wielou¿ytkownikowego:
<example>
# shutdown -h now
</example>
Polecenie  dla trybu jednego u¿ytkownika:
<example>
# poweroff -i -f
</example>
Poczekaj na wy¶wietlenie przez system informacji &ldquor;System halted&rdquor; i dopiero wtedy
wy³±cz zasilanie.
Je¶li APM zosta³o w³±czone w BIOSie i Linuksie, komputer wy³±czy siê sam.  
Zobacz <ref id="apm"> w celu zapoznania siê ze szczegó³ami.
</sect1>


<sect1>Edycja w linii poleceñ
<p>
Domy¶lna pow³oka, <prgn>bash</prgn>, posiada mo¿liwo¶æ edycji historii.  
U¿yj klawisza kursora &ldquor;góra&rdquor;, aby wej¶æ do historii, a nastêpnie klawiszy
kursora tak, jak oczekujesz. Inne wa¿ne kombinacje klawiszy:
<example>
Ctrl-U:            Usuwa liniê przed kursorem
Ctrl-D:            Przerwanie wprowadzania
Klikniêcie lewym przyciskiem myszy i przeci±gniêcie: Zaznacz i skopiuj do schowka (gpm)
Klikniêcie ¶rodkowym przyciskiem myszy: Wklej schowek na miejsce kursora (gpm)
Ctrl-V TAB:        Wstawia TAB bez rozszerzeñ.
</example>
<p>
W normalnej konsoli Linuksa tylko lewe klawisze Ctrl i Alt
dzia³aj±, jak oczekujesz.
</sect1>


<sect1>Wykonywanie poleceñ
<p>
Typowe wywo³anie polecenia korzysta z nastêpuj±cego wpisu w pow³oce:
<example>
$ LC_ALL=fr ls -la
</example>
W podanym przyk³adzie program <prgn>ls</prgn> jest uruchamiany w tle ze
zmienn± ¶rodowiskow± <tt>LC_ALL</tt> ustawion± na <tt>fr</tt> dla uzyskania
jêzyka francuskiego i argumentem linii poleceñ ustawionym na <tt>-la</tt>
dla wy¶wietlania wszystkiego ze szczegó³ami. Je¶li linia poleceñ jest
zakoñczona znakiem <tt>&amp;</tt>, to polecenie jest uruchamiana w tle.  
Dzia³anie w tle pozwala u¿ytkownikowi na uruchamianie wielu programów w
jednej pow³oce.
<p>
Na wykonywanie poleceñ mo¿na wp³ywaæ nastêpuj±cymi skrótami klawiszowymi.
<example>
Ctrl-C:                  Koñczy program
Ctrl-Z:                  Tymczasowo zatrzymuje program
Ctrl-S:                  Zatrzymuje wy¶wietlanie na ekran
Ctrl-Q:                  Przywraca wy¶wietlanie na ekran
Ctrl-Alt-Del:            Reboot/zatrzymanie systemu (zob. /etc/inittab)
</example>
O zarz±dzaniu wykonywaniem programu przeczytaj w
<manref name="bash" section="1"> o <tt>jobs</tt>, <tt>fg</tt>,
<tt>bg</tt> i <tt>kill</tt>.
</sect1>


<sect1>Najbardziej podstawowe polecenia do zapamiêtania
<p>
Poni¿ej znajduj± siê podstawowe polecenia Uniksa:
<example>
ls, ls -al, ls -d, pwd, cd, cd ~user, cd -, 
cat /etc/passwd, less, bg, fg, kill, killall, 
uname -a, type <var>nazwa_polecenia</var>, sync, netstat,
ping, traceroute, top, vi, ps aux, tar, zcat, 
grep, ifconfig, ...
</example>
<p>
Sprawd¼ znaczenie poleceñ przez wpisanie ich w pow³oce albo wpisanie
<tt>man</tt> lub <tt>info</tt> plus nazwa polecenia. Wiele poleceñ linuksowych
wy¶wietla skrócon± pomoc po wywo³aniu ich w nastêpuj±cy sposób:
<example>
$ nazwa_polecenia --help
$ nazwa_polecenia -h
</example>
<tt>whatis <em>nazwa_polecenia</em></tt> wy¶wietla jednoliniowe podsumowanie
o ka¿dym poleceniu w systemie, dla którego istnieje wpis w podrêczniku (manual).
</sect1>



<sect1>System X Window 
<p>
Aby uruchomiæ system X Window z konsoli w linii poleceñ wpisujemy:
<!-- Osamu: formal name here per request in "man 7 X" manpage -->
<example>
# exec startx
</example>
Prawe klikniêcie na g³ównym oknie spowoduje pojawienie siê menu.
</sect1>

<sect1>Wa¿ne skróty klawiszowe
<p>
Oto niektóre wa¿ne kombinacje klawiszy do zapamiêtania (plus
i minus odnosz± siê do klawiatury numerycznej):
<example>
Alt-F1 do F6:        Prze³±czenie miêdzy pseudoterminalami
Ctrl-Alt-F1 do F6:   Prze³±czenie miêdzy pseudoterminalami
                     (z X-window, DOSEMU, itd.)
Alt-F7:              Prze³±czenie z powrotem do X-window
Ctrl-Alt-minus:      Zmiana rozdzielczo¶ci ekranu w X-window
Ctrl-Alt-plus:       Zmiana rozdzielczo¶ci ekranu w przeciwn± stronê w X-window
Ctrl-Alt-Backspace:  Zakoñczenie X-ów
Alt-X, Alt-C, Alt-V: Zwyk³e windowsowe/makowe Wytnij, Kopiuj, Wklej, z tym, ¿e
                     klawisz Ctrl w niektórych programach jest zast±piony 
                     przez Alt (np. w Netscape Composer).
</example>
</sect1>
</sect>


<sect id="mc">Midnight Commander (MC)
<p>
Midnight Commander (MC) jest uniwersalnym narzêdziem dla konsoli Linuksa oraz
innych ¶rodowisk terminalowych.

<sect1>Instalowanie MC
<p>
<example>
# apt-get install mc
</example>
Nastêpnie zmieñ wpisy w <file>~/.bashrc</file> 
(lub <file>/etc/bash.bashrc</file>, 
wywo³ywanym z <file>.bashrc</file>), tak jak dok³adnie opisano to w jego podrêczniku,
<manref name="mc" section="1">, w opisie opcji <tt>-P</tt>.
To pozwala MC na zmianê katalogu roboczego na wyj¶ciu.
<p>
Je¶li uruchamiasz MC w terminalu, np. <prgn>kon</prgn> i <prgn>Kterm</prgn> 
dla japoñskiego, który u¿ywa pewnych znaków graficznych, dodanie <tt>-a</tt> 
do linii poleceñ MC mo¿e pomóc w uchronieniu przed problemami.
</sect1>


<sect1>Uruchamianie MC
<p>
<example>
$ mc
</example>
MC zajmuje siê wszystkimi operacjami na plikach wykonywanymi przez jego
menu, wymagaj±c minimalnego wysi³ku od u¿ytkownika.
</sect1>

<sect1>Mened¿er plików
<p>
Domy¶lne ustawienie to dwa okna zawieraj±ce listy plików. Kolejnym u¿ytecznym
trybem jest ustawienie prawego okna w tryb &ldquor;informacja&rdquor;, co pozwala zobaczyæ
prawa dostêpu itp. Poni¿ej s± niektóre wa¿niejsze skróty klawiszowe.
Z u¿yciem uruchomionego demona <prgn>gpm</prgn> mo¿na te¿ u¿ywaæ myszy.
(Upewnij siê, ¿e naciskasz klawisz Shift w celu uzyskania normalnego dzia³ania
Kopiuj i Wklej w MC.)
<list compact>
<item>F1: Menu pomocy
<item>F3: Wewnêtrzny podgl±d pliku
<item>F4: Wewnêtrzny edytor
<item>F9: Uaktywnienie rozwijanego menu
<item>F10: Wyj¶cie z Midnight Commander
<item>Tab: Prze³±czanie pomiêdzy dwoma oknami
<item>Insert: Wybranie pliku do operacji na wielu plikach, np. dla kopiowania
<item><tt>Del</tt>: Usuniêcie pliku (B±d¼ ostro¿ny&mdash;ustaw MC w tryb bezpiecznego usuwania.)
<item>Klawisze kursora: Oczywiste
</list>
</sect1>


<sect1>Triki linii poleceñ
<p>
<list>
<item>Ka¿de polecenie <prgn>cd</prgn> zmieni katalog pokazany na wybranym ekranie.
<item>Ctrl-Enter lub Alt-Enter wkleja nazwê pliku do linii poleceñ.
U¿ywaj tego ³±cznie z poleceniem <prgn>cp</prgn> czy <prgn>mv</prgn>
z edycj± w pow³oce.
<item>Alt-Tab poka¿e dostêpne polecenia z linii poleceñ.
<item>Mo¿esz okre¶liæ katalogi startowe dla obu okien podaj±c je jako parametry przy
wywo³ywaniu MC; na przyk³ad <tt>mc /etc /root</tt>.
<item><tt>Esc</tt> + <var>klawisz numeryczny</var> == <tt>F<var>n</var></tt> 
(np.
  Esc + 1 = F1, itd.; Esc + 0
  = F10)
<item> Klawisz Esc == klawisz Alt (= Meta,
  M-); np. wpisz Esc + c by otrzymaæ Alt-c
</list>
</sect1>


<sect1 id="mcedit">Edytor
<p>
Wewnêtrzny edytor ma interesuj±cy schemat kopiuj-i-wklej. Naci¶niêcie
F3 oznacza pocz±tek wyboru, kolejne wci¶niêcie F3 oznacza
koniec wyboru i pod¶wietla zaznaczony obszar. Wtedy mo¿esz ruszaæ kursorem.
Gdy naci¶niesz F6, zaznaczony obszar zostanie przeniesiony do miejsca,
w którym jest kursor. Gdy przyci¶niesz F5, zaznaczony obszar zostanie
skopiowany i wklejony w miejsce, w którym jest kursor. F2 zapisuje
plik. F10 powoduje zakoñczenie MC. Klawisze kursora zwykle dzia³aj±
intuicyjnie.
<p>
Edytor mo¿e byæ wywo³any dla pliku:
<example>
$ mc -e plik_do_edycji
$ mcedit plik_do_edycji
</example>
<p>
Nie jest to edytor wielookienkowy, ale mo¿esz osi±gn±æ podobny efekt u¿ywaj±c
wielu konsoli linuksowych. Aby kopiowaæ pomiêdzy oknami, u¿yj klawiszy 
Alt-F<var>n</var>
do prze³±czania konsol wirtualnych, a do wklejania fragmentu pliku do innego
pliku, u¿yj &ldquor;Plik-&gt;Wstaw plik&rdquor; lub &ldquor;Plik-&gt;Kopiuj do pliku&rdquor;.
<!-- Osamu: you could try "&rarr;" instead of "-&gt;" to get a right arrow
above. It's valid SGML, but I don't know if all browsers support it.
Jens: "&rarr;" doesn't split a line in "->" (after "-")

For this version 1, let us keep it as is for consistency.  
I will think about it for version 2,  Thanks. 

Anyway, PS/PDF compile is real problem (Jens: LaTeX supports \rightarrow!)
-->
<p>
Wewnêtrzny edytor mo¿e byæ zast±piony przez dowolnie wybrany zewnêtrzny.
<p>
Tak¿e wiele programów u¿ywa zmiennej ¶rodowiskowej <tt>EDITOR</tt> czy 
<tt>VISUAL</tt> by okre¶liæ, którego edytora u¿yæ. Je¶li nie odpowiada Ci
<prgn>vim</prgn>, ustaw go na <tt>mcedit</tt> przez dodanie poni¿szych linii 
do <file>~/.bashrc</file>:
<example>
...
export EDITOR=mcedit
export VISUAL=mcedit
...
</example>
<p>
Zalecam jednak ustawienie ich na <tt>vim</tt>, je¶li to mo¿liwe. Przywykniêcie
do poleceñ vi(m)a jest dobr± rzecz±, gdy¿ s± one nieod³±czn± cech± ¶wiata
Linuksa/Uniksa.
</sect1>

<sect1>Podgl±d
<p>
Bardzo sprytne narzêdzie. Jest ¶wietny do wyszukiwania s³ów w dokumentach.
Zawsze u¿ywam go do przegl±dania plików w katalogu <file>/usr/share/doc</file>.
To najszybszy sposób na przegl±danie mas informacji o Linuksie. Podgl±d mo¿na
uruchomiæ bezpo¶rednio w taki sposób:
<example>
$ mc -v nazwa_pliku_do_podgl±du
</example>
(Zauwa¿, ¿e niektóre pakiety ³ami± zasady i wci±¿ przechowuj± swoje
dokumentacje w <file>/usr/doc</file>.)
</sect1>

<sect1>W³asno¶ci auto-startu
<p>
Wci¶nij Enter na pliku i w³a¶ciwy program zajmie siê jego zawarto¶ci±. Jest to bardzo wygodna cecha MC.
<example>
wykonywalny:       Wykonanie pliku wykonywalnego
plik man, html:    Przes³anie zawarto¶ci pliku przez przegl±darkê
plik tar, gz, rpm: Przegl±danie zawarto¶ci pliku jako podkatalogu
</example>
W celu umo¿liwienia dzia³ania funkcji przegl±dania, &ldquor;przegl±dalne&rdquor; pliki
nie mog± byæ okre¶lone jako wykonywalne. Zmieñ ich status u¿ywaj±c
polecenia <prgn>chmod</prgn> lub przez menu plików w MC.
</sect1>

<sect1>Wirtualny system plików FTP
<p>
MC mo¿e s³u¿yæ do dostêpu do plików przez Internet przy u¿yciu FTP. Wejd¼ do
menu wciskaj±c F9, nastêpnie wpisz `p', by aktywowaæ wirtualny
system plików FTP. Wpisz URL w formie:
<tt>nazwa_u¿ytkownika:has³o@nazwa_hosta.nazwa_domeny</tt>, co spowoduje
pojawienie siê katalogu zdalnego, wygl±daj±cego jak lokalny.
</sect1>


</sect>
<sect id="file-system">Podstawy systemu plików GNU/Linux
<p>
Ka¿dy plik i katalog w systemie plików GNU/Linux jest zwi±zany z u¿ytkownikiem,
który posiada plik (w³a¶ciciel), oraz z grup±, do której nale¿y. Wszystkie
informacje o pliku s± przechowywane w strukturze danych zwanej 
<strong>iwêz³em</strong> (inode).
<sect1 id="file-perm">Prawa dostêpu do plików i katalogów
<p>
Prawa dostêpu do plików i katalogów s± definiowane oddzielnie dla
nastêpuj±cych trzech kategorii u¿ytkowników, których dotycz±:
<list compact>
<item><strong>W³a¶ciciel</strong> pliku (u), 
<item>inni u¿ytkownicy w <strong>grupie</strong>, do której nale¿y plik (g),
oraz dla <item>wszystkich <strong>pozosta³ych</strong> u¿ytkowników (o).
</list>
<p>
Dla pliku ka¿de prawo pozwala odpowiednio na:
<list compact>
<item><strong>odczyt</strong> (r): odczyt zawarto¶ci pliku
<item><strong>zapis</strong> (w): modyfikacjê zawarto¶ci pliku
<item><strong>wykonanie</strong> (x): uruchomienie pliku jako polecenia
</list>
<p>
Dla katalogu ka¿de prawo pozwala odpowiednio na:
<list compact>
<item><strong>odczyt</strong> (r): wy¶wietlenie zawarto¶ci katalogu
<item><strong>zapis</strong> (w): dodawanie i usuwanie plików w katalogu
<item><strong>wykonanie</strong> (x): dostêp do plików w katalogu
</list>
Tutaj prawo <strong>wykonania</strong> dla katalogu oznacza nie tylko prawo do
odczytu plików w nim zawartych, ale tak¿e na przegl±danie atrybutów takich jak
rozmiar i czas modyfikacji.
<p>
Aby otrzymaæ informacje o uprawnieniach (oraz inne) plików i katalogów,
u¿ywa siê polecenia <prgn>ls</prgn>. Zobacz <manref name="ls" section="1">.  
Gdy <prgn>ls</prgn> jest wywo³ane z parametrem <tt>-l</tt>, wy¶wietla
nastêpuj±ce informacje w nastêpuj±cej kolejno¶ci:
<list compact>
<item><strong>Typ pliku</strong> (pierwsza litera)
 <list compact>
 <item>-: zwyk³y plik
 <item>d: katalog
 <item>l: dowi±zanie symboliczne (symlink)
 <item>c: urz±dzenie znakowe
 <item>b: urz±dzenie blokowe
 </list>
<item><strong>prawa</strong> dostêpu do pliku (kolejnych dziewiêæ znaków,
po trzy kolejno dla: w³a¶ciciela, grupy, oraz pozosta³ych)
<item><strong>liczba dowi±zañ</strong> (hardlink) do pliku
<item>nazwa <strong>u¿ytkownika</strong> bêd±cego w³a¶cicielem pliku
<item>nazwa <strong>grupy</strong>, do której nale¿y plik
<item><strong>rozmiar</strong> pliku w znakach (bajtach)
<item><strong>data i czas</strong> modyfikacji pliku (mtime)
<item><strong>nazwa</strong> pliku.
</list>
<p>
Aby zmieniæ w³a¶ciciela pliku, u¿ywa siê z konta root polecenia <prgn>chown</prgn>.
Zobacz <manref name="chown" section="1">. Aby zmieniæ grupê pliku, u¿ywa
siê polecenia <prgn>chgrp</prgn> z konta w³a¶ciciela pliku lub konta root. Zobacz
<manref name="chgrp" section="1">. Aby zmieniæ prawa dostêpu do plików czy katalogów,
u¿ywa siê polecenia <prgn>chmod</prgn>, tak¿e z konta u¿ytkownika lub konta root.
Zobacz <manref name="chmod" section="1">.
<p>
Na przyk³ad w celu uczynienia u¿ytkownika <var>foo</var> w³a¶cicielem drzewa
katalogów, a grupy <var>bar</var> wspó³w³a¶cicielem, wykonaj nastêpuj±ce
polecenia z konta root:
<example>
# cd /some/location/
# chown -R <var>foo</var>:<var>bar</var>
# chmod -R ug+rwX,o=rX 
</example>
<p>
Istniej± jeszcze trzy specjalne bity uprawnieñ:
<list compact>
<item><strong>ustawia ID u¿ytkownika</strong> (s lub S zamiast x u¿ytkownika), 
<item><strong>ustawia ID grupy</strong> (s lub S zamiast x grupy), oraz
<item><strong>bit lepko¶ci</strong> (sticky bit) (t lub T zamiast x pozosta³ych).
</list>
Na wyj¶ciu polecenia <prgn>ls -l</prgn> du¿ymi literami oznaczane s± bity,
na których miejscu bit wykonywalno¶ci nie by³ ustawiony.
<p>
Ustawienie <strong>ID u¿ytkownika</strong> dla pliku wykonywalnego
pozwala u¿ytkownikowi na wykonanie tego pliku z ID w³a¶ciciela pliku (na przyk³ad
<strong>root</strong>). Podobnie, ustawienie
<strong>ID grupy</strong> dla pliku wykonywalnego, pozwala u¿ytkownikowi
na wykonanie pliku z ID grupy pliku (na przyk³ad <strong>root</strong>). 
Pniewa¿ mo¿e to powodowaæ ryzyko naruszenia bezpieczeñstwa, w³±czanie tych 
opcji wymaga szczególnej ostro¿no¶ci.
<p>
Ustawienie <strong>ID grupy</strong> dla katalogu uaktywnia schemat 
tworzenia plików w stylu BSD, w którym wszystkie pliki tworzone w tym katalogu
nale¿± do <strong>grupy</strong>, maj±cej do niego uprawnienia.
<p>
Ustawienie <strong>bitu lepko¶ci</strong> dla katalogu zapobiega usuwaniu z 
niego plików przez u¿ytkowników, którzy nie s± w³a¶cicielami tych pliku.
W celu zabezpieczenia zawarto¶ci pliku w katalogach zapisywalnych, takich jak
<file>/tmp</file> czy w katalogach, w których prawo zapisu ma grupa, potrzeba
nie tylko, by by³o wy³±czone prawo <strong>zapisu</strong> dla pliku, ale tak¿e
nale¿y ustawiæ <strong>sticky bit</strong> dla katalogu. W innym przypadku plik
mo¿e zostaæ usuniêty, a nastêpnie w jego miejsce mo¿e zostaæ utworzony nowy
plik, o takiej samej nazwie przez dowolnego u¿ytkownika, który ma prawo zapisu
do tego katalogu.
<p>
Poni¿ej kilka interesuj±cych przyk³adów praw do pliku.
<example>
$ ls -l /etc/passwd /etc/shadow /dev/ppp /usr/sbin/pppd
crw-rw----    1 root     dip      108,   0 Jan 18 13:32 /dev/ppp
-rw-r--r--    1 root     root         1051 Jan 26 08:29 /etc/passwd
-rw-r-----    1 root     shadow        746 Jan 26 08:29 /etc/shadow
-rwsr-xr--    1 root     dip        234504 Nov 24 03:58 /usr/sbin/pppd
$ ls -ld /tmp /var/tmp /usr/local /var/mail /usr/src
drwxrwxrwt    4 root     root         4096 Feb  9 16:35 /tmp
drwxrwsr-x   10 root     staff        4096 Jan 18 13:31 /usr/local
drwxrwsr-x    3 root     src          4096 Jan 19 08:36 /usr/src
drwxrwsr-x    2 root     mail         4096 Feb  2 22:19 /var/mail
drwxrwxrwt    3 root     root         4096 Jan 25 02:48 /var/tmp
</example>
</sect1>

<sect1 id="timestamp">Znaczniki czasu
<p>
Dla plików GNU/Linux istniej± trzy typy znaczników czasu:
<list compact>
<item><strong>mtime</strong>: czas modyfikacji (<tt>ls -l</tt>),
<item><strong>ctime</strong>: czas zmiany statusu (<tt>ls -lc</tt>), oraz
<item><strong>atime</strong>: czas ostatniego dostêpu (<tt>ls -lu</tt>).
</list>
Zauwa¿, ¿e <strong>ctime</strong> nie jest czasem utworzenia pliku.  
<list compact>
<item>Nadpisanie pliku zmieni wszystkie <strong>mtime</strong>,
  <strong>ctime</strong> i <strong>atime</strong> pliku.
<item>Zmiana praw lub w³a¶ciciela pliku zmieni <strong>ctime</strong> oraz
<strong>atime</strong> pliku.
<item>Odczyt pliku zmieni jego <strong>atime</strong>.
</list>
Zauwa¿, ¿e nawet zwyk³y odczyt z pliku w systemie GNU/Linux powoduje normalnie
operacjê zapisu w celu aktualizacji informacji <strong>atime</strong>
w <strong>inode</strong>.
Montowanie systemu plików z opcj± <tt>noatime</tt> option pozwoli systemowi na
ominiêcie tej operacji i zaowocuje szybszym dostêpem do pliku przy odczycie.
Zobacz <manref name="mount" section="8">.
</sect1>

<sect1 id="links">Dowi±zania (links)
<p>
Istniej± dwie metody na zwi±zanie pliku <var>foo</var> z innym plikiem 
<var>bar</var>.
<list compact>
<item><strong>dowi±zanie</strong> (hardlink) jest to inna nazwa dla istniej±cego pliku
 (<tt>ln <var>foo</var> <var>bar</var></tt>),
<item><strong>dowi±zanie symboliczne</strong> lub &ldquor;symlink&rdquor; jest specjalnym
plikiem, który wskazuje na inny poprzez nazwê 
(<tt>ln -s <var>foo</var> <var>bar</var></tt>).
</list>
Spójrz na poni¿sze przyk³ady zmian w dowi±zaniach, oraz na subtelne
ró¿nice w rezultacie polecenia <prgn>rm</prgn>.
<example>
$ echo "Oryginalna zawarto¶æ" &gt; <var>foo</var>
$ ls -l <var>foo</var>
-rw-r--r--    1 osamu    osamu           4 Feb  9 22:26 <var>foo</var>
$ ln <var>foo</var> <var>bar</var>     # dowi±zanie (hardlink)
$ ln -s <var>foo</var> <var>baz</var>  # dowi±zanie symboliczne
$ ls -l <var>foo</var> <var>bar</var> <var>baz</var>
-rw-r--r--    2 osamu    osamu           4 Feb  9 22:26 <var>bar</var>
lrwxrwxrwx    1 osamu    osamu           3 Feb  9 22:28 <var>baz</var> -&gt; <var>foo</var>
-rw-r--r--    2 osamu    osamu           4 Feb  9 22:26 <var>foo</var>
$ rm <var>foo</var>
$ echo "Nowa zawarto¶æ" &gt; <var>foo</var>
$ cat <var>bar</var>
Oryginalna zawarto¶æ
$ cat <var>baz</var>
Nowa zawarto¶æ
</example>
Dowi±zanie symboliczne ma, jak widaæ w powy¿szym przyk³adzie, prawa
dostêpu &ldquor;rwxrwxrwx&rdquor;, a jego faktyczne prawa dostêpu s± takie jak
wskazywanego pliku.
<p>
Katalog <file>.</file> jest dowi±zaniem do katalogu, w którym sam siê
pojawia, zatem liczba dowi±zañ do nowego katalogu rozpoczyna siê od 2. 
Katalog <file>..</file> jest dowi±zaniem do katalogu nadrzêdnego, 
zatem liczba dowi±zañ do katalogu ro¶nie wraz z liczb± nowych podkatalogów.
</sect1>
</sect>


<sect>Dalsza nauka
<p>
Jest wiele dobrych ¼róde³ o Uniksie dla pocz±tkuj±cych.
Zwykle ksi±¿ki O'Reilly'ego s± dobrym wyborem przy szukaniu przewodnika
w tematach komputerowych. Dokument LDP <url id="&tips-howto;" name="The
Linux Tips-HOWTO">
jest kolejnyn ¼ród³em wartym sprawdzenia.
W celu poszerzenia swoich wiadomo¶ci zajrzyj do <ref id="support">.

</sect>

</chapt>

