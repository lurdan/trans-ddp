<!-- CVS revision of original english document "1.22"  -->
<chapt id="woody">Actualizando una distribución

<![%f-ref;[
<p>
Las notas de versión oficiales para actualizar están en
<url id="&stable-release;">
y
<url id="&testing-release;"> (en preparación).

<sect>Haciendo los preparativos para la transición (de "stable" a "testing")
<p>
La actualización a "testing" a través de la red se puede realizar
de la siguiente manera (ejecute el script 
<url id="&examples;" 
name="go-woody"> para hacerlo con un solo comando):
<example>
# cd /etc/apt
# cp -f sources.list sources.old 
# :&gt;sources.list  
# cd /
# apt-setup noprobe 
 ... seleccione http o ftp
# cd /etc/apt
# grep -e "^deb " sources.list             &gt;sources.deb
# grep -e "^deb-" sources.list             &gt;sources.src
# sed -e "s/^d/#d/" \
  /usr/share/doc/apt/examples/sources.list &gt;sources.list
# sed -e "s/stable/testing/"  \
  sources.deb &gt;&gt;sources.list
# apt-get update
# apt-get install apt apt-utils
# cat &gt;preferences &lt;&lt;EOF
 Package: *
 Pin: release a=testing
 Pin-Priority: 700
 
 Package: *
 Pin: release a=unstable
 Pin-Priority: 70

 EOF
# sed -e "s/stable/unstable/" sources.deb \
  &gt;&gt;sources.list
# sed -e "s/stable/unstable/" sources.src | \
 sed -e "s/^deb-/#deb-/"  &gt;&gt;sources.list
</example>
Consejos para <file>/etc/apt/preferences</file> (véase <manref
name="apt_preferences" section="5">):
<example>
track stable:            cambiar el Pin-Priority de testing  a  80
track testing:           conservar estado (instala paquetes inestables con /unstable)
track testing (unstable): cambiar la  Pin-Priority de unstable en 600
track unstable (testing): cambiar la  Pin-Priority de unstable en 800
</example>
Un consejo para la elección del Pin-Priority consiste en desplazarse desde
arriba hacia abajo por la tabla anterior conforme el tiempo transcurre desde
el momento inmediato posterior a la liberación de la distribución hasta el
momento que se congele la siguiente versión.
<p>
Ejemplos de <file>/etc/apt/preferences</file> que permiten conservar algunos
paquetes claves en una versión más madura cuando se usa una versión menos
madura para otros paquetes que no son esenciales se pueden encontrar en el 
<url id="&examples;" name="subdirectorio de ejemplos"> como
<file>preferences.testing</file> y <file>preferences.unstable</file>. Por
otra pare <file>preferences.stable</file> fuerza a todos los paquetes a
volver a la versión "estable".
<p>
Si fuese necesario, asegúrese de configurar APT para que use un proxy,
mediante la variable de entorno <tt>http_proxy</tt> o fijar el valor http en
el <file>/etc/apt/apt.conf</file>.
<p>
El procedimiento descripto en esta sección sólo actualiza APT y un conjunto
mínimo de paquetes para evitar problemas relacionados con dependencias.
</sect>
]]>

<sect>Actualizar a "testing"
<p>
Luego de la preparación anterior, se puede actualizar el sistema.

<sect1>Mejor método de actualización usando <prgn>dselect</prgn>
<p>
Si un sistema tiene muchos paquetes que incluye paquetes <tt>-dev</tt>, etc.,
se recomienda el siguiente método usando <prgn>dselect</prgn> para un control
minucioso de paquetes.
<example>
# dselect update # siempre hacer esto antes de actualizar
# dselect select # seleccione los paquets "sugeridos" y "recomendados"
# dselect install
</example>
<prgn>dselect</prgn> siempre funciona :)

<![%f-ref;[
<sect1>Método obsoleto de actualización usando <prgn>apt-get</prgn>
<p>
<strong>El uso de <prgn>apt-get</prgn> que se describe a continuación está muy
extendido pero <em>no</em>se recomienda para actualizaciones del
sistema.</strong>
]]>

Si necesita actualizar sin <prgn>dselect</prgn> a partir de Woody, considere
el uso de <prgn>aptitudes</prgn> u otras opciones.

<![%f-ref;[
<p>
Si un sistema no posee muchos paquetes o el archivo &debian; no experimentó
mayores cambios, lo siguiente puede ser -a veces- suficiente.
<example>
# apt-get update     # siempre hacer esto antes de actualizar
 ... para actualizar el sistema con selecciones "depends": 
# apt-get upgrade    # siempre hacer esto antes de actualizar
 ... para actualizar todo el sistema con selecciones "depends": 
# apt-get -u dist-upgrade
 ... o para actualizar y conservar la configuración actual de dselect (mejor
 solución):
# apt-get -u dselect-upgrade # utiliza las selecciones de dselect
</example>
<p>
Puesto que este método de actualización utiliza <prgn>apt-get</prgn>, el
manejo de los paquetes <em>recomendados</em> y <em>sugeridos</em> es limitado.
Véase <ref id="depends">.
]]>

</sect>

<sect>Configuración de Woody
<p>
Para un sistema Woody recién instalado, edite
<file>/etc/apt/sources.list</file>, <file>/etc/apt/apt.conf</file> y
<file>/etc/apt/preferences</file> para lograr la misma estructura descripta en
la sección anterior.
<p>
APT en Potato no posee las funciones mencionadas en 
<manref name="apt_preferences" section="5">.
</sect>

<![%f-ref;[
<sect id="spy">Optimización del archivo <file>sources.list</file>
<p>
Crear el archivo <file>sources.list</file> automáticamente basándose en
la latencia y en el ancho de banda.
<example>
# apt-get install apt-spy
# cd /etc/apt ; mv sources.list sources.list.org
# apt-spy -d testing -l sources.apt
</example>
<prgn>netselect-apt</prgn> es muy similar a <prgn>apt-spy</prgn>.  Crea un
<file>sources.list</file> más completo pero usa un método menos eficaz para
elegir el mejor sitio réplica (comparación entre los tiempos de ping).  Si
bien <prgn>apt-setup</prgn> es el método manual para seleccionar los sitios
réplicas para el <file>sources.list</file> sigue siendo la mejor opción hasta
que <prgn>apt-spy</prgn> mejore.
<p>
En mi caso estos esfuerzos para lograr una optimización no generaron mejoras
significativas. Me bastó con elegir sitios próximos usando
<prgn>apt-setup</prgn>.
</sect>

]]>

</chapt>

