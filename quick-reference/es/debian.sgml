<!-- CVS revision of original english document "1.87"  -->
<!--Line width ruler (ruler uses 78 characters) 34567890123456789012345-->

<chapt id="package">Administración de paquetes Debian

<p>
Para reducir el tráfico en los repositorios &debian;, asegúrese
de configurar un proxy HTTP local usando <prgn>squid</prgn> para los
paquetes descargados mediante APT y, de ser necesario, configurar la variable
de entorno <tt>hhtp_proxy</tt> o fijar el valor <tt>http</tt> en 
<file>/etc/apt/apt.conf</file>. Esto mejora notablemente el rendimiento de
las actualizaciones en una red, en especial en una LAN con una gran cantidad
de sistemas Debian.
<p>
Aunque el método de marcado (pinning) de <manref name="apt_preferences"
section="5"> es poderoso, no resuelve la totalidad de temas sobre dependencias
puesto que las definiciones de dependencias tienden a buscar las versiones más
nuevas de otros programas fundamentales.
<p>
<![%f-ref;[
El uso del método descripto en <ref id="chroot"> es útil para
]]>
<![%q-ref;[
El uso de chroot es útil para
]]>
asegurar, simultáneamente, tanto la estabilidad del sistema como el acceso a las
últimas versiones de los programas.
<p>
Este capítulo se basa en sistemas Woody pero la mayoría
de la información se aplica también a sistemas Potato (con exepción de <manref
name="apt_preferences" section="5"> y lo concerniente al archivo
<file>/etc/apt/preferences</file>).

<sect id="pkg-intro">Introducción
<p>
Si el leer toda la documentación del desarrollador es demasiado para Ud., lea
primero este capítulo y empiece a disfrutar toda la potencia de Debian con
<tt>testing</tt>/<tt>unstable</tt> :-)

<sect1>Herramientas principales
<p>
<example>
dselect   &ndash; herramienta de administración de paquetes basada en menús
                  (alto nivel)
dpkg      &ndash; instala paquetes (package-file centric)
apt-get   &ndash; instala paquetes (package-archive centric, CLI APT)
tasksel   &ndash; instala tareas (conjunto de paquetes)
aptitude  &ndash; instala paquetes (paquetes y tareas, interfaz de APT basada en
                  ncurses)
deity     &ndash; otra interfaz para APT basada en ncurses
synaptic, gsynaptic &ndash; otras interfaces gráficas para APT
</example>
Estas herramientas no están en un mismo nivel. <prgn>dselect</prgn> se ejecuta 
encima de APT (<prgn>apt-get</prgn>) y
<prgn>dpkg</prgn>.
<p>
APT utiliza <file>/var/lib/apt/lists/*</file> para el seguimiento de paquetes
disponibles, mientras que <prgn>dpkg</prgn> usa
<file>/var/lib/dpkg/available</file>.  Si instaló paquetes directamente usando
<prgn>apt-get</prgn> o programas similares como, por ejemplo,
<prgn>aptitude</prgn>, asegúrese de actualizar el archivo
<file>/var/lib/dpkg/available</file> mediante la opción <tt>[U]pdate</tt> del
menú de <prgn>dselect</prgn> o desde la línea de comandos "<tt>dselect
update</tt>" antes de ejecutar <tt>dselect select</tt>, <tt>tasksel</tt> o
<tt>dpkg -l</tt>.
<p>
En cuanto a la dependencia entre paquetes, <prgn>apt-get</prgn> obtiene
automáticamente los paquetes que dependen entre sí (<strong>depends</strong>)
pero ignora los paquetes recomendados (<strong>recommends</strong>) y
sugeridos (<strong>suggests</strong>). <prgn>dselect</prgn>, en cambio, ofrece
un control más avanzado de los paquetes basado en menús que ofrece la
posibilidad de elegir paquetes basándose en <strong>depends</strong>,
<strong>recommends</strong> y <strong>suggests</strong>.
<prgn>aptitude</prgn> tiene la opción de descargar todos los paquetes
automáticamente basándose en <strong>depends</strong>,
<strong>recommends</strong> y <strong>suggests</strong>.
<![%f-ref;[
See <ref id="depends">.
]]>
</sect1>

<sect1>Herramientas prácticas
<p>
<example>
apt-cache         - búsqueda de paquetes en el caché local
dpkg-reconfigure  - vuelve a configurar un paquete ya instalado (si utiliza
                    debconf)
dpkg-source       - se encarga de los archivos fuentes
dpkg-buildpackage - automatiza la creación de un paquete
...
</example>
</sect1>
</sect>

<sect id="apt-install">Fundamentos de la administración de paquetes &debian;
&debian;
<p>
Puede instalar un conjunto de paquetes denominado <em>tarea</em> o instalar
paquetes individuales o actualizar el sistema usando las herramientas de
administración de paquetes como se describe  a continuación.
<![%f-ref;[
Also refer to
<ref id="install">, <ref id="woody"> y <ref id="bin-editor">.
]]>

<sect1 id="tasksel">Instalación de <var>tareas</var> con <prgn>tasksel</prgn>
<p>
<prgn>tasksel</prgn> es el <strong>Instalador de Tareas de Debian</strong> que
se ofrece durante la instalación como método de instalación
"<tt>sencillo</tt>".
<p>
Cuando uno necesita instalar una determinada función que requiere de múltiples
paquetes, esta es la mejor manera de hacerlo. Asegúrese de ejecutar los
comandos en el siguiente orden:
<example>
# dselect update
# tasksel
</example>
<p>
<prgn>aptitude</prgn> también ofrece acceso a las <em>tareas</em>.  No sólo
permite seleccionar <em>tareas</em> sino que permite eliminar paquetes de una
<em>tarea</em> en forma selectiva mediante un menú.

</sect1>

<sect1 id="setup-apt">Configurar el sistema APT
<p>
Para realizar actualizaciones selectivas desde la distribución <tt>de
prueba</tt> el sistema APT (&gt;Woody) debe configurarse como en <ref
id="woody-transition"> para usar aprovechar las características de <manref
name="apt_preferences" section="5">.
<p>
Primero añada las fuentes para la versión estable (<tt>stable</tt>), de prueba
(<tt>testing</tt>) e inestable (<tt>unstable</tt>) a su 
<file>/etc/apt/sources.list</file>.
A continuación, edite <file>/etc/apt/preferences</file> para configurar 
correctamente el Pin-Priority:
<example>
Package: *
Pin: release a=stable
Pin-Priority: 500

Package: *
Pin: release a=testing
Pin-Priority: 600

Package: *
Pin: release a=unstable
Pin-Priority: 50
</example>

<sect1 id="dselect"><prgn>dselect</prgn>
<p>
Al arrancar, <prgn>dselect</prgn> selecciona automáticamente todos los
paquetes "Requeridos" ("Required"), "Importantes" ("Important") y "Estándar"
("Standard").  En el sistema Potato, algunos programas muy grandes tales como
teTeX y Emacs solían estar aquí y resultaba mejor omitirlos en una instalación
inicial deseleccionándolos manualmente (mediante `_').  En Woody, han sido
puestos en la categoría de paquetes "Opcionales" ("Optional").
<p>
<prgn>dselect</prgn> tiene una interfaz de usuario algo extraña. Existen
cuatro comandos un tanto ambiguos (Mayúsculas, significa ¡MAYÚSCULAS!):
<example>
Tecla       Acción
Q           Salir. Confirma la selección actual y sale de todas maneras. 
            (no tiene en cuenta las dependencias)
R           ¡Reestablecer! No quise decir esto.
D           ¡Maldición! No me importa lo que piensa dselect.  ¡Házlo!
U           Volver todo en el estado sUgerido
</example>
Con <tt>D</tt> y <tt>Q</tt>, puede elegir paquetes en conflicto bajo su entera
responsabilidad.  Utilice estos comandos con cuidado.  Actualmente,
<prgn>dselect</prgn> es una herramienta basada en menús madura que ofrece un
control muy preciso sobre los paquetes sugeridos (<strong>suggests</strong>) y
recomendados (<strong>recommends</strong>).
<p>
Añada una línea que contenga la opción "expert" en
<file>/etc/dpkg/dselect.cfg</file> para reducir la cantidad de información
mostrada. Para una máquina más lenta, puede ejecutar <prgn>dselect</prgn> 
en otra máquina más rápida para encontrar los paquetes y usar
<tt>apt-get install</tt> para instalarlos.
<p>
<prgn>dselect</prgn> no ofrece acceso a los paquetes que no han sido
favorecidos por la Pin-Priority.
</sect1>

<sect1 id="aptitude"><prgn>aptitude</prgn>
<p>
<prgn>aptitude</prgn> es un instalador de paquetes nuevo basado en menús
similar a <prgn>dselect</prgn>.  También se puede como alternativa de
<prgn>apt-get</prgn> en la línea de comandos.  Véase <manref name="aptitude"
section="1">.
<p>
<prgn>aptitude</prgn> acepta comandos de una tecla, que generalmente están en
minúsculas.
<example>
Tecla       Acción
F10         Menú
?           Ayuda 
u           Actualizar la información del archivo de paquetes
g           Descargar e instalar los paquetes seleccionados
q           Salir de la pantalla actual y guardar los cambios
x           Salir de la pantalla actual y descartar los cambios
Enter       Ver información sobre un paquete
</example>
<prgn>aptitude</prgn> ofrece la opción de descargar automáticamente todos los
paquetes basándose en <strong>depends</strong>,
<strong>recommends</strong> y <strong>suggests</strong>. 
Puede alterar este comportamiento eligiendo <tt>F10 -> Optciones -> 
Manejo de dependencias</tt> de su menú.
<p>
<prgn>aptitude</prgn> permite el acceso a todas las versiones de un paquete.
</sect1>

<sect1 id="apt-commands">Los comandos <prgn>apt-cache</prgn> y <prgn>apt-get</prgn>
<p>
Con el ejemplo de arriba para trabajar en la versión <tt>de prueba</tt>,
podemos controlar el sistema usando los siguientes comandos:
<list>
<item><tt>apt-get -u upgrade</tt>
 <p>Permanece en la distribución <tt>de prueba</tt> y actualiza todos los
 paquetes del sistema instalando las dependencias desde ella misma.
<item><tt>apt-get -u dist-upgrade</tt>
 <p>Permanece en la distribución <tt>de prueba</tt> y actualiza todos los
 paquetes del sistema resolviendo las dependencias desde ella misma.
<item><tt>apt-get -u dselect-upgrade</tt>
 <p>Permanece en la distribución <tt>de prueba</tt> y actualiza todos los
 paquetes del sistema teniendo en cuenta la selección de <prgn>dselect</prgn>.
<item><tt>apt-get -u install <var>paquete</var></tt>
 <p>Instala el <var>paquete</var> y sus dependencias desde la distribución  
 <tt>de prueba</tt>.
<item><tt>apt-get -u install <var>package</var>/unstable</tt>
 <p>Instala el <var>paquete</var> desde la distribución <tt>inestable</tt> y
 sus dependencias desde la distribución <tt>de prueba</tt>.
<item><tt>apt-get -u install -t unstable <var>paquete</var></tt>
 <p>Instala el <var>paquete</var> y sus dependencias desde la distribución
 <tt>inestable</tt> asignando una Pin-Prioriy igual a 990 a <tt>unstable</tt>.
<item><tt>apt-cache policy <var>loquesea1 loquesea2 ...</var></tt>
 <p>Comprueba el estado de los paquetes <var>eloquesea1 loquesea2 ...</var>.
<item><tt>apt-cache show <var>loquesea1 loquesea2</var> | less</tt>
 <p>Comprueba la información referente a los paquetes <var>loquesea1 loquesea2 ...</var>.
<item><tt>apt-get install <var>loquesea=2.2.4-1</var></tt>
 <p>Instala una versión particular (<var>2.2.4-1</var>) del paquete
 <var>loquesea</var>.
<item><tt>apt-get -u install <var>loquesea1 loquesea2-</var></tt>
 <p>Instala el paquete <var>loquesea1</var> y desinstala el paquete
 <var>loquesea2</var>
<item><tt>apt-get remove <var>loquesea1</var></tt>
 <p>Desinstala el paquete <var>loquesea1</var> pero conserva intactos los
 archivos de configuración personalizados.
<item><tt>apt-get remove --purge <var>loquesea1</var></tt>
 <p>Desinstala el paquete <var>loquesea1</var> junto con todos sus archivos de
 configuración personalizados.
</list>
En los ejemplos anteriores, el uso de la opción <tt>-u</tt> asegura
que <prgn>apt-get</prgn> muestre la lista de todos los paquetes que van
a ser actualizados y pregunte al usuario antes de proceder.
Lo siguiente elige la opción <tt>-u</tt> como acción
predeterminada:
<example>
$ cat &gt;&gt; /etc/apt/apt.conf &lt;&lt; .
// Mostrar siempre los paquetes que van a ser actualizados (-u)
APT::Get::Show-Upgraded "true";
.
</example>
<p>
Utilice la opción <tt>-s</tt> para simular la actualización sin llevarla
realmente a cabo.

<sect1 id="apt-tracking">Permanecer en una versión de la distribución &debian;
<p>
Dependiendo de su preferencia por permanecer en una determinada versión de &debian;
, puede modificar el archivo de ejemplo <file>/etc/apt/preferences</file> en
<ref id="setup-apt"> para que se ajuste a sus necesidades:
<example>
permanecer en stable:             poner la Pin-Priority de testing en 50
permanecer en testing:            mantener la configuración dada anteriormente
permanecer en testing (unstable): poner la Pin-Priority de unstable en 500
permanecer en unstable(testing):  poner la Pin-Priority de unstable en 800
</example>
Una idea para la elección del Pin-Priority consiste en moverse desde arriba
hacia abajo en la tabla anterior conforme transcurre el tiempo entre la fecha
inmediatamente posterior a la salida de una distribución y la fecha de
congelación de la siguiente versión.
<p>
Advertencia: el permanecer en  la versión <tt>de prueba</tt> de &debian; tiene como efecto
colateral la lenta solución de los fallos de seguridad.
<p>
Si mezcla las versiones de &debian;, <tt>de prueba</tt> con <tt>estable</tt> o
<tt>inestable</tt> con <tt>estable</tt>, es muy probable que descarge diversos
paquetes importantes de la rama <tt>de prueba</tt> o <tt>inestable</tt> que
pueden tener errores. Queda debidamente advertido.
<p>
Ejemplos de <file>/etc/apt/preferences</file> que bloquean algunos paquetes
fundamentales en su versión más madura mientras actualizan a una versión menos
madura paquetes que no son esenciales, están disponibles en el <url
id="&examples;" name="examples subdirectory"> como
<file>preferences.testing</file> y <file>preferences.unstable</file>.  Por
otra parte, <file>preferences.stable</file> fuerza a todos los paquetes a
volver a su versión <tt>estable</tt>.
<sect1 id="apt-stable">Volver todos los paquetes a su versión <tt>estable</tt>
<p>
Para volver todos los paquetes a la versión <tt>estable</tt>, edite 
el <file>/etc/apt/preferences</file> de la siguiente manera:
<example>
Package: *
Pin: release a=stable
Pin-Priority: 1001
</example>
y ejecute "<tt>apt-get upgrade</tt>" que forzará el retorno a la rama estable
debido a que Pin-priority &gt; 1000.  Tenga cuidado, puede haber algunos
inconvenientes con las dependencias.

<sect1 id="apt-preferences">Repaso de <file>/etc/apt/preferences</file>
<p>
En el <file>/etc/apt/preferences</file> de ejemplo presentado en <ref
id="setup-apt">, la primera línea <tt>Package: *</tt> significa que esa
sección se aplica a todos los paquetes. Puede usar el nombre de un paquete
en vez de * para especificar la Pin-Priority del mismo.
<p>
En el segundo renglón, "Pin: release a=stable" significa que 
<prgn>apt-get</prgn> descargará el archivo <file>Packages.gz</file> del
repositorio que contiene al archivo <file>Release</file> con la línea 
"Archive: stable".
<p>
En el último renglón "Pin-Priority: 500" indica que la Pin-Priority
es 500.
<p>
Si existen varios paquetes con el mismo nombre, generalmente el que tiene
el valor de Pin-Priority más alto es el que se instala..  
<p>
Los significados de los Pin-Priority son:
<list>
<item>1001 en adelante: prioridades para volver a la versión anterior.
 <p>Se permite volver a la versión anterior del paquete.
<item>100 a 1000: prioridades estándar.
 <p>No se permite volver a la versión anterior del paquete. Algunos valores de
 Pin-Priority claves:
<list>
<item>990: la prioridad dado por la opción <tt>--target-release</tt> 
or <tt>-t</tt> of <manref name="apt-get" section="8"> option.
<item>500: la prioridad predeterminada de todos los paquetes.
<item>100: la prioridad de los paquetes recientemente instalados.
</list>
<item>0 a 99: prioridades que no son automáticas (se utilizan únicamente si el
              paquete no está instalado y no existe otra versión disponible).
<item>menor que 0: la versión nunca es seleccionada.
</list>
Se puede obtener el mismo efecto que <tt>--target-release</tt> configurando
<file>/etc/apt/apt.conf</file> de la siguiente manera:
<example>
# echo 'APT::Default-Release "testing";' &gt;&gt; /etc/apt/apt.conf
</example>
La opción <tt>--target-release</tt> de la línea de comandos y la configuración
de <file>/etc/apt/apt.conf</file> tienen prioridad sobre la configuración de 
<file>/etc/apt/preferences</file>.  Tenga cuidado con estas interferencias
cuando juegue con <file>/etc/apt/preferences</file>.

<sect id="survival">Comandos de supervivencia de Debian
<p>
Con estos conocimientos, se puede vivir <strong>eternamente</strong> de
"actualizaciones" :-)

<sect1 id="bug-check">Búsqueda de fallos y ayuda en Debian
<P>
Si tiene problemas con un paquete determinado, asegúrese de consultar
los siguientes sitios antes de pedir ayuda o enviar un informe de fallos.
(<prgn>lynx</prgn>, <prgn>links</prgn> y <prgn>w3m</prgn> funcionan 
igualmente bien):
<example>
$ lynx &bugs;
$ lynx &bugs;<var>nombre-paquete</var>  # si conoce el nombre del paquete
$ lynx &bugs;<var>número-fallo</var>     # si conoce el número de fallo
</example>
Busque en Google (www.google.com) incluyendo "site:debian.org" como
palabra clave.
<p>
En caso de duda, recurra a la documentación. Inicialice <tt>CDPATH</tt>
de la siguiente manera:
<example>
export CDPATH=.:/usr/local:/usr/share/doc
</example>
y escriba
<example>
$ cd <var>nombre_paquete</var>
$ mc 
</example>
<![%f-ref;[
Más recursos de soporte se encuentran listados en <ref id="support">.
]]>
</sect1>
<sect1 id="apt-trouble">Resolución de problemas al actualizar con APT
<p>
Al actualizar desde <tt>unstable</tt>/<tt>testing</tt> pueden surgir problemas
entre dependencias como se explicó en <ref id="upgrade-system">.  La mayoría
de las veces, es debido a que el paquete que se desea actualizar posee una
nueva dependencia que no es satisfecha.  Estos problemas se solucionan
haciendo
<example>
# apt-get dist-upgrade
</example>
Si esto no funciona, entonces repita las siguientes operaciones hasta que
el problema se resuelva por sí solo:
<example>
# apt-get upgrade -f         # continue con upgrade a pesar de los errores
... o
# apt-get dist-upgrade -f    # continue con dist-upgrade a pesar de los errores
</example>
<p>
Algunos scripts de actualización conflictivos pueden provocar inconvenientes
en forma recurrente. Generalmente resulta conveniente resolver este tipo de
situación inspeccionando los scripts
<file>/var/lib/dpkg/info/<var>packagename</var>.{post,pre}{inst,rm}</file>
del paquete problemático y ejecutando: 
<example>
# dpkg --configure -a    # configura todos los paquetes parcialmente
                         # instalados
</example>
<p>
Si algún script se queja sobre un archivo de configuración faltante, busque en
<file>/etc</file> el archivo de configuración correspondiente.  Si existe
alguno con extensión <tt>.new</tt> (o algo similar), recurra a <prgn>mv</prgn>
para eliminar el sufijo.
<p>
Pueden aparecer problemas de dependencias al instalar paquetes de la rama
<tt>inestable</tt>/<tt>de prueba</tt>.  Existen distintas maneras de burlar las dependencias.
<example>
# apt-get install -f <var>paquete</var> # no tener en cuenta dependencias no
                                        # resueltas
</example>
<p>
Un método alternativo para resolver estas situaciones consiste en usar el
paquete <package>equivs</package>. 
Véase <file>&f-equivs;</file><![%f-ref;[ y <ref id="equivs">]]>.
</sect1>

<sect1 id="rescue-dpkg">Rescate usando <prgn>dpkg</prgn>
<p>
La recuperación de un <prgn>dselect</prgn> (APT) que no funciona más
en un sistema inutilizado se puede realizar usando <prgn>dpkg</prgn>
sin APT:
<example>
# cd /var/cache/apt/archives
# dpkg -i libc6* libdb2* perl*
# dpkg -i apt* dpkg* debconf*
# dpkg -i *  # hasta que no haya más errores
</example>
Si falta un paquete, obténgalo de <url id="&mirror-site;" name="mirror sites"> mediante:
<example>
# mc            # utilice "FTP link" apuntando a un servidor FTP Debian
</example>
Los paquetes en el servidor HTTP/FTP pueden no estar localizados en el
directorio habitual <file>/dist</file> sino en el nuevo directorio
<file>/pool</file>. 
<![%f-ref;[
(Véase <ref id="pools">.)
]]>
<p>
Luego instálelo haciendo:
<example>
# dpkg -i /var/cache/apt/archives/<var>nombre_paquete.deb</var>
</example>
Para una dependencia no resuelta, resuelvala o utilice:
<example>
# dpkg --ignore-depends=<var>paquete1</var>,... -i <var>nombre_paquete.deb</var>
# dpkg --force-depends -i <var>nombre_paquete.deb</var>
# dpkg --force-depends --purge <var>paquete</var>
# dpkg --force-confmiss -i <var>nombre_paquete.deb</var> # Instale archivo de 
                                                         # configuración
                                                         # faltante
</example>
</sect1>
<sect1 id="recover-status">Recuperar los datos de la selección de paquetes
<p>
Si por alguna razón se inutiliza <file>/var/lib/dpkg/status</file> , 
el sistema &debian; perderá los datos de la selección de paquetes y resultará
enormemente afectado..  
Busque el archivo <file>/var/lib/dpkg/status</file> anterior en
<file>/var/lib/dpkg/status-old</file> o 
<file>/var/backups/dpkg.status.*</file>.
<p>
Puede resultar una muy buena idea mantener <file>/var/backups/</file> en una
partición aparte ya que este directorio contiene una inmensa cantidad de datos
importantes del sistema.
<p>
Si el archivo <file>/var/lib/dpkg/status</file> anterior no se encuentra
disponible, aún puede recuperar información de los directorios situados
<file>/usr/share/doc/</file>.
<example>
# ls /usr/share/doc | \
  grep -v [A-Z] | \
  grep -v '^texmf$' | \
  grep -v '^debian$' | \
  awk '{print $1 " install"}' | \
  dpkg --set-selections
# dselect --expert # reinstale el sistema, use dselect si es necesario
</example>

<sect1 id="rescue-var">Recuperando un sistema luego de borrar <file>/var</file>
<p>
Puesto que el directorio <file>/var</file> contiene datos que se actualizan
continuamente, como por ejemplo el correo, es suceptible de corromperse.
Ubicándolo en una partición independiente disminuye los riesgos. Si ocurre 
un desastre, puede que deba reconstruir el directorio <file>/var</file> para
recuperar el sistema &debian;.  
<p>
Obtenga la estructura del directorio <file>/var</file> de un sistema &debian;
funcional basada en una versión &debian; igual o anterior, por ejemplo
<file><url id="&var-tar-gz;" name="var.tar.gz"></file>, y ubíquela en el directorio raíz
del sistema dañado.  A continuación,
<example>
# cd /
# mv var var-old      # si quedan contenidos útiles
# tar xvzf var.tar.gz # utilice la estructura Woody 
# aptitude            # o dselect
</example>
Esto proporcionará un sistema funcional. Puede recuperar la selección de
paquetes, usando el método descripto en <ref id="recover-status">.  
([FIXME]: Este procedimiento necesita de más pruebas.)
</sect1>

<sect1 id="un-bootable">Instalar un paquete en un sistema que no arranca
<p>
Arranque Linux usando un diskete/CD de rescate o una partición alternativa en
un sistema multi-arranque.
<![%f-ref;[
See <ref id="booting">. 
]]>
Monte el sitema que no arranca en
<file>/target</file> y utilice el modo de instalación chroot de
<prgn>dpkg</prgn>.
<example>
# dpkg --root /target -i <var>nombre_paquete.deb</var>
</example>
Luego configure y solucione los problemas.
<p>
A propósito, si es un <prgn>lilo</prgn> dañado el que le impide arrancar el
sistema, puede usar un disco de rescate estándar de Debian. En el indicador de
arranque, suponiendo que la partición raíz de su intalación Linux está en
<file>/dev/hda12</file> y que desea entrar al nivel de ejecución 3, escriba:
<example>
boot: rescue root=/dev/<var>hda12</var> 3
</example>
De esta manera arrancará un sistema prácticamente funcional cuyo kernel se
encuentra en el diskete (pueden aparecer pequeños problemas debido a la falta
de algunas de las características o módulos del kernel) 
</sect1>

<sect1>Qué hacer si el comando <prgn>dpkg</prgn> se encuentra dañado
<p>
Un <prgn>dpkg</prgn> dañado puede tornar imposible la instalación de cualquier
archivo <tt>.deb</tt>.  Un procedimiento similar al siguiente le ayudará a
superar esta situación (en la primera línea, puede reemplazar "links" con su
navegador de consola favorito)
<example>
$ links http://<var>http.us.debian.org</var>/debian/pool/main/d/dpkg/
  ... descargue una versión de dpkg_<var>version</var>_<var>arquit</var>.deb
$ ar x dpkg_<var>version</var>_<var>arquit</var>.deb
$ su
password: *****
# mv data.tar.gz /data.tar.gz
# cd /
# tar xzfv data.tar.gz
</example>
Para una máquina <tt>i386</tt>, puede utilizar también la URL
<tt>http://packages.debian.org/dpkg</tt>.
</sect1>
</sect>
<sect id="debian-package">Comandos 'nirvana' de Debian
<p>
Bajo la <strong>luz</strong> de estos comandos una persona se salvará de la
lucha kármica eterna contra el infierno de la actualización y le permitirá
alcanzar el <strong>nirvana</strong> Debian. :-)

<sect1 id="info-file">Información sobre un archivo
<p>
Para averiguar a qué paquete pertenece un archivo determinado:
<example>
$ dpkg {-S|--search} patrón # busca 'patrón' en los paquetes instalados
$ wget http://ftp.us.debian.org/debian/dists/<var>sarge</var>/<var>Contents-i386.gz</var>
$ zgrep -e pattern <var>Contents-i386.gz</var>
             # busca 'patrón' en los archivos descargados de Debian
</example>
O  utilice comandos de paquetes especializados:
<example>
# apt-get install dlocate  
$ dlocate <var>nombre_archivo</var>    # alternativa rápida de dpkg -L y dpkg -S
...
# apt-get install auto-apt # herramienta de instalación automática de paquetes
                           # bajo demanda
# auto-apt update          # crea el archivo db para auto-apt
$ auto-apt search <var>patrón</var>  
                # busca de 'patrón' en todos los paquetes, instalados o no
</example>
</sect1>

<sect1 id="info-package">Información sobre un paquete
<p>
Buscar y mostrar la información sobre un paquete.  Asegúrese de apuntar a
un/unos archivo(s) APT adecuado(s) editando
<file>/etc/apt/sources.list</file>.  Si desea ver las diferencias entre un
paquete de la rama <tt>de prueba</tt>/<tt>inestable</tt> y uno instalado, utilice <tt>apt-cache
policy</tt>.
<example>
# apt-get   check           # actualiza el caché y verifica las dependencias
$ apt-cache search  <var>patrón</var>  # busca un paquete a partir del 'patrón'
$ apt-cache policy  <var>paquete</var> # información sobre la prioridad de un
                                       # paquete
$ apt-cache show -a <var>paquete</var> # muestra la descripción del paquete en
                                       # todas las distribuciones
$ apt-cache showsrc <var>paquete</var> # muestra la descripción de un paquete
                                       # fuente
$ apt-cache showpkg <var>paquete</var> # información de depuración de un paquete
# dpkg  --audit|-C                     # busca paquetes parcialmente instalados
$ dpkg {-s|--status} <var>paquete</var># descripción de un paquete instalado
$ dpkg -l <var>paquete</var>           # estado de un paquete instalado (una
                                       # línea)
$ dpkg -L <var>paquete</var>           # lista los archivos instalados por el
                                       # paquete
</example>
<!-- Erase this when manual page gets fixed.  FIXME -->
<tt>apt-cache showsrc</tt> no está documentado en el lanzamiento de Woody pero
funciona :) 
<p>
Asimismo puede encontrar información de paquetes en (utilizo <tt>mc</tt> 
para navegar):
<example>
/var/lib/apt/lists/*
/var/lib/dpkg/available
</example>
La comparación de los siguientes archivos proporciona inoformación sobre lo
que ocurrió exactamente durante las últimas instalaciones.
<example>
/var/lib/dpkg/status
/var/backups/dpkg.status*
</example>

</sect1>
<sect1 id="apt-get-auto">Instalación automática con APT
<p>
Para una instalación automática, añada la siguiente línea al
<file>/etc/apt/apt.conf</file>:
<example>
Dpkg::Options {"--force-confold";}
</example>
Esto equivale a ejecutar <tt>apt-get -q -y <var>nombre_paquete</var></tt>.
Puesto que de esta manera se responden con "Sí" todas las preguntas
fomuladas, puede causar problemas. Por lo tanto use este truco con cuidado. 
Véase <manref name="apt.conf" section="5"> y <manref name="dpkg" section="1">.
<p>
Posteriormente puede configurar cualquier paquete siguiendo 
<ref id="reconfigure">.

<sect1 id="reconfigure">Reconfigurar paquetes instalados
<p>
Utilice los siguientes comandos para reconfigurar un paquete
ya instalado.
<example>
# dpkg-reconfigure --priority=<var>medium</var> <var>paquete</var> [...]
# dpkg-reconfigure --all   # reconfigura todos los paquetes
# dpkg-reconfigure locales # genera los nuevos locales
# dpkg-reconfigure --p=<var>low</var> xserver-xfree86 # reconfigura el
                                                      # servidor X
</example>
Hago lo mismo con <prgn>debconf</prgn> si necesita cambiar en forma permanente
el modo de diálogo de <prgn>debconf</prgn>.
<p>
Algunos programas vienen con scripts de configuración especiales.
<example>
apt-setup     - crea el /etc/apt/sources.list
install-mbr   - instala un administrador del sector de arranque maestro
tzconfig      - configura el huso horario local
gpmconfig     - configura el administrador del ratón gpm 
eximconfig    - configura Exim (MTA)
texconfig     - configura teTeX
apacheconfig  - configura Apache (httpd)
cvsconfig     - configura CVS
sndconfig     - configura el sistema de sonido
...
update-alternatives - configuración del comando predeterminado, por ej. vim
                      por vi
update-rc.d         - administación de los scripts de arranque System-Vt
update-menus        - sistema de menús de Debian
...
</example>
</sect1>

<sect1 id="remove">Desinstalar y purgar paquetes
<p>
Desinstalar un paquete manteniendo su configuración:
<example>
# apt-get remove <var>paquete</var> ...
# dpkg  --remove <var>paquete</var> ...
</example>
Desinstalar un paquete incluyendo su configuración:
<example>
# apt-get remove --purge <var>paquete</var> ...
# dpkg    --purge        <var>paquete</var> ...
</example>
</sect1>

<sect1 id="hold">Conservar paquetes antiguos
<p>
Por ejemplo, para conservar <package>libc6</package> y
<package>libc6-dev</package> para <prgn>dselect</prgn> y
<tt>apt-get -u upgrade <var>paquete</var></tt> se puede hacer:
<example>
# echo -e "libc6 hold\nlibc6-dev hold" | dpkg --set-selections
</example>
<tt>apt-get -u install <var>paquete</var></tt> no se verá afectado por esto.
Para conservar un paquete forzando una actualización automática a una versión
anterior mediante <tt>apt-get -u upgrade <var>paquete</var></tt> o <tt>apt-get
-u dist-upgrade</tt>, añada lo siguiente al <file>/etc/apt/preferences</file>:
<example>
Package: libc6
Pin: release a=stable
Pin-Priority: 2000
</example>
En "<tt>Package:</tt>" no se pueden usar entradas del tipo "<tt>libc6*</tt>".
Si necesita conservar todos los paquetes binarios  relacionados con el paquete
fuente <package>glibc</package> en forma conjunta, debe listarlos en forma
explícita.
<p>
El siguiente comando lista todos los paquetes que se desean conservar:
<example>
dpkg --get-selections "*"|grep -e "hold$"
</example>
</sect1>

<sect1 id="mixedsys">Sistema mixto <tt>estable</tt>/<tt>de
prueba</tt>/<tt>inestable</tt>
<p>
<prgn>apt-show-versions</prgn> puede mostrar las versiones
de los paquetes disponibles en cada distribución.
<example>
$ apt-show-versions | fgrep /testing | wc
... cantidad de paquetes de la rama de prueba (testing)
$ apt-show-versions -u
... lista de paquetes que se pueden actualizar
$ apt-get install `apt-show-versions -u -b | fgrep /unstable`
... actualiza todos los paquetes de la rama inestable (unstable)
a su versión más reciente
</example>
</sect1>

<sect1 id="cache">Eliminar paquetes del caché
<p>
La instalación de paquetes con APT guarda los paquetes en
<file>/var/cache/apt/archives</file>.
<example>
# apt-get autoclean # elimina únicamente los paquetes inútiles
# apt-get clean     # elimina la totalidad de los paquetes del caché
</example>
</sect1>

<sect1 id="record">Grabar/copiar la configuración del sistema
<p>
Para hacer una copia local del estado de la selección de los paquetes:
<example>
# debconf-get-selections &gt; <var>debconfsel.txt</var>
# dpkg --get-selections "*" &gt;<var>mis_selecciones</var>   # o usar \*
</example>
<tt>"*"</tt> incluye también los nombres de los paquetes a 
purgar en <tt><var>mis_selecciones</var></tt>.
<p>
Puede transferir este archivo a otra computadora e instalarlo haciendo:
<example>
# dselect update
# debconf-set-selections &lt; <var>debconfsel.txt</var>
# dpkg --set-selections &lt;<var>mis_selecciones</var>
# apt-get -u dselect-upgrade    # <var>o</var> dselect install
</example>
</sect1>

<sect1 id="port">Portar un paquete a la rama <tt>stable</tt>
<p>
Para una actualización parcial del sistema <tt>estable</tt>, es conveniente reconstruir
el paquete para el entorno dado a partir de su código fuente.  Esto evita
actualizaciones masivas de paquetes debido a las dependencias. Primero, añada
las siguientes entradas al <file>/etc/apt/sources.list</file>:
<example>
deb-src &http-us;debian testing \
 main contrib non-free
deb-src &http-us;debian unstable \
 main contrib non-free
</example>
Cada entrada para <tt>deb-src</tt> está dividida en dos por cuestiones de
impresión aunque en realidad las entradas en el <file>sources.list</file>
deben escribirse en una única línea.
<p>
A continuación, obtenga el código fuente y cree una copia local del paquete:
<example>
$ apt-get update  # actualiza la lista de paquetes del repositorio
$ apt-get source <var>paquete</var>
$ dpkg-source -x <var>paquete.dsc</var>
$ cd <var>versión_paquete</var>
  ... busque los paquetes requeridos (Build-depends en el archivo .dsc) e
      instálelos.  Necesitará también el paquete "fakeroot".

$ dpkg-buildpackage -rfakeroot 

  ...o (sin firma)
$ dpkg-buildpackage -rfakeroot -us -uc # utilice luego "debsign" si es necesario

  ...luego para instalarlo
$ su -c "dpkg -i <var>nombre_paquete.deb</var>"
</example>
En general, se necesita instalar algunos paquetes con la opción "-dev" para
satisfacer la dependencia entre paquetes. <prgn>debsign</prgn> pertenece al
paquete <package>devscripts</package>.  <prgn>auto-apt</prgn> puede fácilmente
satisfacer estas dependencias. La utilización de <prgn>fakeroot</prgn> evita
el uso innecesario de la cuenta de superusuario.
<p>
En Woody, estos temas sobre dependencias pueden simplificarse.  
Por ejemplo, para compilar el paquete fuente <package>pine</package>:
<example>
# apt-get build-dep pine
# apt-get source -b pine
</example>
</sect1>

<sect1 id="local">Archivo local de paquetes
<p>
A fin de crear un archivo local de paquetes que sea compatible con los
sistemas APT y  <prgn>dselect</prgn>, es necesario crear el archivo <file>Packages</file> y
archivar los paquetes en un árbol de directorios determinado.
<p>
Se puede crear un repositorio local <tt>deb</tt> similar al oficial de
Debian haciendo:
<example>
# apt-get install dpkg-dev
# cd <var>/usr/local</var>
# install -d <var>pool</var> # los paquetes se ubicarán físicamente aquí
# install -d dists/<var>unstable</var>/<var>main</var>/binary-<var>i386</var>
# ls -1 <var>pool</var> | sed 's/_.*$/ extra <var>BOGUS</var>/' | uniq &gt; <var>override</var>
# editor <var>override</var> # ajuste <var>BOGUS</var>
# dpkg-scanpackages <var>pool</var> <var>override</var> <var>/usr/local</var>/ \
   &gt; dists/<var>unstable</var>/<var>main</var>/binary-<var>i386</var>/Packages
# cat &gt; dists/<var>unstable</var>/<var>main</var>/Release &lt;&lt; EOF
Archive: <var>unstable</var>
Version: <var>3.0</var>
Component: <var>main</var>
Origin: <var>Local</var>
Label: <var>Local</var>
Architecture: <var>i386</var>
EOF
# echo "deb file:<var>/usr/local</var> <var>unstable</var> <var>main</var>" \
   &gt;&gt; /etc/apt/sources.list
</example>
<p>
O bien, rápidamente haciendo:
<example>
# apt-get install dpkg-dev
# mkdir <var>/usr/local/debian</var>
# mv <var>/some/where/package.deb</var> <var>/usr/local/debian</var>
# dpkg-scanpackages <var>/usr/local/debian</var> /dev/null | \
  gzip - &gt; <var>/usr/local/debian</var>/Packages.gz
#  echo "deb file:<var>/usr/local/debian</var> ./" &gt;&gt; /etc/apt/sources.list
</example>
<p>
Se puede acceder en forma remota a estos archivos habilitando el acceso
a estos directorios mediante HTTP o FTP y modificando convenientemente las
entradas del archivo <file>/etc/apt/sources.list</file>.

<sect1 id="alien">Convertir o instalar un paquete que no pertenece a Debian
<p>
<package>alien</package> permite la conversión de paquetes <tt>rpm</tt> de
Redhat ,  <tt>slp</tt> de Stampede , <tt>tgz</tt> de Slackware y <tt>pkg</tt>
de Solaris al formato de paquetes <tt>deb</tt> de &debian;. Si desea utilizar
un paquete de una distribución Linux diferente a la que tiene instalada en su
sistema, puede usar <prgn>alien</prgn> para convertirlo en su formato de
paquetes preferido e instalarlo.  <package>alien</package> soporta también
paquetes LSB.
</sect1>                                                 

<sect1 id="debsums">Verificar los paquetes instalados
<p>
<prgn>debsums</prgn> permite verificar la integridad de los paquetes
instalados usando las sumas de control (checksums) MD5.  Algunos paquetes no
poseen sumas de control MD5.  Veamos una solución provisoria para los
administradores de sistema:
<example>
# cat >>/etc/apt/apt.conf.d/90debsums
DPkg::Post-Install-Pkgs {"xargs /usr/bin/debsums -sg";};
^D
</example>
por Joerg Wendland <email>joergland@debian.org</email>  (sin verificar).

<![%f-ref;[
<sect1 id="spy"><file>sources.list</file> optimizado
<p>
En pocas palabras, mis esfuerzos por optimizar <file>sources.list</file>
no produjeron mejoras significativas para mí en los los Estados Unidos.
Elegí manualmente un repositorio cercano usando <prgn>apt-setup</prgn>.
<p>
<prgn>apt-spy</prgn> crea automáticamente un <file>sources.list</file>
basándose en el ancho de bando y el tiempo de latencia. 
<prgn>netselect-apt</prgn> crea un <file>sources.list</file> mucho más
completo, pero usa un método menos efectivo para elegir la mejor réplica 
(comparación del tiempo de pings).
<example>
# apt-get install apt-spy
# cd /etc/apt ; mv sources.list sources.list.org
# apt-spy -d testing -l sources.apt
</example>
</sect1>

]]>
</sect>
<sect id="pecuriarities">Otras particularidades de Debian

<sect1 id="dpkg-divert">El comando <prgn>dpkg-divert</prgn>
<p>
<!-- copied from manual page -->
<strong>dpkg-divert</strong> fuerza a <prgn>dpkg</prgn> a no instalar un
archivo en su lugar habitual sino en otro diferente. Estos
<strong>desvíos</strong> se pueden usar en los scripts de los paquetes &debian;
para quitar un archivo que provoca un conflicto.  Los administradores de
sistemas también pueden usarlo para no tener en cuenta algunos archivos de
configuración o algunos archivos (que no han sido marcados como tales) 
necesitan preservarse de <prgn>dpkg</prgn> al instalar una versión nueva de un
paquete que los incluya<![%f-ref;[
(see <ref id="conffile">)]]>.
<example>
# dpkg-divert [--add]  <var>nombre_archivo</var> # añade "diversion"
# dpkg-divert --remove <var>nombre_archivo</var> # elimina "diversion"
</example>
En general, resulta una buena idea no usar <prgn>dpkg-divert</prgn> salvo
que sea absolutamente necesario hacerlo.
</sect1>

<sect1 id="equivs">El paquete <package>equivs</package>
<p>
Si compila un programa a partir de su código fuente, resulta conveniente crear
un paquete Debian (<tt>*.deb</tt>).  Utilice <tt>equivs</tt> como último
recurso.
<example>
Package: equivs
Priority: extra
Section: admin
Description: burlar las dependencias entre paquetes
Este es un paquete ficticio que se puede usar para
crear paquetes Debian que contienen únicamente información
sobre dependencias.
</example>
</sect1>

<sect1 id="alternatives">Comandos alternativos
<p>
Para utilizar el comando <prgn>vim</prgn> en lugar de <prgn>vi</prgn>, utilice
<prgn>update-alternatives</prgn>:
<example>
# update-alternatives --display vi
...
# update-alternatives --config vi
  Selection    Command
-----------------------------------------------
      1        /usr/bin/elvis-tiny
      2        /usr/bin/vim
*+    3        /usr/bin/nvi

Enter to keep the default[*], or type selection number: 2
</example>
Los miembros del sistema de alternativos de Debian se encuentran en
<file>/etc/alternatives</file> como enlaces simbólicos.
<p>
Para tener su entorno de ventanas X favorito, aplique 
<prgn>update-alternatives</prgn> a
<file>/usr/bin/x-session-manager</file> y
<file>/usr/bin/x-window-manager</file>.
<![%f-ref;[
Para más detalles, véase <ref id="custom-x">.
]]>
<p>
<file>/bin/sh</file> es un enlace simbólico a <file>/bin/bash</file> o
<file>/bin/dash</file>.  Resulta más seguro utilizar <file>/bin/bash</file>
para preservar la compatibilidad con scripts antiguos contaminados con
comandos del bash aunque resulta más disciplinado usar <file>/bin/dash</file>
para asegurar compatibilidad POSIX. La actualización al kernel 2.4 Linux
kernel tends to set this to <file>/bin/dash</file>.
</sect1>

<sect1 id="sys-v"><prgn>init</prgn> del System-V y niveles de ejecución
<p>
El nivel de ejecución predeterminado se puede configurar en el
<file>/etc/inittab</file>.
<p>
A diferencia de otras distribuciones, Debian deja la administración de los
niveles de ejecución bajo la completa responsabilidad del administrador de
sistemas.  La administración de <prgn>init</prgn> en un sistema System-V es
llevada a cabo mediante los scripts <prgn>update-rc.d</prgn>.
<p>
Arrancar <file>/etc/init.d/<var>nombre</var></file> en los niveles de
ejecución 1,2,3 y detenerlo en 4,5 con una prioridad igual a 20 (normal) se
puede realizar haciendo:
<example>
# update-rc.d <var>nombre</var> start 20 1 2 3 . stop 20 4 5 .
</example>
Si el script existe en <prgn>init.d</prgn>, el enlace simbólico se puede
eliminar haciendo:
<example>
# update-rc.d -f <var>nombre</var> remove
</example>
Para editar los niveles de ejecución, hago trampa.  Edito manualmente las
entradas usando el comando <prgn>mv</prgn> en el indicador del <prgn>mc</prgn>
y copio los enlaces con Alt-Enter. Por ejemplo:
<example>
# mv S99xdm K99xdm # desactivo xdm (X display manager)
</example>
Incluso, como atajo rápido,  desactivo un demonio escribiendo <tt>exit 0</tt>
al comienzo de un script del <prgn>init.d</prgn>.  Después de todo son
<tt>archivos de configuración</tt>.
</sect1>

<sect1 id="disables">Servicios desactivados
<p>
La distribución &debian; toma muy en serio la seguridad del sistema y espera
que el administrador del sistema sea competente.  Por lo tanto, la facilidad
de uso a menudo se relega al segundo plano y determinados servicios brindados
por los demonios vienen con el nivel de seguridad más alto y pocos servicios
(o ninguno) estan disponibles en su estado de instalación predeterminado.
<p>
Ejecute <tt>ps aux</tt> o consulte el contenido de <file>/etc/init.d/*</file>
y <file>/etc/inetd.conf</file>, si posee alguna duda (sobre Exim, DHCP, ...).
También consulte el <file>/etc/hosts.deny</file><![%f-ref;[ al igual que la
sección <ref id="loginctrl">]]>.  Asimismo resulta útil el comando
<prgn>pidof</prgn> (véase <manref name="pidof" section="8">). 
<p>
En versiones recientes de &debian; X11 no permite, por defecto, conexiones
TCP/IP (remotas).  
<![%f-ref;[
Véase<ref id="xtcp">.
]]>
El redireccionamiento de X también se encuentra deshabilitado en SSH.  
<![%f-ref;[
Véase <ref id="xssh">.
]]>
</sect1>
</sect>

</chapt>



