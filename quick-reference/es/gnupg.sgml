<!-- CVS revision of original english document "1.22"  -->

<chapt id="gnupg">GnuPG

<p>
Referencias:
<list compact>
<item><manref name="gpg" section="1">. 
<item><file>&dochome;gnupg/README.gz</file>
<item><em>GNU privacy handbook</em> en 
 <file>&dochome;gnupg-doc/GNU_Privacy_Handbook/</file> 
 (instalar el paquete <package>gnupg-doc</package>)
</list>

<sect>Instalar Gnu PG
<p>
Lea el manual de GNU privacy (en Woody, <package>gnupg-doc</package>).
<example>
# gpg --gen-key                   # genera una clave nueva
# gpg --gen-revoke <var>mi_usuario_ID </var>  # genera una clave de revocación para
                                  # mi_usuario_ID
# host -l pgp.net | grep www|less # busca los servidores de claves pgp
</example>
Un buen servidor de claves predeterminado situado en
<file>$HOME/.gnupg/gpg.conf</file> (o el la ubicación anterior
<file>$HOME/.gnupg/options</file>) es:
<example>
keyserver http://subkeys.pgp.net
</example>
Debe tener cuidado de <strong>no</strong> crear más de dos subclaves.  Si lo hace, los
servidores de claves de pgp.net corromperán la clave.  Utilize el paquete
<package>gnupg</package> más reciente (>1.2.1-2) para tratar estas subclaves
corruptas. Véase <url id="&gpg-subkeys;">.

</sect>

<sect>Usar GnuPG
<p>
Manejo de archivos:
<example>
$ gpg  [opciones]  comando [args]
$ gpg {--armor|-a} {--sign|-s} <var>archivo</var>         # firma el 'archivo' en
                                                          # el archivo.asc
$ gpg --clearsign <var>archivo</var>                      # firma el 'archivo'
                                                          # sin cifrarlo
$ gpg --clearsign --not-dash-escaped <var>patchfile</var> # firma patchfile sin
                                                          # cifrar 
$ gpg --verify <var>archivo</var>                         # verifica el 'archivo'
                                                          # firmado sin cifrar
$ gpg -o <var>archivo.firm</var> {-b|--detach-sig} <var>archivo</var> # crea
                                                          # firma separada
$ gpg --verify <var>archivo.firm</var> <var>archivo</var> # verifica el 'archivo'
                                                          # con ayuda del archivo.firm
$ gpg -o <var>archivo_cifrado</var> {--recipient|-r} <var>nombre</var>
{--encrypt|-e} <var>archivo</var>                         # cifrado con clave pública
                                                          # para el destinario nombre
$ gpg -o <var>archivo_cifrado</var> {--symmetric|-c} <var>archivo</var> # cifrado
                                                          # simétrico
$ gpg -o <var>archivo</var> --decrypt <var>archivo_cifrado</var>        # descifrado
</example>
</sect>

<sect>Administrar GnuPG
<p>
Administración de claves:
<example>
$ gpg --edit-key <var>ID_usuario</var>       # "help" para ayuda interactiva
$ gpg -o <var>archivo></var> --exports        # exporta todas las claves al
                                             # 'archivo' 
$ gpg --imports <var>archivo</var>           # importa todas las claves del
                                             # 'archivo'
$ gpg --send-keys <var>ID_usuario</var>      # envía la clave del ID_usuario al
                                             # servidor de claves
$ gpg --recv-keys <var>ID_usuario</var>      # recibe la clave del ID_usuario del
                                             # servidor de claves
$ gpg --list-keys <var>ID_usuario</var>      # lista las claves del ID_usuario
$ gpg --list-sigs <var>ID_usuario</var>      # lista las firmas del ID_usuario
$ gpg --check-sigs <var>ID_usuario</var>     # verifica la firma del ID_usuario
$ gpg --fingerprint <var>ID_usuario</var>    # verifica la huella dactilar del
                                             # ID_usuario
$ gpg --list-sigs | grep '^sig' | grep '[User id not found]' \
  | awk '{print $2}' | sort -u | xargs gpg --recv-keys 
              # obtiene claves desconocidas
              # actualiza las claves para todas las firmas desconocidas.
$ gpg --refresh-keys                         # actualiza el archivo de claves
local      
	
</example>
Códigos de confiabilidad:
<example>
-         No se asignó/evaluó confiabilidad del poseedor.
e         Ha fallado la evaluación de confiabilidad.
q         No existe suficiente información para realizar la evaluación.
n         No confiar nunca en esta clave.
m         Relativamente confiable.
f         Totalmente confiable.
u         Plenamente confiable.
</example>
Lo siguiente transferirá mi clave "<var>A8061F32</var>" al popular
servidores de claves <tt>hkp://subkeys.pgp.net</tt>:
<example>
$ gpg --keyserver hkp://subkeys.pgp.net --send-keys <var>A8061F32</var>
</example>
</sect>
<sect>Usando GnuPG con aplicaciones
<p>
<sect1>Usando GnuPG con Mutt
<p>
Agregar lo siguiente al <file>~/.muttrc</file> para evitar que GnuPG -un
programa muy 'pesado'- arranque automáticamente y sólamente se active al
pulsar la tecla 'S' en el menú del índice.
<example>
macro index S ":toggle pgp_verify_sig\n"
set pgp_verify_sig=no
</example>
<sect1 id="vimgpg">Usando GnuPG con Vim
<p>
Añadir el contenido de <file>_vimrc</file> obtenido de <url
id="&examples;"
name="examples subdirectory"> en <file>~/.vimrc</file> para ejecutar GnuPG 
en forma transparente.

</chapt>

