<!-- CVS revision of original english document "1.41"  -->
<chapt id="system">Fundamentos de Debian

<!-- 

Merged from 4 SGML files in FAQ February 2002
  ftparchives.sgml, 
  pkg_basics.sgml, 
  pkgtools.sgml, 
  uptodate.sgml

Then retitled under "Debian fundamentals" with 
 chapt moved to sect
 sect moved to sect1
 sect1 moved to sect2

Commented out reference to arches, should rewrite it to reference to 
release manual/install manual soon.
 
Pieces imported from other parts of FAQ.
 Small section from customizing.sgml regarding init/runlevel is added.
 Small section from customizing.sgml regarding diverse is added.
 Small section from software.sgml regarding non-English is added.

Merged from other SGML files in FAQ February 2002
  kernel.sgml

Then retitled under "Debian fundamentals" with 
 chapt moved to sect
 sect moved to sect1

Titles of sect/sect1 are changed to suit "Debian reference"

All minor edits I did left tracing information as comments.

Several sections were actually deleted since two consecutive -'s
made it impossible to comment out.

Also rewrote section to suit better for potato and woody.
Unless slink is used, how many people about dpkg-ftp :)

-->
<p>
Este capítulo proporciona información fundamental sobre el sistema
Debian para aquellos que no son desarrolladores. Para información
autorizada, consulte:i
<p>
<list compact>
<item>Manual de Normativa de Debian
<item>Manual para la creación de paquetes (potato)
<item>Referencia para los Desarrolladores de Debian
<item>Guía para Nuevos Encargados de Paquetes de Debian
<p>
</list>
listada en la sección <ref id="references">.


<p>
Si está buscando explicaciones menos detalladas, vaya directamente a la
<ref id="package"> o a los capítulos adecuados.
<p>
Este capítulo consiste en información obtenida de las "FAQ de Debian"
reorganizada totalmente a fin de permitir dar sus primeros pasos a los
administradores de sistemas Debian.

<!-- 
"FTP archives" is now changed to simple "archives" since it can be reached 
through HTTP and other methods
-->

<sect id="ftparchives">Los archivos Debian

<sect1 id="dirtree">Estructura de los directorios

<p>El software que ha sido empaquetado para &debian; está disponible en alguno
de los diversos árboles de directorios situados en cada 
<url id="&mirror-site;" 
     name="sitio réplica Debian">
a través de FTP o HTTP.

<p>En cada sitio réplica de Debian, bajo el directorio <tt>/debian/</tt>
se pueden encontrar los siguientes directorios:
<taglist>
  <tag><file>/dists/</file>:
    <item>Este directorio contiene las "distribuciones" y se utilizan
    para acceder a los paquetes actualmente disponibles en las versiones
    y pre-versiones de Debian. Aún se pueden encontrar aquí algunos
    paquetes antiguos y archivos <tt>Packages.gz</tt>.
  <tag><file>/pool/</file>:
    <item>La nueva ubicación de todos los paquetes de todas las
    versiones y pre-versiones de Debian.
<tag><file>/tools/</file>:
    <item>Utilidades del DOS para crear discos de arranque, particionar su 
    unidad de disco, comprimir/descomprimir archivos y arrancar Linux.
  <tag><file>/doc/</file>:
    <item>La documentación básica de Debian: FAQ, instrucciones para dar
          a conocer un fallo, etc.
  <tag><file>/indices/</file>:
    <item>El archivo Maintainers y los archivos override.
  <tag><file>/project/</file>:
    <item>principalmente recursos para el desarrollador, tales como:
    <taglist>
      <tag><file>project/experimental/</file>:
        <item>Este directorio contiene paquetes y herramientas que aún
        están en desarrollo y en la etapa alfa de prueba.  Los usuarios
        no deberían usar estos paquetes ya que pueden resultar peligrosos
        y perjudicial incluso para los más experimentados.
      <tag><file>project/orphaned/</file>:
        <item>Paquetes que han sido abandonados por las personas los tenían 
        a cargo y que han sido retirados de la distribución.
    </taglist>
</taglist>

<sect1 id="dists">Distribuciones Debian

<p>Normalmente existen tres distribuciones Debian en el directorio
<tt>dists</tt>: la distribución "estable" (stable) , la distribución "de
prueba" (testing) y la distribución "inestable" (unstable). A veces
existe una distribución "congelada" (véase <ref id="frozen">).  Cada
distribución viene definida por un enlace simbólico al directorio real,
utilizando un nombre de código en el directorio <tt>dists</tt>

<sect1 id="stable">La distribución <tt>estable</tt>

<p>Los paquetes de la versión <tt>estable</tt>, &stabledebian;, 
se encuentran en el directorio <tt>stable</tt> (enlace simbólico a <tt>&stablecodename;</tt>):
<list>
  <item><file>stable/main/</file>:
  Este directorio contiene los paquetes que formalmente constituyen la 
  versión más reciente del sistema &debian;.

  <p>Todos estos paquetes están de acuerdo con <url name="Debian Free Software
  Guidelines" id="&social-contract;#guidelines"> (también disponible como
  <file>&f-social-contract;</file> que se instala mediante  
  <package>&p-social-contract;</package>), y todos se pueden usar
  y distribuir libremente.

  <item><file>stable/non-free/</file>:  este directorio contiene paquetes
  cuya distribución está restringida y necesita que los distribuidores tomen
  cuidadosamente en cuenta las exigencias especificadas por la licencia.

  <p>Por ejemplo, algunos paquetes tienen licencias que prohiben su
  distribución comercial.  Otros pueden ser redistribuidos pero, de
  hecho, son shareware y no software libre.  La licencia de cada uno de
  estos paquetes debe analizarse y, quizás, negociarse antes de
  incluirse en cualquier forma de redistribución (por ejemplo, en un  CD-ROM).

  <item><file>stable/contrib/</file>: este directorio contiene paquetes
  que son libres de acuerdo con la definición de software libre de
  Debian y, en sí mismos, <em>de libre distribución</em>, pero que
  dependen de algún modo de otro paquete que <em>no</em> es de
  distribución libre y, por lo tanto, disponible únicamente en la
  sección non-free.
    
</list>
Actualmente, además de las ubicaciones anteriores, los paquetes nuevos
se encuentran físicamente en el directorio <tt>pool</tt> (<ref id="pools">).  

<p>El estado actual de los fallos de la distribución <tt>estable</tt> se
puede consultar en la página web <url id="&stable-problems;" name="Stable Problems">.

<sect1 id="testing">La distribución <tt>de prueba</tt>

<p>Los paquetes de la versión <tt>de prueba</tt>, &testingdebian;, se
encuentran en el directorio <tt>testing</tt> (enlace simbólico a
<tt>&testingcodename;</tt>) tras haber sido probados durante cierto
tiempo en la rama <tt>inestable</tt>.  Actualmente, además de las
ubicaciones anteriores, los paquetes nuevos se localizan en el
directorio <tt>pool</tt> (<ref id="pools">).  Asimismo, también están
los subdirectorios <tt>main</tt>, <tt>contrib</tt> y <tt>non-free</tt>
que cumplen las mismas funciones que en la rama <tt>estable</tt>.

<p>Estos paquetes deben estar en sintonía con todas las arquitecturas
para las cuales fueron construidos y no deben tener dependencias que
impida su instalación; además, deben tener menos fallos críticos que las
versiones que se encuentran en la rama <tt>inestable</tt>. De esta
manera, es de esperar que la rama <tt>de prueba</tt> sea la posible
candidata de la  próxima versión. Más detalles sobre este mecanismo en:
<url id="&testing-notes;">.

<p>El estado final de la distribución <tt>de prueba</tt> se puede
consultar en los siguientes sitios:

<list compact>
<item><url id="&update-excuses;" 
         name="update excuses">
<item><url id="&testing-problems;" 
         name="testing problems">
<item><url id="&release-critical;" 
         name="release-critical bugs">
<item><url id="&qa-base-bugs;" 
         name="base system bugs">
<item><url id="&qa-standard-bugs;" 
         name="bugs in standard and task packages">
<item><url id="&qa-bugs;" 
         name="other bugs and bug-squashing party notes">
</list>

<sect1 id="unstable">La distribución <tt>inestable</tt>

<p>Los paquetes de la versión <tt>inestable</tt>, <tt>sid</tt>, se
encuentran en el directorio <tt>unstable</tt> (enlace simbólico a
<tt>sid</tt>) tras haber sido transferidos al archivo Debian y
permanecer allí hasta su translado a la rama <tt>de prueba</tt>
Actualmente, además de las ubicaciones anteriores, los paquetes nuevos
se ubican en el directorio <tt>pool</tt> (<ref id="pools">).  Asimismo,
también están los subdirectorios <tt>main</tt>, <tt>contrib</tt> y
<tt>non-free</tt> que cumplen las mismas funciones que en la rama
<tt>estable</tt>.


<p>La distribución <tt>inestable</tt> contiene la imagen más reciente
del sistema en desarrollo. Se alienta a los usuarios a usar y probar
estos paquetes pero se les advierte sobre su estado. La ventaja de usar
la distribución <tt>inestable</tt> es que uno siempre está actualizado
con lo último del proyecto &debian;&mdash; pero si existen
incompatibilidades, descubrirá las desventajas :-)

<p>El estado actual de los fallos de la distribución <tt>inestable</tt>
se puede consultar en la página web 
<url id="&unstable-problems;" name="Unstable Problems"> Web page.

<!-- Above was enough <sect1 id="sid">The "sid" distribution

<p><strong>sid</strong> or <strong>unstable</strong> is the place where
most of the packages are initially uploaded. It will never be released
directly, because packages which are to be released will first have to
be included in <strong>testing</strong>, in order to be released in
<strong>stable</strong> later on. sid contains packages for both
released and unreleased architectures.

<p>The name "sid" also comes from the "Toy Story" animated motion
picture: Sid was the boy next door who destroyed toys :-) -->

<sect1 id="frozen">La distribución <tt>congelada</tt> 

<p>Cuando la distribución <tt>de prueba</tt> está suficientemente madura
se "congela", es decir, ya no se aceptan programas nuevos y -de ser
necesario- sólo se eliminan fallos. Asimismo, en el directorio
<tt>dists</tt> se crea un nuevo árbol "de prueba" al que se le asigna un
nuevo nombre. La distribución congelada está durante algunos meses de
prueba con actualizaciones continuas y congelaciones totales denominadas
`ciclos de prueba (el reciente lanzamiento de <tt>woody</tt> no incluía
un enlace simbólico a la versión <tt>congelada</tt>, por lo tanto ésta
no era una distribución sino una etapa de desarrollo de la distribución
<tt>de prueba</tt>)

<p>En la distribución congelada se mantiene un registro de fallos que
pueden retrasar la liberación de un paquete o de la distribución
completa.  Una vez que los fallos están por debajo de los valores
máximos aceptables, la distribución congelada se transforma en la
distribución estable, es liberada y la versión estable anterior se
vuelve obsoleta (y se archiva).

<sect1 id="codenames">Los nombres de versión de la distribución Debian

<p>Los nombres de los directorios situados en el directorio
<tt>dists</tt>, tales como <tt>&stablecodename;</tt> y
<tt>&testingcodename;</tt>, son simplemente los "nombres de versión".
Cuando una distribución &debian; se encuentra en la etapa de desarrollo,
no tiene número de versión sino un "nombre de versión".  El propósito de
estos nombres es facilitar la replicación de la distribuciones &debian;
(if a real directory like <tt>unstable</tt> suddenly changed its name to
<tt>stable</tt>, a lot of stuff would have to be needlessly downloaded
again).

<p>Actualmente, <tt>stable</tt> es un enlace simbólico a
<tt>&stablecodename;</tt> y <tt>testing</tt> es un enlace simbólico a
<tt>&testingcodename;</tt>. Esto significa que <tt>&stablecodename;</tt>
es la distribución estable y <tt>&testingcodename;</tt> la distribución
de prueba actuales.

<p><tt>unstable</tt> es un enlace simbólico permanente a <tt>sid</tt>,
ya que <tt>sid</tt> siempre es la distribución inestable. <!-- (see <ref
id="sid">).-->

<sect1 id="oldcodenames">Nombres de versión usados en el pasado

<p>Otros nombres de versión que ya han sido usados: <tt>buzz</tt> para
la versión 1.1, <tt>rex</tt> para la versión 1.2, <tt>bo</tt> para la
versión 1.3.x, <tt>hamm</tt> para la versión 2.0 y <tt>slink</tt> para
la versión 2.1 y <tt>potato</tt> para la versión 2.2.

<sect1 id="sourceforcodenames">El origen de los nombres de versión

<p>Hasta aquí han sido tomados de la película <em>Toy Story</em> de
Pixar.
<list compact>
  <item><em>buzz</em> (Buzz Lightyear) era el cosmonauta,
  <item><em>rex</em> era el tiranosaurio,
  <item><em>bo</em> (Bo Peep) era la niña que cuidaba la oveja,
  <item><em>hamm</em> era el cerdito alcancía,
  <item><em>slink</em> (Slinky Dog) era el perro de juguete,
  <item><strong>Sarge</strong> era el líder del ejército de plástico verde,
  <item><em>potato</em> era, por supuesto, el Sr. Potato,
  <item><em>woody</em> era el vaquero.
  <item><em>sid</em> era el vecinito que destruyó los juguetes.
</list>

<!--
  more info in http://www.pixar.com/feature/toystory/toystory.html 
  or better yet http://us.imdb.com/M/title-exact?Toy&percnt;20Story&percnt;20(1995)
  or actually:
    http://us.imdb.com/Title?0114709 for TS1
    http://us.imdb.com/Title?0120363 for TS2
  we shouldn't put the links in, Pixar needs no additional propaganda
-->
<!--
  characters not used from Toy Story (yet):
    - Sarge and The Green Plastic Army Men
    - Andy (the kid)
    - Etch (Etch-a-Sketch) (the blackboard)
    - Snake
    - Robot
    - Scud (Sid's dog)
  and additional characters from Toy Story 2, also not yet used:
    - Jessie (the Yodelling Cowgirl)
    - Zurg (the Emperor)
    - Wheezy (the penguin)
    - Hannah (owner of Jessie)
    - Stinky Pete the Prospector (the old fat guy)
    - Mrs. Davis (Andy's Mom)
    - Barbie
-->

<sect1 id="pools">El directorio <tt>pool</tt>

<p>Históricamente, los paquetes se guardaban en el subdirectorio
<tt>dists</tt> correspondiente a una determinada distribución. Esto
ocasionaba diversos problemas, como -por ejemplo- un gran consumo del
ancho de banda de los sitios réplicas cuando se realizaban grandes
cambios.

<p>Actualmente, los paquetes se guardan en un gran `depósito',
estructurado según el nombre del paquete fuente. Para facilitar su uso,
el depósito está subdividido en secciones (<tt>main</tt>,
<tt>contrib</tt> y <tt>non-free</tt>) y por la primer letra del nombre
del paquete fuente. Estos directorios contienen diversos archivos: los
paquetes binarios para cada arquitectura y los paquetes fuentes a partir
de los cuales se han generado los mismos.

<p>Puede averiguar el lugar donde se encuentra un paquete ejecutando el
comando <tt>apt-cache showsrc <var>nombre_paquete</var></tt> y leyendo
la línea que dice `Directory:'. Por ejemplo, los paquetes de
<package>apache</package> se encuentran en
<file>pool/main/a/apache/</file>. Puesto que existen tantos paquetes
<tt>lib*</tt> estos son tratado de una manera especial: por ejemplo, los
paquetes <package>libpaper</package> se encuentran en
<file>pool/main/libp/libpaper/</file>.


<p>Los directorios <tt>dists</tt> aún se siguen utilizando para los
archivos índice usados por programas como <tt>apt</tt>. De todas
maneras, al momento de escribir este doucmento, las distribuciones
antiguas no han sido modificadas para usar estos 'depósitos' por lo que
verá rutas que contienen nombres de distribuciones tales como
<tt>potato</tt> o <tt>woody</tt> en el campo de cabecera "Filename".

<p>Normalmente, no se debe preocupar por nada de esto ya que la reciente
<tt>apt</tt> y probablemente la antigua <tt>dpkg-ftp</tt> (véase <ref
id="howtocurrent">) se harán cargo en forma totalmente transparente. Si
desea más información, consulte las <url id="&pool-faq;" name="Debian
Package Pools FAQ">.

<!-- bumped up from sect2 to sect1 -->
<sect1 id="sid-history">Algunas notas históricas sobre <tt>sid</tt>

<p>Cuando la actual <tt>sid</tt> no existía, la <!--FTP removed -->
organización del archivo Debian adolecía de un grave inconveniente: se
suponía que cuando una arquitectura era creada en la rama
<tt>inestable</tt>, iba a ser liberada cuando la distribución se
transformara en la nueva versión <tt>estable</tt>. Para muchas
arquitecturas éste no era el caso con lo cual los correspondientes
directorios debían desplazarse ante un nuevo lanzamiento.  Esto no
resultaba práctico ya que esta acción consumía ingentes cantidades de
ancho de banda.

<p>Los administradores del archivo evitaron el problema durante muchos
años ubicando los binarios de las arquitecturas no liberadas en un
directorio especial llamado <tt>sid</tt>. Cerca del lanzamiento de estas
arquitecturas se creaba un enlace entre la versión <tt>estable</tt> y
<tt>sid</tt> y a partir de allí eran creadas dentro de la rama
<tt>inestable</tt> de manera normal. Esta disposición era un tanto
confusa para los usuarios.

<p>Con la llegada de los depósitos de paquetes (véase <ref id="pools">)
durante el desarrollo de la distribución <tt>woody</tt>, los paquetes
binarios comenzaron a guardarse en un lugar estándar del depósito,
independientemente de la distribución, de modo que al liberar una
distribución no se produciera un gran consumo de ancho de banda en los
sitios réplica (existe, no obstante, un consumo gradual del ancho de
banda durante el proceso de desarrollo).

<sect1 id="incoming">Transferencias de paquetes en <file>incoming</file>
<p>
Los paquetes transferidos primero se ubican en <url id="&incoming;">
luego de haber sido analizados para asegurar que realmente provienen de
un desarrollador de Debian (y son ubicados en el subdirectorio
<file>DELAYED</file> en el caso de una transferencia de una persona que
no es encargada: Non-Maintainer Upload (NMU)). Una vez por día, se
transladan de <tt>incoming</tt> a <tt>unstable</tt>.

<p>
En una emergencia, si desea instalar paquetes desde <tt>incoming</tt>
antes de ir a <tt>unstable</tt>. 


<sect1 id="snapshot">Recuperando una paquete antiguo
<p>
Mientra que las distribuciones de Debian más recientes se encuentran en
el directorio <tt>debian</tt> de cada <url id="&mirror-site;"
name="sitio réplica">, los archivos de las antiguas distribuciones de
Debian tales como Slink se guardan en <url id="&archivehome;"> o en el
directorio <tt>debian-archive</tt> de cada sitio réplica de Debian. 
<p>
Los paquetes antiguos de la rama <tt>de prueba</tt> e <tt>inestable</tt> 
se pueden localizar en <url id="&snapshothome;">.

</sect1>

<sect1 id="archsections">Distintas arquitecturas
<!--
What are all those directories inside <tt>dists/stable/main</tt>?
Simplified this !!!
-->

<p>Dentro de cada uno de los árboles de directorios principales
(<file>dists/stable/main</file>,
<file>dists/stable/contrib</file>, <file>dists/stable/non-free</file>, 
<file>dists/unstable/main/</file>, etc.) las entradas de los paquetes binarios
residen en subdirectorios cuyos nombres indican la arquitectura
para la cual fueron compilados.

<list>
  <item><file>binary-all/</file> para paquetes no dependen de la arquitectura.
    Aquí se incluyen, por ejemplo, scripts escritos en Perl o documentación.
  <item><file>binary-<var>platform</var>/</file> para paquetes que se ejecutan
   en una plataforma determinada.
  <!-- Yes I simplified this -->
</list>

<p>Por favor, observe que los paquetes binarios para la versión <tt>de
prueba</tt> y la versión <tt>inestable</tt> ya no residen en estos
directorios sino en el directorio de nivel superior <tt>pool</tt>. No
obstante, por cuestiones de compatibilidad hacia atrás se siguen
conservando los archivos índice (<file>Packages</file> y
<file>Packages.gz</file>).

<p>Para las arquitectura binarias actualmente soportadas, consulte las
Release Notes de cada distribución.  Se pueden ubicar en los sitios de
Notas de versión para <url id="&stable-release;" name="stable"> y <url
id="&testing-release;" name="testing">.

<!-- Removed, above release note shall be enough.
<p>See <ref id="arches"> for more information.
-->

<sect1 id="source">El código fuente

<p>En el sistema Debian se incluye el código fuente para todo. Por otra
parte, los términos de la licencia de la mayoría de los programas del
sistema <em>exigen</em> que se distribuyan junto con su código fuente o
que proporcionen una manera de obtenerlo.

<p>Normalmente el código fuente se distribuye a través de los
directorios <tt>source</tt>, que son paralelos a todos los directorios
que contienen los binarios correspondiente a una arquitectura específica
o, más recientemente, en el directorio <tt>pool</tt> (véase <ref
id="pools">). Para obtener el código fuente sin estar familiarizado con
la estructura del archivo <!--FTP--> Debian, pruebe hacer <tt>apt-get
source <var>nombre_paquete</var></tt>.

<p>Algunos paquetes, en especial <package>pine</package>, se distribuyen
únicamente como código fuente debido a las limitaciones impuestas por su
licencia (hace poco se ha incluido el paquete
<package>pine-tracker</package> para facilitar la instalación de Pine).
El procedimiento descrito en <ref id="port"> y <ref id="packaging">
describe la manera de contruir un paquete en forma manual.

<p>Para los paquetes de los directorios "contrib" y "non-free", que 
formalmente no forman parte del sistema Debian, el código fuente puede
o no estar disponible.

<sect id="pkg-basics">Sistema de administración de paquetes Debian

<sect1 id="package-basics">Repaso sobre los paquetes Debian

<p>Los paquetes contienen generalmente todos los archivos necesarios
para implementar un conjunto de comandos relacionados o características.
Existen dos tipos de paquetes Debian:
<list>
  <item><em>Paquetes binarios</em>, que contienen ejecutables, archivos de
  configuración, páginas man/info, información sobre derechos de autor y
  otra documentación. Estos paquetes se distribuyen en un formato 
  de archivo específico de Debian (véase <ref id="deb-format">); 
  que se distinguen por tener a <tt>.deb</tt> como extensión de archivo.
  Los paquetes binarios se pueden desempaquetar usando la utilidad de Debian
  <tt>dpkg</tt>; se brindan más detalles en la página del manual.

 <item><em>Paquetes fuentes</em>, que consisten en un archivo <tt>.dsc</tt>
  que describe el paquete (incluyendo el nombre de los archivos que siguen),
  un archivo <tt>.orig.tar.gz</tt> que contiene el código fuente original
  sin modificar en formato tar comprimido con gzip y, generalmente, 
  un archivo <tt>.diff.gz</tt> que contiene los cambios del código fuente
  original específicos de Debian. La utilidad <tt>dpkg-source</tt> empaqueta y
  desempaqueta los archivos fuentes de Debian; se brindan más detalles 
  en la página del manual.
</list>

<p>La instalación de software mediante el sistema de paquetes utiliza
"dependencias" que fueron cuidadosamente concebidas por las personas a
cargo de los paquetes.  Estas dependencias están documentadas en el
archivo <tt>control</tt> asociado a cada paquete.  Por ejemplo, el
paquete que contiene el compiladodr C GNU (<package/gcc/) "depende" del
paquete <package/binutils/ que incluye el enlazador y ensamblador.  Si
un usario intenta instalar <package/gcc/ sin haber previamente instalado
<package/binutils/, el sistema de administración de paquetes (dpkg)
mostrará un mensaje de error diciendo que necesita también a
<package/binutils/ y abortará la instalación de <package/gcc/ (no
obstante, el usuario insistente puede hacer caso omiso, véase <manref
name="dpkg" section="8">)  Para más detalles, véase <ref id="depends">
más abajo.

<p>Las herramientas de los paquetes de Debian se pueden usar para:
<list>
  <item>manipular y administrar paquetes o partes de paquetes,
  <item>ayudar al usuario a dividir paquetes que deben distribuirse
    a través de medios de tamaño limitado como, por ejemplo, disketes
  <item>asistir a los desarrolladores en la construcción de paquetes y
  <item>ayudar a los usuarios a instalar paquetes que se encuentran
    <!--FTP-->en sitios Debian remotos.
</list>

<sect1 id="deb-format"> Formato de los paquetes Debian <!--binary-->

<p>Un "paquete" Debian o un archivo Debian contiene los archivos
ejecutables, bibliotecas y la documentación asociada con un programa
particular o con un conjunto de programas relacionados.  Normalmente, un
archivo Debian tiene ua extensión de archivo que termina en
<tt>.deb</tt>.

<p>La estructura interna del formato de paquetes binarios de Debian se
describen en la página del manual <manref name="deb" section="5">.
Puesto que el formato interno está sujeto a cambios (entre los
lanzamientos principales de &debian;), siempre utilice <manref
name="dpkg-deb" section="8"> para manipular archivos <tt>.deb</tt>.

<!-- Below added by Osamu XXX Not sure but should be right -->

<p>Al menos hasta la distribución <tt>woody</tt>, todos los archivos Debian
se pueden manipular mediante los comandos Unix estándar <prgn>ar</prgn> y
<prgn>tar</prgn> a pesar de que no existan comandos dpkg disponibles.

<sect1 id="pkgname">Convención usada para designar a los paquetes Debian
<!--
Why are Debian package file names so long? 
-->
<p>Los nombres de los paquetes Debian <!--binary--> siguen la siguiente
convención:
<example>&lt;loquesea&gt;_&lt;número_de_versión&gt;-&lt;número_de_revisión_Debian&gt;.deb</example>
donde <var>loquesea</var> es el nombre del paquete. A modo de
verificación, uno puede determinar el nombre del paquete asociado a un
archivo Debian determinado (archivo <tt>.deb</tt>) mediante una de las
siguientes maneras: 
<list>
<item>consultar el archivo "Packages" del directorio del sitio Debian
<!--FTP--> donde fue almacenado dicho archivo.  Este archivo contiene
una descripción de cada paquete; el primer campo de cada párrafo es el
nombre formal del paquete.
  
  <item>usar el comando <tt>dpkg --info
  <var>loquesea_VVV-RRR</var>.deb</tt> (siendo <var>VVV</var> y
  <var>RRR</var> la versión y la revisión del paquete en cuestión,
  respectivamente).  Esto muestra, entre otras cosas el nombre del
  paquete correspondiente al archivo desempaquetado.
</list>

<p>La parte <var>VVV</var> indica el número de versión especificada por
el desarrollador original.  No hay un estándar que regule los números de
versión, por lo tanto pueden tener formatos diferentes tales como
"19990513" y "1.3.8pre1".

<p>La parte <var>RRR</var> indica el número de revisión y es asignado
por el desarrollador Debian (o por un usuario particular si decide crear
el paquete por sí mismo).  Este número corresponde al nivel de revisión
del paquete Debian;  de esta manera, un nivel de revisión nuevo implica
generalmente cambios en el Makefile de Debian (<tt>debian/rules</tt>),
en el archivo de control (<tt>debian/control</tt>), en los guiones de
instalación y desinstalación (<tt>debian/p*</tt>) o en los archivos de
configuración utilizados por el paquete.

<!-- This get too detailed
<sect1 id="controlfile">El archivo de control de Debian
-->

<sect1 id="conffile">Preservando la configuración local
<!--
What is a Debian conffile
-->
<p>La preservación de los archivos configuración del usuario se activa a
través del mecanismo "conffiles" de Debian.  Los archivos de
configuración del usuario (generalmente localizados en
<file>/etc</file>) son especificados en el archivo <tt>conffiles</tt>
del sistema de paquetes Debian.  El sistema de administración de
paquetes evita que estos archivos sean reescritos al actualizar un
paquete.

<p>
En lo posible configurar el sistema sin modificar los archivos que
pertenecen a distintos paquetes &debian;. También resulta generalmente
una buena idea no modificarlos incluso si son archivos de configuración.
Esto asegura que las operaciones de actualizaciones sean rápidas y sin
problemas.

<!--
<p>Conffiles is a list of configuration files (usually placed in <tt>/etc</tt>)
that the package management system will not overwrite when the package is
upgraded. This ensures that local values for the contents of these files
will be preserved, and is a critical feature enabling the in-place upgrade
of packages on a running system.
-->

<p>Para determinar con exactitud qué archivos serán preservados durante
una actualización, ejecute: <example>dpkg --status package</example> y
consulte la línea "Conffiles:".

<p>
Los detalles del contenido de un archivo <tt>conffiles</tt> son
proporcionados por el Manual de Normativa de Debian, sección 11.7 (véase
<ref id="references">).

<sect1 id="maintscripts">Scripts de mantenimiento de Debian
<!--
What is a Debian preinst, postinst, prerm, and postrm
  script?
-->
<p><!--These files--> 
Los scripts de mantenimiento de Debian son scripts ejecutables que se
ejecutan automáticamente antes o después de la instalación de un
paquete.  Todos estos archivos, junto con otro llamado <tt>control</tt>,
son parte de la sección "control" de un archivo Debian.

<p>Los archivos individuales son:
<taglist>
<tag/preinst/
  <item>Este script se ejecuta antes que su paquete sea desempaquetado
  de su archivo Debian (<tt/.deb/). Muchos scripts "preinst" detienen
  los servicios de los paquetes que están siendo actualizados hasta que
  la actualización o instalación de los mismos haya finalizado (luego de
  la ejecución exitosa del script "postinst").

<tag/postinst/
  <item>Generalmente este script completa la configuración requerida por
  un paquete una vez desempaquetado de su archivo Debian (<tt/.deb/).  A
  menudo, los scripts 'postinst' le piden al usuario ciertos datos y/o
  le advierte que si acepta los valores predeterminados deberá volver a
  reconfigurar el paquete cuando la situación lo requiera. Muchos
  scripts "postinst" a continuación ejecutan los comandos necesarios
  para reiniciar el servicio una vez que el paquete nuevo
  correspondiente haya sido instalado o actualizado.

<tag/prerm/
  <item>Generalmente, este script detiene los demonios asociados a un
  paquete.  Es ejecutado antes de la eliminación de los archivos 
  relacionados con el mismo.

<tag/postrm/
  <item>Generalmente, este script modifica los enlaces u otros archivos
  asociados a un paquete y/o elimina los archivos creados por él (véase,
  también <ref id="virtual">.)
</taglist>

<p>Actualmente, todos los archivos de control se pueden encontrar en el
directorio <file>/var/lib/dpkg/info</file>. Los archivos asociados al
paquete <tt>loquesea</tt> comienzan con la palabra "loquesea" y llevan
las extensiones "preinst", "postinst", etc., según corresponda.  El
archivo <tt>loquesea.list</tt> de este directorio lista todos los
archivos que fueron instalados con el paquete <tt>loquesea</tt>
(obsérvese, que la ubicación de estos archivos es interno a dpkg y puede
estar sujeto a cambios)

<sect1 id="priority">Prioridad de los paquetes
<!--
What is a Required/Important/Standard/Optional/Extra
package?
-->
<p>Los encargados de la distribución, asignan a cada paquete Debian una
<em>prioridad</em> para ayudar al sistema de administración de paquetes.
Las prioridades son:
<list>
  <item>Los paquetes <strong>requeridos</strong> son necesarios para el
  correcto funcionamiento del sistema.  
  <p>Esto incluye todas las herramientas necesarias para reparar
  inconvenientes en el sistema.  Nunca debería eliminar estos paquetes
  ya que podría inutilizar su sistema e incluso podría ser incapaz de
  poder usar dpkg para recuperarlo.  Los sistemas con únicamente con
  paquetes requeridos probablemente no sean utilizables, pero tienen la
  funcionalidad suficiente como para permitir al administrador del
  sistema arrancar e instalar más programas. 
  <item>Los paquetes <strong>Importantes</strong> son los que
  habitualmente se encuentran en cualquier sistema tipo Unix.  <p>Son
  otros paquetes sin los que el sistema no funcionará correctamente o no
  será totalmente utilizable. <em>No</em> incluye a Emacs, a X11, a Tex
  o cualquier otra aplicación grande. Estos paquetes sólo constituyen la
  infraestructura básica.
<item>Los paquetes <strong>estándar</strong> son aquellos que están en
todo sistema Linux e incluyen un sistema en modo texto razonablemente
pequeño pero no por eso demasiado limitado.
    <p>Esto es lo que se intalará por defecto si el usuario no
    selecciona otra cosa más.  No incluye aplicaciones demasiado
    grandes, pero incluye Emacs (que es más una parte de la
    infraestructura que una aplicación) y un subconjunto razonable de
    TeX y LaTeX (si resulta ser posible sin X).
<item>Los paquetes <strong>opcionales</strong> incluye a todos los
paquetes que probablemente desearía instalar incluso si no está
familiarizados con ellos y no tiene requerimientos específicos.
 <p>Esto incluye a X11, a la distribución completa de TeX y a un montón
 de aplicaciones.
  <item>Los paquetes <strong>extra</strong> son aquellos que entran en
  conflicto con con otros de mayor importancia, que probablemente sólo
  resulten útiles si ya sabe para qué sirven o que necesitan de
  requerimientos específicos como para incluirlos como "opcionales".
</list>
<list>
<item>Los paquetes <strong>estándar</strong> son aquellos que están en
todo sistema Linux e incluyen un sistema en modo texto razonablemente
pequeño pero no por eso demasiado limitado.
 <p>Esto es lo que se intalará por defecto si el usuario no selecciona
 otra cosa más.  No incluye aplicaciones demasiado grandes, pero incluye
 Emacs (que es más una parte de la infraestructura que una aplicación) y
 un subconjunto de TeX y LaTeX (si resulta ser posible sin X).
  <item>Los paquetes <strong>opcionales</strong> incluye a todos los
  paquetes que probablemente desearía instalar incluso si no está
  familiarizados con ellos y no tiene un requerimiento específico.
 <p>Esto incluye a X11, a la distribución completa de TeX y a un montón de aplicaciones.
  <item>Los paquetes <strong>extra</strong> son aquellos que entran en
  conflicto con con otros de mayor importancia, que probablemente sólo
  resulten útiles si ya sabe para qué sirven o que necesitan de
  requerimientos específicos como para incluirlos como "opcionales".
</list>

<sect1 id="virtual">Paquetes virtuales

<p>Un paquete virtual es un nombre genérico que se le asigna a cualquier
paquete de un grupo de paquetes que básicamente proporcionan la misma
funcionalidad.  Por ejemplo, tanto <tt>tin</tt> como <tt>trn</tt> son
lectores de noticias y, por lo tanto, deberán satisfacer cualquier
dependencia exigida por un programa que requiera de un lector de
noticias a fin de que éste funcione correctamente o resulte útil.  Se
dice que ambos proporcionan el "paquete virtual" llamado
<tt>news-reader</tt>.

<p>De manera similar, <tt>exim</tt> y <tt>sendmail</tt> proporcionan
ambos la funcionalidad de un agente de transporte de correo.  Por lo
tanto, se dice que proporcionan el mismo paquete virtual "mail transport
agent".  Si se instala alguno de los dos, cualquier programa que dependa
de la instalación de un <tt>agente de transporte de correo</tt> se
ejecutará sin problemas debido a la existencia de este paquete virtual.

<p>Debian posee un mecanismo de modo que, si se instala en un sistema
más de un paquete que proporciona el mismo paquete virtual, el
administrador puede configurar uno de los dos como paquete preferido.
El comando utilizado se llama <tt>update-alternatives</tt>
y se describe mas adelante en <ref id="alternatives">.
 
<sect1 id="depends">Dependencia entre paquetes
<!--
What is meant by saying that a package
  Depends/Recommends/Suggests/Conflicts/Replaces/Provides another package?
-->
<p>El sistema de paquetes Debian tiene un rango de "dependencias" entre
paquetes que fue concebido para señalar (mediante un simple indicador)
el nivel en el que el Programa A puede operar en forma independiente de
la existencia del Programa B en un sistema determinado:
<list>
  <item>El Paquete A <em>depende</em> del Paquete B si B debe instalarse
  sí o sí para poder ejecutar A.  En algunos casos A depende no sólo de
  B, sino  de una versión específica de B.  En este caso, la dependencia
  de versión constituye un límite inferior, es decir, A dependerá de
  cualquier versión de B más reciente que la versión especificada.
  <item>El Paquete A <em>recomienda</em> al Paquete B si el encargado
  del mismo considera que la mayoría de los usuarios no querrán a A sin
  tener también la funcionalidad proporcionada por B. 
  <item>El Paquete A <em>sugiere</em> al Paquete B si B contiene
  archivos que están relacionados con (y generalmente mejoran) la
  funcionalidad de A.
  <item>El Paquete A <em>está en conflicto</em> con el Paquete B cuando
  A no funciona si se instala B en el sistema.  La mayoría de los casos,
  el conflicto surge cuando A contiene archivos que son mejoras de los
  de B. A menudo los "conflictos" están relacionados con "reemplazos".  
  <item>El Paquete A <em>reemplaza</em> el Paquete B cuando los archivos
  instalados por B se eliminan y (en algunos casos) se sobreescriben por
  los archivos de A.
  <item>El Paquete A <em>proporciona</em> el Paquete B cuando todos los
  archivos y funcionalidad de B están incorporados en A. Este mecanismo
  brinda la posibilidad a los usuarios con poco espacio en disco obtener
  sólamente la parte de paquete A que realmente se necesita.
</list>

<p>Información más detallada sobre el uso de cada uno de estos términos
se puede encontrar en el Manual para la creación de paquetes y el Manual
de Normativa.

<p>Obsérvese que <prgn>dselect</prgn> tiene un mayor control sobre los
paquetes considerados como  <strong>recomendados</strong> y
<strong>sugeridos</strong> que <file>apt-get</file>, el cual simplemente
obtiene todos los paquetes considerados como
<strong>dependientes</strong> y deja todos los paquetes considerados
como <strong>recomendados</strong> y <strong>sugeridos</strong>.  En sus
versiones modernas ambos programas usan APT como interfaz.

<sect1 id="pre-depends">Significado de Pre-depends

<p>"Pre-depends" es una dependencia especial. En el caso de un paquete
común y corriente, <prgn>dpkg</prgn> desempaquetará sus archivos (es
decir, su archivo <tt>.deb</tt>) estén o no en el sistema los archivos
de los cuales dependen.  Simplificando, desempaquetar significa que
<prgn>dpkg</prgn> extraerá los archivos del archivo .deb que iba a ser
instalado en el sistema y los coloca en su lugar.  Si el paquete
<strong>depende</strong> de la existencia de otros paquetes en el
sistema, <prgn>dpkg</prgn> se negará a completar la instalación
(ejecutando su acción "configure") hasta que dichos paquetes sean
instalados.


<p>No obstante, en el caso de algunos paquetes, <prgn>dpkg</prgn> se
negará incluso a desempaquetarlos hasta que se resuelvan ciertas
dependencias.  Se dice que estos paquetes "pre-dependen" de la presencia
de algún(algunos) otro(s) paquete(s).  El proyecto Debian proporcionó
este mecanismo para realizar actualizaciones del sistema seguras del
formato <tt>a.out</tt> al formato <tt>ELF</tt> en donde el
<strong>orden</strong> en que se desempaquetaban los paquetes era
crítica. Existen otras situaciones con actualizaciones masivas donde
este método resulta útil, por ejemplo cuando los paquetes con prioridad
"requerida" y su depencencia con libc.

<p>Nuevamente, información más detallada se puede encontrar en el Manual
de Packaging.

<sect1 id="pkgstatus">Estado de un paquete <!-- What is meant by
unknown/install/remove/purge/hold in the package status?  --> <p> El
estado de un paquete puede ser "unknown" (desconocido), "install" (para
instalar), "remove" (para eliminar), "purge" (para purgar), o "hold" (en
espera). Estas banderas indican lo que el usuario quiere hacer con un
paquete (como viene indicado por las acciones del usuario en la sección
"Select" de <prgn>dselect</prgn> o por la invocación directa de
<prgn>dpkg</prgn> por parte del mismo).

<p>Significados:
<list>
  <item><strong>unknown</strong> (desconocido) - el usuario nunca indicó
  si deseaba el paquete. 
  <item><strong>install</strong> (para instalar)
  - el usuario desea instalar o actualizar el paquete.
  <item><strong>remove</strong> (para eliminar) - el usuario desea
  eliminar el paquete pero no sus archivos de configuración ya
  existentes.
  <item><strong>purge</strong> (para purgar) - el usuario desea eliminar
  completamente el paquete incluyendo sus archivos de configuración.
  <item><strong>hold</strong> (para conservar)  - el usuario no desea
  que el paquete sea procesado, es decir, quiere conservar la versión
  actual con su estado independientemente de cual sea.
</list>

<sect1 id="puttingonhold">Evitando la actualización de un paquete
<!--
How do I put a package on hold?
Made major rewrite to accommodate new /etc/apt/preferences in progress
-->
<p>Existen dos mecanismos para evitar la actualización de un paquete, 
mediante <prgn>dpkg</prgn> o, en woody, mediante APT.

<p>Con <prgn>dpkg</prgn>, exporte primero la lista de las selecciones
de paquetes:
  <example>
  dpkg --get-selections &gt; <var>selections.txt</var>
  </example>
A continuación, edite el archivo resultante
<file><var>selecciones.txt</var></file>, cambiando la línea que contiene
el paquete que se desea conservar, por ejemplo <package/libc6/, de:
<example>
libc6                       install
</example>
a:
<example>
libc6                       hold
</example>
Guárdelo y actualice la base de datos de <prgn>dpkg</prgn> haciendo:
<example>
dpkg --set-selections <var>selectiones.txt</var>
</example>
O, si conoce el nombre del paquete que desea conservar, simplemente escriba:
<example>echo libc6 hold | dpkg --set-selections</example>
Este proceso conserva los paquetes durante el proceso de instalación 
de cada paquete.

<p>El mismo efecto se puede obtener mediante <prgn>dselect</prgn>.
Simplemente entre a la pantalla [S]elect, busque el paquete cuyo estado
desea conservar y presione la tecla `=' (o la tecla  `H'). Los cambios
se producirán inmediatamente al salir de la pantalla.

<p>En la distribución woody el sistema a APT pose un mecanismo nuevo
alternativo para conservar paquetes durante el proceso de obtención de
archivos .deb usando <tt>Pin-Priority</tt>.  Véase la página del manual
<manref name="apt_preferences" section="5">, <url id="&apt-howto;"> o el
paquete <package>&p-apt-howto;</package> package.

<sect1 id="sourcepkgs">Paquetes fuente
<p>
Los paquetes fuente se distribuyen en un directorio denominado
<tt>source</tt> y se pueden descargar manualmente o usar
<example>
apt-get source loquesea
</example> 
para conseguirlos (consulte
la página del manual <manref name="apt-get" section="8"> para saber cómo
configurar APT para que haga esto).

<sect1 id="sourcebuild">Construir un paquete binario a partir de un
paquete fuente

<p>Para un paquete <tt>loquesea</tt>, necesitará los archivos
<file>loquesea_*.dsc</file>, <file>loquesea_*.tar.gz</file> y
<file>loquesea_*.diff.gz</file> para compilar los fuentes (observación:
para un paquete Debian nativo el paquete <tt>.diff.gz</tt> no existe).

<p>Una vez que los tiene a todos, y si tiene instalado el paquete
<package/dpkg-dev/ , el comando 
<example>
dpkg-source -x <var>loquesea_version-revision</var>.dsc
</example>
extraerá el paquete en un directorio llamado <tt><var>loquesea-version</var></tt>.
<p>
Ejecutar el siguiente comando para construir el paquete binario:
<example>
$ cd loquesea-version
$ su -c "apt-get update ; apt-get install fakeroot"
$ dpkg-buildpackage -rfakeroot -us -uc
</example>
Finalmente haga, 
<example>
# su -c "dpkg -i ../<var>loquesea_version-revision_arch</var>.deb"
</example>
para instalar el paquete recientemente construido.
Véase <ref id="port">.

<!-- woody has simpler commands and build-depends -->

<sect1 id="creatingdebs">Creando paquetes Debian nuevos

<p>Para una información más detallada, consulte la
Guía para Nuevos Encargados de Paquetes de Debian
disponible en el paquete <package/maint-guide/ o en
<url id="&maint-guide;" name="&urlname;">.

<!--
<url id="ftp://ftp.debian.org/debian/doc/package-developer/maint-guide.html.tar.gz">.
-->
<!--
<sect id="pkgtools">Package Management Tools
Once many were moved up here but now moved down
-->

<!-- 
Rarely use command for woody, exclude but mention its manual page above.
<sect2 id="dpkg-deb">dpkg-deb
Removed below
-->

<!--
move up contents as a part of APT
<sect2 id="apt-get">apt-get
-->

<!--
Rarely use command for woody, exclude but mention its manual page above.
<sect2 id="dpkg-split">dpkg-split
removed
-->

<!--
Moved down
<sect1 id="updaterunning">Upgrade running system
Debian claims to be able to update a running program;
  how is this accomplished?
-->

<!--
<sect1 id="whatpackages">How can I tell what packages are already installed
  on a Debian system?
removed dpkg list and status things here
-->

<!-- these information are in debian.sgml and above
<sect1 id="filesearch">How can I find out what package produced a particular
  file?
removed dpkg list and status things here
-->
<sect id="uptodate">Actualizando un sistema Debian

<p>Uno de los objetivos de Debian es proporcionar una manera de
actualizar el sistema en forma consistente y segura. Siempre hacemos
todo lo posible para que una nueva versión se pueda actualizar
fácilmente a partir de las anteriores.  Durante el proceso de
actualización, los paquetes alertan a los usuarios sobre posibles
inconvenientes y a menudo proporcionan una solución al posible problema.

<p>También debería leer las Release Notes, el documento que describe los
detalles sobre actualizaciones específicas, que acompañan a todos los
CDs de Debian y disponibles en la WWW en <url id="&stable-release;"> o
<url id="&testing-release;">.

<p>
En <ref id="package"> se proporciona una guía práctica sobre
actualizaciones.  Esta sección describe los detalles básicos.


<!-- Obsolete, removed
<sect1 id="libc5to6upgrade">How can I upgrade my Debian 1.3.1 (or earlier)
  distribution, based on libc5, to 2.0 (or later), based on libc6?
...
This paragraph is obsolete.
-->

<sect1 id="howtocurrent">Métodos para actualizar un sistema Debian

<p>Uno podría simplemente ejecutar un FTP anónimo o una llamada a
<prgn>wget</prgn> a un repositorio Debian, recorrer los distintos
directorios hasta encontrar el archivo deseado, obtenerlo y, finalmente,
instalarlo usando <prgn>dpkg</prgn>.  Obsérvese que <prgn>dpkg</prgn>
instalará los archivos de actualización en el momento, incluso en un
sistema andando.  A veces, no obstante, la versión nueva de un paquete
requerirá de la versión nueva de otros en cuyo caso la instalación no
tendrá éxito hasta/salvo que se instalen dichos paquetes.

<p>Mucha gente encuentra que este enfoque insume gran cantidad de
tiempo, ya que Debian evoluciona muy rápidamente &mdash;en general, cada
semana se agregan una docena o más de paquetes nuevos.  Este número es
más grande justo antes de la salida de una nueva versión. Para poder
hacer frente a esta avalancha, muchas personas prefieren usar un
programa automatizado. Para este fin, existen diversas herramientas de
administración de paquetes especializadas.

<sect1 id="pkgtools">Repaso de las herramientas de administración de paquetes

<!-- reorganize this and following section in a compact section -->
<!--
<sect1 id="pkgprogs">What programs does Debian provide for managing its
  packages?
  Insert overview and
  bump sect2 to sect1
-->
<p>El sistema de administración de paquetes Debian tiene dos objetivos:
la manipulación del propio paquete y la obtención de los archivos del
paquete desde un repositorio Debian. <prgn>dpkg</prgn> realiza la primer
tarea, APT y <prgn>dselect</prgn> la segunda.

<sect1 id="dpkg"><prgn>dpkg</prgn>

<p>Este es el programa principal para manipular los archivos de un
paquete ; consulte <manref name="dpkg" section="8"> para una descripción
completa.  <!-- "install dpkg" deleted because it's a required package
-->

<p><prgn>dpkg</prgn> viene acompañado con diversos programas
suplementarios primitivos.

<list>
<item>dpkg-deb: Manipula los archivos <tt>.deb</tt>. 
 <manref name="dpkg-deb" section="1">
<item>dpkg-ftp: un antiguo comando para la obtención de paquetes. 
 <manref name="dpkg-ftp" section="1">
<item>dpkg-mountable: un antiguo comando para la obtención de paquetes. 
 <manref name="dpkg-mountable" section="1">
<item>dpkg-split: divide un paquete grande en archivos más pequeños. 
 <manref name="dpkg-split" section="1">
</list>

<prgn>dpkg-ftp</prgn> y <prgn>dpkg-mountable</prgn> han quedado obsoletos
luego de la introducción del sistema APT.

<!-- Insert APT and apt-get here: -->
<sect1 id="apt">APT

<p>APT (Advanced Packaging Tool) es una interfaz avanzada del sistema de
paquetes de Debian que consiste en diversos programas cuyos nombres
generalmente comienzan con "apt-".  <prgn>apt-get</prgn>,
<prgn>apt-cache</prgn> y <prgn>apt-cdrom</prgn> son herramientas de la
línea de comandos para el manejo de paquetes.  Estos también funcionan
como frontales de usuario para otras herramientas tales como
<prgn/dselect/ y <prgn/aptitude/.

<p>Para más información, instale el paquete <package/apt/ y lea 
<manref name="apt-get" section="8">,
<manref name="apt-cache" section="8">,
<manref name="apt-cdrom" section="8">,
<manref name="apt.conf" section="5">,
<manref name="sources.list" section="5">, 
<manref name="apt_preferences" section="5"> (woody) y
<file>/usr/share/doc/apt/guide.html/index.html</file>.

<p>Una fuente alternativa de información es el 
<url id="&apt-howto;" name="APT HOWTO">.
Éste se puede instalar mediante <package/apt-howto/ en
<file>/usr/share/doc/apt-howto/en/apt-howto-en.html/index.html</file>.

<p><tt>apt-get upgrade</tt> y <tt>apt-get dist-upgrade</tt> tienden
a obtener todos los paquetes situados bajo "Dependen:" y
descarta todos los paquetes listados en "Recomendados:" y "Sugeridos:".  
Para evitar esto, use <prgn>dselect</prgn>.


<!-- removed boring APT info -->

<!-- bump from sect2 to sect1 -->
<sect1 id="dselect-basics"><prgn>dselect</prgn>

<p>Este programa es una interfaz de usuario con menús para el sistema de
administración de paquetes Debian. Particularmente resulta útil para las
primeras instalaciones y actualizaciones a gran escala.  Véase <ref
id="dselect">.

<p>Para más información, instale el paquete <package/install-doc/ y lea
<file>/usr/share/doc/install-doc/dselect-beginner.en.html</file> o <url
id="&dselect-beginner;" name="Documentación dselect para
principiantes">.


<!-- removed boring dselect info -->

<!-- move this up and make this sect1
<sect2 id="apt">APT
-->
<!-- remove this and mention above in dpkg
<sect2 id="dpkg-ftp">dpkg-ftp
-->
<!-- remove this
<sect2 id="mirror">mirror
-->

<!-- remove this section and mention above in dpkg
<sect2 id="dpkg-mountable">dpkg-mountable
-->

<!--
<sect1 id="upgradesingle">Must I go into single user mode in order to
  upgrade a package?

<p>No.  Packages can be upgraded in place, even in running systems.
Debian has a <tt>start-stop-daemon</tt> program that is invoked to stop,
then restart running process if necessary during a package upgrade.
-->

<sect1 id="updaterunning">Actualizando un sistema en funcionamiento

<p>El kernel (el sistema de archivos) en los sistemas &debian; admite el
reemplazo de archivos incluso cuando están siendo usados.

<p>Asimismo se cuenta con un programa llamado <prgn/start-stop-daemon/
que se utiliza para arrancar demonios en tiempo de arranque o para
detenerlos cuando se cambian el nivel de ejecución del kernel (por
ejemplo, de modo multiusuario a monousuario, para detener el sistema,
etc.).  Los scripts de instalación utilizan el mismo programa cuando se
instala un nuevo paquete que contenga un demonio para detener los
demonios en ejecución y rearrancarlos si fuese necesario.

<p>Obsérvese que Debian no exige usar el modo monousuario para
actualizar el sistema en funcionamiento.

<sect1 id="savedebs">Archivos <tt>.deb</tt> descargados y en caché

<p>Si ha descargado manualmente los paquetes a su disco (lo cual no es
en absoluto necesario, véase arriba para la descripción de
<prgn>dpkg-ftp</prgn> o APT), entonces después de haber instalados puede
eliminarlos de su sistema.

<p>Si utiliza APT, los archivos se guardan en el caché situado en el
directorio <file>/var/cache/apt/archives/</file>.  Tras la instalación
puede eliminarlos (<tt>apt-get clean</tt>) o copiarlos al directorio
<file>/var/cache/apt/archives/</file> de otra máquina para economizar el
tiempo de descarga para instalaciones posteriores.

<!-- insert apt-get clean... thing and dselect configuration here XXXX
-->

<sect1 id="keepingalog">Mantener un registro de las actualizaciones

<p><prgn/dpkg/ mantiene un registro de los paquetes que han sido
desempaquetados, configurados, eliminados y/o purgados pero (hasta el
momento) no mantiene un registro de la actividad del terminal que tiene
lugar cuando el paquete está siendo manipulado.

<p>La manera más sencilla de superar este inconveniente consiste en
ejecutar las sesiones de <prgn>dpkg</prgn>, <prgn>dselect</prgn>,
<prgn>apt-get</prgn>, etc., con el programa <manref name="script"
section="1">.

<sect id="boot">El proceso de arranque de Debian 

<sect1 id="init">El programa <tt>init</tt>

<p>Al igual que todos los sistemas Unix, Debian arranca ejecutando el
programa <tt>init</tt>.  El archivo de configuración de <tt>init</tt>
(que es el <tt>/etc/inittab</tt>) indica que el primer script que se
debe ejecutar es el <tt>/etc/init.d/rcS</tt>.  Este script ejecuta todos
los scripts situados en <tt>/etc/rcS.d/</tt> by sourcing or forking
subprocess, según depending on their file extension para realizar el
proceso de inicialización: verificar y montar el sistema de archivos,
cargar módulos, iniciar los servicios de red, configurar el reloj, etc.
Luego, por compatibilidad, también ejecuta los archivos situados en
<tt>/etc/rc.boot/</tt> (salvo aquellos con `.' en el nombre). Los
scripts en este último directorio generalmente están reservados para uso
del administrador del sistema y su utilización en paquetes cayó en
desuso.  Véase <ref id="init-hints"> para más información.

<sect1 id="runlevels">Niveles de ejecución

<p>Luego de completar el proceso de arranque, <tt>init</tt> ejecuta
todos los scripts de arranque situados en el directorio especificado por
el nivel de ejecución predeterminado (este nivel de ejecución viene dado
por una entrada <tt>id</tt> en el <tt>/etc/inittab</tt>).  Como la
mayoría de los sistemas Unix <!-- all? SGK --> compatibles con el System
V, Linux tiene 7 niveles de ejecución:
<list compact>
  <item>0 (apagar el sistema),
  <item>1 (modo monousuario),
  <item>2 al 5 (diversos modos multiusuario) y
  <item>6 (reiniciar el sistema).
</list>
<p>
Los sistemas Debian vienen con el <tt>id=2</tt>, que indica que el nivel
de ejecución predeterminado cuando se entre al estado multiusuario será
el 2 y que se ejecutarán los scripts del directorio
<tt>/etc/rc2.d/</tt>.

<p>De hecho, los scripts situados en cualquiera de los directorios
<file>/etc/rc<var>N</var>.d/</file> son simplemente enlaces simbólicos
hacia los scripts situados en <file>/etc/init.d/</file>.  No obstante,
los <strong>nombres</strong> de los archivos situados en cada uno de los
directorios <file>/etc/rc<var>N</var>.d/</file> fueron seleccionados
para indicar la <strong>manera</strong> en que se ejecutarán los scripts
situados en <file>/etc/init.d/</file>.  Para ser más específicos, antes
de entrar a cualquier nivel de ejecución, se ejecutan todos los scripts
que comienzan con la letra `K'; estos scripts permiten matar los
servicios.  A continuación se ejecutan todos los scripts que comienzan
con `S'; estos scripts permiten arrancar servicios.  Los números de dos
dígitos a continuación de la `K' o de la `S' indican el orden en que se
ejecutará el script.  Los scripts que tengan los números más pequeños se
ejecutarán primero.

<p>Este enfoque funciona porque los scripts situados en
<tt>/etc/init.d/</tt> toman todos un argumento que puede ser "start"
(arrancar), "stop" (detener), "reload" (volver a cargar), "restart"
(volver a arrancar) o "force-reload" (forzar carga) y ejecutarán las
tareas indicadas mediante el argumento.  Estos scripts se pueden usar
incluso después que el sistema haya arrancado para controlar diversos
procesos.

<p>Por ejemplo, con el argumento "reload" el comando
<example>
# /etc/init.d/sendmail reload
</example>
envía al demonio sendmail un señal para volver a leer su archivo de
configuración.

<sect1 id="custombootscripts">Personalizando el proceso de arranque <p>
Debian no utiliza el directorio <tt>rc.local</tt> como lo hace BSD para
personalizar el proceso de arranque; en cambio, proporciona el siguiente
mecanismo para la personalización.

<p>Supongamos que un sistema necesita ejecutar el script
<tt>loquesea</tt> al arrancar o al comenzar un nivel de ejecución
determinado (System V).  Entonces el administrador del sistema debe:
<enumlist>
  <item>Ubicar el script <tt>loquesea</tt> en el directorio
    <file>/etc/init.d/</file>.
  <item>Ejecutar el comando <prgn>update-rc.d</prgn> de Debian con los
  argumentos apropiados para configurar los enlaces entre los
  directorios (especificados a través de la línea de comando)
  <tt>rc<var>?</var>.d</tt> y <file>/etc/init.d/loquesea</file>.  Aquí,
  <var>?</var> es un número entre 0 y 6 que corresponde a uno de los
  niveles de ejecución del System V.
  <item>Reiniciar el sistema.
</enumlist>

<p>El comando <tt>update-rc.d</tt> configurará los enlaces entre los
archivos de los directorios <tt>rc<var>?</var>.d</tt> y el script
situado en <file>/etc/init.d/</file>.  Cada enlace comenzará con una `S'
o una `K', seguida por un número y a continuación el nombre del script.
Los scripts de <file>/etc/rc<var>N</var>.d/</file> que comienzan con una
`S' se ejecutan cuando se entra en el nivel de ejecución <var>N</var>.
Los que comienzan con `K' se ejecutan cuando se abandona el nivel de
ejecución <var>N</var>.

<p>Uno podría, por ejemplo, hacer que el script <tt>loquesea</tt> se
ejecute en el arranque, poniéndolo en el directorio
<file>/etc/init.d/</file> y creando los enlaces con <tt>update-rc.d
loquesea defaults 19</tt>.  El argumento <tt>defaults</tt> corresponde a
los niveles de ejecución predeterminados, que van del 2 al 5.  El
argumento <tt>19</tt> asegura que <tt>loquesea</tt> sea llamado antes de
cualquier script que contenga un número 20 o cualquier valor mayor.

<sect id="diverse">En apoyo a la diversidad
<p>
Debian ofrece diversas alternativas para satisfacer los deseos del
administrador del sistema sin dañar al sistema. 
<list>
<item><prgn>dpkg-divert</prgn>, véase <ref id="dpkg-divert">.
<item><prgn>equivs</prgn>, véase <ref id="equivs">.
<item><prgn>update-alternative</prgn>, véase <ref id="alternatives">.
<item><prgn>make-kpkg</prgn> puede alojar distintos cargadores de arranque. 
      Véase <manref name="make-kpkg" section="1">.
</list>
Cualquier archivo situado en <file>/usr/local/</file> pertenece al
administrador del sistema y &debian; no los va a tocar. La mayoría (o
todos) los archivos situados en <file>/etc</file> son <tt>conffiles</tt>
(archivos de configuración) y &debian; no los sobreescribirá durante una
actualización salvo que el administrador del sistema los solicite en
forma explícita.

<sect id="i18n">Internacionalización
<p>
El sistema &debian; se encuentra internacionalizado y provee soporte
para la visualización y entrada de caracteres en diversos idiomas, tanto
en la consola como en X. Diversos, documentos, páginas del manual y
mensajes del sistema han sido traducidos en un número creciente de
idiomas. Durante la instalación, Debian le pide al usuario elegir el
idioma de instalación  ( y a veces una variante local del idioma)
<p> Si el sistema que ha instalado no soporta todas las características
que necesita de su idioma, si necesita cambiar de idioma o instalar un
teclado diferente que soporte su idioma, consulte <ref id="l10n">.

<sect id="kernel-details">Debian y el kernel

<p>
Véase <ref id="kernel">.

<sect1 id="non-debian-kernel">Compilando un kernel desde un fuente no
perteneciente a Debian

<p><!--Yes.  But you have-->
Uno tiene que comprender la política de Debian en relación a las cabeceras.

<p>Las bibliotecacs C de Debian se construyen con las versiones más reciente
de las cabeceras del <strong>kernel</strong> de la rama <strong>estable</strong>.

<p>Por ejemplo, la versión Debian-1.2 usaba la versión 5.4.13 de las
cabeceras.  Esta práctica contrasta con los paquetes fuentes del kernel
de Linux distribuidos por todos los sitios de archivos FTP de Linux que
usan incluso versiones más recientes de las cabeceras.  Los archivos de
cabecera del kernel distribuidos con los fuentes del mismo están
ubicados en <file>/usr/include/linux/include/</file>.

<p>Si necesita compilar un programa con las cabeceras del kernel que son
más nuevas que las proporcionadas por <package/libc6-dev/ debe incluir
al compilar <tt>-I/usr/src/linux/include/</tt> en la línea de comando.
Esto me ocurrió una vez con el empaquetado del demonio automounter
(<package/amd/).  Cuando los nuevos núcleos cambiaron algunos detalles
internos relacionados con el NFS, <prgn>amd</prgn> necesitaba saber de
ellos. Esto me obligó a incluir las cabeceras de los últimos núcleos.

<sect1 id="customkernel">Herramientas para crear núcleos personalizados

<p>A los usuarios que desean (o deben) crear un núcleo personalizado
se les recomienda descargar el paquete <package/kernel-package/.  
Este paquete contiene el script para crear el paquete del kernel y 
proporciona la posibilidad de crear un paquete Debian kernel-image
ejecutando el comando
<example>
# make-kpkg kernel_image
</example>
en el directorio principal de los fuentes del kernel.
La ayuda disponible se obtiene ejecutando el comando
<example>
# make-kpkg --help
</example>
o mediante la página del manual <manref name="make-kpkg" section="8">.
y <ref id="kernel">.

<p>Los usuarios deben descargar por cuenta propia el código fuente más
reciente del núcleo (o del núcleo de su preferencia) de su sitio Linux
favorito a menos que se encuentre disponible un paquete
kernel-source-<var>version</var> (donde <var>version</var> hace
referencia a la versión del kernel). El script de arranque
<file>initrd</file> de Debian requiere de un parche especial para el
kernel llamado <prgn>initrd</prgn>; véase <url id="&bug-initrd;">.
 
<p>En el archivo <tt>/usr/doc/kernel-package/README</tt> se dan
instrucciones detalladas para el uso del paquete
<package/kernel-package/.

<!-- TODO: check out a new source of details, this README isn't too useful,
  I'm told (joy) -->

<sect1 id="alt-boot">Cargadores de arranque alternativos
<p>
Para usar cargadores de arranque alternativos tales como <package/grub/
o <package/loadlin/, copie el kernel de Linux compilado
<file>bzimage</file> a otras ubicaciones (por ejemplo, a
<file>/boot/grub</file> o a una partición MS-DOS).
</sect1>

<sect1 id="custombootdisk">Discos de arranque personalizados

<p>La tarea de crear discos de arranque personalizados se ve grandemente
facilitada por el paquete Debian <package/boot-floppies/ que normalmente
se encuentra en la sección <tt>admin</tt> de un archivo FTP Debian.  Los
scripts de shell de este paquete crean discos de arranque en formato
<prgn>syslinux</prgn>.  Se tratan de discos formateados en MS-DOS cuyos
sectores de arranque han sido alterados de modo de poder arrancar Linux
directamente (o cualquier otro sistema operativo que haya sido definido
en el archivo <tt>syslinux.cfg</tt> del disquete). Otros scripts de este
paquete crean discos de arranque de emergencia e incluso crean los
discos básicos.

<p>Encontrará más información sobre esto en el archivo
<file>/usr/doc/boot-floppies/README</file> luego de instalar el paquete
<package/boot-floppies/.

<sect1 id="modules">Cuidados especiales para tratar con módulos

<p>El paquete <package/modconf/ de Debian proporciona un script de shell
(<file>/usr/sbin/modconf</file>) que se puede usar para personalizar la
configuración de los módulos.  Este script presenta una interfaz basada
en menús en donde el usuario puede elegir los distintos controladores de
dispositivos que se pueden cargar en el sistema.  Las respuestas se
utilizan para personalizar el archivo <file>/etc/modules.conf</file>
(que contiene los alias y demás argumentos que se deben usar para los
diferentes módulos) gracias a los archivos <file>/etc/modutils/</file> y
<file>/etc/modules</file> (que contiene los módulos que se deben cargar
durante el arranque).

<p>Al igual que los archivos (nuevos) Configure.help que ahora están
disponibles para admitir la construcción de núcleos personalizados, el
paquete <package/modconf/ package viene con una serie de archivos de
ayuda (en <file>/usr/lib/modules_help/</file>) que proporcionan
información detallada sobre los argumentos apropiados para cada uno de
los módulos.  Véase <ref id="kernel-modules"> para algunos ejemplos.


<sect1 id="removeoldkernel">Desinstalando el paquete de un kernel antiguo

<p>El script <tt>kernel-image-<var>NNN</var>.prerm</tt> comprueba si el
kernel que está actualmente ejecutando es el mismo que el que está
intentando desinstalar.  Por lo tanto, puede eliminar de manera segura
los núcleos que no desea seguir usando con el siguiente comando:

<example>
dpkg --purge --force-remove-essential kernel-image-<var>NNN</var>
</example>

(obviamente, hay que reemplazar <var>NNN</var> por el número de versión
y revisión de su kernel)

</sect>
