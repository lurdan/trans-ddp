<chapt id="iraus">Installing, Removing, and Upgrading Software
<p>
Some of the contents here are "Progeny Debian" specific.
Especially:
<list>
<item>gnome-apt-pkgset
<item>apt-pkgset
</list>
<em>Be warned</em>.
<p>
Software in &progeny-d; is usually arranged in packages:
collections of programs, scripts, and help files. If a program
requires a library or other program not on your machine, the package
offers to install these other files - or dependencies - for you.
<p>
You can install software in &progeny-d; in several ways:
<p>
<list>
<item> Using a Progeny package set: The easiest way to install common,
    related packages.
<item> Using a Debian package: The easiest and most common method for
    installing packages in general.
<item> Compiling and installing source code from a tar file: A method
    used when a Debian package does not exist.
<item> Converting a package from another format: This method is not
    commonly used, because it is not always reliable.
<item> Using a third party installer: Some developers of commercial or
    Open Source software have developed their own installers.
</list>
<p>
Many third party installers are graphical, and easy to use. However,
they vary so widely that discussing any of them is beyond the scope
of this manual.
<p>

<url id="img/packages-1.png">
<p>
No matter what method you use, in almost every case, you must be
logged in as root user to install or remove software.


<sect id="upackages">Understanding Packages
<p>
A Linux packages is an archive of files for installing software
easily. Each package contains a program and the scripts needed to
install, configure, and remove it. In most cases, it also includes
the on-line help files.
<p>
Linux has two main package systems:
<p>
<list>
<item> The Red Hat Package manager is used by Red Hat and other
    distributions derived from it, such as Mandrake and s u se . Its
    packages have an .rpm extension.
<item> <!--Progeny and--> Debian uses the Debian package system. Its packages
    end with a .deb extension. The Debian package system is widely
    known for its sophistication and reliability. Unlike rpm
    packages, Debian packages resolve any dependency problems,
    providing the necessary libraries instead of simply reporting the
    need for them. You can even upgrade your system while it is
    running with a single command.
</list>
<p>
You can sometimes use an .rpm package on a Debian system, or a .deb
package on a Red Hat-based system.
<p>
However, because of differeces in file locations and other problems,
this practice is not recommended. Depending on the package, you could
even cripple an essential part of the operating system.
<p>
Instead, try a conversion tool such as alien . However, these
conversion programs do not always work, either.
<p>
If all else fails, a static tar file should generally install without
trouble.
<p>
Debian packages are available from a <!--Progeny or--> Debian cd , or from
<!--www.progeny.com or--> www.debian.org. Static tar files are available
from the web sites for specific projects or program maintainers.
<p>

<url id="img/packages-1.png">
<p>
&progeny-l-s; cannot guarantee that a package designed for a
Debian-based distribution can work with &progeny-d;.


<sect id="upmt">Understanding Package Management Tools
<p>
&progeny-d; offers several tools for package management,
including:
<p>
<list>
<item> gnome-apt-pkgset : Progeny's desktop tool for installation and
    removal of sets of common packages.
<item> apt-pkgset : Progeny's command line tool for installation and
    removal of sets of common packages.
<item> apt-get : An advanced package management utility.
<item> apt-setup : A tool for editing the sources list for 
    gnome-apt-pkgset and apt .
<item> dpkg : A package management utility, not as advanced as apt , but
    capable of complex searches for packages and their contents.
<item> dpkg-deb : A utility for managing packages.
</list>
<p>
Other tools available include dselect and capt, two text-based
interfaces. However, because new users often find these tools
confusing, they are only mentioned here without any further
documentation.
<p>
All these tools work with a list of sources. These sources may be cd
s or internet sites. Packages are transferred from a source to your
hard drive. They can then be installed, either immediately or later.
<p>
Once you know something about the structure of Debian packages, you
can use these tools quickly and easily.


<sect id="udpm">Understanding Debian Package Management
<p>
Before installing, removing, or upgrading software, you may want to
learn more about:
<p>
<list>
<item> The life cycle of a package
<item> Information in packages, including:
<item> The contents of packages.
<item> Package names.
<item> Priorities.
<item> Dependencies.
<item> Package management files.
<item> Statuses.
<item> Package flags.
</list>
<p>

<url id="img/packages-1.png">
<p>
If this information seems too overwhelming just now, you can skip
this section, especially if you are using Progeny's gnome apt-pkgset
tool. However, refer back to this section if you are ready to know
more than the basics.


<sect1 id="utlcoap">Understanding the Life Cycle of a Package
<p>
Debian package management uses very specific terms to describe what
is done with a package:
<p>
<list>
<item> 1 Downloaded: The package has been put on to the system from a cd
    or from the internet.
<item> 2 Unpacked: The files for the package have been unarchived, but
    are not ready for use.
<item> 3 Compiled: A binary has been made from the source package has
    been made into a binary.
<item> 4 Configured: The package is ready for your system, but not
    installed.
<item> 5 Installed: The package can be used.
<item> 6 Deinstalled: The package is removed, except for its
    configuration files.
<item> 7 Purged: The entire package is removed, including its
    configuration files.
</list>


<sect1 id="upi">Understanding Package Information
<p>
Packages contain a wealth of information. You can install a program
without reading this information, but, reading it often saves you
wasted effort.
<p>
For example, you generally do not want to install a package that
conflicts with another, or to start the installation of a package
whose installed size is greater than the free space on your hard
disk.
<p>
This section explains:
<p>
<list>
<item> The contents of packages.
<item> Package names.
<item> Important files for packages.
<item> Priorities.
<item> Dependencies.
</list>


<sect2 id="utcop">Understanding the Contents of Packages
<p>
Debian packages are either binary or source. A binary package
contains a compiled program that can be run after installation. A
source package must be compiled before it can be installed.
<p>
A Debian binary package contains:
<p>
<list>
<item> A binary or executable file: The program itself.
<item> The conffiles file: Lists the configuration files for the
    package.
<item> Configuration files: Files need to install or remove the package.
<item> Installation scripts: Scripts that run automatically when a
    package tool is used. Some may require input from the user.
    Scripts are in the /var/lib/dpkg/info directory. Usually, there
    are four:
<item> preinst : Runs before installation of the package.
<item> postinst : Runs after installation of the package.
<item> prerm : Runs before removal of the package
<item> postrm : Runs after removal of the package.
<item> man and/or info pages: Help for the program.
<item> The control file: A summary of the libraries required by the
    package, the name and version of the package, its priority, its
    installed size, its maintainer, and other basic information.
</list>
<p>

<url id="img/packages-1.png">
<p>
Look at the control file for basic information about the package
before you install it.


<sect2 id="upn">Understanding Package Names
<p>
Depending on the tools, you may just need the program name to install
or remove it. In other cases, however, you need the entire package
name.
<p>
Debian packages have a consistent naming convention:
<p>
program_version-revision_processor .deb
<p>
In other words, the name consists of:
<p>
<list>
<item> 1 The program name, sometimes an abbreviation.
<item> 2 The version number, usually a sequential number.
<item> 3 The revision number, usually or sequential number.
<item> 4 The processor type, such as i386 for Intel machines. This part
    of the convention is the least likely to be included.
<item> 5 The .deb extension, which identifies a Debian or &progeny-d;
    package. Debian-based distributions may also use this extension.
</list>
<p>

<url id="img/packages-1.png">
<p>
&progeny-d; packages are named in the same way as a standard
Debian package.


<sect2 id="upp">Understanding Package Priorities
<p>
A package's priority is listed in the control file. The priority
describes how important it is to the operating system:
<p>
<list>
<item> Requires: The system must have the package to operate properly.
    In other words, the package is a basic part of the operating
    system.
<item> Important: The system does not strictly need the package, but
    having it adds to the basic functionality. Many Important
    packages are routinely installed as part of the operating system.
<item> Standard: The system benefits from having the package.
<item> Optional: Most systems include this package.
<item> Extra: Either the system does not need this package, or else the
    package may conflict with a package that has higher priority.
   
    In other words, Extra packages should only be used after you
    learn more about the risks of using them. For absolute safety,
    check the package dependencies, or search the Progeny or Debian
    sites for information before using a package with a priority of
    Extra.
   
</list>


<sect2 id="udependencies">Understanding Dependencies
<p>
A package's dependencies are listed in the control file. The
dependencies describe how a package interacts with other packages or
programming libraries:
<p>
<list>
<item> Depends: The package needs another package to work. It may need a
    particular version of another program. This dependency is
    extremely common for programming libraries.
<item> Recommends: The package works better with another package, but
    does not strictly need it.
<item> Suggests: For most purposes, the package works better with
    another package.
<item> Conflicts: The package does not work with another package. The
    two programs should not be run together. Consider removing one of
    the packages or restricting the execute permissions on one of the
    packages.
<item> Replaces: The package over writes or removes another package. Be
    sure that you know what will happen if a package has a Replaces
    dependency.
<item> Provides: The package includes another package, or at least
    provides the same functionality.
<item> Predepends: The package requires another package to run.You may
    have to install the other package first.
</list>


<sect1 id="fpmf">Finding Package Management Files
<p>
Important files for package management are:
<p>
<list>
<item> /etc/apt/sources.list: The internet sources of packages for use
    with apt and gnome-apt-pkgset .
<item> /var/state/apt/cdroms.list: The list of cd sources for use with 
    apt .
<item> /etc/apt/apt.conf: The configuration file for apt .
<item> /usr/share/package-sets: The directory that lists the contents
    and the description of a Progeny package set.
<item> /var/lib/dpkg/available: Lists packages on the system.
<item> /var/lib/dpkg/status: Lists the status of packages on the system.
    See <ref id="ups">.
</list>


<sect1 id="ups">Understanding Package Statuses
<p>
As you use the package management tools, a package may be in several
different states:
<p>
<list>
<item> Config-files: Only the configuration files for the package are on
    the system.
<item> Half-configured: Configuration was started, but interrupted.
<item> Half-installed: Installation was started, but interrupted.
<item> Installed: The package is unpacked, configured, and installed.
<item> Not-installed: No part of the package is installed.
<item> Unpacked: The package is unpacked, but not configured.
</list>


<sect id="usstates">Understanding Selection States
<p>
As you decide what to do with a package, it can be in one of several
states. You can view the selection state using the dpkg command:
<p>
<list>
<item> Install: The package is selected for configuration and
    installation.
<item> Deinstall: All package files have been selected for removal
    except the configuration files.
<item> Purge: All package files have been selected for removal,
    including the configuration files.
<item> Hold: The current version of the package will not be
    over-written.
<item> Unknown: The package has not been unpacked.
</list>


<sect1 id="upf">Understanding Package Flags
<p>
Packages may be flagged with two options. You can view package flags
using the dpkg command:
<p>
<list>
<item> Hold: Nothing is done with the package unless the -- force-hold
    option is used with apt .
<item> Reinst-required: The package is broken and needs to be
    reinstalled. The package can only be removed with the
    --force-reinstreq option for apt .
</list>


<sect id="iarpswgap">Installing and Removing Package Sets With gnome-apt-pkgset
<p>
&progeny-warning;
<p>
&progeny-d; simplifies package selection by grouping commonly-used
related packages into sets. If a program requires more than one
package, you can install all the packages at the same time using
Progeny's gnome-apt-pkgset utility.
<p>
Alternately, you can double-click on the package set and select
individual packages from it.
<p>
As the name indicates, gnome-apt-pkgset is based on the apt utility.
It is also the tool that you use during installation to select
software. It includes much of the functionality of apt , and uses the
same commands.
<p>
Experienced users may find gnome-apt-pkgset limiting and prefer to
use apt .
<p>
See <ref id="iarpwtagc">.
<p>

<url id="img/packages-1.png">
<p>
For a list of package sets, see /usr/share/package-sets.
<p>
Each package set includes a file with an extension of .contents ,
which lists the packages in the set, and a file with an extension of 
<list>
<item>description , which displays in gnome-apt-pkgset .
</list>
<p>

<url id="img/packages-1.png">
<p>
Currently, package sets are supported only by &progeny-d; cd s or
download sites. You cannot use gnome-apt-pkgset with an ordinary
Debian source.
<p>
<list>
<item> 1 Log in as the root user.
<item> 2 Start gnome apt-pkgset. Either:
<item> Select Programs &gt; System &gt; Add/Remove Software from the main
    menu.
   
    or
   
<item> Type gnome-apt-pkgset at the command line.
   
    or
   
<item> Select the Add/Remove Software icon from the panel.
   
    In all cases, the Add/Remove Package Set window opens.
   

<url id="img/packages-2.png">
<p>
</list>
<p>
   
    The window consists of four sections:
   
<list>
<item> Available Software: A list of package sets. A package set with a
    check in the box is installed. A package set with a box that is
    unselected is not installed.
<item> Description: A summary of what is in the package set.
<item> Buttons: The possible functions. The equivalent of apt 's
    commands.
<item> Details: The current status of the package set and the amount of
    hard drive space it occupies once installed. The installed space
    is sometimes less than the memory required during installation.
<item> 3 Select the packages to work with. A package set is highlighted
    when selected.
</list>
<p>

<url id="img/packages-1.png">
<p>
A package set may be selected regardless of whether it is installed
or not. However, all you would want to do with an uninstalled package
set is install it.
<p>
<list>
<item> 4 Select a function from the buttons on the right of the window:
<item> Apply: Install the selected package.
<item> Revert: Undo the previous action and restore the package set to
    its original status.
<item> Update: Update the list of package sets available from the
    sources.
<item> Upgrade: Upgrade the selected package set if a newer version is
    available.
<item> 5 When you are finished, select the Close button to close the Add
    /Remove Software window.
</list>


<sect id="iarpwtapc">Installing and Removing Packages With the apt-pkgset Command
<p>
&progeny-warning;
<p>
&progeny-d; simplifies package selection by grouping related
packages into sets. If a program requires more than one package, you
can install all the packages at the same time using Progeny's 
apt-pkgset utility.
<p>
As the name implies, apt-pkgset is the command line version of gnome 
apt-pkgset , Progeny's desktop tool.
<p>
Both are based on the apt utility. Both include much of the
functionality of apt , and works in much the same way. For example,
like apt, both depend on a sources list.
<p>
However, experienced users may find apt-pkgset limiting and prefer to
use apt . See <ref id="iarpwtagc">.
<p>
Type: apt-pkgset command packageset .
<p>
No hyphen is placed in front of a command.
<p>

<url id="img/packages-1.png">
<p>
For a list of package sets, see /usr/share/package-sets. Each package
set includes a file with an extension of .contents , which lists the
packages in the set, and a file with an extension of .description ,
which displays in gnome-apt-pkgset .
<p>
                                                                     
<example>
                       The apt-pkgset Command (Progeny specific)
+-------------------------------------------------------------------+
|Command|                          Action                           |
|-------+-----------------------------------------------------------|
|install|Adds the package set to your system.                       |
|-------+-----------------------------------------------------------|
|remove |Removes the package set from your system.                  |
|-------+-----------------------------------------------------------|
|status |Reports on the package set's status.                       |
|-------+-----------------------------------------------------------|
|purge  |Removes the package set from your system and all files and |
|       |associated with it.                                        |
+-------------------------------------------------------------------+
</example>


<sect id="iarpwtagc">Installing and Removing Packages With the apt-get Command
<p>
The apt-get ("A Package Tool" or "Advanced Package Tool") utility is
widely considered one of the most sophisticated package tools
available. Although still in development, apt-get can reliably
upgrade your system over the internet or upgrade all packages on your
system in a single operation.
<p>
The apt-get command can run from the command line, or be selected as
a source in dselect , the old text-based package management tool in
Debian.
<p>
The apt-get utility is not so much a command, but a collection of
commands. This fact is reflected in its format, which can include not
only options, but a specific command as well.
<p>
Type: apt-get options command package_name .
<p>
The most commonly used options are:
<p>
<list>
<item> apt-get install package-name : Retrieves, unpacks and installs
    the package.
<item> apt-get remove package-name : Removes the package from your
    system.
</list>
<p>
Note that:
<p>
<list>
<item> You may be asked questions during the install. Many can be
    answered with a y ("yes") or n ("no").
<item> Some commands can be entered without specifying package names. If
    no packages are mentioned, commands like upgrade affect the
    entire system. Others commands, such as install , require that a
    package is specified.
<item> Options can be entered as part of the command or set in /etc/apt/
    apt.conf. Options set in the configuration file can be overridden
    from the command line by using the option - option_name =no .
</list>
<example>
           The apt-get Command (Manage Packages): Options        
    +---------------------------------------------------------------+
    |       Option       |     Action      |        Comment         |
    |--------------------+-----------------+------------------------|
    |  * -b              |Compiles source  |                        |
    |  * --compile       |packages after   |                        |
    |  * --build         |they are         |                        |
    |                    |downloaded.      |                        |
    |--------------------+-----------------+------------------------|
    |                    |Downloads        |The option for the      |
    |  * -d              |packages, but    |configuration file is:  |
    |  * --download-only |does not unpack  |apt::Get:: Download-only|
    |                    |them.            |                        |
    |--------------------+-----------------+------------------------|
    |  * -f              |Adds missing     |The option for the      |
    |  * --fix-broken    |dependencies.    |configuration file is:  |
    |                    |                 |apt::Get: :Fix-Broken   |
    |--------------------+-----------------+------------------------|
    |                    |                 |No prompts for actions  |
    |                    |                 |are given.              |
    |                    |                 |                        |
    |                    |                 |In some cases, this     |
    |  * --force-yes     |Forces an action.|option could make your  |
    |                    |                 |system unusable.        |
    |                    |                 |                        |
    |                    |                 |The option for the      |
    |                    |                 |configuration file is:  |
    |                    |                 |apt::Get: :force-yes.   |
    |--------------------+-----------------+------------------------|
    |                    |                 |Use with the            |
    |                    |                 |dist-upgrade command for|
    |                    |Ignores hold     |efficiency.             |
    |--ignore-hold       |flags on a       |                        |
    |                    |package.         |The option for the      |
    |                    |                 |configuration file is:  |
    |                    |                 |apt::Get: :ignore-hold. |
    |--------------------+-----------------+------------------------|
    |  * -m              |Ignores missing  |Do not use with -f or   |
    |  * --ignore-missing|or corrupted     |--fix-broken .          |
    |  * --fix-missing   |packages.        |                        |
    |--------------------+-----------------+------------------------|
    |                    |                 |Only packages already   |
    |  * --no-download   |Prevents         |downloaded are affected |
    |                    |downloading.     |by other commands or    |
    |                    |                 |options.                |
    |--------------------+-----------------+------------------------|
    |                    |To prevent the   |The option for the      |
    |--no-upgrade        |upgrading of     |configuration file is:  |
    |                    |packages         |apt::Get: :no-upgrade.  |
    |--------------------+-----------------+------------------------|
    |                    |Displays a list  |The option for the      |
    |  * -u              |of all packages  |configuration file is:  |
    |  * --show-upgraded |to be upgraded.  |apt::Get: :             |
    |                    |                 |Show-Upgraded.          |
    |--------------------+-----------------+------------------------|
    |                    |                 |The option for the      |
    |  * -y              |Automatically    |configuration file is:  |
    |  * --yes           |replies "yes" to |apt::Get: :Assume-Yes.  |
    |  * --assume-yes    |all prompts.     |                        |
    |                    |                 |If an error occurs, then|
    |                    |                 |apt-get stops.          |
    +---------------------------------------------------------------+
</example>

<p>

<example>
           The apt-get Command (Manage Packages): Commands       
    +---------------------------------------------------------------+
    |   Option   |           Action           |       Option        |
    |------------+----------------------------+---------------------|
    |            |Removes package files that  |                     |
    |            |can no longer be downloaded |                     |
    |autoclean   |from the sources.           |                     |
    |            |                            |                     |
    |            |                            |                     |
    |------------+----------------------------+---------------------|
    |            |Updates listings of packages|                     |
    |check       |and check for broken        |                     |
    |            |packages.                   |                     |
    |------------+----------------------------+---------------------|
    |clean       |Clear the local listings of |                     |
    |            |retrieved package files.    |                     |
    |------------+----------------------------+---------------------|
    |            |Installs the latest versions|                     |
    |dist-upgrade|of all packages currently   |                     |
    |            |installed, as well as any   |                     |
    |            |necessary dependencies.     |                     |
    |------------+----------------------------+---------------------|
    |install     |                            |Enter only the       |
    |package     |Installs packages.          |package name, not the|
    |            |                            |full file name.      |
    |------------+----------------------------+---------------------|
    |remove      |                            |Enter only the       |
    |package     |Removes packages.           |package name, not the|
    |            |                            |full file name.      |
    |------------+----------------------------+---------------------|
    |            |                            |Use the --compile    |
    |            |                            |option to convert the|
    |            |                            |source packages to   |
    |source      |Finds and downloads source  |binary packages.     |
    |package     |packages                    |                     |
    |            |                            |Use the              |
    |            |                            |--download-only      |
    |            |                            |option to download,  |
    |            |                            |but not unpack.      |
    |------------+----------------------------+---------------------|
    |source      |Updates package overview    |                     |
    |package     |files with information from |                     |
    |            |the source.                 |                     |
    |------------+----------------------------+---------------------|
    |            |Installs the latest versions|Run the update       |
    |upgrade     |of all packages currently   |command first to     |
    |            |installed.                  |ensure that you have |
    |            |                            |the latest sources.  |
    +---------------------------------------------------------------+
</example>


<sect id="esl">Editing Source Lists
<p>
Source lists are essential to the use of apt-get . Without at least
one valid source, apt-get is not usable.
<p>

<url id="img/packages-1.png">
<p>
When installing, apt tries the sources in the order that they are
listed in the file.
<p>
You can edit sources in at least three ways:
<p>
<list>
<item> apt-setup : A text-based interface that guides you through the
    process. Manu users consider this tool obsolete, but it is useful
    for new users.
<item> A text editor: Edit the source files directly, modelling entries
    on existing ones. This is the preferred method of most Debian
    users.
<item> apt-cdrom : A command line utility that automatically detects cd
    s in the drives and mounts and unmounts cd s as necessary.
</list>


<sect1 id="aansuai">Adding a New Source Using an Interface
<p>
<list>
<item> 1 Type apt-setup . The Apt Configuration window opens.
</list>
<p>

<url id="img/packages-3.png">
<p>
<p>

<url id="img/packages-1.png">
<p>
apt-setup removes all comments from /etc/apt/sources.list.
<p>
<list>
<item> 2 Select the type of source from the list. Then select the ok
    button.
<item> 3 Follow the on-line instructions. Depending on the type of
    source you select, you may be asked:
<item> Whether you want to use a site that includes software restricted
    in the United States.
<item> Whether you want to use non-free software.
   
    Before you continue, you are given the choices of whether to use
    each of these categories of software. If you are an American
    citizen or prefer to use only free software, consider your
    choices carefully before continuing.
   
    If you choose to edit a source file directly, then the file opens
    in the vim editor.
   
<item> 4 Enter the path to the source.
   
    Depending on the type of source, you may be able to choose from a
    list.
   
    Otherwise, enter the path to the list.
   
<item> 5 If necessary, answer any other questions that display. Select
    the ok button to move between screens and to close the program
    after making your choices.
</list>


<sect1 id="aansfate">Adding a New Source from a Text Editor
<p>
<list>
<item> 1 Log in as root user.
<item> 2 Open a text editor.
<item> 3 Open:
<item> /etc/apt/sources.list: Any source.
<item> /var/state/apt/cdroms.list: cd sources.
</list>


<sect1 id="aancttlos">Adding a New CD to the List of Sources
<p>
Type: apt-cdrom options command.
<p>
Currently, the only command available is add .
<p>
This utility maintains the database of cd s in /var/state/apt/
cdroms.list.
<p>
Options can be entered as part of the command or set in /etc/apt/
apt.conf.
<p>
Options set in the configuration file can be overridden from the
command line by using the option - option =no .d
<p>

<url id="img/packages-1.png">
<p>
You can also use the apt-set command to set a cd source.
<p>

<example>
                The apt-cdrom Command (Sets Sources)                 
+-------------------------------------------------------------------+
|   Option    |       Action        |            Comment            |
|-------------+---------------------+-------------------------------|
|  * -a       |Scan for packages.   |May not be needed for all cd s.|
|  * --through|                     |                               |
|-------------+---------------------+-------------------------------|
|             |                     |The mount point must be listed |
|             |                     |in /etc/fstab.                 |
|  * -d       |Sets the cd mount    |                               |
|  * --cdrom  |point.               |The equivalent option in the   |
|             |                     |configuration file is:         |
|             |                     |                               |
|             |                     |Acquire:: cd ::mount           |
|-------------+---------------------+-------------------------------|
|             |Copies files to your |The equivalent option in the   |
|  * -f       |system without       |configuration file is:         |
|  * --fast   |checking them.       |                               |
|             |                     |APT:: cd ::Fast                |
|-------------+---------------------+-------------------------------|
|             |                     |The configuration file is /etc/|
|             |Edits an option in   |apt/apt.conf.                  |
|-o group tool|the configuration    |                               |
|= option     |file.                |See the configuration file and |
|             |                     |on-line help for information   |
|             |                     |about options.                 |
|-------------+---------------------+-------------------------------|
|             |Over rides a setting |The configuration file is /etc/|
|- option = no|in the configuration |apt/apt.conf.                  |
|             |file.                |                               |
|-------------+---------------------+-------------------------------|
|  * -r       |Gives a cd a new     |You are prompted for the new   |
|  * --rename |label.               |label.                         |
+-------------------------------------------------------------------+
</example>


<sect id="mpwtdc">Managing Packages With the dpkg Command
<p>
The dpkg command is used for general package management. It includes
many of the functions of dpkg-deb , a tool for managing and building
Debian packages, and is usually used in preference to it.
<p>
Although dpkg can be used to install a package, on the whole it is
less powerful and less convenient than apt-get .
<p>
For ordinary user, the real strength of dpkg is its ability to
retrieve information about packages on their systems. It is
especially useful if you need to search packages or their contents.
<p>
For more advanced users, dpkg is also useful for building Debian
packages.
<p>
For information about building packages, see the on-line help for 
dpkg and dpkg-deb .
<p>
Type: dpkg options argument action package .
<p>
Depending on the option, the package may be identified by its file
name or by the name of the package.

<sect1 id="tdcpmo">The dpkg Command (Package Management): Options
<p>
<example>
+-------------------------------------------------------------------+
|        Options        |        Action         |     Comments      |
|-----------------------+-----------------------+-------------------|
|                       |Automatically          |                   |
|  * - B                |deconfigures any       |                   |
|  * --auto-deconfigure |dependent packages when|                   |
|                       |a package is removed.  |                   |
|-----------------------+-----------------------+-------------------|
|                       |Does not install the   |                   |
|  * -E                 |package if the current |                   |
|  * --skip-same-version|version is already     |                   |
|                       |installed.             |                   |
|-----------------------+-----------------------+-------------------|
|                       |Includes any packages  |Use with the -A ,  |
|  * -R                 |in the subdirectories  |--install ,        |
|  * --recursive        |listed in the action.  |--unpack or -avail |
|                       |                       |actions.           |
|-----------------------+-----------------------+-------------------|
|                       |                       |A warning displays,|
|                       |                       |but the command    |
|                       |                       |continues to be    |
|                       |Forces the command to  |processed.         |
|  * --force argument   |complete even though a |                   |
|                       |problem occurs.        |See The dpkg       |
|                       |                       |Command (Package   |
|                       |                       |Management):       |
|                       |                       |Argument. (***)    |
|-----------------------+-----------------------+-------------------|
|                       |                       |The command stops  |
|                       |                       |with an error      |
|                       |Stops the command from |message.           |
|  * --no-force argument|completing if a problem|                   |
|  * --refuse argument  |occurs.                |See The dpkg       |
|                       |                       |Command (Package   |
|                       |                       |Management):       |
|                       |                       |Argument. (***)    |
+-------------------------------------------------------------------+
</example>
***) See <ref id="tdcpmarg">.
                                                                     
<sect1 id="tdcpmarg">The dpkg Command (Package Management): Argument             
<p>
<example>
+-------------------------------------------------------------------+
|    Argument    |                      Action                      |
|----------------+--------------------------------------------------|
|auto-select     |Selects or de-selects packages to install or      |
|                |remove.                                           |
|----------------+--------------------------------------------------|
|configure-any   |If necessary, configures any unconfigured packages|
|                |that the package depends on.                      |
|----------------+--------------------------------------------------|
|                |Installs even if the package conflicts with       |
|conflicts       |another one. This option could cause some files to|
|                |be over-written.                                  |
|----------------+--------------------------------------------------|
|depends         |Warns about dependency problems display, but do   |
|                |not stop the command.                             |
|----------------+--------------------------------------------------|
|depends-version |Warngs about version problems display.            |
|----------------+--------------------------------------------------|
|downgrade       |Installs even if a newer version is already       |
|                |installed.                                        |
|----------------+--------------------------------------------------|
|hold            |Processes packages with a hold flag.              |
|----------------+--------------------------------------------------|
|overwrite       |Over writes a file from one package with the same |
|                |file from another package.                        |
|----------------+--------------------------------------------------|
|remove-reinstreq|Removes broken packages.                          |
+-------------------------------------------------------------------+
</example>

<sect1 id="tdcpmact">The dpkg Command (Package Management): Actions
<p>
<example>
+-------------------------------------------------------------------+
|     Actions      |      Action      |          Comments           |
|------------------+------------------+-----------------------------|
|  * -A            |Updates package   |                             |
|  * --record-avail|information on    |                             |
|                  |your system.      |                             |
|------------------+------------------+-----------------------------|
|  * -C            |Searches for      |If possible, what is missing |
|  * --audit       |partly installed  |is explained.                |
|                  |packages.         |                             |
|------------------+------------------+-----------------------------|
|  * -c package    |Displays files in |                             |
|  * --control     |a Debian package. |                             |
|    package       |                  |                             |
|------------------+------------------+-----------------------------|
|                  |                  |Note that the package names, |
|                  |                  |not the package files are    |
|                  |                  |entered.                     |
|--configure       |Configures an     |                             |
|packages          |unpacked package. |Instead of listing packages, |
|                  |                  |you can use -a or --pending  |
|                  |                  |to configure all unpacked    |
|                  |                  |packages.                    |
|------------------+------------------+-----------------------------|
|  * -e package    |Extracts control  |                             |
|    directory     |information into  |                             |
|  * -- control    |the directory     |                             |
|    package       |specified.        |                             |
|    directory     |                  |                             |
|------------------+------------------+-----------------------------|
|- -get-selections |Displays package  |If no string is given, all   |
|string            |selections.       |selected packages display.   |
|------------------+------------------+-----------------------------|
|  * -X package    |                  |                             |
|    directory     |Extracts files    |Useful for examining a       |
|  * --extract     |from the package  |package's contents.          |
|    package       |into a directory. |                             |
|    directory     |                  |                             |
|------------------+------------------+-----------------------------|
|                  |                  |To install all packages in a |
|  * -i package    |                  |directory, use this options  |
|    name          |Installs a        |with -R or --recursive and,  |
|  * --install     |package.          |complete with a directory    |
|    package file  |                  |name instead of a single     |
|                  |                  |package name.                |
|------------------+------------------+-----------------------------|
|  * -l string     |Lists packages    |If no pattern is listed, all |
|  * --list string |that match the    |packages are listed.         |
|                  |string.           |                             |
|------------------+------------------+-----------------------------|
|  * -L package    |Lists files that  |                             |
|  * --listfiles   |come from a       |                             |
|    package       |particular        |                             |
|                  |package.          |                             |
|------------------+------------------+-----------------------------|
|                  |                  |Note that the package names, |
|                  |                  |not the package files are    |
|--print-avail     |Displays package  |entered.                     |
|package           |information.      |                             |
|                  |                  |The information is form /var/|
|                  |                  |lib/dpkg/available.          |
|------------------+------------------+-----------------------------|
|                  |                  |Note that the package names, |
|                  |                  |not the package files are    |
|                  |                  |entered.                     |
|--purge package   |Purges a package. |                             |
|                  |                  |Instead of listing packages, |
|                  |                  |you can use -a or --pending  |
|                  |                  |to configure all packages    |
|                  |                  |marked for purging.          |
|------------------+------------------+-----------------------------|
|                  |                  |Note that the package names, |
|                  |                  |not the package files are    |
|  * -r package    |                  |entered.                     |
|  * --remove      |Removes a package.|                             |
|    package       |                  |Instead of listing packages, |
|                  |                  |you can use -a or --pending  |
|                  |                  |to remove all packages marked|
|                  |                  |for removal                  |
|------------------+------------------+-----------------------------|
|  * -S filename   |Searches installed|                             |
|  * --search      |packages for a    |                             |
|    filename -    |file name         |                             |
|    pattern       |                  |                             |
|------------------+------------------+-----------------------------|
|  * -s packages   |Display a         |                             |
|  * --status      |package's status. |                             |
|    package       |                  |                             |
|------------------+------------------+-----------------------------|
|                  |                  |To unpack all packages in a  |
|                  |Uploads a file,   |directory, use this options  |
|  * --unpack      |b.ut does not     |with -R or --recursive and,  |
|                  |configure it      |complete with a directory    |
|                  |                  |name instead of a single     |
|                  |                  |package name.                |
|------------------+------------------+-----------------------------|
|  * --update-avail|Updates list of   |                             |
|  * --merge-avail |available files   |                             |
|------------------+------------------+-----------------------------|
|                  |Searches for      |                             |
|                  |uninstalled       |                             |
|--yet-to-unpack   |packages that have|                             |
|                  |been selected for |                             |
|                  |installation.     |                             |
+-------------------------------------------------------------------+
</example>


<sect id="ius">Installing Unpackaged Software
<p>
Linux developers often offer programs as tar files of uncompiled
source code instead of in a package format. While a program is in
early development, cotinually remaking packages would be a waste of
effort, so most programmers do not bother. The source code is, after
all, what most programmers are interested in. In many cases, too
developers are not working with a specific distribution or package
management system in mind.
<p>
A tar file of unpackaged software may be listed as being dynamically
linked or static.
<p>
A dynamically linked piece of software calls on programming libraries
as it needs them. This tactic saves space, and is the one most
commonly used. However, it has two major drawbacks:
<p>
<list>
<item> You may need to backtrack and install other software before you
    can use dynamically linked software.
<item> Because the Red Hat Package Management System is so widely used,
    dynamically linked software may look for the links it requires on
    the wrong place on a Debian system.
</list>
<p>
By contrast, static software includes the necessary functions within
itself. As a result, it may duplicate existing functions on your hard
drive, and take up more space than the same program dynamically
linked. However, because it is self-contained, it should not have any
dependency problems. For this reason, always install the static
version of unpackaged software whenever you have the choice.
<p>
Exact instructions vary with each piece of unpackaged software.
However, the following instructions give a general overview.
<p>
<list>
<item> 1 Download a tar file. Choose the static binary whenever
    possible.
<item> 2 If the site that you download from specifies that any
    dependencies are needed, download and install them before you
    install the software.
<item> 3 Log in as root user.
</list>
<p>

<url id="img/packages-1.png">
<p>
Do not use the internet while root user. Doing so makes your system
vulnerable to attacks.
<p>
<list>
<item> 4 Place the tar file in the root directory and unarchive it. A
    directory structure is created for the program.
<item> 5 Change to the sub-directory that contains the program.
   
    Since there is no standard, you may have to search a while.
    Often, however, it is the /src (source) directory.
   
<item> 6 Find and read the file that contains installation instructions.
    Usually it is called Install or Readme.
<item> 7 Type: ./configure . During the configuration process:
<item> Variables in the program are defined to suit your system
<item> Install scripts are created for your system
<item> Make files (the files needed for installation) are created.
   
    During configuration, a long list of information scrolls. If the
    last few lines contain no messages about errors, you can
    continue.
   
<item> 8 Type: ./make . The software is compiled - that is, converted
    from source code to the binary format in which you use it.
   
    While the software is compiled, information scrolls by in the
    command line. If no error messages display, you can continue.
   
<item> 9 Type: ./install . The software is installed. Generally, the
    program is added to the /us/local directory structure.
</list>
<p>
These last three steps may take several minutes apiece. In each case,
watch the display on the screen for errors. You may have to install a
programming library on your system to get past these steps without
errors.
<p>
At the end of this process, the software should be ready for use. You
may want to:
<p>
<list>
<item> Clean up after installing unpackaged software, you can conclude
    by typing ./make clean.
<item> Add an icon or a menu item for it to your desktop. See 
<ref id="alaunchers">.
</list>
<p>

<url id="img/packages-1.png">
<p>
The most likely error when installing unpackaged software is a
missing dependency. However, because unpackaged software is often in
development, it may not work on all systems or with all Linux-based
operating systems, especially in the earliest stages of development.


<sect id="mdpfof">Making Debian Packages From Other Formats
<p>
Often, you can make a Debian package from another format using the 
alien utility. However, because of the complexities of converting
from one format to another, alien does not always work.
<p>
For this reason, you may prefer to use a static tar file instead. See
<ref id="ius">.
<p>
<list>
<item> 1 Obtain the package you want to install. You can convert from
    the following formats:
<item> .rpm : Red Hat Package Management format.
<item> .slp : Stampede Linux format.
<item> .tgz : Slackware format (archives made using tar and gzip ).
<item> 2 Type: alien -i source_format target_format options package .
    The package is converted and installed.
   
    If you want to examine the package before installing it, do not
    include the -i option.
   
<item> 3 Test the converted package by entering the binary file's name
    at the command line.

</list>
<example>
            The alien Command (Convert Packages): Formats        
    +---------------------------------------------------------------+
    |   Format   |        Action        |          Comment          |
    |------------+----------------------+---------------------------|
    |  * -d      |Converts to or from   |This is the default if no  |
    |  * --to-deb|Debian format.        |target format is mentioned.|
    |------------+----------------------+---------------------------|
    |  * -r      |Converts to or from   |The Red Hat utility rpm    |
    |  * --to-rpm|Red Hat format.       |must be installed.         |
    |------------+----------------------+---------------------------|
    |--to-slp    |Converts to or from   |                           |
    |            |Stampede Linux format.|                           |
    |------------+----------------------+---------------------------|
    |  * -t      |Converts to or from   |Does not work on tarred    |
    |  * --to-tgz|Slackware Linux       |source code files.         |
    |            |format.               |                           |
    +---------------------------------------------------------------+
</example>

<p>

<example>
            The alien Command (Convert Packages): Options        
    +---------------------------------------------------------------+
    |   Format    |       Action        |          Comment          |
    |-------------+---------------------+---------------------------|
    |  * -c       |Converts scripts for |Use with caution. Examine  |
    |  * --scripts|the package.         |scripts before using this  |
    |             |                     |option.                    |
    |-------------+---------------------+---------------------------|
    |  * -i       |Installs newly       |After installation, the    |
    |  * --install|generated package    |package file is removed.   |
    |             |automatically.       |                           |
    +---------------------------------------------------------------+
</example>

</chapt>
