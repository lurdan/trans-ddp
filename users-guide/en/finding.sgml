<chapt id="sffat">Searching for Files and Text
<p>
&progeny-d; includes many tools for locating files. This chapter
describes the tools for:
<p>
<list>
<item> Searching for files and text.
<item> Viewing files and text.
<item> Comparing files.
</list>
<p>
From the desktop, you can search with most common options and view
files. However, you need to use the command line for:
<p>
<list>
<item> Advanced searching, especially for text.
<item> Selected viewing of parts of files.
<item> Comparing files.
</list>
<p>
First, however, you need to know something about how the Linux
directory structure.


<sect id="ulf">Understanding Linux Files
<p>
Linux treats everything on your hard drives and disks as a file. In
practice, however, Linux uses three main types of object to store
information:
<p>
<list>
<item> Files: Containers of information. Files that start a program are
    called executables or binaries. Binaries are often stored in a /
    bin directory (short for binary), or in an /sbin directory (short
    for system binaries).
<item> Links: Pointers to another file. Links are useful for saving
    space when you need a file in more than one place.
<item> Directories: Collections of files, links and/or other
    directories. A directory within a directory is called a
    sub-directory.
</list>
<p>

<url id="img/Finding-1.png">
<p>
Strictly speaking, links and directories are specialized files. You
can copy them or change their permissions exactly as you would with
any other file.


<sect1 id="uln">Understanding Linux Names
<p>
The names of Linux files, links and directories follow certain rules:
<p>
<list>
<item> Their names cannot be longer than 256 characters, and the
    complete path cannot be longer than 4096.
<item> They are case sensitive, distinguishing between lower and upper
    case letters. Jsmith , jsmith , and JSMITH could all be files in
    the same directory.
<item> They can use any letter or number. However, to avoid potential
    problems, do not include characters used metacharacters, or for
    some other purpose, such as the hash mark( # ) that indicates a
    comment.
<item> They use a forward slash ( / ) at the start to indicate a
    directory. Windows, by contrast, uses a backward slash ( ).
</list>
<p>

<url id="img/Finding-1.png">
<p>
A forward slash by itself is shorthand for the root directory. You
can use this shorthand on both the command line and the desktop.


<sect1 id="ufeil">Understanding File Extensions in Linux
<p>
Extensions are file name suffixes that start with a period. Usually,
they are two or three letters long.
<p>
Linux can read many file extensions used by other platforms, such as 
<list>
<item>jpg for a graphic file, or .html for a web file. It can also use
</list>
them for mime types. However, Linux does not always use extensions to
identify file types.
<p>
Often, the directory where a file is placed is a better indication of
what type of file it is. See <ref id="udtff">.
<p>
However, Linux does use a few regular extensions.
<p>
                                                                     
<example>
                      Extensions Used in Linux                       
+-------------------------------------------------------------------+
|Extension|                        File Type                        |
|---------+---------------------------------------------------------|
|.bz2     |A file compressed using bzip2 .                          |
|---------+---------------------------------------------------------|
|.c       |A file written in the C programming language.            |
|---------+---------------------------------------------------------|
|.conf    |A configuration file. In some cases, "conf" is used in a |
|         |file name, but not as an extension.                      |
|---------+---------------------------------------------------------|
|.deb     |A Debian package for installing software.                |
|---------+---------------------------------------------------------|
|.lock    |A lock file that prevents the use of another file.       |
|---------+---------------------------------------------------------|
|         |A Red Hat package file. Although you can sometimes use   |
|.rpm     |.rpm s in &progeny-d;, doing so can have unexpected   |
|         |results and is not generally recommended. You can also   |
|         |convert packages using the alien utility .               |
|---------+---------------------------------------------------------|
|.so      |A shared object (a library or module).                   |
|---------+---------------------------------------------------------|
|.src     |A source code file. Written in plain text, a source file |
|         |must be compiled to be used.                             |
|---------+---------------------------------------------------------|
|.tar     |A single file made of a collection of files archived     |
|         |using the tar command.                                   |
|---------+---------------------------------------------------------|
|         |A single file made of a collection of files archived     |
|.tar.gz  |using the tar command, then compressed used the gzip     |
|         |command.                                                 |
|---------+---------------------------------------------------------|
|         |A single file made of a collection of files archived     |
|.tgz     |using the tar command, then compressed used the gzip     |
|         |command.                                                 |
|---------+---------------------------------------------------------|
|.gz      |A file compressed using the gzip command.                |
+-------------------------------------------------------------------+
</example>


<sect id="itlds">Introducing the Linux Directory Structure
<p>
Linux's directory structure is based on unix 's. Like other operating
systems, Linux arranges directories in a tree-like hierarchy, in
which any directory may contain other-directories or files.
<p>
However, Linux's directory structure has several differences from
those in other popular operating systems:
<p>
<list>
<item> Linux systems are deeper. That is, Linux tends to have more
    sub-directories.
<item> Linux systems all start with the root directory. The root
    directory is denoted by a forward slash (/), All other
    directories, even those on other partitions, are sub-directories
    of the root directory.
</list>
<p>

<url id="img/Finding-1.png">
<p>
Do not confuse the root directory (/) with the root user, the root
user's home directory(/root), or the root partition (the hard drive
partition which the root directory is on).
<p>
<list>
<item> You cannot always tell from a directory's position whether it is
    on a separate partition from the root directory. For example, the
    /usr directory could be on the same partition as the root
    directory. It could just as easily be on another hard drive
    altogether.
</list>
<p>

<url id="img/Finding-1.png">
<p>
To see which directory a partition is mounted on, view /etc/fstab in
a text editor. On each line, the first column is the partition, and
the second column is its mount point.
<p>
The advantage of this system is that you can position a partition
almost anywhere on the system.


<sect1 id="udtff">Using Directories to Find Files
<p>
Linux directories are consistent in their contents. The result is
that a file's directory is usually a clue to what type of file it is.
<p>
For example, if you are looking for an executable program, it is
probably in a /bin (short for "binary)" if it is a general or third
party application or /usr/bin ("system binary") if it is a program
that is an essential part of the operating system, or a maintenance
utility.
<p>
The following table shows the directories where certain types of
files are likely to be located. This structure is very similar in all
Linux distributions, although small differences exist.
<p>
                                                                     
<example>
                    The Linux Directory Structure                    
+-------------------------------------------------------------------+
|Directory |                      What's In It                      |
|----------+--------------------------------------------------------|
|          |The root directory. Contains all other files and        |
|          |directories.                                            |
|/         |                                                        |
|          |The complete or absolute path to other directories      |
|          |starts from the root directory.                         |
|----------+--------------------------------------------------------|
|          |Binary or executable files that can be used by both the |
|          |root user and normal user.                              |
|/bin      |                                                        |
|          |Look in other /bin directories for other executable     |
|          |files.                                                  |
|----------+--------------------------------------------------------|
|          |Files needed to start Linux, including the kernel. Most |
|/boot     |files in /boot generally cannot be configured using a   |
|          |text editor.                                            |
|----------+--------------------------------------------------------|
|          |The usual mount point for the cd drive. If the system   |
|/cdrom    |has a second cd drive, its mount point is usually /     |
|          |cdrom2.                                                 |
|----------+--------------------------------------------------------|
|          |Definitions for drives, partitions, and other devices. /|
|/dev      |dev also includes the makedev tool to create new        |
|          |devices.                                                |
|----------+--------------------------------------------------------|
|          |Most of the system's configuration files. Including /etc|
|/etc      |/X11 for the X Window system and /etc/opt for third     |
|          |party applications.                                     |
|----------+--------------------------------------------------------|
|          |The usual mount point for the first floppy drive. If the|
|/floppy   |system has a second floppy drive, its mount point is    |
|          |usually /floppy2.                                       |
|----------+--------------------------------------------------------|
|          |Home directories for all regular users. The root user's |
|          |home directory is /root.                                |
|          |                                                        |
|          |Subdirectories of /home are named for the user name of  |
|/home     |each account.                                           |
|          |                                                        |
|          |Personal configuration files that start with a . (a     |
|          |period) are in each home directory. These configuration |
|          |files are not displayed by many commands unless you     |
|          |select an option to display them.                       |
|----------+--------------------------------------------------------|
|/initrd   |Files for Linux's ram disk.                             |
|----------+--------------------------------------------------------|
|          |Programming libraries needed to start the system and run|
|          |basic commands.                                         |
|/lib      |                                                        |
|          |Look for other lib directories scattered throughout the |
|          |system.                                                 |
|----------+--------------------------------------------------------|
|/         |Files recovered when a check is run on a damaged file   |
|lost+found|system.                                                 |
|----------+--------------------------------------------------------|
|          |A folder for other mount points, usually other          |
|          |partitions not used directly by Linux, including those  |
|          |for other operating systems.                            |
|/mnt      |                                                        |
|          |On some Linux distributions, /mnt includes /cdrom and / |
|          |floppy directories, but this is not standard Debian     |
|          |practice.                                               |
|----------+--------------------------------------------------------|
|          |Process and system information.                         |
|          |                                                        |
|/proc     |Be extremely careful of changes to /proc while you are  |
|          |logged in as the root user, because they can easily     |
|          |bring the system down.                                  |
|----------+--------------------------------------------------------|
|          |The home directory for the root user.                   |
|/root     |                                                        |
|          |Home directories for other users are generally          |
|          |sub-directories of /home.                               |
|----------+--------------------------------------------------------|
|          |Executable files that are used only by the root user,   |
|/sbin     |including general management and networking commands.   |
|          |                                                        |
|          |Other executables are in /bin.                          |
|----------+--------------------------------------------------------|
|          |Programs and system files that are shared by all users. |
|          |                                                        |
|/usr      |A common location for free software or for third-party  |
|          |software. Important sub-directories include /usr/local  |
|          |and /usr/share.                                         |
|----------+--------------------------------------------------------|
|/var      |Data files whose content changes frequently, such as    |
|          |caches, spools, log files and user mailbox files.       |
|----------+--------------------------------------------------------|
|/var/lock |Lock files that prevent another user from opening or    |
|          |saving particular files.                                |
|----------+--------------------------------------------------------|
|/var/log  |Log files for different programs. These logs are        |
|          |invaluable for solving problems.                        |
+-------------------------------------------------------------------+
</example>


<sect1 id="uaarfp">Understanding Absolute and Relative File Paths
<p>
A file path is a list of the directories above the file, ending with
the file name.
<p>
Linux uses two types of paths: absolute and relative paths:
<p>
<list>
<item> An absolute path always starts with the root directory. It
    includes all directories and sub-directories above the file.
   
    For example, the absolute path to a file in a sub-directory in a
    user's home directory might be /home/kchong/ToDo/january.txt .
   
    This path can take a long time to type, but is completely clear.
   
<item> A relative path starts in your present working directory.
   
    For example, if you were in the /home/kchong directory, the
    relative path to a file in a sub-directory might be ToDo/
    january.tx t.
   
    You can display your present working directory by using the pwd
    ("present working directory") command.
   
</list>
In addition, ./ indicates the present working directory and the path
to your home directory.


<sect id="sftd">Searching from the Desktop
<p>
You can search for files or text from the desktop using:
<p>
<list>
<item> The gnome search tool (gsearchtool): A graphical interface for
    the find and locate commands that includes the most common
    options for the commands.
<item> The gnome Midnight Commander: Useful for simple searches.
</list>
<p>
If you want a more elaborate search, See <ref id="sftcl">.


<sect1 id="utfcftd">Using the find Command From the Desktop
<p>
The find command is a tool for locating files. It can also do basic
searches using strings and regular expressions.
<p>
<list>
<item> At a command line, type: gsearchtool. The gnome search tool
    opens, with the Full find (find) tab selected.
</list>
<p>

<url id="img/Finding-2.png">
<p>
<p>
<list>
<item> Enter the directory in which to start the search.
   
    You can type the directory, choose it from the drop-down list of
    recent choices, or use the browse button to make a selection.
   
<item> Choose the options to use from the drop-down list beside the Add
    button.
   
    These options correspond to the most common ones in the find
    command.
   

<url id="img/Finding-3.png">
<p>
</list>
<p>
   
    The default choice is the File name.
   
    Select the option. When it displays, select the Add button to
    display the option in the window.
   
    You can disable an option temporarily by de-selecting the Enable
    button beside it or remove it from the display by selecting the
    Remove button.
   
<list>
<item> When you have chosen the options to use, enter any information
    needed to use each option.
<item> If you want, select the Show Command button to see what the
    command would look like at the command line.
<item> Select the Start button to search. Search results display in a
    separate window.
</list>
<p>

<url id="img/Finding-1.png">
<p>
This window stays open so that the results of other searches can be
added to it.
<p>

<url id="img/Finding-4.png">
<p>
<p>
<list>
<item> From the Search Results window, you can:
<item> Select a result to open the file in gedit .
<item> Clear the window of results.
<item> Save the results to a file.
</list>


<sect1 id="utlcftd">Using the locate Command From the Desktop
<p>
The locate command searches a database of file names and prints
results that match the string that is entered for a command.
<p>
<list>
<item> At a command line, type: gsearchtool. The gnome search tool
    opens, with the Full find (find) tab selected.
<item> Select the Quick Find (locate tab).
</list>
<p>

<url id="img/Finding-5.png">
<p>
<p>
<list>
<item> Enter a string, with or without metacharacters.
<item> Select the Start button to search. Search results display in a
    separate window. This window stays open so that the results of
    other searches can be added to it.
</list>
<p>

<url id="img/Finding-6.png">
<p>
<p>
<list>
<item> From the Search Results window, you can:
<item> Select a result to open the file in gedit .
<item> Clear the window of results.
<item> Save the results to a file.
</list>


<sect1 id="sftgmc">Searching From the GNOME Midnight Commander
<p>
<list>
<item> Open the gnome Midnight Commander. Do one of the following:
<item> From the workspace, select the Home directory launcher.
<item> From the menu, select Programs &gt; File Manager.
   
    In both cases, the gnome Midnight Commander opens, displaying
    your home directory.
   

<url id="img/Finding-7.png">
<p>
</list>
<p>
<list>
<item> From the gnome Midnight Commander menu, select Commands &gt; Find
    File. The Find File window displays.
</list>
<p>

<url id="img/Finding-8.png">
<p>
<p>
<list>
<item> In the Start at field, type the directory from which to start the
    search. The default is the current directory.
<item> In the Filename field, type the file name to search for. You can
    use wild cards.
<item> In the Content field, type a text string to search for. This
    field is optional.
<item> Start the search. Select the ok button.
   
    The search results display in a separate window. They may take
    some time to display.
   

<url id="img/Finding-9.png">
<p>
</list>
<p>

<url id="img/Finding-1.png">
<p>
You can only search for results in directories in which you have read
permission.
<p>
    Using the buttons in the results window, you can:
   
<list>
<item> Select a result and change to its directory.
<item> Start a new search.
<item> Close the search tool.
</list>


<sect id="sftcl">Searching From the Command Line
<p>
The Linux command line includes many tools for locating files or
information in them. These tools can be divided into two main
categories:
<p>
<list>
<item> File-Locating Tool: find , locate .
<item> Text-Locating Tools: grep , egrep , and fgrep .
</list>
<p>
Some of these commands, including grep , egrep and find can use
variable text patterns (metacharacters or regular expressions) to
extend their search abilities. See <ref id="umowc">.


<sect1 id="sffutfc">Searching for Files: Using the find Command
<p>
The basic tool for finding files is find . The find command is useful
for locating files by their attributes or by their position in the
directory tree.
<p>
You can search by a wide variety of criteria, including:
<p>
<list>
<item> When the file was last accessed.
<item> When the file was last changed.
<item> The file's owner or the owner's group.
<item> A text string, including one that uses metacharacters. 
    See <ref id="umowc">.
<item> The type of file.
<item> The file's age relative to another file.
<item> The file's permissions.
</list>
<p>
Usually, find starts with the current directory, then searches its
sub-directories. However, you can specify the starting directory.
<p>
You can also specify how many levels of sub-directories down to
search.
<p>
Type: find directory options argument .
<p>

<example>
                          The find Command                           
+-------------------------------------------------------------------+
|  Option   |        Action        |            Comments            |
|-----------+----------------------+--------------------------------|
|           |                      |Arguments include:              |
|           |                      |                                |
|           |Searches by minutes   |  * +number: More than the given|
|-amin      |since files were      |    number of minutes ago.      |
|argument   |accessed.             |  * -number: Less than the given|
|           |                      |    number of minutes ago.      |
|           |                      |  * number: Exactly the given   |
|           |                      |    number of minutes ago.      |
|-----------+----------------------+--------------------------------|
|           |                      |Arguments are:                  |
|           |                      |                                |
|           |                      |  * +number: More than the given|
|-atime     |Searches by days since|    number of days ago.         |
|argument   |files were accessed.  |  * - number: Less than the     |
|           |                      |    given number of days ago.   |
|           |                      |  * number: Exactly the number  |
|           |                      |    of days ago.                |
|-----------+----------------------+--------------------------------|
|           |                      |Arguments include:              |
|           |                      |                                |
|           |Searches by minutes   |  * +number: More than the given|
|-cmin      |since files were      |    number of minutes ago,      |
|argument   |changed.              |  * -number: Less than the given|
|           |                      |    number of minutes ago.      |
|           |                      |  * number: Exactly the given   |
|           |                      |    number of minutes ago.      |
|-----------+----------------------+--------------------------------|
|           |                      |Arguments are:                  |
|           |                      |                                |
|           |                      |  * +number: More than the given|
|           |Searches by the number|    number of days ago.         |
|-ctime     |of days since file    |  * -number: Less than the given|
|argument   |attributes were       |    number of days ago.         |
|           |changed.              |  * number: Exactly the number  |
|           |                      |    of days ago.                |
|           |                      |                                |
|           |                      |                                |
|-----------+----------------------+--------------------------------|
|-follow    |Traces symbolic links |                                |
|           |to original files.    |                                |
|-----------+----------------------+--------------------------------|
|           |                      |The group can be identified by  |
|           |Searches for files    |name or by group id .           |
|-group     |that belong to a      |                                |
|group      |particular group of   |This option is best used as root|
|           |users.                |user. Otherwise, you can only   |
|           |                      |find files to which you have    |
|           |                      |read permission.                |
|-----------+----------------------+--------------------------------|
|-maxdepth  |Sets the maximum level|                                |
|number     |of sub-directories to |                                |
|           |search.               |                                |
|-----------+----------------------+--------------------------------|
|-mindepth  |Sets the minimum level|                                |
|number     |of sub-directories to |                                |
|           |search.               |                                |
|-----------+----------------------+--------------------------------|
|-name      |Searches for files    |Put a string in quotation marks |
|string     |that match the string.|to use shell metacharacters.    |
|-----------+----------------------+--------------------------------|
|           |Finds files newer than|                                |
|-newer file|one included in the   |.                               |
|           |command.              |                                |
|-----------+----------------------+--------------------------------|
|-perm      |Searches with         |                                |
|permissions|permissions in        |                                |
|           |absolute mode.        |                                |
|-----------+----------------------+--------------------------------|
|           |                      |Arguments include:              |
|-type      |Searches for types of |                                |
|argument   |files.                |  * d: Directory.               |
|           |                      |  * l: Symbolic link.           |
|           |                      |  * f: Regular file.            |
|-----------+----------------------+--------------------------------|
|           |                      |Users can be identified by      |
|           |Searches for files    |account name or by user id.     |
|           |that belong to the    |                                |
|-user user |user included in the  |This option is best used as root|
|           |command.              |user. Otherwise, you can only   |
|           |                      |find files for which you have   |
|           |                      |read permission.                |
+-------------------------------------------------------------------+
</example>


<sect1 id="sffftclutlc">Searching for Files From the Command Line Using the locate Command
<p>
The locate command searches a database for files. It is often the
quickest way to find a file.
<p>
Type: locate string . If you want to specify the database, add the -d
path or --database = path option.
<p>

<url id="img/Finding-1.png">
<p>
You may want to install slocate ("secure locate"), a replacement for 
locate .


<sect1 id="sftftclugc">Searching for Text From the Command Line: Using grep Commands
<p>
Linux uses the grep command line tools to search for text in files.
This family of tools contains three commands:
<p>
<list>
<item> grep : A general purpose search tool that uses text strings,
    sometimes with metacharacters. The grep command contains most of
    the functionality of the other tools, but has fewer options for
    customizing the search.
<item> fgrep : A specialized search tool for locating literal text
    strings - that is, text strings without metacharacters. Because 
    fgrep uses literal text strings, it does not require you to
    remember any special characters in your search.
<item> egrep : A specialized search tool that uses metacharacters. The
    command uses more metacharacters than grep . In addition, the 
    egrep command is often said to be the fastest of the three tools.
</list>
<p>
All three commands use a similar format. Type:
<p>
<list>
<item> grep options string files .
<item> egrep options string files .
<item> fgrep options string files .
</list>
<p>

<url id="img/Finding-1.png">
<p>
To use grep or egrep as fully as possible, you should familiarize
yourself with metacharacters. See <ref id="umwgc">.
<p>

<url id="img/Finding-1.png">
<p>
To save or print search results, use redirection operators. See
<ref id="riaofc">.
<p>
<example>
           The grep, egrep, and fgrep Commands (Find Text)           
+-------------------------------------------------------------------+
|         Option          |      Action      |       Comment        |
|-------------------------+------------------+----------------------|
|                         |Treats the string |Used only with grep . |
|-E                       |as an extended    |Similar to using egrep|
|                         |regular           |.                     |
|                         |expression.       |                      |
|-------------------------+------------------+----------------------|
|                         |Treats strings as |Used only with grep . |
|-F                       |regular text.     |Similar to using fgrep|
|                         |                  |.                     |
|-------------------------+------------------+----------------------|
|                         |Searches using a  |                      |
|  * -f file              |text file         |Strings must be listed|
|  * --file= file         |containing a list |one per line in the   |
|                         |of patterns to    |file.                 |
|                         |match.            |                      |
|-------------------------+------------------+----------------------|
|                         |Ignores the       |If this option is not |
|  * -i                   |distinction       |used, lower case      |
|  * --ignore-case        |between upper and |letters are           |
|                         |lower case        |distinguished from    |
|                         |letters.          |upper case ones.      |
|-------------------------+------------------+----------------------|
|  * -l                   |Lists files with  |Individual lines are  |
|  * --files-with-matches |matches.          |not listed.           |
|-------------------------+------------------+----------------------|
|  * -L                   |Searches for files|                      |
|  * --files-without-match|that do not match |                      |
|                         |the string.       |                      |
|-------------------------+------------------+----------------------|
|  * -n                   |Displays lines    |                      |
|  * --line-number        |numbered.         |                      |
|-------------------------+------------------+----------------------|
|                         |Sets the number of|                      |
|-number                  |lines to display  |Sometimes referred to |
|                         |before and after  |as "context."         |
|                         |each match.       |                      |
|-------------------------+------------------+----------------------|
|  * -q                   |Stops at the first|Whether other matches |
|  * --quiet              |match.            |are available is not  |
|                         |                  |listed.               |
|-------------------------+------------------+----------------------|
|  * -r                   |Searches          |                      |
|  * --recursive          |sub-directories.  |                      |
|-------------------------+------------------+----------------------|
|  * -v                   |Searches for lines|                      |
|  * --invert-match       |that do not match |                      |
|                         |the string.       |                      |
|-------------------------+------------------+----------------------|
|  * -x                   |Displays lines    |                      |
|  * --line-regexp        |that match the    |                      |
|                         |entire string.    |                      |
+-------------------------------------------------------------------+
</example>


<sect1 id="umwgc">Using Metacharacters With grep Commands
<p>
Metacharacters are characters that can be used to set special
conditions for searching. They are also known as wild cards. See
<ref id="ussymbols">.
<p>
Metacharacters are added to a text string. A text string that
includes metacharacters is called a regular expression. Regular
expressions are useful for finding variations in wording or in the
positioning of the string on a line.
<p>
Metacharacters can be used with both grep and egrep . However, grep
can use fewer metacharacters than egrep . Whenever you want to use
metacharacters, egrep is usually the tool to use.
<p>
If you do not want to use any metacharacters at all, or do not have
the characters memorized for use, use fgrep .
<p>
Metacharacters can be extremely powerful, especially when used in
combination. However, when you are using search tools, little is
likely to go wrong unless you combine a grep command with another one
that makes changes to files.
<p>

<url id="img/Finding-1.png">
<p>
If you want to search for a character that is usually used as a
metacharacter, place a backward slash ( ) in front of it. For
example, ? searches for a question mark, instead of any character.
<p>
Metacharacters are especially powerful when used together. For
example:
<p>
<list>
<item> ^contacts$ searches for matches in which contacts is the only
    word on a line.
<item> [Cc]ontacts matches Contacts or contacts .
<item> ^...$ searches for any line of three characters.
<item> compan (y|ies) searches for company or companies .
<item> [A-Za-z] searches for any upper or lowercase letter. Similarly, 
    [0-9A-Za-z] searches for any number or any letter.
</list>


<sect id="vfftd">Viewing Files From the Desktop
<p>
The desktop offers only limited choices for viewing files. For
selective viewing of parts of files, use the command line instead. 
See <ref id="vfftcl">.
<p>
To view a file from the desktop:
<p>
<list>
<item> Open the gnome Midnight Commander. Do one of the following:
<item> From the workspace, select the Home directory launcher.
<item> From the menu, select Programs &gt; File Manager.
   
    In both cases, the gnome Midnight Commander opens, displaying
    your home directory.
   

<url id="img/Finding-10.png">
<p>
</list>
<p>
<list>
<item> Use the directory tree and the Back, Up, and Forward icons to
    display the directory you want.
<item> Right click on the icon for the file that you want. A pop-up menu
    appears.
</list>
<p>

<url id="img/Finding-11.png">
<p>
<p>
<list>
<item> Select Open or Open With from the menu. One of two things
    happens:
<item> If the file's type is associated with a program, selecting Open
    displays the file. See <ref id="amt">.
   
    or
   
<item> If the file's type is not associated, selecting Open or Open With
    displays a window to choose a viewer from.
</list>
<p>

<url id="img/Finding-12.png">
<p>
<p>
<list>
<item> If you are choosing a viewer, do one of three things:
<item> Select an application from the directory tree.
   
    or
   
<item> Use the Browse button to find a viewer.
   
    or
   
<item> Type the path of a viewer.
   
    If the chosen browser is capable of displaying the file, then the
    file displays.
   
</list>


<sect id="vfftcl">Viewing Files From the Command Line
<p>
Linux includes so many tools for viewing files from the command line
that some are widely considered obsolete.
<p>
For example, cat is less commonly used than it once was, probably
because it has few options and does not allow scrolling. However, cat
is still useful for a quick, no-frills view of a short file.
<p>
Similarly, although more is still a functional tool, for most people
it has been replaced by less , whose name is a play on the saying
that "less is more."
<p>
In general, less is the standard tool for viewing files. However,
specialized commands also exist:
<p>
<list>
<item> tac : Displays files from the end backwards.
<item> head : Displays the first lines of a file.
<item> tail : Displays the last lines of a file.
</list>


<sect1 id="vsfutcc">Viewing Short Files: Using the cat Command
<p>
The cat command is useful for viewing files that are less than a
screen in length. For longer files that you want to scroll back and
forth in, use less instead.
<p>
Type: cat options file.
<p>

<example>
                       The cat Command (View)                        
+-------------------------------------------------------------------+
|        Option        |        Action         |      Comments      |
|----------------------+-----------------------+--------------------|
|  * -E                |Displays line ends.    |Line ends are marked|
|  * --show-ends       |                       |with $.             |
|----------------------+-----------------------+--------------------|
|  * -b                |Displays line numbers. |                    |
|  * --number-nonblank |                       |                    |
|----------------------+-----------------------+--------------------|
|  * -T                |Displays tabs.         |Tabs are marked with|
|  * --show-tabs       |                       |^I.                 |
|----------------------+-----------------------+--------------------|
|  * -v                |Displays non-printing  |                    |
|  * --show-nonprinting|characters.            |                    |
+-------------------------------------------------------------------+
</example>


<sect1 id="vfwsutlc">Viewing Files with Scrolling: Using the less Command
<p>
The less command is the most common tool for viewing files from the
command line. In this category, it replaces cat and more , offering
more options than either.
<p>
The less command displays the designated file one screen at a time.
In addition to displaying files, less can also be used for simple
searches.
<p>
However, for most searches, you probably want to use one of the
search commands. See <ref id="sftd"> See Searching From
the Command Line.
<p>
Type: less options file .
<p>

<example>
                       The less Command (View)                       
+-------------------------------------------------------------------+
|Option|            Topic            |           Comments           |
|------+-----------------------------+------------------------------|
|-h    |Sets maximum number of lines |                              |
|number|to scroll back at one time.  |                              |
|------+-----------------------------+------------------------------|
|      |Ignores the distinction      |If this command is not used,  |
|-i    |between upper and lower case |lower case letters are        |
|      |letters when a string is     |distinguished from upper case |
|      |used.                        |ones.                         |
|------+-----------------------------+------------------------------|
|-p    |Displays file starting with  |                              |
|string|the first occurrence of the  |                              |
|      |string.                      |                              |
|------+-----------------------------+------------------------------|
|-s    |Prints multiple blank lines  |                              |
|      |as a single blanks line.     |                              |
|------+-----------------------------+------------------------------|
|-y    |Sets the maximum number of   |                              |
|number|lines to scroll forward at   |                              |
|      |one time.                    |                              |
+-------------------------------------------------------------------+
</example>


<sect1 id="vfbuttc">Viewing Files Backwards: Using the tac Command
<p>
The tac command's name comes from the fact that it was intended as
the opposite of cat . However, tac remains useful after less has
replaced cat .
<p>
Type: tac file.
<p>
Although a few options exist, they are not often used.


<sect1 id="vtsofuthc">Viewing the Start of Files: Using the head Command
<p>
head has a companion tool called tail , which views the end of files.
The options for both tools are similar, but have some important
differences.
<p>
For example, head ordinarily displays the name of the file, while 
tail has more options.
<p>
Type: head options file .
<p>

<example>
                       The head Command (View)                       
+-------------------------------------------------------------------+
|   Option   |                Action                 |   Comments   |
|------------+---------------------------------------+--------------|
|            |                                       |Units are:    |
|            |Sets the size of the display, and,     |              |
|            |optionally, the units.                 |  * b :       |
|-c number   |                                       |    Blocks.   |
|units       |If no unit is specified, the size is in|  * k :       |
|            |bytes.                                 |    Kilobyes. |
|            |                                       |  * m :       |
|            |                                       |    Megabytes.|
|------------+---------------------------------------+--------------|
|  * -n      |                                       |              |
|    number  |                                       |              |
|  * --lines |Sets the number of lines to display.   |The default is|
|    number  |                                       |10.           |
|            |                                       |              |
|            |                                       |              |
|------------+---------------------------------------+--------------|
|  * -q      |Prevents display of the file name      |              |
|  * --quiet |header.                                |              |
+-------------------------------------------------------------------+
</example>


<sect1 id="vteofuttc">Viewing the End of Files: Using the tail Command
<p>
tail has a companion tool called head , which views the start of
files. The options for both tools are similar, but have some
important differences.
<p>
For example, tail has more options, while head ordinarily displays
the name of the file.
<p>
Type: tail options file .
<p>

<example>
                       The tail Command (View)                       
+-------------------------------------------------------------------+
|  Option   |        Action         |           Comments            |
|-----------+-----------------------+-------------------------------|
|           |Sets the size of the   |                               |
|           |display, and,          |Units are:                     |
|-c number  |optionally, the units. |                               |
|unit       |                       |  * b : blocks                 |
|           |If no unit is          |  * k: Kilobyes                |
|           |specified, the size is |  * m: megabytes               |
|           |shown in bytes.        |                               |
|-----------+-----------------------+-------------------------------|
|           |                       |Press Ctrl-C to end.           |
|           |Continues to display   |                               |
|-f         |the last lines of a    |This option is especially      |
|           |file as it grows.      |useful if you have a log file  |
|           |                       |open as you try to debug.      |
|-----------+-----------------------+-------------------------------|
|  * -n     |Sets lines to display, |                               |
|    number |measured from the end  |The default is 10.             |
|  * --lines|of the file.           |                               |
|    number |                       |                               |
|-----------+-----------------------+-------------------------------|
|  * -q     |Prevents the display of|                               |
|  * --quiet|the file name header.  |                               |
|-----------+-----------------------+-------------------------------|
|           |                       |Arguments are:                 |
|-number    |Sets how much displays,|                               |
|argument   |measured from the end  |  * l: Lines.                  |
|           |of the file.           |  * b: Blocks.                 |
|           |                       |  * c: Characters.             |
|-----------+-----------------------+-------------------------------|
|           |                       |Arguments are:                 |
|+number    |Sets how much displays,|                               |
|argument   |measured from the start|  * l: Lines.                  |
|           |of the file.           |  * b: Blocks.                 |
|           |                       |  * c: Characters.             |
+-------------------------------------------------------------------+
</example>


<sect id="cfftcl">Comparing Files from the Command Line
<p>
Linux includes three tools for comparing files automatically:
<p>
<list>
<item> comm : Displays similar and different lines in two text files.
<item> diff : Displays differences between files or directories, with a
    wide variety of options.
<item> diff3 : Reports on three files, telling which ones are different.
</list>
<p>

<url id="img/Finding-1.png">
<p>
To save the results of a comparison to a file, or to print a copy,
use redirection pipes. See <ref id="riaofc">


<sect1 id="mscofutcc">Making Simple Comparisons of Files: Using the comm Command
<p>
Use the comm command for a basic comparison of text files. For more
advanced comparisons, use diff .
<p>
Type: comm options 1st_file 2nd_file .
<p>
The results are printed in three columns. From left to right, they
are:
<p>
<list>
<item> Lines unique to the first file.
<item> Lines unique to the second file.
<item> Lines common to both files.
</list>
<p>
Use the - number option to keep a column from displaying. Arguments
are 1 , 2 or 3 .
<p>
If you want to block two columns, enter them without any comma or
space between them. For example, if you want to display only lines
common to both files, enter -12 .
<p>
The comm command has no other options.


<sect1 id="mccutdc">Making Complex Comparisons: Using the diff Command
<p>
Use the diff command if you want to:
<p>
<list>
<item> Compare two directories, including their sub-directories.
<item> Show lines before and after differences.
<item> Use metacharacters.
</list>
<p>
Type: diff options 1st_ file 2nd_file .
<p>
In the results, text from the first file is marked with a lesser-than
symbol ( &lt; ), while text from the second file is marked with a
greater-than symbol ( &gt; ).
<p>

<example>
                    The diff Command (Comparing)                     
+-------------------------------------------------------------------+
|          Option           |       Action       |     Comments     |
|---------------------------+--------------------+------------------|
|                           |Ignores changes in  |                  |
|  * -b                     |the amount of empty |                  |
|                           |space.              |                  |
|---------------------------+--------------------+------------------|
|  * -B                     |Ignores blank lines.|                  |
|  * --ignore-blank-lines   |                    |                  |
|---------------------------+--------------------+------------------|
|                           |Ignores the         |If this command is|
|                           |distinction between |not used, lower   |
|-i                         |upper and lower case|case letters are  |
|                           |letters when a      |distinguished from|
|                           |string is used.     |upper case ones.  |
|---------------------------+--------------------+------------------|
|                           |When comparing      |                  |
|  * -x string              |directories,        |Metacharacters can|
|  * --exclude string       |excludes directories|be used.          |
|                           |that match the      |                  |
|                           |string.             |                  |
|---------------------------+--------------------+------------------|
|                           |When comparing      |                  |
|                           |directories,        |                  |
|  * -X file                |excludes files and  |                  |
|  * --exclude-from = file  |directories that    |                  |
|                           |match the pattern   |                  |
|                           |listed in file .    |                  |
|---------------------------+--------------------+------------------|
|                           |Displays 3 lines    |                  |
|-c                         |before or after each|                  |
|                           |result.             |                  |
|---------------------------+--------------------+------------------|
|  * -y                     |Displays results in |                  |
|  * --side-by-side         |two columns.        |                  |
|---------------------------+--------------------+------------------|
|                           |Includes            |                  |
|  * -r                     |sub-directories when|                  |
|  * --recursive            |comparing           |                  |
|                           |directories.        |                  |
|---------------------------+--------------------+------------------|
|  * -q                     |Only displays       |                  |
|  * --brief                |whether files       |                  |
|                           |differ.             |                  |
|---------------------------+--------------------+------------------|
|  * -s file                |Only displays when  |                  |
|  * --report-identical-file|files do not differ.|                  |
+-------------------------------------------------------------------+
</example>


<sect1 id="ctfutdc">Comparing Three Files: Using the diff3 Command
<p>
The diff3 command compares three files, and reports on the
differences between them. It does not give detailed information about
the differences, the way that diff does. diff3 can also be used to
merge files using a simple script (see the man pages for more
detail).
<p>
Type: diff3 options 1st_ file 2nd_file 3rd_file.
<p>
Two results may display:
<p>
<list>
<item> === All three files differ
<item> === file is different
</list>
<p>

<example>
              The diff3 Command (Comparing and Merging)              
+-------------------------------------------------------------------+
|  Option   |           Topic            |         Comments         |
|-----------+----------------------------+--------------------------|
|-a         |Compares binary files       |Binary files are treated  |
|           |                            |as text files.            |
|-----------+----------------------------+--------------------------|
|  * -m     |Displays merged differences |Output can also be        |
|  * --merge|on the screen.              |redirected to a file      |
+-------------------------------------------------------------------+
</example>

</chapt>
