# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2010-05-11 00:53+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING"

#. type: definition of entity &dochome;
#, no-wrap
msgid "/usr/share/doc"
msgstr ""

#. type: definition of entity &developers-reference;
#, no-wrap
msgid "&dochome;/developers-reference/index.en.html"
msgstr ""

#. type: definition of entity &uploading;
#, no-wrap
msgid "&dochome;/developers-reference/pkgs.html#upload"
msgstr ""

#. type: definition of entity &bughandling;
#, no-wrap
msgid "&dochome;/developers-reference/pkgs.html#bug-handling"
msgstr ""

#. type: definition of entity &debian-policy;
#, no-wrap
msgid "&dochome;/debian-policy/policy.html/index.html"
msgstr ""

#. type: definition of entity &maint-guide;
#, no-wrap
msgid "&dochome;/maint-guide/maint-guide.en.html/index.en.html"
msgstr ""

#. type: definition of entity &autotools-dev;
#, no-wrap
msgid "&dochome;/autotools-dev/README.Debian.gz"
msgstr ""

#. type: definition of entity &newmaint;
#, no-wrap
msgid "http://www.debian.org/devel/join/newmaint"
msgstr ""

#. type: definition of entity &nm-home;
#, no-wrap
msgid "http://nm.debian.org/"
msgstr ""

#. type: definition of entity &buildd-home;
#, no-wrap
msgid "http://buildd.debian.org/"
msgstr ""

#. type: definition of entity &mentors-faq;
#, no-wrap
msgid "http://people.debian.org/~mpalmer/debian-mentors_FAQ.html"
msgstr ""

#. type: definition of entity &pbuilder-home;
#, no-wrap
msgid "http://www.netfort.gr.jp/~dancer/software/pbuilder.html"
msgstr ""

#. type: definition of entity &ftp-uploadqueue;
#, no-wrap
msgid "ftp://ftp.upload.debian.org/pub/UploadQueue/"
msgstr ""

#. type: definition of entity &ftp-command;
#, no-wrap
msgid "&ftp-uploadqueue;README"
msgstr ""

#. type: definition of entity &copyright-howto;
#, no-wrap
msgid "http://lists.debian.org/debian-devel-announce/2006/03/msg00023.html"
msgstr ""

#. type: definition of entity &repackage-source;
#, no-wrap
msgid "http://bugs.debian.org/278524"
msgstr ""

#. type: definition of entity &makefile;
#, no-wrap
msgid ""
"     1  #!/usr/bin/make -f\n"
"     2  # -*- makefile -*-\n"
"     3  # Sample debian/rules that uses debhelper.\n"
"     4  # This file was originally written by Joey Hess and Craig Small.\n"
"     5  # As a special exception, when this file is copied by dh-make into "
"a\n"
"     6  # dh-make output file, you may use that output file without "
"restriction.\n"
"     7  # This special exception was added by Craig Small in version 0.37 of "
"dh-make.\n"
"     8  # Uncomment this to turn on verbose mode.\n"
"     9  #export DH_VERBOSE=1\n"
"    10  configure: configure-stamp\n"
"    11  configure-stamp:\n"
"    12          dh_testdir\n"
"    13          # Add here commands to configure the package.\n"
"    14          touch configure-stamp\n"
"    15  build: build-stamp\n"
"    16  build-stamp: configure-stamp  \n"
"    17          dh_testdir\n"
"    18          # Add here commands to compile the package.\n"
"    19          $(MAKE)\n"
"    20          #docbook-to-man debian/testpack.sgml > testpack.1\n"
"    21          touch $@\n"
"    22  clean: \n"
"    23          dh_testdir\n"
"    24          dh_testroot\n"
"    25          rm -f build-stamp configure-stamp\n"
"    26          # Add here commands to clean up after the build process.\n"
"    27          $(MAKE) clean\n"
"    28          dh_clean \n"
"    29  install: build\n"
"    30          dh_testdir\n"
"    31          dh_testroot\n"
"    32          dh_clean -k \n"
"    33          dh_installdirs\n"
"    34          # Add here commands to install the package into "
"debian/testpack.\n"
"    35          $(MAKE) DESTDIR=$(CURDIR)/debian/testpack install\n"
"    36  # Build architecture-independent files here.\n"
"    37  binary-indep: build install\n"
"    38  # We have nothing to do by default.\n"
"    39  # Build architecture-dependent files here.\n"
"    40  binary-arch: build install\n"
"    41          dh_testdir\n"
"    42          dh_testroot\n"
"    43          dh_installchangelogs \n"
"    44          dh_installdocs\n"
"    45          dh_installexamples\n"
"    46  #       dh_install\n"
"    47  #       dh_installmenu\n"
"    48  #       dh_installdebconf       \n"
"    49  #       dh_installlogrotate\n"
"    50  #       dh_installemacsen\n"
"    51  #       dh_installpam\n"
"    52  #       dh_installmime\n"
"    53  #       dh_python\n"
"    54  #       dh_installinit\n"
"    55  #       dh_installcron\n"
"    56  #       dh_installinfo\n"
"    57          dh_installman\n"
"    58          dh_link\n"
"    59          dh_strip\n"
"    60          dh_compress\n"
"    61          dh_fixperms\n"
"    62  #       dh_perl\n"
"    63  #       dh_makeshlibs\n"
"    64          dh_installdeb\n"
"    65          dh_shlibdeps\n"
"    66          dh_gencontrol\n"
"    67          dh_md5sums\n"
"    68          dh_builddeb\n"
"    69  binary: binary-indep binary-arch\n"
"    70  .PHONY: build clean binary-indep binary-arch binary install "
"configure"
msgstr ""

#. type: definition of entity &docisodate;
#, no-wrap
msgid "2010-05-10 15:53:15 UTC"
msgstr ""

#. type: definition of entity &docversion;
#, no-wrap
msgid "1.2.18"
msgstr ""

#. type: <title></title>
#: maint-guide.en.sgml:24
msgid "Debian New Maintainers' Guide"
msgstr ""

#. type: <author></author>
#: maint-guide.en.sgml:27
msgid "<name>Josip Rodin </name><email>joy-mg@debian.org</email>"
msgstr ""

#. type: <version></version>
#: maint-guide.en.sgml:33
msgid "version &docversion;, &docisodate;"
msgstr ""

#. type: <copyrightsummary></copyrightsummary>
#: maint-guide.en.sgml:36
msgid "Copyright &copy; 1998-2002 Josip Rodin."
msgstr ""

#. type: <copyrightsummary></copyrightsummary>
#: maint-guide.en.sgml:37
msgid "Copyright &copy; 2005-2010 Osamu Aoki."
msgstr ""

#. type: <copyrightsummary></copyrightsummary>
#: maint-guide.en.sgml:38
msgid "Copyright &copy; 2010 Craig Small."
msgstr ""

#. type: <copyrightsummary></copyrightsummary>
#: maint-guide.en.sgml:39
msgid "Copyright &copy; 2010 Raphael Hertzog."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:49
msgid ""
"This document may be used under the terms the GNU General Public License "
"version 2 or higher."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:51
msgid "This document was made using with these two documents as examples:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:54
msgid ""
"Making a Debian Package (AKA the Debmake Manual), copyright &copy; 1997 "
"Jaldhar Vyas."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:56
msgid ""
"The New-Maintainer's Debian Packaging Howto, copyright &copy; 1997 Will "
"Lowe."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:64
msgid "Getting started The Right Way"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:71
msgid ""
"This document tries to describe building of a Debian package to the common "
"Debian user, and the prospectus developer. It uses pretty common language, "
"and it's well covered with working examples. There is an old Roman saying, "
"<em>Longum iter est per preaecepta, breve et efficax per exempla!</em> (It's "
"a long way by the rules, but short and efficient with examples!)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:77
msgid ""
"This document has been updated for the Debian <tt>squeeze</tt> "
"release. <footnote><p>The document assumes you are using the "
"<tt>squeeze</tt> system. If you need to follow this text in the "
"<tt>lenny</tt> system, you must install backported <package>dpkg</package> "
"and <package>debhelper</package> packages, at least.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:86
msgid ""
"One of the things that makes Debian such a top-notch Linux distribution is "
"its package system. While there is a vast quantity of software already in "
"the Debian format, sometimes you need to install software that isn't. You "
"may be wondering how you can make your own packages and perhaps you think it "
"is a very difficult task. Well, if you are a real novice on Linux, it is "
"hard, but if you were rookie, you wouldn't be reading this doc now. :-) You "
"do need to know a little about Unix programming but you certainly don't need "
"to be a wizard."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:90
msgid ""
"One thing is certain, though: to properly create and maintain Debian "
"packages you need many hours. Make no mistake, for our system to work the "
"maintainers need to be both technically competent and diligent."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:94
msgid ""
"This document will explain every little (at first maybe irrelevant) step, "
"and help you create that first package, and to gain some experience in "
"building next releases of that and maybe other packages later on."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:96
msgid "If you need some help on packaging, please read <ref id=\"helpme\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:102
msgid ""
"Newer versions of this document should always be available online at <url "
"id=\"http://www.debian.org/doc/maint-guide/\" "
"name=\"http://www.debian.org/doc/maint-guide/\"> and in the "
"<package>maint-guide</package> package."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:104
msgid "Programs you need for development"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:109
msgid ""
"Before you start anything, you should make sure that you have properly "
"installed some additional packages needed for development. Note that the "
"list doesn't contain any packages marked <tt>essential</tt> or "
"<tt>required</tt> - we expect that you have those installed already."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:114
msgid ""
"The following packages come with the standard Debian installation, so you "
"probably have them already (along with any additional packages they depend "
"on). Still, you should check it with \"<tt>aptitude show "
"<var>package</var></tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:119
msgid ""
"The most important package to install on your development system is the "
"<package>build-essential</package> package. Once you try to install it, it "
"will <em>pull in</em> other packages required to have a basic build "
"environment."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:124
msgid ""
"For some types of packages, that is all you will require, however there is "
"another set of packages that while not essential for all package builds are "
"useful to have install or may be required by your package:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:128
msgid ""
"<package>file</package> - this handy program can determine what type a file "
"is. (see <manref section=\"1\" name=\"file\">)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:132
msgid ""
"<package>patch</package> - this very useful utility will take a file "
"containing a difference listing (produced by the <prgn>diff</prgn> program) "
"and apply it to the original file, producing a patched version. (see <manref "
"section=\"1\" name=\"patch\">)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:136
msgid ""
"<package>perl</package> - Perl is one of the most used interpreted scripting "
"languages on today's Unix-like systems, often referred to as \"Unix's Swiss "
"Army Chainsaw\". (see <manref section=\"1\" name=\"perl\">)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:140
msgid ""
"<package>python</package> - Python is another of the most used interpreted "
"scripting languages on the Debian system that combines remarkable power with "
"very clear syntax. (see <manref section=\"1\" name=\"python\">)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:146
msgid ""
"<package>autoconf</package>, <package>automake</package> and "
"<package>autotools-dev</package> - many newer programs use configure scripts "
"and <file>Makefile</file> files preprocessed with help of programs like "
"these. (see \"<tt>info autoconf</tt>\", \"<tt>info automake</tt>\"). The "
"<package>autotools-dev</package> keeps up-to-date versions of certain auto "
"files and has documentation about the best way to use those files."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:158
msgid ""
"<package>dh-make</package> and <package>debhelper</package> - "
"<package>dh-make</package> is necessary to create the skeleton of our "
"example package, and it will use some of the <package>debhelper</package> "
"tools for creating packages. They are not essential for creation of "
"packages, but are <em>highly</em> recommended for new maintainers. It makes "
"the whole process very much easier to start, and control afterwards. (see "
"<manref section=\"1\" name=\"dh_make\">, <manref section=\"1\" "
"name=\"debhelper\">, <file>/usr/share/doc/debhelper/README</file>) "
"<footnote><p>There are few similar but specialized packages such as "
"<package>dh-make-perl</package>, <package>dh-make-php</package>, "
"etc. </p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:163
msgid ""
"<package>devscripts</package> - this package contains some nice and useful "
"scripts that can be helpful to the maintainers, but they are also not "
"necessary for building packages. Packages recommended and suggested by this "
"package are worth looking into. (see "
"<file>/usr/share/doc/devscripts/README.gz</file>)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:167
msgid ""
"<package>fakeroot</package> - this utility lets you emulate being root which "
"is necessary for some parts of the build process. (see <manref section=\"1\" "
"name=\"fakeroot\">)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:172
msgid ""
"<package>gnupg</package> - a tool that enables you to digitally "
"<em>sign</em> packages. This is especially important if you want to "
"distribute it to other people, and you will certainly be doing that when "
"your work gets included in the Debian distribution. (see <manref "
"section=\"1\" name=\"gpg\">)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:175
msgid ""
"<package>gfortran</package> - the GNU Fortran 95 compiler, necessary if your "
"program is written in Fortran. (see <manref section=\"1\" "
"name=\"gfortran\">)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:180
msgid ""
"<package>gpc</package> - the GNU Pascal compiler, necessary if your program "
"is written in Pascal. Worthy of note here is <package>fp-compiler</package>, "
"the Free Pascal Compiler, which is also good at this task. (see <manref "
"section=\"1\" name=\"gpc\">, <manref section=\"1\" name=\"ppc386\">)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:185
msgid ""
"<package>xutils-dev</package> - some programs, usually those made for X11, "
"also use these programs to generate <file>Makefile</file> files from sets of "
"macro functions. (see <manref section=\"1\" name=\"imake\">, <manref "
"section=\"1\" name=\"xmkmf\">)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:190
msgid ""
"<package>lintian</package> - this is the Debian package checker that can let "
"you know of any common mistakes after you build the package, and explains "
"the errors found. (see <manref section=\"1\" name=\"lintian\">, "
"<file>/usr/share/doc/lintian/lintian.html/index.html</file>)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:196
msgid ""
"<package>pbuilder</package> - this package contains programs which are used "
"for creating and maintaining <prgn>chroot</prgn> environment. Building "
"Debian package in this <prgn>chroot</prgn> environment verifies the proper "
"build dependency and avoid FTBFS (Fails To Build From Source) bugs. (see "
"<manref section=\"8\" name=\"pbuilder\"> and <manref section=\"1\" "
"name=\"pdebuild\">)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:200
msgid ""
"<package>patchutils</package> - this package contains some utilities to work "
"with patches such as the <prgn>lsdiff</prgn> , <prgn>interdiff</prgn> and "
"<prgn>filterdiff</prgn> commands."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:206
msgid ""
"<package>quilt</package> - this package helps you to manage a series of "
"patches by keeping track of the changes each of them makes. They are "
"logically organized as a stack, and you can apply (=push), un-apply (=pop), "
"refresh them easily by traveling into the stack. (see <manref section=\"1\" "
"name=\"quilt\">, <file>/usr/share/doc/quilt/README.Debian</file>)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:212
msgid ""
"<package>git-core</package> - this package provides popular version control "
"system designed to handle very large projects with speed and efficiency; it "
"is used for many high profile open source projects, most notably the Linux "
"kernel. (see <manref section=\"1\" name=\"git\">, "
"<file>/usr/share/doc/git-doc/index.html</file>)"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:217
msgid ""
"The following is the <em>very important</em> documentation which you should "
"read along with this document:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:227
msgid ""
"<package>debian-policy</package> - the <url "
"id=\"http://www.debian.org/doc/devel-manuals#policy\" name=\"Debian Policy "
"Manual\"> includes explanations of the structure and contents of the Debian "
"archive, several OS design issues, the Filesystem Hierarchy Standard (which "
"says where each file and directory should be) etc. For you, the most "
"important thing is that it describes requirements that each package must "
"satisfy to be included in the distribution (see "
"<file>&debian-policy;</file>)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:235
msgid ""
"<package>developers-reference</package> - the <url "
"id=\"http://www.debian.org/doc/devel-manuals#devref\" name=\"Debian "
"Developer's Reference\"> describes all matters not specifically about the "
"technical details of packaging, like the structure of the archive, how to "
"rename, orphan, pick up packages, how to do NMUs, how to manage bugs, best "
"packaging practices, when and where to upload etc. (see "
"<file>&developers-reference;</file>)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:244
msgid ""
"<package>gnu-standards</package> - this package contains two pieces of "
"documentation from the GNU project: <url "
"id=\"http://www.gnu.org/prep/standards/html_node/index.html\" name=\"GNU "
"Coding Standards\">, and <url "
"id=\"http://www.gnu.org/prep/maintain/html_node/index.html\" "
"name=\"Information for Maintainers of GNU Software\">. Although Debian does "
"not require these to be followed, these are still helpful as guidelines and "
"common sense. (see <file>/usr/share/doc/gnu-standards/standards.html</file> "
"and <file>/usr/share/doc/gnu-standards/maintain.html</file>)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:250
msgid ""
"If this document contradicts with what the Debian Policy Manual and Debian "
"Developer's Reference describes, they are correct. Please file a bug report "
"on the <package>maint-guide</package> package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:256
msgid ""
"The short descriptions that are given above only serve to introduce you to "
"what each package does. Before continuing please thoroughly read the "
"documentation of each program, at least, for the standard usage. It may seem "
"like heavy going now, but later on you'll be <em>very</em> glad you read it."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:258
msgid "Basic terminology"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:260
msgid "There are two types of packages."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:269
msgid ""
"<strong>source package</strong>: A source package is a set of files which "
"contain code and data which you can compile and process into execution "
"programs and formatted documents. It usually comes as a combination of "
"<file>*.orig.tar.gz</file>, <file>*.debian.tar.gz</file> (or "
"<file>*.diff.gz</file>), and <file>*.dsc</file>. Some other archive and "
"compression methods may be used, too."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:273
msgid ""
"<strong>binary package</strong>: A binary package contains execution "
"programs and formatted documents. It usually comes as <file>*.deb</file> for "
"the normal Debian system and as <file>*.udeb</file> for the Debian "
"Installer."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:278
msgid ""
"Don't mix terms like source of the program and the source package of the "
"program!"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:280
msgid "There are several role names used around Debian."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:285
msgid "<strong>upstream author</strong>: The person who made the original program."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:288
msgid ""
"<strong>upstream maintainer</strong>: The person who currently maintains the "
"program."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:291
msgid ""
"<strong>maintainer</strong>: The person who makes Debian package of the "
"program."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:295
msgid ""
"<strong>sponsor</strong>: The person who helps maintainers to upload "
"packages to the official Debian Package Archive after checking their "
"contents."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:298
msgid ""
"<strong>mentor</strong>: The person who helps novice maintainers on "
"packaging etc."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:301
msgid ""
"<strong>Debian Developer</strong> (DD): The person who is a member of "
"Debian. He has full upload right to the official Debian Package Archive."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:304
msgid ""
"<strong>Debian Maintainer</strong> (DM): The person who has limited upload "
"right to the official Debian Package Archive."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:308
msgid "There are several version names used around Debian."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:311
msgid ""
"<strong>upstream source version</strong>: The upstream source version is "
"referred as <tt><var>version</var></tt>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:313
msgid ""
"<strong>Debian revision</strong>: The revision by Debian on package is "
"referred as <tt><var>revision</var></tt>."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:314
msgid ""
"<strong>Debian package version</strong>: The Debian package version is "
"referred as the following."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:316
msgid ""
"<tt><var>version</var></tt> for the native Debian binary package and for the "
"Debian source package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:317
msgid ""
"<tt><var>version</var>-<var>revision</var></tt> for the non-native Debian "
"binary package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:323
msgid "Please read the other manuals if you need more details on terminology."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:325
msgid "Official Debian Developer"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:332
msgid ""
"You can not become an official <strong>Debian Developer</strong> (DD) over "
"night because it takes more than technical skill. Please do not be "
"discouraged by this. If it is useful to others, you can still upload your "
"package either as a <strong>maintainer</strong> through a "
"<strong>sponsor</strong> or as a <strong>Debian Maintainer</strong>. See "
"<url id=\"&newmaint;\" name=\"Debian New Maintainers\"> for more."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:337
msgid ""
"Please note that you do not need to create any new package to become an "
"official Debian Developer. Contributing to the existing packages can provide "
"a path to become an official Debian Developer too. There are many packages "
"waiting for good maintainers (see <ref id=\"choose\">)."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:339
msgid "Where to ask for help"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:348
msgid ""
"Before you decide to ask your question in some public place, please just "
"RTFM.  That includes documentation in <file>/usr/share/doc/dpkg</file>, "
"<file>/usr/share/doc/debian</file>, <file>&autotools-dev;</file>, "
"<file>/usr/share/doc/<var>package</var>/*</file> files and the "
"<prgn>man</prgn>/<prgn>info</prgn> pages for all the programs mentioned in "
"this document. See all the information at <url id=\"&nm-home;\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:352
msgid ""
"Making a small test package is good way to learn details of "
"packaging. Inspecting existing well maintained packages is the best way to "
"learn how other people make packages."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:358
msgid ""
"If you still have questions about packaging that you couldn't find answers "
"to in the available documentation and web resources, you can ask them on the "
"Debian Mentors' mailing list at <url "
"id=\"http://lists.debian.org/debian-mentors/\" "
"name=\"debian-mentors@lists.debian.org\">. The more experienced Debian "
"developers will gladly help you, but do read at least some of the "
"documentation before asking a question!"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:361
msgid ""
"See <url id=\"http://lists.debian.org/debian-mentors/\"> for more "
"information about this mailing list."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:368
msgid ""
"When you receive a bug report (yes, actual bug reports!), you will know that "
"it is time for you to dig into the <url id=\"http://www.debian.org/Bugs/\" "
"name=\"Debian Bug Tracking System\"> and read the documentation there, to be "
"able to deal with the reports efficiently. I highly recommend reading the "
"<url "
"id=\"http://www.debian.org/doc/manuals/developers-reference/pkgs.html#bug-handling\" "
"name=\"Developer's Reference, 5.8. 'Handling bugs'\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:373
msgid ""
"If you still have questions, ask on the Debian Developers' mailing list at "
"<url id=\"http://lists.debian.org/debian-devel/\" "
"name=\"debian-devel@lists.debian.org\">. See <url "
"id=\"http://lists.debian.org/debian-devel/\"> for more information about "
"this mailing list."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:378
msgid ""
"Even if it all worked well, it's time to start praying. Why? Because in just "
"a few hours (or days) users from all around the world will start to use your "
"package, and if you made some critical error you'll get mailbombed by "
"numerous angry Debian users... Just kidding. :-)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:383
msgid ""
"Relax and be ready for bug reports, because there is a lot more work to be "
"done before your package will be fully in line with Debian policies and its "
"best practice guidelines (once again, read the <em>real documentation</em> "
"for details). Good luck!"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:385
msgid "First steps"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:387
msgid "Let's try to make your own package."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:389
msgid "Choose your program"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:393
msgid ""
"You have probably chosen the package you want to create. The first thing you "
"need to do is check if the package is in the distribution archive already by "
"using <prgn>aptitude</prgn>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:397
msgid ""
"You can also check package information through <url "
"id=\"http://www.debian.org/distrib/packages\" name=\"package search page\"> "
"and <url id=\"http://packages.qa.debian.org/common/index.html\" "
"name=\"Debian Package Tracking System\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:402
msgid ""
"If the package already exists, well, install it! :-) If it happens to be "
"orphaned -- if its maintainer is set to \"Debian QA Group\", you may be able "
"to pick it up."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:406
msgid ""
"Then you should consult the Debian web site at <url "
"id=\"http://www.debian.org/devel/wnpp/\" name=\"Work-Needing and Prospective "
"Packages\"> and <url id=\"http://wnpp.debian.net/\" name=\"the latest "
"adoption/orphan status of the package\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:414
msgid ""
"If you are able to adopt the package, get the sources (with something like "
"\"<tt>apt-get source <var>packagename</var></tt>\") and examine them. This "
"document unfortunately doesn't include comprehensive information about "
"adopting packages. Thankfully you shouldn't have a hard time figuring out "
"how the package works since someone has already done the initial set up for "
"you. Keep reading, though, a lot of the advice below will still be "
"applicable for your case."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:417
msgid ""
"If the package is new, and you decide you'd like to see it in Debian, "
"proceed as follows:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:420
msgid ""
"First, you must know that program works, and have tried it for some time to "
"confirm its usefulness."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:427
msgid ""
"You must check if no one else is working on the package already at <url "
"id=\"http://www.de.debian.org/devel/wnpp/being_packaged\" name=\"the list of "
"packages being worked on\">. If no one else is working on it, file an ITP "
"(Intent To Package) bug report to the <package>wnpp</package> pseudo-package "
"using <prgn>reportbug</prgn>. If someone's already on it, contact them if "
"you feel you need to. If not - find another interesting program that nobody "
"maintains."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:431
msgid "That program <strong>must have a license</strong>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:437
msgid ""
"For the <tt>main</tt> section, it <strong>must be compliant to all the "
"Debian Free Software Guidelines(DFSG)</strong> (see <url "
"id=\"http://www.debian.org/social_contract#guidelines\">) and <strong>That "
"program must not require a package outside of <tt>main</tt></strong> for "
"compilation or execution as required by the Debian Policy. This is desired "
"case."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:440
msgid ""
"For the <tt>contrib</tt> section, it must be compliant to all the DSFG but "
"it may require a package outside of main for compilation or execution."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:443
msgid ""
"For the <tt>non-free</tt> section, it may not be compliant to some of the "
"DSFG but it <strong>must be distributable</strong>."
msgstr ""

#. type: </list></p>
#: maint-guide.en.sgml:447
msgid ""
"If you are unsure about where it should go, post the license text on <url "
"id=\"http://lists.debian.org/debian-legal/\" "
"name=\"debian-legal@lists.debian.org\"> and ask for advice."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:451
msgid ""
"That program certainly should <strong>not</strong> run setuid root, or even "
"better - it shouldn't need to be setuid or setgid to anything."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:454
msgid ""
"That program should not be a daemon, or something that goes in "
"<file>*/sbin</file> directories, or open a port as root."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:457
msgid ""
"That program should result in binary executable form, libraries are harder "
"to handle."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:460
msgid ""
"That program should be well documented and its code needs to be "
"understandable (i.e. not obfuscated)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:465
msgid ""
"You should contact program's author(s) to check if they agree with packaging "
"it and amicable to Debian. It is important to be able to consult with "
"author(s) about the program in case of any program specific problems, so "
"don't try to package unmaintained pieces of software."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:474
msgid ""
"Of course, these things are just safety measures, and intended to save you "
"from raging users if you do something wrong in some setuid daemon... When "
"you gain some more experience in packaging, you'll be able to do such "
"packages, but even the experienced developers consult the <url "
"id=\"http://lists.debian.org/debian-mentors/\" "
"name=\"debian-mentors@lists.debian.org\"> mailing list when they are in "
"doubt. And people there will gladly help."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:476
msgid ""
"For more help about these, check in <url "
"id=\"http://www.debian.org/doc/devel-manuals#devref\" name=\"Debian "
"Developer's Reference\">."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:478
msgid "Get the program, and try it out"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:487
msgid ""
"So the first thing to do is to find and download the original source code. I "
"presume that you already have the source file that you picked up at the "
"author's homepage. Sources for free Unix programs usually come in "
"<prgn>tar</prgn>+<prgn>gzip</prgn> format with extension "
"<file>.tar.gz</file>, or <prgn>tar</prgn>+<prgn>bzip2</prgn> format with "
"extension <file>.tar.bz2</file>. These usually contain the subdirectory "
"called <file><var>programname</var>-<var>version</var></file> in them and "
"all the sources under it."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:493
msgid ""
"If the latest version of such sources are available through VCS such as Git, "
"Subversion, or CVS repository, you need to get it with \"<tt>git "
"clone</tt>\", \"<tt>cvs co</tt>\", or \"<tt>svn co</tt>\" and repack it into "
"<prgn>tar</prgn>+<prgn>gzip</prgn> format by yourself using the "
"\"<tt>--exclude-vcs</tt>\" option."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:499
msgid ""
"If your program's source comes as some other sort of archive (for instance, "
"the filename ends in <file>.Z</file> or <file>.zip</file><footnote><p>You "
"can identify the archive format using the <prgn>file</prgn> command when the "
"file extension is not enough.</p></footnote>), unpack it with appropriate "
"tools and repack it, too."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:503
msgid ""
"As an example, I'll use a program called <prgn>gentoo</prgn>, an X GTK+ file "
"manager.<footnote><p>This program is already packaged. Current version "
"0.15.3 has changed substantially from the version 0.9.12 in the following "
"examples.</p></footnote>"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:512
msgid ""
"Create a subdirectory under your home directory named <file>debian</file> or "
"<file>deb</file> or anything you find appropriate (e.g. just "
"<file>~/gentoo</file> would do fine in this case). Place the downloaded "
"archive in it, and uncompress it (with \"<tt>tar xzf "
"gentoo-0.9.12.tar.gz</tt>\"). Make sure there are no errors, even some "
"<em>irrelevant</em> ones, because there will most probably be problems "
"unpacking on other people's systems, whose unpacking tools may or may not "
"ignore those anomalies. On your console screen, you should see the "
"following."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:519
#, no-wrap
msgid ""
"$ mkdir ~/gentoo ; cd ~/gentoo\n"
"$ wget http://<var>www.example.org</var>/gentoo-0.9.12.tar.gz\n"
"$ tar xvzf gentoo-0.9.12.tar.gz\n"
"$ ls -F\n"
"gentoo-0.9.12/\n"
"gentoo-0.9.12.tar.gz"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:529
msgid ""
"Now you have another subdirectory, called <file>gentoo-0.9.12</file>. Change "
"to that directory and <em>thoroughly</em> read the provided "
"documentation. Usually there are files named <file>README*</file>, "
"<file>INSTALL*</file>, <file>*.lsm</file> or <file>*.html</file>. You must "
"find instructions on how to correctly compile and install the program (most "
"probably they'll assume you want to install to <file>/usr/local/bin</file> "
"directory; you won't be doing that, but more on that later in <ref "
"id=\"destdir\">)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:537
msgid ""
"The process varies from program to program, but a lot of modern programs "
"come with a <prgn>./configure</prgn> script that configures the source under "
"your system and makes sure that your system is in condition to compile "
"it. After configuring with <prgn>./configure</prgn>, programs are usually "
"compiled with \"<tt>make</tt>\". Some of them support \"<tt>make "
"check</tt>\", to run included self-checks. Installation in destination "
"directories is usually done with \"<tt>make install</tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:540
msgid ""
"Now try to compile and run your program, to make sure it works properly and "
"doesn't break something else while it's installing or running."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:544
msgid ""
"Also, you can usually run \"<tt>make clean</tt>\" (or better \"<tt>make "
"distclean</tt>\") to clean up the build directory. Sometimes there's even a "
"\"<tt>make uninstall</tt>\" which can be used to remove all the installed "
"files."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:546
msgid "Package name and version"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:549
msgid ""
"You should start packaging with a completely clean (pristine) source "
"directory, or simply with freshly unpacked sources."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:553
msgid ""
"For the package to be built correctly, you must make the program's original "
"name lowercase (if it isn't already), and you should move the source "
"directory to <file><var>packagename</var>-<var>version</var></file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:558
msgid ""
"If the program name consists of more than one word, contract them to one "
"word, or make an abbreviation. For example, program \"John's little editor "
"for X\" package would be named <package>johnledx</package>, or "
"<package>jle4x</package>, or whatever you decide, as long as it's under some "
"reasonable limit, e.g. 20 characters."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:569
msgid ""
"Also check for the exact version of the program (to be included in the "
"package version). If that piece of software is not numbered with versions "
"like <tt>X.Y.Z</tt>, but with some kind of date, feel free to use that date "
"as the version number, as long as newer version numbers will look "
"larger. While it is best to use the same version number as what upstream "
"uses, if it is in the format of <tt>09Oct23</tt> you may need to convert it "
"to <tt>YYYYMMDD</tt> format, which would be <tt>20091023</tt>, to ensure "
"proper order for upgrade with the <prgn>dpkg</prgn> "
"program.<footnote><p>Version string can be compared by \"<tt>dpkg "
"--compare-versions <var>ver1</var> <var>op</var> <var>ver2</var></tt>\". See "
"<manref section=\"1\" name=\"dpkg\"> manpage.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:573
msgid ""
"Some programs won't be numbered at all, in which case you should contact the "
"upstream maintainer to see if they've got some other revision-tracking "
"method."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:575
msgid "Initial <em>debianization</em>"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:580
msgid ""
"Let's set up the Bash shell environment variable <tt>$DEBEMAIL</tt> and "
"<tt>$DEBFULLNAME</tt> so many Debian maintenance tools recognize your name "
"and email address to use for packages as follows."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:585
#, no-wrap
msgid ""
"$ cat &gt;&gt;~/.bashrc &lt;&lt;EOF\n"
"DEBEMAIL=your.email.address@example.org\n"
"DEBFULLNAME=\"Firstname Lastname\"\n"
"EOF"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:589
msgid ""
"Let's make initial <em>debianization</em> by issuing the "
"<prgn>dh_make</prgn> command as follows."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:593
#, no-wrap
msgid ""
"$ . ~/.bashrc\n"
"$ cd ~/gentoo/gentoo-0.9.12\n"
"$ dh_make -f ../gentoo-0.9.12.tar.gz"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:604
msgid ""
"Of course, replace the filename with the name of your original source "
"archive. <footnote><p>If the upstream source provides the "
"<file>debian</file> directory and its contents, run the <prgn>dh_make</prgn> "
"command with the <tt>--addmissing</tt> option, instead. The new source "
"<tt>3.0 (quilt)</tt> format is quite robust not to break even for these "
"packages. You may need to update contents provided by the upstream for your "
"Debian package.</p></footnote> See <manref section=\"1\" name=\"dh_make\"> "
"for details."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:620
msgid ""
"Some information will come up. It will ask you what sort of package you want "
"to create. Gentoo is a single binary package - it creates only one binary, "
"and thus one <file>.deb</file> file - so we will select the first option, "
"with the \"<tt>s</tt>\" key, check the information on the screen and confirm "
"by pressing \"<tt><var>ENTER</var></tt>\". <footnote><p>There are few "
"choices here: \"<tt>s</tt>\" for \"Single binary\", \"<tt>i</tt>\" for "
"\"Arch-Independent\", \"<tt>m</tt>\" for \"Multiple binary\", \"<tt>l</tt>\" "
"for \"Library\", \"<tt>k</tt>\" for \"Kernel module\", \"<tt>b</tt>\" for "
"\"<package>cdbs</package>\", \"<tt>--kpatch</tt>\" for \"Kernel "
"patch\". This document focuses on the use of the "
"<package>debhelper</package> package with the <prgn>dh</prgn> command. This "
"document focuses on the use of the new <prgn>dh</prgn> command for \"Single "
"binary\" and touches on it for \"Arch-Independent\" and \"Multiple "
"binary\". The <package>cdbs</package> package offers alternative package "
"script infrastructure to the <prgn>dh</prgn> command and outside of the "
"scope of this document.</p></footnote>"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:626
msgid ""
"After this execution of <prgn>dh_make</prgn>, a copy of the upstream tarball "
"is created as <file>gentoo_0.9.12.orig.tar.gz</file> in the parent directory "
"to accommodate the creation of the non-native Debian source package with the "
"<file>debian.tar.gz</file> later."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:631
#, no-wrap
msgid ""
"$ cd ~/gentoo ; ls -F\n"
"gentoo-0.9.12/\n"
"gentoo-0.9.12.tar.gz\n"
"gentoo_0.9.12.orig.tar.gz"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:633
msgid ""
"Please note 2 key features in this <file>gentoo_0.9.12.orig.tar.gz</file> "
"file name:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:635
msgid "Package name and version are separated by the \"<tt>_</tt>\" (underscore)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:636
msgid "There is the <file>.orig</file> before the <file>.tar.gz</file> ."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:647
msgid ""
"You should also notice that many template files are created in the source "
"under the <file>debian</file> directory. These will be explained in <ref "
"id=\"dreq\"> and <ref id=\"dother\">. You should also understand that the "
"packaging is not automatic process. You need to modify the upstream source "
"for Debian as <ref id=\"modify\">. After all these, you need to build Debian "
"packages under the proper method as <ref id=\"build\">, check them as <ref "
"id=\"checkit\">, and upload them as <ref id=\"upload\">. I will explain all "
"these steps."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:649
msgid ""
"Once again, as a new maintainer you are discouraged from creating "
"complicated packages, e.g.,"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:651
msgid "multiple binary packages,"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:652
msgid "library packages,"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:653
msgid "kernel module packages,"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:654
msgid "kernel patch packages,"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:656
msgid ""
"the source file format being neither in <file>tar.gz</file> nor "
"<file>tar.bz2</file>, or"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:657
msgid "the source tarball containing undistributable contents."
msgstr ""

#. type: </list></p>
#: maint-guide.en.sgml:661
msgid ""
"It's not too hard, but it does require a bit more knowledge, so we won't "
"describe all of it here."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:666
msgid ""
"If you accidentally erased some template files while working on them, you "
"can recover them by running <prgn>dh_make</prgn> with the "
"<tt>--addmissing</tt> option again in an already <em>debianized</em> "
"directory."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:670
msgid ""
"Updating an existing package may get complicated since it may be using older "
"techniques. Please stick with fresh packaging cases for now to learn "
"basics. I will come back to explain it later in <ref id=\"update\">."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:672
msgid "Modifying the source"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:676
msgid ""
"Please note that there isn't space here to go into <em>all</em> the details "
"of fixing upstream sources, but here are some basic steps and problems "
"people often run across."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:678
msgid "Set up <prgn>quilt</prgn>"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:686
msgid ""
"The <prgn>quilt</prgn> program offers the basic method to record "
"modification to the source for the Debian packaging. Since slightly "
"different default is desirable for Debian packaging, let's set up "
"<file>~/.quilrc</file> as follows. <footnote><p>You can disable this "
"configuration by starting the <prgn>quilt</prgn> command as \"<tt>quilt "
"--quiltrc /dev/null ...</tt>\". </p></footnote>"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:701
#, no-wrap
msgid ""
"$ cat &gt;&gt;~/.quiltrc &lt;&lt;EOF\n"
"d=. ; while [ ! -d \"$d/debian\" -a `readlink -e $d` != / ]; do d=\"$d/..\"; "
"done\n"
"if [ -d \"$d/debian\" ] && [ -z \"$QUILT_PATCHES\" ]; then\n"
"    # Debian packaging case and unset $QUILT_PATCHES\n"
"    QUILT_PATCHES=debian/patches\n"
"    QUILT_PATCH_OPTS=\"--unified-reject-files\"\n"
"    QUILT_DIFF_ARGS=\"-p ab --no-timestamps --no-index --color=auto\"\n"
"    QUILT_REFRESH_ARGS=\"-p ab --no-timestamps --no-index\"\n"
"    QUILT_COLORS=\"diff_hdr=1;32:diff_add=1;34:diff_rem=1;31:\\\n"
"diff_hunk=1;33:diff_ctx=35:diff_cctx=33\"\n"
"    if ! [ -d $d/debian/patches ]; then mkdir $d/debian/patches; fi\n"
"fi\n"
"EOF"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:705
msgid ""
"See <manref section=\"1\" name=\"quilt\"> and "
"<file>/usr/share/doc/quilt/quilt.html</file> for how to use "
"<prgn>quilt</prgn>."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:707
msgid "Fixing upstream bug"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:712
msgid ""
"Let's assume you find an error in the upstream <file>Makefile</file> file as "
"follows where \"<tt>install: gentoo</tt>\" should have been \"<tt>install: "
"gentoo-target</tt>\"."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:717
#, no-wrap
msgid ""
"install: gentoo\n"
"        install ./gentoo $(BIN)\n"
"        install icons/* $(ICONS)\n"
"        install gentoorc-example $(HOME)/.gentoorc"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:725
msgid ""
"Let's fix this and record this with the <prgn>quilt</prgn> command as "
"<file>fix-gentoo-target.patch</file>. <footnote><p>The "
"<file>debian/patches</file> directory should exist now if you run "
"<prgn>dh_make</prgn> as described before. This example operation creates it "
"just in case you are updating the existing package.</p></footnote>"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:729
#, no-wrap
msgid ""
"$ mkdir debian/patches\n"
"$ quilt new fix-gentoo-target.patch\n"
"$ quilt add Makefile"
msgstr ""

#. type: </example><example>
#: maint-guide.en.sgml:733
msgid "You change the <file>Makefile</file> file as follows."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:738 maint-guide.en.sgml:906
#, no-wrap
msgid ""
"install: gentoo-target\n"
"        install ./gentoo $(BIN)\n"
"        install icons/* $(ICONS)\n"
"        install gentoorc-example $(HOME)/.gentoorc"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:742
msgid ""
"Ask quilt to refresh the patch to create "
"<file>debian/patches/fix-gentoo-target.patch</file> and add its description."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:746 maint-guide.en.sgml:946
#, no-wrap
msgid ""
"$ quilt refresh\n"
"$ quilt header -e\n"
"... describe patch"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:749
msgid "Installation of files to the destination"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:757
msgid ""
"Normally, programs install themselves in the <file>/usr/local</file> "
"subdirectory. Since it is reserved for system administrator's (or user's) "
"private use, Debian packages must not use that directory but should use "
"system directories such as the <file>/usr/bin</file> subdirectory following "
"the Filesystem Hierarchy Standard (<url "
"id=\"http://www.debian.org/doc/packaging-manuals/fhs/fhs-2.3.html\" "
"name=\"FHS\">, <file>/usr/share/doc/debian-policy/fhs/fhs-2.3.html</file>)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:764
msgid ""
"Normally, <manref section=\"1\" name=\"make\"> is used to automate building "
"the program and the execution of \"<tt>make install</tt>\" installs programs "
"directly to the desired destination by the <tt>install</tt> target of the "
"<file>Makefile</file> file. In order for Debian to provide binary packages, "
"the build system installs programs to the file tree image created under a "
"temporary directory instead to the actual destination."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:770
msgid ""
"These 2 differences between (1) the normal program installation and (2) the "
"Debian packaging can be transparently addressed by the "
"<package>debhelper</package> package through the "
"<prgn>dh_auto_configure</prgn> and <prgn>dh_auto_install</prgn> commands if "
"the following conditions are met."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:774
msgid ""
"The <file>Makefile</file> file follows the GNU conventions to support "
"<tt>$(DESTDIR)</tt> variable "
"(<file>/usr/share/doc/gnu-standards/standards.html#Makefile-Conventions</file>)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:775
msgid "The source follows the Filesystem Hierarchy Standard (FHS)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:783
msgid ""
"Programs that use GNU <prgn>autoconf</prgn> <em>automatically</em> follow "
"the GNU conventions and their packaging is almost <em>automatic</em>. With "
"this and other heuristics, the <package>debhelper</package> package "
"estimates that it works for about 90% of packages without making any "
"intrusive changes to their build system. So the packaging is not as "
"complicated as it may seem."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:789
msgid ""
"If you need to make changes in the <file>Makefile</file> file, you should "
"make sure to support these <tt>$(DESTDIR)</tt> variable. The "
"<tt>$(DESTDIR)</tt> variable is unset in it and is prepended to each file "
"path used for the program installation. The packaging script will set "
"<tt>$(DESTDIR)</tt> to the temporary directory."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:804
msgid ""
"The temporary directory used by the <prgn>dh_auto_install</prgn> command is "
"chosen as <file>debian/<var>package</var></file> for single binary "
"packages. <footnote><p>For multiple binary packages, the "
"<prgn>dh_auto_install</prgn> command uses <file>debian/tmp</file> as the "
"temporary directory while the <prgn>dh_install</prgn> command with the help "
"of <file>debian/<var>package-1</var>.install</file> and "
"<file>debian/<var>package-2</var>.install</file> files will split contents "
"of <file>debian/tmp</file> into <file>debian/<var>package-1</var></file> and "
"<file>debian/<var>package-2</var></file> temporary directories to create "
"multiple binary <file>*.deb</file> packages.</p></footnote> Everything that "
"is contained in the temporary directory will be installed on a user's system "
"when they install your package, the only difference is that "
"<prgn>dpkg</prgn> will be installing the files in the root directory."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:812
msgid ""
"Bear in mind that even though your program installs in "
"<file>debian/<var>package</var></file>, it still needs to behave correctly "
"when placed in the root directory, i.e. when installed from the "
"<file>.deb</file> package. So you must not allow the build system to "
"hardcode strings like "
"<tt>/home/me/deb/<var>package</var>-<var>version</var>/usr/share/<var>package</var></tt> "
"into the package file."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:830
msgid ""
"Note that if your program uses GNU <manref section=\"1\" name=\"automake\"> "
"and/or <manref section=\"1\" name=\"autoconf\">, meaning the source includes "
"<file>Makefile.am</file> and/or <file>Makefile.in</file> files, "
"respectively, you will need to modify these files if you need to change the "
"<file>Makefile</file> file. This is because each <prgn>automake</prgn> "
"invocation will rewrite <file>Makefile.in</file> files with information "
"generated from <file>Makefile.am</file> files, and each "
"\"<prgn>./configure</prgn>\" invocation will do the same with "
"<file>Makefile</file> files, with data from <file>Makefile.in</file> "
"files. Editing <file>Makefile.am</file> files requires some knowledge of "
"<prgn>automake</prgn>, which you can read about in \"<tt>info "
"automake</tt>\", whereas editing <file>Makefile.in</file> files is pretty "
"much the same as editing <file>Makefile</file> files, just pay attention to "
"the variables, i.e. any strings surrounded with \"<tt>@</tt>\"s, for example "
"<tt>@CFLAGS@</tt> or <tt>@LN_S@</tt>, which are replaced with actual stuff "
"on each \"<prgn>./configure</prgn>\" invocation. Please make sure to read "
"<file>&autotools-dev;</file> before proceeding."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:840
msgid ""
"Here's the relevant part of <package>gentoo</package>'s "
"<file>Makefile</file> file <footnote><p>This is just an example to show how "
"the <file>Makefile</file> file should look like. If the "
"<file>Makefile</file> file is created by the <prgn>./configure</prgn> "
"command, the correct way to fix this kind of <file>Makefile</file> is to "
"executed the <prgn>./configure</prgn> command from the "
"<prgn>dh_auto_configure</prgn> command with default options including "
"<tt>--prefix=/usr</tt>.</p></footnote>:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:846
#, no-wrap
msgid ""
"# Where to put binary on 'make install'?\n"
"BIN     = /usr/local/bin\n"
"\n"
"# Where to put icons on 'make install'?\n"
"ICONS   = /usr/local/share/gentoo"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:851
msgid ""
"We see that the files are set to install under "
"<file>/usr/local</file>. Change those paths to:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:857
#, no-wrap
msgid ""
"# Where to put binary on 'make install'?\n"
"BIN     = $(DESTDIR)/usr/bin\n"
"\n"
"# Where to put icons on 'make install'?\n"
"ICONS   = $(DESTDIR)/usr/share/gentoo"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:863
msgid ""
"But why in that directory, and not some other? Because Debian packages never "
"install files beneath <file>/usr/local</file> -- that tree is reserved for "
"the system administrator's use. Such files on Debian systems go under "
"<file>/usr</file> instead."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:868
msgid ""
"The more exact locations for binaries, icons, documentation etc. are "
"specified in the Filesystem Hierarchy Standard (see "
"<file>/usr/share/doc/debian-policy/fhs/</file>). I recommend you browse it "
"and read the sections that might concern your package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:874
msgid ""
"So, we should install the binary in <file>/usr/bin</file> instead of "
"<file>/usr/local/bin</file>, the manual page in "
"<file>/usr/share/man/man1</file> instead of <file>/usr/local/man/man1</file> "
"etc. Notice how there's no manual page mentioned in "
"<package>gentoo</package>'s <file>Makefile</file>, but since the Debian "
"Policy requires that every program has one, we'll make one later and install "
"it in <file>/usr/share/man/man1</file>."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:880
msgid ""
"Some programs don't use <file>Makefile</file> variables to define paths such "
"as these. This means you might have to edit some real C sources in order to "
"fix them to use the right locations. But where to search, and exactly what "
"for? You can find this out by issuing:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:882
#, no-wrap
msgid "$ grep -nr -e 'usr/local/lib' --include='*.[c|h]' ."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:886
msgid ""
"<prgn>grep</prgn> will run recursively through the source tree and tell you "
"the filename and the line number for all matches."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:888
msgid ""
"Edit those files and in those lines replace <tt>/usr/local/lib</tt> with "
"<tt>usr/lib</tt>."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:891
#, no-wrap
msgid ""
"$ vim '+argdo %s/usr\\/local\\/lib\\//usr\\/lib\\//gce|update' +q \\\n"
"      $(find . -type f -name '*.[c|h]')"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:894
msgid "Be careful that you don't mess up the rest of the code! :-)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:898
msgid ""
"After that you should find the install target (search for line that starts "
"with <tt>install:</tt>, that will usually work) and rename all references to "
"directories other than ones defined at the top of the <file>Makefile</file>."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:901
msgid ""
"After your upstream bug fix, <package>gentoo</package>'s install target "
"said:"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:910
msgid ""
"Let's fix this and record this with the <prgn>quilt</prgn> command as "
"<file>debian/patches/install.patch</file>."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:913
#, no-wrap
msgid ""
"$ quilt new install.patch\n"
"$ quilt add Makefile"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:916
msgid "Let's change this for Debian package as following using the editor:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:922
#, no-wrap
msgid ""
"install: gentoo-target\n"
"        install -d $(BIN) $(ICONS) $(DESTDIR)/etc\n"
"        install ./gentoo $(BIN)\n"
"        install -m644 icons/* $(ICONS)\n"
"        install -m644 gentoorc-example $(DESTDIR)/etc/gentoorc"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:930
msgid ""
"You've surely noticed that there's now a \"<tt>install -d</tt>\" command "
"before the other commands in the rule. The original <file>Makefile</file> "
"didn't have it because usually the <tt>/usr/local/bin</tt> and other "
"directories already exist on the system where one runs \"<tt>make "
"install</tt>\". However, since we will install into our own empty (or even "
"nonexistent) directory, we will have to create each and every one of those "
"directories."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:935
msgid ""
"We can also add in other things at the end of the rule, like the "
"installation of additional documentation that the upstream authors sometimes "
"omit:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:938
#, no-wrap
msgid ""
"        install -d $(DESTDIR)/usr/share/doc/gentoo/html\n"
"        cp -a docs/* $(DESTDIR)/usr/share/doc/gentoo/html"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:942
msgid ""
"After careful check, if everything is fine, ask quilt to refresh the patch "
"to create <file>debian/patches/install.patch</file> and add its description."
msgstr ""

#. type: <p><enumlist numeration="arabic">
#: maint-guide.en.sgml:948
msgid "Now you have a series of patches."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:950
msgid "Upstream bug fix: <file>debian/patches/fix-gentoo-target.patch</file>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:951
msgid ""
"Debian specific packaging modification: "
"<file>debian/patches/install.patch</file>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:961
msgid ""
"Whenever you make changes that are not specifically related to Debian "
"package such as <file>debian/patches/fix-gentoo-target.patch</file>, be sure "
"to send them to the upstream maintainer so they can be included in the next "
"program revision and be useful to everyone else. Also remember to make your "
"fixes not specific to Debian or Linux (or even Unix!) prior to sending them "
"-- make them portable. This will make your fixes much easier to apply."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:963
msgid "Note that you don't have to send the <file>debian/*</file> files upstream."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:965
msgid "Differing libraries"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:971
msgid ""
"There is one other common problem: libraries are often different from "
"platform to platform. For example, a <file>Makefile</file> can contain a "
"reference to a library which doesn't exist on Debian systems. In that case, "
"we need to change it to a library which does exist in Debian, and serves the "
"same purpose."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:978
msgid ""
"So, if there is a line in your program's <file>Makefile</file> (or "
"<file>Makefile.in</file>) that says something like this (and your program "
"doesn't compile) <footnote><p>The author realizes that this is not the best "
"example considering our <package>libncurses</package> package now ships with "
"a <file>libcurses.so</file> symlink, but he couldn't think of a better "
"one. Suggestions very welcome :-)</p></footnote>:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:980
#, no-wrap
msgid "LIBS = -lcurses -lsomething -lsomethingelse"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:984
msgid ""
"Let's fix this as <file>debian/patches/ncurse.patch</file> by changing "
"<tt>curses</tt> into <tt>ncurses</tt>."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:991
#, no-wrap
msgid ""
"$ quilt new ncurse.patch\n"
"$ quilt add Makefile\n"
"$ sed -i -e \"s/-lcurses/-lncurses/g\" Makefile\n"
"$ quilt refresh\n"
"$ quilt header -e\n"
"... describe patch"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:994
msgid "Required files under the <file>debian</file> directory"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1000
msgid ""
"There is a new subdirectory under the program's source directory, it's "
"called <file>debian</file>. There are a number of files in this directory "
"that we should edit in order to customize the behavior of the package. The "
"most important of them are <file>control</file>, <file>changelog</file>, "
"<file>copyright</file> and <file>rules</file>, which are required for all "
"packages."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1002
msgid "<file>control</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1007
msgid ""
"This file contains various values which <prgn>dpkg</prgn>, "
"<prgn>dselect</prgn>, <prgn>apt-get</prgn>, <prgn>apt-cache</prgn>, "
"<prgn>aptitude</prgn>, and other package management tools will use to manage "
"the package. It is defined by the <url "
"id=\"http://www.debian.org/doc/debian-policy/ch-controlfields.html\" "
"name=\"Debian Policy Manual, 5 'Control files and their fields'\">."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1010
msgid "Here is the control file <prgn>dh_make</prgn> created for us:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1024
#, no-wrap
msgid ""
" 1 Source: gentoo\n"
" 2 Section: unknown\n"
" 3 Priority: extra\n"
" 4 Maintainer: Josip Rodin &lt;joy-mg@debian.org&gt;\n"
" 5 Build-Depends: debhelper (>= 7.0.50~)\n"
" 6 Standards-Version: 3.8.4\n"
" 7 Homepage: &lt;insert the upstream URL, if relevant&gt;\n"
" 8\n"
" 9 Package: gentoo\n"
"10 Architecture: any\n"
"11 Depends: ${shlibs:Depends}, ${misc:Depends}\n"
"12 Description: &lt;insert up to 60 chars description&gt;\n"
"13  &lt;insert long description, indented with spaces&gt;"
msgstr ""

#. type: </example></p>
#: maint-guide.en.sgml:1026 maint-guide.en.sgml:1311 maint-guide.en.sgml:1375 maint-guide.en.sgml:1404 maint-guide.en.sgml:1435
msgid "(I've added the line numbers.)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1028
msgid "Lines 1-6 are the control information for the source package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1030
msgid "Line 1 is the name of the source package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1032
msgid "Line 2 is the section of the distribution the source package goes into."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1046
msgid ""
"As you may have noticed, Debian is divided in sections: <tt>main</tt> (the "
"free software), <tt>non-free</tt> (the not really free software) and "
"<tt>contrib</tt> (free software that depends on non-free software). Under "
"those, there are logical subsections that describe in short what packages "
"are in. So we have <tt>admin</tt> for administrator-only programs, "
"<tt>base</tt> for the basic tools, <tt>devel</tt> for programmer tools, "
"<tt>doc</tt> for documentation, <tt>libs</tt> for libraries, <tt>mail</tt> "
"for e-mail readers and daemons, <tt>net</tt> for network apps and daemons, "
"<tt>x11</tt> for X11 programs that don't fit anywhere else, and many "
"more. See the <url "
"id=\"http://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections\" "
"name=\"Debian Policy Manual, 2.4 'Sections'\"> and <url "
"id=\"http://packages.debian.org/unstable/\" name=\"List of sections in "
"'sid'\"> for the guidance."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1049
msgid ""
"Let's change it then to x11. (A <tt>main/</tt> prefix is implied so we can "
"omit it.)"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1052
msgid ""
"Line 3 describes how important it is that the user installs this "
"package. See the <url "
"id=\"http://www.debian.org/doc/debian-policy/ch-archive.html#s-priorities\" "
"name=\"Debian Policy Manual, 2.5 'Priorities'\"> for the guidance."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1054
msgid ""
"The <tt>optional</tt> priority will usually work for new packages that do "
"not conflict with others with <tt>required</tt>, <tt>important</tt> or "
"<tt>standard</tt> or priorities."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1055
msgid ""
"The <tt>extra</tt> priority will usually work for new packages that conflict "
"with others with non-<tt>extra</tt> priorities."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1062
msgid ""
"Section and priority are used by the frontends like <prgn>aptitude</prgn> "
"when they sort packages and select defaults. Once you upload the package to "
"Debian, the value of these two fields can be overridden by the archive "
"maintainers, in which case you will be notified by email."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1065
msgid ""
"As this is a normal priority package and doesn't conflict with anything "
"else, we will change the priority to \"<tt>optional</tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1070
msgid ""
"Line 4 is the name and email address of the maintainer. Make sure that this "
"field includes a valid \"<tt>To: </tt>\" header for an email, because after "
"you upload it, the bug tracking system will use it to deliver bug emails to "
"you. Avoid using commas, ampersands and parenthesis."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1081
msgid ""
"The 5th line includes the list of packages required to build your package as "
"the <tt>Build-Depends:</tt> field. You can also have the "
"<tt>Build-Depends-Indep:</tt> field as an additional line, here. (see the "
"<url "
"id=\"http://www.debian.org/doc/debian-policy/ch-relationships.html#s-sourcebinarydeps\" "
"name=\"Debian Policy Manual, 7.7 'Relationships between source and binary "
"packages - Build-Depends, Build-Depends-Indep, Build-Conflicts, "
"Build-Conflicts-Indep'\">). Some packages like <package>gcc</package> and "
"<package>make</package> which are required by the "
"<package>build-essential</package> package are implied. If you need to have "
"other tools to build your package, you should add them to these "
"fields. Multiple entries are separated with commas; read on for the "
"explanation of binary dependencies to find out more about the syntax of "
"these lines."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1087
msgid ""
"For all packages packaged with the <prgn>dh</prgn> command in the "
"<file>debian/rules</file> file, you must have \"<tt>debhelper "
"(>=7.0.50~)</tt>\" in the <tt>Build-Depends:</tt> field to satisfy the "
"Debian Policy requirement for the <tt>clean</tt> target."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1095
msgid ""
"For source packages which have some binary packages with \"<tt>Architecture: "
"any</tt>\", they are rebuild by the autobuilder. Since this autobuilder "
"procedure runs \"<tt>debian/rules build</tt>\" in it while installing only "
"packages listed in the <tt>Build-Depends</tt> field (see <ref "
"id=\"autobuilder\">), the <tt>Build-Depends</tt> field needs to list "
"practically all the required packages and the <tt>Build-Depends-indep</tt> "
"is rarely used."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1100
msgid ""
"For source packages which have binary packages only with \"<tt>Architecture: "
"all</tt>\", the <tt>Build-Depends-Indep</tt> field may list all the required "
"packages unless they are already listed in the <tt>Build-Depends</tt> field "
"to satisfy the Debian Policy requirement for the <tt>clean</tt> target."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1112
msgid ""
"If you are not sure which one should be used, use the <tt>Build-Depends</tt> "
"field to be on the safe side. <footnote><p>This somewhat strange situation "
"is a feature well documented in the <url "
"id=\"http://www.debian.org/doc/debian-policy/footnotes.html#f43\" "
"name=\"Debian Policy Manual, Footnotes 43\">. This is not due to the use of "
"the <prgn>dh</prgn> command in the <file>debian/rules</file> file but due to "
"how the <prgn>dpkg-buildpackage</prgn> works. The same situation applies to "
"the <url id=\"https://bugs.launchpad.net/launchpad-buildd/+bug/238141\" "
"name=\"auto build system for Ubuntu\">. </p></footnote>"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1114
msgid "To find out what packages your package needs to be built run the command:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1116
#, no-wrap
msgid "$ dpkg-depcheck -d ./configure"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1121
msgid ""
"To manually find exact build dependency for "
"<prgn><var>/usr/bin/foo</var></prgn>, you execute"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1123
#, no-wrap
msgid "$ objdump -p <var>/usr/bin/foo</var> | grep NEEDED"
msgstr ""

#. type: </example><example>
#: maint-guide.en.sgml:1125
msgid "and for each library listed, e.g., <prgn>libfoo.so.6</prgn>, execute"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1127
#, no-wrap
msgid "$ dpkg -S libfoo.so.6"
msgstr ""

#. type: </example></p>
#: maint-guide.en.sgml:1132
msgid ""
"Then you just take <tt>-dev</tt> version of every package as "
"<tt>Build-Depends</tt> entry. If you use <prgn>ldd</prgn> for this purpose, "
"it will report indirect lib dependencies as well, resulting in the problem "
"of excessive build dependencies."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1136
msgid ""
"<package>gentoo</package> also happens to require "
"<package>xlibs-dev</package>, <package>libgtk1.2-dev</package> and "
"<package>libglib1.2-dev</package> to build, so we'll add them here next to "
"<package>debhelper</package>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1141
msgid ""
"Line 6 is the version of the Debian Policy standards this package follows, "
"the versions of the <url "
"id=\"http://www.debian.org/doc/devel-manuals#policy\" name=\"Debian Policy "
"Manual\"> you read while making your package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1143
msgid "On line 7 you can put the URL of the homepage for the upstream package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1147
msgid ""
"Line 9 is the name of the binary package. This is usually the same as the "
"name of the source package, but it doesn't necessarily have to be that way."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1152
msgid ""
"Line 10 describes the CPU architecture the binary package can be compiled "
"for. We'll leave this as \"<tt>any</tt>\" because <manref section=\"1\" "
"name=\"dpkg-gencontrol\"> will fill in the appropriate value for any machine "
"this package gets compiled on."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1157
msgid ""
"If your package is architecture independent (for example, a shell or Perl "
"script, or a document), change this to \"<tt>all</tt>\", and read later in "
"<ref id=\"rules\"> about using the <tt>binary-indep</tt> rule instead of "
"<tt>binary-arch</tt> for building the package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1162
msgid ""
"Line 11 shows one of the most powerful features of the Debian packaging "
"system. Packages can relate to each other in various ways. Apart from "
"<tt>Depends:</tt>, other relationship fields are <tt>Recommends:</tt>, "
"<tt>Suggests:</tt>, <tt>Pre-Depends:</tt>, <tt>Conflicts:</tt>, "
"<tt>Provides:</tt>, and <tt>Replaces:</tt>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1167
msgid ""
"The package management tools usually behave the same way when dealing with "
"these relations; if not, it will be explained. (see <manref section=\"8\" "
"name=\"dpkg\">, <manref section=\"8\" name=\"dselect\">, <manref "
"section=\"8\" name=\"apt\">, <manref section=\"1\" name=\"aptitude\"> etc.)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1169
msgid "This is what the dependencies mean:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1171
msgid "<tt>Depends:</tt>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1174
msgid ""
"The package will not be installed unless the packages it depends on are "
"installed. Use this if your program absolutely will not run (or will cause "
"severe breakage) unless a particular package is present."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1176
msgid "<tt>Recommends:</tt>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1182
msgid ""
"Use this for packages that are not strictly necessary but are typically used "
"with your program. When a user installs your program, all frontends will "
"likely prompt them to install the recommended "
"packages. <prgn>aptitude</prgn> and <prgn>apt-get</prgn> install recommended "
"packages along with your package (but the user can disable this default "
"behaviour). <prgn>dpkg</prgn> will ignore this field."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1185
msgid "<tt>Suggests:</tt>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1192
msgid ""
"Use this for packages which will work nicely with your program but are not "
"at all necessary. When a user installs your program, all frontends will "
"likely prompt them to install the suggested packages. <prgn>aptitude</prgn> "
"can be configured to install suggested packages along with your package but "
"this is not its default. <prgn>dpkg</prgn> and <prgn>apt-get</prgn> will "
"ignore this field."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1195
msgid "<tt>Pre-Depends:</tt>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1200
msgid ""
"This is stronger than <tt>Depends:</tt>. The package will not be installed "
"unless the packages it pre-depends on are installed and <em>correctly "
"configured</em>. Use this <em>very</em> sparingly and only after discussing "
"it on the <url id=\"http://lists.debian.org/debian-devel/\" "
"name=\"debian-devel@lists.debian.org\"> mailing list. Read: don't use it at "
"all. :-)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1202
msgid "<tt>Conflicts:</tt>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1205
msgid ""
"The package will not be installed until all the packages it conflicts with "
"have been removed. Use this if your program absolutely will not run or will "
"cause severe problems if a particular package is present."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1207
msgid "<tt>Provides:</tt>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1212
msgid ""
"For some types of packages where there are multiple alternatives virtual "
"names have been defined. You can get the full list in the "
"<file>/usr/share/doc/debian-policy/virtual-package-names-list.txt.gz</file> "
"file. Use this if your program provides a function of an existing virtual "
"package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1214
msgid "<tt>Replaces:</tt>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1218
msgid ""
"Use this when your program replaces files from another package, or "
"completely replaces another package (used in conjunction with "
"<tt>Conflicts:</tt>). Files from the named packages will be overwritten with "
"the files from your package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1225
msgid ""
"All these fields have uniform syntax. They are a list of package names "
"separated by commas. These package names may also be lists of alternative "
"package names, separated by vertical bar symbols \"<tt>|</tt>\" (pipe "
"symbols)."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1234
msgid ""
"The fields may restrict their applicability to particular versions of each "
"named package. These versions are listed in parentheses after each "
"individual package name, and they should contain a relation from the list "
"below followed by the version number. The relations allowed are: "
"<tt>&lt;&lt;</tt>, <tt>&lt;=</tt>, <tt>=</tt>, <tt>&gt;=</tt> and "
"<tt>&gt;&gt;</tt> for strictly lower, lower or equal, exactly equal, greater "
"or equal and strictly greater, respectively. For example,"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1240
#, no-wrap
msgid ""
"Depends: foo (&gt;= 1.2), libbar1 (= 1.3.4)\n"
"Conflicts: baz\n"
"Recommends: libbaz4 (&gt;&gt; 4.0.7)\n"
"Suggests: quux\n"
"Replaces: quux (&lt;&lt; 5), quux-foo (&lt;= 7.6)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1247
msgid ""
"The last feature you need to know about is <tt>${shlibs:Depends}</tt>, "
"<tt>${perl:Depends}</tt>, <tt>${misc:Depends}</tt>, etc. These entries are "
"substituted by the list generated by other <package>debhelper</package> "
"components when the <manref section=\"1\" name=\"dh_gencontrol\"> command is "
"executed."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1254
msgid ""
"<manref section=\"1\" name=\"dh_shlibdeps\"> will scan it for binaries and "
"libraries determine their shared library dependencies and detect which "
"packages they are in, such as <package>libc6</package> or "
"<package>xlib6g</package>, after your package has been built and installed "
"into the temporary directory. This list of shared library dependencies is "
"used for <tt>${shlibs:Depends}</tt>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1257
msgid ""
"The package list generated by the <manref section=\"1\" name=\"dh_perl\"> is "
"used for <tt>${perl:Depends}</tt>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1261
msgid ""
"Some <package>debhelper</package> commands may make the generated package "
"need to depend on some other packages. This list of required packages is "
"used for <tt>${misc:Depends}</tt>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1266
msgid ""
"Having said all that, we can leave the <tt>Depends:</tt> field exactly as it "
"is now, and insert another line after it saying \"<tt>Suggests: file</tt>\", "
"because <package>gentoo</package> can use some features provided by that "
"<package>file</package> package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1270
msgid ""
"Line 12 is the short description. Most people screens are 80 columns wide so "
"this shouldn't be longer than about 60 characters. I'll change it to "
"\"<tt>fully GUI configurable X file manager using GTK+</tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1276
msgid ""
"Line 13 is where the long description goes. This should be a paragraph which "
"gives more details about the package. Column 1 of each line should be "
"empty. There must be no blank lines, but you can put a single \"<tt>.</tt>\" "
"(dot) in a column to simulate that. Also, there must be no more than one "
"blank line after the long description."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1281
msgid ""
"Let's insert <tt>Vcs-*</tt> fields documented in <url "
"id=\"http://www.debian.org/doc/manuals/developers-reference/best-pkging-practices.html#bpp-vcs\" "
"name=\"Developer's Reference, 6.2.5. 'Version Control System location'\"> "
"between line 6 and 7. Let's assume that the <package>gentoo</package> "
"package is located in Debian Alioth Git Service at "
"<tt>git://git.debian.org/git/collab-maint/gentoo.git</tt>."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1284
msgid "Finally, here is the updated <file>control</file> file:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1309
#, no-wrap
msgid ""
" 1 Source: gentoo\n"
" 2 Section: x11\n"
" 3 Priority: optional\n"
" 4 Maintainer: Josip Rodin &lt;joy-mg@debian.org&gt;\n"
" 5 Build-Depends: debhelper (>= 7.0.5), xlibs-dev, libgtk1.2-dev, "
"libglib1.2-dev\n"
" 6 Standards-Version: 3.8.4\n"
" 7 Vcs-Git: git://git.debian.org/git/collab-maint/gentoo.git\n"
" 8 Vcs-browser: http://git.debian.org/?p=collab-maint/gentoo.git\n"
" 9 Homepage: http://www.obsession.se/gentoo/\n"
"10\n"
"11 Package: gentoo\n"
"12 Architecture: any\n"
"13 Depends: ${shlibs:Depends}, ${misc:Depends}\n"
"14 Suggests: file\n"
"15 Description: fully GUI configurable X file manager using GTK+\n"
"16  gentoo is a file manager for Linux written from scratch in pure C. It\n"
"17  uses the GTK+ toolkit for all of its interface needs. gentoo provides\n"
"18  100% GUI configurability; no need to edit config files by hand and re-\n"
"19  start the program. gentoo supports identifying the type of various\n"
"20  files (using extension, regular expressions, or the 'file' command),\n"
"21  and can display files of different types with different colors and "
"icons.\n"
"22  .\n"
"23  gentoo borrows some of its look and feel from the classic Amiga file\n"
"24  manager \"Directory OPUS\" (written by Jonathan Potter)."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1313
msgid "<file>copyright</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1318
msgid ""
"This file contains the information about package upstream resources, "
"copyright and license information. Its format is not dictated by the Debian "
"Policy Manual, but the content is (<url "
"id=\"http://www.debian.org/doc/debian-policy/ch-docs.html#s-copyrightfile\" "
"name=\"Debian Policy Manual, 12.5 'Copyright information'\">). You may also "
"consult <url id=\"http://dep.debian.net/deps/dep5/\" name=\"DEP-5: "
"Machine-parseable debian/copyright\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1322
msgid ""
"<prgn>dh_make</prgn> can give you a template copyright file. Let's use the "
"\"<tt>--copyright gpl2</tt>\" option here to get a template file for the "
"<package>gentoo</package> package released under GPL-2."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1330
msgid ""
"You must fill in missing information such as the place you got the package "
"from, the actual copyright notice and their license to complete this "
"file. For the common free software licenses such as GNU GPL-2, GNU GPL-3, "
"LGPL-2, LGPL-3, BSD, Apache or the Artistic license, you can just refer to "
"the appropriate file in <file>/usr/share/common-licenses/</file> directory "
"that exists on every Debian system. Otherwise, you must include the complete "
"license."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1333
msgid ""
"In short, here's how <package>gentoo</package>'s <file>copyright</file> file "
"should look like:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1373
#, no-wrap
msgid ""
" 1 This work was packaged for Debian by:\n"
" 2\n"
" 3     Josip Rodin &lt;joy-mg@debian.org&gt; on 2  Wed, 11 Nov 1998 21:02:14 "
"+0100.\n"
" 4\n"
" 5 It was downloaded from:\n"
" 6     ftp://ftp.obsession.se/gentoo/\n"
" 7\n"
" 8 Upstream author:\n"
" 9\n"
"10     Emil Brink &lt;emil@obsession.se&gt;\n"
"11\n"
"12 Copyright:\n"
"13     Copyright (C) 1998-99 by Emil Brink, Obsession Development.\n"
"14\n"
"15 License:\n"
"16     You are free to distribute this software under the terms of\n"
"17     the GNU General Public License  either version 2 of the License,\n"
"18     or (at your option) any later version.\n"
"19\n"
"20     This package is distributed in the hope that it will be useful,\n"
"21     but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
"22     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"
"23     GNU General Public License for more details.\n"
"24\n"
"25     You should have received a copy of the GNU General Public License\n"
"26     along with this package; if not, write to the Free Software\n"
"27     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 "
"USA\n"
"28\n"
"29 On Debian systems, the complete text of the GNU General\n"
"30 Public License version 2 can be found in "
"`/usr/share/common-licenses/GPL-2'.\n"
"31\n"
"32 The Debian packaging is:\n"
"33\n"
"34     Copyright (C) 1998 Josip Rodin &lt;joy-mg@debian.org&gt;\n"
"35\n"
"36 You can redistribute it and/or modify\n"
"37 it under the terms of the GNU General Public License as published by\n"
"38  Free Software Foundation; either version 2 of the License, or\n"
"39 (at your option) any later version."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1379
msgid ""
"Please follow the HOWTO provided by ftpmasters and sent to "
"debian-devel-announce: <url id=\"&copyright-howto;\"> ."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1381
msgid "<file>changelog</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1386
msgid ""
"This is a required file, which has a special format described in the <url "
"id=\"http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog\" "
"name=\"Debian Policy Manual, 4.4 'debian/changelog'\">. This format is used "
"by <prgn>dpkg</prgn> and other programs to obtain the version number, "
"revision, distribution and urgency of your package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1392
msgid ""
"For you, it is also important, since it is good to have documented all "
"changes you have done. It will help people downloading your package to see "
"whether there are issues with the package that they should know about. It "
"will be saved as <file>/usr/share/doc/gentoo/changelog.Debian.gz</file> in "
"the binary package."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1395
msgid "<prgn>dh_make</prgn> created a default one, and this is how it looks like:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1402
#, no-wrap
msgid ""
"1  gentoo (0.9.12-1) unstable; urgency=low\n"
"2\n"
"3   * Initial release (Closes: #<var>nnnn</var>)  &lt;<var>nnnn</var> is the "
"bug number of your ITP&gt;\n"
"4\n"
"5  -- Josip Rodin &lt;joy-mg@debian.org&gt;  Mon, 22 Mar 2010 00:37:31 "
"+0100\n"
"6"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1412
msgid ""
"Line 1 is the package name, version, distribution, and urgency. The name "
"must match the source package name, distribution should be either "
"<tt>unstable</tt> (or even <tt>experimental</tt>) <footnote><p>Some people "
"use invalid distribution values such as <tt>UNRELEASED</tt> to prevent a "
"package to be accidentally uploaded when updating a package in a shared "
"VCS.</p></footnote>, and urgency shouldn't be changed to anything higher "
"than <tt>low</tt>. :-)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1421
msgid ""
"Lines 3-5 are a log entry, where you document changes made in this package "
"revision (not the upstream changes - there is special file for that purpose, "
"created by the upstream authors, which you will later install as "
"<file>/usr/share/doc/gentoo/changelog.gz</file>). Let's assume your ITP "
"(Intent To Package) bug report number was \"<tt>12345</tt>\". New lines must "
"be inserted just before the uppermost line that begins with \"<tt>*</tt>\" "
"(asterisk). You can do it with <manref section=\"1\" name=\"dch\">, or "
"manually with a text editor."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1424
msgid "You will end up with something like this:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1433
#, no-wrap
msgid ""
"1  gentoo (0.9.12-1) unstable; urgency=low\n"
"2\n"
"3   * Initial Release. Closes: #12345\n"
"4   * This is my first Debian package.\n"
"5   * Adjusted the Makefile to fix $(DESTDIR) problems.\n"
"6\n"
"7  -- Josip Rodin &lt;joy-mg@debian.org&gt; Mon, 22 Mar 2010 00:37:31 "
"+0100\n"
"8"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1438
msgid ""
"You can read more about updating the changelog file later in <ref "
"id=\"update\">."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1440
msgid "<file>rules</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1446
msgid ""
"Now we need to take a look at the exact rules which <manref section=\"1\" "
"name=\"dpkg-buildpackage\"> will use to actually create the package. This "
"file is actually another <file>Makefile</file>, but different from the "
"one(s) in the upstream source. Unlike other files in <file>debian</file>, "
"this one is marked as executable."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1448
msgid "Targets of <file>rules</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1455
msgid ""
"Every <file>rules</file> file, as any other <file>Makefile</file>, consists "
"of several targets and their rules specifying how to handle the source. <url "
"id=\"http://www.debian.org/doc/debian-policy/ch-source.html#s-debianrules\" "
"name=\"Debian Policy Manual, 4.9 'Main building script: debian/rules'\"> "
"explains its details."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1458
msgid "The simplified explanation of targets are the following."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1460
msgid ""
"<tt>clean</tt> target: to clean all compiled, generated, and useless files "
"in the build-tree. (required)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1461
msgid ""
"<tt>build</tt> target: to build the source into compiled programs and "
"formatted documents in the build-tree. (required)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1462
msgid ""
"<tt>install</tt> target: to install files into a file tree for each binary "
"package under the <file>debian</file> directory. If defined, "
"<tt>binary*</tt> targets effectively depend on this target. (optional)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1463
msgid ""
"<tt>binary</tt> target: to create all binary packages (effectively "
"combination of <tt>binary-arch</tt> and <tt>binary-indep</tt> "
"targets). (required)<footnote><p>This target is used by "
"\"<tt>dpkg-buildpackage</tt>\" as in <ref "
"id=\"completebuild\">.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1464
msgid ""
"<tt>binary-arch</tt> target: to create arch-dependent (<tt>Architecture: "
"any</tt>) binary packages in the parent "
"directory. (required)<footnote><p>This target is used by "
"\"<tt>dpkg-buildpackage -B</tt>\" as in <ref "
"id=\"autobuilder\">.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1465
msgid ""
"<tt>binary-indep</tt> target: to create arch-independent (<tt>Architecture: "
"all</tt>) binary packages in the parent "
"directory. (required)<footnote><p>This target is used by "
"\"<tt>dpkg-buildpackage -A</tt>\".</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1466
msgid ""
"<tt>get-orig-source</tt> target: to obtain the most recent version of the "
"original source package from upstream archive site. (optional)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1476
msgid ""
"Rules that you want to execute are invoked as command line arguments (for "
"example, \"<tt>./debian/rules build</tt>\" or \"<tt>fakeroot make -f "
"debian/rules binary</tt>\"). After the target name, you can name the "
"dependency, program or file that the rule depends on. After that, there can "
"be any number of commands, indented with <tt><var>TAB</var></tt>. A new rule "
"begins with the target declaration in the first column. Empty lines and "
"lines beginning with \"<tt>#</tt>\" (hash) are treated as comments and "
"ignored."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1480
msgid ""
"You are probably confused now, but it will all be clear upon examination of "
"the <file>rules</file> file that <prgn>dh_make</prgn> gives us as a "
"default. You should also read \"<tt>info make</tt>\" for more information."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1482
msgid "Default <file>rules</file> file"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1487
msgid ""
"Newer <prgn>dh_make</prgn> generates a very simple but powerful default "
"<file>rules</file> file using the <prgn>dh</prgn> command:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1501
#, no-wrap
msgid ""
" 1 #!/usr/bin/make -f\n"
" 2 # -*- makefile -*-\n"
" 3 # Sample debian/rules that uses debhelper.\n"
" 4 # This file was originally written by Joey Hess and Craig Small.\n"
" 5 # As a special exception, when this file is copied by dh-make into a\n"
" 6 # dh-make output file, you may use that output file without "
"restriction.\n"
" 7 # This special exception was added by Craig Small in version 0.37 of "
"dh-make.\n"
" 8\n"
" 9 # Uncomment this to turn on verbose mode.\n"
"10 #export DH_VERBOSE=1\n"
"11\n"
"12 %:\n"
"13        dh $@"
msgstr ""

#. type: </example></p>
#: maint-guide.en.sgml:1504
msgid ""
"(I've added the line numbers. In the actual <file>rules</file> file, the "
"leading white spaces are TAB codes.)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1508
msgid ""
"You are probably familiar with lines like line 1 from shell and Perl "
"scripts. It tells the operating system that this file is to be processed "
"with <file>/usr/bin/make</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1518
msgid ""
"Line 10 can be uncommented to set <tt>DH_VERBOSE</tt> variable to 1. Then, "
"the <prgn>dh</prgn> command will output which <prgn>dh_*</prgn> commands are "
"executed by the <prgn>dh</prgn> command. You can also add \"<tt>export "
"DH_OPTIONS=-v</tt>\" line here. Then each <prgn>dh_*</prgn> command will "
"output which commands are executed by each <prgn>dh_*</prgn> command. This "
"helps you to understand what exactly is going on behind this simple "
"<file>rules</file> file and to debug its problems. This new <prgn>dh</prgn> "
"is a core part of the <package>debhelper</package> tools and does not hide "
"anything from you."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1533
msgid ""
"Lines 12 and 13 are where all the work is done. The percent sign means any "
"targets which then call a single program, <prgn>dh</prgn> with the target "
"name. <footnote><p>Under <tt>lenny</tt>, <prgn>dh_make</prgn> created much "
"more complicated <file>rules</file> file with many <prgn>dh_*</prgn> scripts "
"listed for each required explicit targets and frozen them to the state when "
"it was initially packaged. This new <prgn>dh</prgn> command is simpler and "
"frees us from this constrain. You still have full power to customize this "
"with <tt>override_dh_*</tt> targets. See <ref id=\"customrules\">. It is "
"based only on the <package>debhelper</package> package and does not "
"obfuscate the package building process like the <package>cdbs</package> "
"package.</p></footnote> The <prgn>dh</prgn> command is a wrapper script "
"which runs appropriate sequences of <prgn>dh_*</prgn> programs depending on "
"its argument."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1537
msgid ""
"\"<tt>debian/rules clean</tt>\" runs \"<tt>dh clean</tt>\"; which in turn "
"runs the following:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1541
#, no-wrap
msgid ""
"dh_testdir\n"
"dh_auto_clean\n"
"dh_clean"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1544
msgid ""
"\"<tt>debian/rules build</tt>\" runs \"<tt>dh build</tt>\"; which in turn "
"runs the following:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1549
#, no-wrap
msgid ""
"dh_testdir\n"
"dh_auto_configure\n"
"dh_auto_build\n"
"dh_auto_test"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1554
msgid ""
"\"<tt>fakeroot debian/rules binary</tt>\" runs \"<tt>fakeroot dh "
"binary</tt>\"; which in turn runs the following<footnote><p>This assumes "
"that the <package>python-module</package> package is installed on the "
"system.</p></footnote>:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1598
#, no-wrap
msgid ""
"dh_testroot\n"
"dh_prep\n"
"dh_installdirs\n"
"dh_auto_install\n"
"dh_install\n"
"dh_installdocs\n"
"dh_installchangelogs\n"
"dh_installexamples\n"
"dh_installman\n"
"dh_installcatalogs\n"
"dh_installcron\n"
"dh_installdebconf\n"
"dh_installemacsen\n"
"dh_installifupdown\n"
"dh_installinfo\n"
"dh_pysupport\n"
"dh_installinit\n"
"dh_installmenu\n"
"dh_installmime\n"
"dh_installmodules\n"
"dh_installlogcheck\n"
"dh_installlogrotate\n"
"dh_installpam\n"
"dh_installppp\n"
"dh_installudev\n"
"dh_installwm\n"
"dh_installxfonts\n"
"dh_bugfiles\n"
"dh_lintian\n"
"dh_gconf\n"
"dh_icons\n"
"dh_perl\n"
"dh_usrlocal\n"
"dh_link\n"
"dh_compress\n"
"dh_fixperms\n"
"dh_strip\n"
"dh_makeshlibs\n"
"dh_shlibdeps\n"
"dh_installdeb\n"
"dh_gencontrol\n"
"dh_md5sums\n"
"dh_builddeb"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1601
msgid ""
"\"<tt>fakeroot debian/rules binary-arch</tt>\" runs \"<tt>fakeroot dh "
"binary-arch</tt>\"; which in turn runs the same sequence as \"<tt>fakeroot "
"dh binary</tt>\" but with the \"<tt>-a</tt>\" option appended for each "
"command."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1606
msgid ""
"\"<tt>fakeroot debian/rules binary-indep</tt>\" runs \"<tt>fakeroot dh "
"binary-indep</tt>\"; which in turn runs almost the same sequence as "
"\"<tt>fakeroot dh binary</tt>\" but excluding <prgn>dh_strip</prgn>, "
"<prgn>dh_makeshlibs</prgn>, and <prgn>dh_shlibdeps</prgn> with the "
"\"<tt>-i</tt>\" option appended for each remaining command."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1619
msgid ""
"The function of <prgn>dh_*</prgn> commands are almost self-evident from "
"their names. <footnote><p>For complete information on what do all these "
"<prgn>dh_*</prgn> scripts exactly do, and what their other options are, "
"please read their respective manual pages and the "
"<package>debhelper</package> documentation.</p></footnote> There are few "
"notable ones worth making (over)simplified explanation here assuming typical "
"build environment based on <file>Makefile</file>. <footnote><p>These "
"commands support other build environments such as <file>setup.py</file>, "
"<file>Makefile.PL</file>, <file>Build.PL</file>, and <file>cmake</file>, "
"too.</p></footnote>"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1626
msgid ""
"<prgn>dh_auto_clean</prgn> usually executes the following if "
"<file>Makefile</file> exists with the <tt>distclean</tt> "
"target. <footnote><p>It actually looks for the first available target of "
"<tt>distclean</tt>, <tt>realclean</tt> or <tt>clean</tt> in "
"<file>Makefile</file> and execute it.</p></footnote>"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1628
#, no-wrap
msgid "make distclean"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1631
msgid ""
"<prgn>dh_auto_configure</prgn> usually executes the following if "
"<file>./configure</file> exists (arguments abbreviated for readability)."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1633
#, no-wrap
msgid "./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var ..."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1635
msgid ""
"<prgn>dh_auto_build</prgn> usually executes the following to execute the "
"first target of <file>Makefile</file> if it exists."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1637
#, no-wrap
msgid "make"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1640
msgid ""
"<prgn>dh_auto_test</prgn> usually executes the following if "
"<file>Makefile</file> exists with the <tt>test</tt> target."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1642
#, no-wrap
msgid "make test"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1645
msgid ""
"<prgn>dh_auto_install</prgn> usually executes the following if "
"<file>Makefile</file> exists with the <tt>install</tt> target (line folded "
"for readability)."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1648
#, no-wrap
msgid ""
"make install \\\n"
"  "
"DESTDIR=<var>/path/to</var>/<var>package</var>_<var>version</var>-<var>revision</var>/debian/<var>package</var>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1654
msgid ""
"Targets which require the <prgn>fakeroot</prgn> command contain "
"<prgn>dh_testroot</prgn>. If you are not pretending to be root using this "
"command, it exits with an error."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1660
msgid ""
"The important part to know about the <file>rules</file> file created by "
"<prgn>dh_make</prgn>, is that it is just a suggestion. It will work for most "
"packages but for more complicated ones, don't be afraid to customize it to "
"fit your needs. Only things that you must not change are the names of the "
"rules, because all the tools use these names, as mandated by the Debian "
"Policy."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1664
msgid ""
"Although \"<tt>install</tt>\" is not required target, it is "
"supported. \"<tt>fakeroot dh install</tt>\" behaves like \"<tt>fakeroot dh "
"binary</tt>\" but stops after <prgn>dh_fixperms</prgn>."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1666
msgid "Customization of <file>rules</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1669
msgid ""
"There are many ways to customize the <file>rules</file> file created with "
"the new <prgn>dh</prgn> command."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1672
msgid "The \"<tt>dh $@</tt>\" command can be customized as follows."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1674
msgid "Add support of the <prgn>dh_pysupport</prgn> command."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1676
msgid ""
"Install the <package>python-support</package> package in "
"\"<tt>Build-Depends:</tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1677
msgid "Use \"<tt>dh $@</tt>\" as usual. (This is enabled by default)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1678
msgid ""
"This handles Python modules using the <package>python-support</package> "
"framework."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1680
msgid "Add support of the <prgn>dh_pycentral</prgn> command."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1682
msgid ""
"Install the <package>python-central</package> package in "
"\"<tt>Build-Depends:</tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1683
msgid "Use \"<tt>dh --with python-central $@</tt>\" instead."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1684
msgid "This also deactivates the <prgn>dh_pysupport</prgn> command."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1685
msgid ""
"This handles Python modules using the <package>python-central</package> "
"framework."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1687
msgid "Add support of the <prgn>dh_installtex</prgn> command."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1689
msgid ""
"Install the <package>tex-common</package> package in "
"\"<tt>Build-Depends:</tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1690
msgid "Use \"<tt>dh --with tex $@</tt>\" instead."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1691
msgid "This registers Type 1 fonts, hyphenation patterns, or formats with TeX."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1693
msgid ""
"Add support of the <prgn>dh_quilt_patch</prgn> and "
"<prgn>dh_quilt_unpatch</prgn> commands."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1695
msgid "Install the <package>quilt</package> package in \"<tt>Build-Depends:</tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1696
msgid "Use \"<tt>dh --with quilt $@</tt>\" instead."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1697
msgid ""
"This applies and un-applies patches to the upstream source from files in the "
"<file>debian/patches</file> directory for the <tt>1.0</tt> source package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1698
msgid "This is not needed if you use the new <tt>3.0 (quilt)</tt> source package."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1700
msgid "Add support of the <prgn>dh_dkms</prgn> command."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1702
msgid "Install the <package>dkms</package> package in \"<tt>Build-Depends:</tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1703
msgid "Use \"<tt>dh --with dkms $@</tt>\" instead."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1704
msgid "This correctly handles DKMS usage by the kernel module package."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1706
msgid ""
"Add support of the <prgn>dh_autotools-dev_updateconfig</prgn> and "
"<prgn>dh_autotools-dev_restoreconfig</prgn> commands."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1708
msgid ""
"Install the <package>autotools-dev</package> package in "
"\"<tt>Build-Depends:</tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1709
msgid "Use \"<tt>dh --with autotools-dev $@</tt>\" instead."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1710
msgid ""
"This updates and restores <file>config.sub</file> and "
"<file>config.guess</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1717
msgid ""
"Many <prgn>dh_*</prgn> commands invoked by the new <prgn>dh</prgn> command "
"can be customized by the corresponding configuration files in the "
"<file>debian</file> directory. See <ref id=\"dother\"> and the manpage of "
"each command for the customization of such features."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1727
msgid ""
"Some <prgn>dh_*</prgn> commands invoked by the new <prgn>dh</prgn> command "
"may require you to run it with some arguments or to run additional commands "
"with them or to skip them. For such cases, you create an "
"<tt>override_dh_<var>foo</var></tt> target with its rule in the "
"<file>rules</file> file only for the <prgn>dh_<var>foo</var></prgn> command "
"you want to change. It basically say \"<em>run me "
"instead</em>\". <footnote><p>Under <tt>lenny</tt>, if you wanted to change "
"the behavior of a <prgn>dh_*</prgn> script you found the relevant line in "
"the <file>rules</file> file and adjusted it.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1734
msgid ""
"Please note that the <prgn>dh_auto_*</prgn> commands tend to do more than "
"what has been discussed as (over)simplified explanation to take care all the "
"corner cases. Use of simplified equivalent command instead of these in "
"<tt>override_dh_*</tt> targets except the <tt>override_dh_auto_clean</tt> "
"target is a bad idea since it may kill such <package>debhelper</package>'s "
"smart features."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1745
msgid ""
"If you want to store the system configuration data for the "
"<package>gentoo</package> package in the <file>/etc/gentoo</file> directory "
"instead of the usual <file>/etc</file> directory, you can override the "
"default <tt>--sysconfig=/etc</tt> argument given by the "
"<prgn>dh_auto_configure</prgn> command to the <prgn>./configure</prgn> "
"command by the following. <footnote><p>The <package>gentoo</package> package "
"uses the GNU build system, also known as the Autotools. See <url "
"id=\"http://en.wikipedia.org/wiki/GNU_build_system\">.</p></footnote>"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1748
#, no-wrap
msgid ""
"override_dh_auto_configure:\n"
"        dh_auto_configure -- --sysconfig=/etc/gentoo"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1756
msgid ""
"The arguments given after <tt>--</tt> are appended to the default arguments "
"of the auto-executed program to override them. Using the "
"<prgn>dh_auto_configure</prgn> command is better than the "
"<prgn>./configure</prgn> command here since it will only override the "
"<tt>--sysconfig</tt> argument and keeps well intended other arguments to the "
"<prgn>./configure</prgn> command."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1763
msgid ""
"If <file>Makefile</file> of a source for <package>gentoo</package> requires "
"you to specify <tt>build</tt> as its target to build it "
"<footnote><p><prgn>dh_auto_build</prgn> without any arguments will execute "
"the first target in the <file>Makefile</file> file.</p></footnote>, you "
"create an <tt>override_dh_auto_build</tt> target to enable it."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1766
#, no-wrap
msgid ""
"override_dh_auto_build:\n"
"        dh_auto_build -- build"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1770
msgid ""
"This ensures to run $(MAKE) with all the default arguments given by the "
"<prgn>dh_auto_build</prgn> command and <tt>build</tt> argument."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1777
msgid ""
"If <file>Makefile</file> of a source for <package>gentoo</package> requires "
"you to specify the <tt>packageclean</tt> target to clean it for Debian "
"package instead of the <tt>distclean</tt> or <tt>clean</tt> targets in the "
"<file>Makefile</file> file, you create an <tt>override_dh_auto_clean</tt> "
"target to enable it."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1780
#, no-wrap
msgid ""
"override_dh_auto_clean:\n"
"        $(MAKE) packageclean"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1787
msgid ""
"If <file>Makefile</file> of a source for <package>gentoo</package> contains "
"<tt>test</tt> target which you do not want to run for the Debian package "
"building process, you can use empty <tt>override_dh_auto_test</tt> target to "
"skip it."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1789
#, no-wrap
msgid "override_dh_auto_test:"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1796
msgid ""
"If <package>gentoo</package> has an unusual upstream changelog file called "
"<file>FIXES</file>, <prgn>dh_installchangelogs</prgn> will not install that "
"file by default. The <prgn>dh_installchangelogs</prgn> command requires "
"<file>FIXES</file> as its argument to install it."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1799
#, no-wrap
msgid ""
"override_dh_installchangelogs:\n"
"        dh_installchangelogs FIXES"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1806
msgid ""
"When you use the new <prgn>dh</prgn> command, use of explicit targets such "
"as the ones listed in <ref id=\"targets\"> except <tt>get-orig-source</tt> "
"target may make it difficult to understand their exact effects. Please limit "
"explicit targets to <tt>override_dh_*</tt> targets and completely "
"independent ones, if possible."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1808
msgid "Other files under the <file>debian</file> directory"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1816
msgid ""
"To control most of what <package>debhelper</package> does while building the "
"package, you put optional configuration files under the <file>debian</file> "
"directory. This chapter will make an overview of what each of these does and "
"its format. Please read <url "
"id=\"http://www.debian.org/doc/devel-manuals#policy\" name=\"Debian Policy "
"Manual\"> and <url id=\"http://www.debian.org/doc/devel-manuals#devref\" "
"name=\"Debian Developer's Reference\"> for guidelines for the packaging."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1822
msgid ""
"The <prgn>dh_make</prgn> command will create some template configuration "
"files under the <file>debian</file> directory. Most of them come with "
"filenames suffixed by \"<tt>.ex</tt>\". Some of them come with filenames "
"prefixed by the binary package name such as "
"<tt><var>package</var></tt>. Take a look at all of them."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1823
msgid "If you wish or need to activate any of those, please do the following."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1825
msgid ""
"rename template files by removing the <tt>.ex</tt> or <tt>.EX</tt> suffix if "
"the template files have one."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1826
msgid "modify template file contents to suit your needs."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1827
msgid "remove template files which you do not need."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1828
msgid ""
"modify the <file>control</file> file (see <ref id=\"control\">), if "
"necessary."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1829
msgid "modify the <file>rules</file> file (see <ref id=\"rules\">), if necessary."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1838
msgid ""
"Those <package>debhelper</package> configuration files without "
"<file><var>package</var></file> prefix such as <file>install</file> apply to "
"the first binary package. When there are many binary packages, their "
"configurations can be specified by prefixing their name to their "
"configuration filenames such as <file><var>package-1</var>.install</file>, "
"<file><var>package-2</var>.install</file>, etc."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1840
msgid "<file>README.Debian</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1843
msgid ""
"Any extra details or discrepancies between the original package and your "
"<em>debianized</em> version should be documented here."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1846
msgid "<prgn>dh_make</prgn> created a default one, this is what it looks like:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1853
#, no-wrap
msgid ""
"gentoo for Debian\n"
"-----------------\n"
"\n"
"&lt;possible notes regarding this package - if none, delete this file&gt;\n"
"\n"
" -- Josip Rodin &lt;joy-mg@debian.org&gt;, Wed, 11 Nov 1998 21:02:14 +0100"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1857
msgid ""
"If you have nothing to be documented, remove this file. See <manref "
"section=\"1\" name=\"dh_installdocs\">."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1859
msgid "<file>compat</file> file"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1863
msgid ""
"The <file>compat</file> file defines the <package>debhelper</package> "
"compatibility level. Currently, you should set it to "
"<package>debhelper</package> V7 by the following."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1865
#, no-wrap
msgid "$ echo 7 > debian/compat"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1868
msgid "<file>conffiles</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1874
msgid ""
"One of the most annoying things about software is when you spend a great "
"deal of time and effort customizing a program, only to have an upgrade stomp "
"all over your changes. Debian solves this problem by marking configuration "
"files so that when you upgrade a package, you'll be prompted whether you "
"want to keep your old configuration or not."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1881
msgid ""
"Since <package>debhelper</package> V3, <manref section=\"1\" "
"name=\"dh_installdeb\"> will <em>automatically</em> flag any files under the "
"<file>/etc</file> directory as conffiles, so if your program only has "
"conffiles there you do not need to specify them in this file. For most "
"package types, the only place there is (and should be conffiles) is under "
"<file>/etc</file> and so this file doesn't need to exist."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1885
msgid ""
"If your program uses configuration files but also rewrites them on its own, "
"it's best not to make them as conffiles because <prgn>dpkg</prgn> will then "
"prompt users to verify the changes all the time."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1888
msgid ""
"If the program you're packaging requires every user to modify the "
"configuration files in the <file>/etc</file> directory, there are 2 popular "
"ways to make them not as conffiles to keep <prgn>dpkg</prgn> quiet."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1892
msgid ""
"You make a symlink under the <file>/etc</file> directory pointing to a file "
"under the <file>/var</file> directory generated by the <em>maintainer "
"scripts</em>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1894
msgid ""
"You make a file generated by the <em>maintainer scripts</em> under the "
"<file>/etc</file> directory."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1898
msgid ""
"For more information on the <em>maintainer scripts</em>, see <ref "
"id=\"maintscripts\">."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1900
msgid "<file><var>package</var>.cron.*</file> files"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:1905
msgid ""
"If your package requires regularly scheduled tasks to operate properly, you "
"can use this file to set it up. You can either setup regular tasks that "
"happen hourly, daily, weekly or monthly or alternatively happen any other "
"time that you wish. The filenames are:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1908
msgid ""
"<file>cron.hourly</file> - Installed as "
"<file>/etc/cron.hourly/<var>package</var></file>: run once an hour every "
"hour."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1910
msgid ""
"<file>cron.daily</file> - Installed as "
"<file>/etc/cron.daily/<var>package</var></file>: run once a day, usually "
"early morning."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1912
msgid ""
"<file>cron.weekly</file> - Installed as "
"<file>/etc/cron.weekly/<var>package</var></file>: run once a week, usually "
"early Sunday morning."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1914
msgid ""
"<file>cron.monthly</file> - Installed as "
"<file>/etc/cron.monthly/<var>package</var></file>: run once a month, usually "
"early morning on the first of the month."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1915
msgid ""
"<file>cron.d</file> - Installed as "
"<file>/etc/cron.d/<var>package</var></file>: for any other time"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1921
msgid ""
"For the named files, the format of them is the shell script. The different "
"one is <file><var>package</var>.cron.d</file> which follows the format of "
"<manref section=\"5\" name=\"crontab\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1925
msgid ""
"Note that this doesn't include log rotation; for that, see <manref "
"section=\"1\" name=\"dh_installlogrotate\"> and <manref section=\"8\" "
"name=\"logrotate\">."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1927
msgid "<file>dirs</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1932
msgid ""
"This file specifies the directories which we need but the normal "
"installation procedure (\"<tt>make install DESTDIR=...</tt>\" invoked by "
"\"<tt>dh_auto_install</tt>\") somehow doesn't create. This generally means "
"there is a problem with the <file>Makefile</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1935
msgid ""
"Files listed in the <file>install</file> file doesn't need the directories "
"created first. See <ref id=\"install\">"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1939
msgid ""
"It is best to first try to run the installation first and only use this if "
"you run into trouble. There is no preceding slash on the directory names."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1941
msgid "<file><var>package</var>.doc-base</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1946
msgid ""
"If your package has documentation other than manual pages and info docs, you "
"should use the <package>doc-base</package> file to register it, so the user "
"can find it with e.g. <manref section=\"1\" name=\"dhelp\">, <manref "
"section=\"1\" name=\"dwww\"> or <manref section=\"1\" name=\"doccentral\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1949
msgid ""
"This usually includes HTML, PS and PDF files, shipped in "
"<file>/usr/share/doc/<var>packagename</var>/</file>."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1952
msgid ""
"This is how <package>gentoo</package>'s doc-base file "
"<file>gentoo.doc-base</file> looks like:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1962
#, no-wrap
msgid ""
"Document: gentoo\n"
"Title: Gentoo Manual\n"
"Author: Emil Brink\n"
"Abstract: This manual describes what Gentoo is, and how it can be used.\n"
"Section: File Management\n"
"\n"
"Format: HTML\n"
"Index: /usr/share/doc/gentoo/html/index.html\n"
"Files: /usr/share/doc/gentoo/html/*.html"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1967
msgid ""
"For information on the file format, see <manref section=\"8\" "
"name=\"install-docs\"> and the <package>doc-base</package> manual, in "
"<file>/usr/share/doc/doc-base/doc-base.html/</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1969
msgid ""
"For more details on installing additional documentation, look in <ref "
"id=\"destdir\">."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1971
msgid "<file>docs</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1974
msgid ""
"This file specifies the file names of documentation files we can have "
"<manref section=\"1\" name=\"dh_installdocs\"> install into the temporary "
"directory for us."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1977
msgid ""
"By default, it will include all existing files in the top-level source "
"directory that are called \"<file>BUGS</file>\", \"<file>README*</file>\", "
"\"<file>TODO</file>\" etc."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:1980
msgid "For <package>gentoo</package>, I also included some other files:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:1988
#, no-wrap
msgid ""
"BUGS\n"
"CONFIG-CHANGES\n"
"CREDITS\n"
"ONEWS\n"
"README\n"
"README.gtkrc\n"
"TODO"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:1991
msgid "<file>emacsen-*</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1994
msgid ""
"If your package supplies Emacs files that can be bytecompiled at package "
"installation time, you can use these files to set it up."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1997
msgid ""
"They are installed into the temporary directory by <manref section=\"1\" "
"name=\"dh_installemacsen\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:1999
msgid "If you don't need these, remove them."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2000
msgid "<file><var>package</var>.examples</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2003
msgid ""
"The <manref section=\"1\" name=\"dh_installexamples\"> command installs "
"files and directories listed in this file as example files ."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2005
msgid ""
"<file><var>package</var>.init</file> and "
"<file><var>package</var>.default</file> files"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2008
msgid ""
"If your package is a daemon that needs to be run at the system start-up, "
"you've obviously disregarded my initial recommendation, haven't you? :-)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2016
msgid ""
"The <file><var>package</var>.init</file> file is installed as the "
"<file>/etc/init.d/<var>package</var></file> script. Its fairly generic "
"skeleton template is provided by the <prgn>dh_make</prgn> command as "
"<file>init.d.ex</file>. You'll likely have to rename and edit it, a lot, "
"while making sure to provide Filesystem Hierarchy Standard (see "
"<file>/usr/share/doc/debian-policy/fhs/</file>) compliant headers. It gets "
"installed into the temporary directory by <manref section=\"1\" "
"name=\"dh_installinit\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2023
msgid ""
"The <file><var>package</var>.default</file> file will be installed into "
"<file>etc/default/<var>package</var></file>. This file sets defaults that "
"are sourced by the init script. Most times this default file is used to "
"disable running a daemon, set some default flags or timeouts. If your init "
"script has certain <em>settable</em> features you want to install these into "
"the default file, not the init script."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2030
msgid ""
"If your upstream package has an init file you can either use it or not. If "
"you don't use their init.d script then create a new one in "
"<file>debian/init</file>. However if the upstream init script looks fine and "
"installs in the right place you still need to setup the <file>rc*</file> "
"symlinks. To do this you will need to override <prgn>dh_installinit</prgn> "
"in the <file>rules</file> file with the following lines:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2033
#, no-wrap
msgid ""
"override_dh_installinit:\n"
"        dh_installinit --onlyscripts"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2036
msgid "If you don't need this, remove the files."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2038
msgid "<file>install</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2047
msgid ""
"If there are files that need to be installed into your package but your "
"standard \"<tt>make install</tt>\" won't do it, you put the filenames and "
"destinations into this <file>install</file> file. They are installed by "
"<manref section=\"1\" name=\"dh_install\">.<footnote><p>This replaces the "
"deprecated <manref section=\"1\" name=\"dh_movefiles\"> command which is "
"configured by the <file>files</file> file.</p></footnote> You should first "
"check there is not a more specific tool to use. For example, documents "
"should be in the <file>docs</file> file and not in this one."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2054
msgid ""
"This <file>install</file> file has one line per file installed, with the "
"name of the file (relative to the top build directory) then a space then the "
"installation directory (relative to the install directory). One example of "
"where this is used is where a binary is forgotten to be installed, the "
"<file>install</file> file would look like:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2056
#, no-wrap
msgid "src/foo/mybin usr/bin"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2060
msgid ""
"This will mean when this package is installed, there will be a binary file "
"<file>/usr/bin/mybin</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2066
msgid ""
"Alternatively, this <file>install</file> can have the name of the file only "
"without the installation directory when the relative directory path does not "
"change. This format is usually used for a large package that splits build "
"result into multiple binary packages using "
"<file><var>package-1</var>.install</file>, "
"<file><var>package-2</var>.install</file>, etc."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2070
msgid ""
"The <prgn>dh_install</prgn> command will fall back to look in "
"<file>debian/tmp</file> for files, if it doesn't find them in the current "
"directory (or wherever you've told it to look using <tt>--sourcedir</tt>)."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2072
msgid "<file><var>package</var>.info</file> files"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2076
msgid ""
"If your package has info pages, you should install them using <manref "
"section=\"1\" name=\"dh_installinfo\"> by listing them in the "
"<file><var>package</var>.info</file> files."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2078
msgid "<file>{<var>package</var>.|source/}lintian-overrides</file> files"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2085
msgid ""
"If <package>lintian</package> reports an erroneous diagnostics for a case "
"when the policy allows exceptions to some rule, you can use "
"<file><var>package</var>.lintian-overrides</file> or "
"<file>source/lintian-overrides</file> to quiet it. Please read "
"<file>/usr/share/doc/lintian/lintian.html/index.html</file> and refrain from "
"abusing this."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2090
msgid ""
"<file><var>package</var>.lintian-overrides</file> is for the binary package "
"named as <package><var>package</var></package> and is installed into "
"<file>usr/share/lintian/overrides/<var>package</var></file> by the "
"<prgn>dh_lintian</prgn> command."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2093
msgid ""
"<file>source/lintian-overrides</file> is for the source package. This is not "
"installed."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2095
msgid "<file>manpage.*</file> files"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2100
msgid ""
"Your program(s) should have a manual page. If they don't, you must create "
"them. The <prgn>dh_make</prgn> command creates few template files for a "
"manual page. These need to be copied and edited for each command without its "
"manual page. Please make sure to remove unused templates."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2102
msgid "<file>manpage.1.ex</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2107
msgid ""
"Manual pages are normally written in <manref section=\"1\" "
"name=\"nroff\">. The <file>manpage.1.ex</file> template is written in "
"<prgn>nroff</prgn>, too. See the <manref section=\"7\" name=\"man\"> manual "
"page for a brief description of how to edit such a file."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2114
msgid ""
"The final manual page file name should include the name of the program it is "
"documenting, so we will rename it from \"<tt>manpage</tt>\" to "
"\"<tt>gentoo</tt>\". The file name also includes \"<tt>.1</tt>\" as the "
"first suffix, which means it's a manual page for a user command. Be sure to "
"verify that this section is indeed the correct one. Here's a short list of "
"manual page sections:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2125
#, no-wrap
msgid ""
"Section |     Description     |     Notes\n"
"   1     User commands          Executable commands or scripts.\n"
"   2     System calls           Functions provided by the kernel.\n"
"   3     Library calls          Functions within system libraries.\n"
"   4     Special files          Usually found in /dev\n"
"   5     File formats           E.g. /etc/passwd's format\n"
"   6     Games                  Or other frivolous programs\n"
"   7     Macro packages         Such as man macros.\n"
"   8     System administration  Programs typically only run by root.\n"
"   9     Kernel routines        Non-standard calls and internals."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2132
msgid ""
"So <package>gentoo</package>'s man page should be called "
"<file>gentoo.1</file>. If there was no <file>gentoo.1</file> man page in the "
"original source, you should create it by renaming the "
"<file>manpage.1.ex</file> template to <file>gentoo.1</file> and edit it by "
"using information from the example and from upstream docs."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2139
msgid ""
"You can use the <prgn>help2man</prgn> command to generate a man page out of "
"\"<tt>--help</tt>\" and \"<tt>--version</tt>\" output of each program, "
"too. <footnote><p>If the command is missing <prgn>info</prgn> page but have "
"documentation files in the <file>/usr/share/<var>package</var></file> "
"directory, you should manually edit generated the man page created by the "
"<prgn>help2man</prgn> command. </p></footnote>"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2141
msgid "<file>manpage.sgml.ex</file> file"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2144
msgid ""
"If on the other hand you prefer writing SGML instead of <prgn>nroff</prgn>, "
"you can use the <file>manpage.sgml.ex</file> template. If you do this, you "
"have to:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2146
msgid "rename the file to something like <file>gentoo.sgml</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2147
msgid "install the <package>docbook-to-man</package> package"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2149
msgid ""
"add <tt>docbook-to-man</tt> to the <tt>Build-Depends</tt> line in the "
"<file>control</file> file"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2151 maint-guide.en.sgml:2170
msgid ""
"add a <tt>override_dh_auto_build</tt> target to your <file>rules</file> "
"file:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2155
#, no-wrap
msgid ""
"override_dh_auto_build:\n"
"        docbook-to-man debian/gentoo.sgml > debian/gentoo.1\n"
"        dh_auto_build"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2159
msgid "<file>manpage.xml.ex</file> file"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2162
msgid ""
"If you prefer XML over SGML, you can use the <tt>manpage.xml.ex</tt> "
"template. If you do this, you have two choices:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2164
msgid "rename the source file to something like <tt>gentoo.1.xml</tt>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2166
msgid ""
"install the <package>docbook-xsl</package> package and an XSLT processor "
"like <package>xsltproc</package> (recommended)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2168
msgid ""
"add the <tt>docbook-xsl</tt>, <tt>docbook-xml</tt> and <tt>xsltproc</tt> "
"packages to the <tt>Build-Depends</tt> line in the <tt>control</tt> file"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2180
#, no-wrap
msgid ""
"override_dh_auto_build:\n"
"        xsltproc --nonet \\\n"
"         --param make.year.ranges 1 \\\n"
"         --param make.single.year.ranges 1 \\\n"
"         --param man.charmap.use.subset 0 \\\n"
"         -o debian/ \\\n"
"  /usr/share/xml/docbook/stylesheet/nwalsh/manpages/docbook.xsl \\\n"
"        debian/gentoo.1.xml\n"
"        dh_auto_build"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2184
msgid "<file><var>package</var>.manpages</file> files"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2188
msgid ""
"If your package has manual pages, you should install them using <manref "
"section=\"1\" name=\"dh_installman\"> by listing them in the "
"<file><var>package</var>.manpages</file> files."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2190
msgid "<file>menu</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2195
msgid ""
"X Window System users usually have a window manager with a menu that can be "
"customized to launch programs. If they have installed the Debian "
"<package>menu</package> package, a set of menus for every program on the "
"system will be created for them."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2197
msgid ""
"Here's the default <file>menu.ex</file> file that <prgn>dh_make</prgn> "
"created:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2202
#, no-wrap
msgid ""
"?package(gentoo):needs=\"X11|text|vc|wm\" \\\n"
"        section=\"Applications/see-menu-manual\"\\\n"
"        title=\"gentoo\" command=\"/usr/bin/gentoo\""
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2207
msgid ""
"The first field after the colon character is <tt>needs</tt>, and it "
"specifies what kind of interface the program needs. Change this to one of "
"the listed alternatives, e.g. <tt>text</tt> or <tt>X11</tt>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2212
msgid ""
"The next is <tt>section</tt>, where the menu and submenu the entry should "
"appear in. The current list of sections <footnote><p>There were a major "
"reorganization of menu structure for <tt>squeeze</tt>.</p></footnote> is at: "
"<file>/usr/share/doc/debian-policy/menu-policy.html/ch2.html#s2.1</file>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2215
msgid ""
"The <tt>title</tt> field is the name of the program. You can start this one "
"in uppercase if you like. Just keep it short."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2217
msgid "Finally, the <tt>command</tt> field is the command that runs the program."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2220
msgid ""
"Let's change the file name to <file>menu</file> and change the menu entry to "
"this:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2224
#, no-wrap
msgid ""
"?package(gentoo): needs=\"X11\" \\\n"
"        section=\"Applications/Tools\" \\\n"
"        title=\"Gentoo\" command=\"gentoo\""
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2231
msgid ""
"You can also add other fields like <tt>longtitle</tt>, <tt>icon</tt>, "
"<tt>hints</tt> etc. See <manref section=\"1\" name=\"dh_installmenu\">, "
"<manref section=\"5\" name=\"menufile\">, <manref section=\"1\" "
"name=\"update-menus\"> and "
"<file>/usr/share/doc/debian-policy/menu-policy.html/</file> for more "
"information."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2233
msgid "<file>NEWS</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2235
msgid ""
"The <manref section=\"1\" name=\"dh_installchangelogs\"> command installs "
"this."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2237
msgid "<file>{post|pre}{inst|rm}</file> files"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2247
msgid ""
"These <file>postinst</file>, <file>preinst</file>, <file>postrm</file>, and "
"<file>prerm</file> files <footnote><p>Although I used Bash short hand "
"expression to indicate these files as \"<file>{post|pre}{inst|rm}</file>\" "
"here, I recommend you to use pure POSIX (non-Bash) shell for these "
"<em>maintainer scripts</em> as much as possible for the better "
"compatibility.</p></footnote> are called <em>maintainer scripts</em>. They "
"are scripts which are put in the control area of the package and run by "
"<prgn>dpkg</prgn> when your package is installed, upgraded or removed."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2253
msgid ""
"As a novice maintainer, you should avoid any manual editing of "
"<em>maintainer scripts</em> because they are problematic. For more "
"information look in the <url "
"id=\"http://www.debian.org/doc/debian-policy/ch-maintainerscripts.html\" "
"name=\"Debian Policy Manual, 6 'Package maintainer scripts and installation "
"procedure'\">, and take a look at these example files provided by "
"<prgn>dh_make</prgn>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2258
msgid ""
"If you did not listen to me and made your custom <em>maintainer scripts</em> "
"for a package, you should make sure to test them not only for "
"<strong>install</strong> and <strong>upgrade</strong> but also for "
"<strong>remove</strong> and <strong>purge</strong>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2262
msgid ""
"Upgrades to the new version should be silent and non-intrusive (existing "
"users should not notice the upgrade except by discovering that old bugs have "
"been fixed and there perhaps are new features)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2270
msgid ""
"When the upgrade is necessarily intrusive (eg., config files scattered "
"through various home directories with totally different structure), you may "
"consider to set package to the safe default (e.g., disabled service) and "
"provide proper documentations required by the policy "
"(<file>README.Debian</file> and <file>NEWS.Debian</file>) as the last "
"resort. Don't bother user with the <prgn>debconf</prgn> note invoked from "
"these <em>maintainer scripts</em> for upgrades."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2275
msgid ""
"The <package>ucf</package> package provides <em>conffile-like</em> handling "
"infrastructure to preserve user changes for files that may not be labeled "
"<em>conffiles</em> such as ones managed by the <em>maintainer "
"scripts</em>. This should minimize issues associated with them."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2279
msgid ""
"These <em>maintainer scripts</em> are the Debian enhancements that explain "
"<strong>why people choose Debian</strong>. You must be very careful not to "
"annoy them with these."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2280
msgid "<file>TODO</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2282
msgid "The <manref section=\"1\" name=\"dh_installdocs\"> command installs this."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2284
msgid "<file>watch</file> file"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2291
msgid ""
"The <file>watch</file> file format is documented in the <manref "
"section=\"1\" name=\"uscan\"> manpage. The <file>watch</file> file "
"configures the <prgn>uscan</prgn> program (in the "
"<package>devscripts</package> package) to watch the site where you "
"originally got the source from. This is also used by <url "
"id=\"http://wiki.debian.org/DEHS\" name=\"Debian External Health Status "
"(DEHS)\">."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2294
msgid "Here's what I put in it:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2298
#, no-wrap
msgid ""
"# watch control file for uscan\n"
"version=3\n"
"http://sf.net/gentoo/gentoo-(.*)\\.tar\\.gz debian uupdate"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2308
msgid ""
"Normally with this <file>watch</file> file, the URL at "
"\"<tt>http://sf.net/gentoo</tt>\" is downloaded and searched for links of "
"the form \"<tt>&lt;a href=...&gt;</tt>\". The base name (just the part after "
"the final \"<tt>/</tt>\") of these linked URLs are matched against Perl "
"regexp (see <manref section=\"1\" name=\"perlre\">) pattern "
"\"<tt>gentoo-(.*)\\.tar\\.gz</tt>\". Out of matched files, the file with the "
"greatest version number is downloaded and the <prgn>uupdate</prgn> program "
"is run to create the updated source tree from them."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2319
msgid ""
"Although this is true for other sites, the SourceForge download service at "
"<url id=\"http://sf.net\"> is an exception. When the <file>watch</file> file "
"has an URL matching with the Perl regexp \"<tt>^http://sf\\.net/</tt>\", the "
"<prgn>uscan</prgn> program substitutes it with "
"\"<tt>http://qa.debian.org/watch/sf.php/</tt>\" and then applies this "
"rule. The URL redirector service at this <url id=\"http://qa.debian.org/\"> "
"is designed to offer a stable redirect service to the desired file for the "
"<file>watch</file> file having "
"\"<tt>http://sf.net/<var>project</var>/<var>tar-name</var>-(.+)\\.tar\\.gz</tt>\". "
"This solves issues related to the periodically changing URL there."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2321
msgid "<file>source/format</file> file"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2325
msgid ""
"In the <file>debian/source/format</file> file, there should be a single line "
"indicating the desired format for the source package (check <manref "
"section=\"1\" name=\"dpkg-source\"> for an exhaustive list). After "
"<tt>squeeze</tt>, it should say either:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2327
msgid "<tt>3.0 (native)</tt> for Debian native packages or"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2328
msgid "<tt>3.0 (quilt)</tt> for everything else."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2345
msgid ""
"The newer <tt>3.0 (quilt)</tt> source format records modifications in a "
"<prgn>quilt</prgn> patch series within <file>debian/patches</file>. Those "
"changes are then automatically applied during extraction of the source "
"package. <footnote><p>See <url "
"id=\"http://wiki.debian.org/Projects/DebSrc3.0\" name=\"DebSrc3.0\"> for the "
"summary information concerning the switch to the new <tt>3.0 (quilt)</tt> "
"and <tt>3.0 (native)</tt> source formats.</p></footnote> The Debian "
"modifications are simply stored in a <file>debian.tar.gz</file> archive "
"containing all files under the <file>debian</file> directory. This new "
"format supports inclusion of binary files such as PNG icons by the package "
"maintainer without requiring tricks. <footnote><p>Actually, this new format "
"also supports multiple upstream tarballs and more compression methods. These "
"are beyond the scope of this document.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2351
msgid ""
"When <prgn>dpkg-source</prgn> extracts a source package in <tt>3.0 "
"(quilt)</tt> source format, it automatically applies all patches listed in "
"<file>debian/patches/series</file>. You can avoid applying patches at the "
"end of the extraction with the <tt>--skip-patches</tt> option."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2353
msgid "<file>patches/*</file> files"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2359
msgid ""
"The old <tt>1.0</tt> source format created a single large "
"<file>diff.gz</file> file which contains package maintenance files in "
"<file>debian</file> and patch files to the source. Such a package is a bit "
"cumbersome to inspect and understand for each source tree modification "
"later. This is not so nice."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2374
msgid ""
"The newer <tt>3.0 (quilt)</tt> source format stores patches in "
"<file>debian/patches/*</file> files using the <prgn>quilt</prgn> "
"command. These patches and other package data which are all constrained "
"under the <file>debian</file> directory are packaged as the "
"<file>debian.tar.gz</file> file. Since the <prgn>dpkg-source</prgn> command "
"can handle <prgn>quilt</prgn> formatted patch data in the <tt>3.0 "
"(quilt)</tt> source without the <package>quilt</package> package, it does "
"not need to <tt>Build-Depends:</tt> on the <package>quilt</package> "
"package. <footnote><p>Several methods for the patch set maintenance have "
"been proposed and are in use with Debian packages. The <prgn>quilt</prgn> "
"system is the preferred maintenance system in use. Other ones are "
"<prgn>dpatch</prgn>, <prgn>dbs</prgn>, <prgn>cdbs</prgn>, etc. Many of these "
"keep such patches as <file>debian/patches/*</file> files.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2385
msgid ""
"The <prgn>quilt</prgn> command is explained in <manref section=\"1\" "
"name=\"quilt\">. It records modifications to the source as a stack of "
"<tt>-p1</tt> patch files in the <file>debian/patches</file> directory and "
"the source tree is untouched outside of the <file>debian</file> "
"directory. The order of these patches are recorded in the "
"<file>debian/patches/series</file> file. You can apply (=push), un-apply "
"(=pop), and refresh patches easily. <footnote><p>If you are asking a sponsor "
"to upload your package, this kind of clear separation and documentation of "
"your changes are very important to expedite the package review by your "
"sponsor.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2387
msgid "For <ref id=\"first\">, we created 3 patches in <file>debian/patches</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2391
msgid ""
"Since Debian patches are located in <file>debian/patches</file>, please make "
"sure to setup the <prgn>quilt</prgn> command properly as described in <ref "
"id=\"quiltrc\">."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2395
msgid ""
"When someone (including yourself) provides you with a patch "
"<file><var>foo</var>.patch</file> to the source later, then the modification "
"of a <tt>3.0 (quilt)</tt> source package is quite simple:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2403
#, no-wrap
msgid ""
"$ dpkg-source -x gentoo_0.9.12.dsc\n"
"$ cd gentoo-0.9.12\n"
"$ quilt import ../<var>foo</var>.patch\n"
"$ quilt push\n"
"$ quilt refresh\n"
"$ quilt header -e\n"
"... describe patch"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2408
msgid ""
"The patches stored in the newer <tt>3.0 (quilt)</tt> source format must be "
"<em>fuzz</em> free. You should ensure it as \"<tt>quilt pop -a; while quilt "
"push; do quilt refresh; done</tt>\"."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2410
msgid "Building the package"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2412
msgid "We should now be ready to build the package."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2414
msgid "Complete (re)build"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2416
msgid ""
"In order to properly make complete (re)build of a package, you have to "
"ensure to install"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2418
msgid "the <package>build-essential</package> package,"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2419
msgid ""
"packages listed in the <tt>Build-Depends:</tt> field (see <ref "
"id=\"control\">), and"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2420
msgid ""
"packages listed in the <tt>Build-Depends-indep:</tt> field (see <ref "
"id=\"control\">)."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2425
msgid "Then you issue the following command in the source directory:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2427
#, no-wrap
msgid "$ dpkg-buildpackage"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2429
msgid ""
"This will do everything to make full binary and source packages for you. It "
"will:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2431 maint-guide.en.sgml:2531
msgid "clean the source tree (\"<tt>debian/rules clean</tt>\")"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2432
msgid "build the source package (\"<tt>dpkg-source -b</tt>\")"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2433 maint-guide.en.sgml:2532
msgid "build the program (\"<tt>debian/rules build</tt>\")"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2434
msgid "build binary packages (\"<tt>fakeroot debian/rules binary</tt>\")"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2435 maint-guide.en.sgml:2534
msgid "sign the source <file>.dsc</file> file, using <prgn>gpg</prgn>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2437 maint-guide.en.sgml:2536
msgid ""
"create and sign the upload <file>.changes</file> file, using "
"<prgn>dpkg-genchanges</prgn> and <prgn>gpg</prgn>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2442
msgid ""
"The only input that will be required of you is your GPG secret pass phrase, "
"twice."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2445
msgid ""
"After all this is done, you will see the following files in the directory "
"above (<file>~/gentoo</file>):"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2448
msgid "<file>gentoo_0.9.12.orig.tar.gz</file>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2452
msgid ""
"This is the original source code tarball, merely renamed to the above so "
"that it adheres to the Debian standard. Note that this was created initially "
"by the \"<tt>dh_make -f ../gentoo-0.9.12.tar.gz</tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2454
msgid "<file>gentoo_0.9.12-1.dsc</file>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2459
msgid ""
"This is a summary of the contents of the source code. The file is generated "
"from your <file>control</file> file, and is used when unpacking the source "
"with <manref section=\"1\" name=\"dpkg-source\">. This file is GPG signed, "
"so that people can be sure that it's really yours."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2461
msgid "<file>gentoo_0.9.12-1.debian.tar.gz</file>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2465
msgid ""
"This compressed tarball contains your <file>debian</file> directory "
"contents. Each and every addition you made to the original source code are "
"stored as quilt patches in <file>debian/patches</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2474
msgid ""
"If someone else wants to re-create your package from scratch, they can "
"easily do so using the above three files. The extraction procedure is "
"trivial: just copy the three files somewhere else and run \"<tt>dpkg-source "
"-x gentoo_0.9.12-1.dsc</tt>\". <footnote><p>You can avoid applying "
"<prgn>quilt</prgn> patches in the <tt>3.0 (quilt)</tt> source format at the "
"end of the extraction with the <tt>--skip-patches</tt> "
"option. Alternatively, you can run \"<tt>quilt pop -a</tt>\" after normal "
"operation.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2476
msgid "<file>gentoo_0.9.12-1_i386.deb</file>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2479
msgid ""
"This is your completed binary package. You can use <prgn>dpkg</prgn> to "
"install and remove this just like any other package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2481
msgid "<file>gentoo_0.9.12-1_i386.changes</file>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2487
msgid ""
"This file describes all the changes made in the current package revision, "
"and it is used by the Debian FTP archive maintenance programs to install the "
"binary and source packages in it. It is partly generated from the "
"<file>changelog</file> file and the <file>.dsc</file> file. This file is GPG "
"signed, so that people can be sure that it's really yours."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2493
msgid ""
"As you keep working on the package, behavior will change and new features "
"will be added. People downloading your package can look at this file and "
"quickly see what has changed. Debian archive maintenance programs will also "
"post the contents of this file to the <url "
"id=\"http://lists.debian.org/debian-devel-announce/\" "
"name=\"debian-devel-announce@lists.debian.org\"> mailing list."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2502
msgid ""
"The long strings of numbers in the <file>.dsc</file> and "
"<file>.changes</file> files are MD5/SHA1/SHA256 checksums for the files "
"mentioned. A person downloading your files can test them with <manref "
"section=\"1\" name=\"md5sum\">, <manref section=\"1\" name=\"sha1sum\">, or "
"<manref section=\"1\" name=\"sha256sum\"> and if the numbers don't match, "
"they'll know the file is corrupt or has been tampered with."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2504
msgid "Autobuilder"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2514
msgid ""
"Debian supports many <url id=\"http://www.debian.org/ports/\" "
"name=\"ports\"> with the <url id=\"http://www.debian.org/devel/buildd/\" "
"name=\"autobuilder network\"> running <prgn>buildd</prgn> daemons on many "
"different architecture computers. Although you do not need to do this by "
"yourself, you should be aware of what will happen on your packages. Let's "
"look into roughly how your packages are rebuild for many different "
"architectures by them. <footnote><p>The actual autobuilder system involves "
"much more complicated schemes than the one documented here. Such details are "
"beyond the scope of this document.</p></footnote>"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2516
msgid ""
"For \"<tt>Architecture: any</tt>\" packages, the autobuilder system rebuild "
"them. It ensures to install"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2518
msgid "the <package>build-essential</package> package, and"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2519
msgid ""
"packages listed in the <tt>Build-Depends:</tt> field (see <ref "
"id=\"control\">)."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2524
msgid "Then it issues the following command in the source directory:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2526
#, no-wrap
msgid "$ dpkg-buildpackage -B"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2529
msgid ""
"This will do everything to make architecture dependent binary packages on "
"another architecture. It will:"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2533
msgid ""
"build architecture dependent binary packages (\"<tt>fakeroot debian/rules "
"binary-arch</tt>\")"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2540
msgid "This is why you see your package for other architectures."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2554
msgid ""
"Although packages listed in the <tt>Build-Depends-indep:</tt> field are "
"required to be installed for the normal packaging by us (see <ref "
"id=\"completebuild\">), they are not required to be installed for the "
"autobuilder system since it build only architecture dependent binary "
"packages. <footnote><p>Unlike under the <package>pbuilder</package> package, "
"the <prgn>chroot</prgn> environment under the <package>sbuild</package> "
"package used by the autobuilder system does not force the minimal system and "
"may leave many packages installed.</p></footnote> This difference between "
"normal packaging and autobuilder situation dictates whether you record such "
"required packages in the <tt>Build-Depends:</tt> or "
"<tt>Build-Depends-indep:</tt> fields of the <file>debian/control</file> file "
"(see <ref id=\"control\">)."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2556
msgid "Including <file>orig.tar.gz</file> for upload"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2564
msgid ""
"When you first upload the package to the archive, you need to include the "
"original <file>orig.tar.gz</file> source. If the last changelog entry is not "
"the first one for the given upstream version, you must provide "
"<prgn>dpkg-buildpackage</prgn> command with the \"<tt>-sa</tt>\" option. On "
"the other hand, the \"<tt>-sd</tt>\" option will force to exclude the "
"original <file>orig.tar.gz</file> source."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2566
msgid "<prgn>debuild</prgn> command"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2571
msgid ""
"You can automate package build process of the <prgn>dpkg-buildpackage</prgn> "
"command further with the <prgn>debuild</prgn> command. See <manref "
"section=\"1\" name=\"debuild\">."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2576
msgid ""
"Customization of the <prgn>debuild</prgn> command can be done through "
"<file>/etc/devscripts.conf</file> or <file>~/.devscripts</file>. I would "
"suggest at least following items:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2580
#, no-wrap
msgid ""
"DEBSIGN_KEYID=\"Your_GPG_keyID\"\n"
"DEBUILD_LINTIAN=yes\n"
"DEBUILD_LINTIAN_OPTS=\"-i -I --show-overrides\""
msgstr ""

#. type: </example></p>
#: maint-guide.en.sgml:2584
msgid ""
"With these, packages are signed by your specified GPG key ID (good for "
"sponsoring packages) and checked by the <prgn>lintian</prgn> command in "
"details."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2587
msgid "Cleaning source and rebuilding package from a user account is as simple as:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2589
#, no-wrap
msgid "$ debuild"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2593 maint-guide.en.sgml:2649 maint-guide.en.sgml:2667
msgid ""
"Please note that the <prgn>dpkg-buildpackage</prgn> option \"<tt>-sa</tt>\" "
"to include the original <file>orig.tar.gz</file> source can be specified as:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2595
#, no-wrap
msgid "$ debuild -sa"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2598
msgid "You can clean source tree as simple as:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2600
#, no-wrap
msgid "$ debuild clean"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2602
msgid "<package>pbuilder</package> package"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2614
msgid ""
"For a clean room (<prgn>chroot</prgn>) build environment to verify the build "
"dependencies, the <package>pbuilder</package> package is very "
"useful. <footnote><p>Since the <package>pbuilder</package> package is still "
"evolving, you have to check the actual configuration situation by consulting "
"the latest official documentation.</p></footnote> This ensures a clean build "
"from the source under the <tt>sid</tt> auto-builder for different "
"architectures and avoids the severity serious FTBFS (Fails To Build From "
"Source) bug which is always in the RC (release critical) category. See <url "
"id=\"&buildd-home;\"> for more on the Debian package auto-builder."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2615
msgid "Let's customize the <package>pbuilder</package> package by the following."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2618
msgid ""
"setting <file>/var/cache/pbuilder/result</file> directory writable by the "
"user."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2620
msgid ""
"creating a directory, "
"e.g. <file><var>/var/cache/pbuilder/hooks</var></file>, writable by the user "
"to place hook scripts."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2622
msgid ""
"setting <file>~/.pbuilderrc</file> or <file>/etc/pbuilderrc</file> to "
"include as follows."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2625
#, no-wrap
msgid ""
"AUTO_DEBSIGN=yes\n"
"HOOKDIR=\"<var>/var/cache/pbuilder/hooks</var>\""
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2631
msgid ""
"This will allow you to sign generated packages with your secret GPG key in "
"the <file>~/.gnupg/</file> directory."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2633
msgid ""
"Let's then initialize the local <package>pbuilder</package> "
"<prgn>chroot</prgn> system first as follows."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2635
#, no-wrap
msgid "$ sudo pbuilder create"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2642
msgid ""
"If you already have the completed source packages, issue the following "
"commands in the directory where the <file><var>foo</var>.orig.tar.gz</file>, "
"<file><var>foo</var>.debian.tar.gz</file>, and "
"<file><var>foo</var>.dsc</file> files exist to update the local "
"<package>pbuilder</package> <prgn>chroot</prgn> system and to build binary "
"packages in it."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2645
#, no-wrap
msgid ""
"$ sudo pbuilder --update\n"
"$ sudo pbuilder --build <var>foo</var>.dsc"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2651
#, no-wrap
msgid "$ sudo pbuilder --build --debbuildopts \"-sa\" <var>foo</var>.dsc"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2657
msgid ""
"The newly built packages will be located in "
"<file>/var/cache/pbuilder/result/</file> with non-root ownership."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2660
msgid ""
"If you already have the updated source tree without generating the matching "
"source packages, issue the following commands in the source directory where "
"the <file>debian</file> directory exists, instead."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2663
#, no-wrap
msgid ""
"$ sudo pbuilder --update\n"
"$ pdebuild"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2669
#, no-wrap
msgid "$ pdebuild --debbuildopts \"-sa\""
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2676
msgid ""
"You can log into its <prgn>chroot</prgn> environment with the \"<tt>pbuilder "
"--login --save-after-login</tt>\" command and configure it as you wish. This "
"environment can be saved by leaving its shell prompt with <tt>^D</tt> "
"(Control-D)."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2681
msgid ""
"The latest version of the <prgn>lintian</prgn> command can be executed in "
"the <tt>chroot</tt> environment using the hook script configured as "
"follows. <footnote><p>This assumes "
"<tt>HOOKDIR=\"/var/cache/pbuilder/hooks\"</tt>. You can find many examples "
"of the hook script in the <file>/usr/share/doc/pbuilder/examples</file> "
"directory.</p></footnote>"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2695
#, no-wrap
msgid ""
"$ cat &gt; <var>/var/cache/pbuilder/hooks</var>/B90lintian &lt;&lt;EOF\n"
"#!/bin/sh\n"
"set -e\n"
"install_packages() {\n"
"    apt-get -y --force-yes install \"$@\"\n"
"    }\n"
"install_packages lintian\n"
"echo \"+++ lintian output +++\"\n"
"su -c \"lintian -i -I --show-overrides /tmp/buildd/*.changes\" - pbuilder\n"
"# use this version if you don't want lintian to fail the build\n"
"#su -c \"lintian -i -I --show-overrides /tmp/buildd/*.changes; :\" - "
"pbuilder\n"
"echo \"+++ end of lintian output +++\"\n"
"EOF"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2702
msgid ""
"You need to have access to the latest <tt>sid</tt> environment to build "
"packages properly for <tt>sid</tt>. In reality, <tt>sid</tt> may be "
"experiencing issues which makes it not desirable for you to migrate your "
"whole system. The <package>pbuilder</package> package can help you to cope "
"with this kind of situation."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2712
msgid ""
"You may need to update your <tt>stable</tt> packages after their release for "
"<tt>stable-proposed-updates</tt>, <tt>stable/updates</tt>, "
"etc. <footnote><p>There are some restrictions for such updates of your "
"<tt>stable</tt> package.</p></footnote> For such occasions, \"I am running "
"<tt>sid</tt> system\" is not good enough excuse not to update them "
"promptly. The <package>pbuilder</package> package can help you to access "
"environments of almost any Debian derivative distributions of the same CPU "
"architecture."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2717
msgid ""
"See <url id=\"&pbuilder-home;\">, <manref section=\"1\" name=\"pdebuild\">, "
"<manref section=\"5\" name=\"pbuilderrc\">, and <manref section=\"8\" "
"name=\"pbuilder\">."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2719
msgid "<prgn>git-buildpackage</prgn> command and similars"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2725
msgid ""
"If your upstream uses the source code management system (<url "
"id=\"http://www.debian.org/doc/manuals/debian-reference/ch10.en.html#_version_control_systems\" "
"name=\"VCS\">) to maintain their code, you should consider to use them. That "
"makes merging and cherry-picking upstream patches much easier. There are "
"several specialized wrapper script packages for the Debian package building "
"for each VCS."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2727
msgid ""
"<package>git-buildpackage</package>: Suite to help with Debian packages in "
"Git repositories."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2728
msgid "<package>topgit</package>: a Git patch queue manager"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2729
msgid ""
"<package>svn-buildpackage</package>: helper programs to maintain Debian "
"packages with Subversion."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2730
msgid ""
"<package>cvs-buildpackage</package>: A set of Debian package scripts for CVS "
"source trees."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2744
msgid ""
"These packages offer more elegant working environment than manual use of the "
"<prgn>quilt</prgn> commands for advanced audiences to <em>automate</em> "
"building of packages. I will not explain them in this "
"tutorial. <footnote><p>Here are few web resources available for advanced "
"audiences. <list><item><p>\"<url "
"id=\"https://honk.sigxcpu.org/piki/development/debian_packages_in_git/\" "
"name=\"debian packages in git\">\"</p></item><item><p>\"<url "
"id=\"http://www.eyrie.org/~eagle/notes/debian/git.html\" name=\"Using Git "
"for Debian Packaging\">\"</p></item><item><p>\"<url "
"id=\"http://git.debian.org/?p=collab-maint/topgit.git;a=blob_plain;f=debian/HOWTO-tg2quilt;hb=HEAD\" "
"name=\"Using TopGit to generate quilt series for Debian "
"packaging\">\"</p></item><item><p>\"<url "
"id=\"http://git-dpm.alioth.debian.org/\" name=\"git-dpm: debian packages in "
"git manager\">\"</p></item></list></p></footnote>"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2746
msgid "Quick rebuild"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2755
msgid ""
"With a large package, you may not want to rebuild from scratch every time "
"while you tune details in <file>debian/rules</file>. For testing purposes, "
"you can make a <file>.deb</file> file without rebuilding the upstream "
"sources like this <footnote><p>Environment variables which are normally "
"configured to proper values are not set by this method. Never create real "
"packages to be uploaded using this <strong>quick</strong> "
"method.</p></footnote>:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2757
#, no-wrap
msgid "$ fakeroot debian/rules binary"
msgstr ""

#. type: </example><example>
#: maint-guide.en.sgml:2761
msgid "Or, simply as following to see if it build or not."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2763
#, no-wrap
msgid "$ fakeroot debian/rules build"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2769
msgid ""
"Once you are finished with your tuning, remember to rebuild following the "
"proper procedure. You may not be able to upload correctly if you try to "
"upload <file>.deb</file> files built this way."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2771
msgid "Checking the package for errors"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2774
msgid ""
"There are few chores you should know to check the package for errors by "
"yourself before uploading packages to public archives."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2777
msgid ""
"Testing on machine other than your own is also good idea. You must watch "
"closely for any warnings or errors for all the test described here."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2779
msgid "Verifying package for install"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2784
msgid ""
"You must test your package if it installs without problem. The <manref "
"section=\"1\" name=\"debi\"> command helps you to test to install all the "
"generated binary packages."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2786
#, no-wrap
msgid "$ sudo debi gentoo_0.9.12-1_i386.changes"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2797
msgid ""
"You have to make sure that there are no overlapped files with other existing "
"packages using the <file>Contents-<var>i386</var></file> file downloaded "
"from the Debian archive to prevent installation problem on different "
"systems. The <prgn>apt-file</prgn> command may be handy for this task. If "
"there are overlapped files, please take actions to avoid the real problem "
"using the alternatives mechanism (see <manref section=\"1\" "
"name=\"update-alternatives\">) by coordinating with other affected packages "
"or by setting the \"<tt>Conflicts:</tt>\" entry in the "
"<file>debian/control</file> file."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2799
msgid "Verifying package for <em>maintainer scripts</em>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2805
msgid ""
"All <em>maintainer scripts</em>, i.e., <file>preinst</file>, "
"<file>prerm</file>, <file>postinst</file>, and <file>postrm</file> files, "
"are non-trivial unless they are auto-generated by the "
"<package>debhelper</package> programs. So do not use them if you are a "
"novice maintainer (see <ref id=\"maintscripts\">)."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2811
msgid ""
"If the package makes use of these non-trivial <em>maintainer scripts</em>, "
"be sure to test not only for install but also for remove, purge, and "
"upgrade. Many <em>maintainer script</em> bugs show up when packages are "
"removed or purged. Use the <prgn>dpkg</prgn> command as follows to test "
"them."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2815
#, no-wrap
msgid ""
"$ sudo dpkg -r gentoo\n"
"$ sudo dpkg -P gentoo\n"
"$ sudo dpkg -i "
"gentoo_<var>version</var>-<var>revision</var>_<var>i386</var>.deb"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2818
msgid "This should be done with sequences such as the following."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2820
msgid "install the previous version (if needed)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2821
msgid "upgrade it from the previous version."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2822
msgid "downgrade it back to the previous version (optional)."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2823 maint-guide.en.sgml:2827
msgid "purge it."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2824
msgid "install the new package."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2825
msgid "remove it."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2826
msgid "install it again."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2833
msgid ""
"If this is your first package, you should create dummy packages with "
"different versions to test your package in advance to prevent future "
"problems."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2838
msgid ""
"Bear in mind that if your package has previously been released in Debian, "
"people will often be upgrading to your package from the version that was in "
"the last Debian release. Remember to test upgrades from that version too."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2841
msgid ""
"Although downgrade is not officially supported, it should be nice to support "
"it."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2843
msgid "<package>lintian</package> package"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2851
msgid ""
"Run <manref section=\"1\" name=\"lintian\"> on your <file>.changes</file> "
"file. The <prgn>lintian</prgn> command runs many test scripts to check for "
"many common packaging errors. <footnote><p>You do not need to provide the "
"<prgn>lintian</prgn> option \"<tt>-i -I --show-overrides</tt>\" if you "
"customized <file>/etc/devscripts.conf</file> or <file>~/.devscripts</file> "
"as described in <ref id=\"debuild\">. </p></footnote>"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2854
#, no-wrap
msgid "$ lintian -i -I --show-overrides gentoo_0.9.12-1_i386.changes"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:2858
msgid ""
"Of course, replace the filename with the name of the <file>.changes</file> "
"file generated for your package. The output of the <prgn>lintian</prgn> "
"command are marked as follows."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2860
msgid "<tt>E:</tt> for error; a sure policy violation or a packaging error."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2861
msgid "<tt>W:</tt> for warning; a possible policy violation or a packaging error."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2862
msgid "<tt>I:</tt> for info; a information on certain packaging aspects."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2863
msgid "<tt>N:</tt> for note; a detailed message to help your debugging."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2865
msgid ""
"<tt>O:</tt> for overridden; a message overridden by the "
"<file>lintian-overrides</file> files but displayed by the "
"<tt>--show-overrides</tt> option."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2871
msgid ""
"For warnings, tune the package to avoid them or verify that the warnings are "
"spurious. If spurious, set the <file>lintian-overrides</file> files as "
"described in <ref id=\"lintian\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2875
msgid ""
"Note that you can build the package with <prgn>dpkg-buildpackage</prgn> and "
"run <prgn>lintian</prgn> on it in one command with <manref section=\"1\" "
"name=\"debuild\"> or with <manref section=\"1\" name=\"pdebuild\">."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2877
msgid "<prgn>debc</prgn> command"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2881
msgid ""
"You can list files in the binary Debian package by <manref section=\"1\" "
"name=\"debc\"> command."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2883
#, no-wrap
msgid "$ debc <var>package</var>.changes"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2886
msgid "<prgn>debdiff</prgn> command"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2890
msgid ""
"You can compare file contents in two source Debian packages with the <manref "
"section=\"1\" name=\"debdiff\"> command."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2892
#, no-wrap
msgid "$ debdiff <var>old-package</var>.dsc <var>new-package</var>.dsc"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2897
msgid ""
"You can also compare file lists in two sets of binary Debian packages with "
"the <manref section=\"1\" name=\"debdiff\"> command."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2899
#, no-wrap
msgid "$ debdiff <var>old-package</var>.changes <var>new-package</var>.changes"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2904
msgid ""
"These are useful to identify what has been changed in the source packages, "
"if no files have been unintentionally misplaced or removed in the binary "
"packages, and if no other inadvertent changes were made when updating binary "
"packages."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2906
msgid "<prgn>interdiff</prgn> command"
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2912
msgid ""
"You can compare two <file>diff.gz</file> files with the <manref "
"section=\"1\" name=\"interdiff\"> command. This is useful for verifying that "
"no inadvertent changes were made to the source by the maintainer when "
"updating packages in the old <tt>1.0</tt> source format."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2914
#, no-wrap
msgid "$ interdiff -z <var>old-package</var>.diff.gz <var>new-package</var>.diff.gz"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2917
msgid "<prgn>mc</prgn> command"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2922
msgid ""
"Many of these file inspection operations can be made into an intuitive "
"process by using a file manager like <manref section=\"1\" name=\"mc\"> "
"which will let you browse not only the contents of <file>*.deb</file> "
"package files but also <file>*.udeb</file>, <file>*.debian.tar.gz</file>, "
"<file>*.diff.gz</file>, and <file>*.orig.tar.gz</file> files."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2927
msgid ""
"Be on the lookout for extra unneeded files or zero length files, both in the "
"binary and source package. Often cruft doesn't get cleaned up properly; "
"adjust your <file>rules</file> file to compensate for that."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2929
msgid "Uploading the package"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2933
msgid ""
"Now that you have tested your new package thoroughly, you will be "
"technically ready to start the Debian new maintainer application process, as "
"described at <url id=\"http://www.debian.org/devel/join/newmaint\">"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:2935
msgid "Uploading to the Debian archive"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2948
msgid ""
"Once you become an official developer, you'll need to upload the package to "
"the Debian archive. You can do this manually, but it's easier to use the "
"provided automated tools, like <manref section=\"1\" name=\"dupload\"> or "
"<manref section=\"1\" name=\"dput\">. We'll describe how it's done with "
"<prgn>dupload</prgn>. <footnote><p>The <package>dput</package> package seems "
"to come with more features and becoming more popular than the "
"<package>dupload</package> package. It uses the <file>/etc/dput</file> file "
"for the global configuration and the <file>~/.dput.cf</file> file for the "
"per-user one. It supports Ubuntu related services out-of-box, "
"too. </p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2953
msgid ""
"First you have to set up <prgn>dupload</prgn>'s config file. You can either "
"edit the system-wide <file>/etc/dupload.conf</file> file, or have your own "
"<file>~/.dupload.conf</file> file override the few things you want to "
"change."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2956
msgid ""
"You can read the <manref section=\"5\" name=\"dupload.conf\"> manual page to "
"understand what each of these options means."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2960
msgid ""
"The <tt>$default_host</tt> option determines which of the upload queues will "
"be used by default. <tt>anonymous-ftp-master</tt> is the primary one, but "
"it's possible that you will want to use another one."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2962
msgid ""
"While connected to the Internet, you can upload your package by the "
"following:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:2965
#, no-wrap
msgid "$ dupload gentoo_0.9.12-1_i386.changes"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:2975
msgid ""
"<prgn>dupload</prgn> checks that the MD5/SHA1/SHA256 checksums of the files "
"match those from the <file>.changes</file> file, so it will warn you to "
"rebuild it as described in <ref id=\"completebuild\"> so it can properly "
"upload."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:2984
msgid ""
"If you encounter an upload problem at <url id=\"&ftp-uploadqueue;\">, you "
"can fix this by manually uploading GPG signed <file>*.commands</file> file "
"to there with <prgn>ftp</prgn>. <footnote><p>See <url "
"id=\"&ftp-command;\">. Alternatively, you may use <prgn>dcut</prgn> command "
"from the <package>dput</package> package. </p></footnote> For example, use "
"<file>hello.commands</file>:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3001
#, no-wrap
msgid ""
"-----BEGIN PGP SIGNED MESSAGE-----\n"
"\n"
"Uploader: Foo Bar &lt;Foo.Bar@example.org&gt;\n"
"Commands: \n"
" rm hello_1.0-1_i386.deb\n"
" mv hello_1.0-1.dsx hello_1.0-1.dsc\n"
"\n"
"-----BEGIN PGP SIGNATURE-----\n"
"Version: 2.6.3ia\n"
"\n"
"iQCVAwUBNFiQSXVhJ0HiWnvJAQG58AP+IDJVeSWmDvzMUphScg1EK0mvChgnuD7h\n"
"BRiVQubXkB2DphLJW5UUSRnjw1iuFcYwH/lFpNpl7XP95LkLX3iFza9qItw4k2/q\n"
"tvylZkmIA9jxCyv/YB6zZCbHmbvUnL473eLRoxlnYZd3JFaCZMJ86B0Ph4GFNPAf\n"
"Z4jxNrgh7Bc=\n"
"=pH94\n"
"-----END PGP SIGNATURE-----"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3006
msgid ""
"See <url id=\"http://mentors.debian.net/cgi-bin/welcome\" "
"name=\"mentors.debian.net\"> for publically accessible upload area for "
"non-DD."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3011
msgid ""
"See <url "
"id=\"http://www.debian.org/doc/manuals/debian-reference/ch02.en.html#_small_public_package_archive\" "
"name=\"Debian Reference, 2.7.12. 'Small public package archive'\"> for an "
"example for creating a small public package archive compatible with the "
"modern secure APT system."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3013
msgid "Updating the package"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3015
msgid "Once you release a package, you need to update it soon."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3017
msgid "New Debian revision"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3021
msgid ""
"Let's say that a bug report was filed against your package as "
"<tt>#54321</tt>, and it describes a problem that you can solve. To create a "
"new Debian revision of the package, you need to:"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3023
msgid "If this is to be recorded as a new patch, do the following."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3025
msgid "\"<tt>quilt new <var>bugname.patch</var></tt>\" to set patch name."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3026
msgid "\"<tt>quilt add <var>buggy-file</var></tt>\" to declare file to be modified."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3027
msgid "Correct the problem in the package source for the upstream bug."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3028
msgid ""
"\"<tt>quilt refresh</tt>\" to record to "
"<file><var>bugname.patch</var></file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3029
msgid "\"<tt>quilt header -e</tt>\" to add its description."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3031
msgid "If this is to update an existing patch, do the following."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3033
msgid ""
"\"<tt>quilt pop <var>foo.patch</var></tt>\" to recall existing "
"<file><var>foo.patch</var></file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3034
msgid "Correct the problem in the old <file><var>foo.patch</var></file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3035
msgid "\"<tt>quilt refresh</tt>\" to update <file><var>foo.patch</var></file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3036
msgid "\"<tt>quilt header -e</tt>\" to update its description."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3037 maint-guide.en.sgml:3108
msgid ""
"\"<tt>while quilt push; do quilt refresh; done</tt>\" to apply all patches "
"while removing <em>fuzz</em>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3044
msgid ""
"Add a new revision at the top of the Debian <file>changelog</file> file, for "
"example with \"<tt>dch -i</tt>\", or explicitly with \"<tt>dch -v "
"<var>version</var>-<var>revision</var></tt>\" and then insert the comments "
"using your preferred editor. <footnote><p>To get the date in the required "
"format, use \"<tt>LANG=C date -R</tt>\".</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3050
msgid ""
"Include a short description of the bug and the solution in the changelog "
"entry, followed by \"<tt>Closes: #54321</tt>\". That way, the bug report "
"will be <em>automagically</em> closed by the archive maintenance software "
"the moment your package gets accepted in the Debian archive."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3053
msgid ""
"Repeat what you did in the above to fix more bugs while updating the Debian "
"<file>changelog</file> file with \"<tt>dch</tt>\" as needed."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3057
msgid ""
"Repeat what you did in <ref id=\"completebuild\">, <ref id=\"checkit\">, and "
"<ref id=\"upload\">. The difference is that this time, the original source "
"archive won't be included, as it hasn't been changed and it already exists "
"in the Debian archive."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3061
msgid "Inspection of the new upstream release"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3064
msgid ""
"When preparing packages of the new upstream release for the Debian archive, "
"you must check the new upstream release, first."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3068
msgid ""
"You start this by reading the upstream <file>changelog</file>, "
"<file>NEWS</file>, and whatever other documentations they may have released "
"with the new version."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:3071
msgid ""
"You then inspect changes between the old and new upstream sources as follow "
"to watch out for anything suspicious."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3073
#, no-wrap
msgid ""
"$ diff -urN <var>foo</var>-<var>oldversion</var> "
"<var>foo</var>-<var>newversion</var>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3081
msgid ""
"Changes to some auto-generated files by autotools such as "
"<file>missing</file>, <file>aclocal.m4</file>, <file>config.guess</file>, "
"<file>config.h.in</file>, <file>config.sub</file>, <file>configure</file>, "
"<file>depcomp</file>, <file>install-sh</file>, <file>ltmain.sh</file>, and "
"<file>Makefile.in</file> may be ignored. You may erase them before running "
"<prgn>diff</prgn> to the source for inspection."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3083
msgid "New upstream release"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3096
msgid ""
"If a package <package><var>foo</var></package> is properly packaged in the "
"newer <tt>3.0 (native)</tt> or <tt>3.0 (quilt)</tt> formats, packaging a new "
"upstream version is essentially moving the old <file>debian</file> directory "
"to the new source. This can be done by running \"<tt>tar xvzf "
"/<var>path</var>/<var>to</var>/<var>foo</var>_<var>oldversion</var>.debian.tar.gz</tt>\" "
"in the new untared source. <footnote><p>If a package "
"<package><var>foo</var></package> is packaged in the old <tt>1.0</tt> "
"format, this can be done by running \"<tt>zcat "
"/<var>path</var>/<var>to</var>/<var>foo</var>_<var>oldversion</var>.diff.gz|patch "
"-p1</tt>\" in the new un-tared source, instead. </p></footnote> Of course, "
"you need to do few obvious chores."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3098
msgid ""
"Create a copy of upstream source as the "
"<file>foo_<var>newversion</var>.tar.gz</file> file."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3100
msgid ""
"Update the Debian <file>changelog</file> file with \"<tt>dch -v "
"<var>newversion</var>-<var>1</var></tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3102
msgid "Add an entry with \"New upstream release\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3104
msgid ""
"Describe concisely the changes <em>in the new upstream release</em> that fix "
"reported bugs and close those bugs."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3106
msgid ""
"Describe concisely the changes <em>to the new upstream release</em> by the "
"maintainer that fix reported bugs and close those bugs."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3112
msgid ""
"If the patch/merge did not apply cleanly, inspect the situation (clues are "
"left in <file>.rej</file> files)."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3114
msgid "If a patch you applied to the source was integrated to the upstream source,"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3116
msgid "\"<tt>quilt delete</tt>\" to remove it."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3118
msgid ""
"If a patch you applied to the source conflicted with new changes in the "
"upstream source,"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3121
msgid ""
"\"<tt>quilt push -f</tt>\" to apply old patches while forcing rejects as "
"<file><var>baz</var>.rej</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3123
msgid ""
"Edit the <file><var>baz</var></file> file manually to realize intended "
"effect of <file><var>baz</var>.rej</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3124
msgid "\"<tt>quilt refresh</tt>\" to update the patch."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3126
msgid "Continue back to \"<tt>while quilt push; do quilt refresh; done</tt>\"."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:3130
msgid ""
"This process can be automated using the <manref section=\"1\" "
"name=\"uupdate\"> command as follows:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3148
#, no-wrap
msgid ""
"$ apt-get source <var>foo</var>\n"
"...\n"
"dpkg-source: info: extracting <var>foo</var> in "
"<var>foo</var>-<var>oldversion</var>\n"
"dpkg-source: info: unpacking "
"<var>foo</var>_<var>oldversion</var>.orig.tar.gz\n"
"dpkg-source: info: applying "
"<var>foo</var>_<var>oldversion</var>-1.debian.tar.gz\n"
"$ ls -F\n"
"<var>foo</var>-<var>oldversion</var>/\n"
"<var>foo</var>_<var>oldversion</var>-1.debian.tar.gz\n"
"<var>foo</var>_<var>oldversion</var>-1.dsc\n"
"<var>foo</var>_<var>oldversion</var>.orig.tar.gz\n"
"$ wget "
"http://example.org/<var>foo</var>/<var>foo</var>-<var>newversion</var>.tar.gz\n"
"$ cd <var>foo</var>-<var>oldversion</var>\n"
"$ uupdate -v <var>newversion</var> "
"../<var>foo</var>-<var>newversion</var>.tar.gz\n"
"$ cd ../<var>foo</var>-<var>newversion</var>\n"
"$ while quilt push; do quilt refresh; done\n"
"$ dch\n"
"... document changes made"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3160
msgid ""
"If you set up a <file>debian/watch</file> file as described in <ref "
"id=\"watch\">, you can skip the <prgn>wget</prgn> command. You simply run "
"<manref section=\"1\" name=\"uscan\"> in the "
"<file><var>foo</var>-<var>oldversion</var></file> directory instead of the "
"<prgn>uupdate</prgn> command. This will <em>automagically</em> look for the "
"updated source, download it, and run the <prgn>uupdate</prgn> "
"command. <footnote><p>If the <prgn>uscan</prgn> command download the updated "
"source does not run the <prgn>uupdate</prgn> command, correct the "
"<file>debian/watch</file> file to have \"<tt>debian uupdate</tt>\" at the "
"end of the URL. </p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3163
msgid ""
"You can release this updated source by repeating what you did in <ref "
"id=\"completebuild\">, <ref id=\"checkit\">, and <ref id=\"upload\">."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3165
msgid "Updating the packaging style"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3174
msgid ""
"Updating the package style is not a required activity for the update of a "
"package. But, you can use the full capability of the modern "
"<package>debhelper</package> system and the <tt>3.0</tt> source format by "
"doing this. <footnote><p>If your sponsor or other maintainers object to "
"updating the existing packaging style, it is not worth bothering nor "
"arguing. There are more important things to do.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3179
msgid ""
"If you need to add erased template files for any reason, you may run "
"<prgn>dh_make</prgn> again in the same, already <em>debianized</em>, "
"directory with <tt>--addmissing</tt> option. Then edit it properly."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3183
msgid ""
"If the package has not updated to use the <package>debhelper</package> V7 "
"<prgn>dh</prgn> syntax for the <file>debian/rules</file> file, update it to "
"use <prgn>dh</prgn>. Update the <file>debian/control</file> file "
"accordingly."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3194
msgid ""
"If you want to update the <file>rules</file> file created with the makefile "
"inclusion mechanism of the Common Debian Build System "
"(<package>cdbs</package>) to the <prgn>dh</prgn> syntax, see "
"<file>/usr/share/doc/cdbs/cdbs-doc.html</file> and understand its "
"<tt>DEB_*</tt> configuration variables. <footnote><p>In the "
"<package>cdbs</package> (0.4.74) package, there are some negative "
"descriptions of the <file>rules</file> file created by the "
"<prgn>dh_make</prgn> command for the non-<package>cdbs</package> choices. Do "
"not worry about it. It applies only for <tt>lenny</tt> which created "
"explicit targets with long list of <prgn>dh_*</prgn> "
"commands.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3200
msgid ""
"If you have a <tt>1.0</tt> source package without the "
"<file><var>foo</var>.diff.gz</file> file, you can update it to the newer "
"<tt>3.0 (native)</tt> source format by creating "
"<file>debian/source/format</file> with \"<tt>3.0 (native)</tt>\". The rest "
"of <file>debian/*</file> files can be just copied."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3211
msgid ""
"If you have a <tt>1.0</tt> source package with the "
"<file><var>foo</var>.diff.gz</file> file, you can update it to the newer "
"<tt>3.0 (native)</tt> source format by creating "
"<file>debian/source/format</file> with \"<tt>3.0 (quilt)</tt>\". The rest of "
"<file>debian/*</file> files can be just copied. Import the "
"<file>big.diff</file> file generated by the \"<tt>filterdiff -z -x "
"'*/debian/*' <var>foo</var>.diff.gz &gt; big.diff</tt>\" command to your "
"<prgn>quilt</prgn> system, if needed. <footnote><p>You may split "
"<file>big.diff</file> into many small incremental patches using the "
"<prgn>splitdiff</prgn> command.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3215
msgid ""
"If it was packaged with the <package>dpatch</package> command, convert it to "
"the <package>quilt</package> command using "
"<file>/usr/share/doc/quilt/examples/dpatch2quilt.sh</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3221
msgid ""
"If it was packaged with the <prgn>dh</prgn> command with the \"<tt>--with "
"quilt</tt>\" option or with the <prgn>dh_quilt_patch</prgn> and "
"<prgn>dh_quilt_unpatch</prgn> commands, remove such things and make it use "
"the newer <tt>3.0 (native)</tt> source format."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3224
msgid "You need to do other tasks described in <ref id=\"newupstream\">, too."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3226
msgid "Reminders for updating packages"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3228
msgid "Here are few reminders for updating packages."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3234
msgid ""
"Preserve old changelog entries (sounds obvious, but there have been "
"incidents to type \"<tt>dch</tt>\" when you should have typed \"<tt>dch "
"-i</tt>\".)"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3239
msgid ""
"Existing Debian changes need to be reevaluated; throw away stuff that "
"upstream has incorporated (in one form or another) and remember to keep "
"stuff that hasn't been incorporated by upstream, unless there is a "
"compelling reason not to."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3243
msgid ""
"If any changes were made to the build system (hopefully you'd know from "
"inspecting upstream changes) then update the <file>debian/rules</file> and "
"<file>debian/control</file> build dependencies if necessary."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3247
msgid ""
"Check to see <url id=\"http://www.debian.org/Bugs/\" name=\"Debian Bug "
"Tracking System (BTS)\"> if someone have provided patches to bugs that are "
"currently open in it."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3252
msgid ""
"Check the contents of the <file>.changes</file> file to make sure you are "
"uploading to the correct distribution, the proper bugs closures are listed "
"in the <tt>Closes:</tt> field, the <tt>Maintainer:</tt> and "
"<tt>Changed-By:</tt> fields match, the file is GPG-signed, etc."
msgstr ""
