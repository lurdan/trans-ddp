# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: maint-guide r7640\n"
"POT-Creation-Date: 2010-12-18 23:41+0900\n"
"PO-Revision-Date: 2010-12-19 01:24+0900\n"
"Last-Translator: Osamu Aoki <osamu@debian.org>\n"
"Language-Team: Debian Japanese team <debian-doc@debian.or.jp>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Poedit-Language: Japanese\n"

#. type: definition of entity &dochome;
#, no-wrap
msgid "/usr/share/doc"
msgstr "/usr/share/doc"

#. type: definition of entity &developers-reference;
#, no-wrap
msgid "&dochome;/developers-reference/"
msgstr "&dochome;/developers-reference/"

#. type: definition of entity &uploading;
#, no-wrap
msgid "&dochome;/developers-reference/pkgs.html#upload"
msgstr "&dochome;/developers-reference/pkgs.html#upload"

#. type: definition of entity &bughandling;
#, no-wrap
msgid "&dochome;/developers-reference/pkgs.html#bug-handling"
msgstr "&dochome;/developers-reference/pkgs.html#bug-handling"

#. type: definition of entity &debian-policy;
#, no-wrap
msgid "&dochome;/debian-policy/policy.html/index.html"
msgstr "&dochome;/debian-policy/policy.html/index.html"

#. type: definition of entity &maint-guide;
#, no-wrap
msgid "&dochome;/maint-guide/maint-guide.en.html/index.en.html"
msgstr "&dochome;/maint-guide/maint-guide.en.html/index.en.html"

#. type: definition of entity &autotools-dev;
#, no-wrap
msgid "&dochome;/autotools-dev/README.Debian.gz"
msgstr "&dochome;/autotools-dev/README.Debian.gz"

#. type: definition of entity &newmaint;
#, no-wrap
msgid "http://www.debian.org/devel/join/newmaint"
msgstr "http://www.debian.org/devel/join/newmaint"

#. type: definition of entity &nm-home;
#, no-wrap
msgid "http://nm.debian.org/"
msgstr "http://nm.debian.org/"

#. type: definition of entity &buildd-home;
#, no-wrap
msgid "http://buildd.debian.org/"
msgstr "http://buildd.debian.org/"

#. type: definition of entity &mentors-faq;
#, no-wrap
msgid "http://people.debian.org/~mpalmer/debian-mentors_FAQ.html"
msgstr "http://people.debian.org/~mpalmer/debian-mentors_FAQ.html"

#. type: definition of entity &pbuilder-home;
#, no-wrap
msgid "http://www.netfort.gr.jp/~dancer/software/pbuilder.html"
msgstr "http://www.netfort.gr.jp/~dancer/software/pbuilder.html"

#. type: definition of entity &ftp-uploadqueue;
#, no-wrap
msgid "ftp://ftp.upload.debian.org/pub/UploadQueue/"
msgstr "ftp://ftp.upload.debian.org/pub/UploadQueue/"

#. type: definition of entity &ftp-command;
#, no-wrap
msgid "&ftp-uploadqueue;README"
msgstr "&ftp-uploadqueue;README"

#. type: definition of entity &copyright-howto;
#, no-wrap
msgid "http://lists.debian.org/debian-devel-announce/2006/03/msg00023.html"
msgstr "http://lists.debian.org/debian-devel-announce/2006/03/msg00023.html"

#. type: definition of entity &repackage-source;
#, no-wrap
msgid "http://bugs.debian.org/278524"
msgstr "http://bugs.debian.org/278524"

#. type: definition of entity &makefile;
#, no-wrap
msgid ""
"     1  #!/usr/bin/make -f\n"
"     2  # -*- makefile -*-\n"
"     3  # Sample debian/rules that uses debhelper.\n"
"     4  # This file was originally written by Joey Hess and Craig Small.\n"
"     5  # As a special exception, when this file is copied by dh-make into a\n"
"     6  # dh-make output file, you may use that output file without restriction.\n"
"     7  # This special exception was added by Craig Small in version 0.37 of dh-make.\n"
"     8  # Uncomment this to turn on verbose mode.\n"
"     9  #export DH_VERBOSE=1\n"
"    10  configure: configure-stamp\n"
"    11  configure-stamp:\n"
"    12          dh_testdir\n"
"    13          # Add here commands to configure the package.\n"
"    14          touch configure-stamp\n"
"    15  build: build-stamp\n"
"    16  build-stamp: configure-stamp  \n"
"    17          dh_testdir\n"
"    18          # Add here commands to compile the package.\n"
"    19          $(MAKE)\n"
"    20          #docbook-to-man debian/testpack.sgml > testpack.1\n"
"    21          touch $@\n"
"    22  clean: \n"
"    23          dh_testdir\n"
"    24          dh_testroot\n"
"    25          rm -f build-stamp configure-stamp\n"
"    26          # Add here commands to clean up after the build process.\n"
"    27          $(MAKE) clean\n"
"    28          dh_clean \n"
"    29  install: build\n"
"    30          dh_testdir\n"
"    31          dh_testroot\n"
"    32          dh_clean -k \n"
"    33          dh_installdirs\n"
"    34          # Add here commands to install the package into debian/testpack.\n"
"    35          $(MAKE) DESTDIR=$(CURDIR)/debian/testpack install\n"
"    36  # Build architecture-independent files here.\n"
"    37  binary-indep: build install\n"
"    38  # We have nothing to do by default.\n"
"    39  # Build architecture-dependent files here.\n"
"    40  binary-arch: build install\n"
"    41          dh_testdir\n"
"    42          dh_testroot\n"
"    43          dh_installchangelogs \n"
"    44          dh_installdocs\n"
"    45          dh_installexamples\n"
"    46  #       dh_install\n"
"    47  #       dh_installmenu\n"
"    48  #       dh_installdebconf       \n"
"    49  #       dh_installlogrotate\n"
"    50  #       dh_installemacsen\n"
"    51  #       dh_installpam\n"
"    52  #       dh_installmime\n"
"    53  #       dh_python\n"
"    54  #       dh_installinit\n"
"    55  #       dh_installcron\n"
"    56  #       dh_installinfo\n"
"    57          dh_installman\n"
"    58          dh_link\n"
"    59          dh_strip\n"
"    60          dh_compress\n"
"    61          dh_fixperms\n"
"    62  #       dh_perl\n"
"    63  #       dh_makeshlibs\n"
"    64          dh_installdeb\n"
"    65          dh_shlibdeps\n"
"    66          dh_gencontrol\n"
"    67          dh_md5sums\n"
"    68          dh_builddeb\n"
"    69  binary: binary-indep binary-arch\n"
"    70  .PHONY: build clean binary-indep binary-arch binary install configure"
msgstr ""
"     1  #!/usr/bin/make -f\n"
"     2  # -*- makefile -*-\n"
"     3  # Sample debian/rules that uses debhelper.\n"
"     4  # This file was originally written by Joey Hess and Craig Small.\n"
"     5  # As a special exception, when this file is copied by dh-make into a\n"
"     6  # dh-make output file, you may use that output file without restriction.\n"
"     7  # This special exception was added by Craig Small in version 0.37 of dh-make.\n"
"     8  # Uncomment this to turn on verbose mode.\n"
"     9  #export DH_VERBOSE=1\n"
"    10  configure: configure-stamp\n"
"    11  configure-stamp:\n"
"    12          dh_testdir\n"
"    13          # Add here commands to configure the package.\n"
"    14          touch configure-stamp\n"
"    15  build: build-stamp\n"
"    16  build-stamp: configure-stamp  \n"
"    17          dh_testdir\n"
"    18          # Add here commands to compile the package.\n"
"    19          $(MAKE)\n"
"    20          #docbook-to-man debian/testpack.sgml > testpack.1\n"
"    21          touch $@\n"
"    22  clean: \n"
"    23          dh_testdir\n"
"    24          dh_testroot\n"
"    25          rm -f build-stamp configure-stamp\n"
"    26          # Add here commands to clean up after the build process.\n"
"    27          $(MAKE) clean\n"
"    28          dh_clean \n"
"    29  install: build\n"
"    30          dh_testdir\n"
"    31          dh_testroot\n"
"    32          dh_clean -k \n"
"    33          dh_installdirs\n"
"    34          # Add here commands to install the package into debian/testpack.\n"
"    35          $(MAKE) DESTDIR=$(CURDIR)/debian/testpack install\n"
"    36  # Build architecture-independent files here.\n"
"    37  binary-indep: build install\n"
"    38  # We have nothing to do by default.\n"
"    39  # Build architecture-dependent files here.\n"
"    40  binary-arch: build install\n"
"    41          dh_testdir\n"
"    42          dh_testroot\n"
"    43          dh_installchangelogs \n"
"    44          dh_installdocs\n"
"    45          dh_installexamples\n"
"    46  #       dh_install\n"
"    47  #       dh_installmenu\n"
"    48  #       dh_installdebconf       \n"
"    49  #       dh_installlogrotate\n"
"    50  #       dh_installemacsen\n"
"    51  #       dh_installpam\n"
"    52  #       dh_installmime\n"
"    53  #       dh_python\n"
"    54  #       dh_installinit\n"
"    55  #       dh_installcron\n"
"    56  #       dh_installinfo\n"
"    57          dh_installman\n"
"    58          dh_link\n"
"    59          dh_strip\n"
"    60          dh_compress\n"
"    61          dh_fixperms\n"
"    62  #       dh_perl\n"
"    63  #       dh_makeshlibs\n"
"    64          dh_installdeb\n"
"    65          dh_shlibdeps\n"
"    66          dh_gencontrol\n"
"    67          dh_md5sums\n"
"    68          dh_builddeb\n"
"    69  binary: binary-indep binary-arch\n"
"    70  .PHONY: build clean binary-indep binary-arch binary install configure"

#. type: <title></title>
#: maint-guide.en.sgml:24
msgid "Debian New Maintainers' Guide"
msgstr "Debian 新メンテナガイド"

#. type: <author></author>
#: maint-guide.en.sgml:26
msgid "<name>Josip Rodin </name><email>joy-mg@debian.org</email>"
msgstr "<name>Josip Rodin </name><email>joy-mg@debian.org</email>"

#. type: <version></version>
#: maint-guide.en.sgml:32
msgid "version &docversion;, &docisodate;"
msgstr "version &docversion;, &docisodate;"

#. type: <copyrightsummary></copyrightsummary>
#: maint-guide.en.sgml:35
msgid "Copyright &copy; 1998-2002 Josip Rodin"
msgstr "Copyright &copy; 1998-2002 Josip Rodin"

#. type: <copyrightsummary></copyrightsummary>
#: maint-guide.en.sgml:36
msgid "Copyright &copy; 2005-2010 Osamu Aoki"
msgstr "Copyright &copy; 2005-2010 Osamu Aoki"

#. type: <copyrightsummary></copyrightsummary>
#: maint-guide.en.sgml:37
msgid "Copyright &copy; 2010 Craig Small"
msgstr "Copyright &copy; 2010 Craig Small"

#. type: <copyrightsummary></copyrightsummary>
#: maint-guide.en.sgml:38
msgid "Copyright &copy; 2010 Raphaël Hertzog"
msgstr "Copyright &copy; 2010 Raphaël Hertzog"

#. type: <p></p>
#: maint-guide.en.sgml:48
msgid "This document may be used under the terms the GNU General Public License version 2 or higher."
msgstr "この文書は GNU 一般公有使用許諾書、バージョン 2 かそれ以降が規定する条件の下で使用できます。"

#. type: <p></p>
#: maint-guide.en.sgml:50
msgid "This document was made using with these two documents as examples:"
msgstr "この文書は以下の二つの文書を参考にして書かれました。"

#. type: <p></p>
#: maint-guide.en.sgml:53
msgid "Making a Debian Package (AKA the Debmake Manual), copyright &copy; 1997 Jaldhar Vyas."
msgstr "Debian パッケージの作り方 (Debmake マニュアル)、Copyright &copy; 1997 Jaldhar Vyas."

#. type: <p></p>
#: maint-guide.en.sgml:55
msgid "The New-Maintainer's Debian Packaging Howto, copyright &copy; 1997 Will Lowe."
msgstr "新米メンテナのための Debian パッケージング Howto、copyright &copy; 1997 Will Lowe."

#. type: <heading></heading>
#: maint-guide.en.sgml:63
msgid "Getting started The Right Way"
msgstr "まずは「正しいやり方で」始めよう"

#. type: <p></p>
#: maint-guide.en.sgml:70
msgid "This document tries to describe building of a Debian package to the common Debian user, and the prospectus developer. It uses pretty common language, and it's well covered with working examples. There is an old Roman saying, <em>Longum iter est per preaecepta, breve et efficax per exempla!</em> (It's a long way by the rules, but short and efficient with examples!)."
msgstr "この文書では、Debian パッケージを作るにはどうしたらよいか、一般的な Debian ユーザと開発者予備軍を対象に解説しようと思います。小難しい専門用語はできるだけ避けて、実用的な例を多く用いて説明していくつもりです。ことわざにもあるように、<em>百聞は一見にしかず</em>ですからね!"

#. type: <p></p>
#: maint-guide.en.sgml:76
msgid "This document has been updated for the Debian <tt>squeeze</tt> release. <footnote><p>The document assumes you are using the <tt>squeeze</tt> system. If you need to follow this text in the <tt>lenny</tt> system, you must install backported <package>dpkg</package> and <package>debhelper</package> packages, at least.</p></footnote>"
msgstr "この文書は、Debian <tt>squeeze</tt> リリース用に更新されています。<footnote><p>文中では、<tt>squeeze</tt> のシステムを使っていると想定しています。この文書を <tt>lenny</tt> のシステム用として読みたいのであれば、少なくともバックポートされた <package>dpkg</package> および <package>debhelper</package> パッケージをインストールする必要があります。</p></footnote>"

#. type: <p></p>
#: maint-guide.en.sgml:85
msgid "One of the things that makes Debian such a top-notch distribution is its package system. While there is a vast quantity of software already in the Debian format, sometimes you need to install software that isn't. You may be wondering how you can make your own packages and perhaps you think it is a very difficult task. Well, if you are a real novice on Linux, it is hard, but if you were rookie, you wouldn't be reading this doc now. :-) You do need to know a little about Unix programming but you certainly don't need to be a wizard."
msgstr "Debian が最高峰の ディストリビューションと呼ばれるまでになった理由のひとつが、そのパッケージ管理システムです。すでに膨大な数のソフトウェアが Debian 形式で配布されていますが、まだパッケージ化されていないソフトウェアを、インストールしなければならないこともあるでしょう。あるいは、どうやったら自分でパッケージが作れるんだろう、とか、それはとても難しいことなんじゃないか、などと考えたことがあるかもしれません。まあ、もしあなたが本当に駆け出しの Linux ユーザなら難しいでしょうが、でもそうだったら今ごろこんな文書読んでませんて :-) パッケージを作成するには、Unix のプログラミングについてある程度知っている必要がありますが、神様みたいに精通している必要は全くありません。"

#. type: <p></p>
#: maint-guide.en.sgml:89
msgid "One thing is certain, though: to properly create and maintain Debian packages you need many hours. Make no mistake, for our system to work the maintainers need to be both technically competent and diligent."
msgstr "ただ、確かなことがひとつあります。Debian パッケージをきちんと作成し、保守していくには、手間を惜しんではならない、ということです。間違えないでください。Debian のシステムをうまく動かしていくためには、メンテナは技術的に有能であるだけでなく、勤勉であることも必要なのです。"

#. type: <p></p>
#: maint-guide.en.sgml:93
msgid "This document will explain every little (at first maybe irrelevant) step, and help you create that first package, and to gain some experience in building next releases of that and maybe other packages later on."
msgstr ""
"この文書では (最初は関係無さそうに思えることまで) どんな\n"
"細かい手順も余さず説明します。\n"
"ともかく一つ作ってしまえば、あとは次のリリース、そして\n"
"他のパッケージへと経験を積んでいけばよいのです。"

#. type: <p></p>
#: maint-guide.en.sgml:95
msgid "If you need some help on packaging, please read <ref id=\"helpme\">."
msgstr "パッケージ作成において手助けが必要なら、<ref id=\"helpme\">を読んでください。"

#. type: <p></p>
#: maint-guide.en.sgml:101
msgid "Newer versions of this document should always be available online at <url id=\"http://www.debian.org/doc/maint-guide/\" name=\"http://www.debian.org/doc/maint-guide/\"> and in the <package>maint-guide</package> package."
msgstr "この文書の最新版は常に以下の場所からネットワーク経由で入手できます。<url id=\"http://www.debian.org/doc/maint-guide/\" name=\"http://www.debian.org/doc/maint-guide/\"> また、「<package>maint-guide</package>」パッケージにも含まれています。日本語訳は「<package>maint-guide-ja</package>」パッケージの中にあります。"

#. type: <heading></heading>
#: maint-guide.en.sgml:103
msgid "Programs you need for development"
msgstr "開発に必要なプログラム"

#. type: <p></p>
#: maint-guide.en.sgml:108
msgid "Before you start anything, you should make sure that you have properly installed some additional packages needed for development. Note that the list doesn't contain any packages marked <tt>essential</tt> or <tt>required</tt> - we expect that you have those installed already."
msgstr "何はさておき、開発に必要なパッケージがきちんとインストールされていることを確認せねばなりません。以下のリストには「essential」または「required」なパッケージが含まれていないことに注意してください。要するに、これらのパッケージは既にインストールされていることを前提としています。"

#. type: <p></p>
#: maint-guide.en.sgml:113
msgid "The following packages come with the standard Debian installation, so you probably have them already (along with any additional packages they depend on). Still, you should check it with \"<tt>aptitude show <var>package</var></tt>\"."
msgstr ""
"以下のパッケージは Debian の「標準」(standard) インストール\n"
"構成に含まれており、すでに (それらが依存する他のパッケージと\n"
"いっしょに) システムに含まれているはずです。\n"
"しかし、念のために「<tt>aptitude show <var>パッケージ名</var></tt>」\n"
"で確認しておきましょう。"

#. type: <p></p>
#: maint-guide.en.sgml:118
msgid "The most important package to install on your development system is the <package>build-essential</package> package. Once you try to install it, it will <em>pull in</em> other packages required to have a basic build environment."
msgstr "開発用システムにインストールする一番重要なパッケージは、<package>build-essential</package> です。これをインストールしようとすると、基本的なビルド環境に必要な他のパッケージを <em>集めて</em> くるでしょう。"

#. type: <p><list>
#: maint-guide.en.sgml:123
msgid "For some types of packages, that is all you will require, however there is another set of packages that while not essential for all package builds are useful to have install or may be required by your package:"
msgstr "パッケージの種類によっては、必要になるのはこれで全てかもしれません。ただ、全てのパッケージ作成に必須ではないにせよ、インストールしておくと便利だったり、パッケージによっては必要になったりするパッケージ群があります："

#. type: <p></p>
#: maint-guide.en.sgml:127
msgid "<package>file</package> - this handy program can determine what type a file is. (see <manref section=\"1\" name=\"file\">)"
msgstr "<package>file</package> - この便利なプログラムを使うと、そのファイルがどういう形式のものか判定することができます (詳しくは <manref section=\"1\" name=\"file\"> を参照)。"

#. type: <p></p>
#: maint-guide.en.sgml:131
msgid "<package>patch</package> - this very useful utility will take a file containing a difference listing (produced by the <prgn>diff</prgn> program) and apply it to the original file, producing a patched version. (see <manref section=\"1\" name=\"patch\">)"
msgstr "<package>patch</package> - このとても有用なユーティリティは、(<prgn>diff</prgn> プログラムによって生成された) オリジナルとの差分が列挙されたファイルを読み込んでオリジナルのファイルに適用し、パッチが当てられたバージョンを作成します。 (詳しくは <manref section=\"1\" name=\"patch\"> を参照)。"

#. type: <p></p>
#: maint-guide.en.sgml:135
msgid "<package>perl</package> - Perl is one of the most used interpreted scripting languages on today's Unix-like systems, often referred to as \"Unix's Swiss Army Chainsaw\". (see <manref section=\"1\" name=\"perl\">)"
msgstr "<package>perl</package> - Perl は今日の UNIX 系システムにおいてもっとも使われているインタープリタ型スクリプト言語のひとつで、その強力さはしばしば「Unix のスイス軍用チェーンソー」と形容されるほどです (詳しくは <manref section=\"1\" name=\"perl\"> を参照)。"

#. type: <p></p>
#: maint-guide.en.sgml:139
msgid "<package>python</package> - Python is another of the most used interpreted scripting languages on the Debian system that combines remarkable power with very clear syntax. (see <manref section=\"1\" name=\"python\">)"
msgstr ""
"<package>python</package> - \n"
"Python は Debian システムにおいてもっとも使われているもう一つの\n"
"インタープリタ型スクリプト言語で、並外れたパワーと非常に明快な書式を\n"
"兼ねそなえています。\n"
"(詳しくは <manref section=\"1\" name=\"python\"> を参照)。"

#. type: <p></p>
#: maint-guide.en.sgml:145
msgid "<package>autoconf</package>, <package>automake</package> and <package>autotools-dev</package> - many newer programs use configure scripts and <file>Makefile</file> files preprocessed with help of programs like these. (see \"<tt>info autoconf</tt>\", \"<tt>info automake</tt>\"). The <package>autotools-dev</package> keeps up-to-date versions of certain auto files and has documentation about the best way to use those files."
msgstr ""
"<package>autoconf</package> と <package>automake</package> と <package>autotools-dev</package> - 多くの新しいプログラムが、これらのプログラムを使って前処理される設定スクリプトや <file>Makefile</file> を利用しています。\n"
"(詳しくは \"<tt>info autoconf</tt>\", \"<tt>info automake</tt>\" を参照)。\n"
"<package>autotools-dev</package> には、特定の auto ファイルの最新版と、\n"
"そういったファイルを使う最善の方法についてのドキュメントが含まれています。"

#. type: <p></p>
#: maint-guide.en.sgml:157
msgid "<package>dh-make</package> and <package>debhelper</package> - <package>dh-make</package> is necessary to create the skeleton of our example package, and it will use some of the <package>debhelper</package> tools for creating packages. They are not essential for creation of packages, but are <em>highly</em> recommended for new maintainers. It makes the whole process very much easier to start, and control afterwards. (see <manref section=\"1\" name=\"dh_make\">, <manref section=\"1\" name=\"debhelper\">, <file>/usr/share/doc/debhelper/README</file>) <footnote><p>There are few similar but specialized packages such as <package>dh-make-perl</package>, <package>dh-make-php</package>, etc. </p></footnote>"
msgstr ""
"<package>dh-make</package> と <package>debhelper</package> - \n"
"<package>dh-make</package> はパッケージのひな型を用意するのに必要となります。またこのひな型ではパッケージを生成するために <package>debhelper</package> ツールをいくつか使います。これらを使わなくてもパッケージ作成は可能ですが、初めてパッケージを作る方には利用を<em>強く</em>お勧めします。パッケージを作るのも、以後パッケージを管理するのもずっと簡単になるからです。 (詳しくは <manref section=\"1\" name=\"dh_make\">、<manref section=\"1\" name=\"debhelper\">、<file>/usr/share/doc/debhelper/README</file> を参照) <footnote><p><package>dh-make-perl</package>、<package>dh-make-php</package>などのように、同様ではありますが、特定目的に特化したパッケージもわずかにあります。</p></footnote>"

#. type: <p></p>
#: maint-guide.en.sgml:162
msgid "<package>devscripts</package> - this package contains some nice and useful scripts that can be helpful to the maintainers, but they are also not necessary for building packages. Packages recommended and suggested by this package are worth looking into. (see <file>/usr/share/doc/devscripts/README.gz</file>)"
msgstr "<package>devscripts</package> - このパッケージはメンテナにとって便利であると思われる有用で優れたスクリプトを含んでいますが、だからといってパッケージを作成するために必須というわけではありません。このパッケージが推奨 (Recommends)、あるいは提案 (Suggests) しているパッケージは、一見の価値があります。(詳しくは <file>/usr/share/doc/devscripts/README.gz</file> を参照)"

#. type: <p></p>
#: maint-guide.en.sgml:166
msgid "<package>fakeroot</package> - this utility lets you emulate being root which is necessary for some parts of the build process. (see <manref section=\"1\" name=\"fakeroot\">)"
msgstr "<package>fakeroot</package> - このユーティリティを使うと、ビルドの過程で何度か必要となる root 権限をエミュレートすることができます。(詳しくは <manref section=\"1\" name=\"fakeroot\"> を参照)"

#. type: <p></p>
#: maint-guide.en.sgml:171
msgid "<package>gnupg</package> - a tool that enables you to digitally <em>sign</em> packages. This is especially important if you want to distribute it to other people, and you will certainly be doing that when your work gets included in the Debian distribution. (see <manref section=\"1\" name=\"gpg\">)"
msgstr "<package>gnupg</package> - このツールを使うと、パッケージに「デジタル <em>署名</em>」を付けることができます。もしあなたが自分の作成したパッケージを他の人々に配布したいのなら、これは特に重要です。また、Debian ディストリビューションにあなたの作成したパッケージが含まれるようになった時には、確実にこのデジタル署名をすることになります。(詳しくは <manref section=\"1\" name=\"gpg\"> 参照)"

#. type: <p></p>
#: maint-guide.en.sgml:174
msgid "<package>gfortran</package> - the GNU Fortran 95 compiler, necessary if your program is written in Fortran. (see <manref section=\"1\" name=\"gfortran\">)"
msgstr "<package>gfortran</package> - GNU Fortran 95 コンパイラ。あなたのプログラムが Fortran 言語で書かれている場合に必要です。(詳しくは <manref section=\"1\" name=\"gfortran\"> 参照)"

#. type: <p></p>
#: maint-guide.en.sgml:179
msgid "<package>gpc</package> - the GNU Pascal compiler, necessary if your program is written in Pascal. Worthy of note here is <package>fp-compiler</package>, the Free Pascal Compiler, which is also good at this task. (see <manref section=\"1\" name=\"gpc\">, <manref section=\"1\" name=\"ppc386\">)"
msgstr "<package>gpc</package> - GNU Pascal コンパイラ。あなたのプログラムが Pascal 言語で書かれている場合に必要です。ここで注目に値するのは <package>fp-compiler</package> Free Pascal コンパイラで、こちらもまたこの作業に適しています。(詳しくは <manref section=\"1\" name=\"gpc\">、 <manref section=\"1\" name=\"ppc386\"> 参照)"

#. type: <p></p>
#: maint-guide.en.sgml:184
msgid "<package>xutils-dev</package> - some programs, usually those made for X11, also use these programs to generate <file>Makefile</file> files from sets of macro functions. (see <manref section=\"1\" name=\"imake\">, <manref section=\"1\" name=\"xmkmf\">)"
msgstr "<package>xutils-dev</package> - ある種のプログラム (通常 X11のために開発されたもの) は、これらのプログラムを利用して、マクロ関数の組み合わせから <file>Makefile</file> 群を生成します。(詳しくは <manref section=\"1\" name=\"imake\">、 <manref section=\"1\" name=\"xmkmf\"> 参照)"

#. type: <p></p>
#: maint-guide.en.sgml:189
msgid "<package>lintian</package> - this is the Debian package checker that can let you know of any common mistakes after you build the package, and explains the errors found. (see <manref section=\"1\" name=\"lintian\">, <file>/usr/share/doc/lintian/lintian.html/index.html</file>)"
msgstr "<package>lintian</package> - これは Debian パッケージチェッカで、あなたがビルドしたパッケージを調べて、その中にありがちなミスが見つかったらそれを指摘し、その問題について説明してくれます。(詳しくは <manref section=\"1\" name=\"lintian\">、 <file>/usr/share/doc/lintian/lintian.html/index.html</file> 参照)"

#. type: <p></p>
#: maint-guide.en.sgml:195
msgid "<package>pbuilder</package> - this package contains programs which are used for creating and maintaining <prgn>chroot</prgn> environment. Building Debian package in this <prgn>chroot</prgn> environment verifies the proper build dependency and avoid FTBFS (Fails To Build From Source) bugs. (see <manref section=\"8\" name=\"pbuilder\"> and <manref section=\"1\" name=\"pdebuild\">)"
msgstr "<package>pbuilder</package> - このパッケージには <prgn>chroot</prgn> 環境の作成や保守に使用されるプログラムが含まれます。この <prgn>chroot</prgn> 環境下で Debian パッケージをビルドすることで適切なビルド依存を確認して FTBFS (Fails To Build From Source) バグを回避することができます。(詳しくは <manref section=\"8\" name=\"pbuilder\"> と <manref section=\"1\" name=\"pdebuild\"> 参照)"

#. type: <p></p>
#: maint-guide.en.sgml:199
msgid "<package>patchutils</package> - this package contains some utilities to work with patches such as the <prgn>lsdiff</prgn>, <prgn>interdiff</prgn> and <prgn>filterdiff</prgn> commands."
msgstr "<package>patchutils</package> - このパッケージには、<prgn>lsdiff</prgn>、 <prgn>interdiff</prgn> や <prgn>filterdiff</prgn> といったパッチを扱うユーティリティが含まれています。"

#. type: <p></p>
#: maint-guide.en.sgml:205
msgid "<package>quilt</package> - this package helps you to manage a series of patches by keeping track of the changes each of them makes. They are logically organized as a stack, and you can apply (=push), un-apply (=pop), refresh them easily by traveling into the stack. (see <manref section=\"1\" name=\"quilt\">, <file>/usr/share/doc/quilt/README.Debian</file>)"
msgstr "<package>quilt</package> - このパッケージは、一連のパッチそれぞれの変更点を追跡して、その管理を補助するものです。パッチはスタックとして論理的に構成されていて、スタックに分け入って、簡単に当てたり (=push) 外したり (=pop) 刷新したりすることができます。(詳しくは <manref section=\"1\" name=\"quilt\">、 <file>/usr/share/doc/quilt/README.Debian</file>参照)"

#. type: <p></p>
#: maint-guide.en.sgml:211
msgid "<package>git</package> - this package provides popular version control system designed to handle very large projects with speed and efficiency; it is used for many high profile open source projects, most notably the Linux kernel. (see <manref section=\"1\" name=\"git\">, <file>/usr/share/doc/git-doc/index.html</file>)"
msgstr "<package>git</package> - このパッケージは人気のあるバージョン管理システムで、大規模なプロジェクトを素早く、効率的に扱えるように設計されています。知名度の高い多数のオープンソースプロジェクトで使われており、特に有名なものとして Linux カーネルがあります。(詳しくは <manref section=\"1\" name=\"git\">、 <file>/usr/share/doc/git-doc/index.html</file>参照)"

#. type: <p><list>
#: maint-guide.en.sgml:216
msgid "The following is the <em>very important</em> documentation which you should read along with this document:"
msgstr "以下は、この文書と合わせて読むべき<em>とても重要な</em>文書です。"

#. type: <p></p>
#: maint-guide.en.sgml:226
msgid "<package>debian-policy</package> - the <url id=\"http://www.debian.org/doc/devel-manuals#policy\" name=\"Debian Policy Manual\"> includes explanations of the structure and contents of the Debian archive, several OS design issues, the Filesystem Hierarchy Standard (which says where each file and directory should be) etc. For you, the most important thing is that it describes requirements that each package must satisfy to be included in the distribution (see <file>&debian-policy;</file>)."
msgstr "<package>debian-policy</package> - <url id=\"http://www.debian.org/doc/devel-manuals#policy\" name=\"Debian ポリシーマニュアル\"> には、Debian アーカイブの構造と内容、OS の設計に関するいくつかの論点、あるいは Filesystem Hierarchy Standard (個々のファイルやディレクトリがどこにあるべきかを規定した文書) についてなどいろいろ載っています。さしあたって重要なのは、ディストリビューションに含まれるためにそれぞれのパッケージが満たすべき必要条件の説明です (詳しくは <file>&debian-policy;</file>参照)。"

#. type: <p></p>
#: maint-guide.en.sgml:234
msgid "<package>developers-reference</package> - the <url id=\"http://www.debian.org/doc/devel-manuals#devref\" name=\"Debian Developer's Reference\"> describes all matters not specifically about the technical details of packaging, like the structure of the archive, how to rename, orphan, pick up packages, how to do NMUs, how to manage bugs, best packaging practices, when and where to upload etc. (see <file>&developers-reference;</file>)."
msgstr "<package>developers-reference</package><footnote>(訳注)日本語版は <package>developers-reference</package></footnote> - <url id=\"http://www.debian.org/doc/devel-manuals#devref\" name=\"Debian 開発者リファレンス\">には、例えばアーカイブの構造、パッケージ名の変更方法、パッケージの選び方、メンテナを降りるにはどうしたらよいか、どうやって NMU をするか、バグとのつき合い方、パッケージ作成のベストプラクティス、いつどこにアップロードすればよいかなどなど、特に技術的な事柄以外のパッケージ化についてのありとあらゆる情報がここにあります。(詳しくは <file>&developers-reference;</file>参照)。"

#. type: <p></p>
#: maint-guide.en.sgml:241
msgid "<url id=\"http://www.lrde.epita.fr/~adl/autotools.html\" name=\"Autotools Tutorial\"> provides very good tutorial for <url id=\"http://en.wikipedia.org/wiki/GNU_build_system\" name=\"the GNU Build System known as the GNU Autotools\"> whose most important components are Autoconf, Automake, Libtool, and gettext."
msgstr "<url id=\"http://www.lrde.epita.fr/~adl/autotools.html\" name=\"Autotools チュートリアル\"> は、Autoconf、Automake、Libtool や gettext を最も重要な構成要素としてもつ <url id=\"http://en.wikipedia.org/wiki/GNU_build_system\" name=\"GNU Autotools として知られる GNU ビルドシステム\"> の大変よい手引き書です。"

#. type: <p></p>
#: maint-guide.en.sgml:250
msgid "<package>gnu-standards</package> - this package contains two pieces of documentation from the GNU project: <url id=\"http://www.gnu.org/prep/standards/html_node/index.html\" name=\"GNU Coding Standards\">, and <url id=\"http://www.gnu.org/prep/maintain/html_node/index.html\" name=\"Information for Maintainers of GNU Software\">. Although Debian does not require these to be followed, these are still helpful as guidelines and common sense. (see <file>/usr/share/doc/gnu-standards/standards.html</file> and <file>/usr/share/doc/gnu-standards/maintain.html</file>)."
msgstr "<package>gnu-standards</package> - このパッケージには、GNU プロジェクトからの文書が 2 つ含まれています。<url id=\"http://www.gnu.org/prep/standards/html_node/index.html\" name=\"GNU コーディング標準\">と、<url id=\"http://www.gnu.org/prep/maintain/html_node/index.html\" name=\"GNU ソフトウェアのメンテナ向け情報\">です。Debian ではこれらに従うことは求められませんが、ガイドラインまたは常識としても有用です。(詳しくは <file>/usr/share/doc/gnu-standards/standards.html</file> と <file>/usr/share/doc/gnu-standards/maintain.html</file>参照)"

#. type: <p></p>
#: maint-guide.en.sgml:256
msgid "If this document contradicts with what the Debian Policy Manual and Debian Developer's Reference describes, they are correct. Please file a bug report on the <package>maint-guide</package> package."
msgstr "この文書が、Debian ポリシーマニュアルや Debian 開発者リファレンスの記述と矛盾している場合は、そちらが正解です。<package>maint-guide</package> パッケージにバグレポートをしてください。"

#. type: <p></p>
#: maint-guide.en.sgml:262
msgid "The short descriptions that are given above only serve to introduce you to what each package does. Before continuing please thoroughly read the documentation of each program, at least, for the standard usage. It may seem like heavy going now, but later on you'll be <em>very</em> glad you read it."
msgstr "上記の簡単な説明は、それぞれのパッケージが何をするのか紹介するだけのものです。先に進む前にどうかそれぞれのプログラムに付属の文書を徹底的に熟読し、標準的な使い方だけでも理解しておいてください。きついと思われるかも知れませんが、あとになればきっと <em>読んでてよかったなあ</em> と思うことでしょう。"

#. type: <heading></heading>
#: maint-guide.en.sgml:264
msgid "Basic terminology"
msgstr "基本的な用語"

#. type: <p><list>
#: maint-guide.en.sgml:266
msgid "There are two types of packages."
msgstr "パッケージには 2 種類あります。"

#. type: <p></p>
#: maint-guide.en.sgml:275
msgid "<strong>source package</strong>: A source package is a set of files which contain code and data which you can compile and process into execution programs and formatted documents. It usually comes as a combination of <file>*.orig.tar.gz</file>, <file>*.debian.tar.gz</file> (or <file>*.diff.gz</file>), and <file>*.dsc</file>. Some other archive and compression methods may be used, too."
msgstr "<strong>ソースパッケージ</strong>: ソースパッケージはいくつかのファイルからなっていて、コンパイルすることで実行プログラムや整形した文書に処理できるコードとデータを含んでいます。通常は、<file>*.orig.tar.gz</file> と、<file>*.debian.tar.gz</file> (あるいは <file>*.diff.gz</file>)、それから <file>*.dsc</file>の組み合わせです。他のアーカイブ方法や圧縮方法が使われる場合もあります。"

#. type: <p></p>
#: maint-guide.en.sgml:279
msgid "<strong>binary package</strong>: A binary package contains execution programs and formatted documents. It usually comes as <file>*.deb</file> for the normal Debian system and as <file>*.udeb</file> for the Debian Installer."
msgstr "<strong>バイナリパッケージ</strong>: バイナリパッケージには、実行プログラムと整形された文書が含まれています。通常は、一般的な Debian システム用には <file>*.deb</file>、Debian インストーラ向けには <file>*.udeb</file> という形になっています。"

#. type: <p></p>
#: maint-guide.en.sgml:284
msgid "Don't mix terms like source of the program and the source package of the program!"
msgstr "プログラムのソースとプログラムのソースパッケージ、のような用語を混同しないようにしてください！"

#. type: <p><list>
#: maint-guide.en.sgml:286
msgid "There are several role names used around Debian."
msgstr "Debian 界隈で使われる役割名がいくつかあります。"

#. type: <p></p>
#: maint-guide.en.sgml:291
msgid "<strong>upstream author</strong>: The person who made the original program."
msgstr "<strong>upstream author (開発元の作者)</strong>: 元のプログラムを作った人です。"

#. type: <p></p>
#: maint-guide.en.sgml:294
msgid "<strong>upstream maintainer</strong>: The person who currently maintains the program."
msgstr "<strong>upstream maintainer (開発元のメンテナ)</strong>: 現在プログラムをメンテナンスしている人です。"

#. type: <p></p>
#: maint-guide.en.sgml:297
msgid "<strong>maintainer</strong>: The person who makes Debian package of the program."
msgstr "<strong>maintainer (メンテナ)</strong>: プログラムの Debian パッケージを作成している人です。"

#. type: <p></p>
#: maint-guide.en.sgml:301
msgid "<strong>sponsor</strong>: The person who helps maintainers to upload packages to the official Debian Package Archive after checking their contents."
msgstr "<strong>sponsor (スポンサー)</strong>: メンテナのパッケージを、内容をチェックした後で公式 Debian パッケージアーカイブにアップロードするのを手伝う人です。"

#. type: <p></p>
#: maint-guide.en.sgml:304
msgid "<strong>mentor</strong>: The person who helps novice maintainers on packaging etc."
msgstr "<strong>mentor (指導役)</strong>: 新米メンテナがパッケージを作成したりするのを手助けする人です。"

#. type: <p></p>
#: maint-guide.en.sgml:307
msgid "<strong>Debian Developer</strong> (DD): The person who is a member of Debian. He has full upload right to the official Debian Package Archive."
msgstr ""
"<strong>Debian Developer (Debian 開発者)</strong> (DD):\n"
"Debian のメンバーです。公式 Debian パッケージアーカイブへのアップロード権限を全てもっています。"

#. type: <p></p>
#: maint-guide.en.sgml:310
msgid "<strong>Debian Maintainer</strong> (DM): The person who has limited upload right to the official Debian Package Archive."
msgstr ""
"<strong>Debian Maintainer (Debian メンテナ)</strong> (DM):\n"
"公式 Debian パッケージアーカイブへのアップロード権限を限定的にもっている人です。"

#. type: <p><list>
#: maint-guide.en.sgml:314
msgid "There are several version names used around Debian."
msgstr "Debian 界隈では、いくつかのバージョン名が使われます。"

#. type: <p></p>
#: maint-guide.en.sgml:317
msgid "<strong>upstream source version</strong>: The upstream source version is referred as <tt><var>version</var></tt>."
msgstr ""
"<strong>上流ソースのバージョン</strong>:\n"
"上流ソースのバージョンは、<tt><var>version</var></tt> と呼ばれます。"

#. type: <p></p>
#: maint-guide.en.sgml:319
msgid "<strong>Debian revision</strong>: The revision by Debian on package is referred as <tt><var>revision</var></tt>."
msgstr ""
"<strong>Debian リビジョン</strong>:\n"
"Debian がつけるパッケージのリビジョンは、<tt><var>revision</var></tt>と呼ばれます。"

#. type: <p><list>
#: maint-guide.en.sgml:320
msgid "<strong>Debian package version</strong>: The Debian package version is referred as the following."
msgstr ""
"<strong>Debian パッケージバージョン</strong>:\n"
"Debian のパッケージバージョンは、次のように呼ばれます。"

#. type: <p></p>
#: maint-guide.en.sgml:322
msgid "<tt><var>version</var></tt> for the native Debian binary package and for the Debian source package."
msgstr "ネイティブの Debian バイナリパッケージと Debain のソースパッケージでは、<tt><var>version</var></tt> です。"

#. type: <p></p>
#: maint-guide.en.sgml:323
msgid "<tt><var>version</var>-<var>revision</var></tt> for the non-native Debian binary package."
msgstr "ネイティブではない Debian バイナリパッケージでは、<tt><var>version</var>-<var>revision</var></tt> です。"

#. type: <p></p>
#: maint-guide.en.sgml:329
msgid "Please read the other manuals if you need more details on terminology."
msgstr "用語についての詳細が必要であれば、他のマニュアルを読んでください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:331
msgid "Official Debian Developer"
msgstr "正式な Debian 開発者"

#. type: <p></p>
#: maint-guide.en.sgml:338
msgid "You can not become an official <strong>Debian Developer</strong> (DD) over night because it takes more than technical skill. Please do not be discouraged by this. If it is useful to others, you can still upload your package either as a <strong>maintainer</strong> through a <strong>sponsor</strong> or as a <strong>Debian Maintainer</strong>. See <url id=\"&newmaint;\" name=\"Debian New Maintainers\"> for more."
msgstr "一夜にして正式な <strong>Debian 開発者</strong> (DD) になることはできません。これは技術的なスキルだけに留まらない何かが必要となるからです。がっかりしないでください。それが他の人にとっても便利なものなら、<strong>メンテナ</strong>として <strong>スポンサー</strong> を通して、あるいは <strong>Debian メンテナ</strong> として、パッケージをアップロードすることは可能です。ここで述べたスポンサーとは正式な Debian 開発者で、メンテナがパッケージを Debian アーカイブにアップロードするのを補助する人を指します。この手順に関する詳細は <url id=\"&newmaint;\" name=\"Debian 新規メンテナのコーナー\"> にあります。"

#. type: <p></p>
#: maint-guide.en.sgml:343
msgid "Please note that you do not need to create any new package to become an official Debian Developer. Contributing to the existing packages can provide a path to become an official Debian Developer too. There are many packages waiting for good maintainers (see <ref id=\"choose\">)."
msgstr "正式な Debian 開発者になるのに新しいパッケージの作成は必須ではないことに注意してください。既存のパッケージに対して貢献していくことでも正式な Debian 開発者への道は開かれます。多くのパッケージがよいメンテナを待っています (<ref id=\"choose\"> を参照)。"

#. type: <heading></heading>
#: maint-guide.en.sgml:345
msgid "Where to ask for help"
msgstr "相談するには"

#. type: <p></p>
#: maint-guide.en.sgml:354
msgid "Before you decide to ask your question in some public place, please just RTFM.  That includes documentation in <file>/usr/share/doc/dpkg</file>, <file>/usr/share/doc/debian</file>, <file>&autotools-dev;</file>, <file>/usr/share/doc/<var>package</var>/*</file> files and the <prgn>man</prgn>/<prgn>info</prgn> pages for all the programs mentioned in this document. See all the information at <url id=\"&nm-home;\">."
msgstr "どこか公共の場で質問しようとする前に、まずマニュアルを読んでください。このマニュアルというのは、<file>/usr/share/doc/dpkg</file>、<file>/usr/share/doc/debian</file>、<file>&autotools-dev;</file>、<file>/usr/share/doc/<var>パッケージ名</var>/*</file> のドキュメントや、この文書で触れる全てのプログラムの <prgn>man</prgn>/<prgn>info</prgn>ページなどを含みます。<url id=\"&nm-home;\"> にある情報すべてを参考にしてください。"

#. type: <p></p>
#: maint-guide.en.sgml:358
msgid "Making a small test package is good way to learn details of packaging. Inspecting existing well maintained packages is the best way to learn how other people make packages."
msgstr "小さなテストパッケージを作ることは、パッケージ作成の詳細を学ぶよい方法です。他の人がどのようにパッケージを作成しているか学ぶには、既存のよく保守されているパッケージを調べるのが一番です。"

#. type: <p></p>
#: maint-guide.en.sgml:364
msgid "If you still have questions about packaging that you couldn't find answers to in the available documentation and web resources, you can ask them on the Debian Mentors' mailing list at <url id=\"http://lists.debian.org/debian-mentors/\" name=\"debian-mentors@lists.debian.org\">. The more experienced Debian developers will gladly help you, but do read at least some of the documentation before asking a question!"
msgstr "既存の文書やウェブの情報では答えが見つからないような、パッケージ作成についての質問がまだあるなら、<url id=\"http://lists.debian.org/debian-mentors/\" name=\"debian-mentors@lists.debian.org\"> にある Debian Mentors のメーリングリストで聞くことができます。より経験豊富な Debian 開発者が喜んで手助けしてくれるでしょう。ただし、質問する前に少なくともある程度は文書類を読んでおくこと！"

#. type: <p></p>
#: maint-guide.en.sgml:367
msgid "See <url id=\"http://lists.debian.org/debian-mentors/\"> for more information about this mailing list."
msgstr "このメーリングリストについての詳細は、<url id=\"http://lists.debian.org/debian-mentors/\">を参照してください。"

#. type: <p></p>
#: maint-guide.en.sgml:374
msgid "When you receive a bug report (yes, actual bug reports!), you will know that it is time for you to dig into the <url id=\"http://www.debian.org/Bugs/\" name=\"Debian Bug Tracking System\"> and read the documentation there, to be able to deal with the reports efficiently. I highly recommend reading the <url id=\"http://www.debian.org/doc/manuals/developers-reference/pkgs.html#bug-handling\" name=\"Developer's Reference, 5.8. 'Handling bugs'\">."
msgstr "バグレポート (そう、本物のバグレポートです！) を受けとったら、レポートを効率的にさばくために、<url id=\"http://www.debian.org/Bugs/\" name=\"Debian バグ追跡システム\"> を掘り下げ、その説明文書を読む時だということがわかるでしょう。<url id=\"http://www.debian.org/doc/manuals/developers-reference/pkgs.html#bug-handling\" name=\"開発者リファレンスの 5.8. 'Handling bugs'\"> を読むよう、強くおすすめします。"

#. type: <p></p>
#: maint-guide.en.sgml:379
msgid "If you still have questions, ask on the Debian Developers' mailing list at <url id=\"http://lists.debian.org/debian-devel/\" name=\"debian-devel@lists.debian.org\">. See <url id=\"http://lists.debian.org/debian-devel/\"> for more information about this mailing list."
msgstr "他にまだ質問があれば、<url id=\"http://lists.debian.org/debian-devel/\" name=\"debian-devel@lists.debian.org\"> にある Debian 開発者メーリングリストで聞いてください。このメーリングリストについての詳細は <url id=\"http://lists.debian.org/debian-devel/\"> を参照してください。"

#. type: <p></p>
#: maint-guide.en.sgml:384
msgid "Even if it all worked well, it's time to start praying. Why? Because in just a few hours (or days) users from all around the world will start to use your package, and if you made some critical error you'll get mailbombed by numerous angry Debian users... Just kidding. :-)"
msgstr "全てうまくやったとしても、これからはお祈りの時間です。なぜか？ それは、ほんの数時間 (あるいは数日) で、世界中のユーザがそのパッケージを使いはじめるからです。もし何か致命的なエラーをやらかしていたら、膨大な数の怒った Debian ユーザからメール爆弾を受けとることになります……なんて冗談ですが :-)"

#. type: <p></p>
#: maint-guide.en.sgml:389
msgid "Relax and be ready for bug reports, because there is a lot more work to be done before your package will be fully in line with Debian policies and its best practice guidelines (once again, read the <em>real documentation</em> for details). Good luck!"
msgstr "リラックスしてバグ報告に備えてください。なにしろ、そのパッケージが Debian ポリシーやそのベストプラクティスに完全に沿うようになるまでには、やらなくてはいけないことは沢山あるのですから (繰り返しますが、詳細は<em>実際の文書</em>を読んでください)。頑張ってください！"

#. type: <heading></heading>
#: maint-guide.en.sgml:391
msgid "First steps"
msgstr "はじめの一歩"

#. type: <p></p>
#: maint-guide.en.sgml:393
msgid "Let's try to make your own package (or, better even, adopt an existing one)."
msgstr "自分のパッケージを作成してみましょう (それよりずっと良いのは、既存のものを引き取ってみることです)。"

#. type: <heading></heading>
#: maint-guide.en.sgml:395
msgid "Choose your program"
msgstr "プログラムの選定"

#. type: <p></p>
#: maint-guide.en.sgml:399
msgid "You have probably chosen the package you want to create. The first thing you need to do is check if the package is in the distribution archive already by using <prgn>aptitude</prgn>."
msgstr "おそらく、作成したいパッケージを選んだことと思います。まず最初にしなければならないことは、ディストリビューションのアーカイブにそのパッケージがすでにあるかどうか、<prgn>aptitude</prgn> を使って確認することです。"

#. type: <p></p>
#: maint-guide.en.sgml:403
msgid "You can also check package information through <url id=\"http://www.debian.org/distrib/packages\" name=\"package search page\"> and <url id=\"http://packages.qa.debian.org/common/index.html\" name=\"Debian Package Tracking System\">."
msgstr "パッケージの情報は、<url id=\"http://www.debian.org/distrib/packages\" name=\"パッケージ検索ページ\"> や <url id=\"http://packages.qa.debian.org/common/index.html\" name=\"Debian パッケージ追跡システム\">でもチェックすることができます。"

#. type: <p></p>
#: maint-guide.en.sgml:411
msgid "If the package already exists, well, install it! :-) If it happens to be <strong>orphaned</strong> -- if its maintainer is set to <url id=\"http://qa.debian.org/\" name=\"Debian QA Group\">, you may be able to pick it up if it's still available (check the ownership status at <url id=\"http://bugs.debian.org/wnpp\" name=\"Debian Bug report logs: Bugs in package wnpp in unstable\">). You may also adopt a package for which the corresponding maintainer has filed a \"Request for Adoption\" (<strong>RFA</strong>)."
msgstr "もしパッケージが既に存在していたら、インストールしましょう！ :-) もしそのパッケージが<strong>「みなしご化」</strong>されていたら -- つまりメンテナが <url id=\"http://qa.debian.org/\" name=\"Debian QA Group\"> になっていたら、そのパッケージがまだ利用可能であれば、そのパッケージを引き取ることができるかもしれません (<url id=\"http://bugs.debian.org/wnpp\" name=\"Debian Bug report logs: Bugs in package wnpp in unstable\"> で所有者の状況をチェックしてください)。関係しているメンテナが \"引き取り依頼\" (<strong>RFA</strong>) を出しているパッケージを引きとるのもアリです。"

#. type: <p><list>
#: maint-guide.en.sgml:412
msgid "Several different views of orphaned or RFA'ed packages are available at:"
msgstr "みなしご化された、あるいは RFA されたパッケージについて、いくつか違った見方ができるようになっています："

#. type: <p><list>
#: maint-guide.en.sgml:427
msgid "As a side note, it's important to point out that Debian already has packages for most kinds of programs, and the number of packages already in the Debian archive is much larger than that of contributors with upload rights. Thus, contributions to packages already in the archive are far more appreciated (and more likely to receive sponsorship) by other developers <footnote><p>Having said that, there will of course always be new programs that are worthwhile packaging.</p></footnote>. You can do that in various ways."
msgstr ""
"注釈ですが、Debian にはすでにほとんどの種類のプログラムが含まれていること、Debian アーカイブにすでに含まれているパッケージの数は、アップロード権限をもつユーザの数よりもはるかに多いこと、に注意しておくのは重要です。従って、すでにアーカイブに含まれているパッケージへの作業は、他の開発者からはるかに喜ばれます (し、よりスポンサーしてもらえる見込みがあります)。\n"
"<footnote><p>とはいっても、パッケージ化する価値のある新しいプログラムはいつだって存在するでしょう。</p></footnote>。作業のやり方はいろいろあります。"

#. type: <p></p>
#: maint-guide.en.sgml:429
msgid "taking over orphaned, yet actively used, packages"
msgstr "まだよく使われている、みなしごのパッケージを引き取る"

#. type: <p></p>
#: maint-guide.en.sgml:430
msgid "joining <url id=\"http://wiki.debian.org/Teams\" name=\"packaging teams\">"
msgstr "<url id=\"http://wiki.debian.org/Teams\" name=\"パッケージ化チーム\">に参加する"

#. type: <p></p>
#: maint-guide.en.sgml:431
msgid "triaging bugs of very popular packages"
msgstr "よく使われているパッケージのバグに対処する"

#. type: <p></p>
#: maint-guide.en.sgml:432
msgid "preparing <url id=\"http://www.debian.org/doc/developers-reference/pkgs.html#nmu-qa-upload\" name=\"QA or NMU uploads\">"
msgstr "<url id=\"http://www.debian.org/doc/developers-reference/pkgs.html#nmu-qa-upload\" name=\"QA もしくは NMU アップロード\"> を準備する"

#. type: <p></p>
#: maint-guide.en.sgml:442
msgid "If you are able to adopt the package, get the sources (with something like \"<tt>apt-get source <var>packagename</var></tt>\") and examine them. This document unfortunately doesn't include comprehensive information about adopting packages. Thankfully you shouldn't have a hard time figuring out how the package works since someone has already done the initial set up for you. Keep reading, though, a lot of the advice below will still be applicable for your case."
msgstr "もしパッケージを引き取ることができるなら、(<tt>apt-get source <var>パッケージ名</var></tt> などの方法で) ソースを入手して、調べてみてください。残念ながらこの文書では、パッケージを引き取ることについて、わかりやすく説明してはいません。ありがたいことに、既に誰かがあなたのためにパッケージを準備してくれたわけですから、そのパッケージがどのように動作するのか理解することは、それほど難しくはないでしょう。とはいえ、そうした場合でもこの文書に書かれた多くのアドバイスはそのまま通用しますから、このまま読み進めていってください。"

#. type: <p><list>
#: maint-guide.en.sgml:445
msgid "If the package is new, and you decide you'd like to see it in Debian, proceed as follows:"
msgstr "もしあなたの選んだプログラムがまだパッケージ化されていないもので、それを Debian に入れたいと決めたなら、以下のチェック項目について確認してください。"

#. type: <p></p>
#: maint-guide.en.sgml:448
msgid "First, you must know that program works, and have tried it for some time to confirm its usefulness."
msgstr "まず、そのプログラムが機能することがわかっていて、その有用性についてある程度の期間確かめておかねばなりません。"

#. type: <p></p>
#: maint-guide.en.sgml:455
msgid "You must check if no one else is working on the package already at <url id=\"http://www.de.debian.org/devel/wnpp/being_packaged\" name=\"the list of packages being worked on\">. If no one else is working on it, file an ITP (Intent To Package) bug report to the <package>wnpp</package> pseudo-package using <prgn>reportbug</prgn>. If someone's already on it, contact them if you feel you need to. If not - find another interesting program that nobody maintains."
msgstr "<url id=\"http://www.de.debian.org/devel/wnpp/being_packaged\" name=\"作業中のパッケージ\"> を確認し、他に誰も同じパッケージを作っていないことを確かめてください。誰も作業していなければ、<prgn>reportbug</prgn> を使って ITP (Intent To Package) のバグレポートを、<package>wnpp</package> 疑似パッケージに送ってください。もし既に誰かが作業していたら、必要に応じて連絡をとってください。もしその必要が無ければ、まだ誰も手をつけていない他の面白いプログラムを探して再チャレンジです。"

#. type: <p><list>
#: maint-guide.en.sgml:459
msgid "That program <strong>must have a license</strong>."
msgstr "プログラムには、<strong>ライセンスが必須</strong>です。"

#. type: <p></p>
#: maint-guide.en.sgml:465
msgid "For the <tt>main</tt> section, it <strong>must be compliant to all the Debian Free Software Guidelines (DFSG)</strong> (see <url id=\"http://www.debian.org/social_contract#guidelines\">) and <strong>that program must not require a package outside of <tt>main</tt></strong> for compilation or execution as required by the Debian Policy. This is desired case."
msgstr "<tt>main</tt> セクションは、<strong>Debian フリーソフトウェアガイドライン (DFSG) に完全に準拠しなければなりません</strong>し (<url id=\"http://www.debian.org/social_contract#guidelines\"> 参照)、また Debian ポリシーにより、コンパイル・実行時に <strong><tt>main</tt> にあるもの以外のパッケージに依存してはなりません</strong>。これが望ましいケースです。"

#. type: <p></p>
#: maint-guide.en.sgml:468
msgid "For the <tt>contrib</tt> section, it must be compliant to all the DFSG but it may require a package outside of <tt>main</tt> for compilation or execution."
msgstr "<tt>contrib</tt> セクションは、DFSG に完全に準拠していなければなりませんが、コンパイル・実行時に <tt>main</tt> にあるもの以外のパッケージに依存していても構いません。"

#. type: <p></p>
#: maint-guide.en.sgml:471
msgid "For the <tt>non-free</tt> section, it may not be compliant to some of the DFSG but it <strong>must be distributable</strong>."
msgstr "<tt>non-free</tt> セクションは、DFSG に準拠していない部分があるかもしれませんが、<strong>配布可能でなければなりません</strong>。"

#. type: </list></p>
#: maint-guide.en.sgml:475
msgid "If you are unsure about where it should go, post the license text on <url id=\"http://lists.debian.org/debian-legal/\" name=\"debian-legal@lists.debian.org\"> and ask for advice."
msgstr "どうするべきかよくわからなければ、<url id=\"http://lists.debian.org/debian-legal/\" name=\"debian-legal@lists.debian.org\"> にライセンス文を送り、アドバイスを求めてください。"

#. type: <p></p>
#: maint-guide.en.sgml:479
msgid "That program certainly should <strong>not</strong> run setuid root, or even better - it shouldn't need to be setuid or setgid to anything."
msgstr "実行時に root に setuid <strong>しない</strong>プログラムがよいでしょう。もっと言えば、どんなときも setuid や setgid を必要としないほうがよいでしょう。"

#. type: <p></p>
#: maint-guide.en.sgml:482
msgid "That program should not be a daemon, or something that goes in <file>*/sbin</file> directories, or open a port as root."
msgstr "デーモンとして動作するプログラムや、<file>*/sbin</file> ディレクトリに配置するプログラム、また root 特権を使ってポートを開くプログラムでないほうがよいでしょう。"

#. type: <p></p>
#: maint-guide.en.sgml:485
msgid "That program should result in binary executable form, libraries are harder to handle."
msgstr "バイナリ実行形式が得られるプログラムを選びましょう。ライブラリを扱うのはずっと難しいのです。"

#. type: <p></p>
#: maint-guide.en.sgml:488
msgid "That program should be well documented and its code needs to be understandable (i.e. not obfuscated)."
msgstr "ちゃんとした説明書きのあるプログラムで、ソースコードが理解可能なもの (つまり、わかりにくくないこと)。"

#. type: <p></p>
#: maint-guide.en.sgml:493
msgid "You should contact program's author(s) to check if they agree with packaging it and amicable to Debian. It is important to be able to consult with author(s) about the program in case of any program specific problems, so don't try to package unmaintained pieces of software."
msgstr "プログラムの作者に連絡をとって、パッケージ化の承諾と Debian に友好的かどうかを確認しておきましょう。何かプログラムそのものに起因する問題が発生した際に、作者にいろいろ聞けるということは重要なので、由来のはっきりしないソフトウェアの断片をパッケージ化するのはやめておきましょう。"

#. type: <p></p>
#: maint-guide.en.sgml:502
msgid "Of course, these things are just safety measures, and intended to save you from raging users if you do something wrong in some setuid daemon... When you gain some more experience in packaging, you'll be able to do such packages, but even the experienced developers consult the <url id=\"http://lists.debian.org/debian-mentors/\" name=\"debian-mentors@lists.debian.org\"> mailing list when they are in doubt. And people there will gladly help."
msgstr "もちろんこれらのことは安全策というだけのことです。setuid デーモンで何かミスしてしまい、怒り狂ったユーザから抗議殺到という事態を回避したいのです。パッケージ化についてもっと経験を積めば、こうしたパッケージも 作れるようになるでしょう。しかし、どんなに老練な開発者だって、何か分からないことがあれば <url id=\"http://lists.debian.org/debian-mentors/\" name=\"debian-mentors@lists.debian.org\"> メーリングリストで質問するのです。そこには喜んで手助けしてくれる人々がいます。"

#. type: <p></p>
#: maint-guide.en.sgml:504
msgid "For more help about these, check in <url id=\"http://www.debian.org/doc/devel-manuals#devref\" name=\"Debian Developer's Reference\">."
msgstr "もっと詳しい話は、<url id=\"http://www.debian.org/doc/devel-manuals#devref\" name=\"Debian 開発者リファレンス\">に載っていますので、そちらを参照してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:506
msgid "Get the program, and try it out"
msgstr "プログラムの入手と検証"

#. type: <p></p>
#: maint-guide.en.sgml:515
msgid "So the first thing to do is to find and download the original source code. I presume that you already have the source file that you picked up at the author's homepage. Sources for free Unix programs usually come in <prgn>tar</prgn>+<prgn>gzip</prgn> format with extension <file>.tar.gz</file>, or <prgn>tar</prgn>+<prgn>bzip2</prgn> format with extension <file>.tar.bz2</file>. These usually contain the subdirectory called <file><var>programname</var>-<var>version</var></file> in them and all the sources under it."
msgstr "さて、最初にすべきことは、オリジナルのソースコードを探してダウンロードすることです。ここでは作者のホームページから、すでにソースファイルを入手したとして話を進めます。フリーな Unix 用プログラムのソースは、ふつう <file>.tar.gz</file> 拡張子が付いた <prgn>tar</prgn>+<prgn>gzip</prgn> 形式や、<file>.tar.bz2</file> 拡張子が付いた <prgn>tar</prgn>+<prgn>bzip2</prgn> 形式で提供されています。この中にはたいてい、すべてのソースが入った <file><var>プログラム名</var>-<var>バージョン</var></file> というサブディレクトリがあります。"

#. type: <p></p>
#: maint-guide.en.sgml:521
msgid "If the latest version of such sources are available through VCS such as Git, Subversion, or CVS repository, you need to get it with \"<tt>git clone</tt>\", \"<tt>cvs co</tt>\", or \"<tt>svn co</tt>\" and repack it into <prgn>tar</prgn>+<prgn>gzip</prgn> format by yourself using the \"<tt>--exclude-vcs</tt>\" option."
msgstr "該当ソースの最新版が Git や Subversion、CVS リポジトリのような VCS で提供されているなら、取得するのに \"<tt>git clone</tt>\"、\"<tt>cvs co</tt>\" や \"<tt>svn co</tt>\" してから、\"<tt>--exclude-vcs</tt>\" オプションを使って自分で <prgn>tar</prgn>+<prgn>gzip</prgn> 形式に再パックする必要があります。"

#. type: <p></p>
#: maint-guide.en.sgml:527
msgid "If your program's source comes as some other sort of archive (for instance, the filename ends in <file>.Z</file> or <file>.zip</file><footnote><p>You can identify the archive format using the <prgn>file</prgn> command when the file extension is not enough.</p></footnote>), unpack it with appropriate tools and repack it, too."
msgstr "プログラムのソースが、他の種類のアーカイブ (例えば、<file>.Z</file>で終わるファイル名や、<file>.zip</file><footnote><p>ファイルの拡張子で足りなければ、<prgn>file</prgn> コマンドを使ってアーカイブ形式を判別することができます。</p></footnote>) の場合も、適切なツールで展開してから再パックしてください。"

#. type: <p></p>
#: maint-guide.en.sgml:531
msgid "As an example, I'll use a program called <prgn>gentoo</prgn>, an X GTK+ file manager.<footnote><p>This program is already packaged. Current version 0.15.3 has changed substantially from the version 0.9.12 in the following examples.</p></footnote>"
msgstr "さて本稿では、<prgn>gentoo</prgn> という X GTK+ ファイルマネージャを例に説明します<footnote><p>このプログラムはすでにパッケージ化されています。現在のバージョンは 0.15.3 で、以下の例にあるバージョン 0.9.12 とは大幅に変更されています。</p></footnote>"

#. type: <p><example>
#: maint-guide.en.sgml:540
msgid "Create a subdirectory under your home directory named <file>debian</file> or <file>deb</file> or anything you find appropriate (e.g. just <file>~/gentoo</file> would do fine in this case). Place the downloaded archive in it, and extract it (with \"<tt>tar xzf gentoo-0.9.12.tar.gz</tt>\"). Make sure there are no errors, even some <em>irrelevant</em> ones, because there will most probably be problems unpacking on other people's systems, whose unpacking tools may or may not ignore those anomalies. On your console screen, you should see the following."
msgstr "自分のホームディレクトリ以下に <file>debian</file> や <file>deb</file>、または何か適当な名前のサブディレクトリを作りましょう (今回の場合には <file>~/gentoo/</file> としても良いでしょう)。ダウンロードしたアーカイブをここにコピーし、\"<tt>tar xzf gentoo-0.9.12.tar.gz</tt>\" を実行して展開してください。この時、一見<em>無関係</em>に思えるようなものも含めて、エラーは一切発生しないことを確認してください。もしエラーが起きたら、それは他の人々のシステム上で展開する際にも、おそらくエラーが起きるということです。そしてそこで使われている展開用のツールは、こういった異常を無視するかも知れませんし、無視しないかもしれません。あなたのコンソール画面では、以下のように見えているでしょうか。"

#. type: <example></example>
#: maint-guide.en.sgml:547
#, no-wrap
msgid ""
"$ mkdir ~/gentoo ; cd ~/gentoo\n"
"$ wget http://<var>www.example.org</var>/gentoo-0.9.12.tar.gz\n"
"$ tar xvzf gentoo-0.9.12.tar.gz\n"
"$ ls -F\n"
"gentoo-0.9.12/\n"
"gentoo-0.9.12.tar.gz"
msgstr ""
"$ mkdir ~/gentoo ; cd ~/gentoo\n"
"$ wget http://<var>www.example.org</var>/gentoo-0.9.12.tar.gz\n"
"$ tar xvzf gentoo-0.9.12.tar.gz\n"
"$ ls -F\n"
"gentoo-0.9.12/\n"
"gentoo-0.9.12.tar.gz"

#. type: <p></p>
#: maint-guide.en.sgml:557
msgid "Now you have another subdirectory, called <file>gentoo-0.9.12</file>. Change to that directory and <em>thoroughly</em> read the provided documentation. Usually there are files named <file>README*</file>, <file>INSTALL*</file>, <file>*.lsm</file> or <file>*.html</file>. You must find instructions on how to correctly compile and install the program (most probably they'll assume you want to install to <file>/usr/local/bin</file> directory; you won't be doing that, but more on that later in <ref id=\"destdir\">)."
msgstr "さて、<file>gentoo-0.9.12</file> という別のサブディレクトリができました。展開したディレクトリに移動して、提供されているドキュメントを<em>徹底的に</em>読みましょう。通常は <file>README*</file>, <file>INSTALL*</file>, <file>*.lsm</file>, <file>*.html</file> といった名前のファイルです。それらの文書の中に、どうやったら正しくコンパイルできるのか、どうインストールすればよいのかといった情報が見つかるはずです (おそらく <file>/usr/local/bin</file> にインストールするものとして説明されていますが、そうしてはいけません。これについては <ref id=\"destdir\"> を参照してください)。"

#. type: <p></p>
#: maint-guide.en.sgml:562
msgid "Simple programs come with a <file>Makefile</file> file in them and can be compiled simply with \"<tt>make</tt>\". Some of them support \"<tt>make check</tt>\", which runs included self-checks. Installation to the destination directories is usually done with \"<tt>make install</tt>\"."
msgstr "シンプルなプログラムには <file>Makefile</file> ファイルが付属していて、単純に \"<tt>make</tt>\" でコンパイルできます。\"<tt>make check</tt>\" をサポートしていて、含まれているセルフテストを実行できるものもあります。目的のディレクトリへのインストールは一般に \"<tt>make install</tt>\"によって実行されます。"

#. type: <p></p>
#: maint-guide.en.sgml:565
msgid "Now try to compile and run your program, to make sure it works properly and doesn't break something else while it's installing or running."
msgstr "さあ、試しにプログラムをコンパイルし、実行してみましょう。 インストールや実行の際にちゃんと動作するかどうか、そして他の何かを壊してしまっていないかを確認してください。"

#. type: <p></p>
#: maint-guide.en.sgml:569
msgid "Also, you can usually run \"<tt>make clean</tt>\" (or better \"<tt>make distclean</tt>\") to clean up the build directory. Sometimes there's even a \"<tt>make uninstall</tt>\" which can be used to remove all the installed files."
msgstr "それから、たいていの場合は \"<tt>make clean</tt>\" ( \"<tt>make distclean</tt>\" を使えるならそのほうが良いです) を実行すると、ビルド用のディレクトリをきれいにしてくれます。さらに \"<tt>make uninstall</tt>\" を実行すると、インストールされたファイルをすべて削除できることさえもあります。"

#. type: <heading></heading>
#: maint-guide.en.sgml:571
msgid "Free portable programs"
msgstr "自由に移植できるプログラム"

#. type: <p></p>
#: maint-guide.en.sgml:579
msgid "A lot of Free programs are written in the <url id=\"http://en.wikipedia.org/wiki/C_(programming_language)\" name=\"C\"> and <url id=\"http://en.wikipedia.org/wiki/C++\" name=\"C++\"> languages. Many of these use Autotools or CMake to make them portable across different platforms. These tools are used to generate <file>Makefile</file> and other required source files. Then, such programs are built with usual \"<tt>make; make install</tt>\"."
msgstr "多数の自由なプログラムが、<url id=\"http://en.wikipedia.org/wiki/C_(programming_language)\" name=\"C\"> と <url id=\"http://en.wikipedia.org/wiki/C++\" name=\"C++\"> 言語で書かれています。これらの多くは、異なるプラットフォーム間で移植を可能とするために Autotools や CMake を使っています。こういったツールは、<file>Makefile</file> やその他必要なソースファイルを生成するのに使われます。その後、そういったプログラムは通常の \"<tt>make; make install</tt>\" でビルドされます。"

#. type: <p></p>
#: maint-guide.en.sgml:592
msgid "<url id=\"http://en.wikipedia.org/wiki/GNU_build_system\" name=\"Autotools\"> are the GNU build system comprising <url id=\"http://en.wikipedia.org/wiki/Autoconf\" name=\"Autoconf\">, <url id=\"http://en.wikipedia.org/wiki/Automake\" name=\"Automake\">, <url id=\"http://en.wikipedia.org/wiki/GNU_Libtool\" name=\"Libtool\">, and <url id=\"http://en.wikipedia.org/wiki/GNU_gettext\" name=\"gettext\">. You can notice such sources by the <file>configure.ac</file>, <file>Makefile.am</file>, and <file>Makefile.in</file> files. <footnote><p>See <url id=\"http://www.lrde.epita.fr/~adl/autotools.html\" name=\"Autotools Tutorial\"> and <file>&autotools-dev;</file>. </p></footnote>"
msgstr "<url id=\"http://en.wikipedia.org/wiki/GNU_build_system\" name=\"Autotools\"> は <url id=\"http://en.wikipedia.org/wiki/Autoconf\" name=\"Autoconf\">、<url id=\"http://en.wikipedia.org/wiki/Automake\" name=\"Automake\">、<url id=\"http://en.wikipedia.org/wiki/GNU_Libtool\" name=\"Libtool\"> と <url id=\"http://en.wikipedia.org/wiki/GNU_gettext\" name=\"gettext\"> から成る GNU のビルドシステムです。<file>configure.ac</file>、<file>Makefile.am</file> や <file>Makefile.in</file> ファイルがあれば、そういうソースであることがわかります。<footnote><p><url id=\"http://www.lrde.epita.fr/~adl/autotools.html\" name=\"Autotools Tutorial\"> と <file>&autotools-dev;</file> を参照してください。</p></footnote>"

#. type: <p><example>
#: maint-guide.en.sgml:596
msgid "The first step of Autotools work flow is usually that the upstream runs \"<tt>autoreconf -i -f</tt>\" in the source and distributes this source with generated files."
msgstr "Autotools を使ったワークフローの最初の一歩は、上流の作者がソースディレクトリで \"<tt>autoreconf -i -f</tt>\" を実行し、生成されたファイルと一緒にこのソースを配布することです。"

#. type: <example></example>
#: maint-guide.en.sgml:605
#, no-wrap
msgid ""
"configure.ac-----+-> autoreconf -+-> configure\n"
"Makefile.am -----+        |      +-> Makefile.in\n"
"src/Makefile.am -+        |      +-> src/Makefile.in\n"
"                          |      +-> config.h.in\n"
"                      automake\n"
"                      aclocal\n"
"                      aclocal.m4\n"
"                      autoheader"
msgstr ""
"configure.ac-----+-> autoreconf -+-> configure\n"
"Makefile.am -----+        |      +-> Makefile.in\n"
"src/Makefile.am -+        |      +-> src/Makefile.in\n"
"                          |      +-> config.h.in\n"
"                      automake\n"
"                      aclocal\n"
"                      aclocal.m4\n"
"                      autoheader"

#. type: <p></p>
#: maint-guide.en.sgml:610
msgid "Editing <file>configure.ac</file> and <file>Makefile.am</file> files requires some knowledge of <prgn>autoconf</prgn> and <prgn>automake</prgn>. See \"<tt>info autoconf</tt>\" and \"<tt>info automake</tt>\"."
msgstr "<file>configure.ac</file> や <file>Makefile.am</file> ファイルを編集するには、<prgn>autoconf</prgn> と <prgn>automake</prgn> についての知識が少々必要になります。\"<tt>info autoconf</tt>\" と \"<tt>info automake</tt>\" を参照してください。"

#. type: <p><example>
#: maint-guide.en.sgml:615
msgid "The second step of Autotools work flow is usually that the user obtains this distributed source and runs \"<tt>./configure &amp;&amp; make</tt>\" in the source to compile program into a <prgn><var>binary</var></prgn>."
msgstr "Autotools のワークフローの次のステップでは、通常はこの配布されているソースをユーザが入手して、ソースディレクトリで \"<tt>./configure &amp;&amp; make</tt>\" を実行することで、プログラムを <prgn><var>binary</var></prgn> にコンパイルします。"

#. type: <example></example>
#: maint-guide.en.sgml:622
#, no-wrap
msgid ""
"Makefile.in -----+                +-> Makefile -----+-> make -> <var>binary</var>\n"
"src/Makefile.in -+-> ./configure -+-> src/Makefile -+\n"
"config.h.in -----+                +-> config.h -----+\n"
"                          |\n"
"           config.status -+\n"
"           config.guess --+"
msgstr ""
"Makefile.in -----+                +-> Makefile -----+-> make -> <var>binary</var>\n"
"src/Makefile.in -+-> ./configure -+-> src/Makefile -+\n"
"config.h.in -----+                +-> config.h -----+\n"
"                          |\n"
"           config.status -+\n"
"           config.guess --+"

#. type: <p></p>
#: maint-guide.en.sgml:627
msgid "You can change many things in the <file>Makefile</file> file such as the default file install location using the command option, e.g. \"<prgn>./configure --prefix=/usr</prgn>\"."
msgstr "デフォルトでファイルがインストールされる場所など、<file>Makefile</file> ファイルにある内容の多くは、コマンドオプションを使って変更することができます。例えば \"<prgn>./configure --prefix=/usr</prgn>\" のように。"

#. type: <p></p>
#: maint-guide.en.sgml:631
msgid "Although it is not required, updating the <file>configure</file> and other files with \"<tt>autoreconf -i -f</tt>\" as the user may improve the compatibility of the source."
msgstr "必要ではないとしても、\"<tt>autoreconf -i -f</tt>\" をユーザとして実行して、<file>configure</file> や他のファイルを更新すると、ソースの互換性が改善される場合があります。"

#. type: <p></p>
#: maint-guide.en.sgml:635
msgid "<url id=\"http://en.wikipedia.org/wiki/CMake\" name=\"CMake\"> is an alternative build system. You can notice such sources by the <file>CMakeLists.txt</file> file."
msgstr "<url id=\"http://en.wikipedia.org/wiki/CMake\" name=\"CMake\"> はまた別のビルドシステムです。<file>CMakeLists.txt</file> ファイルがあれば、そういうソースだとわかります。"

#. type: <heading></heading>
#: maint-guide.en.sgml:637
msgid "Package name and version"
msgstr "パッケージ名とバージョン"

#. type: <p></p>
#: maint-guide.en.sgml:640
msgid "You should start packaging with a completely clean (pristine) source directory, or simply with freshly unpacked sources."
msgstr "パッケージ化の作業は完全にクリーンな (オリジナルのままの) ソースディレクトリ、簡単に言えば新しく展開したソースから始めるべきです。"

#. type: <p></p>
#: maint-guide.en.sgml:644
msgid "For the package to be built correctly, you must make the program's original name lowercase (if it isn't already), and you should move the source directory to <file><var>packagename</var>-<var>version</var></file>."
msgstr "パッケージをきちんと作るためには、プログラム名がすべて小文字になるよう、(まだそうなっていなければ) オリジナルの名前から変更しておかなければいけません。またソースディレクトリ名を <file><var>パッケージ名</var>-<var>バージョン</var></file> に変更しておきましょう。"

#. type: <p></p>
#: maint-guide.en.sgml:649
msgid "If the program name consists of more than one word, contract them to one word, or make an abbreviation. For example, program \"John's little editor for X\" package would be named <package>johnledx</package>, or <package>jle4x</package>, or whatever you decide, as long as it's under some reasonable limit, e.g. 20 characters."
msgstr "もしプログラムの名前が二語以上で構成されていたら、一つの語につなげるか省略形にしましょう。 例えば、\"John's little editor for X\" というソフトウェアならば <package>johnledx</package> とか <package>jle4x</package> というようにしましょう。あまり長すぎない程度、 せいぜい 20 文字くらいまでの長さで、適当に決めていただければ結構です。"

#. type: <p></p>
#: maint-guide.en.sgml:660
msgid "Also check for the exact version of the program (to be included in the package version). If that piece of software is not numbered with versions like <tt>X.Y.Z</tt>, but with some kind of date, feel free to use that date as the version number, as long as newer version numbers will look larger. While it is best to use the same version number as what upstream uses, if it is in the format of <tt>09Oct23</tt> you may need to convert it to <tt>YYYYMMDD</tt> format, which would be <tt>20091023</tt>, to ensure proper order for upgrade with the <prgn>dpkg</prgn> program.<footnote><p>Version string can be compared by \"<tt>dpkg --compare-versions <var>ver1</var> <var>op</var> <var>ver2</var></tt>\". See <manref section=\"1\" name=\"dpkg\"> manpage.</p></footnote>"
msgstr "プログラムの正確なバージョンもチェックしましょう (パッケージのバージョンに含めるために)。もしそのソフトウェアが「バージョン X.Y.Z」という形式で番号付けされておらず、ある種の日付で区別されている場合には、新しいバージョン番号が大きくなっているようなら、その日付をバージョン番号として自由に使ってください。開発元が使っているのと同じバージョン番号を使うのがベストではありますが、それが<tt>09Oct23</tt> といった形式の場合は、それを <tt>20091023</tt> といった <tt>YYYYMMDD</tt> 形式に変換して、<prgn>dpkg</prgn> プログラムでのアップグレードが適切な順番でできるようにする必要があるかもしれません。<footnote><p>バージョン文字列は、\"<tt>dpkg --compare-versions <var>ver1</var> <var>op</var> <var>ver2</var></tt>\" として比較できます。<manref section=\"1\" name=\"dpkg\"> のマニュアルページを参照してください。</p></footnote>"

#. type: <p></p>
#: maint-guide.en.sgml:664
msgid "Some programs won't be numbered at all, in which case you should contact the upstream maintainer to see if they've got some other revision-tracking method."
msgstr "およそバージョン番号に使えそうな情報がまったくないと言う場合、上流メンテナに連絡をとって彼らが何か他のリビジョン管理手段を使っているかどうか聞いてみましょう。"

#. type: <heading></heading>
#: maint-guide.en.sgml:666
msgid "Initial Debian package"
msgstr "最初の Debian パッケージ"

#. type: <p><example>
#: maint-guide.en.sgml:671
msgid "Let's set up the Bash shell environment variable <tt>$DEBEMAIL</tt> and <tt>$DEBFULLNAME</tt> so many Debian maintenance tools recognize your name and email address to use for packages as follows."
msgstr "次のようにして、Bash シェルの環境変数 <tt>$DEBEMAIL</tt> と <tt>$DEBFULLNAME</tt> を設定して、パッケージに使うあなたの名前と email アドレスを、多くの Debian メンテナンスツールが認識できるようにしましょう："

#. type: <example></example>
#: maint-guide.en.sgml:677
#, no-wrap
msgid ""
"$ cat &gt;&gt;~/.bashrc &lt;&lt;EOF\n"
"DEBEMAIL=your.email.address@example.org\n"
"DEBFULLNAME=\"Firstname Lastname\"\n"
"export DEBEMAIL DEBFULLNAME\n"
"EOF"
msgstr ""
"$ cat &gt;&gt;~/.bashrc &lt;&lt;EOF\n"
"DEBEMAIL=your.email.address@example.org\n"
"DEBFULLNAME=\"Firstname Lastname\"\n"
"export DEBEMAIL DEBFULLNAME\n"
"EOF"

#. type: <p><example>
#: maint-guide.en.sgml:681
msgid "Let's make an initial Debian package by issuing the <prgn>dh_make</prgn> command as follows."
msgstr "次のように <prgn>dh_make</prgn> コマンドを実行して、最初の Debian パッケージを作ってみましょう。"

#. type: <example></example>
#: maint-guide.en.sgml:685
#, no-wrap
msgid ""
"$ . ~/.bashrc\n"
"$ cd ~/gentoo/gentoo-0.9.12\n"
"$ dh_make -f ../gentoo-0.9.12.tar.gz"
msgstr ""
"$ . ~/.bashrc\n"
"$ cd ~/gentoo/gentoo-0.9.12\n"
"$ dh_make -f ../gentoo-0.9.12.tar.gz"

#. type: <p></p>
#: maint-guide.en.sgml:696
msgid "Of course, replace the filename with the name of your original source archive. <footnote><p>If the upstream source provides the <file>debian</file> directory and its contents, run the <prgn>dh_make</prgn> command with the <tt>--addmissing</tt> option, instead. The new source <tt>3.0 (quilt)</tt> format is quite robust not to break even for these packages. You may need to update contents provided by the upstream for your Debian package.</p></footnote> See <manref section=\"1\" name=\"dh_make\"> for details."
msgstr "当然ですが、ファイル名はあなたのオリジナルのソースアーカイブの名前と置き換えてください。<footnote><p>上流のソースが <file>debian</file> ディレクトリとその中身を提供している場合は、かわりに <prgn>dh_make</prgn> コマンドを <tt>--addmissing</tt> オプションをつけて実行してください。新しい <tt>3.0 (quilt)</tt> 形式のソースはとても堅牢なので、こういったパッケージでも壊すことはありません。自分の Debian パッケージ用に、アップストリームで提供されている内容を更新する必要があるかもしれません。</p></footnote> 詳細は、<manref section=\"1\" name=\"dh_make\"> を参照してください。"

#. type: <p></p>
#: maint-guide.en.sgml:712
msgid "Some information will come up. It will ask you what sort of package you want to create. Gentoo is a single binary package - it creates only one binary, and thus one <file>.deb</file> file - so we will select the first option, with the \"<tt>s</tt>\" key, check the information on the screen and confirm by pressing \"<tt><var>ENTER</var></tt>\". <footnote><p>There are few choices here: \"<tt>s</tt>\" for \"Single binary\", \"<tt>i</tt>\" for \"Arch-Independent\", \"<tt>m</tt>\" for \"Multiple binary\", \"<tt>l</tt>\" for \"Library\", \"<tt>k</tt>\" for \"Kernel module\", \"<tt>n</tt>\" for \"Kernel patch\" and \"<tt>b</tt>\" for \"<package>cdbs</package>\". This document focuses on the use of the <package>debhelper</package> package with the <prgn>dh</prgn> command. This document focuses on the use of the new <prgn>dh</prgn> command for \"Single binary\" and touches on it for \"Arch-Independent\" and \"Multiple binary\". The <package>cdbs</package> package offers alternative package script infrastructure to the <prgn>dh</prgn> command and outside of the scope of this document.</p></footnote>"
msgstr "情報がいくつか表示されるでしょう。どんな種類のパッケージを作ろうとしているのかを尋ねられます。Gentoo は単一のバイナリパッケージです - バイナリを一つだけ生成するので、一個の .deb ファイルです - なので、\"<tt>s</tt>\" キーで最初の選択肢を選びましょう。表示された情報をチェックして、確認のために \"<tt><var>ENTER</var></tt>\" を押してください。<footnote><p>ここでの選択肢はわずかです。\"<tt>s</tt>\" は \"Single binary (単一のバイナリ)\"、\"<tt>i</tt> は \"Arch-Independent(アーキテクチャ非依存)\"、\"<tt>m</tt>\" は \"Multiple binary (複数のバイナリ)、\"<tt>l</tt>\" は \"Library (ライブラリ)\"、\"<tt>k</tt>\" は \"Kernel module (カーネルモジュール)\"、\"<tt>n</tt>\" は \"Kernel patch (カーネルパッチ)\"、\"<tt>b</tt>\" は \"<package>cdbs</package>\" です。このドキュメントでは、<prgn>dh</prgn> コマンドで <package>debhelper</package> パッケージを使うのに重点を置いています。</footnote>"

#. type: <p><example>
#: maint-guide.en.sgml:718
msgid "After this execution of <prgn>dh_make</prgn>, a copy of the upstream tarball is created as <file>gentoo_0.9.12.orig.tar.gz</file> in the parent directory to accommodate the creation of the non-native Debian source package with the <file>debian.tar.gz</file> later."
msgstr "<prgn>dh_make</prgn> を実行した後、上流の tarball のコピーを、親ディレクトリに <file>gentoo_0.9.12.orig.tar.gz</file> として作成します。次に、それに伴ってネイティブではない Debian ソースパッケージを <file>debian.tar.gz</file> として作成します。"

#. type: <example></example>
#: maint-guide.en.sgml:723
#, no-wrap
msgid ""
"$ cd ~/gentoo ; ls -F\n"
"gentoo-0.9.12/\n"
"gentoo-0.9.12.tar.gz\n"
"gentoo_0.9.12.orig.tar.gz"
msgstr ""
"$ cd ~/gentoo ; ls -F\n"
"gentoo-0.9.12/\n"
"gentoo-0.9.12.tar.gz\n"
"gentoo_0.9.12.orig.tar.gz"

#. type: <p><list>
#: maint-guide.en.sgml:725
msgid "Please note 2 key features in this <file>gentoo_0.9.12.orig.tar.gz</file> file name:"
msgstr "この <file>gentoo_0.9.12.orig.tar.gz</file> ファイル名がもっている 2 つの特徴に注意してください："

#. type: <p></p>
#: maint-guide.en.sgml:727
msgid "Package name and version are separated by the \"<tt>_</tt>\" (underscore)."
msgstr "パッケージ名とバージョンは \"<tt>_</tt>\" (アンダースコア) で区切られています。"

#. type: <p></p>
#: maint-guide.en.sgml:728
msgid "There is the <file>.orig</file> before the <file>.tar.gz</file>."
msgstr "\"<tt>tar.gz</tt>\" の前に \"<tt>orig.</tt>\" があります。"

#. type: <p></p>
#: maint-guide.en.sgml:739
msgid "You should also notice that many template files are created in the source under the <file>debian</file> directory. These will be explained in <ref id=\"dreq\"> and <ref id=\"dother\">. You should also understand that the packaging is not automatic process. You need to modify the upstream source for Debian as <ref id=\"modify\">. After all these, you need to build Debian packages under the proper method as <ref id=\"build\">, check them as <ref id=\"checkit\">, and upload them as <ref id=\"upload\">. I will explain all these steps."
msgstr "ソース中の<file>debian</file>ディレクトリにたくさんのテンプレートファイルが作成されていることにも注意が必要です。これらについては、<ref id=\"dreq\"> と <ref id=\"dother\"> で説明します。パッケージ作成が自動的な過程ではないことも理解しておかねばなりません。<ref id=\"modify\"> のように、開発元のソースを Debian 向けに変更する必要があります。こういった作業の後で、<ref id=\"build\"> のように正しいやり方で Debian パッケージをビルドし、<ref id=\"checkit\"> のようにチェックし、そして <ref id=\"upload\"> のようにしてアップロードする必要があります。これら全てのステップについてこれから説明します。"

#. type: <p><list>
#: maint-guide.en.sgml:741
msgid "Once again, as a new maintainer you are discouraged from creating complicated packages, e.g.,"
msgstr "繰り返しますが、新規メンテナのあなたには、以下のような複雑なパッケージの作成はお勧めできません。"

#. type: <p></p>
#: maint-guide.en.sgml:743
msgid "multiple binary packages,"
msgstr "複数バイナリパッケージ"

#. type: <p></p>
#: maint-guide.en.sgml:744
msgid "library packages,"
msgstr "ライブラリパッケージ"

#. type: <p></p>
#: maint-guide.en.sgml:745
msgid "kernel module packages,"
msgstr "カーネルモジュールパッケージ"

#. type: <p></p>
#: maint-guide.en.sgml:746
msgid "kernel patch packages,"
msgstr "カーネルパッチパッケージ"

#. type: <p></p>
#: maint-guide.en.sgml:748
msgid "the source file format being neither in <file>tar.gz</file> nor <file>tar.bz2</file>, or"
msgstr "ソースファイルの形式が、<file>tar.gz.</file> や <file>tar.bz2</file> でないもの"

#. type: <p></p>
#: maint-guide.en.sgml:749
msgid "the source tarball containing undistributable contents."
msgstr "配布できない内容がソースの tarball にあるもの"

#. type: </list></p>
#: maint-guide.en.sgml:753
msgid "It's not too hard, but it does require a bit more knowledge, so we won't describe all of it here."
msgstr "実際には作業自体はそれほど大変ではないのですが、多少知識が余分に必要になります。そのため、ここではその作業について 一切説明しません。"

#. type: <p></p>
#: maint-guide.en.sgml:758
msgid "If you accidentally erased some template files while working on them, you can recover them by running <prgn>dh_make</prgn> with the <tt>--addmissing</tt> option again in a Debian package source tree."
msgstr "作業中にテンプレートファイルを間違って消した場合は、Debian パッケージのソースツリーで <prgn>dh_make</prgn> を <tt>--addmissing</tt> オプションつきで再度実行することで修復できます。"

#. type: <p></p>
#: maint-guide.en.sgml:762
msgid "Updating an existing package may get complicated since it may be using older techniques. Please stick with fresh packaging cases for now to learn basics. I will come back to explain it later in <ref id=\"update\">."
msgstr "既存のパッケージの更新は、古いテクニックが使われていたりして、やっかいな場合があります。基本を学習するために、今のところは新規パッケージの作成を続けてください。後ほど、<ref id=\"update\"> で取り上げて説明します。"

#. type: <heading></heading>
#: maint-guide.en.sgml:764
msgid "Modifying the source"
msgstr "ソースコードの変更"

#. type: <p></p>
#: maint-guide.en.sgml:768
msgid "Please note that there isn't space here to go into <em>all</em> the details of fixing upstream sources, but here are some basic steps and problems people often run across."
msgstr "開発元のソースを修正する具体的なやり方について、<em>何から何まで</em>説明するにはとても紙面が足りませんが、よくあるパターンとしては大体以下のようなものでしょう。"

#. type: <heading></heading>
#: maint-guide.en.sgml:770
msgid "Set up <prgn>quilt</prgn>"
msgstr "<prgn>quilt</prgn> のセットアップ"

#. type: <p><example>
#: maint-guide.en.sgml:778
msgid "The <prgn>quilt</prgn> program offers the basic method to record modification to the source for the Debian packaging. Since slightly different default is desirable for Debian packaging, let's set up <file>~/.quiltrc</file> as follows. <footnote><p>You can disable this configuration by starting the <prgn>quilt</prgn> command as \"<tt>quilt --quiltrc /dev/null ...</tt>\". </p></footnote>"
msgstr "<prgn>quilt</prgn> プログラムはソースに対する Debian パッケージ向けの修正を記録する、基本的な方法です。Debian パッケージで使うには、多少デフォルトと違うのが望ましいので、以下のように <file>~/.quiltrc</file> を設定してください。<footnote><p>この設定を無効にするには、<prgn>quilt</prgn>コマンドを \"<tt>quilt --quiltrc /dev/null ...</tt>\" として実行すれば良いです。</p></footnote>"

#. type: <example></example>
#: maint-guide.en.sgml:790
#, no-wrap
msgid ""
"d=. ; while [ ! -d \"$d/debian\" -a `readlink -e $d` != / ]; do d=\"$d/..\"; done\n"
"if [ -d \"$d/debian\" ] && [ -z \"$QUILT_PATCHES\" ]; then\n"
"    # Debian packaging case and unset $QUILT_PATCHES\n"
"    QUILT_PATCHES=debian/patches\n"
"    QUILT_PATCH_OPTS=\"--unified-reject-files\"\n"
"    QUILT_DIFF_ARGS=\"-p ab --no-timestamps --no-index --color=auto\"\n"
"    QUILT_REFRESH_ARGS=\"-p ab --no-timestamps --no-index\"\n"
"    QUILT_COLORS=\"diff_hdr=1;32:diff_add=1;34:diff_rem=1;31:diff_hunk=1;33:diff_ctx=35:diff_cctx=33\"\n"
"    if ! [ -d $d/debian/patches ]; then mkdir $d/debian/patches; fi\n"
"fi"
msgstr ""
"d=. ; while [ ! -d \"$d/debian\" -a `readlink -e $d` != / ]; do d=\"$d/..\"; done\n"
"if [ -d \"$d/debian\" ] && [ -z \"$QUILT_PATCHES\" ]; then\n"
"    # Debian packaging case and unset $QUILT_PATCHES\n"
"    QUILT_PATCHES=debian/patches\n"
"    QUILT_PATCH_OPTS=\"--unified-reject-files\"\n"
"    QUILT_DIFF_ARGS=\"-p ab --no-timestamps --no-index --color=auto\"\n"
"    QUILT_REFRESH_ARGS=\"-p ab --no-timestamps --no-index\"\n"
"    QUILT_COLORS=\"diff_hdr=1;32:diff_add=1;34:diff_rem=1;31:diff_hunk=1;33:diff_ctx=35:diff_cctx=33\"\n"
"    if ! [ -d $d/debian/patches ]; then mkdir $d/debian/patches; fi\n"
"fi"

#. type: <p></p>
#: maint-guide.en.sgml:794
msgid "See <manref section=\"1\" name=\"quilt\"> and <file>/usr/share/doc/quilt/quilt.html</file> for how to use <prgn>quilt</prgn>."
msgstr "<prgn>quilt</prgn> の使い方については、<manref section=\"1\" name=\"quilt\"> と <file>/usr/share/doc/quilt/quilt.html</file>を参照してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:796
msgid "Fixing upstream bug"
msgstr "開発元のバグを修正する"

#. type: <p><example>
#: maint-guide.en.sgml:801
msgid "Let's assume you find an error in the upstream <file>Makefile</file> file as follows where \"<tt>install: gentoo</tt>\" should have been \"<tt>install: gentoo-target</tt>\"."
msgstr "開発元の <file>Makefile</file> にエラーを見つけて、\"<tt>install: gentoo</tt>\" の部分が \"<tt>install: gentoo-target</tt>\" となっているべきだったとします。"

#. type: <example></example>
#: maint-guide.en.sgml:806
#, no-wrap
msgid ""
"install: gentoo\n"
"        install ./gentoo $(BIN)\n"
"        install icons/* $(ICONS)\n"
"        install gentoorc-example $(HOME)/.gentoorc"
msgstr ""
"install: gentoo\n"
"        install ./gentoo $(BIN)\n"
"        install icons/* $(ICONS)\n"
"        install gentoorc-example $(HOME)/.gentoorc"

#. type: <p><example>
#: maint-guide.en.sgml:814
msgid "Let's fix this and record this with the <prgn>quilt</prgn> command as <file>fix-gentoo-target.patch</file>. <footnote><p>The <file>debian/patches</file> directory should exist now if you run <prgn>dh_make</prgn> as described before. This example operation creates it just in case you are updating the existing package.</p></footnote>"
msgstr "これを修正して、<prgn>quilt</prgn> コマンドを使って <file>fix-gentoo-target.patch</file> として登録しましょう。<footnote><p>前に説明したように <prgn>dh_make</prgn> を実行していれば、<file>debian/patches</file>ディレクトリはもう存在しているはずです。この操作例では、既存のパッケージを更新している場合に合わせて作成しています。</p></footnote>"

#. type: <example></example>
#: maint-guide.en.sgml:818
#, no-wrap
msgid ""
"$ mkdir debian/patches\n"
"$ quilt new fix-gentoo-target.patch\n"
"$ quilt add Makefile"
msgstr ""
"$ mkdir debian/patches\n"
"$ quilt new fix-gentoo-target.patch\n"
"$ quilt add Makefile"

#. type: </example><example>
#: maint-guide.en.sgml:822
msgid "You change the <file>Makefile</file> file as follows."
msgstr "<file>Makefile</file> ファイルを次のように変更します。"

#. type: <example></example>
#: maint-guide.en.sgml:827
#: maint-guide.en.sgml:977
#, no-wrap
msgid ""
"install: gentoo-target\n"
"        install ./gentoo $(BIN)\n"
"        install icons/* $(ICONS)\n"
"        install gentoorc-example $(HOME)/.gentoorc"
msgstr ""
"install: gentoo-target\n"
"        install ./gentoo $(BIN)\n"
"        install icons/* $(ICONS)\n"
"        install gentoorc-example $(HOME)/.gentoorc"

#. type: <p><example>
#: maint-guide.en.sgml:831
msgid "Ask <prgn>quilt</prgn> to refresh the patch to create <file>debian/patches/fix-gentoo-target.patch</file> and add its description."
msgstr "パッチを更新して <file>debian/patches/fix-gentoo-target.patch</file> を作成するように <prgn>quilt</prgn> に要求し、それから説明を追記します。"

#. type: <example></example>
#: maint-guide.en.sgml:835
#: maint-guide.en.sgml:1017
#, no-wrap
msgid ""
"$ quilt refresh\n"
"$ quilt header -e\n"
"... describe patch"
msgstr ""
"$ quilt refresh\n"
"$ quilt header -e\n"
"... パッチの詳細"

#. type: <heading></heading>
#: maint-guide.en.sgml:838
msgid "Installation of files to the destination"
msgstr "指定した場所へファイルをインストールする"

#. type: <p></p>
#: maint-guide.en.sgml:846
msgid "Normally, programs install themselves in the <file>/usr/local</file> subdirectory. Since it is reserved for system administrator's (or user's) private use, Debian packages must not use that directory but should use system directories such as the <file>/usr/bin</file> subdirectory following the Filesystem Hierarchy Standard (<url id=\"http://www.debian.org/doc/packaging-manuals/fhs/fhs-2.3.html\" name=\"FHS\">, <file>/usr/share/doc/debian-policy/fhs/fhs-2.3.html</file>)."
msgstr "通常、プログラムは自分自身を <file>/usr/local</file> サブディレクトリにインストールします。システム管理者 (もしくはユーザ) の個人用に予約されているため、Debian パッケージではそのディレクトリを使わず、Filesystem Hierarchy Standard (<url id=\"http://www.debian.org/doc/packaging-manuals/fhs/fhs-2.3.html\" name=\"FHS\">、<file>/usr/share/doc/debian-policy/fhs/fhs-2.3.html</file>) に従って <file>/usr/bin/</file> サブディレクトリのようなシステムディレクトリを使わなくてはなりません。"

#. type: <p></p>
#: maint-guide.en.sgml:853
msgid "Normally, <manref section=\"1\" name=\"make\"> is used to automate building the program and the execution of \"<tt>make install</tt>\" installs programs directly to the desired destination by the <tt>install</tt> target of the <file>Makefile</file> file. In order for Debian to provide binary packages, the build system installs programs to the file tree image created under a temporary directory instead to the actual destination."
msgstr "プログラムのビルドを自動化するには、通常 <manref section=\"1\" name=\"make\"> が使われており、<tt>make install</tt> を実行すると、<file>Makefile</file> の<tt>install</tt> ターゲットによって希望する場所へ直接インストールされます。Debian でバイナリパッケージを提供するために、ビルドシステムは実際のインストール先のかわりに、一時ディレクトリの下に作成されたファイルツリーのイメージへプログラムをインストールします。"

#. type: <p><list>
#: maint-guide.en.sgml:859
msgid "These 2 differences between (1) the normal program installation and (2) the Debian packaging can be transparently addressed by the <package>debhelper</package> package through the <prgn>dh_auto_configure</prgn> and <prgn>dh_auto_install</prgn> commands if the following conditions are met."
msgstr "(1) 普通のプログラムインストールと、(2) Debian パッケージ作成のこれら二つの違いは、次の条件を満たす場合には、<package>debhelper</package> パッケージが <prgn>dh_auto_configure</prgn> と <prgn>dh_auto_install</prgn> のコマンドを使ってあまり意識せずに対応することができます。"

#. type: <p></p>
#: maint-guide.en.sgml:863
msgid "The <file>Makefile</file> file follows the GNU conventions to support <tt>$(DESTDIR)</tt> variable (<file>/usr/share/doc/gnu-standards/standards.html#Makefile-Conventions</file>)."
msgstr "<file>Makefile</file> ファイルが GNU の規約に従って <tt>$(DESTDIR)</tt> 変数 (<file>/usr/share/doc/gnu-standards/standards.html#Makefile-Conventions</file>) をサポートしていること。"

#. type: <p></p>
#: maint-guide.en.sgml:864
msgid "The source follows the Filesystem Hierarchy Standard (FHS)."
msgstr "そのソースが Filesystem Hierarchy Standard (FHS) に準拠していること。"

#. type: <p></p>
#: maint-guide.en.sgml:872
msgid "Programs that use GNU <prgn>autoconf</prgn> <em>automatically</em> follow the GNU conventions and their packaging is almost <em>automatic</em>. With this and other heuristics, the <package>debhelper</package> package estimates that it works for about 90% of packages without making any intrusive changes to their build system. So the packaging is not as complicated as it may seem."
msgstr "GNU <prgn>autoconf</prgn> を使っているプログラムは、<em>自動的に</em> GNU 規約に準拠するので、そのパッケージ作成はほとんど <em>自動化</em>されます。こうしたことや他の経験からすると、<package>debhelperl</package> パッケージはビルドシステムに煩わしい変更を加えることなく、約 90% のパッケージで使えると推定されます。そのため、パッケージ作成は見かけほど複雑ではありません。"

#. type: <p></p>
#: maint-guide.en.sgml:878
msgid "If you need to make changes in the <file>Makefile</file> file, you should make sure to support these <tt>$(DESTDIR)</tt> variable. The <tt>$(DESTDIR)</tt> variable is unset in it and is prepended to each file path used for the program installation. The packaging script will set <tt>$(DESTDIR)</tt> to the temporary directory."
msgstr "もし <file>Makefile</file> ファイルを変更する必要があるなら、これら <tt>$(DESTDIR)</tt> 変数をサポートするようにしましょう。Makefile では <tt>$(DESTDIR)</tt> 変数は設定されておらず、プログラムのインストールに使われる各ファイルパスの前に付与されます。パッケージ作成スクリプトが <tt>$(DESTDIR)</tt> を一時ディレクトリにセットします。"

#. type: <p></p>
#: maint-guide.en.sgml:893
msgid "The temporary directory used by the <prgn>dh_auto_install</prgn> command is chosen as <file>debian/<var>package</var></file> for single binary packages. <footnote><p>For multiple binary packages, the <prgn>dh_auto_install</prgn> command uses <file>debian/tmp</file> as the temporary directory while the <prgn>dh_install</prgn> command with the help of <file>debian/<var>package-1</var>.install</file> and <file>debian/<var>package-2</var>.install</file> files will split contents of <file>debian/tmp</file> into <file>debian/<var>package-1</var></file> and <file>debian/<var>package-2</var></file> temporary directories to create multiple binary <file>*.deb</file> packages.</p></footnote> Everything that is contained in the temporary directory will be installed on a user's system when they install your package, the only difference is that <prgn>dpkg</prgn> will be installing the files in the root directory."
msgstr "<prgn>dh_auto_install</prgn> コマンドが使う一時ディレクトリは、単一バイナリパッケージでは <file>debian/<var>package</var></file> のように指定されます。<footnote><p>複数バイナリパッケージでは、<prgn>dh_auto_install</prgn> コマンドは<file>debian/tmp</file> を一時ディレクトリとして使いますが、<prgn>dh_install</prgn> コマンドは <file>debian/<var>package-1</var>.install</file> や <file>debian/<var>package-2</var>.install</file> ファイルによって、<file>debian/tmp</file> の中身を <file>debian/<var>package-1</var></file> や <file>debian/<var>package-2</var></file> 一時ディレクトリに分配することで複数バイナリ <file>*.deb</file> パッケージを作成します。</p></footnote>一時ディレクトリに含まれているものは全て、ユーザがあなたのパッケージをインストールする時に、そのシステムにインストールされます。唯一の違いは、<prgn>dpkg</prgn> はファイルをルートディレクトリにインストールするということです。"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:901
msgid "Bear in mind that even though your program installs in <file>debian/<var>package</var></file>, it still needs to behave correctly when placed in the root directory, i.e. when installed from the <file>.deb</file> package. So you must not allow the build system to hardcode strings like <tt>/home/me/deb/<var>package</var>-<var>version</var>/usr/share/<var>package</var></tt> into the package file."
msgstr "パッケージの作成においては、プログラムは <file>debian/<var>package</var></file> にインストールされますが、例えば <file>.deb</file> パッケージからインストールされた時など、ルートディレクトリ以下に展開された場合も正しく動作できるようにしなければならない、ということを覚えておいてください。このため、ビルドシステムが <tt>/home/me/deb/<var>package</var>-<var>version</var>/usr/share/<var>package</var></tt> といった特定のパスを示す文字列をパッケージファイルの中に記録しないようにしなければなりません。"

#. type: <p><example>
#: maint-guide.en.sgml:911
msgid "Here's the relevant part of <package>gentoo</package>'s <file>Makefile</file> file <footnote><p>This is just an example to show how the <file>Makefile</file> file should look like. If the <file>Makefile</file> file is created by the <prgn>./configure</prgn> command, the correct way to fix this kind of <file>Makefile</file> is to executed the <prgn>./configure</prgn> command from the <prgn>dh_auto_configure</prgn> command with default options including <tt>--prefix=/usr</tt>.</p></footnote>:"
msgstr "<package>gentoo</package> の <file>Makefile</file> で該当する部分はこれです<footnote><p>これは <file>Makefile</file> ファイルがこうなっているべきである、ということを示すための例にすぎません。<file>Makefile</file> ファイルが <prgn>./configure</prgn> コマンドで作成されているなら、この手の <file>Makefile</file> を修正する正しい方法は、<prgn>dh_auto_configure</prgn> コマンドに <tt>--prefix=/usr</tt> を含むデフォルトのオプションを与えて、<prgn>./configure</prgn> コマンドを実行させることです。</p></footnote>:"

#. type: <example></example>
#: maint-guide.en.sgml:917
#, no-wrap
msgid ""
"# Where to put binary on 'make install'?\n"
"BIN     = /usr/local/bin\n"
"\n"
"# Where to put icons on 'make install'?\n"
"ICONS   = /usr/local/share/gentoo"
msgstr ""
"# Where to put binary on 'make install'?\n"
"BIN     = /usr/local/bin\n"
"\n"
"# Where to put icons on 'make install'?\n"
"ICONS   = /usr/local/share/gentoo"

#. type: <p><example>
#: maint-guide.en.sgml:922
msgid "We see that the files are set to install under <file>/usr/local</file>. Change those paths to:"
msgstr "ファイルが <file>/usr/local</file> 以下にインストールされるようになっていることがわかります。 このパスを以下のように変更してください："

#. type: <example></example>
#: maint-guide.en.sgml:928
#, no-wrap
msgid ""
"# Where to put binary on 'make install'?\n"
"BIN     = $(DESTDIR)/usr/bin\n"
"\n"
"# Where to put icons on 'make install'?\n"
"ICONS   = $(DESTDIR)/usr/share/gentoo"
msgstr ""
"# Where to put binary on 'make install'?\n"
"BIN     = $(DESTDIR)/usr/bin\n"
"\n"
"# Where to put icons on 'make install'?\n"
"ICONS   = $(DESTDIR)/usr/share/gentoo"

#. type: <p></p>
#: maint-guide.en.sgml:934
msgid "But why in that directory, and not some other? Because Debian packages never install files beneath <file>/usr/local</file> -- that tree is reserved for the system administrator's use. Such files on Debian systems go under <file>/usr</file> instead."
msgstr "しかしなぜこのディレクトリなんでしょう。他の所じゃだめでしょうか？ だめです。なぜなら Debian パッケージの場合、<file>/usr/local</file> 以下へファイルをインストールすることは絶対に無いと決まっているからです。このディレクトリ以下は個別のシステムの管理者が使うために予約されています。 Debian システム上でパッケージからインストールされるファイルは その代わりに <file>/usr</file> へインストールされます。"

#. type: <p></p>
#: maint-guide.en.sgml:939
msgid "The more exact locations for binaries, icons, documentation etc. are specified in the Filesystem Hierarchy Standard (see <file>/usr/share/doc/debian-policy/fhs/</file>). I recommend you browse it and read the sections that might concern your package."
msgstr "バイナリ、アイコン、文書など、それぞれのファイルを保存すべきもっと正確な場所については、「Filesystem Hierarchy Standard」 (<file>/usr/share/doc/debian-policy/fhs/</file> を参照) の中で規定されています。ざっと目を通して、あなたのパッケージに関係しそうな箇所を、きちんと読んでおくことをお勧めします。"

#. type: <p></p>
#: maint-guide.en.sgml:945
msgid "So, we should install the binary in <file>/usr/bin</file> instead of <file>/usr/local/bin</file>, the manual page in <file>/usr/share/man/man1</file> instead of <file>/usr/local/man/man1</file> etc. Notice how there's no manual page mentioned in <package>gentoo</package>'s <file>Makefile</file>, but since the Debian Policy requires that every program has one, we'll make one later and install it in <file>/usr/share/man/man1</file>."
msgstr "そういうわけで、バイナリは <file>/usr/local/bin</file> ではなく <file>/usr/bin</file> へインストールしなければなりませんし、マニュアルページは <file>/usr/local/man/man1</file> の代わりに <file>/usr/share/man/man1</file> へインストールする必要があります。ここで <package>gentoo</package> の <file>Makefile</file> には、マニュアルページに関する記述がまったく無いことに注意してください。Debian ポリシーでは、すべてのプログラムがそれぞれマニュアルを用意しなければならないと定めていますから、後で gentoo のマニュアルを作成して、それを <file>/usr/share/man/man1</file> 以下へインストールすることにします。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:951
msgid "Some programs don't use <file>Makefile</file> variables to define paths such as these. This means you might have to edit some real C sources in order to fix them to use the right locations. But where to search, and exactly what for? You can find this out by issuing:"
msgstr "プログラムの中には、このようなパスを定義するための <file>Makefile</file> 変数を使っていないものもあります。このような場合、C のソースそのものをいじって、指定された場所を使うように修正しなければなりません。でもどこを探し、何を確認すればよいのでしょうか? 以下のコマンドを実行すれば該当箇所を見つけることができます。"

#. type: <example></example>
#: maint-guide.en.sgml:953
#, no-wrap
msgid "$ grep -nr -e 'usr/local/lib' --include='*.[c|h]' ."
msgstr "$ grep -nr -e 'usr/local/lib' --include='*.[c|h]' ."

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:957
msgid "<prgn>grep</prgn> will run recursively through the source tree and tell you the filename and the line number for all matches."
msgstr "<prgn>grep</prgn> がソースツリーを再帰的に検索し、該当箇所を見つけたらそのファイルの名前と検索対象の文字列が含まれる行番号とを表示します。"

#. type: <p><example>
#: maint-guide.en.sgml:959
msgid "Edit those files and in those lines replace <tt>usr/local/lib</tt> with <tt>usr/lib</tt>."
msgstr "それらのファイルを編集し、該当行の <tt>usr/local/lib</tt> を <tt>usr/lib</tt> に置き換えてください。"

#. type: <example></example>
#: maint-guide.en.sgml:962
#, no-wrap
msgid ""
"$ vim '+argdo %s/usr\\/local\\/lib/usr\\/lib/gce|update' +q \\\n"
"      $(find . -type f -name '*.[c|h]')"
msgstr ""
"$ vim '+argdo %s/usr\\/local\\/lib/usr\\/lib/gce|update' +q \\\n"
"      $(find . -type f -name '*.[c|h]')"

#. type: <p></p>
#: maint-guide.en.sgml:965
msgid "Be careful that you don't mess up the rest of the code! :-)"
msgstr "他のコードを汚さないよう、注意してくださいね！ :-)"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:969
msgid "After that you should find the install target (search for line that starts with <tt>install:</tt>, that will usually work) and rename all references to directories other than ones defined at the top of the <file>Makefile</file>."
msgstr "修正が終ったら、インストールターゲットを探しましょう(「<tt>install:</tt>」 で始まる行を探してください。この方法でたいていうまくいきます)。<file>Makefile</file> の先頭で直接定義されているものを除いて、ディレクトリへの参照をすべて変更してください。"

#. type: <p><example>
#: maint-guide.en.sgml:972
msgid "After your upstream bug fix, <package>gentoo</package>'s install target said:"
msgstr "開発元のバグ修正をした後、<package>gentoo</package> の install ターゲットはこうなっています："

#. type: <p><example>
#: maint-guide.en.sgml:981
msgid "Let's fix this and record this with the <prgn>quilt</prgn> command as <file>debian/patches/install.patch</file>."
msgstr "<prgn>quilt</prgn> コマンドを使って、<file>debian/patches/install.patch</file> としてこれを修正して記録しましょう。"

#. type: <example></example>
#: maint-guide.en.sgml:984
#, no-wrap
msgid ""
"$ quilt new install.patch\n"
"$ quilt add Makefile"
msgstr ""
"$ quilt new install.patch\n"
"$ quilt add Makefile"

#. type: <p><example>
#: maint-guide.en.sgml:987
msgid "Let's change this for Debian package as following using the editor:"
msgstr "Debian パッケージ用に、これをエディタで次のように変更します："

#. type: <example></example>
#: maint-guide.en.sgml:993
#, no-wrap
msgid ""
"install: gentoo-target\n"
"        install -d $(BIN) $(ICONS) $(DESTDIR)/etc\n"
"        install ./gentoo $(BIN)\n"
"        install -m644 icons/* $(ICONS)\n"
"        install -m644 gentoorc-example $(DESTDIR)/etc/gentoorc"
msgstr ""
"install: gentoo-target\n"
"        install -d $(BIN) $(ICONS) $(DESTDIR)/etc\n"
"        install ./gentoo $(BIN)\n"
"        install -m644 icons/* $(ICONS)\n"
"        install -m644 gentoorc-example $(DESTDIR)/etc/gentoorc"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1001
msgid "You've surely noticed that there's now a \"<tt>install -d</tt>\" command before the other commands in the rule. The original <file>Makefile</file> didn't have it because usually the <tt>/usr/local/bin</tt> and other directories already exist on the system where one runs \"<tt>make install</tt>\". However, since we will install into our own empty (or even nonexistent) directory, we will have to create each and every one of those directories."
msgstr "お気づきになったでしょうが、変更後はこのルールの他のコマンドより前に 「<tt>install -d</tt>」 コマンドが追加されています。普通 「<tt>make install</tt>」 を実行するようなシステムなら <tt>/usr/local/bin</tt> や その他のディレクトリは既に存在しているでしょうから、 もともとの <file>Makefile</file> ではこのコマンドは使われていませんでした。しかし、私たちは独自に空っぽの（あるいはまだ存在さえしていない）ディレクトリにインストールするわけですから、これらの各ディレクトリを毎回作成する必要があります。"

#. type: <p><example>
#: maint-guide.en.sgml:1006
msgid "We can also add in other things at the end of the rule, like the installation of additional documentation that the upstream authors sometimes omit:"
msgstr "ルールの最後には、開発元の作者が省略することの多い付加的な資料のインストールなど、他の作業を追加することもできます。"

#. type: <example></example>
#: maint-guide.en.sgml:1009
#, no-wrap
msgid ""
"        install -d $(DESTDIR)/usr/share/doc/gentoo/html\n"
"        cp -a docs/* $(DESTDIR)/usr/share/doc/gentoo/html"
msgstr ""
"        install -d $(DESTDIR)/usr/share/doc/gentoo/html\n"
"        cp -a docs/* $(DESTDIR)/usr/share/doc/gentoo/html"

#. type: <p><example>
#: maint-guide.en.sgml:1013
msgid "After careful check, if everything is fine, ask <prgn>quilt</prgn> to refresh the patch to create <file>debian/patches/install.patch</file> and add its description."
msgstr "しっかりチェックをして、何も問題がないようであれば、<prgn>quilt</prgn> でパッチを更新して <file>debian/patches/install.patch</file> を作成し、パッチの説明を追記してください。"

#. type: <p><enumlist numeration="arabic">
#: maint-guide.en.sgml:1019
msgid "Now you have a series of patches."
msgstr "これで、一連のパッチができました。"

#. type: <p></p>
#: maint-guide.en.sgml:1021
msgid "Upstream bug fix: <file>debian/patches/fix-gentoo-target.patch</file>"
msgstr "上流のバグ修正： <file>debian/patches/fix-gentoo-target.patch</file>"

#. type: <p></p>
#: maint-guide.en.sgml:1022
msgid "Debian specific packaging modification: <file>debian/patches/install.patch</file>"
msgstr "Debian 固有のパッケージ上の変更： <file>debian/patches/install.patch</file>"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1032
msgid "Whenever you make changes that are not specifically related to Debian package such as <file>debian/patches/fix-gentoo-target.patch</file>, be sure to send them to the upstream maintainer so they can be included in the next program revision and be useful to everyone else. Also remember to make your fixes not specific to Debian or Linux (or even Unix!) prior to sending them -- make them portable. This will make your fixes much easier to apply."
msgstr "<file>debian/patches/fix-gentoo-target.patch</file> のような、特に Debian パッケージだけに限定されない変更を行った場合、その内容を開発元のメンテナに報告するようにしてください。そうすれば、プログラムの次版に反映してもらうことができ、他のすべての利用者にとっても有益な結果をもたらすことになります。また、あなたの修正を送る前に、Debian や Linux (あるいは Unix でさえも!) に特化した修正にせず、移植性をもたせることも忘れないでください。そうすれば、あなたの変更はずっと採用されやすくなります。"

#. type: <p></p>
#: maint-guide.en.sgml:1034
msgid "Note that you don't have to send the <file>debian/*</file> files upstream."
msgstr "開発元の作者へ <file>debian/*</file> ファイルを送らなくてもよいことに注意してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:1036
msgid "Differing libraries"
msgstr "ライブラリの差異"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1042
msgid "There is one other common problem: libraries are often different from platform to platform. For example, a <file>Makefile</file> can contain a reference to a library which doesn't exist on Debian systems. In that case, we need to change it to a library which does exist in Debian, and serves the same purpose."
msgstr "よくある問題がもう一つあります： ライブラリはしばしばプラットフォームごとに異なります。例えば、<file>Makefile</file> は Debian システム上に存在しないライブラリへの参照を含んでいるかもしれません。その場合には、Debian 上に存在する互換ライブラリを指すように変更し、同じ用を足すようにしてやらなければなりません。"

#. type: <p><example>
#: maint-guide.en.sgml:1049
msgid "So, if there is a line in your program's <file>Makefile</file> (or <file>Makefile.in</file>) that says something like this (and your program doesn't compile) <footnote><p>The author realizes that this is not the best example considering our <package>libncurses</package> package now ships with a <file>libcurses.so</file> symlink, but he couldn't think of a better one. Suggestions very welcome :-)</p></footnote>:"
msgstr "そのため、プログラムの <file>Makefile</file> (もしくは <file>Makefile.in</file>) にこのような感じになっている行があった (そしてプログラムがコンパイルできない) 場合 <footnote><p><package>libncurses</package> パッケージが <file>libcurses.so</file> シンボリックリンクを持っていることを考えると、これが最適な例ではないと著者は思うのですが、よりよい例を思いつきません。提案をもらえるとありがたいです :-)</p></footnote> は："

#. type: <example></example>
#: maint-guide.en.sgml:1051
#, no-wrap
msgid "LIBS = -lcurses -lsomething -lsomethingelse"
msgstr "LIBS = -lcurses -lなんとか -lかんとか"

#. type: <p><example>
#: maint-guide.en.sgml:1055
msgid "Let's fix this as <file>debian/patches/ncurse.patch</file> by changing <tt>curses</tt> into <tt>ncurses</tt>."
msgstr "これを <file>debian/patches/ncurse.patch</file> として修正し、<tt>curses</tt> を <tt>ncurses</tt> に変更しましょう。"

#. type: <example></example>
#: maint-guide.en.sgml:1062
#, no-wrap
msgid ""
"$ quilt new ncurse.patch\n"
"$ quilt add Makefile\n"
"$ sed -i -e \"s/-lcurses/-lncurses/g\" Makefile\n"
"$ quilt refresh\n"
"$ quilt header -e\n"
"... describe patch"
msgstr ""
"$ quilt new ncurse.patch\n"
"$ quilt add Makefile\n"
"$ sed -i -e \"s/-lcurses/-lncurses/g\" Makefile\n"
"$ quilt refresh\n"
"$ quilt header -e\n"
"... パッチの詳細"

#. type: <heading></heading>
#: maint-guide.en.sgml:1065
msgid "Required files under the <file>debian</file> directory"
msgstr "debian/ディレクトリ以下に無くてはならないファイル"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1071
msgid "There is a new subdirectory under the program's source directory, it's called <file>debian</file>. There are a number of files in this directory that we should edit in order to customize the behavior of the package. The most important of them are <file>control</file>, <file>changelog</file>, <file>copyright</file> and <file>rules</file>, which are required for all packages."
msgstr "プログラムのソースディレクトリの中に <file>debian</file>という名前の新しいディレクトリがつくられています。このディレクトリ内には多くのファイルがあり、パッケージの振る舞いをカスタマイズするには、これらを編集します。特に、 <file>control</file>、 <file>changelog</file>、 <file>copyright</file> 、 <file>rules</file>は全てのパッケージになくてはならないファイルです。"

#. type: <heading></heading>
#: maint-guide.en.sgml:1073
msgid "<file>control</file> file"
msgstr "<file>control</file>ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:1078
msgid "This file contains various values which <prgn>dpkg</prgn>, <prgn>dselect</prgn>, <prgn>apt-get</prgn>, <prgn>apt-cache</prgn>, <prgn>aptitude</prgn>, and other package management tools will use to manage the package. It is defined by the <url id=\"http://www.debian.org/doc/debian-policy/ch-controlfields.html\" name=\"Debian Policy Manual, 5 'Control files and their fields'\">."
msgstr "<prgn>dpkg</prgn>、<prgn>dselect</prgn>、 <prgn>apt-get</prgn>、 <prgn>apt-cache</prgn>、 <prgn>aptitude</prgn>などのパッケージ管理のためのツールが利用する情報は、このファイルに記載されています。詳細は、<url id=\"http://www.debian.org/doc/debian-policy/ch-controlfields.html\" name=\"Debian Policy Manual, 5 'Control files and their fields'\">に定義されています。"

#. type: <p><example>
#: maint-guide.en.sgml:1081
msgid "Here is the control file <prgn>dh_make</prgn> created for us:"
msgstr "以下は、<prgn>dh_make</prgn> が生成したcontrolファイルのひな型です。"

#. type: <example></example>
#: maint-guide.en.sgml:1095
#, no-wrap
msgid ""
" 1 Source: gentoo\n"
" 2 Section: unknown\n"
" 3 Priority: extra\n"
" 4 Maintainer: Josip Rodin &lt;joy-mg@debian.org&gt;\n"
" 5 Build-Depends: debhelper (>= 7.0.50~)\n"
" 6 Standards-Version: 3.8.4\n"
" 7 Homepage: &lt;insert the upstream URL, if relevant&gt;\n"
" 8\n"
" 9 Package: gentoo\n"
"10 Architecture: any\n"
"11 Depends: ${shlibs:Depends}, ${misc:Depends}\n"
"12 Description: &lt;insert up to 60 chars description&gt;\n"
"13  &lt;insert long description, indented with spaces&gt;"
msgstr ""
" 1 Source: gentoo\n"
" 2 Section: unknown\n"
" 3 Priority: extra\n"
" 4 Maintainer: Josip Rodin &lt;joy-mg@debian.org&gt;\n"
" 5 Build-Depends: debhelper (>= 7.0.50~)\n"
" 6 Standards-Version: 3.8.4\n"
" 7 Homepage: &lt;insert the upstream URL, if relevant&gt;\n"
" 8\n"
" 9 Package: gentoo\n"
"10 Architecture: any\n"
"11 Depends: ${shlibs:Depends}, ${misc:Depends}\n"
"12 Description: &lt;insert up to 60 chars description&gt;\n"
"13  &lt;insert long description, indented with spaces&gt;"

#. type: </example></p>
#: maint-guide.en.sgml:1097
#: maint-guide.en.sgml:1391
#: maint-guide.en.sgml:1450
#: maint-guide.en.sgml:1479
#: maint-guide.en.sgml:1510
msgid "(I've added the line numbers.)"
msgstr "(行番号は筆者による)"

#. type: <p></p>
#: maint-guide.en.sgml:1099
msgid "Lines 1-6 are the control information for the source package."
msgstr "1-6 行目は、ソースパッケージの管理情報です。"

#. type: <p></p>
#: maint-guide.en.sgml:1101
msgid "Line 1 is the name of the source package."
msgstr "1 行目は、ソースパッケージ名です。"

#. type: <p></p>
#: maint-guide.en.sgml:1103
msgid "Line 2 is the section of the distribution the source package goes into."
msgstr "2 行目は、パッケージが所属するディストリビューション内のセクションです。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1117
msgid "As you may have noticed, Debian archive is divided in sections: <tt>main</tt> (the free software), <tt>non-free</tt> (the not really free software) and <tt>contrib</tt> (free software that depends on non-free software). Under those, there are logical subsections that describe in short what packages are in. So we have <tt>admin</tt> for administrator-only programs, <tt>base</tt> for the basic tools, <tt>devel</tt> for programmer tools, <tt>doc</tt> for documentation, <tt>libs</tt> for libraries, <tt>mail</tt> for e-mail readers and daemons, <tt>net</tt> for network apps and daemons, <tt>x11</tt> for X11 programs that don't fit anywhere else, and many more. See the <url id=\"http://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections\" name=\"Debian Policy Manual, 2.4 'Sections'\"> and <url id=\"http://packages.debian.org/unstable/\" name=\"List of sections in 'sid'\"> for the guidance."
msgstr "ご存知のように、Debianアーカイブは<tt>main</tt> (完全にフリーなソフトウェア)、<tt>non-free</tt> (実質フリーであるとはいえないソフトウェア)、<tt>contrib</tt> (自身はフリーだがnon-freeに依存するソフトウェア)にわかれています。さらにその下で、論理的なサブセクションに分類されています。例えば、管理者専用のプログラムは<tt>admin</tt> 、基本的なツールは<tt>base</tt>、プログラマのためのツールは<tt>devel</tt> 、文書作成関連は<tt>doc</tt>、ライブラリ群は<tt>libs</tt>、メールリーダやメールサーバに必要なデーモンなどは<tt>mail</tt>、ネットワーク関連のアプリケーションやデーモンは<tt>net</tt>、分類ができないX11用のプログラムは<tt>x11</tt>に分類され、他にも様々なサブセクションがあります。詳しくは、<url id=\"http://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections\" name=\"Debian Policy Manual, 2.4 'Sections'\"> と <url id=\"http://packages.debian.org/unstable/\" name=\"List of sections in 'sid'\"> を参照してください。"

#. type: <p></p>
#: maint-guide.en.sgml:1120
msgid "Let's change it then to x11. (A <tt>main/</tt> prefix is implied so we can omit it.)"
msgstr "ここではx11に変更してみましょう。(省略時は<tt>main/</tt>がデフォルトとして設定されます)"

#. type: <p><list>
#: maint-guide.en.sgml:1123
msgid "Line 3 describes how important it is that the user installs this package. See the <url id=\"http://www.debian.org/doc/debian-policy/ch-archive.html#s-priorities\" name=\"Debian Policy Manual, 2.5 'Priorities'\"> for the guidance."
msgstr "3行目は、ユーザーがパッケージをインストールする重要度を示しています。詳しくは<url id=\"http://www.debian.org/doc/debian-policy/ch-archive.html#s-priorities\" name=\"Debian Policy Manual, 2.5 'Priorities'\">を参照してください。"

#. type: <p></p>
#: maint-guide.en.sgml:1125
msgid "The <tt>optional</tt> priority will usually work for new packages that do not conflict with others with <tt>required</tt>, <tt>important</tt> or <tt>standard</tt> priorities."
msgstr "<tt>required</tt>、 <tt>important</tt>、<tt>standard</tt>のパッケージと競合しない新規のパッケージの場合は、<tt>optional</tt>で問題ないでしょう。"

#. type: <p></p>
#: maint-guide.en.sgml:1126
msgid "The <tt>extra</tt> priority will usually work for new packages that conflict with others with non-<tt>extra</tt> priorities."
msgstr "<tt>extra</tt>以外のパッケージと競合する可能性のある、新規パッケージの場合は、<tt>extra</tt>とすると大抵うまくいきます。 "

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1133
msgid "Section and priority are used by the frontends like <prgn>aptitude</prgn> when they sort packages and select defaults. Once you upload the package to Debian, the value of these two fields can be overridden by the archive maintainers, in which case you will be notified by email."
msgstr "セクション(Section)と優先度(Priority)は<prgn>aptitude</prgn>のようなフロントエンドがパッケージをソートする際と、デフォルトを選択する際に利用されます。Debianにアップロードしたパッケージのこれらの値は、アーカイブメンテナによって上書きされることがありますが、その場合は電子メールによって通知されます。"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1136
msgid "As this is a normal priority package and doesn't conflict with anything else, we will change the priority to \"<tt>optional</tt>\"."
msgstr "このパッケージは通常の優先度で、競合もないので、 \"<tt>optional</tt>\"にしましょう。"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1141
msgid "Line 4 is the name and email address of the maintainer. Make sure that this field includes a valid \"<tt>To</tt>\" header for an email, because after you upload it, the bug tracking system will use it to deliver bug emails to you. Avoid using commas, ampersands and parenthesis."
msgstr "4行目は、メンテナの名前と電子メールアドレスです。バグ追跡システムは、このフィールドに記載された宛先へユーザーからのバグ報告を送信するので、正しいメールアドレスを記載してください。コンマ ,、アンド記号 &、括弧 ()は使用しないでください。"

#. type: <p><list>
#: maint-guide.en.sgml:1152
msgid "The 5th line includes the list of packages required to build your package as the <tt>Build-Depends</tt> field. You can also have the <tt>Build-Depends-Indep</tt> field as an additional line, here. (see the <url id=\"http://www.debian.org/doc/debian-policy/ch-relationships.html#s-sourcebinarydeps\" name=\"Debian Policy Manual, 7.7 'Relationships between source and binary packages - Build-Depends, Build-Depends-Indep, Build-Conflicts, Build-Conflicts-Indep'\">). Some packages like <package>gcc</package> and <package>make</package> which are required by the <package>build-essential</package> package are implied. If you need to have other tools to build your package, you should add them to these fields. Multiple entries are separated with commas; read on for the explanation of binary dependencies to find out more about the syntax of these lines."
msgstr "5行目の<tt>Build-Depends</tt>フィールドは、新規パッケージのビルドに必要なパッケージのリストです。必要であればここに、<tt>Build-Depends-Indep</tt>フィールドを追加できます。(詳しくは<url id=\"http://www.debian.org/doc/debian-policy/ch-relationships.html#s-sourcebinarydeps\" name=\"Debian Policy Manual, 7.7 'Relationships between source and binary packages - Build-Depends, Build-Depends-Indep, Build-Conflicts, Build-Conflicts-Indep'\">を参照してください、)<package>gcc</package>や<package>make</package>のような<package>build-essential</package>に含まれるパッケージはデフォルトで含まれています。他のツールが必要な場合は、このフィールドに追加しましょう。複数記載する場合は、コンマで区切ります。このフィールドの書式については、バイナリ依存関係（後述）のところでもう少し詳しく説明します。"

#. type: <p></p>
#: maint-guide.en.sgml:1158
msgid "For all packages packaged with the <prgn>dh</prgn> command in the <file>debian/rules</file> file, you must have \"<tt>debhelper (>=7.0.50~)</tt>\" in the <tt>Build-Depends</tt> field to satisfy the Debian Policy requirement for the <tt>clean</tt> target."
msgstr "<file>debian/rules</file>を使用し、<prgn>dh</prgn>コマンドでパッケージングされたパッケージは、<tt>clean</tt>ターゲットに関するDebian ポリシーを満たすために、<tt>Build-Depends</tt>フィールドに\"<tt>debhelper (>=7.0.50~)</tt>\" を記載しなければなりません。"

#. type: <p></p>
#: maint-guide.en.sgml:1166
msgid "For source packages which have some binary packages with \"<tt>Architecture: any</tt>\", they are rebuild by the autobuilder. Since this autobuilder procedure runs \"<tt>debian/rules build</tt>\" in it while installing only packages listed in the <tt>Build-Depends</tt> field (see <ref id=\"autobuilder\">), the <tt>Build-Depends</tt> field needs to list practically all the required packages and the <tt>Build-Depends-indep</tt> is rarely used."
msgstr "\"<tt>Architecture: any</tt>\"のバイナリパッケージを含むソースパッケージはautobuilderによってリビルトされます。autobuilderは\"<tt>debian/rules build</tt>\"を実行します。その際に、<tt>Build-Depends</tt>フィールド (<ref id=\"autobuilder\">を参照)に列挙されたパッケージしかインストールしないので、<tt>Build-Depends</tt>フィールドには事実上必要なパッケージ全てを列挙しなければなりません。 <tt>Build-Depends-indep</tt>はあまり使われません。"

#. type: <p></p>
#: maint-guide.en.sgml:1171
msgid "For source packages which have binary packages only with \"<tt>Architecture: all</tt>\", the <tt>Build-Depends-Indep</tt> field may list all the required packages unless they are already listed in the <tt>Build-Depends</tt> field to satisfy the Debian Policy requirement for the <tt>clean</tt> target."
msgstr "\"<tt>Architecture: all</tt>\"のバイナリパッケージのみのソースパッケージは、<tt>clean</tt>ターゲットに関するDebianポリシーを満たすために、<tt>Build-Depends</tt>フィールドに記載されていない要求パッケージを<tt>Build-Depends-Indep</tt>フィールドに記載することもできます。"

#. type: <p></p>
#: maint-guide.en.sgml:1183
msgid "If you are not sure which one should be used, use the <tt>Build-Depends</tt> field to be on the safe side. <footnote><p>This somewhat strange situation is a feature well documented in the <url id=\"http://www.debian.org/doc/debian-policy/footnotes.html#f48\" name=\"Debian Policy Manual, Footnotes 48\">. This is not due to the use of the <prgn>dh</prgn> command in the <file>debian/rules</file> file but due to how the <prgn>dpkg-buildpackage</prgn> works. The same situation applies to the <url id=\"https://bugs.launchpad.net/launchpad-buildd/+bug/238141\" name=\"auto build system for Ubuntu\">. </p></footnote>"
msgstr "どちらのフィールドを使えうべきかわからなければ、<tt>Build-Depends</tt>にしておきましょう。<footnote><p>この、少し変わった状況は<url id=\"http://www.debian.org/doc/debian-policy/footnotes.html#f48\" name=\"Debian Policy Manual, Footnotes 48\">で詳しく説明されている機能です。これは、 <file>debian/rules</file>ファイル内の<prgn>dh</prgn>コマンドではなく、<prgn>dpkg-buildpackage</prgn>に起因します。同様の状況は<url id=\"https://bugs.launchpad.net/launchpad-buildd/+bug/238141\" name=\"auto build system for Ubuntu\">にも当てはまります。</p></footnote>"

# type: <p><example>
#. type: <p><example>
#: maint-guide.en.sgml:1185
msgid "To find out what packages your package needs to be built run the command:"
msgstr "以下のコマンドを使えば、新規のパッケージをビルドするためにどのパッケージが必要かを調べることができます。"

#. type: <example></example>
#: maint-guide.en.sgml:1187
#, no-wrap
msgid "$ dpkg-depcheck -d ./configure"
msgstr "$ dpkg-depcheck -d ./configure"

#. type: <p><example>
#: maint-guide.en.sgml:1192
msgid "To manually find exact build dependency for <prgn><var>/usr/bin/foo</var></prgn>, you execute"
msgstr "<prgn><var>/usr/bin/foo</var></prgn>の依存パッケージを手動でみつけるには、"

#. type: <example></example>
#: maint-guide.en.sgml:1194
#, no-wrap
msgid "$ objdump -p <var>/usr/bin/foo</var> | grep NEEDED"
msgstr "$ objdump -p <var>/usr/bin/foo</var> | grep NEEDED"

#. type: </example><example>
#: maint-guide.en.sgml:1196
msgid "and for each library listed, e.g., <prgn>libfoo.so.6</prgn>, execute"
msgstr "を実行し、表示された各ライブラリ（例えば<prgn>libfoo.so.6</prgn>の場合）について、"

#. type: <example></example>
#: maint-guide.en.sgml:1198
#, no-wrap
msgid "$ dpkg -S libfoo.so.6"
msgstr "$ dpkg -S libfoo.so.6"

# type: </example></p>
#. type: </example></p>
#: maint-guide.en.sgml:1203
msgid "Then you just take <tt>-dev</tt> version of every package as <tt>Build-Depends</tt> entry. If you use <prgn>ldd</prgn> for this purpose, it will report indirect lib dependencies as well, resulting in the problem of excessive build dependencies."
msgstr "とします。<tt>Build-Depends</tt>に、各ライブラリの<tt>-dev</tt>バージョンを採用します。<prgn>ldd</prgn>を使用して依存パッケージを見つけようとすると、間接的な依存も報告してきます。そのため、過度のビルド依存になってしまいます。"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1207
msgid "<package>gentoo</package> also happens to require <package>xlibs-dev</package>, <package>libgtk1.2-dev</package> and <package>libglib1.2-dev</package> to build, so we'll add them here next to <package>debhelper</package>."
msgstr "<package>gentoo</package>パッケージをビルドするには<package>xlibs-dev</package>、<package>libgtk1.2-dev</package>、 <package>libglib1.2-dev</package>が必要なので、<package>debhelper</package>の後に記述しましょう。"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1211
msgid "Line 6 is the version of the <url id=\"http://www.debian.org/doc/devel-manuals#policy\" name=\"Debian Policy Manual\"> standards this package follows, the one you read while making your package."
msgstr "6行目は、パッケージが準拠する<url id=\"http://www.debian.org/doc/devel-manuals#policy\" name=\"Debian Policy Manual\"> のバージョンです。これは、あなたがパッケージ作成の際に参照したポリシーマニュアルのバージョンです。"

#. type: <p></p>
#: maint-guide.en.sgml:1213
msgid "On line 7 you can put the URL of the homepage for the upstream program."
msgstr "7行目には上流プログラムのホームページアドレスを記載できます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1217
msgid "Line 9 is the name of the binary package. This is usually the same as the name of the source package, but it doesn't necessarily have to be that way."
msgstr "9行目はバイナリパッケージの名前です。ソースパッケージと同名にするのが通例ですが、そうでなくてもかまいません。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1222
msgid "Line 10 describes the CPU architecture the binary package can be compiled for. We'll leave this as \"<tt>any</tt>\" because <manref section=\"1\" name=\"dpkg-gencontrol\"> will fill in the appropriate value for any machine this package gets compiled on."
msgstr "10行目はバイナリパッケージをコンパイル可能なCPUアーキテクチャです。ここを\"<tt>any</tt>\"のままにしておくと、<manref section=\"1\" name=\"dpkg-gencontrol\">がパッケージをコンパイルしたマシンに合わせて適当に埋めてくれます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1227
msgid "If your package is architecture independent (for example, a shell or Perl script, or a document), change this to \"<tt>all</tt>\", and read later in <ref id=\"rules\"> about using the <tt>binary-indep</tt> rule instead of <tt>binary-arch</tt> for building the package."
msgstr "特定のアーキテクチャに依存しないパッケージであれば、(例えば、シェルやPerlスクリプト、文書パッケージの場合)、\"<tt>all</tt>\"に変更します。パッケージをビルドするには、<tt>binary-arch</tt>ではなく、<tt>binary-indep</tt>の使い方を読んでください。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1232
msgid "Line 11 shows one of the most powerful features of the Debian packaging system. Packages can relate to each other in various ways. Apart from <tt>Depends</tt>, other relationship fields are <tt>Recommends</tt>, <tt>Suggests</tt>, <tt>Pre-Depends</tt>, <tt>Breaks</tt>, <tt>Conflicts</tt>, <tt>Provides</tt>, and <tt>Replaces</tt>."
msgstr "11行目からはDebianのパッケージシステムが強力なことがわかります。パッケージは様々な形で相互に関係することができます。<tt>Depends</tt>の他には、<tt>Recommends</tt>、 <tt>Suggests</tt>、<tt>Pre-Depends</tt>、<tt>Breaks</tt>、 <tt>Conflicts</tt>、<tt>Provides</tt>、<tt>Replaces</tt>などがあります。"

#. type: <p></p>
#: maint-guide.en.sgml:1237
msgid "The package management tools usually behave the same way when dealing with these relations; if not, it will be explained. (see <manref section=\"8\" name=\"dpkg\">, <manref section=\"8\" name=\"dselect\">, <manref section=\"8\" name=\"apt\">, <manref section=\"1\" name=\"aptitude\"> etc.)"
msgstr "異なるパッケージ管理ツールであっても、通常この関係処理に同じ動作をします。そうでない場合については、後から説明します。(<manref section=\"8\" name=\"dpkg\">、<manref section=\"8\" name=\"dselect\">、<manref section=\"8\" name=\"apt\">、<manref section=\"1\" name=\"aptitude\">などを参照してください。)"

#. type: <p></p>
#: maint-guide.en.sgml:1239
msgid "This is what the dependencies mean:"
msgstr "以下にこれらの依存関係が持つ意味を説明します。"

#. type: <p></p>
#: maint-guide.en.sgml:1241
msgid "<tt>Depends</tt>"
msgstr "<tt>Depends (依存)</tt>"

#. type: <p></p>
#: maint-guide.en.sgml:1244
msgid "The package will not be installed unless the packages it depends on are installed. Use this if your program absolutely will not run (or will cause severe breakage) unless a particular package is present."
msgstr "依存しているパッケージがインストールされない限り、パッケージはインストールされません。あなたのプログラムが特定のパッケージなしでは動かない(または深刻な破損の原因になる恐れがある)場合はこれを使います。"

#. type: <p></p>
#: maint-guide.en.sgml:1246
msgid "<tt>Recommends</tt>"
msgstr "<tt>Recommends (推奨)</tt>"

#. type: <p></p>
#: maint-guide.en.sgml:1252
msgid "Use this for packages that are not strictly necessary but are typically used with your program. When a user installs your program, all frontends will likely prompt them to install the recommended packages. <prgn>aptitude</prgn> and <prgn>apt-get</prgn> install recommended packages along with your package (but the user can disable this default behaviour). <prgn>dpkg</prgn> will ignore this field."
msgstr "厳密には必須ではないけれど通常一緒に使われるようなパッケージを指定します。あなたのプログラムをユーザーがインストールする時、フロントエンドが推奨しているパッケージも一緒にインストールするか確認します。<prgn>aptitude</prgn>や<prgn>apt-get</prgn>の場合は、推奨パッケージも一緒にインストールします。(ユーザーはこの機能を無効化できます。)<prgn>dpkg</prgn>は推奨されるパッケージを無視します。"

#. type: <p></p>
#: maint-guide.en.sgml:1255
msgid "<tt>Suggests</tt>"
msgstr "<tt>Suggests (提案)</tt>"

#. type: <p></p>
#: maint-guide.en.sgml:1262
msgid "Use this for packages which will work nicely with your program but are not at all necessary. When a user installs your program, all frontends will likely prompt them to install the suggested packages. <prgn>aptitude</prgn> can be configured to install suggested packages along with your package but this is not its default. <prgn>dpkg</prgn> and <prgn>apt-get</prgn> will ignore this field."
msgstr "必要ではないものの、一緒に使用すると便利なパッケージを指定します。あなたのプログラムをユーザーがインストールする時、フロントエンドが提案しているパッケージも一緒にインストールするか確認します。<prgn>aptitude</prgn>は提案パッケージを一緒にインストールするように変更することが可能ですが、デフォルトではありません。<prgn>dpkg</prgn>と<prgn>apt-get</prgn>は提案されるパッケージを無視します。"

#. type: <p></p>
#: maint-guide.en.sgml:1265
msgid "<tt>Pre-Depends</tt>"
msgstr "<tt>Pre-Depends (事前依存)</tt>"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1270
msgid "This is stronger than <tt>Depends</tt>. The package will not be installed unless the packages it pre-depends on are installed and <em>correctly configured</em>. Use this <em>very</em> sparingly and only after discussing it on the <url id=\"http://lists.debian.org/debian-devel/\" name=\"debian-devel@lists.debian.org\"> mailing list. Read: don't use it at all. :-)"
msgstr "これは<tt>Depends</tt>よりも強い関係を示します。パッケージは先行依存のパッケージがあらかじめインストールされ、かつ適切に設定されていない限りインストールされません。これは、メーリングリスト<url id=\"http://lists.debian.org/debian-devel/\" name=\"debian-devel@lists.debian.org\">で議論を尽くした上で、<em>とても</em>慎重に扱うべきです。つまり、使わないでください。:-)"

#. type: <p></p>
#: maint-guide.en.sgml:1272
msgid "<tt>Conflicts</tt>"
msgstr "<tt>Conflicts (競合)</tt>"

#. type: <p></p>
#: maint-guide.en.sgml:1275
msgid "The package will not be installed until all the packages it conflicts with have been removed. Use this if your program absolutely will not run or will cause severe problems if a particular package is present."
msgstr "競合しているパッケージが削除されない限り、パッケージはインストールされません。あなたのプログラムが特定のパッケージと一緒だと動かない（または深刻な破損の原因になる恐れがある）場合はこれを使います。"

#. type: <p></p>
#: maint-guide.en.sgml:1277
msgid "<tt>Breaks</tt>"
msgstr "<tt>Breaks (破壊)</tt>"

#. type: <p></p>
#: maint-guide.en.sgml:1281
msgid "The package will be installed while all the listed packages will be broken. Normally a <tt>Breaks</tt> entry has an \"earlier than\" version clause. The resolution is generally to upgrade the listed packages by the higher-level package management tools."
msgstr "パッケージがインストールされると、あるパッケージが壊れる場合に指定します。通常、<tt>Breaks</tt>の項目は旧バージョンに対する制約になっています。パッケージマネジメントツールは、記載されたパッケージのバージョンを上げることで解決する場合がほとんどです。"

#. type: <p></p>
#: maint-guide.en.sgml:1283
msgid "<tt>Provides</tt>"
msgstr "<tt>Provides (提供)</tt>"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1288
msgid "For some types of packages where there are multiple alternatives virtual names have been defined. You can get the full list in the <file>/usr/share/doc/debian-policy/virtual-package-names-list.txt.gz</file> file. Use this if your program provides a function of an existing virtual package."
msgstr "パッケージによっては、選択の予知があるために仮想パッケージ名が定義されています。仮想パッケージ名の一覧仮想パッケージ名の一覧は<file>/usr/share/doc/debian-policy/virtual-package-names-list.txt.gz</file>にあります。あなたのプログラムが既存の仮想パッケージに相当する機能を提供する場合には、これを使います。"

#. type: <p></p>
#: maint-guide.en.sgml:1290
msgid "<tt>Replaces</tt>"
msgstr "<tt>Replaces (置換)</tt>"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1294
msgid "Use this when your program replaces files from another package, or completely replaces another package (used in conjunction with <tt>Conflicts</tt>). Files from the named packages will be overwritten with the files from your package."
msgstr "あなたのプログラムが別パッケージのファイルを上書きしたり、パッケージ全体を完全に置き換えてしまう場合（この場合は<tt>Conflicts</tt>も一緒に指定してください）この指定を使います。ここで指定されたパッケージに含まれるファイルはあなたのパッケージのファイルによって上書きされます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1301
msgid "All these fields have uniform syntax. They are a list of package names separated by commas. These package names may also be lists of alternative package names, separated by vertical bar symbols \"<tt>|</tt>\" (pipe symbols)."
msgstr "これらのフィールドは胸痛の書式で記述します。指定したいパッケージ名をコンマで区切って並べます。もし選択肢があれば、それらのパッケージ名を縦棒\"<tt>|</tt>\" (パイプ記号)で区切って並べます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:1310
msgid "The fields may restrict their applicability to particular versions of each named package. These versions are listed in parentheses after each individual package name, and they should contain a relation from the list below followed by the version number. The relations allowed are: <tt>&lt;&lt;</tt>, <tt>&lt;=</tt>, <tt>=</tt>, <tt>&gt;=</tt> and <tt>&gt;&gt;</tt> for strictly lower, lower or equal, exactly equal, greater or equal and strictly greater, respectively. For example,"
msgstr "また、適用されるパッケージのバージョン番号で制限をすることも可能です。これを指定したい場合にはそれぞれのパッケージ名の後で 丸カッコ (パーレン) を開き、以下の関係式に続けて バージョン番号を指定してください。使用できる関係式は、<tt>&lt;&lt;</tt>, <tt>&lt;=</tt>, <tt>=</tt>, <tt>&gt;=</tt> and <tt>&gt;&gt;</tt> で、それぞれ 「指定されたものより古いバージョンのみ」、 「指定されたバージョン以前」(指定のバージョンも当然含まれます)、 「指定のバージョンのみ」 「指定されたバージョン以降」(指定のバージョンも当然含まれます)、 「指定されたものより新しいバージョンのみ」を意味します。今まで説明してきた依存関係を使うことで、例えば以下のような 指定も可能です。"

#. type: <example></example>
#: maint-guide.en.sgml:1316
#, no-wrap
msgid ""
"Depends: foo (&gt;= 1.2), libbar1 (= 1.3.4)\n"
"Conflicts: baz\n"
"Recommends: libbaz4 (&gt;&gt; 4.0.7)\n"
"Suggests: quux\n"
"Replaces: quux (&lt;&lt; 5), quux-foo (&lt;= 7.6)"
msgstr ""
"Depends: foo (&gt;= 1.2), libbar1 (= 1.3.4)\n"
"Conflicts: baz\n"
"Recommends: libbaz4 (&gt;&gt; 4.0.7)\n"
"Suggests: quux\n"
"Replaces: quux (&lt;&lt; 5), quux-foo (&lt;= 7.6)"

#. type: <p></p>
#: maint-guide.en.sgml:1323
msgid "The last feature you need to know about is <tt>${shlibs:Depends}</tt>, <tt>${perl:Depends}</tt>, <tt>${misc:Depends}</tt>, etc. These entries are substituted by the list generated by other <package>debhelper</package> components when the <manref section=\"1\" name=\"dh_gencontrol\"> command is executed."
msgstr "もう１つ、知っておくべき機能があります。<tt>${shlibs:Depends}</tt>、<tt>${perl:Depends}</tt>、<tt>${misc:Depends}</tt>などです。上記のエントリーは<manref section=\"1\" name=\"dh_gencontrol\">コマンドが実効されるとき、別の<package>debhelper</package>コンポーネントで生成されたリストで代用されます。"

#. type: <p></p>
#: maint-guide.en.sgml:1330
msgid "<manref section=\"1\" name=\"dh_shlibdeps\"> will scan it for binaries and libraries determine their shared library dependencies and detect which packages they are in, such as <package>libc6</package> or <package>xlib6g</package>, after your package has been built and installed into the temporary directory. This list of shared library dependencies is used for <tt>${shlibs:Depends}</tt>."
msgstr "<manref section=\"1\" name=\"dh_shlibdeps\">はパッケージがビルドされ一時ディレクトリにインストールされた後で、バイナリとライブラリによって使用される共有ライブラリと、それがどのパッケージに属しているのか（例えば <package>libc6</package> や <package>xlib6g</package>など）を調べます。その結果は<tt>${shlibs:Depends}</tt>によって利用されます。"

#. type: <p></p>
#: maint-guide.en.sgml:1333
msgid "The package list generated by the <manref section=\"1\" name=\"dh_perl\"> is used for <tt>${perl:Depends}</tt>."
msgstr "<manref section=\"1\" name=\"dh_perl\">によって生成されたパッケージのリストは<tt>${perl:Depends}</tt>のために利用されます。"

#. type: <p></p>
#: maint-guide.en.sgml:1337
msgid "Some <package>debhelper</package> commands may make the generated package need to depend on some other packages. This list of required packages is used for <tt>${misc:Depends}</tt>."
msgstr "<package>debhelper</package>コマンドは、他のパッケージに依存するために必要な、生成されたパッケージを作ることもあります。この、要求されるパッケージのリストは<tt>${misc:Depends}</tt>のために利用されます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1342
msgid "Having said all that, we can leave the <tt>Depends</tt> field exactly as it is now, and insert another line after it saying \"<tt>Suggests: file</tt>\", because <package>gentoo</package> can use some features provided by that <package>file</package> package."
msgstr "とは言っても、今のところ<tt>Depends</tt>フィールドはそのままにして、その下に\"<tt>Suggests: file</tt>\"という新たな行を追加しましょう。<package>gentoo</package>は<package>file</package>パッケージによって提供される機能を利用することができるからです。"

#. type: <p></p>
#: maint-guide.en.sgml:1346
msgid "Line 12 is the short description. Most people screens are 80 columns wide so this shouldn't be longer than about 60 characters. I'll change it to \"<tt>fully GUI-configurable, two-pane X file manager</tt>\"."
msgstr "12行目は手短な説明です。ほとんどの人は1行（半角）80文字幅のスクリーンを使用しているので、(半角)60字以上にならないようにしましょう。\"<tt>fully GUI-configurable, two-pane X file manager</tt>\"に変更します。"

#. type: <p></p>
#: maint-guide.en.sgml:1352
msgid "Line 13 is where the long description goes. This should be a paragraph which gives more details about the package. Column 1 of each line should be empty. There must be no blank lines, but you can put a single \"<tt>.</tt>\" (dot) in a column to simulate that. Also, there must be no more than one blank line after the long description."
msgstr "13行目は詳細な説明です。ここでは1つの段落でパッケージについてより詳しく説明します。各行の先頭は空白（スペース文字）で始めます。空白行を入れてはいけませんが、 \"<tt>.</tt>\" (半角ピリオド) を1つ書くことで、それらしく見せることができます。説明文の後にも空白行を入れることはできません。"

#. type: <p></p>
#: maint-guide.en.sgml:1357
msgid "Let's insert <tt>Vcs-*</tt> fields documented in <url id=\"http://www.debian.org/doc/manuals/developers-reference/best-pkging-practices.html#bpp-vcs\" name=\"Developer's Reference, 6.2.5. 'Version Control System location'\"> between line 6 and 7. Let's assume that the <package>gentoo</package> package is located in Debian Alioth Git Service at <tt>git://git.debian.org/git/collab-maint/gentoo.git</tt>."
msgstr "<url id=\"http://www.debian.org/doc/manuals/developers-reference/best-pkging-practices.html#bpp-vcs\" name=\"Developer's Reference, 6.2.5. 'Version Control System location'\"> の6行目と7行目で説明されている<tt>Vcs-*</tt>フィールドを追加しましょう。<package>gentoo</package>パッケージが<tt>git://git.debian.org/git/collab-maint/gentoo.git</tt>のDebian Alioth Git Serviceにあると仮定しましょう。"

#. type: <p><example>
#: maint-guide.en.sgml:1360
msgid "Finally, here is the updated <file>control</file> file:"
msgstr "以下が修正後の<file>control</file> ファイルです。"

#. type: <example></example>
#: maint-guide.en.sgml:1389
#, no-wrap
msgid ""
" 1 Source: gentoo\n"
" 2 Section: x11\n"
" 3 Priority: optional\n"
" 4 Maintainer: Josip Rodin &lt;joy-mg@debian.org&gt;\n"
" 5 Build-Depends: debhelper (>= 7.0.5), xlibs-dev, libgtk1.2-dev, libglib1.2-dev\n"
" 6 Standards-Version: 3.8.4\n"
" 7 Vcs-Git: git://git.debian.org/git/collab-maint/gentoo.git\n"
" 8 Vcs-browser: http://git.debian.org/?p=collab-maint/gentoo.git\n"
" 9 Homepage: http://www.obsession.se/gentoo/\n"
"10\n"
"11 Package: gentoo\n"
"12 Architecture: any\n"
"13 Depends: ${shlibs:Depends}, ${misc:Depends}\n"
"14 Suggests: file\n"
"15 Description: fully GUI-configurable, two-pane X file manager\n"
"16  gentoo is a two-pane file manager for the X Window System. gentoo lets the\n"
"17  user do (almost) all of the configuration and customizing from within the\n"
"18  program itself. If you still prefer to hand-edit configuration files,\n"
"19  they're fairly easy to work with since they are written in an XML format.\n"
"20  .\n"
"21  gentoo features a fairly complex and powerful file identification system,\n"
"22  coupled to a object-oriented style system, which together give you a lot\n"
"23  of control over how files of different types are displayed and acted upon.\n"
"24  Additionally, over a hundred pixmap images are available for use in file\n"
"25  type descriptions.\n"
"26  .\n"
"29  gentoo was written from scratch in ANSI C, and it utilises the GTK+ toolkit\n"
"30  for its interface."
msgstr ""
" 1 Source: gentoo\n"
" 2 Section: x11\n"
" 3 Priority: optional\n"
" 4 Maintainer: Josip Rodin &lt;joy-mg@debian.org&gt;\n"
" 5 Build-Depends: debhelper (>= 7.0.5), xlibs-dev, libgtk1.2-dev, libglib1.2-dev\n"
" 6 Standards-Version: 3.8.4\n"
" 7 Vcs-Git: git://git.debian.org/git/collab-maint/gentoo.git\n"
" 8 Vcs-browser: http://git.debian.org/?p=collab-maint/gentoo.git\n"
" 9 Homepage: http://www.obsession.se/gentoo/\n"
"10\n"
"11 Package: gentoo\n"
"12 Architecture: any\n"
"13 Depends: ${shlibs:Depends}, ${misc:Depends}\n"
"14 Suggests: file\n"
"15 Description: fully GUI-configurable, two-pane X file manager\n"
"16  gentoo is a two-pane file manager for the X Window System. gentoo lets the\n"
"17  user do (almost) all of the configuration and customizing from within the\n"
"18  program itself. If you still prefer to hand-edit configuration files,\n"
"19  they're fairly easy to work with since they are written in an XML format.\n"
"20  .\n"
"21  gentoo features a fairly complex and powerful file identification system,\n"
"22  coupled to a object-oriented style system, which together give you a lot\n"
"23  of control over how files of different types are displayed and acted upon.\n"
"24  Additionally, over a hundred pixmap images are available for use in file\n"
"25  type descriptions.\n"
"26  .\n"
"29  gentoo was written from scratch in ANSI C, and it utilises the GTK+ toolkit\n"
"30  for its interface."

#. type: <heading></heading>
#: maint-guide.en.sgml:1393
msgid "<file>copyright</file> file"
msgstr "<file>copyright</file>ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1398
msgid "This file contains the information about package upstream resources, copyright and license information. Its format is not dictated by the Debian Policy Manual, but the content is (<url id=\"http://www.debian.org/doc/debian-policy/ch-docs.html#s-copyrightfile\" name=\"Debian Policy Manual, 12.5 'Copyright information'\">). You may also consult <url id=\"http://dep.debian.net/deps/dep5/\" name=\"DEP-5: Machine-parseable debian/copyright\">."
msgstr "このファイルにはパッケージの上流(upstream)に関するリソース、著作権、ライセンスなどの情報を記載します。書式に関しては、Debianポリシーマニュアルに定義されてませんが、内容は(<url id=\"http://www.debian.org/doc/debian-policy/ch-docs.html#s-copyrightfile\" name=\"Debian Policy Manual, 12.5 'Copyright information'\">)にあります。<url id=\"http://dep.debian.net/deps/dep5/\" name=\"DEP-5: Machine-parseable debian/copyright\">も参考になるかもしれません。"

#. type: <p></p>
#: maint-guide.en.sgml:1402
msgid "<prgn>dh_make</prgn> can give you a template <file>copyright</file> file. Let's use the \"<tt>--copyright gpl2</tt>\" option here to get a template file for the <package>gentoo</package> package released under GPL-2."
msgstr "<prgn>dh_make</prgn>は<file>copyright</file>ファイルのテンプレートを作成します。GPL-2でリリースされた<package>gentoo</package>パッケージのテンプレートを入手するには、\"<tt>--copyright gpl2</tt>\"オプションを使用します。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1410
msgid "You must fill in missing information such as the place you got the package from, the actual copyright notice and their license to complete this file. For the common free software licenses such as GNU GPL-1, GNU GPL-2, GNU GPL-3, LGPL-2, LGPL-2.1, LGPL-3, GNU FDL-1.2, GNU FDL-1.3, Apache-2.0 or the Artistic license, you can just refer to the appropriate file in <file>/usr/share/common-licenses/</file> directory that exists on every Debian system. Otherwise, you must include the complete license."
msgstr "パッケージの入手先や著作権表示、ラインセンスなど、抜けている情報を書き加え、ファイルを完成させましょう。GNU GPL-1、GNU GPL-2、GNU GPL-3、LGPL-2、LGPL-2.1,、LGPL-3、GNU FDL-1.2、GNU FDL-1.3、Apache-2.0や 創作上の特権など、一般的にフリーソフトウェアに使用される代表的なライセンスは、各Debianシステムの<file>/usr/share/common-licenses/</file>ディレクトリ内にあるファイルを参照することができ、全文の引用は不要です。その他のライセンスの場合、完全なライセンスを同包しなければなりません。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:1413
msgid "In short, here's how <package>gentoo</package>'s <file>copyright</file> file should look like:"
msgstr "<package>gentoo</package>パッケージの<file>copyright</file>ファイルは以下のようになります。"

#. type: <example></example>
#: maint-guide.en.sgml:1448
#, no-wrap
msgid ""
" 1 Format-Specification: http://svn.debian.org/wsvn/dep/web/deps/dep5.mdwn?op=file&amp;rev=135\n"
" 2 Name: gentoo\n"
" 3 Maintainer: Josip Rodin &lt;joy-mg@debian.org&gt;\n"
" 4 Source: http://sourceforge.net/projects/gentoo/files/\n"
" 5\n"
" 6 Copyright: 1998-2010 Emil Brink &lt;emil@obsession.se&gt;\n"
" 7 License: GPL-2+\n"
" 8\n"
" 9 Files: icons/*\n"
"10 Copyright: 1998 Johan Hanson &lt;johan@tiq.com&gt;\n"
"11 License: GPL-2+\n"
"12\n"
"13 Files: debian/*\n"
"14 Copyright: 1998-2010 Josip Rodin &lt;joy-mg@debian.org&gt;\n"
"15 License: GPL-2+\n"
"16\n"
"17 License: GPL-2+\n"
"18  This program is free software; you can redistribute it and/or modify\n"
"19  it under the terms of the GNU General Public License as published by\n"
"20  the Free Software Foundation; either version 2 of the License, or\n"
"21  (at your option) any later version. \n"
"22  .\n"
"23  This program is distributed in the hope that it will be useful,\n"
"24  but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
"25  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n"
"26  GNU General Public License for more details.\n"
"27 .\n"
"28  You should have received a copy of the GNU General Public License along\n"
"29  with this program; if not, write to the Free Software Foundation, Inc.,\n"
"30  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n"
"31  .\n"
"32  On Debian systems, the full text of the GNU General Public\n"
"33  License version 2 can be found in the file\n"
"34  `/usr/share/common-licenses/GPL-2'."
msgstr ""
" 1 Format-Specification: http://svn.debian.org/wsvn/dep/web/deps/dep5.mdwn?op=file&amp;rev=135\n"
" 2 Name: gentoo\n"
" 3 Maintainer: Josip Rodin &lt;joy-mg@debian.org&gt;\n"
" 4 Source: http://sourceforge.net/projects/gentoo/files/\n"
" 5\n"
" 6 Copyright: 1998-2010 Emil Brink &lt;emil@obsession.se&gt;\n"
" 7 License: GPL-2+\n"
" 8\n"
" 9 Files: icons/*\n"
"10 Copyright: 1998 Johan Hanson &lt;johan@tiq.com&gt;\n"
"11 License: GPL-2+\n"
"12\n"
"13 Files: debian/*\n"
"14 Copyright: 1998-2010 Josip Rodin &lt;joy-mg@debian.org&gt;\n"
"15 License: GPL-2+\n"
"16\n"
"17 License: GPL-2+\n"
"18  This program is free software; you can redistribute it and/or modify\n"
"19  it under the terms of the GNU General Public License as published by\n"
"20  the Free Software Foundation; either version 2 of the License, or\n"
"21  (at your option) any later version. \n"
"22  .\n"
"23  This program is distributed in the hope that it will be useful,\n"
"24  but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
"25  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n"
"26  GNU General Public License for more details.\n"
"27 .\n"
"28  You should have received a copy of the GNU General Public License along\n"
"29  with this program; if not, write to the Free Software Foundation, Inc.,\n"
"30  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n"
"31  .\n"
"32  On Debian systems, the full text of the GNU General Public\n"
"33  License version 2 can be found in the file\n"
"34  `/usr/share/common-licenses/GPL-2'."

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1454
msgid "Please follow the HOWTO provided by ftpmasters and sent to debian-devel-announce: <url id=\"&copyright-howto;\">."
msgstr "debian-devel-announce: <url id=\"&copyright-howto;\">に投稿された手順を追ってみてください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:1456
msgid "<file>changelog</file> file"
msgstr "<file>changelog</file>ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1461
msgid "This is a required file, which has a special format described in the <url id=\"http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog\" name=\"Debian Policy Manual, 4.4 'debian/changelog'\">. This format is used by <prgn>dpkg</prgn> and other programs to obtain the version number, revision, distribution and urgency of your package."
msgstr "必須のファイルです。このファイルの特別な書式は<url id=\"http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog\" name=\"Debian Policy Manual, 4.4 'debian/changelog'\">で既定されています。この書式は、<prgn>dpkg</prgn>やその他のプログラムによってパッケージの バージョン番号、レビジョン、ディストリビューション、それに緊急度 (urgency) を識別するために利用されます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1467
msgid "For you, it is also important, since it is good to have documented all changes you have done. It will help people downloading your package to see whether there are issues with the package that they should know about. It will be saved as <file>/usr/share/doc/gentoo/changelog.Debian.gz</file> in the binary package."
msgstr "あなたが行なったすべての変更をきちんと記載しておくことは良いことであり、その意味でこのファイルはまた、パッケージメンテナであるあなたにとっても重要なものです。パッケージをダウンロードした人は、 このファイルを見ることで、このパッケージに関する未解決の問題があるかどうかを知ることができます。このファイルはバイナリパッケージ中に<file>/usr/share/doc/gentoo/changelog.Debian.gz</file>として保存されます。"

#. type: <p><example>
#: maint-guide.en.sgml:1470
msgid "<prgn>dh_make</prgn> created a default one, and this is how it looks like:"
msgstr "<prgn>dh_make</prgn>がデフォルトとして生成するchangelogはこんな感じです。"

#. type: <example></example>
#: maint-guide.en.sgml:1477
#, no-wrap
msgid ""
"1  gentoo (0.9.12-1) unstable; urgency=low\n"
"2\n"
"3   * Initial release (Closes: #<var>nnnn</var>)  &lt;<var>nnnn</var> is the bug number of your ITP&gt;\n"
"4\n"
"5  -- Josip Rodin &lt;joy-mg@debian.org&gt;  Mon, 22 Mar 2010 00:37:31 +0100\n"
"6"
msgstr ""
"1  gentoo (0.9.12-1) unstable; urgency=low\n"
"2\n"
"3   * Initial release (Closes: #<var>nnnn</var>)  &lt;<var>nnnn</var> is the bug number of your ITP&gt;\n"
"4\n"
"5  -- Josip Rodin &lt;joy-mg@debian.org&gt;  Mon, 22 Mar 2010 00:37:31 +0100\n"
"6"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1487
msgid "Line 1 is the package name, version, distribution, and urgency. The name must match the source package name, distribution should be either <tt>unstable</tt> (or even <tt>experimental</tt>) <footnote><p>Some people use invalid distribution values such as <tt>UNRELEASED</tt> to prevent a package to be accidentally uploaded when updating a package in a shared VCS.</p></footnote>, and urgency shouldn't be changed to anything higher than <tt>low</tt>. :-)"
msgstr "1 行目はパッケージ名、バージョン、ディストリビューション、 そして緊急度 (urgency) です。ここに書くパッケージ名はソースパッケージの名前と一致していなければ なりません。 またディストリビューションは<tt>unstable</tt> (または<tt>experimental</tt>)にすべきです。 <footnote><p>共有VSCを更新する時に、間違ってパッケージがアップロードされないように、<tt>UNRELEASED</tt>などの無効なディストリビューションの値を設定する人もいます。</p></footnote>また、緊急度は<tt>low</tt>より高くしてはいけません。:-)"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1496
msgid "Lines 3-5 are a log entry, where you document changes made in this package revision (not the upstream changes - there is special file for that purpose, created by the upstream authors, which you will later install as <file>/usr/share/doc/gentoo/changelog.gz</file>). Let's assume your ITP (Intent To Package) bug report number was \"<tt>12345</tt>\". New lines must be inserted just before the uppermost line that begins with \"<tt>*</tt>\" (asterisk). You can do it with <manref section=\"1\" name=\"dch\">, or manually with a text editor."
msgstr "3-5 行目はログエントリで、ここにリビジョンのパッケージで 行われた変更を記述します (上流プログラムそのものの変更点では ありません - その目的のためには、上流作者によって作成され、  <file>/usr/share/doc/gentoo/changelog.gz</file>としてインストールされる 専用のファイルが存在しています)。ITP (Intent To Package)バグレポート番号を\"<tt>12345</tt>\"と仮定しましょう。新しい行は\"<tt>*</tt>\" (アスタリスク)で始まる最初の行の直前に挿入します。この操作は<manref section=\"1\" name=\"dch\">を使うと便利ですが、 テキストエディタを使って実行してももちろん構いません。"

#. type: <p><example>
#: maint-guide.en.sgml:1499
msgid "You will end up with something like this:"
msgstr "最終的にこんなふうになります。"

#. type: <example></example>
#: maint-guide.en.sgml:1508
#, no-wrap
msgid ""
"1  gentoo (0.9.12-1) unstable; urgency=low\n"
"2\n"
"3   * Initial Release. Closes: #12345\n"
"4   * This is my first Debian package.\n"
"5   * Adjusted the Makefile to fix $(DESTDIR) problems.\n"
"6\n"
"7  -- Josip Rodin &lt;joy-mg@debian.org&gt;  Mon, 22 Mar 2010 00:37:31 +0100\n"
"8"
msgstr ""
"1  gentoo (0.9.12-1) unstable; urgency=low\n"
"2\n"
"3   * Initial Release. Closes: #12345\n"
"4   * This is my first Debian package.\n"
"5   * Adjusted the Makefile to fix $(DESTDIR) problems.\n"
"6\n"
"7  -- Josip Rodin &lt;joy-mg@debian.org&gt;  Mon, 22 Mar 2010 00:37:31 +0100\n"
"8"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1513
msgid "You can read more about updating the <file>changelog</file> file later in <ref id=\"update\">."
msgstr "<file>changelog</file>の更新については、<ref id=\"update\">で詳しく説明します。"

#. type: <heading></heading>
#: maint-guide.en.sgml:1515
msgid "<file>rules</file> file"
msgstr "<file>rules</file>ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1521
msgid "Now we need to take a look at the exact rules which <manref section=\"1\" name=\"dpkg-buildpackage\"> will use to actually create the package. This file is actually another <file>Makefile</file>, but different from the one(s) in the upstream source. Unlike other files in <file>debian</file>, this one is marked as executable."
msgstr "さて、今度は <manref section=\"1\" name=\"dpkg-buildpackage\">が実際にパッケージを作成するために使うルールについて見ていきましょう。このファイルは、もうひとつの<file>Makefile</file>といった感じのものですが、上流ソースに含まれる Makefile とは違います。debian/ ディレクトリに含まれる他のファイルとは異なり、 このファイルには実行属性が付けられています。"

#. type: <heading></heading>
#: maint-guide.en.sgml:1523
msgid "Targets of <file>rules</file> file"
msgstr "<file>rules</file>ファイルのターゲット"

#. type: <p></p>
#: maint-guide.en.sgml:1530
msgid "Every <file>rules</file> file, as any other <file>Makefile</file>, consists of several targets and their rules specifying how to handle the source. <url id=\"http://www.debian.org/doc/debian-policy/ch-source.html#s-debianrules\" name=\"Debian Policy Manual, 4.9 'Main building script: debian/rules'\"> explains its details."
msgstr "<file>rules</file>ファイルは<file>Makefile</file>と同様に、ターゲットとルールで構成され、ソースファイルをどう扱うかを定めています。詳細は<url id=\"http://www.debian.org/doc/debian-policy/ch-source.html#s-debianrules\" name=\"Debian Policy Manual, 4.9 'Main building script: debian/rules'\">を参照してください。"

#. type: <p><list>
#: maint-guide.en.sgml:1533
msgid "The simplified explanation of targets are the following."
msgstr "ターゲットについて簡単に説明します。"

#. type: <p></p>
#: maint-guide.en.sgml:1535
msgid "<tt>clean</tt> target: to clean all compiled, generated, and useless files in the build-tree. (required)"
msgstr "<tt>clean</tt>ターゲット: ビルドツリー内に生成、コンパイルされた役に立たないファイルを掃除します。(必須)"

#. type: <p></p>
#: maint-guide.en.sgml:1536
msgid "<tt>build</tt> target: to build the source into compiled programs and formatted documents in the build-tree. (required)"
msgstr "<tt>build</tt> ターゲット: ソースをビルドして、ビルドツリー内にコンパイルしたプログラムとドキュメントを生成します。(必須)"

#. type: <p></p>
#: maint-guide.en.sgml:1537
msgid "<tt>install</tt> target: to install files into a file tree for each binary package under the <file>debian</file> directory. If defined, <tt>binary*</tt> targets effectively depend on this target. (optional)"
msgstr "<tt>install</tt> ターゲット: <file>debian</file>ディレクトリ以下にある各バイナリパッケージのファイルツリーにファイルをインストールします。定義されている場合は、<tt>binary*</tt>ターゲットが効率的にこのターゲットに依存します。(任意)"

#. type: <p></p>
#: maint-guide.en.sgml:1538
msgid "<tt>binary</tt> target: to create all binary packages (effectively combination of <tt>binary-arch</tt> and <tt>binary-indep</tt> targets). (required)<footnote><p>This target is used by \"<tt>dpkg-buildpackage</tt>\" as in <ref id=\"completebuild\">.</p></footnote>"
msgstr "<tt>binary</tt> ターゲット: 全てのバイナリパッケージを作ります。(<tt>binary-arch</tt>と<tt>binary-indep</tt>の組み合わせ)(必須)<footnote><p>このターゲットは例えば、<ref id=\"completebuild\">などで、\"<tt>dpkg-buildpackage</tt>\"が使用します。</p></footnote>"

#. type: <p></p>
#: maint-guide.en.sgml:1539
msgid "<tt>binary-arch</tt> target: to create arch-dependent (<tt>Architecture: any</tt>) binary packages in the parent directory. (required)<footnote><p>This target is used by \"<tt>dpkg-buildpackage -B</tt>\" as in <ref id=\"autobuilder\">.</p></footnote>"
msgstr "<tt>binary-arch</tt> ターゲット: 親ディレクトリにアーキテクチャに依存したバイナリパッケージ (<tt>Architecture: any</tt>)を作ります。(必須)<footnote><p>このターゲットは例えば、<ref id=\"autobuilder\">などで、\"<tt>dpkg-buildpackage -B</tt>\"が使用します。</p></footnote>"

#. type: <p></p>
#: maint-guide.en.sgml:1540
msgid "<tt>binary-indep</tt> target: to create arch-independent (<tt>Architecture: all</tt>) binary packages in the parent directory. (required)<footnote><p>This target is used by \"<tt>dpkg-buildpackage -A</tt>\".</p></footnote>"
msgstr "<tt>binary-indep</tt> ターゲット: 親ディレクトリにアーキテクチャに依存しないパッケージ (<tt>Architecture: all</tt>) を作ります。(必須)<footnote><p>このターゲットは、 \"<tt>dpkg-buildpackage -A</tt>\"が使用します。</p></footnote>"

#. type: <p></p>
#: maint-guide.en.sgml:1541
msgid "<tt>get-orig-source</tt> target: to obtain the most recent version of the original source package from upstream archive site. (optional)"
msgstr "<tt>get-orig-source</tt> ターゲット: 上流アーカイブのサイトから最新のバージョンのソースパッケージを持ってきます。(任意)"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1551
msgid "Rules that you want to execute are invoked as command line arguments (for example, \"<tt>./debian/rules build</tt>\" or \"<tt>fakeroot make -f debian/rules binary</tt>\"). After the target name, you can name the dependency, program or file that the rule depends on. After that, there can be any number of commands, indented with <tt><var>TAB</var></tt>. A new rule begins with the target declaration in the first column. Empty lines and lines beginning with \"<tt>#</tt>\" (hash) are treated as comments and ignored."
msgstr "適用したいルールはコマンドライン引数として指定します。（例えば、\"<tt>./debian/rules build</tt>\"や\"<tt>fakeroot make -f debian/rules binary</tt>\"など)。ターゲット名の後には、依存するプログラムやファイル名などを指定できます。その次の行からはコマンド行になります。<tt><var>TAB</var></tt>でインデントし、コマンドを何行でも書くことができます。新しいルールを始めるには、行の先頭からターゲット名の宣言を書きます。空行や\"<tt>#</tt>\" (ハッシュ)で始まる行はコメントとして扱われ、無視されます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1555
msgid "You are probably confused now, but it will all be clear upon examination of the <file>rules</file> file that <prgn>dh_make</prgn> gives us as a default. You should also read \"<tt>info make</tt>\" for more information."
msgstr "今はまだよくわからないかもしれませんが、<prgn>dh_make</prgn>がデフォルトとして作成する<file>rules</file>ファイルを調べるうちに、きっと理解できるようになります。さらに詳細な説明は\"<tt>info make</tt>\"を参照してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:1557
msgid "Default <file>rules</file> file"
msgstr "デフォルトの<file>rules</file>ファイル"

#. type: <p><example>
#: maint-guide.en.sgml:1562
msgid "Newer <prgn>dh_make</prgn> generates a very simple but powerful default <file>rules</file> file using the <prgn>dh</prgn> command:"
msgstr "最新の<prgn>dh_make</prgn>は<prgn>dh</prgn> コマンドでシンプルかつパワフルな<file>rules</file>ファイルを作ってくれます。"

#. type: <example></example>
#: maint-guide.en.sgml:1576
#, no-wrap
msgid ""
" 1 #!/usr/bin/make -f\n"
" 2 # -*- makefile -*-\n"
" 3 # Sample debian/rules that uses debhelper.\n"
" 4 # This file was originally written by Joey Hess and Craig Small.\n"
" 5 # As a special exception, when this file is copied by dh-make into a\n"
" 6 # dh-make output file, you may use that output file without restriction.\n"
" 7 # This special exception was added by Craig Small in version 0.37 of dh-make.\n"
" 8\n"
" 9 # Uncomment this to turn on verbose mode.\n"
"10 #export DH_VERBOSE=1\n"
"11\n"
"12 %:\n"
"13        dh $@"
msgstr ""
" 1 #!/usr/bin/make -f\n"
" 2 # -*- makefile -*-\n"
" 3 # Sample debian/rules that uses debhelper.\n"
" 4 # This file was originally written by Joey Hess and Craig Small.\n"
" 5 # As a special exception, when this file is copied by dh-make into a\n"
" 6 # dh-make output file, you may use that output file without restriction.\n"
" 7 # This special exception was added by Craig Small in version 0.37 of dh-make.\n"
" 8\n"
" 9 # Uncomment this to turn on verbose mode.\n"
"10 #export DH_VERBOSE=1\n"
"11\n"
"12 %:\n"
"13        dh $@"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: </example></p>
#. type: </example></p>
#: maint-guide.en.sgml:1579
msgid "(I've added the line numbers. In the actual <file>rules</file> file, the leading white spaces are TAB codes.)"
msgstr "(行番号は筆者による。実際の<file>rules</file>ファイルは行頭が空白のTABコード)"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1583
msgid "You are probably familiar with lines like line 1 from shell and Perl scripts. It tells the operating system that this file is to be processed with <file>/usr/bin/make</file>."
msgstr "1行目はシェルやパールスクリプトでお馴染みの表現です。オペレーティングシステムに<file>/usr/bin/make</file>で処理するように指示しています。"

#. type: <p></p>
#: maint-guide.en.sgml:1593
msgid "Line 10 can be uncommented to set <tt>DH_VERBOSE</tt> variable to 1. Then, the <prgn>dh</prgn> command will output which <prgn>dh_*</prgn> commands are executed by the <prgn>dh</prgn> command. You can also add \"<tt>export DH_OPTIONS=-v</tt>\" line here. Then each <prgn>dh_*</prgn> command will output which commands are executed by each <prgn>dh_*</prgn> command. This helps you to understand what exactly is going on behind this simple <file>rules</file> file and to debug its problems. This new <prgn>dh</prgn> is a core part of the <package>debhelper</package> tools and does not hide anything from you."
msgstr "<tt>DH_VERBOSE</tt>変数を1に設定するためには、10行目のコメントを外します。そうすることによって、<prgn>dh</prgn>コマンドが、<prgn>dh</prgn>コマンドによって実行された<prgn>dh_*</prgn>コマンドを出力します。必要であればここに、\"<tt>export DH_OPTIONS=-v</tt>\"という行を追加できます。そうすることによって、<prgn>dh_*</prgn>コマンドが、<prgn>dh_*</prgn>によって実行されたコマンドを出力します。この単純な<file>rules</file>ファイルが何をしているのかを理解する手助けとなり、デバッグの際のヒントになるでしょう。この新しい<prgn>dh</prgn>が<package>debhelper</package>ツールの中核となる部分です。"

#. type: <p><list>
#: maint-guide.en.sgml:1616
msgid "Lines 12 and 13 are where all the work is done. The percent sign means any targets which then call a single program, <prgn>dh</prgn> with the target name. <footnote><p>This uses the new <package>debhelper</package> V7 features. Its design concepts are explained in <url id=\"http://joey.kitenet.net/talks/debhelper/debhelper-slides.pdf\" name=\"Not Your Grandpa's Debhelper\"> presented at Debconf9 by the <package>debhelper</package> upstream. Under <tt>lenny</tt>, <prgn>dh_make</prgn> created a much more complicated <file>rules</file> file with many <prgn>dh_*</prgn> scripts listed for each required explicit targets and frozen them to the state when it was initially packaged. This new <prgn>dh</prgn> command is simpler and frees us from this constrain. You still have full power to customize this with <tt>override_dh_*</tt> targets. See <ref id=\"customrules\">. It is based only on the <package>debhelper</package> package and does not obfuscate the package building process like the <package>cdbs</package> package.</p></footnote> The <prgn>dh</prgn> command is a wrapper script which runs appropriate sequences of <prgn>dh_*</prgn> programs depending on its argument. <footnote><p>You can verify actual sequences of <prgn>dh_*</prgn> programs invoked for a given <tt><var>target</var></tt> as \"<tt>dh --no-act <var>target</var></tt>\" or \"<tt>debian/rules -- '--no-act <var>target</var>'</tt>\" without really running them.</p></footnote>"
msgstr "12行目から13行目が処理の仕上げ段階です。％サインはターゲットを意味し、ターゲットの名前と一緒に<prgn>dh</prgn>プログラムを呼び出します。<footnote><p>これは新しい<package>debhelper</package> V7の機能です。このデザインコンセプトは<url id=\"http://joey.kitenet.net/talks/debhelper/debhelper-slides.pdf\" name=\"Not Your Grandpa's Debhelper\">Debconf9で<package>debhelper</package>上流によって提示されました。<tt>lenny</tt>では、必須となる明示されたターゲットごとに、もっと複雑な<file>rules</file>ファイルと<prgn>dh_*</prgn>スクリプトを量産し、最初にパッケージ化する際に、各状態に凍結していました。新しい<prgn>dh</prgn>コマンドは、もっとシンプルで、旧来の制約に縛られません。その上、<tt>override_dh_*</tt>ターゲットでカスタマイズする利便性は失われていません。詳しくは<ref id=\"customrules\">を参照してください。これは、<package>debhelper</package>パッケージがもとになっており、<package>cdbs</package>のようにパッケージをビルドするプロセスを複雑化することはありません。</p></footnote><prgn>dh</prgn>コマンドは、引数によって、適切なシーケンスで<prgn>dh_*</prgn>プログラムを走らせるラッパースクリプトです。<footnote><p><tt><var>target</var></tt>変数で呼び出され、<prgn>dh_*</prgn>プログラムが実際に実行するシーケンスは、プログラムを走らせなくても\"<tt>dh --no-act <var>target</var></tt>\" や、\"<tt>debian/rules -- '--no-act <var>target</var>'</tt>\"コマンドで確認することができます。</p></footnote>"

#. type: <p><example>
#: maint-guide.en.sgml:1620
msgid "\"<tt>debian/rules clean</tt>\" runs \"<tt>dh clean</tt>\"; which in turn runs the following:"
msgstr "\"<tt>debian/rules clean</tt>\" は \"<tt>dh clean</tt>\"を実行します。実行する順番は以下の通りです。"

#. type: <example></example>
#: maint-guide.en.sgml:1624
#, no-wrap
msgid ""
"dh_testdir\n"
"dh_auto_clean\n"
"dh_clean"
msgstr ""
"dh_testdir\n"
"dh_auto_clean\n"
"dh_clean"

#. type: <p><example>
#: maint-guide.en.sgml:1627
msgid "\"<tt>debian/rules build</tt>\" runs \"<tt>dh build</tt>\"; which in turn runs the following:"
msgstr "\"<tt>debian/rules build</tt>\" は \"<tt>dh build</tt>\" を実行します。実行する順番は以下の通りです。"

#. type: <example></example>
#: maint-guide.en.sgml:1632
#, no-wrap
msgid ""
"dh_testdir\n"
"dh_auto_configure\n"
"dh_auto_build\n"
"dh_auto_test"
msgstr ""
"dh_testdir\n"
"dh_auto_configure\n"
"dh_auto_build\n"
"dh_auto_test"

#. type: <p><example>
#: maint-guide.en.sgml:1637
msgid "\"<tt>fakeroot debian/rules binary</tt>\" runs \"<tt>fakeroot dh binary</tt>\"; which in turn runs the following<footnote><p>This assumes that the <package>python-support</package> package is installed on the system.</p></footnote>:"
msgstr "\"<tt>fakeroot debian/rules binary</tt>\" は \"<tt>fakeroot dh binary</tt>\"を実行します。さらにそれは以下を実行します<footnote><p><package>python-support</package> パッケージがシステムにインストールされているというのがこの前提です。</p></footnote>:"

#. type: <example></example>
#: maint-guide.en.sgml:1681
#, no-wrap
msgid ""
"dh_testroot\n"
"dh_prep\n"
"dh_installdirs\n"
"dh_auto_install\n"
"dh_install\n"
"dh_installdocs\n"
"dh_installchangelogs\n"
"dh_installexamples\n"
"dh_installman\n"
"dh_installcatalogs\n"
"dh_installcron\n"
"dh_installdebconf\n"
"dh_installemacsen\n"
"dh_installifupdown\n"
"dh_installinfo\n"
"dh_pysupport\n"
"dh_installinit\n"
"dh_installmenu\n"
"dh_installmime\n"
"dh_installmodules\n"
"dh_installlogcheck\n"
"dh_installlogrotate\n"
"dh_installpam\n"
"dh_installppp\n"
"dh_installudev\n"
"dh_installwm\n"
"dh_installxfonts\n"
"dh_bugfiles\n"
"dh_lintian\n"
"dh_gconf\n"
"dh_icons\n"
"dh_perl\n"
"dh_usrlocal\n"
"dh_link\n"
"dh_compress\n"
"dh_fixperms\n"
"dh_strip\n"
"dh_makeshlibs\n"
"dh_shlibdeps\n"
"dh_installdeb\n"
"dh_gencontrol\n"
"dh_md5sums\n"
"dh_builddeb"
msgstr ""
"dh_testroot\n"
"dh_prep\n"
"dh_installdirs\n"
"dh_auto_install\n"
"dh_install\n"
"dh_installdocs\n"
"dh_installchangelogs\n"
"dh_installexamples\n"
"dh_installman\n"
"dh_installcatalogs\n"
"dh_installcron\n"
"dh_installdebconf\n"
"dh_installemacsen\n"
"dh_installifupdown\n"
"dh_installinfo\n"
"dh_pysupport\n"
"dh_installinit\n"
"dh_installmenu\n"
"dh_installmime\n"
"dh_installmodules\n"
"dh_installlogcheck\n"
"dh_installlogrotate\n"
"dh_installpam\n"
"dh_installppp\n"
"dh_installudev\n"
"dh_installwm\n"
"dh_installxfonts\n"
"dh_bugfiles\n"
"dh_lintian\n"
"dh_gconf\n"
"dh_icons\n"
"dh_perl\n"
"dh_usrlocal\n"
"dh_link\n"
"dh_compress\n"
"dh_fixperms\n"
"dh_strip\n"
"dh_makeshlibs\n"
"dh_shlibdeps\n"
"dh_installdeb\n"
"dh_gencontrol\n"
"dh_md5sums\n"
"dh_builddeb"

#. type: <p></p>
#: maint-guide.en.sgml:1684
msgid "\"<tt>fakeroot debian/rules binary-arch</tt>\" runs \"<tt>fakeroot dh binary-arch</tt>\"; which in turn runs the same sequence as \"<tt>fakeroot dh binary</tt>\" but with the \"<tt>-a</tt>\" option appended for each command."
msgstr "\"<tt>fakeroot debian/rules binary-arch</tt>\" は \"<tt>fakeroot dh binary-arch</tt>\" を実行します。\"<tt>fakeroot dh binary</tt>\" の全てのコマンドに \"<tt>-a</tt>\" オプションをつけた場合と同じことを行います。"

#. type: <p></p>
#: maint-guide.en.sgml:1689
msgid "\"<tt>fakeroot debian/rules binary-indep</tt>\" runs \"<tt>fakeroot dh binary-indep</tt>\"; which in turn runs almost the same sequence as \"<tt>fakeroot dh binary</tt>\" but excluding <prgn>dh_strip</prgn>, <prgn>dh_makeshlibs</prgn>, and <prgn>dh_shlibdeps</prgn> with the \"<tt>-i</tt>\" option appended for each remaining command."
msgstr "\"<tt>fakeroot debian/rules binary-indep</tt>\" は \"<tt>fakeroot dh binary-indep</tt>\" を実行します。同様のコマンドは\"<tt>fakeroot dh binary</tt>\"ですが、<prgn>dh_strip</prgn>、<prgn>dh_makeshlibs</prgn>、<prgn>dh_shlibdeps</prgn> は実行せず、残りのコマンドには\"<tt>-i</tt>\" オプションを付加して実行します。"

#. type: <p><list>
#: maint-guide.en.sgml:1702
msgid "The function of <prgn>dh_*</prgn> commands are almost self-evident from their names. <footnote><p>For complete information on what do all these <prgn>dh_*</prgn> scripts exactly do, and what their other options are, please read their respective manual pages and the <package>debhelper</package> documentation.</p></footnote> There are few notable ones worth making (over)simplified explanation here assuming typical build environment based on <file>Makefile</file>. <footnote><p>These commands support other build environments such as <file>setup.py</file> which can be listed by executiong \"<tt>dh_auto_build --list</tt>\" in a package source directory.</p></footnote>"
msgstr "<prgn>dh_*</prgn>は、名前からその機能がわかるようなものばかりです。<footnote><p><prgn>dh_*</prgn>スクリプトが、実際に何をして、どのようなオプションがあるのかを知りたい場合は、<package>debhelper</package> のマニュアルにある該当ページを参照してください。</p></footnote>　ここでは、<file>Makefile</file>をもとに作られたビルド環境を前提にして、簡単な説明を行う価値があるいくつかの特筆すべき項目について述べます。<footnote><p>\"<tt>dh_auto_build --list</tt>\"</p></footnote>"

#. type: <p><example>
#: maint-guide.en.sgml:1709
msgid "<prgn>dh_auto_clean</prgn> usually executes the following if <file>Makefile</file> exists with the <tt>distclean</tt> target. <footnote><p>It actually looks for the first available target of <tt>distclean</tt>, <tt>realclean</tt> or <tt>clean</tt> in <file>Makefile</file> and execute it.</p></footnote>"
msgstr "<prgn>dh_auto_clean</prgn>は、<file>Makefile</file>に<tt>distclean</tt>ターゲットがあれば以下のコマンドを実行します。実際には、<footnote><file>Makefile</file>中の<p><tt>distclean</tt>、<tt>realclean</tt>、 <tt>clean</tt>のうち、最初に利用可能なものを実行します。</p></footnote>"

#. type: <example></example>
#: maint-guide.en.sgml:1711
#, no-wrap
msgid "make distclean"
msgstr "make distclean"

#. type: <p><example>
#: maint-guide.en.sgml:1714
msgid "<prgn>dh_auto_configure</prgn> usually executes the following if <file>./configure</file> exists (arguments abbreviated for readability)."
msgstr "<prgn>dh_auto_configure</prgn>は、<file>./configure</file>があれば以下のコマンドを実行します。 (読みやすくするために引数は省略しました)"

#. type: <example></example>
#: maint-guide.en.sgml:1716
#, no-wrap
msgid "./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var ..."
msgstr "./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var ..."

#. type: <p><example>
#: maint-guide.en.sgml:1718
msgid "<prgn>dh_auto_build</prgn> usually executes the following to execute the first target of <file>Makefile</file> if it exists."
msgstr "<prgn>dh_auto_build</prgn>は、 <file>Makefile</file>があれば、その最初のターゲットをビルドするために、以下のコマンドを実行します。"

#. type: <example></example>
#: maint-guide.en.sgml:1720
#, no-wrap
msgid "make"
msgstr "make"

#. type: <p><example>
#: maint-guide.en.sgml:1726
msgid "<prgn>dh_auto_test</prgn> usually executes the following if <file>Makefile</file> exists with the <tt>test</tt> target. <footnote><p>It actually looks for the first available target of <tt>test</tt> or <tt>check</tt> in <file>Makefile</file> and execute it.</p></footnote>"
msgstr "<prgn>dh_auto_test</prgn>は、<file>Makefile</file>中に<tt>test</tt> ターゲットがあれば、以下を実行します。<footnote><p>実際には、<file>Makefile</file>中の<tt>test</tt>か<tt>check</tt>のうち、最初に利用可能なものを実行します。</p></footnote>"

#. type: <example></example>
#: maint-guide.en.sgml:1728
#, no-wrap
msgid "make test"
msgstr "make test"

#. type: <p><example>
#: maint-guide.en.sgml:1731
msgid "<prgn>dh_auto_install</prgn> usually executes the following if <file>Makefile</file> exists with the <tt>install</tt> target (line folded for readability)."
msgstr "<prgn>dh_auto_install</prgn>は、<file>Makefile</file>に<tt>install</tt>ターゲットがあれば、以下のコマンドを実行します。 (読みやすくするために畳み込みました)。"

#. type: <example></example>
#: maint-guide.en.sgml:1734
#, no-wrap
msgid ""
"make install \\\n"
"  DESTDIR=<var>/path/to</var>/<var>package</var>_<var>version</var>-<var>revision</var>/debian/<var>package</var>"
msgstr ""
"make install \\\n"
"  DESTDIR=<var>/path/to</var>/<var>package</var>_<var>version</var>-<var>revision</var>/debian/<var>package</var>"

#. type: <p></p>
#: maint-guide.en.sgml:1740
msgid "Targets which require the <prgn>fakeroot</prgn> command contain <prgn>dh_testroot</prgn>. If you are not pretending to be root using this command, it exits with an error."
msgstr "<prgn>fakeroot</prgn>コマンドを必要とするターゲットは<prgn>dh_testroot</prgn>を含みます。このコマンドでルートのふりをしなければ、エラーで終了します。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1746
msgid "The important part to know about the <file>rules</file> file created by <prgn>dh_make</prgn>, is that it is just a suggestion. It will work for most packages but for more complicated ones, don't be afraid to customize it to fit your needs. Only things that you must not change are the names of the rules, because all the tools use these names, as mandated by the Debian Policy."
msgstr "<prgn>dh_make</prgn>によって作成された<file>rules</file>ファイルについて知っておくべきことは、これは単なるひとつの例でしかないということです。 これはほぼ全てのパッケージに有効ですが、もっと複雑なものに対しては、必要に応じてカスタマイズをする勇気が必要です。ただし、ファイル内に記述された各ルールの名前だけは変えてはいけません。"

#. type: <p></p>
#: maint-guide.en.sgml:1750
msgid "Although \"<tt>install</tt>\" is not required target, it is supported. \"<tt>fakeroot dh install</tt>\" behaves like \"<tt>fakeroot dh binary</tt>\" but stops after <prgn>dh_fixperms</prgn>."
msgstr "\"<tt>install</tt>\"は、必須ではりませんがサポートはされています。\"<tt>fakeroot dh install</tt>\" は \"<tt>fakeroot dh binary</tt>\" のようにふるまいますが、<prgn>dh_fixperms</prgn>の後で停止します。"

#. type: <heading></heading>
#: maint-guide.en.sgml:1752
msgid "Customization of <file>rules</file> file"
msgstr "<file>rules</file> ファイルのカスタマイズ"

#. type: <p></p>
#: maint-guide.en.sgml:1755
msgid "There are many ways to customize the <file>rules</file> file created with the new <prgn>dh</prgn> command."
msgstr "新しい<prgn>dh</prgn>コマンドで作成された<file>rules</file>ファイルをカスタマイズする方法は何通りもあります。"

#. type: <p><list>
#: maint-guide.en.sgml:1763
msgid "The \"<tt>dh $@</tt>\" command can be customized as follows. <footnote><p>If a package installs the <file>/usr/share/perl5/Debian/Debhelper/Sequence/<var>custom_name</var>.pm</file> file, you should activate its customization function by \"<tt>dh --with <var>custom-name</var> $@</tt>\". </p></footnote>"
msgstr "\"<tt>dh $@</tt>\" コマンドは以下の方法でカスタマイズできます。<footnote><p>もし、パッケージが <file>/usr/share/perl5/Debian/Debhelper/Sequence/<var>custom_name</var>.pm</file>ファイルをインストールする場合、そのカスタマイズの機能を \"<tt>dh --with <var>custom-name</var> $@</tt>\"で有効にしなければなりません。</p></footnote>"

#. type: <p><list>
#: maint-guide.en.sgml:1769
msgid "Add support of the <prgn>dh_pysupport</prgn> command. (The best choice for Python.) <footnote><p>Use of the <prgn>dh_pysupport</prgn> command is preferred over use of the <prgn>dh_pycentral</prgn> command. Do not use the <prgn>dh_python</prgn> command.</p></footnote>"
msgstr "<prgn>dh_pysupport</prgn> コマンドのサポートを追加する(Pythonに最適の選択) <footnote><p><prgn>dh_pycentral</prgn>コマンドよりも<prgn>dh_pysupport</prgn>コマンドが好まれます。<prgn>dh_python</prgn>コマンドは使用しないでください。</p></footnote>"

# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1771
msgid "Install the <package>python-support</package> package in \"<tt>Build-Depends</tt>\"."
msgstr "<package>python-support</package>を\"<tt>Build-Depends</tt>\"にインストールします。"

#. type: <p></p>
#: maint-guide.en.sgml:1772
msgid "Use \"<tt>dh $@</tt>\" as usual. (This is enabled by default)"
msgstr "通常通り\"<tt>dh $@</tt>\"を使用します。(デフォルトで有効になっています。)"

#. type: <p></p>
#: maint-guide.en.sgml:1773
msgid "This handles Python modules using the <package>python-support</package> framework."
msgstr "これで<package>python-support</package>フレームワークを使用してPythonモジュールを利用できます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <heading></heading>
#. type: <p><list>
#: maint-guide.en.sgml:1775
msgid "Add support of the <prgn>dh_pycentral</prgn> command."
msgstr "<prgn>dh_pycentral</prgn>のサポートを追加する"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1777
msgid "Install the <package>python-central</package> package in \"<tt>Build-Depends</tt>\"."
msgstr "<package>python-central</package>パッケージをインストールします。"

#. type: <p></p>
#: maint-guide.en.sgml:1778
msgid "Use \"<tt>dh --with python-central $@</tt>\" instead."
msgstr "代わりに\"<tt>dh --with python-central $@</tt>\"を使用します。"

#. type: <p></p>
#: maint-guide.en.sgml:1779
msgid "This also deactivates the <prgn>dh_pysupport</prgn> command."
msgstr "これで<prgn>dh_pysupport</prgn>コマンドも無効化されます。"

#. type: <p></p>
#: maint-guide.en.sgml:1780
msgid "This handles Python modules using the <package>python-central</package> framework."
msgstr "これで<package>python-central</package>フレームワークを使用してPythonモジュールを利用できます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <heading></heading>
#. type: <p><list>
#: maint-guide.en.sgml:1782
msgid "Add support of the <prgn>dh_installtex</prgn> command."
msgstr "<prgn>dh_installtex</prgn>コマンドのサポートを追加する"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1784
msgid "Install the <package>tex-common</package> package in \"<tt>Build-Depends</tt>\"."
msgstr "<package>tex-common</package>パッケージをインストールします。"

#. type: <p></p>
#: maint-guide.en.sgml:1785
msgid "Use \"<tt>dh --with tex $@</tt>\" instead."
msgstr "代わりに\"<tt>dh --with tex $@</tt>\"を使用します。"

#. type: <p></p>
#: maint-guide.en.sgml:1786
msgid "This registers Type 1 fonts, hyphenation patterns, or formats with TeX."
msgstr "これで、TeXによるType1フォント、ハイフネーション、またはフォーマットが登録されます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <heading></heading>
#. type: <p><list>
#: maint-guide.en.sgml:1788
msgid "Add support of the <prgn>dh_quilt_patch</prgn> and <prgn>dh_quilt_unpatch</prgn> commands."
msgstr "<prgn>dh_quilt_patch</prgn> と <prgn>dh_quilt_unpatch</prgn> コマンドのサポートを追加する"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1790
msgid "Install the <package>quilt</package> package in \"<tt>Build-Depends</tt>\"."
msgstr "<package>quilt</package>パッケージをインストールします。"

#. type: <p></p>
#: maint-guide.en.sgml:1791
msgid "Use \"<tt>dh --with quilt $@</tt>\" instead."
msgstr "代わりに\"<tt>dh --with quilt $@</tt>\"を使用します。"

#. type: <p></p>
#: maint-guide.en.sgml:1792
msgid "This applies and un-applies patches to the upstream source from files in the <file>debian/patches</file> directory for the <tt>1.0</tt> source package."
msgstr "<tt>1.0</tt>ソースパッケージの<file>debian/patches</file>ディレクトリ内にあるファイルの上流ソースにパッチを当てたり外したりできます。 "

#. type: <p></p>
#: maint-guide.en.sgml:1793
msgid "This is not needed if you use the new <tt>3.0 (quilt)</tt> source package."
msgstr "もし<tt>3.0 (quilt)</tt>ソースパッケージを使用している場合、これは不要です。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <heading></heading>
#. type: <p><list>
#: maint-guide.en.sgml:1795
msgid "Add support of the <prgn>dh_dkms</prgn> command."
msgstr "<prgn>dh_dkms</prgn> コマンドのサポートを追加する"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1797
msgid "Install the <package>dkms</package> package in \"<tt>Build-Depends</tt>\"."
msgstr "<package>dkms</package>パッケージをインストールします。"

#. type: <p></p>
#: maint-guide.en.sgml:1798
msgid "Use \"<tt>dh --with dkms $@</tt>\" instead."
msgstr "代わりに\"<tt>dh --with dkms $@</tt>\"を使用します。"

#. type: <p></p>
#: maint-guide.en.sgml:1799
msgid "This correctly handles DKMS usage by the kernel module package."
msgstr "カーネルモジュールパッケージによるDKMSの使用方法正しく処理します。"

#. type: <p><list>
#: maint-guide.en.sgml:1801
msgid "Add support of the <prgn>dh_autotools-dev_updateconfig</prgn> and <prgn>dh_autotools-dev_restoreconfig</prgn> commands."
msgstr "<prgn>dh_autotools-dev_updateconfig</prgn> と <prgn>dh_autotools-dev_restoreconfig</prgn> コマンドのサポートを追加する"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1803
msgid "Install the <package>autotools-dev</package> package in \"<tt>Build-Depends</tt>\"."
msgstr "<package>autotools-dev</package> パッケージをインストールします。"

#. type: <p></p>
#: maint-guide.en.sgml:1804
msgid "Use \"<tt>dh --with autotools-dev $@</tt>\" instead."
msgstr "代わりに \"<tt>dh --with autotools-dev $@</tt>\" を使用します。"

#. type: <p></p>
#: maint-guide.en.sgml:1805
msgid "This updates and restores <file>config.sub</file> and <file>config.guess</file>."
msgstr "これで<file>config.sub</file>と<file>config.guess</file>をアップデートおよびレストアします。"

#. type: <p><list>
#: maint-guide.en.sgml:1807
msgid "Add support of the <prgn>dh_autoreconf</prgn> and <prgn>dh_autoreconf_clean</prgn> commands."
msgstr "<prgn>dh_autoreconf</prgn> と <prgn>dh_autoreconf_clean</prgn> コマンドのサポートを追加"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1809
msgid "Install the <package>dh-autoreconf</package> package in \"<tt>Build-Depends</tt>\"."
msgstr "<package>dh-autoreconf</package>パッケージをインストールします。"

#. type: <p></p>
#: maint-guide.en.sgml:1810
msgid "Use \"<tt>dh --with autoreconf $@</tt>\" instead."
msgstr "代わりに\"<tt>dh --with autoreconf $@</tt>\"を使用します。"

#. type: <p></p>
#: maint-guide.en.sgml:1811
msgid "This updates the GNU Build System files and restores them after the build."
msgstr "これは、ビルド後にGNUビルドシステムのファイルのアップデートおよびレストアを行います。"

#. type: <p><list>
#: maint-guide.en.sgml:1813
msgid "Add support to the <prgn>bash</prgn> completion feature."
msgstr "<prgn>bash</prgn>補完機能のサポートを追加する"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1815
msgid "Install the <package>bash-completion</package> package in \"<tt>Build-Depends</tt>\"."
msgstr "<package>bash-completion</package>パッケージをインストールします。"

#. type: <p></p>
#: maint-guide.en.sgml:1816
msgid "Use \"<tt>dh --with bash-completion $@</tt>\" instead."
msgstr "代わりに\"<tt>dh --with bash-completion $@</tt>\"を使用します。"

#. type: <p></p>
#: maint-guide.en.sgml:1817
msgid "This installs <prgn>bash</prgn> completions using configuration file at <file>debian/<var>package</var>.bash-completion</file>."
msgstr "このコマンドを使用すると、<prgn>bash</prgn>補完機能から、 <file>debian/<var>package</var>.bash-completion</file>の設定を使うことができるようになります。"

#. type: <p></p>
#: maint-guide.en.sgml:1823
msgid "For sources using Autotools, use combination of above as \"<tt>dh --with autotools-dev --with autoreconf $@</tt>\" to be most current with the GNU Build System."
msgstr "Autotoolsを使用したソースは、\"<tt>dh --with autotools-dev --with autoreconf $@</tt>\"と、コマンドを組み合わせて使うことで、最新のGNU Build Systemを使うことができます。"

#. type: <p></p>
#: maint-guide.en.sgml:1828
msgid "Many <prgn>dh_*</prgn> commands invoked by the new <prgn>dh</prgn> command can be customized by the corresponding configuration files in the <file>debian</file> directory. See <ref id=\"dother\"> and the manpage of each command for the customization of such features."
msgstr "多くの<prgn>dh_*</prgn>コマンドは、<prgn>dh</prgn>コマンドによって呼び出されます。この<prgn>dh</prgn>コマンドは、<file>debian</file> ディレクトリ内に設定ファイルがあり、カスタマイズすることが可能です。各コマンドの機能と、カスタマイズ方法については、 <ref id=\"dother\"> とコマンドごとのmanpageを参照してください。"

#. type: <p></p>
#: maint-guide.en.sgml:1838
msgid "Some <prgn>dh_*</prgn> commands invoked by the new <prgn>dh</prgn> command may require you to run it with some arguments or to run additional commands with them or to skip them. For such cases, you create an <tt>override_dh_<var>foo</var></tt> target with its rule in the <file>rules</file> file only for the <prgn>dh_<var>foo</var></prgn> command you want to change. It basically say \"<em>run me instead</em>\". <footnote><p>Under <tt>lenny</tt>, if you wanted to change the behavior of a <prgn>dh_*</prgn> script you found the relevant line in the <file>rules</file> file and adjusted it.</p></footnote>"
msgstr "<prgn>dh</prgn>コマンドによって呼び出される<prgn>dh_*</prgn>コマンドの中には、特定のコマンドと一緒に使ったり、引数をつけないと無視される場合があります。そのような場合は、変更したい<prgn>dh_<var>foo</var></prgn>コマンドについて、<tt>override_dh_<var>foo</var></tt> ターゲットを<file>rules</file>ファイルに追記してください。簡単に説明すると、このターゲットは\"<em>かわりにこのコマンドを使用する</em>\"という意味です。<footnote><p><tt>lenny</tt>では、<prgn>dh_*</prgn>スクリプトの挙動を変えたい場合、<file>rules</file>ファイル内の該当する行を見つけ出し、調整していました。</p></footnote>"

#. type: <p></p>
#: maint-guide.en.sgml:1845
msgid "Please note that the <prgn>dh_auto_*</prgn> commands tend to do more than what has been discussed as (over)simplified explanation to take care all the corner cases. Use of simplified equivalent command instead of these in <tt>override_dh_*</tt> targets except the <tt>override_dh_auto_clean</tt> target is a bad idea since it may kill such <package>debhelper</package>'s smart features."
msgstr "ここでは簡単な説明を行いましたが、実際には、めったに発生しない厄介なケースを処理するため、<prgn>dh_auto_*</prgn>コマンドは、もっと複雑なことを行っているということを覚えておいてください。そのため、<tt>override_dh_auto_clean</tt>ターゲット以外は、<tt>override_dh_*</tt> ターゲットを使用して、簡素化された別のコマンドで代用しようとしてはいけません。<package>debhelper</package>の賢い機能が台無しになってしまうからです。"

#. type: <p><example>
#: maint-guide.en.sgml:1856
msgid "If you want to store the system configuration data for the <package>gentoo</package> package in the <file>/etc/gentoo</file> directory instead of the usual <file>/etc</file> directory, you can override the default <tt>--sysconfig=/etc</tt> argument given by the <prgn>dh_auto_configure</prgn> command to the <prgn>./configure</prgn> command by the following. <footnote><p>The <package>gentoo</package> package uses the GNU build system, also known as the Autotools. See <url id=\"http://en.wikipedia.org/wiki/GNU_build_system\">.</p></footnote>"
msgstr "<package>gentoo</package>パッケージのための設定情報を<file>/etc</file>ディレクトリではなく、<file>/etc/gentoo</file>ディレクトリへ置きたい場合、以下のようにして<prgn>dh_auto_configure</prgn>コマンドによって与えられる、デフォルトの引数<tt>--sysconfig=/etc</tt>を、<prgn>./configure</prgn>によってオーバーライドできます。<footnote><p><package>gentoo</package>パッケージはAutotoolsとしても知られているGNU build systemを使用します。詳細は<url id=\"http://en.wikipedia.org/wiki/GNU_build_system\">を参照してください。</p></footnote>"

#. type: <example></example>
#: maint-guide.en.sgml:1859
#, no-wrap
msgid ""
"override_dh_auto_configure:\n"
"        dh_auto_configure -- --sysconfig=/etc/gentoo"
msgstr ""
"override_dh_auto_configure:\n"
"        dh_auto_configure -- --sysconfig=/etc/gentoo"

#. type: <p></p>
#: maint-guide.en.sgml:1867
msgid "The arguments given after <tt>--</tt> are appended to the default arguments of the auto-executed program to override them. Using the <prgn>dh_auto_configure</prgn> command is better than the <prgn>./configure</prgn> command here since it will only override the <tt>--sysconfig</tt> argument and keeps well intended other arguments to the <prgn>./configure</prgn> command."
msgstr "<tt>--</tt>以下の引数は、自動的に実行されるプログラムの引数に付け足されます。<prgn>dh_auto_configure</prgn>コマンドは、引数<tt>--sysconfig</tt>のみをオーバーライドしその他の引数には触れないため、<prgn>./configure</prgn>コマンドより優れているとされています。"

#. type: <p><example>
#: maint-guide.en.sgml:1874
msgid "If <file>Makefile</file> of a source for <package>gentoo</package> requires you to specify <tt>build</tt> as its target to build it <footnote><p><prgn>dh_auto_build</prgn> without any arguments will execute the first target in the <file>Makefile</file> file.</p></footnote>, you create an <tt>override_dh_auto_build</tt> target to enable it."
msgstr "もしも<package>gentoo</package>のソースの<file>Makefile</file>が、ビルドするために、<tt>build</tt>ターゲットを必要とする場合、<footnote><p>引数なしの<prgn>dh_auto_build</prgn>は、<file>Makefile</file>の最初のターゲットを実行します。</p></footnote><tt>override_dh_auto_build</tt>ターゲットを作り、有効化しなければなりません。"

#. type: <example></example>
#: maint-guide.en.sgml:1877
#, no-wrap
msgid ""
"override_dh_auto_build:\n"
"        dh_auto_build -- build"
msgstr ""
"override_dh_auto_build:\n"
"        dh_auto_build -- build"

#. type: <p></p>
#: maint-guide.en.sgml:1881
msgid "This ensures to run $(MAKE) with all the default arguments given by the <prgn>dh_auto_build</prgn> command and <tt>build</tt> argument."
msgstr "$(MAKE)を、<prgn>dh_auto_build</prgn>コマンドと<tt>build</tt>コマンドにデフォルトで与えられた引数すべてを確実に実行します。"

#. type: <p><example>
#: maint-guide.en.sgml:1888
msgid "If <file>Makefile</file> of a source for <package>gentoo</package> requires you to specify the <tt>packageclean</tt> target to clean it for Debian package instead of the <tt>distclean</tt> or <tt>clean</tt> targets in the <file>Makefile</file> file, you create an <tt>override_dh_auto_clean</tt> target to enable it."
msgstr "もし、<package>gentoo</package>のソースの<file>Makefile</file>が、<tt>distclean</tt> や <tt>clean</tt> ターゲットの代わりに<tt>packageclean</tt>ターゲットを要求する場合は、<tt>override_dh_auto_clean</tt>ターゲットを作ることで、有効になります。"

#. type: <example></example>
#: maint-guide.en.sgml:1891
#, no-wrap
msgid ""
"override_dh_auto_clean:\n"
"        $(MAKE) packageclean"
msgstr ""
"override_dh_auto_clean:\n"
"        $(MAKE) packageclean"

#. type: <p><example>
#: maint-guide.en.sgml:1898
msgid "If <file>Makefile</file> of a source for <package>gentoo</package> contains <tt>test</tt> target which you do not want to run for the Debian package building process, you can use empty <tt>override_dh_auto_test</tt> target to skip it."
msgstr "もし、<package>gentoo</package>のソースの<file>Makefile</file>が、<tt>test</tt>ターゲットを含み、Debianパッケージをビルドする過程で実行されたくない場合は、空の<tt>override_dh_auto_clean</tt>ターゲットを作ることで、スキップできます。"

#. type: <example></example>
#: maint-guide.en.sgml:1900
#, no-wrap
msgid "override_dh_auto_test:"
msgstr "override_dh_auto_test:"

#. type: <p><example>
#: maint-guide.en.sgml:1912
msgid "If <package>gentoo</package> has an unusual upstream changelog file called <file>FIXES</file>, <prgn>dh_installchangelogs</prgn> will not install that file by default. The <prgn>dh_installchangelogs</prgn> command requires <file>FIXES</file> as its argument to install it. <footnote><p>The <file>debian/changelog</file> and <file>debian/NEWS</file> files are always automatically installed. The upstream changelog is searched by converting filenames to the lower case and matching them with the <file>changelog</file>, <file>changes</file>, <file>changelog.txt</file>, and <file>changes.txt</file>.</p></footnote>"
msgstr "もし、<package>gentoo</package>パッケージに、普通ではない<file>FIXES</file>という上流のチェンジログファイルがある場合、 <prgn>dh_installchangelogs</prgn>はデフォルトではそのファイルをインストールしません。このファイルをインストールするには、<file>FIXES</file>を引数として、<prgn>dh_installchangelogs</prgn>に渡してやる必要があります。<footnote><p><file>debian/changelog</file> と <file>debian/NEWS</file> は常に自動でインストールされます。上流のチェンジログファイルは、ファイル名を小文字に変換し、<file>changelog</file>、<file>changes</file>、<file>changelog.txt</file>、<file>changes.txt</file>のいずれかと一致するものを検索します。</p></footnote>"

#. type: <example></example>
#: maint-guide.en.sgml:1915
#, no-wrap
msgid ""
"override_dh_installchangelogs:\n"
"        dh_installchangelogs FIXES"
msgstr ""
"override_dh_installchangelogs:\n"
"        dh_installchangelogs FIXES"

#. type: <p></p>
#: maint-guide.en.sgml:1922
msgid "When you use the new <prgn>dh</prgn> command, use of explicit targets such as the ones listed in <ref id=\"targets\"> except <tt>get-orig-source</tt> target may make it difficult to understand their exact effects. Please limit explicit targets to <tt>override_dh_*</tt> targets and completely independent ones, if possible."
msgstr "この新しい<prgn>dh</prgn>コマンドを使う際には、その正確な影響が把握するのが難しい<tt>get-orig-source</tt>を除き、<ref id=\"targets\">にあるような明確なターゲット指定をします。可能であれば、<tt>override_dh_*</tt>ターゲットおよび、完全に独立したものに明確なターゲットを制限してください。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <heading></heading>
#. type: <heading></heading>
#: maint-guide.en.sgml:1924
msgid "Other files under the <file>debian</file> directory"
msgstr "<file>debian</file>ディレクトリにあるその他のファイル"

#. type: <p></p>
#: maint-guide.en.sgml:1932
msgid "To control most of what <package>debhelper</package> does while building the package, you put optional configuration files under the <file>debian</file> directory. This chapter will make an overview of what each of these does and its format. Please read <url id=\"http://www.debian.org/doc/devel-manuals#policy\" name=\"Debian Policy Manual\"> and <url id=\"http://www.debian.org/doc/devel-manuals#devref\" name=\"Debian Developer's Reference\"> for guidelines for the packaging."
msgstr "<package>debhelper</package>がパッケージのビルド中に行うことをコントロールするためには、任意の設定ファイルを<file>debian</file>ディレクトリに置きます。この章では、それぞれの設定ファイルが何をして、どのような書式なのか、その概説をしていきます。パッケージングのガイドラインについての詳細は<url id=\"http://www.debian.org/doc/devel-manuals#policy\" name=\"Debian Policy Manual\"> と <url id=\"http://www.debian.org/doc/devel-manuals#devref\" name=\"Debian Developer's Reference\"> を参照してください。"

#. type: <p></p>
#: maint-guide.en.sgml:1938
msgid "The <prgn>dh_make</prgn> command will create some template configuration files under the <file>debian</file> directory. Most of them come with filenames suffixed by \"<tt>.ex</tt>\". Some of them come with filenames prefixed by the binary package name such as <tt><var>package</var></tt>. Take a look at all of them."
msgstr "<prgn>dh_make</prgn>コマンドは、<file>debian</file>ディレクトリの中に設定ファイルの雛形を作成します。大抵の場合、\"<tt>.ex</tt>\"サフェックスが付いています。ファイル名の先頭に<tt><var>package</var></tt>などのように、バイナリパッケージの名前がつくものもあります。これらのファイルにはすべて目を通しておいてください。"

#. type: <p></p>
#: maint-guide.en.sgml:1942
msgid "The <prgn>dh_make</prgn> command may not create some template configuration files for <package>debhelper</package>. In such cases, you need to create them with the editor."
msgstr "<prgn>dh_make</prgn>コマンドは、<package>debhelper</package>用の設定ファイルを作らないことがあります。その場合、自分でエディターを使い設定ファイルを作成しなければなりません。"

#. type: <p><list>
#: maint-guide.en.sgml:1943
msgid "If you wish or need to activate any of those, please do the following."
msgstr "以下の手順で、設定ファイルを有効にできます。"

#. type: <p></p>
#: maint-guide.en.sgml:1946
msgid "rename template files by removing the <tt>.ex</tt> or <tt>.EX</tt> suffix if the template files have one."
msgstr "<tt>.ex</tt>や<tt>.EX</tt>サフェックスがついていれば、消してください。"

#. type: <p></p>
#: maint-guide.en.sgml:1948
msgid "rename the name of these configuration files using the actual binary package name in place of <tt><var>package</var></tt>."
msgstr "ファイル名を、<tt><var>package</var></tt>の代わりに、実際のバイナリパッケージの名前に変更してください。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1949
msgid "modify template file contents to suit your needs."
msgstr "必要に応じて、ファイルの中身を書き換えます。"

#. type: <p></p>
#: maint-guide.en.sgml:1950
msgid "remove template files which you do not need."
msgstr "不要な雛形のファイルは削除してください。"

#. type: <p></p>
#: maint-guide.en.sgml:1951
msgid "modify the <file>control</file> file (see <ref id=\"control\">), if necessary."
msgstr "必要であれば、<file>control</file>ファイル(参照 <ref id=\"control\">)を変更します。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1952
msgid "modify the <file>rules</file> file (see <ref id=\"rules\">), if necessary."
msgstr "必要なら<file>rules</file>ファイル(参照 <ref id=\"rules\">)を編集してください。"

#. type: <p></p>
#: maint-guide.en.sgml:1961
msgid "Those <package>debhelper</package> configuration files without <file><var>package</var></file> prefix such as <file>install</file> apply to the first binary package. When there are many binary packages, their configurations can be specified by prefixing their name to their configuration filenames such as <file><var>package-1</var>.install</file>, <file><var>package-2</var>.install</file>, etc."
msgstr "<file><var>package</var></file>をプリフェックスとして持たない、例えば<file>install</file>のような<package>debhelper</package>の設定ファイルは、最初のバイナリパッケージへ適用されます。   バイナリパッケージが多数ある場合、<file><var>package-1</var>install</file>、<file><var>package-2</var>.install</file>、などのように、パッケージ名を設定ファイルのプリフェックスとすることで指定できます。"

#. type: <heading></heading>
#: maint-guide.en.sgml:1963
msgid "<file>README.Debian</file> file"
msgstr "<file>README.Debian</file> ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:1966
msgid "Any extra details or discrepancies between the original package and your Debian version should be documented here."
msgstr "パッケージに関して、何か特別にユーザに知らせなければならない情報や、オリジナルのソフトウェアと作成したDebianパッケージとの相違点があればここに記述します。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:1969
msgid "<prgn>dh_make</prgn> created a default one, this is what it looks like:"
msgstr "以下は<prgn>dh_make</prgn>がデフォルトとして生成するものです。"

#. type: <example></example>
#: maint-guide.en.sgml:1976
#, no-wrap
msgid ""
"gentoo for Debian\n"
"-----------------\n"
"\n"
"&lt;possible notes regarding this package - if none, delete this file&gt;\n"
"\n"
" -- Josip Rodin &lt;joy-mg@debian.org&gt;, Wed, 11 Nov 1998 21:02:14 +0100"
msgstr ""
"gentoo for Debian\n"
"-----------------\n"
"\n"
"&lt;possible notes regarding this package - if none, delete this file&gt;\n"
"\n"
" -- Josip Rodin &lt;joy-mg@debian.org&gt;, Wed, 11 Nov 1998 21:02:14 +0100"

#. type: <p></p>
#: maint-guide.en.sgml:1980
msgid "If you have nothing to be documented, remove this file. See <manref section=\"1\" name=\"dh_installdocs\">."
msgstr "もし、ドキュメントがなければこのファイルを削除してください。詳しくは <manref section=\"1\" name=\"dh_installdocs\">を参照してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:1982
msgid "<file>compat</file> file"
msgstr "<file>compat</file> ファイル"

#. type: <p><example>
#: maint-guide.en.sgml:1986
msgid "The <file>compat</file> file defines the <package>debhelper</package> compatibility level. Currently, you should set it to the <package>debhelper</package> V7 by the following."
msgstr "<file>compat</file>ファイルは、<package>debhelper</package>の互換性レベルを規定します。現段階では、以下のように<package>debhelper</package> V7に設定します。"

#. type: <example></example>
#: maint-guide.en.sgml:1988
#, no-wrap
msgid "$ echo 7 > debian/compat"
msgstr "$ echo 7 > debian/compat"

#. type: <heading></heading>
#: maint-guide.en.sgml:1991
msgid "<file>conffiles</file> file"
msgstr "<file>conffiles</file>ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:1997
msgid "One of the most annoying things about software is when you spend a great deal of time and effort customizing a program, only to have an upgrade stomp all over your changes. Debian solves this problem by marking configuration files so that when you upgrade a package, you'll be prompted whether you want to keep your old configuration or not."
msgstr "大変な時間と労力を費やしてプログラムをカスタマイズしても、一回のアップグレードで上書きされてしまうとうんざりします。Debianはこの問題を、設定ファイルを記録しておき、パッケージをアップグレードする際に古い設定をそのまま使いたいかどうかを質問することで解決しました。"

#. type: <p></p>
#: maint-guide.en.sgml:2004
msgid "Since <package>debhelper</package> V3, <manref section=\"1\" name=\"dh_installdeb\"> will <em>automatically</em> flag any files under the <file>/etc</file> directory as conffiles, so if your program only has conffiles there you do not need to specify them in this file. For most package types, the only place there is (and should be conffiles) is under <file>/etc</file> and so this file doesn't need to exist."
msgstr "<package>debhelper</package> V3、 <manref section=\"1\" name=\"dh_installdeb\"> は<em>自動的に</em><file>/etc</file>ディレクトリ以下のファイルを全てconffilesとみなすので、あなたのプログラムが他のディレクトリにconffilesを持たない場合は特に指定する必要はありません。ほとんどのパッケージの場合、<file>/etc</file>以下にのみconffilesがある（そうあるべきです）ので、このファイルの存在は不要です。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2008
msgid "If your program uses configuration files but also rewrites them on its own, it's best not to make them as conffiles because <prgn>dpkg</prgn> will then prompt users to verify the changes all the time."
msgstr "あなたのプログラムが設定ファイルを利用する場合であっても、 その設定ファイルがプログラム自身によって頻繁に上書きされるような場合には、パッケージをアップグレードするたびに<prgn>dpkg</prgn>によって設定ファイルの変更について確認を求められることになるので、その設定ファイルをconffilesに登録しないほうが良いでしょう。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><list>
#: maint-guide.en.sgml:2011
msgid "If the program you're packaging requires every user to modify the configuration files in the <file>/etc</file> directory, there are 2 popular ways to make them not as conffiles to keep <prgn>dpkg</prgn> quiet."
msgstr "あなたのパッケージングするプログラムが、ユーザーに<file>/etc</file>ディレクトリの中にある設定ファイルを編集することを要求する場合、<prgn>dpkg</prgn>を黙らせるためにconffilesとして登録するためによく使われる方法が２つあります。"

#. type: <p></p>
#: maint-guide.en.sgml:2015
msgid "You make a symlink under the <file>/etc</file> directory pointing to a file under the <file>/var</file> directory generated by the <em>maintainer scripts</em>."
msgstr "<file>/etc</file>ディレクトリ中に、<em>maintainer scripts</em>によって生成された<file>/var</file>ディレクトリ以下のファイルにシンボリックリンクを張る方法と、"

#. type: <p></p>
#: maint-guide.en.sgml:2017
msgid "You make a file generated by the <em>maintainer scripts</em> under the <file>/etc</file> directory."
msgstr "<file>/etc</file>ディレクトリの中に<em>maintainer scripts</em>によってファイルを生成する方法です。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2021
msgid "For more information on the <em>maintainer scripts</em>, see <ref id=\"maintscripts\">."
msgstr "<em>maintainer scripts</em>について、詳細は<ref id=\"maintscripts\">を参照してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2023
msgid "<file><var>package</var>.cron.*</file> files"
msgstr "<file><var>package</var>.cron.*</file>ファイル"

#. type: <p><list>
#: maint-guide.en.sgml:2028
msgid "If your package requires regularly scheduled tasks to operate properly, you can use this file to set it up. You can either setup regular tasks that happen hourly, daily, weekly or monthly or alternatively happen any other time that you wish. The filenames are:"
msgstr "パッケージが正しく動作するために、定期的にあるタスクを実行する必要がある場合は、このファイルで設定します。毎時間、毎日、毎週、または指定した時間にタスクを実行するように指定することができます。ファイル名："

#. type: <p></p>
#: maint-guide.en.sgml:2031
msgid "<file>cron.hourly</file> - Installed as <file>/etc/cron.hourly/<var>package</var></file>: run once an hour every hour."
msgstr "<file>cron.hourly</file> - <file>/etc/cron.hourly/<var>package</var></file>としてインストール: 1時間ごとに実行する。"

#. type: <p></p>
#: maint-guide.en.sgml:2033
msgid "<file>cron.daily</file> - Installed as <file>/etc/cron.daily/<var>package</var></file>: run once a day, usually early morning."
msgstr "<file>cron.daily</file> - <file>/etc/cron.daily/<var>package</var></file>としてインストール: 1日に1度実行。普通は早朝に実行する。"

#. type: <p></p>
#: maint-guide.en.sgml:2035
msgid "<file>cron.weekly</file> - Installed as <file>/etc/cron.weekly/<var>package</var></file>: run once a week, usually early Sunday morning."
msgstr "<file>cron.weekly</file> - <file>/etc/cron.weekly/<var>package</var></file>としてインストール: 1週間に1度実行。普通は日曜の早朝に実行する。"

#. type: <p></p>
#: maint-guide.en.sgml:2037
msgid "<file>cron.monthly</file> - Installed as <file>/etc/cron.monthly/<var>package</var></file>: run once a month, usually early morning on the first of the month."
msgstr "<file>cron.monthly</file> - <file>/etc/cron.monthly/<var>package</var></file>としてインストール: 1ヶ月に1度実行。普通は1日の早朝に実行する。"

#. type: <p></p>
#: maint-guide.en.sgml:2038
msgid "<file>cron.d</file> - Installed as <file>/etc/cron.d/<var>package</var></file>: for any other time"
msgstr "<file>cron.d</file> - <file>/etc/cron.d/<var>package</var></file>としてインストール: 上記以外のどの時間でも指定可能。"

#. type: <p></p>
#: maint-guide.en.sgml:2044
msgid "For the named files, the format of them is the shell script. The different one is <file><var>package</var>.cron.d</file> which follows the format of <manref section=\"5\" name=\"crontab\">."
msgstr "上記のファイルの書式はシェルスクリプトです。<file><var>package</var>.cron.d</file>は違い、<manref section=\"5\" name=\"crontab\">の書式になります。"

#. type: <p></p>
#: maint-guide.en.sgml:2048
msgid "Note that this doesn't include log rotation; for that, see <manref section=\"1\" name=\"dh_installlogrotate\"> and <manref section=\"8\" name=\"logrotate\">."
msgstr "ここではログのローテーションは扱いません。ログローテーションについては<manref section=\"1\" name=\"dh_installlogrotate\">　および <manref section=\"8\" name=\"logrotate\">を参照してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2050
msgid "<file>dirs</file> file"
msgstr "<file>dirs</file>ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2055
msgid "This file specifies the directories which we need but the normal installation procedure (\"<tt>make install DESTDIR=...</tt>\" invoked by \"<tt>dh_auto_install</tt>\") somehow doesn't create. This generally means there is a problem with the <file>Makefile</file>."
msgstr "このファイルにはパッケージが必要としているのに、なぜか通常のインストール手順(\"<tt>dh_auto_install</tt>\"によって呼び出される\"<tt>make install DESTDIR=...</tt>\")では作成されないディレクトリを指定します。通常、これは<file>Makefile</file>に問題があることを示唆しています。"

#. type: <p></p>
#: maint-guide.en.sgml:2058
msgid "Files listed in the <file>install</file> file doesn't need the directories created first. See <ref id=\"install\">."
msgstr "<file>install</file>ファイルに書かれてるファイルは最初にディレクトリを作成する必要がないファイルです。詳しくは <ref id=\"install\"> を参照してください。"

#. type: <p></p>
#: maint-guide.en.sgml:2062
msgid "It is best to first try to run the installation first and only use this if you run into trouble. There is no preceding slash on the directory names."
msgstr "まずはインストールしてみて、なにか問題が起きた場合にのみ使うべきでしょう。ディレクトリ名の頭にスラッシュが付かない事に注意してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2064
msgid "<file><var>package</var>.doc-base</file> file"
msgstr "<file><var>package</var>.doc-base</file> ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2069
msgid "If your package has documentation other than manual pages and info docs, you should use the <package>doc-base</package> file to register it, so the user can find it with e.g. <manref section=\"1\" name=\"dhelp\">, <manref section=\"1\" name=\"dwww\"> or <manref section=\"1\" name=\"doccentral\">."
msgstr "もしあなたのパッケージがマニュアルページや info 形式の文書以外に付属文書を含む場合、 <package>doc-base</package> ファイルを使ってそれらを登録し、ユーザがそれらの付属文書を、例えば<manref section=\"1\" name=\"dhelp\"> や <manref section=\"1\" name=\"dwww\">、あるいは <manref section=\"1\" name=\"doccentral\">コマンドなどで参照できるようにしましょう。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2072
msgid "This usually includes HTML, PS and PDF files, shipped in <file>/usr/share/doc/<var>packagename</var>/</file>."
msgstr "これには通常、<file>/usr/share/doc/<var>packagename</var>/</file>の中に収められるようなHTML、PS、およびPDFなどの形式の付属文書が含まれます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:2075
msgid "This is how <package>gentoo</package>'s doc-base file <file>gentoo.doc-base</file> looks like:"
msgstr "例えば、<package>gentoo</package>の<file>gentoo.doc-base</file>ファイルは次のようになります:"

#. type: <example></example>
#: maint-guide.en.sgml:2085
#, no-wrap
msgid ""
"Document: gentoo\n"
"Title: Gentoo Manual\n"
"Author: Emil Brink\n"
"Abstract: This manual describes what Gentoo is, and how it can be used.\n"
"Section: File Management\n"
"\n"
"Format: HTML\n"
"Index: /usr/share/doc/gentoo/html/index.html\n"
"Files: /usr/share/doc/gentoo/html/*.html"
msgstr ""
"Document: gentoo\n"
"Title: Gentoo Manual\n"
"Author: Emil Brink\n"
"Abstract: This manual describes what Gentoo is, and how it can be used.\n"
"Section: File Management\n"
"\n"
"Format: HTML\n"
"Index: /usr/share/doc/gentoo/html/index.html\n"
"Files: /usr/share/doc/gentoo/html/*.html"

#. type: <p></p>
#: maint-guide.en.sgml:2090
msgid "For information on the file format, see <manref section=\"8\" name=\"install-docs\"> and the <package>doc-base</package> manual, in <file>/usr/share/doc/doc-base/doc-base.html/</file>."
msgstr "このファイルの書式については<manref section=\"8\" name=\"install-docs\">および <file>/usr/share/doc/doc-base/doc-base.html/</file>にある<package>doc-base</package> のマニュアルを参照してください。"

#. type: <p></p>
#: maint-guide.en.sgml:2092
msgid "For more details on installing additional documentation, look in <ref id=\"destdir\">."
msgstr "追加ドキュメントのインストールについて、詳細は<ref id=\"destdir\">を見てください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2094
msgid "<file>docs</file> file"
msgstr "<file>docs</file>ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2097
msgid "This file specifies the file names of documentation files we can have <manref section=\"1\" name=\"dh_installdocs\"> install into the temporary directory for us."
msgstr "このファイルには、<manref section=\"1\" name=\"dh_installdocs\">を使ってパッケージ生成用の一時的なディレクトリにインストールするために、パッケージに付属する資料のファイル名を指定してください。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2100
msgid "By default, it will include all existing files in the top-level source directory that are called \"<file>BUGS</file>\", \"<file>README*</file>\", \"<file>TODO</file>\" etc."
msgstr "デフォルトでは、ソースディレクトリのトップレベルに存在する \"<file>BUGS</file>\"、 \"<file>README*</file>\"、 \"<file>TODO</file>\" などの名前を持つファイル全てを含みます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:2103
msgid "For <package>gentoo</package>, I also included some other files:"
msgstr "では、<package>gentoo</package>に付属文書をいくつか指定してみましょう。"

#. type: <example></example>
#: maint-guide.en.sgml:2111
#, no-wrap
msgid ""
"BUGS\n"
"CONFIG-CHANGES\n"
"CREDITS\n"
"NEWS\n"
"README\n"
"README.gtkrc\n"
"TODO"
msgstr ""
"BUGS\n"
"CONFIG-CHANGES\n"
"CREDITS\n"
"NEWS\n"
"README\n"
"README.gtkrc\n"
"TODO"

#. type: <heading></heading>
#: maint-guide.en.sgml:2114
msgid "<file>emacsen-*</file> file"
msgstr "<file>emacsen-*</file> ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2117
msgid "If your package supplies Emacs files that can be bytecompiled at package installation time, you can use these files to set it up."
msgstr "パッケージをインストールする際にバイトコンパイル可能な Emacs ファイルがあなたのパッケージに含まれている場合、これらの emacsen-* ファイルを利用してそれを設定することができます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2120
msgid "They are installed into the temporary directory by <manref section=\"1\" name=\"dh_installemacsen\">."
msgstr "これらのファイルは<manref section=\"1\" name=\"dh_installemacsen\">によってパッケージ作成用の一時的なディレクトリにインストールされます。"

#. type: <p></p>
#: maint-guide.en.sgml:2122
msgid "If you don't need these, remove them."
msgstr "不要ならこのファイルを削除してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2123
msgid "<file><var>package</var>.examples</file> file"
msgstr "<file><var>package</var>.examples</file>ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2126
msgid "The <manref section=\"1\" name=\"dh_installexamples\"> command installs files and directories listed in this file as example files."
msgstr "<manref section=\"1\" name=\"dh_installexamples\">コマンドはこのディレクトリに列挙されたファイルを例としてインストールします。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2128
msgid "<file><var>package</var>.init</file> and <file><var>package</var>.default</file> files"
msgstr "<file><var>package</var>.init</file> と <file><var>package</var>.default</file> ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2131
msgid "If your package is a daemon that needs to be run at the system start-up, you've obviously disregarded my initial recommendation, haven't you? :-)"
msgstr "もしあなたのパッケージがデーモンであり、システムの起動時に 自動的に動作させる必要があるとしたら、私が最初に勧めたことを あなたはまるっきり無視してしまったわけですよね。そうでしょ ?:-)"

#. type: <p></p>
#: maint-guide.en.sgml:2139
msgid "The <file><var>package</var>.init</file> file is installed as the <file>/etc/init.d/<var>package</var></file> script. Its fairly generic skeleton template is provided by the <prgn>dh_make</prgn> command as <file>init.d.ex</file>. You'll likely have to rename and edit it, a lot, while making sure to provide Filesystem Hierarchy Standard (see <file>/usr/share/doc/debian-policy/fhs/</file>) compliant headers. It gets installed into the temporary directory by <manref section=\"1\" name=\"dh_installinit\">."
msgstr "<file><var>package</var>.init</file> ファイルは <file>/etc/init.d/<var>package</var></file> スクリプトとしてインストールされます。その極めて標準的なテンプレートファイルは<prgn>dh_make</prgn>コマンドによって提供される <file>init.d.ex</file>です。ファイル階層標準 (詳しくは <file>/usr/share/doc/debian-policy/fhs/</file>を参照) に準拠するためには、おそらくファイル名を変更し、かなりの編集が必要になります。このファイルは<manref section=\"1\" name=\"dh_installinit\">によって、一時的なディレクトリにインストールされます。"

#. type: <p></p>
#: maint-guide.en.sgml:2146
msgid "The <file><var>package</var>.default</file> file will be installed into <file>/etc/default/<var>package</var></file>. This file sets defaults that are sourced by the init script. Most times this default file is used to disable running a daemon, set some default flags or timeouts. If your init script has certain <em>settable</em> features you want to install these into the default file, not the init script."
msgstr "<file><var>package</var>.default</file>ファイルは<file>/etc/default/<var>package</var></file>にインストールされます。このファイルはinitスクリプトのデフォルト設定となります。このデフォルトファイルは大抵、デーモンを停止したり、デフォルトのフラグやタイムアウトなどの設定に使われます。もしもあなたのinitスクリプトが、特定の<em>設定可能</em>な機能を有しているのであれば、それは起動スクリプトではなく、このデフォルトファイルに設定しておくべきでしょう。"

#. type: <p><example>
#: maint-guide.en.sgml:2153
msgid "If your upstream program has an init file you can either use it or not. If you don't use their init.d script then create a new one in <file>debian/<var>package</var>.init</file>. However if the upstream init script looks fine and installs in the right place you still need to setup the <file>rc*</file> symlinks. To do this you will need to override <prgn>dh_installinit</prgn> in the <file>rules</file> file with the following lines:"
msgstr "上流プログラムの起動ファイルを使用するか、しないかにかかわらずです。もし上流からのinit.dスクリプトを使わないのであれば<file>debian/<var>package</var>.init</file>に新しいのを作成しましょう。上流の起動スクリプトが大丈夫そうで、正しい場所にインストールされたとしても、<file>rc*</file> シンボリックリンクの設定は必要です。そのために、<file>rules</file>ファイルに以下を追加して、<prgn>dh_installinit</prgn>をオーバーライドしましょう。"

#. type: <example></example>
#: maint-guide.en.sgml:2156
#, no-wrap
msgid ""
"override_dh_installinit:\n"
"        dh_installinit --onlyscripts"
msgstr ""
"override_dh_installinit:\n"
"        dh_installinit --onlyscripts"

#. type: <p></p>
#: maint-guide.en.sgml:2159
msgid "If you don't need this, remove the files."
msgstr "不要なら、このファイルを削除してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2161
msgid "<file>install</file> file"
msgstr "<file>install</file> ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2170
msgid "If there are files that need to be installed into your package but your standard \"<tt>make install</tt>\" won't do it, you put the filenames and destinations into this <file>install</file> file. They are installed by <manref section=\"1\" name=\"dh_install\">.<footnote><p>This replaces the deprecated <manref section=\"1\" name=\"dh_movefiles\"> command which is configured by the <file>files</file> file.</p></footnote> You should first check there is not a more specific tool to use. For example, documents should be in the <file>docs</file> file and not in this one."
msgstr "パッケージにとってインストールが必要なファイルがあるにも関わらず、 \"<tt>make install</tt>\"ではインストールされない場合、そのファイル名とファイルを置く目的地を<file>install</file>ファイルに記述します。そうすると、<manref section=\"1\" name=\"dh_install\">によってそれらのファイルがインストールされます。<footnote><p><file>files</file>ファイルによって、<manref section=\"1\" name=\"dh_movefiles\">コマンドが設定され、置換されます。 </p></footnote> まずは使えそうな別のツールがないかどうかを調べましょう。例えば、ドキュメントはこのファイルではなく<file>docs</file>ファイルにあるべきです。"

#. type: <p><example>
#: maint-guide.en.sgml:2177
msgid "This <file>install</file> file has one line per file installed, with the name of the file (relative to the top build directory) then a space then the installation directory (relative to the install directory). One example of where this is used is where a binary is forgotten to be installed, the <file>install</file> file would look like:"
msgstr "<file>install</file>ファイルはインストールされるファイルごとに1行必要とします。ファイル名（ビルドディレクトリのトップを基点とした相対パス）、スペース、インストールするディレクトリ名（インストールディレクトリを基点とした相対パス）という書式です。例えば、バイナリのインストールを忘れた場合などに、 <file>install</file> ファイルのエントリは以下のように記述します。"

#. type: <example></example>
#: maint-guide.en.sgml:2179
#, no-wrap
msgid "src/foo/mybin usr/bin"
msgstr "src/foo/mybin usr/bin"

#. type: <p></p>
#: maint-guide.en.sgml:2183
msgid "This will mean when this package is installed, there will be a binary file <file>/usr/bin/mybin</file>."
msgstr "上記によって、パッケージがインストールされたときに、<file>/usr/bin/mybin</file>というバイナリファイルが存在することになります。"

#. type: <p></p>
#: maint-guide.en.sgml:2189
msgid "Alternatively, this <file>install</file> can have the name of the file only without the installation directory when the relative directory path does not change. This format is usually used for a large package that splits build result into multiple binary packages using <file><var>package-1</var>.install</file>, <file><var>package-2</var>.install</file>, etc."
msgstr "また、この<file>install</file>ファイルは相対パスが変わらない場合、インストールディレクトリの指定を省略することもできます。この書式はビルドした結果を、<file><var>package-1</var>.install</file>, <file><var>package-2</var>.install</file>, などを使用し、複数のバイナリパッケージに分割するような、大規模なパッケージで使われます。"

#. type: <p></p>
#: maint-guide.en.sgml:2193
msgid "The <prgn>dh_install</prgn> command will fall back to look in <file>debian/tmp</file> for files, if it doesn't find them in the current directory (or wherever you've told it to look using <tt>--sourcedir</tt>)."
msgstr "<prgn>dh_install</prgn> コマンドはもし、カレントディレクトリでファイルが見つからなかった場合は、(または、<tt>--sourcedir</tt>　で探すように指示したディレクトリ内で見つからなかった場合は)フォールバックして <file>debian/tmp</file>内を検索します。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2195
msgid "<file><var>package</var>.info</file> file"
msgstr "<file><var>package</var>.info</file>　ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2199
msgid "If your package has info pages, you should install them using <manref section=\"1\" name=\"dh_installinfo\"> by listing them in the <file><var>package</var>.info</file> files."
msgstr "パッケージにinfoページがある場合、<file><var>package</var>.info</file>にそれらを挙げて、<manref section=\"1\" name=\"dh_installinfo\">を使用してインストールします。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2201
msgid "<file>{<var>package</var>.|source/}lintian-overrides</file> files"
msgstr "<file>{<var>package</var>.|source/}lintian-overrides</file> ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2208
msgid "If <package>lintian</package> reports an erroneous diagnostics for a case when the policy allows exceptions to some rule, you can use <file><var>package</var>.lintian-overrides</file> or <file>source/lintian-overrides</file> to quiet it. Please read <file>/usr/share/doc/lintian/lintian.html/index.html</file> and refrain from abusing this."
msgstr "ポリシーが例外を認めているにも関わらず、<package>lintian</package>が間違った診断情報を報告してきた場合、<file><var>package</var>.lintian-overrides</file>か<file>source/lintian-overrides</file>を使って黙らせることができます。<file>/usr/share/doc/lintian/lintian.html/index.html</file>を読み、過度な使用は控えてください。"

#. type: <p></p>
#: maint-guide.en.sgml:2213
msgid "<file><var>package</var>.lintian-overrides</file> is for the binary package named as <package><var>package</var></package> and is installed into <file>usr/share/lintian/overrides/<var>package</var></file> by the <prgn>dh_lintian</prgn> command."
msgstr "<file><var>package</var>.lintian-overrides</file>は<package><var>package</var></package>と名づけられたパッケージのためのファイルで、<prgn>dh_lintian</prgn>コマンドによって<file>usr/share/lintian/overrides/<var>package</var></file>にインストールされます。"

#. type: <p></p>
#: maint-guide.en.sgml:2216
msgid "<file>source/lintian-overrides</file> is for the source package. This is not installed."
msgstr "<file>source/lintian-overrides</file>はソースパッケージのためのファイルです。これはインストールされません。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2218
msgid "<file>manpage.*</file> files"
msgstr "<file>manpage.*</file>ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2223
msgid "Your program(s) should have a manual page. If they don't, you should create them. The <prgn>dh_make</prgn> command creates few template files for a manual page. These need to be copied and edited for each command without its manual page. Please make sure to remove unused templates."
msgstr "プログラムはマニュアルページが必ず必要ですもしなければ、作らなければなりません。<prgn>dh_make</prgn>コマンドはマニュアルページの雛形を作成します。マニュアルページがないコマンドのために、コピー、編集する必要があります。不要な雛形ファイルを削除するのを忘れないようにしてください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2225
msgid "<file>manpage.1.ex</file> file"
msgstr "<file>manpage.1.ex</file> ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2230
msgid "Manual pages are normally written in <manref section=\"1\" name=\"nroff\">. The <file>manpage.1.ex</file> template is written in <prgn>nroff</prgn>, too. See the <manref section=\"7\" name=\"man\"> manual page for a brief description of how to edit such a file."
msgstr "マニュアルページは通常、<manref section=\"1\" name=\"nroff\">で書かれています。<file>manpage.1.ex</file>のテンプレートも<prgn>nroff</prgn>で書かれています。これらのファイルをどう編集するのかについて、簡単な説明が<manref section=\"7\" name=\"man\">にあります。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:2237
msgid "The final manual page file name should include the name of the program it is documenting, so we will rename it from \"<tt>manpage</tt>\" to \"<tt>gentoo</tt>\". The file name also includes \"<tt>.1</tt>\" as the first suffix, which means it's a manual page for a user command. Be sure to verify that this section is indeed the correct one. Here's a short list of manual page sections:"
msgstr "最終的なマニュアルページのファイル名は、解説されているプログラム名を含めなければなりません。ここでは、ファイル名を\"<tt>manpage</tt>\"から\"<tt>gentoo</tt>\"に変更しましょう。ファイル名は、\"<tt>.1</tt>\"というサフェックスも含みます。これは、このマニュアルページはユーザーコマンドのものだ、という意味です。この部分を間違わないように気をつけてください。以下はマニュアルページのリストです:"

#. type: <example></example>
#: maint-guide.en.sgml:2248
#, no-wrap
msgid ""
"Section |     Description     |     Notes\n"
"   1     User commands          Executable commands or scripts.\n"
"   2     System calls           Functions provided by the kernel.\n"
"   3     Library calls          Functions within system libraries.\n"
"   4     Special files          Usually found in /dev\n"
"   5     File formats           E.g. /etc/passwd's format\n"
"   6     Games                  Or other frivolous programs\n"
"   7     Macro packages         Such as man macros.\n"
"   8     System administration  Programs typically only run by root.\n"
"   9     Kernel routines        Non-standard calls and internals."
msgstr ""
"Section |     Description     |     Notes\n"
"   1     User commands          Executable commands or scripts.\n"
"   2     System calls           Functions provided by the kernel.\n"
"   3     Library calls          Functions within system libraries.\n"
"   4     Special files          Usually found in /dev\n"
"   5     File formats           E.g. /etc/passwd's format\n"
"   6     Games                  Or other frivolous programs\n"
"   7     Macro packages         Such as man macros.\n"
"   8     System administration  Programs typically only run by root.\n"
"   9     Kernel routines        Non-standard calls and internals."

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2255
msgid "So <package>gentoo</package>'s man page should be called <file>gentoo.1</file>. If there was no <file>gentoo.1</file> man page in the original source, you should create it by renaming the <file>manpage.1.ex</file> template to <file>gentoo.1</file> and edit it by using information from the example and from upstream docs."
msgstr "つまり、<package>gentoo</package>のmanページは<file>gentoo.1</file>となります。オリジナルのソースファイルに<file>gentoo.1</file>というmanページがなければ、上流のドキュメントと例を元にして、<file>manpage.1.ex</file>という雛形ファイルを編集し<file>gentoo.1</file>というmanページを作らなければなりません。"

#. type: <p></p>
#: maint-guide.en.sgml:2262
msgid "You can use the <prgn>help2man</prgn> command to generate a man page out of \"<tt>--help</tt>\" and \"<tt>--version</tt>\" output of each program, too. <footnote><p>If the command is missing <prgn>info</prgn> page but have documentation files in the <file>/usr/share/<var>package</var></file> directory, you should manually edit generated the man page created by the <prgn>help2man</prgn> command. </p></footnote>"
msgstr "\"<tt>--help</tt>\"と\"<tt>--version</tt>\"から<prgn>help2man</prgn>コマンドを用いてmanページを作成することも可能です。　<footnote><file>/usr/share/<var>package</var></file>ディレクトリにドキュメントがあるにも関わらず、<p>コマンドが<prgn>info</prgn>ページを見つけられない場合は、<prgn>help2man</prgn>コマンドで生成されたページを直接編集します。</p></footnote>"

#. type: <heading></heading>
#: maint-guide.en.sgml:2264
msgid "<file>manpage.sgml.ex</file> file"
msgstr "<file>manpage.sgml.ex</file> ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p><list>
#. type: <p><list>
#: maint-guide.en.sgml:2267
msgid "If on the other hand you prefer writing SGML instead of <prgn>nroff</prgn>, you can use the <file>manpage.sgml.ex</file> template. If you do this, you have to:"
msgstr "もし、<prgn>nroff</prgn>よりSGMLのほうが好みであれば、<tt>manpage.sgml.ex</tt> のほうをひな型として使うことも できます。こちらの場合には、以下の手順が必要です。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2269
msgid "rename the file to something like <file>gentoo.sgml</file>."
msgstr "ファイル名を<file>gentoo.sgml</file>のような名前に変更します。"

#. type: <p></p>
#: maint-guide.en.sgml:2270
msgid "install the <package>docbook-to-man</package> package"
msgstr "<package>docbook-to-man</package> パッケージのインストール"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2272
msgid "add <tt>docbook-to-man</tt> to the <tt>Build-Depends</tt> line in the <file>control</file> file"
msgstr "<tt>control</tt> ファイルの <tt>Build-Depends</tt> 行へ <tt>docbook-to-man</tt> を追加"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:2274
#: maint-guide.en.sgml:2293
msgid "add a <tt>override_dh_auto_build</tt> target to your <file>rules</file> file:"
msgstr "<tt>rules</tt>ファイルに<tt>override_dh_auto_build</tt>ターゲットを追加"

#. type: <example></example>
#: maint-guide.en.sgml:2278
#, no-wrap
msgid ""
"override_dh_auto_build:\n"
"        docbook-to-man debian/gentoo.sgml > debian/gentoo.1\n"
"        dh_auto_build"
msgstr ""
"override_dh_auto_build:\n"
"        docbook-to-man debian/gentoo.sgml > debian/gentoo.1\n"
"        dh_auto_build"

#. type: <heading></heading>
#: maint-guide.en.sgml:2282
msgid "<file>manpage.xml.ex</file> file"
msgstr "<file>manpage.xml.ex</file> ファイル"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p><list>
#. type: <p><list>
#: maint-guide.en.sgml:2285
msgid "If you prefer XML over SGML, you can use the <tt>manpage.xml.ex</tt> template. If you do this, you have to:"
msgstr "SGMLよりもXMLが好みであれば、<tt>manpage.xml.ex</tt>をひな形として使うこともできます。こちらの場合には、以下の手順が必要です。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2287
msgid "rename the source file to something like <tt>gentoo.1.xml</tt>"
msgstr "ソースファイルの名前を、<tt>gentoo.1.xml</tt>のような名前に変更します。"

#. type: <p></p>
#: maint-guide.en.sgml:2289
msgid "install the <package>docbook-xsl</package> package and an XSLT processor like <package>xsltproc</package> (recommended)"
msgstr "<package>docbook-xsl</package> パッケージと <package>xsltproc</package> のような XSLT プロセッサのインストール (推奨)"

#. type: <p></p>
#: maint-guide.en.sgml:2291
msgid "add the <tt>docbook-xsl</tt>, <tt>docbook-xml</tt> and <tt>xsltproc</tt> packages to the <tt>Build-Depends</tt> line in the <tt>control</tt> file"
msgstr "<tt>control</tt> ファイルの <tt>Build-Depends</tt> 行へ、<tt>docbook-xsl</tt>、<tt>docbook-xml</tt>、<tt>xsltproc</tt>の各パッケージを追加"

#. type: <example></example>
#: maint-guide.en.sgml:2303
#, no-wrap
msgid ""
"override_dh_auto_build:\n"
"        xsltproc --nonet \\\n"
"         --param make.year.ranges 1 \\\n"
"         --param make.single.year.ranges 1 \\\n"
"         --param man.charmap.use.subset 0 \\\n"
"         -o debian/ \\\n"
" http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl\\\n"
"        debian/gentoo.1.xml\n"
"        dh_auto_build"
msgstr ""
"override_dh_auto_build:\n"
"        xsltproc --nonet \\\n"
"         --param make.year.ranges 1 \\\n"
"         --param make.single.year.ranges 1 \\\n"
"         --param man.charmap.use.subset 0 \\\n"
"         -o debian/ \\\n"
" http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl\\\n"
"        debian/gentoo.1.xml\n"
"        dh_auto_build"

#. type: <heading></heading>
#: maint-guide.en.sgml:2307
msgid "<file><var>package</var>.manpages</file> file"
msgstr "<file><var>package</var>.manpages</file> ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2311
msgid "If your package has manual pages, you should install them using <manref section=\"1\" name=\"dh_installman\"> by listing them in the <file><var>package</var>.manpages</file> files."
msgstr "パッケージにマニュアルページがある場合、<file><var>package</var>.manpages</file>にそれらを挙げて、<manref section=\"1\" name=\"dh_installman\">を使用してインストールします。"

#. type: <p><example>
#: maint-guide.en.sgml:2315
msgid "To install <file>doc/gentoo.1</file> for the <package>gentoo</package> package as its manpage, you create a <file>gentoo.manpages</file> file as:"
msgstr "<package>gentoo</package>パッケージのmanページとして、<file>doc/gentoo.1</file>をインストールするには、<file>gentoo.manpages</file>ファイルを以下のように作成します。"

#. type: <example></example>
#: maint-guide.en.sgml:2317
#, no-wrap
msgid "docs/gentoo.1"
msgstr "docs/gentoo.1"

#. type: <heading></heading>
#: maint-guide.en.sgml:2320
msgid "<file>menu</file> file"
msgstr "<file>menu</file> ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2325
msgid "X Window System users usually have a window manager with a menu that can be customized to launch programs. If they have installed the Debian <package>menu</package> package, a set of menus for every program on the system will be created for them."
msgstr "X Window System のユーザーは、大抵ウィンドウマネージャを使っており、好きなプログラムを起動できるようにメニュー機能をカスタマイズしています。<package>menu</package> パッケージをインストールしていれば、システムにある全プログラムのメニュー項目が作成され、menu に対応したウィンドウマネージャから利用できます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:2327
msgid "Here's the default <file>menu.ex</file> file that <prgn>dh_make</prgn> created:"
msgstr "以下が dh_make によって生成されたデフォルトの <tt>menu.ex</tt> ファイルです。"

#. type: <example></example>
#: maint-guide.en.sgml:2332
#, no-wrap
msgid ""
"?package(gentoo):needs=\"X11|text|vc|wm\" \\\n"
"        section=\"Applications/see-menu-manual\"\\\n"
"        title=\"gentoo\" command=\"/usr/bin/gentoo\""
msgstr ""
"?package(gentoo):needs=\"X11|text|vc|wm\" \\\n"
"        section=\"Applications/see-menu-manual\"\\\n"
"        title=\"gentoo\" command=\"/usr/bin/gentoo\""

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2337
msgid "The first field after the colon character is <tt>needs</tt>, and it specifies what kind of interface the program needs. Change this to one of the listed alternatives, e.g. <tt>text</tt> or <tt>X11</tt>."
msgstr "コロン (:) の後の最初のフィールドは<tt>needs</tt>です。このフィールドは、プログラムがどんなどんなインターフェースが必要かを規定します。デフォルトとして挙げられたもの（例：<tt>text</tt> や <tt>X11</tt>など）に変更してください。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2342
msgid "The next is <tt>section</tt>, where the menu and submenu the entry should appear in. The current list of sections <footnote><p>There were a major reorganization of menu structure for <tt>squeeze</tt>.</p></footnote> is at: <file>/usr/share/doc/debian-policy/menu-policy.html/ch2.html#s2.1</file>"
msgstr "次は<tt>section</tt>、プログラムのエントリーが表示されるメニューやサブメニューの指定です。現在のセクションの一覧は<footnote><p><tt>squeeze</tt>向けに、大規模なメニュー構造の見直しが行われました。</p></footnote><file>/usr/share/doc/debian-policy/menu-policy.html/ch2.html#s2.1</file>に記載されています。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2345
msgid "The <tt>title</tt> field is the name of the program. You can start this one in uppercase if you like. Just keep it short."
msgstr "<tt>title</tt>フィールドはプログラムの名称です。そうしたければ、大文字ではじめても大丈夫です。ただ、短くするようにしましょう。"

#. type: <p></p>
#: maint-guide.en.sgml:2347
msgid "Finally, the <tt>command</tt> field is the command that runs the program."
msgstr "最後の <tt>command</tt> フィールドは、実際にプログラムを実行するコマンドです。"

#. type: <p><example>
#: maint-guide.en.sgml:2350
msgid "Let's change the file name to <file>menu</file> and change the menu entry to this:"
msgstr "それでは、ファイル名を<file>menu</file>に変更し、メニューのエントリーを以下のように変更しましょう。"

#. type: <example></example>
#: maint-guide.en.sgml:2354
#, no-wrap
msgid ""
"?package(gentoo): needs=\"X11\" \\\n"
"        section=\"Applications/Tools\" \\\n"
"        title=\"Gentoo\" command=\"gentoo\""
msgstr ""
"?package(gentoo): needs=\"X11\" \\\n"
"        section=\"Applications/Tools\" \\\n"
"        title=\"Gentoo\" command=\"gentoo\""

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2361
msgid "You can also add other fields like <tt>longtitle</tt>, <tt>icon</tt>, <tt>hints</tt> etc. See <manref section=\"1\" name=\"dh_installmenu\">, <manref section=\"5\" name=\"menufile\">, <manref section=\"1\" name=\"update-menus\"> and <file>/usr/share/doc/debian-policy/menu-policy.html/</file> for more information."
msgstr "他にも、<tt>longtitle</tt>、<tt>icon</tt>、<tt>hints</tt>などのフィールドを追加できます。詳しくは <manref section=\"1\" name=\"dh_installmenu\">、 <manref section=\"5\" name=\"menufile\">、 <manref section=\"1\" name=\"update-menus\">、<file>/usr/share/doc/debian-policy/menu-policy.html/</file>を参照してください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2363
msgid "<file>NEWS</file> file"
msgstr "<file>NEWS</file> ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2365
msgid "The <manref section=\"1\" name=\"dh_installchangelogs\"> command installs this."
msgstr "<manref section=\"1\" name=\"dh_installchangelogs\">コマンドでインストールします。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2367
msgid "<file>{post|pre}{inst|rm}</file> files"
msgstr "<file>{post|pre}{inst|rm}</file> ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2377
msgid "These <file>postinst</file>, <file>preinst</file>, <file>postrm</file>, and <file>prerm</file> files <footnote><p>Although I used Bash short hand expression to indicate these files as \"<file>{post|pre}{inst|rm}</file>\" here, I recommend you to use pure POSIX (non-Bash) shell for these <em>maintainer scripts</em> as much as possible for the better compatibility.</p></footnote> are called <em>maintainer scripts</em>. They are scripts which are put in the control area of the package and run by <prgn>dpkg</prgn> when your package is installed, upgraded or removed."
msgstr "<file>postinst</file>、<file>preinst</file>、<file>postrm</file>、そして <file>prerm</file>ファイルは <footnote><p>ここでは簡略化するために\"<file>{postpre}{instrm}</file>\"にBashを使っていますが、<em>maintainer scripts</em>には、互換性の観点から、可能な限りPOSIX（Bashではない）シェルを使うべきでしょう。</p></footnote><em>maintainer scripts</em>と呼ばれています。これらのスクリプトは、パッケージを管理するアリアに置かれ、インストール、アップグレード、削除される際に<prgn>dpkg</prgn>によって実行されます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2383
msgid "As a novice maintainer, you should avoid any manual editing of <em>maintainer scripts</em> because they are problematic. For more information look in the <url id=\"http://www.debian.org/doc/debian-policy/ch-maintainerscripts.html\" name=\"Debian Policy Manual, 6 'Package maintainer scripts and installation procedure'\">, and take a look at these example files provided by <prgn>dh_make</prgn>."
msgstr "メンテナ初心者のうちは、問題になることが多いので<em>maintainer scripts</em>を直接編集しないようにしましょう。詳しくは<url id=\"http://www.debian.org/doc/debian-policy/ch-maintainerscripts.html\" name=\"Debian Policy Manual, 6 'Package maintainer scripts and installation procedure'\">を参照し、<prgn>dh_make</prgn>によって生成されるサンプルファイルに目を通してください。"

#. type: <p></p>
#: maint-guide.en.sgml:2388
msgid "If you did not listen to me and made your custom <em>maintainer scripts</em> for a package, you should make sure to test them not only for <strong>install</strong> and <strong>upgrade</strong> but also for <strong>remove</strong> and <strong>purge</strong>."
msgstr "もし私の忠告を無視して、<em>maintainer scripts</em>を直接編集した場合は、 <strong>インストール</strong>、<strong>アップグレード</strong>だけでなく、 <strong>削除</strong>と<strong>パージ</strong>のテストもしっかり行ってください。"

#. type: <p></p>
#: maint-guide.en.sgml:2392
msgid "Upgrades to the new version should be silent and non-intrusive (existing users should not notice the upgrade except by discovering that old bugs have been fixed and there perhaps are new features)."
msgstr "新バージョンへのアップグレードはおとなしく、そして押し付けがましくしてはいけません。（現行のユーザは、バグが直されたことと新機能の追加以外については、アップグレードに気づかないのが理想です。)"

#. type: <p></p>
#: maint-guide.en.sgml:2400
msgid "When the upgrade is necessarily intrusive (eg., config files scattered through various home directories with totally different structure), you may consider to set package to the safe default (e.g., disabled service) and provide proper documentations required by the policy (<file>README.Debian</file> and <file>NEWS.Debian</file>) as the last resort. Don't bother user with the <prgn>debconf</prgn> note invoked from these <em>maintainer scripts</em> for upgrades."
msgstr "アップグレードが出しゃばる必要がある場合(例えば構造が変わって、設定ファイルがあっちこちに散らばってしまった場合など)、パッケージのデフォルトを安全側に設定したり(例えばサービスを停止しておくなど)、最後の手段としてはポリシーに要求されるきちんとしたドキュメント(<file>README.Debian</file>と<file>NEWS.Debian</file>)を提供するなどの対策を考えるべきです。アップグレード際に<em>maintainer scripts</em>で<prgn>debconf</prgn>ノートを呼び出すような嫌がらせはやめてください。"

#. type: <p></p>
#: maint-guide.en.sgml:2405
msgid "The <package>ucf</package> package provides <em>conffile-like</em> handling infrastructure to preserve user changes for files that may not be labeled <em>conffiles</em> such as ones managed by the <em>maintainer scripts</em>. This should minimize issues associated with them."
msgstr "<package>ucf</package>パッケージは、<em>maintainer scripts</em>によって管理されているような<em>conffiles</em>にされていない、ユーザによって変更されたファイルを保存し、<em>conffileのように</em>処理する仕組みを提供します。この仕組みによって、関連する問題を最小化しています。"

#. type: <p></p>
#: maint-guide.en.sgml:2409
msgid "These <em>maintainer scripts</em> are the Debian enhancements that explain <strong>why people choose Debian</strong>. You must be very careful not to annoy them with these."
msgstr "これら、<em>maintainer scripts</em>は<strong>なぜDebianを選ぶのか</strong>という理由の１つでもあります。これらの仕組みで、ユーザの邪魔をしないようにしましょう。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2410
msgid "<file>TODO</file> file"
msgstr "<file>TODO</file> ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2412
msgid "The <manref section=\"1\" name=\"dh_installdocs\"> command installs this."
msgstr "<manref section=\"1\" name=\"dh_installdocs\">コマンドでインストールします。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2414
msgid "<file>watch</file> file"
msgstr "<file>watch</file> ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2421
msgid "The <file>watch</file> file format is documented in the <manref section=\"1\" name=\"uscan\"> manpage. The <file>watch</file> file configures the <prgn>uscan</prgn> program (in the <package>devscripts</package> package) to watch the site where you originally got the source from. This is also used by <url id=\"http://wiki.debian.org/DEHS\" name=\"Debian External Health Status (DEHS)\">."
msgstr "<file>watch</file>ファイルの書式は<manref section=\"1\" name=\"uscan\">を参照してください。<file>watch</file>ファイルは、<prgn>uscan</prgn> ( <package>devscripts</package>パッケージに含まれます)を設定し、ソースをどこから入手したのかを監視しています。<url id=\"http://wiki.debian.org/DEHS\" name=\"Debian External Health Status (DEHS)\">によっても使用されています。"

#. type: <p><example>
#: maint-guide.en.sgml:2424
msgid "Here's what I put in it:"
msgstr "今回は以下のようにしました。"

#. type: <example></example>
#: maint-guide.en.sgml:2428
#, no-wrap
msgid ""
"# watch control file for uscan\n"
"version=3\n"
"http://sf.net/gentoo/gentoo-(.+)\\.tar\\.gz debian uupdate"
msgstr ""
"# watch control file for uscan\n"
"version=3\n"
"http://sf.net/gentoo/gentoo-(.+)\\.tar\\.gz debian uupdate"

#. type: <p></p>
#: maint-guide.en.sgml:2438
msgid "Normally with this <file>watch</file> file, the URL at \"<tt>http://sf.net/gentoo</tt>\" is downloaded and searched for links of the form \"<tt>&lt;a href=...&gt;</tt>\". The base name (just the part after the final \"<tt>/</tt>\") of these linked URLs are matched against Perl regexp (see <manref section=\"1\" name=\"perlre\">) pattern \"<tt>gentoo-(.+)\\.tar\\.gz</tt>\". Out of matched files, the file with the greatest version number is downloaded and the <prgn>uupdate</prgn> program is run to create the updated source tree from them."
msgstr "通常、この<file>watch</file>ファイルでは、\"<tt>http://sf.net/gentoo</tt>\"のURLがダウンロードされ、\"<tt>&lt;a href=...&gt;</tt>\"フォームへのリンクを検索します。リンクされたURLのベースネーム(最後の\"<tt>/</tt>\"から後の部分)はPerlの正規表現(参照 <manref section=\"1\" name=\"perlre\">)パターン\"<tt>gentoo-(.+)\\.tar\\.gz</tt>\"に照らし合わされます。一致したファイルの中から、バージョンの番号が一番大きいものがダウンロードされ、アップデートのためのソースツリーを作成するために<prgn>uupdate</prgn>を実行します。"

#. type: <p></p>
#: maint-guide.en.sgml:2449
msgid "Although this is true for other sites, the SourceForge download service at <url id=\"http://sf.net\"> is an exception. When the <file>watch</file> file has an URL matching with the Perl regexp \"<tt>^http://sf\\.net/</tt>\", the <prgn>uscan</prgn> program substitutes it with \"<tt>http://qa.debian.org/watch/sf.php/</tt>\" and then applies this rule. The URL redirector service at this <url id=\"http://qa.debian.org/\"> is designed to offer a stable redirect service to the desired file for the <file>watch</file> file having \"<tt>http://sf.net/<var>project</var>/<var>tar-name</var>-(.+)\\.tar\\.gz</tt>\". This solves issues related to the periodically changing URL there."
msgstr "他のサイトでは上記の通りですが、<url id=\"http://sf.net\">のSourceForgeのダウンロードサービスは例外です。<file>watch</file>ファイルがPerlの正規表現\"<tt>^http://sf\\.net/</tt>\"に一致するURLを含む場合、<prgn>uscan</prgn>プログラムが代わりに\"<tt>http://qa.debian.org/watch/sf.php/</tt>\"を使い、このルールを当てはめます。<url id=\"http://qa.debian.org/\">のURLリダイレクトは\"<tt>http://sf.net/<var>project</var>/<var>tar-name</var>-(.+)\\.tar\\.gz</tt>\"を含む<file>watch</file>ファイルのために安定したリダイレクトを提供するよう設計されています。これにより、周期的に変化するURLに関する問題を解決しています。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2451
msgid "<file>source/format</file> file"
msgstr "<file>source/format</file> ファイル"

#. type: <p><list>
#: maint-guide.en.sgml:2455
msgid "In the <file>debian/source/format</file> file, there should be a single line indicating the desired format for the source package (check <manref section=\"1\" name=\"dpkg-source\"> for an exhaustive list). After <tt>squeeze</tt>, it should say either:"
msgstr "<file>debian/source/format</file>ファイルでは、ソースパッケージのための理想の書式を示すための行があります。 (完全なリストは、<manref section=\"1\" name=\"dpkg-source\">を参照してください。)<tt>squeeze</tt>以降は、以下のどちらかになっているべきです。"

#. type: <p></p>
#: maint-guide.en.sgml:2457
msgid "<tt>3.0 (native)</tt> for Debian native packages or"
msgstr "<tt>3.0 (native)</tt>：　Debianネイティブなパッケージ"

#. type: <p></p>
#: maint-guide.en.sgml:2458
msgid "<tt>3.0 (quilt)</tt> for everything else."
msgstr "<tt>3.0 (quilt)</tt>：　それ以外の全て。"

#. type: <p></p>
#: maint-guide.en.sgml:2475
msgid "The newer <tt>3.0 (quilt)</tt> source format records modifications in a <prgn>quilt</prgn> patch series within <file>debian/patches</file>. Those changes are then automatically applied during extraction of the source package. <footnote><p>See <url id=\"http://wiki.debian.org/Projects/DebSrc3.0\" name=\"DebSrc3.0\"> for the summary information concerning the switch to the new <tt>3.0 (quilt)</tt> and <tt>3.0 (native)</tt> source formats.</p></footnote> The Debian modifications are simply stored in a <file>debian.tar.gz</file> archive containing all files under the <file>debian</file> directory. This new format supports inclusion of binary files such as PNG icons by the package maintainer without requiring tricks. <footnote><p>Actually, this new format also supports multiple upstream tarballs and more compression methods. These are beyond the scope of this document.</p></footnote>"
msgstr "新しい<tt>3.0 (quilt)</tt>の書式は<prgn>quilt</prgn>パッチによる変更を <file>debian/patches</file>に記録します。そして、その変更は自動的にソースパッケージを展開するときに適用されます。<footnote><p>ソースの書式を<tt>3.0 (quilt)</tt> and <tt>3.0 (native)</tt>に移行する際の注意点などは、<url id=\"http://wiki.debian.org/Projects/DebSrc3.0\" name=\"DebSrc3.0\"> にまとまっています。</p></footnote>Debianの変更は、<file>debian</file>ディレクトリ以下のファイル全てを含め、<file>debian.tar.gz</file>アーカイブに保存されています。この新しい書式は、特殊な方法を用いることなく、PGNアイコンなどのパッケージメンテナによるバイナリファイルを含めることが可能です。<footnote><p>この新しいフォーマットは、複数の上流のtar玉などもっと多くの圧縮方法をサポートしています。詳細は本稿の範疇を超えるため割愛します。</p></footnote>"

#. type: <p></p>
#: maint-guide.en.sgml:2481
msgid "When <prgn>dpkg-source</prgn> extracts a source package in <tt>3.0 (quilt)</tt> source format, it automatically applies all patches listed in <file>debian/patches/series</file>. You can avoid applying patches at the end of the extraction with the <tt>--skip-patches</tt> option."
msgstr "<prgn>dpkg-source</prgn>が<tt>3.0 (quilt)</tt>の書式でソースパッケージを展開する際、<file>debian/patches/series</file>に列挙されたパッチを自動的に適用します。<tt>--skip-patches</tt>オプションで、展開時にパッチを適用しないようにできます。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2483
msgid "<file>source/local-options</file> file"
msgstr "<file>source/local-options</file> ファイル"

#. type: <p></p>
#: maint-guide.en.sgml:2490
msgid "When you want to manage Debian packaging activities under a VCS, you typically create one branch (e.g. <tt>upstream</tt>) tracking the upstream source and another branch (e.g. typically <tt>master</tt> for Git) tracking the Debian package. For the latter, you usually want to have unpatched upstream source with your <file>debian/*</file> files for the Debian packaging to ease merging of the new upstream source."
msgstr "Debianをパッケージングする活動をVCSで管理したい場合、上流のソースをトラックするためのブランチ(例 <tt>upstream</tt>)とDebianパッケージをトラックするための別のブランチ(例 Gitのための<tt>master</tt>)を作成します。後者の場合、新しい上流のソースとマージするのを簡単にするために、通常パッチの当てていない上流のソースを<file>debian/*</file>ファイルと一緒に持っておきます。"

#. type: <p></p>
#: maint-guide.en.sgml:2499
msgid "After you build a package, the source is normally left patched. You need to unpatch it manually by running \"<tt>quilt pop -a</tt>\" before committing to the <tt>master</tt> branch. You can automate this by adding the optional <file>debian/source/local-options</file> file containing \"<tt>unapply-patches</tt>\". This file is not included in the generated source package and changes the local build behavior only. This file may contain \"<tt>abort-on-upstream-changes</tt>\", too (see <manref section=\"1\" name=\"dpkg-source\">)."
msgstr "パッケージをビルドした後は、ソースのパッチは当てたままにされます。なので、<tt>master</tt>ブランチにコミットする前に\"<tt>quilt pop -a</tt>\"でパッチを外さなければなりません。<file>debian/source/local-options</file>ファイルに\"<tt>unapply-patches</tt>\"を書いておけば、自動的にパッチを外せます。このファイルは生成されたソースパッケージには含まれず、ローカルビルドでの挙動のみを変更します。このファイルは\"<tt>abort-on-upstream-changes</tt>\"も含むかもしれません。(参照 <manref section=\"1\" name=\"dpkg-source\">)."

#. type: <heading></heading>
#: maint-guide.en.sgml:2501
msgid "<file>patches/*</file> files"
msgstr "<file>patches/*</file> ファイル群"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2507
msgid "The old <tt>1.0</tt> source format created a single large <file>diff.gz</file> file which contains package maintenance files in <file>debian</file> and patch files to the source. Such a package is a bit cumbersome to inspect and understand for each source tree modification later. This is not so nice."
msgstr "古い<tt>1.0</tt>のソースフォーマットは、<file>debian</file>内にパッケージメンテナンスファイルと、パッチファイルを含む単一の大きな<file>diff.gz</file>ファイルを作っていました。そのようなファイルは、ソースツリーの変更を後から調べたり、理解するのが非常に厄介でした。これはあまりいただけません。"

#. type: <p></p>
#: maint-guide.en.sgml:2522
msgid "The newer <tt>3.0 (quilt)</tt> source format stores patches in <file>debian/patches/*</file> files using the <prgn>quilt</prgn> command. These patches and other package data which are all constrained under the <file>debian</file> directory are packaged as the <file>debian.tar.gz</file> file. Since the <prgn>dpkg-source</prgn> command can handle <prgn>quilt</prgn> formatted patch data in the <tt>3.0 (quilt)</tt> source without the <package>quilt</package> package, it does not need to <tt>Build-Depends</tt> on the <package>quilt</package> package. <footnote><p>Several methods for the patch set maintenance have been proposed and are in use with Debian packages. The <prgn>quilt</prgn> system is the preferred maintenance system in use. Other ones are <prgn>dpatch</prgn>, <prgn>dbs</prgn>, <prgn>cdbs</prgn>, etc. Many of these keep such patches as <file>debian/patches/*</file> files.</p></footnote>"
msgstr "新しい<tt>3.0 (quilt)</tt>は、<prgn>quilt</prgn>コマンドを使って、パッチを<file>debian/patches/*</file>に置きます。<file>debian</file>ディレクトリ異化に拘束されているパッチや、その他のパッケージデータは、<file>debian.tar.gz</file>ファイルとしてパッケージングされます。<prgn>dpkg-source</prgn>コマンドは、<prgn>quilt</prgn>形式のパッチデータを<package>quilt</package>パッケージなしで<tt>3.0 (quilt)</tt>として扱えるので、<tt>Build-Depends</tt>には<package>quilt</package>パッケージは必要ありません。<footnote><p>パッチセットをメンテナンスするためのいくつかの方法が提案され、Debianパッケージで使われていますが、<prgn>quilt</prgn>が推奨されています。他には、<prgn>dpatch</prgn>、<prgn>dbs</prgn>、<prgn>cdbs</prgn>、などがあります。これらの方法は、大抵<file>debian/patches/*</file>ファイルでパッチを管理しています。</p></footnote>"

#. type: <p></p>
#: maint-guide.en.sgml:2533
msgid "The <prgn>quilt</prgn> command is explained in <manref section=\"1\" name=\"quilt\">. It records modifications to the source as a stack of <tt>-p1</tt> patch files in the <file>debian/patches</file> directory and the source tree is untouched outside of the <file>debian</file> directory. The order of these patches are recorded in the <file>debian/patches/series</file> file. You can apply (=push), un-apply (=pop), and refresh patches easily. <footnote><p>If you are asking a sponsor to upload your package, this kind of clear separation and documentation of your changes are very important to expedite the package review by your sponsor.</p></footnote>"
msgstr "<prgn>quilt</prgn>コマンドについては<manref section=\"1\" name=\"quilt\">で説明されています。ソースへの変更は、<file>debian/patches</file>ディレクトリ内<tt>-p1</tt>パッチファイルのスタックとして記録され、<file>debian</file>ディレクトリの外のソースツリーには触れません。それらのパッチの順番は<file>debian/patches/series</file>ファイルに記録されます。パッチの適用(push)も、外す(pop)のも、更新(refresh)も、簡単にできます。 <footnote><p>スポンサーにパッケージのアップロードを頼む時にも、あなたが加えた変更に対するこのような明確な分離とドキュメントは、スポンサーによるパッケージのレビューを促進させるためにも、非常に重要です。</p></footnote>"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2535
msgid "For <ref id=\"modify\">, we created 3 patches in <file>debian/patches</file>."
msgstr "<ref id=\"modify\">では、<file>debian/patches</file>に３つのパッチを作りました。"

#. type: <p></p>
#: maint-guide.en.sgml:2539
msgid "Since Debian patches are located in <file>debian/patches</file>, please make sure to setup the <prgn>quilt</prgn> command properly as described in <ref id=\"quiltrc\">."
msgstr "Debianのパッチは<file>debian/patches</file>にあるので、<ref id=\"quiltrc\">を参照し、<prgn>quilt</prgn>コマンドを正しく設定してください。"

#. type: <p><example>
#: maint-guide.en.sgml:2543
msgid "When someone (including yourself) provides you with a patch <file><var>foo</var>.patch</file> to the source later, then the modification of a <tt>3.0 (quilt)</tt> source package is quite simple:"
msgstr "誰かが(あなた自身も含みます)<file><var>foo</var>.patch</file>というパッチを後から提供した時、<tt>3.0 (quilt)</tt>ソースパッケージの変更はとてもシンプルです。"

#. type: <example></example>
#: maint-guide.en.sgml:2551
#, no-wrap
msgid ""
"$ dpkg-source -x gentoo_0.9.12.dsc\n"
"$ cd gentoo-0.9.12\n"
"$ quilt import ../<var>foo</var>.patch\n"
"$ quilt push\n"
"$ quilt refresh\n"
"$ quilt header -e\n"
"... describe patch"
msgstr ""
"$ dpkg-source -x gentoo_0.9.12.dsc\n"
"$ cd gentoo-0.9.12\n"
"$ quilt import ../<var>foo</var>.patch\n"
"$ quilt push\n"
"$ quilt refresh\n"
"$ quilt header -e\n"
"... describe patch"

#. type: <p></p>
#: maint-guide.en.sgml:2556
msgid "The patches stored in the newer <tt>3.0 (quilt)</tt> source format must be <em>fuzz</em> free. You should ensure it as \"<tt>quilt pop -a; while quilt push; do quilt refresh; done</tt>\"."
msgstr "新しい<tt>3.0 (quilt)</tt>形式で保存されるパッチは<em>曖昧</em>であってはいけません。それを保証するために、\"<tt>quilt pop -a; while quilt push; do quilt refresh; done</tt>\"としてください。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2558
msgid "Building the package"
msgstr "パッケージの構築"

#. type: <p></p>
#: maint-guide.en.sgml:2560
msgid "We should now be ready to build the package."
msgstr "これでパッケージを構築する準備が整いました。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2562
msgid "Complete (re)build"
msgstr "完全な（再）構築"

#. type: <p><list>
#: maint-guide.en.sgml:2564
msgid "In order to properly make complete (re)build of a package, you have to ensure to install"
msgstr "完全なパッケージの（再）構築を行うには、"

#. type: <p></p>
#: maint-guide.en.sgml:2566
msgid "the <package>build-essential</package> package,"
msgstr "<package>build-essential</package>パッケージ、"

#. type: <p></p>
#: maint-guide.en.sgml:2567
msgid "packages listed in the <tt>Build-Depends</tt> field (see <ref id=\"control\">), and"
msgstr "<tt>Build-Depends</tt>に挙げられているパッケージ(参照<ref id=\"control\">)"

#. type: <p></p>
#: maint-guide.en.sgml:2568
msgid "packages listed in the <tt>Build-Depends-indep</tt> field (see <ref id=\"control\">)."
msgstr "<tt>Build-Depends-indep</tt>に挙げられているパッケージ(参照 <ref id=\"control\">)が全てインストールされていなければなりません。"

#. type: <p><example>
#: maint-guide.en.sgml:2573
msgid "Then you issue the following command in the source directory:"
msgstr "ソースディレクトリーで以下のコマンドを実行してください:"

#. type: <example></example>
#: maint-guide.en.sgml:2575
#, no-wrap
msgid "$ dpkg-buildpackage"
msgstr "$ dpkg-buildpackage"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p><list>
#. type: <p><list>
#: maint-guide.en.sgml:2577
msgid "This will do everything to make full binary and source packages for you. It will:"
msgstr "このコマンドはバイナリパッケージとソースパッケージを構築する作業をすべて行ってくれます。これには以下の作業が含まれます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2579
#: maint-guide.en.sgml:2679
msgid "clean the source tree (\"<tt>debian/rules clean</tt>\")"
msgstr "ソースツリーの掃除 (\"<tt>debian/rules clean</tt>\")"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2580
msgid "build the source package (\"<tt>dpkg-source -b</tt>\")"
msgstr "ソースパッケージの構築 (\"<tt>dpkg-source -b</tt>\")"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2581
#: maint-guide.en.sgml:2680
msgid "build the program (\"<tt>debian/rules build</tt>\")"
msgstr "プログラムの構築 (\"<tt>debian/rules build</tt>\")"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <example></example>
#. type: <p></p>
#: maint-guide.en.sgml:2582
msgid "build binary packages (\"<tt>fakeroot debian/rules binary</tt>\")"
msgstr "バイナリパッケージの構築 (\"<tt>fakeroot debian/rules binary</tt>\")"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2583
#: maint-guide.en.sgml:2682
msgid "sign the source <file>.dsc</file> file, using <prgn>gpg</prgn>"
msgstr "<prgn>gpg</prgn> を使用したソース<file>.dsc</file>ファイルへの署名"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2585
#: maint-guide.en.sgml:2684
msgid "create and sign the upload <file>.changes</file> file, using <prgn>dpkg-genchanges</prgn> and <prgn>gpg</prgn>"
msgstr "<prgn>dpkg-genchanges</prgn>および<prgn>gpg</prgn>を使用したアップロード用<file>.changes</file>ファイルの生成と署名"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2590
msgid "The only input that will be required of you is your GPG secret pass phrase, twice."
msgstr "途中で GPG の秘密鍵を 2 回入力する必要がありますが、 それ以外はこのプログラムにすべて任せておけば大丈夫です。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2593
msgid "After all this is done, you will see the following files in the directory above (<file>~/gentoo</file>):"
msgstr "一連の作業が終わった後、上記ディレクトリ(<file>~/gentoo</file>)には以下のファイルが生成されているはずです。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2596
msgid "<file>gentoo_0.9.12.orig.tar.gz</file>"
msgstr "<file>gentoo_0.9.12.orig.tar.gz</file>"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2600
msgid "This is the original source code tarball, merely renamed to the above so that it adheres to the Debian standard. Note that this was created initially by the \"<tt>dh_make -f ../gentoo-0.9.12.tar.gz</tt>\"."
msgstr "これは単に Debian 標準に合わせるために名前を変更しただけで、 中身はオリジナルなソースコードの tar アーカイブです。これはもともと、\"<tt>dh_make -f ../gentoo-0.9.12.tar.gz</tt>\"で作成されたということを覚えておいてください。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2602
msgid "<file>gentoo_0.9.12-1.dsc</file>"
msgstr "<file>gentoo_0.9.12-1.dsc</file>"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2607
msgid "This is a summary of the contents of the source code. The file is generated from your <file>control</file> file, and is used when unpacking the source with <manref section=\"1\" name=\"dpkg-source\">. This file is GPG signed, so that people can be sure that it's really yours."
msgstr "これはソースコードの内容の概要です。このファイルは あなたの<file>control</file>ファイルから生成され、<manref section=\"1\" name=\"dpkg-source\">によって ソースを展開する時に使われます。また、GPG で署名されているので、本当にあなた自身が作成したものかどうかを利用者が検証できます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2609
msgid "<file>gentoo_0.9.12-1.debian.tar.gz</file>"
msgstr "<file>gentoo_0.9.12-1.debian.tar.gz</file>"

#. type: <p></p>
#: maint-guide.en.sgml:2613
msgid "This compressed tarball contains your <file>debian</file> directory contents. Each and every addition you made to the original source code are stored as <prgn>quilt</prgn> patches in <file>debian/patches</file>."
msgstr "この圧縮されたターボールには、あなたの<file>debian</file>ディレクトリーの中身が含まれています。オリジナルのソースコードに行った変更や追加などの情報は全て<file>debian/patches</file>内に、<prgn>quilt</prgn>パッチとして保存されます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2622
msgid "If someone else wants to re-create your package from scratch, they can easily do so using the above three files. The extraction procedure is trivial: just copy the three files somewhere else and run \"<tt>dpkg-source -x gentoo_0.9.12-1.dsc</tt>\". <footnote><p>You can avoid applying <prgn>quilt</prgn> patches in the <tt>3.0 (quilt)</tt> source format at the end of the extraction with the <tt>--skip-patches</tt> option. Alternatively, you can run \"<tt>quilt pop -a</tt>\" after normal operation.</p></footnote>"
msgstr "上記３つのファイルを使えば誰でも簡単にあなたのパッケージをスクラッチから構築することができます。３つのファイルを任意の場所にコピーし、\"<tt>dpkg-source -x gentoo_0.9.12-1.dsc</tt>\"を実行するだけです。<footnote><tt>3.0 (quilt)</tt>ソースフォーマットで<p><prgn>quilt</prgn>パッチを当てないようにするには、上記コマンドに<tt>--skip-patches</tt>オプションをつけて実行します。または、通常の工程の後に、\"<tt>quilt pop -a</tt>\"を実行する方法もあります。</p></footnote>"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2624
msgid "<file>gentoo_0.9.12-1_i386.deb</file>"
msgstr "<file>gentoo_0.9.12-1_i386.deb</file>"

#. type: <p></p>
#: maint-guide.en.sgml:2627
msgid "This is your completed binary package. You can use <prgn>dpkg</prgn> to install and remove this just like any other package."
msgstr "これは、あなたが生成した完全なバイナリパッケージです。他の全てのパッケージと同じく、<prgn>dpkg</prgn>を使ってインストールしたり削除したりできます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2629
msgid "<file>gentoo_0.9.12-1_i386.changes</file>"
msgstr "<file>gentoo_0.9.12-1_i386.changes</file>"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2635
msgid "This file describes all the changes made in the current package revision, and it is used by the Debian FTP archive maintenance programs to install the binary and source packages in it. It is partly generated from the <file>changelog</file> file and the <file>.dsc</file> file. This file is GPG signed, so that people can be sure that it's really yours."
msgstr "このファイルは現在のリビジョンパッケージにおける変更点をすべて記載したもので、Debian FTP アーカイブ管理プログラムによって、バイナリおよびソースパッケージをFTPアーカイブにインストールするために利用されます。このファイルの一部は、<file>changelog</file>ファイルと<file>.dsc</file>をもとに生成されます。また、GPG で署名されているので、本当にあなた自身が作成したものかどうかを利用者が検証できます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2641
msgid "As you keep working on the package, behavior will change and new features will be added. People downloading your package can look at this file and quickly see what has changed. Debian archive maintenance programs will also post the contents of this file to the <url id=\"http://lists.debian.org/debian-devel-announce/\" name=\"debian-devel-announce@lists.debian.org\"> mailing list."
msgstr "パッケージの保守管理を続けていくと、挙動の変更や新機能の追加をすることがあります。あなたのパッケージをダウンロードする人は、このファイルを見れば何が変わったのか、一目でわかります。また、このファイルの中身はDebian アーカイブ管理プログラムによって、<url id=\"http://lists.debian.org/debian-devel-announce/\" name=\"debian-devel-announce@lists.debian.org\">メーリングリストへ流されます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2650
msgid "The long strings of numbers in the <file>.dsc</file> and <file>.changes</file> files are MD5/SHA1/SHA256 checksums for the files mentioned. A person downloading your files can test them with <manref section=\"1\" name=\"md5sum\">, <manref section=\"1\" name=\"sha1sum\">, or <manref section=\"1\" name=\"sha256sum\"> and if the numbers don't match, they'll know the file is corrupt or has been tampered with."
msgstr "<file>.dsc</file> と <file>.changes</file> ファイルに記載されている長い数字の羅列は各ファイルの MD5/SHA1/SHA256 チェックサムです。パッケージをダウンロードした人は、<manref section=\"1\" name=\"md5sum\">、 <manref section=\"1\" name=\"sha1sum\">、<manref section=\"1\" name=\"sha256sum\">を使って整合性をテストすることができます。もし、数字が一致しない場合には、ファイルが壊れているか、あるいは何者かによって改ざんされていると分かるわけです。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2652
msgid "Autobuilder"
msgstr "Autobuilder"

#. type: <p></p>
#: maint-guide.en.sgml:2662
msgid "Debian supports many <url id=\"http://www.debian.org/ports/\" name=\"ports\"> with the <url id=\"http://www.debian.org/devel/buildd/\" name=\"autobuilder network\"> running <prgn>buildd</prgn> daemons on many different architecture computers. Although you do not need to do this by yourself, you should be aware of what will happen on your packages. Let's look into roughly how your packages are rebuild for many different architectures by them. <footnote><p>The actual autobuilder system involves much more complicated schemes than the one documented here. Such details are beyond the scope of this document.</p></footnote>"
msgstr "Debian は、様々なアーキテクチャ上で<prgn>buildd</prgn>デーモンを走らせている<url id=\"http://www.debian.org/devel/buildd/\" name=\"autobuilder network\">によって、色々な<url id=\"http://www.debian.org/ports/\" name=\"ports\">をサポートしています。あなたがそれらを明示的に使う必要はありませんが、パッケージがどうなるのかを知っておくと良いでしょう。それでは、あなたのパッケージがどのように異なるアーキテクチャ向けに再構築されるのかを見ていきましょう。<footnote><p>実際の autobuilder システムは、本稿の説明よりもかなり複雑なスキームによって実現しています。それらの詳細は、本稿の範囲を超えるため割愛します。</p></footnote>"

#. type: <p><list>
#: maint-guide.en.sgml:2664
msgid "For \"<tt>Architecture: any</tt>\" packages, the autobuilder system rebuild them. It ensures to install"
msgstr "\"<tt>Architecture: any</tt>\"のパッケージは、atuobuilder システムによって再構築されます。それは、"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2666
msgid "the <package>build-essential</package> package, and"
msgstr "<package>build-essential</package>パッケージと"

#. type: <p></p>
#: maint-guide.en.sgml:2667
msgid "packages listed in the <tt>Build-Depends</tt> field (see <ref id=\"control\">)."
msgstr "<tt>Build-Depends</tt>に挙げられているパッケージ (参照 <ref id=\"control\">)を確実にインストールします。"

#. type: <p><example>
#: maint-guide.en.sgml:2672
msgid "Then it issues the following command in the source directory:"
msgstr "そして、ソースディレクトリで次のコマンドを実行します:"

#. type: <example></example>
#: maint-guide.en.sgml:2674
#, no-wrap
msgid "$ dpkg-buildpackage -B"
msgstr "$ dpkg-buildpackage -B"

#. type: <p><list>
#: maint-guide.en.sgml:2677
msgid "This will do everything to make architecture dependent binary packages on another architecture. It will:"
msgstr "これは、別のアーキテクチャ上で、アーキテクチャ依存のバイナリパッケージを生成する作業をすべて行ってくれます。これには以下の作業が含まれます。"

#. type: <p></p>
#: maint-guide.en.sgml:2681
msgid "build architecture dependent binary packages (\"<tt>fakeroot debian/rules binary-arch</tt>\")"
msgstr "アーキテクチャ依存のバイナリパッケージを構築(\"<tt>fakeroot debian/rules binary-arch</tt>\")"

#. type: <p></p>
#: maint-guide.en.sgml:2688
msgid "This is why you see your package for other architectures."
msgstr "あなたのパッケージが他のアーキテクチャ用にも存在するのは、このためです。"

#. type: <p></p>
#: maint-guide.en.sgml:2702
msgid "Although packages listed in the <tt>Build-Depends-indep</tt> field are required to be installed for the normal packaging by us (see <ref id=\"completebuild\">), they are not required to be installed for the autobuilder system since it build only architecture dependent binary packages. <footnote><p>Unlike under the <package>pbuilder</package> package, the <prgn>chroot</prgn> environment under the <package>sbuild</package> package used by the autobuilder system does not force the minimal system and may leave many packages installed.</p></footnote> This difference between normal packaging and autobuilder situation dictates whether you record such required packages in the <tt>Build-Depends</tt> or <tt>Build-Depends-indep</tt> fields of the <file>debian/control</file> file (see <ref id=\"control\">)."
msgstr "<tt>Build-Depends-indep</tt>フィールドのパッケージは、通常のパッケージの場合はインストールを要求されますが(参照 <ref id=\"completebuild\">)、autobuilderシステムは、アーキテクチャ依存のパッケージのみをビルドするので、インストールは必須ではありません。<footnote><p><package>pbuilder</package>パッケージとは違い、オートビルダーによって使用される<package>sbuild</package>パッケージ下での<prgn>chroot</prgn>環境では、最小構成を強制しないので、多くのパッケージがインストールされたままになるかもしれません。</p></footnote> オートビルダーを使用した場合と普通のパッケージングとのこの違いは、要求パッケージを <file>debian/control</file>ファイルの<tt>Build-Depends</tt> や <tt>Build-Depends-indep</tt>に記録するかどうかで決定されます。(参照 <ref id=\"control\">)"

#. type: <heading></heading>
#: maint-guide.en.sgml:2704
msgid "Including <file>orig.tar.gz</file> for upload"
msgstr "アップロード用<file>orig.tar.gz</file>の内容"

#. type: <p></p>
#: maint-guide.en.sgml:2712
msgid "When you first upload the package to the archive, you need to include the original <file>orig.tar.gz</file> source. If the last changelog entry is not the first one for the given upstream version, you must provide <prgn>dpkg-buildpackage</prgn> command with the \"<tt>-sa</tt>\" option. On the other hand, the \"<tt>-sd</tt>\" option will force to exclude the original <file>orig.tar.gz</file> source."
msgstr "はじめてパッケージをアーカイブにアップロードする際は、オリジナルの<file>orig.tar.gz</file>ソースファイルを含めなければなりません。最新のchangelogエントリーが、最初に上流から投げられたものと違う場合は、<prgn>dpkg-buildpackage</prgn>に\"<tt>-sa</tt>\"オプションを付けて提供しなければなりません。逆に、\"<tt>-sd</tt>\"オプションを付けると、オリジナルの<file>orig.tar.gz</file> ソースファイルを強制的に除外します。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <heading></heading>
#. type: <heading></heading>
#: maint-guide.en.sgml:2714
msgid "<prgn>debuild</prgn> command"
msgstr "<prgn>debuild</prgn>コマンド"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2719
msgid "You can automate package build process of the <prgn>dpkg-buildpackage</prgn> command further with the <prgn>debuild</prgn> command. See <manref section=\"1\" name=\"debuild\">."
msgstr "<prgn>dpkg-buildpackage</prgn>による自動構築プロセスは、<prgn>debuild</prgn>によりさらに進めることができます。詳しくは<manref section=\"1\" name=\"debuild\">を参照してください。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:2724
msgid "Customization of the <prgn>debuild</prgn> command can be done through <file>/etc/devscripts.conf</file> or <file>~/.devscripts</file>. I would suggest at least following items:"
msgstr "<prgn>debuild</prgn>コマンドのカスタマイズは<file>/etc/devscripts.conf</file>や<file>~/.devscripts</file>を用いて行います。少なくとも以下の設定をすると良いでしょう。"

#. type: <example></example>
#: maint-guide.en.sgml:2728
#, no-wrap
msgid ""
"DEBSIGN_KEYID=\"Your_GPG_keyID\"\n"
"DEBUILD_LINTIAN=yes\n"
"DEBUILD_LINTIAN_OPTS=\"-i -I --show-overrides\""
msgstr ""
"DEBSIGN_KEYID=\"Your_GPG_keyID\"\n"
"DEBUILD_LINTIAN=yes\n"
"DEBUILD_LINTIAN_OPTS=\"-i -I --show-overrides\""

#. type: </example></p>
#: maint-guide.en.sgml:2732
msgid "With these, packages are signed by your specified GPG key ID (good for sponsoring packages) and checked by the <prgn>lintian</prgn> command in details."
msgstr "これによって、パッケージは常にあなたのGPG鍵でサインされ、<prgn>lintian</prgn>コマンドで詳細にチェックされます。（これはスポンサーの作業にも適しています。）"

#. type: <p><example>
#: maint-guide.en.sgml:2735
msgid "Cleaning source and rebuilding package from a user account is as simple as:"
msgstr "以下のように一般ユーザアカウントから、簡単にソースを除去しパッケージを再ビルドできます。"

#. type: <example></example>
#: maint-guide.en.sgml:2737
#, no-wrap
msgid "$ debuild"
msgstr "$ debuild"

#. type: <p><example>
#: maint-guide.en.sgml:2741
#: maint-guide.en.sgml:2797
#: maint-guide.en.sgml:2815
msgid "Please note that the <prgn>dpkg-buildpackage</prgn> option \"<tt>-sa</tt>\" to include the original <file>orig.tar.gz</file> source can be specified as:"
msgstr "<prgn>dpkg-buildpackage</prgn>に\"<tt>-sa</tt>\"オプションを付けてオリジナルの<file>orig.tar.gz</file>ソースファイルを含める方法も覚えておきましょう。"

#. type: <example></example>
#: maint-guide.en.sgml:2743
#, no-wrap
msgid "$ debuild -sa"
msgstr "$ debuild -sa"

#. type: <p><example>
#: maint-guide.en.sgml:2746
msgid "You can clean source tree as simple as:"
msgstr "ソースツリーの掃除も簡単です。"

#. type: <example></example>
#: maint-guide.en.sgml:2748
#, no-wrap
msgid "$ debuild clean"
msgstr "$ debuild clean"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <heading></heading>
#: maint-guide.en.sgml:2750
msgid "<package>pbuilder</package> package"
msgstr "<package>pbuilder</package>パッケージ"

#. type: <p></p>
#: maint-guide.en.sgml:2762
msgid "For a clean room (<prgn>chroot</prgn>) build environment to verify the build dependencies, the <package>pbuilder</package> package is very useful. <footnote><p>Since the <package>pbuilder</package> package is still evolving, you have to check the actual configuration situation by consulting the latest official documentation.</p></footnote> This ensures a clean build from the source under the <tt>sid</tt> auto-builder for different architectures and avoids the severity serious FTBFS (Fails To Build From Source) bug which is always in the RC (release critical) category. See <url id=\"&buildd-home;\"> for more on the Debian package auto-builder."
msgstr "ビルド依存を確認するための無菌室 (<prgn>chroot</prgn>)なビルド環境では<package>pbuilder</package>パッケージが非常に便利です。<footnote><p><package>pbuilder</package>パッケージはまだ進化の過程なので、実際の構成は、公式ドキュメントで確認して下さい。</p></footnote> これにより、異なるアーキテクチャ向けのオートビルダーの下において、<tt>sid</tt>環境での、ソースからのクリーンなビルドが保証されます。また、深刻なFTBFS(Fails To Build From Source)バグを防ぎます。FTBFS バグは常に RC (release critical) に分類されます。Debianパッケージのオートビルダーについてもっと知りたい場合は<url id=\"&buildd-home;\">を参照してください。 "

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><list>
#: maint-guide.en.sgml:2763
msgid "Let's customize the <package>pbuilder</package> package by the following."
msgstr "それでは、<package>pbuilder</package>をカスタマイズしてみましょう。"

#. type: <p></p>
#: maint-guide.en.sgml:2766
msgid "setting <file>/var/cache/pbuilder/result</file> directory writable by the user."
msgstr "<file>/var/cache/pbuilder/result</file>ディレクトリを、ユーザーから書き込めるように設定してください。"

#. type: <p></p>
#: maint-guide.en.sgml:2768
msgid "creating a directory, e.g. <file><var>/var/cache/pbuilder/hooks</var></file>, writable by the user to place hook scripts."
msgstr "フックスクリプトを置くために、ユーザーからの書き込みが可能なディレクトリを作成してください。例） <file><var>/var/cache/pbuilder/hooks</var></file>"

#. type: <p><example>
#: maint-guide.en.sgml:2770
msgid "setting <file>~/.pbuilderrc</file> or <file>/etc/pbuilderrc</file> to include as follows."
msgstr "<file>~/.pbuilderrc</file> か <file>/etc/pbuilderrc</file> に以下のように設定します。"

#. type: <example></example>
#: maint-guide.en.sgml:2773
#, no-wrap
msgid ""
"AUTO_DEBSIGN=yes\n"
"HOOKDIR=\"<var>/var/cache/pbuilder/hooks</var>\""
msgstr ""
"AUTO_DEBSIGN=yes\n"
"HOOKDIR=\"<var>/var/cache/pbuilder/hooks</var>\""

#. type: <p></p>
#: maint-guide.en.sgml:2779
msgid "This will allow you to sign generated packages with your secret GPG key in the <file>~/.gnupg/</file> directory."
msgstr "これにより、<file>~/.gnupg/</file>ディレクトリにある、あなたのGPGキーで生成されたパッケージへの署名を許可します。"

#. type: <p><example>
#: maint-guide.en.sgml:2781
msgid "Let's then initialize the local <package>pbuilder</package> <prgn>chroot</prgn> system first as follows."
msgstr "それでは、初めてのローカル<package>pbuilder</package> <prgn>chroot</prgn> システムを初期化しましょう。"

#. type: <example></example>
#: maint-guide.en.sgml:2783
#, no-wrap
msgid "$ sudo pbuilder create"
msgstr "$ sudo pbuilder create"

#. type: <p><example>
#: maint-guide.en.sgml:2790
msgid "If you already have the completed source packages, issue the following commands in the directory where the <file><var>foo</var>.orig.tar.gz</file>, <file><var>foo</var>.debian.tar.gz</file>, and <file><var>foo</var>.dsc</file> files exist to update the local <package>pbuilder</package> <prgn>chroot</prgn> system and to build binary packages in it."
msgstr "既に完全なソースパッケージがあれば、<file><var>foo</var>.orig.tar.gz</file>ファイル、 <file><var>foo</var>.debian.tar.gz</file>ファイル、<file><var>foo</var>.dsc</file>ファイルが存在するディレクトリで、ローカル<package>pbuilder</package> <prgn>chroot</prgn>システムをアップデートし、バイナリパッケージをビルドする為に以下のコマンドを発行しましょう。"

#. type: <example></example>
#: maint-guide.en.sgml:2793
#, no-wrap
msgid ""
"$ sudo pbuilder --update\n"
"$ sudo pbuilder --build <var>foo</var>.dsc"
msgstr ""
"$ sudo pbuilder --update\n"
"$ sudo pbuilder --build <var>foo</var>.dsc"

#. type: <example></example>
#: maint-guide.en.sgml:2799
#, no-wrap
msgid "$ sudo pbuilder --build --debbuildopts \"-sa\" <var>foo</var>.dsc"
msgstr "$ sudo pbuilder --build --debbuildopts \"-sa\" <var>foo</var>.dsc"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: </example></p>
#. type: <p></p>
#: maint-guide.en.sgml:2805
msgid "The newly built packages will be located in <file>/var/cache/pbuilder/result/</file> with non-root ownership."
msgstr "新しくビルドしたパッケージは非ルート所有者として<file>/var/cache/pbuilder/result/</file>に置かれます。"

#. type: <p><example>
#: maint-guide.en.sgml:2808
msgid "If you already have the updated source tree without generating the matching source packages, issue the following commands in the source directory where the <file>debian</file> directory exists, instead."
msgstr "更新されたソースツリーが既にあり、一致するソースパッケージを生成していない場合は、代わりに、<file>debian</file> ディレクトリが存在するディレクトリで、以下のコマンドを発行します。"

#. type: <example></example>
#: maint-guide.en.sgml:2811
#, no-wrap
msgid ""
"$ sudo pbuilder --update\n"
"$ pdebuild"
msgstr ""
"$ sudo pbuilder --update\n"
"$ pdebuild"

#. type: <example></example>
#: maint-guide.en.sgml:2817
#, no-wrap
msgid "$ pdebuild --debbuildopts \"-sa\""
msgstr "$ pdebuild --debbuildopts \"-sa\""

#. type: <p></p>
#: maint-guide.en.sgml:2824
msgid "You can log into its <prgn>chroot</prgn> environment with the \"<tt>pbuilder --login --save-after-login</tt>\" command and configure it as you wish. This environment can be saved by leaving its shell prompt with <tt>^D</tt> (Control-D)."
msgstr "\"<tt>pbuilder --login --save-after-login</tt>\"コマンドで、<prgn>chroot</prgn>環境にログインし、好きに設定することができます。シェルプロンプトから<tt>^D</tt> (Control-D)で抜けると、その環境を保存しておくことができます。"

#. type: <p><example>
#: maint-guide.en.sgml:2829
msgid "The latest version of the <prgn>lintian</prgn> command can be executed in the <tt>chroot</tt> environment using the hook script <file><var>/var/cache/pbuilder/hooks</var>/B90lintian</file> configured as follows. <footnote><p>This assumes <tt>HOOKDIR=\"/var/cache/pbuilder/hooks\"</tt>. You can find many examples of the hook script in the <file>/usr/share/doc/pbuilder/examples</file> directory.</p></footnote>"
msgstr "最新の<prgn>lintian</prgn>コマンドは<tt>chroot</tt>環境から次のように設定されたフックスクリプト<file><var>/var/cache/pbuilder/hooks</var>/B90lintian</file>を使用して実行することができます。<footnote><p><tt>HOOKDIR=\"/var/cache/pbuilder/hooks\"</tt>に設定した場合。フックスクリプトのサンプルは<file>/usr/share/doc/pbuilder/examples</file> ディレクトリににあります。</p></footnote>"

#. type: <example></example>
#: maint-guide.en.sgml:2841
#, no-wrap
msgid ""
"#!/bin/sh\n"
"set -e\n"
"install_packages() {\n"
"    apt-get -y --force-yes install \"$@\"\n"
"    }\n"
"install_packages lintian\n"
"echo \"+++ lintian output +++\"\n"
"su -c \"lintian -i -I --show-overrides /tmp/buildd/*.changes\" - pbuilder\n"
"# use this version if you don't want lintian to fail the build\n"
"#su -c \"lintian -i -I --show-overrides /tmp/buildd/*.changes; :\" - pbuilder\n"
"echo \"+++ end of lintian output +++\""
msgstr ""
"#!/bin/sh\n"
"set -e\n"
"install_packages() {\n"
"    apt-get -y --force-yes install \"$@\"\n"
"    }\n"
"install_packages lintian\n"
"echo \"+++ lintian output +++\"\n"
"su -c \"lintian -i -I --show-overrides /tmp/buildd/*.changes\" - pbuilder\n"
"# use this version if you don't want lintian to fail the build\n"
"#su -c \"lintian -i -I --show-overrides /tmp/buildd/*.changes; :\" - pbuilder\n"
"echo \"+++ end of lintian output +++\""

#. type: <p></p>
#: maint-guide.en.sgml:2848
msgid "You need to have access to the latest <tt>sid</tt> environment to build packages properly for <tt>sid</tt>. In reality, <tt>sid</tt> may be experiencing issues which makes it not desirable for you to migrate your whole system. The <package>pbuilder</package> package can help you to cope with this kind of situation."
msgstr "<tt>sid</tt>環境向けのパッケージを正しくビルドするには最新の<tt>sid</tt>環境が必要です。<tt>sid</tt>には環境を移行するには望ましくない問題を抱えていることが少なくありません。<package>pbuilder</package>パッケージはそのような状況に対処できるようになっています。"

#. type: <p></p>
#: maint-guide.en.sgml:2858
msgid "You may need to update your <tt>stable</tt> packages after their release for <tt>stable-proposed-updates</tt>, <tt>stable/updates</tt>, etc. <footnote><p>There are some restrictions for such updates of your <tt>stable</tt> package.</p></footnote> For such occasions, \"I am running <tt>sid</tt> system\" is not good enough excuse not to update them promptly. The <package>pbuilder</package> package can help you to access environments of almost any Debian derivative distributions of the same CPU architecture."
msgstr "<tt>stable/updates</tt>や<tt>stable-proposed-updates</tt>がリリースされた後、<tt>stable</tt>パッケージのアップデートが必要な場合があります。<footnote><p><tt>stable</tt> パッケージのそのようなアップデートには制限が課せられます。</p></footnote>そのような場合に、 即座にアップデートしない言い訳として\"<tt>sid</tt> を使っているから\" というのは不十分です。<package>pbuilder</package>パッケージは、同じCPUアーキテクチャのほぼ全てのDebian派生であるディストリビューションへのアクセスを手助けします。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2863
msgid "See <url id=\"&pbuilder-home;\">, <manref section=\"1\" name=\"pdebuild\">, <manref section=\"5\" name=\"pbuilderrc\">, and <manref section=\"8\" name=\"pbuilder\">."
msgstr "詳しくは、<url id=\"&pbuilder-home;\">、<manref section=\"1\" name=\"pdebuild\">、<manref section=\"5\" name=\"pbuilderrc\">、<manref section=\"8\" name=\"pbuilder\">を参照してください。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <heading></heading>
#. type: <heading></heading>
#: maint-guide.en.sgml:2865
msgid "<prgn>git-buildpackage</prgn> command and similars"
msgstr "<prgn>git-buildpackage</prgn>コマンドとその仲間"

#. type: <p><list>
#: maint-guide.en.sgml:2871
msgid "If your upstream uses the source code management system (<url id=\"http://www.debian.org/doc/manuals/debian-reference/ch10.en.html#_version_control_systems\" name=\"VCS\">) to maintain their code, you should consider to use them. That makes merging and cherry-picking upstream patches much easier. There are several specialized wrapper script packages for the Debian package building for each VCS."
msgstr "上流がソースコード管理システム(<url id=\"http://www.debian.org/doc/manuals/debian-reference/ch10.en.html#_version_control_systems\" name=\"VCS\">)を使っているのであれば、同様に使用することを考えるべきです。それによって、マージと上流パッチの取捨選択がより簡単になります。DebianパッケージをVCS用にビルドするための特別なラッパースクリプトのパッケージもいくつかあります。"

#. type: <p></p>
#: maint-guide.en.sgml:2873
msgid "<package>git-buildpackage</package>: Suite to help with Debian packages in Git repositories."
msgstr "<package>git-buildpackage</package>: Gitリポジトリ内でのDebianパッケージを支援するパッケージソフトです。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2874
msgid "<package>topgit</package>: a Git patch queue manager"
msgstr "<package>topgit</package>:キューマネージャーのGitパッチです。"

#. type: <p></p>
#: maint-guide.en.sgml:2875
msgid "<package>svn-buildpackage</package>: helper programs to maintain Debian packages with Subversion."
msgstr "<package>svn-buildpackage</package>:DebianパッケージSubversionで管理するための支援プログラムです。"

#. type: <p></p>
#: maint-guide.en.sgml:2876
msgid "<package>cvs-buildpackage</package>: A set of Debian package scripts for CVS source trees."
msgstr "<package>cvs-buildpackage</package>: CVSソースツリーのためのスクリプト群をDebianパッケージにしたものです。"

#. type: <p></p>
#: maint-guide.en.sgml:2891
msgid "These packages offer more elegant working environment than manual use of the <prgn>quilt</prgn> commands for advanced audiences to <em>automate</em> building of packages. I will not explain them in this tutorial. <footnote><p>Here are few web resources available for advanced audiences. <list><item><p>\"Building Debian Packages with git-buildpackage\" at <file>/usr/share/doc/git-buildpackage/manual-html/gbp.html</file></p></item><item><p>\"<url id=\"https://honk.sigxcpu.org/piki/development/debian_packages_in_git/\" name=\"debian packages in git\">\"</p></item><item><p>\"<url id=\"http://www.eyrie.org/~eagle/notes/debian/git.html\" name=\"Using Git for Debian Packaging\">\"</p></item><item><p>\"<url id=\"http://git.debian.org/?p=collab-maint/topgit.git;a=blob_plain;f=debian/HOWTO-tg2quilt;hb=HEAD\" name=\"Using TopGit to generate quilt series for Debian packaging\">\"</p></item><item><p>\"<url id=\"http://git-dpm.alioth.debian.org/\" name=\"git-dpm: Debian packages in Git manager\">\"</p></item></list></p></footnote>"
msgstr "これらのパッケージはパッケージのビルドを<em>自動化</em>したい上級者に<prgn>quilt</prgn>コマンドを使うよりも洗練された作業環境を提供します。このチュートリアルでは細かい説明はしません。<footnote><p>上級者のみなさんのためになるウェブ上で閲覧できる資料です。<list><item><p>\"Building Debian Packages with git-buildpackage\" at <file>/usr/share/doc/git-buildpackage/manual-html/gbp.html</file></p></item><item><p>\"<url id=\"https://honk.sigxcpu.org/piki/development/debian_packages_in_git/\" name=\"debian packages in git\">\"</p></item><item><p>\"<url id=\"http://www.eyrie.org/~eagle/notes/debian/git.html\" name=\"Using Git for Debian Packaging\">\"</p></item><item><p>\"<url id=\"http://git.debian.org/?p=collab-maint/topgit.git;a=blob_plain;f=debian/HOWTO-tg2quilt;hb=HEAD\" name=\"Using TopGit to generate quilt series for Debian packaging\">\"</p></item><item><p>\"<url id=\"http://git-dpm.alioth.debian.org/\" name=\"git-dpm: Debian packages in Git manager\">\"</p></item></list></p></footnote>"

#. type: <heading></heading>
#: maint-guide.en.sgml:2893
msgid "Quick rebuild"
msgstr "部分的な再構築"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p><example>
#: maint-guide.en.sgml:2902
msgid "With a large package, you may not want to rebuild from scratch every time while you tune details in <file>debian/rules</file>. For testing purposes, you can make a <file>.deb</file> file without rebuilding the upstream sources like this <footnote><p>Environment variables which are normally configured to proper values are not set by this method. Never create real packages to be uploaded using this <strong>quick</strong> method.</p></footnote>:"
msgstr "大規模なパッケージの場合には、<file>debian/rules</file>をちょっといじるたびに、毎回最初からパッケージの再構築をやりなおすのは手間です。テスト目的であれば、以下の方法で上流（upstream）ソースを再構築をせずに<file>.deb</file> ファイルを生成することができます。 <footnote><p>その場合は、通常だと正しく設定される環境変数は設定されません。アップロード用のパッケージはこの<strong>簡易</strong>メソッドで生成しないでください。</p></footnote>:"

#. type: <example></example>
#: maint-guide.en.sgml:2904
#, no-wrap
msgid "$ fakeroot debian/rules binary"
msgstr "$ fakeroot debian/rules binary"

#. type: </example><example>
#: maint-guide.en.sgml:2908
msgid "Or, simply as following to see if it build or not."
msgstr "また、以下の方法を使えば生成可能かどうかをチェックすることができます。"

#. type: <example></example>
#: maint-guide.en.sgml:2910
#, no-wrap
msgid "$ fakeroot debian/rules build"
msgstr "$ fakeroot debian/rules build"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:2916
msgid "Once you are finished with your tuning, remember to rebuild following the proper procedure. You may not be able to upload correctly if you try to upload <file>.deb</file> files built this way."
msgstr "最終的にきちんとテストが完了したら、正しい手順に従ってパッケージを最初から再構築することを忘れないでください。おそらく、きちんとアップロードできないでしょう。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2918
msgid "Checking the package for errors"
msgstr "パッケージの誤りチェック"

#. type: <p></p>
#: maint-guide.en.sgml:2921
msgid "There are few chores you should know to check the package for errors by yourself before uploading packages to public archives."
msgstr "パッケージを公共のアーカイブにアップロードする前にパッケージに間違いが無いかを自分自身で確認するために知っておくべきいくつかの雑用があります。"

#. type: <p></p>
#: maint-guide.en.sgml:2924
msgid "Testing on machine other than your own is also good idea. You must watch closely for any warnings or errors for all the test described here."
msgstr "自分自身のマシン以外でテストするのが賢明です。ここに書かれたすべてのテストでの警告やエラーに関して細心の注意を払わなければいけません。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2926
msgid "Verifying package for install"
msgstr "パッケージインストールの検証"

#. type: <p><example>
#: maint-guide.en.sgml:2931
msgid "You must test your package if it installs without problem. The <manref section=\"1\" name=\"debi\"> command helps you to test to install all the generated binary packages."
msgstr "問題なくインストール出きるかどうかテストするべきです。<manref section=\"1\" name=\"debi\"> コマンドはすべての生成されたバイナリパッケージをインストールするテストをするのに有効です。"

#. type: <example></example>
#: maint-guide.en.sgml:2933
#, no-wrap
msgid "$ sudo debi gentoo_0.9.12-1_i386.changes"
msgstr "$ sudo debi gentoo_0.9.12-1_i386.changes"

#. type: <p></p>
#: maint-guide.en.sgml:2944
msgid "You have to make sure that there are no overlapped files with other existing packages using the <file>Contents-<var>i386</var></file> file downloaded from the Debian archive to prevent installation problem on different systems. The <prgn>apt-file</prgn> command may be handy for this task. If there are overlapped files, please take actions to avoid the real problem using the alternatives mechanism (see <manref section=\"1\" name=\"update-alternatives\">) by coordinating with other affected packages or by setting the \"<tt>Conflicts</tt>\" entry in the <file>debian/control</file> file."
msgstr "他システム上でのインストール問題を未然に防ぐために Debian アーカイブからダウンロードした <file>Contents-<var>i386</var></file> ファイルを使って他の現存パッケージとオーバーラップしたファイルが無いことを確認しなければいけません。<prgn>apt-file</prgn> コマンドはこの作業をするのに便利かもしれません。オーバーラップするファイルがある際には 他の影響を受けるパッケージと共同して alternatives (代用)メカニズム(<manref section=\"1\" name=\"update-alternatives\">参照)を使って実際問題が発生しないようにしたり、 \"<tt>Conflicts</tt>\" 項目を <file>debian/control</file> ファイル中に設定に設定したり問題回避しましょう。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2946
msgid "Verifying package for <em>maintainer scripts</em>"
msgstr "パッケージの<em>メンテナスクリプト</em>に関する確認"

#. type: <p></p>
#: maint-guide.en.sgml:2952
msgid "All <em>maintainer scripts</em>, i.e., <file>preinst</file>, <file>prerm</file>, <file>postinst</file>, and <file>postrm</file> files, are non-trivial unless they are auto-generated by the <package>debhelper</package> programs. So do not use them if you are a novice maintainer (see <ref id=\"maintscripts\">)."
msgstr "<file>preinst</file> や <file>prerm</file> や <file>postinst</file>や <file>postrm</file> ファイルという、全ての<em>メンテナスクリプト</em>は、<package>debhelper</package> プログラムによって自動生成されたものでも無い限り簡単ではありません。新米メンテナならこれらを使うのは止めましょう (<ref id=\"maintscripts\">参照)。"

#. type: <p><example>
#: maint-guide.en.sgml:2958
msgid "If the package makes use of these non-trivial <em>maintainer scripts</em>, be sure to test not only for install but also for remove, purge, and upgrade. Many <em>maintainer script</em> bugs show up when packages are removed or purged. Use the <prgn>dpkg</prgn> command as follows to test them."
msgstr "パッケージがこういった簡単ではない<em>メンテナスクリプト</em>を使う場合は、インストールだけではなく、削除や完全削除やアップグレードもテストしましょう。多くの<em>メンテナスクリプト</em>バグはパッケージが削除されたり完全削除される際に発現します。以下のように<prgn>dpkg</prgn> コマンドを使いこれらを確認しましょう。"

#. type: <example></example>
#: maint-guide.en.sgml:2962
#, no-wrap
msgid ""
"$ sudo dpkg -r gentoo\n"
"$ sudo dpkg -P gentoo\n"
"$ sudo dpkg -i gentoo_<var>version</var>-<var>revision</var>_<var>i386</var>.deb"
msgstr ""
"$ sudo dpkg -r gentoo\n"
"$ sudo dpkg -P gentoo\n"
"$ sudo dpkg -i gentoo_<var>version</var>-<var>revision</var>_<var>i386</var>.deb"

#. type: <p><list>
#: maint-guide.en.sgml:2965
msgid "This should be done with sequences such as the following."
msgstr "以下のような手順でこれは実施するべきです。"

#. type: <p></p>
#: maint-guide.en.sgml:2967
msgid "install the previous version (if needed)."
msgstr "(可能な場合は)前回バージョンをインストール"

#. type: <p></p>
#: maint-guide.en.sgml:2968
msgid "upgrade it from the previous version."
msgstr "旧バージョンからアップグレードします。"

#. type: <p></p>
#: maint-guide.en.sgml:2969
msgid "downgrade it back to the previous version (optional)."
msgstr "旧バージョンになるよう、ダウングレードします (オプション)。"

#. type: <p></p>
#: maint-guide.en.sgml:2970
#: maint-guide.en.sgml:2974
msgid "purge it."
msgstr "完全削除します。"

#. type: <p></p>
#: maint-guide.en.sgml:2971
msgid "install the new package."
msgstr "新パッケージとしてインストールします。"

#. type: <p></p>
#: maint-guide.en.sgml:2972
msgid "remove it."
msgstr "削除します。"

#. type: <p></p>
#: maint-guide.en.sgml:2973
msgid "install it again."
msgstr "もう一度インストールします。"

#. type: <p></p>
#: maint-guide.en.sgml:2980
msgid "If this is your first package, you should create dummy packages with different versions to test your package in advance to prevent future problems."
msgstr "もしこれがあなたの最初のパッケージなら、あなたのパッケージを将来問題が起こらないように事前にテストするための異なるバージョンのダーミーパッケージを作るべきです。"

#. type: <p></p>
#: maint-guide.en.sgml:2985
msgid "Bear in mind that if your package has previously been released in Debian, people will often be upgrading to your package from the version that was in the last Debian release. Remember to test upgrades from that version too."
msgstr "もしあなたのパッケージが過去にリリースされたバージョンの Debian に含まれていた場合には、多くの人々が Debian の最新の リリース版に含まれていたバージョンのパッケージから アップグレードしてくるだろうということを覚えておいてください。 そして、そのバージョンからもきちんとアップグレードできることを 忘れずに上記の手順で確認しておいてください。"

#. type: <p></p>
#: maint-guide.en.sgml:2988
msgid "Although downgrade is not officially supported, it should be nice to support it."
msgstr "ダウングレードは正式にはサポートされていないとは言え、それがサポートされるのは良い事です。"

#. type: <heading></heading>
#: maint-guide.en.sgml:2990
msgid "<package>lintian</package> package"
msgstr "<package>lintian</package> パッケージ"

#. type: <p><example>
#: maint-guide.en.sgml:2998
msgid "Run <manref section=\"1\" name=\"lintian\"> on your <file>.changes</file> file. The <prgn>lintian</prgn> command runs many test scripts to check for many common packaging errors. <footnote><p>You do not need to provide the <prgn>lintian</prgn> option \"<tt>-i -I --show-overrides</tt>\" if you customized <file>/etc/devscripts.conf</file> or <file>~/.devscripts</file> as described in <ref id=\"debuild\">. </p></footnote>"
msgstr "あなたの <file>.changes</file> ファイルに <manref section=\"1\" name=\"lintian\"> を実行します。<prgn>lintian</prgn> コマンドはパッケージ作成上の典型的エラーをチェックする多くのテストスクリプトを実行します。<footnote><p><ref id=\"debuild\">に記述されたように <file>/etc/devscripts.conf</file> や <file>~/.devscripts</file> をカスタマイズしていれば 、\"<tt>-i -I --show-overrides</tt>\" を<prgn>lintian</prgn> オプションとし与える必要はありません。</p></footnote>"

#. type: <example></example>
#: maint-guide.en.sgml:3001
#, no-wrap
msgid "$ lintian -i -I --show-overrides gentoo_0.9.12-1_i386.changes"
msgstr "$ lintian -i -I --show-overrides gentoo_0.9.12-1_i386.changes"

#. type: <p><list>
#: maint-guide.en.sgml:3005
msgid "Of course, replace the filename with the name of the <file>.changes</file> file generated for your package. The output of the <prgn>lintian</prgn> command are marked as follows."
msgstr "もちろん、あなたのパッケージにより作成される <file>.changes</file> ファイルの名前をこれと置き換えます。<prgn>lintian</prgn> コマンドの出力は以下のようにマークされています。"

#. type: <p></p>
#: maint-guide.en.sgml:3007
msgid "<tt>E:</tt> for error; a sure policy violation or a packaging error."
msgstr "<tt>E:</tt> はエラー; ポリシー違反とかパッケージエラーであることが確実。"

#. type: <p></p>
#: maint-guide.en.sgml:3008
msgid "<tt>W:</tt> for warning; a possible policy violation or a packaging error."
msgstr "<tt>W:</tt> は警告; ポリシー違反かパッケージエラーである可能性あり。"

#. type: <p></p>
#: maint-guide.en.sgml:3009
msgid "<tt>I:</tt> for info; a information on certain packaging aspects."
msgstr "<tt>I:</tt> は参考情報; パッケージ上の特定アスペクトに関する参考情報。"

#. type: <p></p>
#: maint-guide.en.sgml:3010
msgid "<tt>N:</tt> for note; a detailed message to help your debugging."
msgstr "<tt>N:</tt> は詳細; あなたのデバグを援助する詳細メッセージ。"

#. type: <p></p>
#: maint-guide.en.sgml:3012
msgid "<tt>O:</tt> for overridden; a message overridden by the <file>lintian-overrides</file> files but displayed by the <tt>--show-overrides</tt> option."
msgstr "<tt>O:</tt> はオーバーライド済み; <file>lintian-overrides</file> ファイルによりメッセージがオーバーライドされるが、<tt>--show-overrides</tt> オプションのために表示される。"

#. type: <p></p>
#: maint-guide.en.sgml:3018
msgid "For warnings, tune the package to avoid them or verify that the warnings are spurious. If spurious, set the <file>lintian-overrides</file> files as described in <ref id=\"lintian\">."
msgstr "警告に関しては、パッケージを調整して回避するか、警告が誤謬であることを確認しましょう。誤謬である場合には、<ref id=\"lintian\">に記載されたようにして <file>lintian-overrides</file> ファイルを設定します。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:3022
msgid "Note that you can build the package with <prgn>dpkg-buildpackage</prgn> and run <prgn>lintian</prgn> on it in one command with <manref section=\"1\" name=\"debuild\"> or with <manref section=\"1\" name=\"pdebuild\">."
msgstr "<prgn>dpkg-buildpackage</prgn> によるパッケージの生成と <prgn>lintian</prgn> の実行を、 <manref section=\"1\" name=\"debuild\"> や <manref section=\"1\" name=\"pdebuild\"> を使うとひとつのコマンドでできます。"

#. type: <heading></heading>
#: maint-guide.en.sgml:3024
msgid "<prgn>debc</prgn> command"
msgstr "<prgn>debc</prgn> コマンド"

#. type: <p><example>
#: maint-guide.en.sgml:3028
msgid "You can list files in the binary Debian package by <manref section=\"1\" name=\"debc\"> command."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3030
#, no-wrap
msgid "$ debc <var>package</var>.changes"
msgstr "$ debc <var>package</var>.changes"

#. type: <heading></heading>
#: maint-guide.en.sgml:3033
msgid "<prgn>debdiff</prgn> command"
msgstr "<prgn>debdiff</prgn> コマンド"

#. type: <p><example>
#: maint-guide.en.sgml:3037
msgid "You can compare file contents in two source Debian packages with the <manref section=\"1\" name=\"debdiff\"> command."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3039
#, no-wrap
msgid "$ debdiff <var>old-package</var>.dsc <var>new-package</var>.dsc"
msgstr "$ debdiff <var>old-package</var>.dsc <var>new-package</var>.dsc"

#. type: <p><example>
#: maint-guide.en.sgml:3044
msgid "You can also compare file lists in two sets of binary Debian packages with the <manref section=\"1\" name=\"debdiff\"> command."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3046
#, no-wrap
msgid "$ debdiff <var>old-package</var>.changes <var>new-package</var>.changes"
msgstr "$ debdiff <var>old-package</var>.changes <var>new-package</var>.changes"

#. type: <p></p>
#: maint-guide.en.sgml:3051
msgid "These are useful to identify what has been changed in the source packages, if no files have been unintentionally misplaced or removed in the binary packages, and if no other inadvertent changes were made when updating binary packages."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3053
msgid "<prgn>interdiff</prgn> command"
msgstr "<prgn>interdiff</prgn> コマンド"

#. type: <p><example>
#: maint-guide.en.sgml:3059
msgid "You can compare two <file>diff.gz</file> files with the <manref section=\"1\" name=\"interdiff\"> command. This is useful for verifying that no inadvertent changes were made to the source by the maintainer when updating packages in the old <tt>1.0</tt> source format."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3061
#, no-wrap
msgid "$ interdiff -z <var>old-package</var>.diff.gz <var>new-package</var>.diff.gz"
msgstr "$ interdiff -z <var>old-package</var>.diff.gz <var>new-package</var>.diff.gz"

#. type: <heading></heading>
#: maint-guide.en.sgml:3064
msgid "<prgn>mc</prgn> command"
msgstr "<prgn>mc</prgn> コマンド"

#. type: <p></p>
#: maint-guide.en.sgml:3069
msgid "Many of these file inspection operations can be made into an intuitive process by using a file manager like <manref section=\"1\" name=\"mc\"> which will let you browse not only the contents of <file>*.deb</file> package files but also <file>*.udeb</file>, <file>*.debian.tar.gz</file>, <file>*.diff.gz</file>, and <file>*.orig.tar.gz</file> files."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3074
msgid "Be on the lookout for extra unneeded files or zero length files, both in the binary and source package. Often cruft doesn't get cleaned up properly; adjust your <file>rules</file> file to compensate for that."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3076
msgid "Uploading the package"
msgstr "パッケージをアップロードする"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:3080
msgid "Now that you have tested your new package thoroughly, you will be technically ready to start the Debian new maintainer application process, as described at <url id=\"http://www.debian.org/devel/join/newmaint\">"
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3082
msgid "Uploading to the Debian archive"
msgstr "Debian アーカイブへアップロードする"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:3095
msgid "Once you become an official developer, you'll need to upload the package to the Debian archive. You can do this manually, but it's easier to use the provided automated tools, like <manref section=\"1\" name=\"dupload\"> or <manref section=\"1\" name=\"dput\">. We'll describe how it's done with <prgn>dupload</prgn>. <footnote><p>The <package>dput</package> package seems to come with more features and becoming more popular than the <package>dupload</package> package. It uses the <file>/etc/dput</file> file for the global configuration and the <file>~/.dput.cf</file> file for the per-user one. It supports Ubuntu related services out-of-box, too. </p></footnote>"
msgstr ""

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:3100
msgid "First you have to set up <prgn>dupload</prgn>'s config file. You can either edit the system-wide <file>/etc/dupload.conf</file> file, or have your own <file>~/.dupload.conf</file> file override the few things you want to change."
msgstr "まず <prgn>dupload</prgn> の設定ファイルを調整しなければいけません。 システム全体の設定ファイルである <file>/etc/dupload.conf</file> を編集するか、あるいはあなた専用の設定ファイルである <file>~/.dupload.conf</file> を使って変更したい項目だけをオーバーライドさせてもかまいません。"

#. type: <p></p>
#: maint-guide.en.sgml:3103
msgid "You can read the <manref section=\"5\" name=\"dupload.conf\"> manual page to understand what each of these options means."
msgstr "またそれぞれのオプションが持つ意味を理解するため <manref section=\"5\" name=\"dupload.conf\"> マニュアルページを読むことができます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:3107
msgid "The <tt>$default_host</tt> option determines which of the upload queues will be used by default. <tt>anonymous-ftp-master</tt> is the primary one, but it's possible that you will want to use another one."
msgstr "もっとも気をつけるべき項目は <tt>$default_host</tt> の選択です。この項目にはデフォルトとして利用するアップロードキューを指定します。<tt>anonymous-ftp-master</tt>がメインのサーバーですが、別のホストを利用したいこともあるでしょう。"

#. type: <p><example>
#: maint-guide.en.sgml:3109
msgid "While connected to the Internet, you can upload your package by the following:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3112
#, no-wrap
msgid "$ dupload gentoo_0.9.12-1_i386.changes"
msgstr "$ dupload gentoo_0.9.12-1_i386.changes"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:3122
msgid "<prgn>dupload</prgn> checks that the MD5/SHA1/SHA256 checksums of the files match those from the <file>.changes</file> file, so it will warn you to rebuild it as described in <ref id=\"completebuild\"> so it can properly upload."
msgstr "<prgn>dupload</prgn> は各ファイルの MD5/SHA1/SHA256 チェックサムを計算し、 <file>.changes</file> ファイルの中の情報と照合します。 もし一致しない場合には適正にアップロードできないため、 <ref id=\"completebuild\"> の説明に従って最初から再構築をするよう、警告してきます。"

#. type: <p><example>
#: maint-guide.en.sgml:3131
msgid "If you encounter an upload problem at <url id=\"&ftp-uploadqueue;\">, you can fix this by manually uploading GPG signed <file>*.commands</file> file to there with <prgn>ftp</prgn>. <footnote><p>See <url id=\"&ftp-command;\">. Alternatively, you may use <prgn>dcut</prgn> command from the <package>dput</package> package. </p></footnote> For example, use <file>hello.commands</file>:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3148
#, no-wrap
msgid ""
"-----BEGIN PGP SIGNED MESSAGE-----\n"
"\n"
"Uploader: Foo Bar &lt;Foo.Bar@example.org&gt;\n"
"Commands: \n"
" rm hello_1.0-1_i386.deb\n"
" mv hello_1.0-1.dsx hello_1.0-1.dsc\n"
"\n"
"-----BEGIN PGP SIGNATURE-----\n"
"Version: 2.6.3ia\n"
"\n"
"iQCVAwUBNFiQSXVhJ0HiWnvJAQG58AP+IDJVeSWmDvzMUphScg1EK0mvChgnuD7h\n"
"BRiVQubXkB2DphLJW5UUSRnjw1iuFcYwH/lFpNpl7XP95LkLX3iFza9qItw4k2/q\n"
"tvylZkmIA9jxCyv/YB6zZCbHmbvUnL473eLRoxlnYZd3JFaCZMJ86B0Ph4GFNPAf\n"
"Z4jxNrgh7Bc=\n"
"=pH94\n"
"-----END PGP SIGNATURE-----"
msgstr ""
"-----BEGIN PGP SIGNED MESSAGE-----\n"
"\n"
"Uploader: Foo Bar &lt;Foo.Bar@example.org&gt;\n"
"Commands: \n"
" rm hello_1.0-1_i386.deb\n"
" mv hello_1.0-1.dsx hello_1.0-1.dsc\n"
"\n"
"-----BEGIN PGP SIGNATURE-----\n"
"Version: 2.6.3ia\n"
"\n"
"iQCVAwUBNFiQSXVhJ0HiWnvJAQG58AP+IDJVeSWmDvzMUphScg1EK0mvChgnuD7h\n"
"BRiVQubXkB2DphLJW5UUSRnjw1iuFcYwH/lFpNpl7XP95LkLX3iFza9qItw4k2/q\n"
"tvylZkmIA9jxCyv/YB6zZCbHmbvUnL473eLRoxlnYZd3JFaCZMJ86B0Ph4GFNPAf\n"
"Z4jxNrgh7Bc=\n"
"=pH94\n"
"-----END PGP SIGNATURE-----"

#. type: <p></p>
#: maint-guide.en.sgml:3153
msgid "See <url id=\"http://mentors.debian.net/cgi-bin/welcome\" name=\"mentors.debian.net\"> for publically accessible upload area for non-DD."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3158
msgid "See <url id=\"http://www.debian.org/doc/manuals/debian-reference/ch02.en.html#_small_public_package_archive\" name=\"Debian Reference, 2.7.12. 'Small public package archive'\"> for an example for creating a small public package archive compatible with the modern secure APT system."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3160
msgid "Skipped uploads"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3164
msgid "If you created multiple entries in <file>debian/changelog</file> by skipping uploads, you must create a proper <file>*_.changes</file> file which includes all changes from the last upload."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3168
msgid "This can be done by specifying <tt>-v</tt> option to the package building programs such as <prgn>dpkg-buildpackage</prgn>, <prgn>debuild</prgn>, <prgn>pdebuild</prgn>, etc."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3170
msgid "Updating the package"
msgstr "パッケージの更新"

#. type: <p></p>
#: maint-guide.en.sgml:3172
msgid "Once you release a package, you need to update it soon."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3174
msgid "New Debian revision"
msgstr "Debian リビジョンの更新"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p><list>
#. type: <p><list>
#: maint-guide.en.sgml:3178
msgid "Let's say that a bug report was filed against your package as <tt>#54321</tt>, and it describes a problem that you can solve. To create a new Debian revision of the package, you need to:"
msgstr "例えば仮に、<tt>#54321</tt> という番号のバグレポートがあなたのパッケージ に対してファイルされ、解決可能な問題が記述されていたとしましょう。 パッケージの新しい Debian リビジョンを作成するには、以下を実行する 必要があります。"

#. type: <p><list>
#: maint-guide.en.sgml:3180
msgid "If this is to be recorded as a new patch, do the following."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3182
msgid "\"<tt>quilt new <var>bugname.patch</var></tt>\" to set patch name;"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3183
msgid "\"<tt>quilt add <var>buggy-file</var></tt>\" to declare file to be modified;"
msgstr ""

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:3184
msgid "Correct the problem in the package source for the upstream bug;"
msgstr "アップストリームバグに関してパッケージソース中の問題を修正します。"

#. type: <p></p>
#: maint-guide.en.sgml:3185
msgid "\"<tt>quilt refresh</tt>\" to record to <file><var>bugname.patch</var></file>;"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3186
msgid "\"<tt>quilt header -e</tt>\" to add its description;"
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3188
msgid "If this is to update an existing patch, do the following."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3190
msgid "\"<tt>quilt pop <var>foo.patch</var></tt>\" to recall existing <file><var>foo.patch</var></file>;"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3191
msgid "Correct the problem in the old <file><var>foo.patch</var></file>;"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3192
msgid "\"<tt>quilt refresh</tt>\" to update <file><var>foo.patch</var></file>;"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3193
msgid "\"<tt>quilt header -e</tt>\" to update its description;"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3194
msgid "\"<tt>while quilt push; do quilt refresh; done</tt>\" to apply all patches while removing <em>fuzz</em>;"
msgstr ""

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:3201
msgid "Add a new revision at the top of the Debian <file>changelog</file> file, for example with \"<tt>dch -i</tt>\", or explicitly with \"<tt>dch -v <var>version</var>-<var>revision</var></tt>\" and then insert the comments using your preferred editor. <footnote><p>To get the date in the required format, use \"<tt>LANG=C date -R</tt>\".</p></footnote>"
msgstr "次に Debian <file>changelog</file> ファイルの先頭に新しいリビジョンを 追加します。例えば「<tt>dch -i</tt>」を実行するか、またはバージョンを 明示したい場合なら「<tt>dch -v &lt;version&gt;-&lt;revision&gt;</tt>」 を実行してあなたの好きなエディタで説明を記入すると楽にできます。"

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:3207
msgid "Include a short description of the bug and the solution in the changelog entry, followed by \"<tt>Closes: #54321</tt>\". That way, the bug report will be <em>automagically</em> closed by the archive maintenance software the moment your package gets accepted in the Debian archive."
msgstr "changelog の説明行に、このリビジョンで解決されたバグと、 その解決方法についての簡単な説明を記載し、 「<tt>Closes: #54321</tt>」と続けておきます。 これによってあなたのパッケージが Debian アーカイブ中に受け入れられた時、 アーカイブ管理ソフトウェアによって該当するバグレポート (今回の場合は #54321) が<em>自動的</em>に閉じられます。"

#. type: <p></p>
#: maint-guide.en.sgml:3210
msgid "Repeat what you did in the above to fix more bugs while updating the Debian <file>changelog</file> file with \"<tt>dch</tt>\" as needed."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3214
msgid "Repeat what you did in <ref id=\"completebuild\">, <ref id=\"checkit\">, and <ref id=\"upload\">. The difference is that this time, the original source archive won't be included, as it hasn't been changed and it already exists in the Debian archive."
msgstr "これまで <ref id=\"completebuild\">、<ref id=\"checkit\">、 <ref id=\"upload\"> の中で実行してきたことを再度繰り返します。 今までと違うのは、今回の場合オリジナルソースアーカイブには 変更が無く、同じものが既に Debian アーカイブ中に存在しているため、 upload するファイルにはこのファイルが含まれないという点だけです。"

#. type: <heading></heading>
#: maint-guide.en.sgml:3218
msgid "Inspection of the new upstream release"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3221
msgid "When preparing packages of the new upstream release for the Debian archive, you must check the new upstream release, first."
msgstr "Debian アーカイブ用の新しい上流リリースパッケージの準備ができたら、まず、上流リリースをチェックしなければなりません。"

#. type: <p></p>
#: maint-guide.en.sgml:3225
msgid "You start this by reading the upstream <file>changelog</file>, <file>NEWS</file>, and whatever other documentations they may have released with the new version."
msgstr "上流の <file>changelog</file> や <file>NEWS</file>、その他新しいバージョンでリリースされたドキュメントを読むことから始めてください"

#. type: <p><example>
#: maint-guide.en.sgml:3228
msgid "You then inspect changes between the old and new upstream sources as follow to watch out for anything suspicious."
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3230
#, no-wrap
msgid "$ diff -urN <var>foo</var>-<var>oldversion</var> <var>foo</var>-<var>newversion</var>"
msgstr "$ diff -urN <var>foo</var>-<var>oldversion</var> <var>foo</var>-<var>newversion</var>"

#. type: <p></p>
#: maint-guide.en.sgml:3238
msgid "Changes to some auto-generated files by Autotools such as <file>missing</file>, <file>aclocal.m4</file>, <file>config.guess</file>, <file>config.h.in</file>, <file>config.sub</file>, <file>configure</file>, <file>depcomp</file>, <file>install-sh</file>, <file>ltmain.sh</file>, and <file>Makefile.in</file> may be ignored. You may erase them before running <prgn>diff</prgn> to the source for inspection."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3240
msgid "New upstream release"
msgstr "上流ソフトウェアの新版更新"

#. type: <p><list>
#: maint-guide.en.sgml:3253
msgid "If a package <package><var>foo</var></package> is properly packaged in the newer <tt>3.0 (native)</tt> or <tt>3.0 (quilt)</tt> formats, packaging a new upstream version is essentially moving the old <file>debian</file> directory to the new source. This can be done by running \"<tt>tar xvzf /<var>path</var>/<var>to</var>/<var>foo</var>_<var>oldversion</var>.debian.tar.gz</tt>\" in the new extracted source. <footnote><p>If a package <package><var>foo</var></package> is packaged in the old <tt>1.0</tt> format, this can be done by running \"<tt>zcat /<var>path</var>/<var>to</var>/<var>foo</var>_<var>oldversion</var>.diff.gz|patch -p1</tt>\" in the new extracted source, instead. </p></footnote> Of course, you need to do few obvious chores."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3255
msgid "Create a copy of upstream source as the <file>foo_<var>newversion</var>.tar.gz</file> file."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3257
msgid "Update the Debian <file>changelog</file> file with \"<tt>dch -v <var>newversion</var>-<var>1</var></tt>\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3259
msgid "Add an entry with \"New upstream release\"."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3261
msgid "Describe concisely the changes <em>in the new upstream release</em> that fix reported bugs and close those bugs."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3263
msgid "Describe concisely the changes <em>to the new upstream release</em> by the maintainer that fix reported bugs and close those bugs."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3265
msgid "\"<tt>while quilt push; do quilt refresh; done</tt>\" to apply all patches while removing <em>fuzz</em>."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3269
msgid "If the patch/merge did not apply cleanly, inspect the situation (clues are left in <file>.rej</file> files)."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3271
msgid "If a patch you applied to the source was integrated to the upstream source,"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3273
msgid "\"<tt>quilt delete</tt>\" to remove it."
msgstr ""

#. type: <p><list>
#: maint-guide.en.sgml:3275
msgid "If a patch you applied to the source conflicted with new changes in the upstream source,"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3278
msgid "\"<tt>quilt push -f</tt>\" to apply old patches while forcing rejects as <file><var>baz</var>.rej</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3280
msgid "Edit the <file><var>baz</var></file> file manually to realize intended effect of <file><var>baz</var>.rej</file>."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3281
msgid "\"<tt>quilt refresh</tt>\" to update the patch."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3283
msgid "Continue back to \"<tt>while quilt push; do quilt refresh; done</tt>\"."
msgstr ""

#. type: <p><example>
#: maint-guide.en.sgml:3287
msgid "This process can be automated using the <manref section=\"1\" name=\"uupdate\"> command as follows:"
msgstr ""

#. type: <example></example>
#: maint-guide.en.sgml:3305
#, no-wrap
msgid ""
"$ apt-get source <var>foo</var>\n"
"...\n"
"dpkg-source: info: extracting <var>foo</var> in <var>foo</var>-<var>oldversion</var>\n"
"dpkg-source: info: unpacking <var>foo</var>_<var>oldversion</var>.orig.tar.gz\n"
"dpkg-source: info: applying <var>foo</var>_<var>oldversion</var>-1.debian.tar.gz\n"
"$ ls -F\n"
"<var>foo</var>-<var>oldversion</var>/\n"
"<var>foo</var>_<var>oldversion</var>-1.debian.tar.gz\n"
"<var>foo</var>_<var>oldversion</var>-1.dsc\n"
"<var>foo</var>_<var>oldversion</var>.orig.tar.gz\n"
"$ wget http://example.org/<var>foo</var>/<var>foo</var>-<var>newversion</var>.tar.gz\n"
"$ cd <var>foo</var>-<var>oldversion</var>\n"
"$ uupdate -v <var>newversion</var> ../<var>foo</var>-<var>newversion</var>.tar.gz\n"
"$ cd ../<var>foo</var>-<var>newversion</var>\n"
"$ while quilt push; do quilt refresh; done\n"
"$ dch\n"
"... document changes made"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3317
msgid "If you set up a <file>debian/watch</file> file as described in <ref id=\"watch\">, you can skip the <prgn>wget</prgn> command. You simply run <manref section=\"1\" name=\"uscan\"> in the <file><var>foo</var>-<var>oldversion</var></file> directory instead of the <prgn>uupdate</prgn> command. This will <em>automagically</em> look for the updated source, download it, and run the <prgn>uupdate</prgn> command. <footnote><p>If the <prgn>uscan</prgn> command downloads the updated source but it does not run the <prgn>uupdate</prgn> command, you should correct the <file>debian/watch</file> file to have \"<tt>debian uupdate</tt>\" at the end of the URL. </p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3320
msgid "You can release this updated source by repeating what you did in <ref id=\"completebuild\">, <ref id=\"checkit\">, and <ref id=\"upload\">."
msgstr "今まで <ref id=\"completebuild\">、 <ref id=\"checkit\">、<ref id=\"upload\"> の中で実行してきたことを繰り返し、更新したソースをリリースできます。"

#. type: <heading></heading>
#: maint-guide.en.sgml:3322
msgid "Updating the packaging style"
msgstr "パッケージ化スタイルの更新"

#. type: <p><list>
#: maint-guide.en.sgml:3331
msgid "Updating the package style is not a required activity for the update of a package. But, you can use the full capability of the modern <package>debhelper</package> system and the <tt>3.0</tt> source format by doing this. <footnote><p>If your sponsor or other maintainers object to updating the existing packaging style, it is not worth bothering nor arguing. There are more important things to do.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3336
msgid "If you need to add erased template files for any reason, you may run <prgn>dh_make</prgn> again in the same Debian package source tree with <tt>--addmissing</tt> option. Then edit them properly."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3340
msgid "If the package has not updated to use the <package>debhelper</package> V7 <prgn>dh</prgn> syntax for the <file>debian/rules</file> file, update it to use <prgn>dh</prgn>. Update the <file>debian/control</file> file accordingly."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3351
msgid "If you want to update the <file>rules</file> file created with the <file>Makefile</file> inclusion mechanism of the Common Debian Build System (<package>cdbs</package>) to the <prgn>dh</prgn> syntax, see <file>/usr/share/doc/cdbs/cdbs-doc.html</file> and understand its <tt>DEB_*</tt> configuration variables. <footnote><p>In the <package>cdbs</package> (0.4.74) package, there are some negative descriptions of the <file>rules</file> file created by the <prgn>dh_make</prgn> command for the non-<package>cdbs</package> choices. Do not worry about it. It applies only for <tt>lenny</tt> which created explicit targets with long list of <prgn>dh_*</prgn> commands.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3357
msgid "If you have a <tt>1.0</tt> source package without the <file><var>foo</var>.diff.gz</file> file, you can update it to the newer <tt>3.0 (native)</tt> source format by creating <file>debian/source/format</file> with \"<tt>3.0 (native)</tt>\". The rest of <file>debian/*</file> files can be just copied."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3368
msgid "If you have a <tt>1.0</tt> source package with the <file><var>foo</var>.diff.gz</file> file, you can update it to the newer <tt>3.0 (quilt)</tt> source format by creating <file>debian/source/format</file> with \"<tt>3.0 (quilt)</tt>\". The rest of <file>debian/*</file> files can be just copied. Import the <file>big.diff</file> file generated by the \"<tt>filterdiff -z -x '*/debian/*' <var>foo</var>.diff.gz &gt; big.diff</tt>\" command to your <prgn>quilt</prgn> system, if needed. <footnote><p>You may split <file>big.diff</file> into many small incremental patches using the <prgn>splitdiff</prgn> command.</p></footnote>"
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3374
msgid "If it was packaged with another patch system such as <package>dpatch</package>, <package>dbs</package>, or <package>cdbs</package> with <tt>-p0</tt>, <tt>-p1</tt>, or <tt>-p2</tt>, convert it to the <package>quilt</package> command using <file>deb3</file> at <url id=\"http://bugs.debian.org/581186\">."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3380
msgid "If it was packaged with the <prgn>dh</prgn> command with the \"<tt>--with quilt</tt>\" option or with the <prgn>dh_quilt_patch</prgn> and <prgn>dh_quilt_unpatch</prgn> commands, remove such things and make it use the newer <tt>3.0 (native)</tt> source format."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3383
msgid "You need to do other tasks described in <ref id=\"newupstream\">, too."
msgstr ""

#. type: <heading></heading>
#: maint-guide.en.sgml:3385
msgid "Reminders for updating packages"
msgstr "パッケージをアップグレードする際の注意点"

#. type: <p><list>
#: maint-guide.en.sgml:3387
msgid "Here are few reminders for updating packages."
msgstr "パッケージをアップグレードする際の注意点は以下です。"

#. type: <p></p>
#: maint-guide.en.sgml:3393
msgid "Preserve old <file>changelog</file> entries (sounds obvious, but there have been incidents to type \"<tt>dch</tt>\" when you should have typed \"<tt>dch -i</tt>\".)"
msgstr ""

# #-#-#-#-#  maint-guide.ja.po  #-#-#-#-#
# type: <p></p>
#. type: <p></p>
#: maint-guide.en.sgml:3398
msgid "Existing Debian changes need to be reevaluated; throw away stuff that upstream has incorporated (in one form or another) and remember to keep stuff that hasn't been incorporated by upstream, unless there is a compelling reason not to."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3402
msgid "If any changes were made to the build system (hopefully you'd know from inspecting upstream changes) then update the <file>debian/rules</file> and <file>debian/control</file> build dependencies if necessary."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3406
msgid "Check to see <url id=\"http://www.debian.org/Bugs/\" name=\"Debian Bug Tracking System (BTS)\"> if someone have provided patches to bugs that are currently open in it."
msgstr ""

#. type: <p></p>
#: maint-guide.en.sgml:3411
msgid "Check the contents of the <file>.changes</file> file to make sure you are uploading to the correct distribution, the proper bugs closures are listed in the <tt>Closes</tt> field, the <tt>Maintainer</tt> and <tt>Changed-By</tt> fields match, the file is GPG-signed, etc."
msgstr ""

# type: <version></version>
#~ msgid "version 1.2.13, 5 June 2008."
#~ msgstr "version 1.2.13, 5 June 2008."
# type: <p></p>
#~ msgid ""
#~ "This revision of this document has been updated for the packages in "
#~ "Debian 2.2 (`potato') and 3.0 (`woody')."
#~ msgstr ""
#~ "この文書の現在のバージョンは Debian 2.2 (`potato') および 3.0 (`woody') に"
#~ "含まれるパッケージを対象に更新されています。"
# type: <p></p>
#~ msgid ""
#~ "<package>dpkg-dev</package> - this package contains the tools needed to "
#~ "unpack, build and upload Debian source packages. (see <manref section="
#~ "\"1\" name=\"dpkg-source\">)"
#~ msgstr ""
#~ "<package>dpkg-dev</package> - このパッケージには Debian ソース パッケージ"
#~ "を展開、構築、アップロードするために必要なツール群が 含まれています (詳し"
#~ "くは <manref section=\"1\" name=\"dpkg-source\"> を参照)。"
# type: <p></p>
#~ msgid ""
#~ "<package>gcc</package> - the GNU C compiler, necessary if your program "
#~ "like most others is written in the C programming language. (see <manref "
#~ "section=\"1\" name=\"gcc\">) This package will also \"pull in\" several "
#~ "other packages such as <package>binutils</package> which includes "
#~ "programs used to assemble and link object files (see `info binutils` in "
#~ "the <package>binutils-doc</package> package) and <package>cpp</package>, "
#~ "the C preprocessor. (see <manref section=\"1\" name=\"cpp\">)"
#~ msgstr ""
#~ "<package>gcc</package> - GNU C コンパイラ。あなたのプログラムが 他の多くの"
#~ "プログラムと同様に C 言語で書かれている場合、必要と なります (詳しくは "
#~ "<manref section=\"1\" name=\"gcc\"> を参照)。このパッケージは、たとえばプ"
#~ "ログラムの「素」となるオブジェクトファイルをアセンブル、リンクするための "
#~ "<package>binutils</package> (<package>binutils-doc</package> パッケージを"
#~ "インストールして 「info binutils」すれば詳細な説明を読めます)、 C プリプロ"
#~ "セッサ <package>cpp</package> (詳しくは <manref section=\"1\" name=\"cpp"
#~ "\"> を参照) など他のパッケージをいくつか一緒に「引き連れて」きます。"
# type: <p></p>
#~ msgid ""
#~ "<package>g++</package> - the GNU C++ compiler, necessary if your program "
#~ "is written in C++. (see <manref section=\"1\" name=\"g++\">)"
#~ msgstr ""
#~ "<package>g++</package> - GNU C++ コンパイラ。あなたの プログラムが C++ 言"
#~ "語で書かれている場合に必要です (詳しくは <manref section=\"1\" name=\"g++"
#~ "\"> を参照)。"
# type: <p></p>
#~ msgid ""
#~ "<package>libc6-dev</package> - the C libraries and header files gcc needs "
#~ "to link with to create object files. (see `info libc` in the "
#~ "<package>glibc-doc</package> package)"
#~ msgstr ""
#~ "<package>libc6-dev</package> - gcc がオブジェクトファイルを 生成してリンク"
#~ "するために必要な C ライブラリとヘッダファイル が含まれています "
#~ "(<package>glibc-doc</package> パッケージを インストールして「info libc」す"
#~ "ればマニュアルが読めます)。"
# type: <p></p>
#~ msgid ""
#~ "<package>make</package> - usually creation of a program takes several "
#~ "steps, so rather than having to type out the same commands over and over "
#~ "again, you can use this program to automate the process, creating "
#~ "`Makefile's. (see `info make`)"
#~ msgstr ""
#~ "<package>make</package> - ふつう、プログラムはいくつかの手順を踏んで 生成"
#~ "されます。同じコマンドを何度も何度も繰り返し入力する代わりに、 make プログ"
#~ "ラムを使えば「Makefile」を書くことで手続きを自動化 することができます (詳"
#~ "しくは「info make」)。"
# type: <p><list>
#~ msgid "You'll probably want to install the following packages, too:"
#~ msgstr "たぶん、以下のパッケージもインストールしたくなるでしょう。"
# type: <p></p>
#~ msgid ""
#~ "Note: <package>debmake</package> is a package that contains some programs "
#~ "that function similar to dh-make, but its specific use is <strong>not</"
#~ "strong> covered in this document, because it is <em>deprecated</em>."
#~ msgstr ""
#~ "注意: <package>debmake</package> は dh-make と似た働きをする いくつかのプ"
#~ "ログラムを含むパッケージですが、現在では このパッケージを <em>使うべきでな"
#~ "い</em> とされているため、 この文書では <strong>説明しません</strong>。"
# type: <p></p>
#~ msgid ""
#~ "After you build your package (or while doing that), you may want to "
#~ "become an official Debian Developer to get your new package into the next "
#~ "distribution (if the program is useful, why not?)."
#~ msgstr ""
#~ "あなたのパッケージを構築したあとに (あるいはしている最中でも構いません"
#~ "が)、ディストリビューションの次のリリースに、あなたのパッケージを含めるた"
#~ "め (そのプログラムが有用なら、ぜひ!)公式 Debian 開発者になりたくなるでしょ"
#~ "う。"
# type: <heading></heading>
#~ msgid "Other information"
#~ msgstr "その他知っておくべきこと"
# type: <p></p>
#~ msgid ""
#~ "There are two types of packages you can make, source and binary. A source "
#~ "package contains code which you can compile into a program. A binary "
#~ "package contains just the finished program. Don't mix terms like source "
#~ "of the program and the source package of the program! Please read the "
#~ "other manuals if you need more details on terminology."
#~ msgstr ""
#~ "これから作ろうとするのは 2 種類のパッケージで、それぞれ ソースパッケージ、"
#~ "バイナリパッケージと呼ばれています。 ソースパッケージはコンパイルしてプロ"
#~ "グラムになるソースコードが 含まれます。バイナリパッケージにはでき上がった"
#~ "プログラムそのものです。 紛らわしい言葉ですが、「プログラムのソース」と "
#~ "「プログラムのソースパッケージ」を混同しないようにしましょう! もし用語につ"
#~ "いてもっと知りたければ他のマニュアル類を参照してください。"
# type: <p></p>
#~ msgid ""
#~ "In Debian, the term `maintainer' is used for the person who makes "
#~ "packages, `upstream author' for the person that made the program, and "
#~ "`upstream maintainer' for the person who currently maintains that "
#~ "program, outside of Debian. Usually author and the upstream maintainer "
#~ "are the same person - and sometimes even the maintainer is the same "
#~ "person. If you made a program, and want it to get in Debian, feel free to "
#~ "submit your application to become a maintainer."
#~ msgstr ""
#~ "Debian では、「メンテナ (maintainer)」と言う用語はパッケージを 作る人を示"
#~ "し、「上流作者 (upstream author)」とはプログラムそれ自身を 作った人を指し"
#~ "ます。そして「上流メンテナ (upstream maintainer)」 というのは Debian の外"
#~ "部で現在プログラムそのものを管理している人のことです。たいていの場合、作者"
#~ "と上流メンテナは同一人物ですが、メンテナすらも同じという場合もあり得ます。"
#~ "もしあなたが何かのプログラムを書いて、それを Debian に入れたいと 考えたな"
#~ "らば、Debian プロジェクトに参加してメンテナになってください。"
# type: <p></p>
#~ msgid ""
#~ "If the package already exists, well, install it! :-) If it happens to be "
#~ "orphaned -- if its maintainer is set to \"Debian QA Group\", you may be "
#~ "able to pick it up."
#~ msgstr ""
#~ "パッケージが既にあるなら、えーっと、インストールしましょう! :-) パッケージ"
#~ "がみなしごなら (メンテナが \"Debian QA Group\" なら)、拾い上げることもでき"
#~ "るかもしれません。"
# type: <p></p>
#~ msgid ""
#~ "Then you should consult the Debian web site at <url id=\"http://www."
#~ "debian.org/devel/wnpp/\" name=\"Work-Needing and Prospective Packages\"> "
#~ "and its linked pages to check the latest adoption/orphan status of the "
#~ "package."
#~ msgstr ""
#~ "Debian のウェブサイトにある <url id=\"http://www.debian.org/devel/wnpp/\" "
#~ "name=\"作業が望まれるパッケージ\"> とそこからリンクしているページを調べ、"
#~ "パッケージの養子 (adoption)/みなしご (orphan) の最新状態をチェックしてくだ"
#~ "さい。"
# type: <p></p>
#~ msgid ""
#~ "The process varies from program to program, but a lot of modern programs "
#~ "come with a `configure' script that configures the source under your "
#~ "system and makes sure that your system is in condition to compile it. "
#~ "After configuring with `./configure`, programs are usually compiled with "
#~ "`make`. Some of them support `make check`, to run included self-checks. "
#~ "Installation in destination directories is usually done with `make "
#~ "install`."
#~ msgstr ""
#~ "プログラムによって構築の手順は代わりますが、最近のプログラムだと "
#~ "「configure」スクリプトが付属していることがあります。 このスクリプトはソー"
#~ "スをあなたのシステムに合わせて設定し、 このままコンパイルできるかどうかを"
#~ "チェックします。 たいていのプログラムは「./configure」を実行してソースコー"
#~ "ドの 設定を行なった後、「make」を実行してコンパイルします。 「make check」"
#~ "でプログラムのソースツリーに含まれている 自己診断テストを実行できるものも"
#~ "あります。 目的のディレクトリへのインストールは一般に「make install」に"
#~ "よって 実行されます。"
# type: <p></p>
#~ msgid ""
#~ "Also check for the exact version of the program (to be included in the "
#~ "package version). If that piece of software is not numbered with versions "
#~ "like X.Y.Z, but with some kind of date, feel free to use that date as the "
#~ "version number, prepended with a \"0.0.\" (just in case upstream people "
#~ "one day decide to release a nice version like 1.0). So, if the release or "
#~ "snapshot date was 19th of December, 1998, you can use the version string "
#~ "of 0.0.19981219."
#~ msgstr ""
#~ "プログラムの正確なバージョンもチェックしましょう (パッケージのバージョンに"
#~ "含めるために)。 もしそのソフトウェアが「バージョン X.Y.Z」という形式で番号"
#~ "付けされて おらず、ある種の日付で区別されている場合には、バージョン番号と"
#~ "して \"0.0.\" にその日付を続けたものを使ってもいいでしょう (先頭に \"0.0."
#~ "\" を付けておくのは、上流の開発者たちがある日 1.0 のような素敵なバージョン"
#~ "をリリースすると決めた場合に備えての ことです。) つまり、もしリリースの、"
#~ "あるいはスナップショットの 日付が 1998 年の 12 月 19 日だったら、"
#~ "0.0.19981219 としておけば 結構です。"
# type: <heading></heading>
#~ msgid "Initial \"debianization\""
#~ msgstr "最初の「Debian 化」"
# type: <p></p>
#~ msgid "Make sure you're in the program source directory, and issue this:"
#~ msgstr ""
#~ "現在の作業ディレクトリがプログラムのソースディレクトリである ことを確認"
#~ "し、以下を実行してください。"
# type: <example></example>
#~ msgid "  dh_make -e your.maintainer@address -f ../gentoo-0.9.12.tar.gz"
#~ msgstr "  dh_make -e your.maintainer@address -f ../gentoo-0.9.12.tar.gz"
# type: <p></p>
#~ msgid ""
#~ "Of course, replace the string \"your.maintainer@address\" with your e-"
#~ "mail address for inclusion in the changelog entry and other files, and "
#~ "the filename with the name of your original source archive. See <manref "
#~ "section=\"1\" name=\"dh_make\"> for details."
#~ msgstr ""
#~ "もちろん、\"your.maintainer@address\" の部分は changelog の エントリやその"
#~ "他のファイルに記載するための、あなたの電子メール アドレスに置き換えてくさ"
#~ "い。またファイル名はあなたがパッケージ化 しようとしているプログラムのオリ"
#~ "ジナルソースアーカイブの名前に 置き換えてください。 詳細は <manref "
#~ "section=\"1\" name=\"dh_make\"> を参照してください。"
# type: <p></p>
#~ msgid ""
#~ "Some information will come up. It will ask you what sort of package you "
#~ "want to create. Gentoo is a single binary package - it creates only one "
#~ "binary, and thus one .deb file - so we will select the first option, with "
#~ "the `s' key, check the information on the screen and confirm by pressing "
#~ "&lt;enter&gt;."
#~ msgstr ""
#~ "画面にはいろいろ表示されて、あなたが作ろうとしているパッケージ がどういう"
#~ "種類のものか聞いてきます。gentoo は 単一バイナリパッケージ - すなわちパッ"
#~ "ケージに含まれるバイナリが一つだけで、一つの .deb ファイル のみが作成され"
#~ "る - ですので最初の選択肢を選び、「s」キーを押しましょう。 その後、画面に"
#~ "表示される情報をよく読み、確認したら &lt;enter&gt; を押して ください。"
# type: <p></p>
#~ msgid ""
#~ "Please note that you should run <prgn>dh_make</prgn> <strong>only once</"
#~ "strong>, and that it won't behave correctly if you run it again in the "
#~ "same, already \"debianized\", directory. That also means that you will "
#~ "use a different method to release a new revision or a new version of your "
#~ "package in the future. Read more about that later in <ref id=\"update\">"
#~ msgstr ""
#~ "<prgn>dh_make</prgn> の実行は <strong>ただ一度だけ</strong> です。注意し"
#~ "て ください。既に「Debian 化」された同じディレクトリで再び実行すると、 正"
#~ "しく動作しないでしょう。これはつまり、将来パッケージの改訂版や 新バージョ"
#~ "ンをリリースする時には別の方法を使うことになる、という ことでもあります。"
#~ "パッケージの更新作業についての詳細は後で説明する <ref id=\"update\"> の部"
#~ "分を読んでください。"
# type: <p></p>
#~ msgid ""
#~ "Normally, programs install themselves in the /usr/local subdirectories. "
#~ "But, Debian packages must not use that directory, since it is reserved "
#~ "for system administrator's (or user's) private use. This means that you "
#~ "have to take a look at your program's build system, usually starting with "
#~ "the Makefile. This is the script <manref section=\"1\" name=\"make\"> "
#~ "will use to automate building this program. For more details on "
#~ "Makefiles, look in <ref id=\"rules\">."
#~ msgstr ""
#~ "ふつう、プログラムは自分自身を /usr/local 以下のディレクトリに インストー"
#~ "ルするようになっています。しかし、Debian システムにおいては、 /usr/local "
#~ "以下はシステム管理者(とユーザ)の個人的利用のために 予約されているので、"
#~ "Debian パッケージはこのディレクトリを使っては いけないことになっていま"
#~ "す。 このため、(通常は Makefile に始まる) プログラムを生成するための 仕組"
#~ "を調べる必要があります。 Makefile というのは <manref section=\"1\" name="
#~ "\"make\"> がこのプログラムを 自動生成するために利用するスクリプトです。 "
#~ "Makefile についての詳細は、<ref id=\"rules\">を参照してください。"
# type: <p></p>
#~ msgid ""
#~ "Note that if your program uses GNU <manref section=\"1\" name=\"automake"
#~ "\"> and/or <manref section=\"1\" name=\"autoconf\">, meaning the source "
#~ "includes Makefile.am and/or Makefile.in files, respectively, you will "
#~ "need to modify those files. This is because each automake invocation will "
#~ "rewrite Makefile.in's with information generated from Makefile.am's, and "
#~ "each ./configure invocation will do the same with Makefile's, with data "
#~ "from Makefile.in's. Editing Makefile.am files requires some knowledge of "
#~ "automake, which you can read about in the automake info entry, whereas "
#~ "editing Makefile.in files is pretty much the same as editing Makefile "
#~ "files, just pay attention to the variables, i.e. any strings surrounded "
#~ "with `@'s, for example @CFLAGS@ or @LN_S@, which are replaced with actual "
#~ "stuff on each ./configure invocation. Please make sure to read "
#~ "<file>&autotools-dev;</file> before proceeding."
#~ msgstr ""
#~ "もしあなたのプログラムが GNU <manref section=\"1\" name=\"automake\"> や "
#~ "<manref section=\"1\" name=\"autoconf\"> を使っているのでしたら、ソースに "
#~ "それぞれ Makefile.am や Makefile.in などのファイルが含まれているはずで"
#~ "す。 このような場合には、Makefile ではなく、これらのファイルを変更する必要"
#~ "が あります。何故なら、automake を実行すると Makefile.am から生成された 情"
#~ "報によって Makefile.in が上書きされ、また ./configure を実行すると "
#~ "Makefile.in から生成した情報によって Makefile が上書きされるからです。 "
#~ "Makefile.am の編集には、automake の知識がすこしばかり必要になります。 これ"
#~ "については info automake で調べることができます。 一方、Makefile.in の編集"
#~ "は普通の Makefile の編集とほぼ同じです。 ただちょっと変数に気をつければい"
#~ "いだけです。変数というのは例えば @CFLAGS@ や @LN_S@ などのように「@」で囲"
#~ "まれた文字列のことです。 これらの変数は ./configure を実行した際に実際の内"
#~ "容に置き換えられます。前述の <file>&autotools-dev;</file> を読んで確認して"
#~ "ください。"
# type: <heading></heading>
#~ msgid "Installation in a subdirectory"
#~ msgstr "サブディレクトリへのインストール"
# type: <p></p>
#~ msgid ""
#~ "Most of the programs have some way of installing themselves in the "
#~ "existing directory structure of your system, so that their binaries get "
#~ "included in your $PATH, and that you find their documentation and manual "
#~ "pages in common places. However, if you do that, the program will be "
#~ "installed among everything else already on your system. This would make "
#~ "it hard for the packaging tools to figure out which files belong to your "
#~ "package and which don't."
#~ msgstr ""
#~ "ほとんどのプログラムは自分自身をシステムの既存のディレクトリ構造に インス"
#~ "トールするための仕組を備えています。これによってインストールされた バイナ"
#~ "リがユーザの $PATH に含まれるようになり、また附属文書やマニュアル ページを"
#~ "システムに共通の場所で見ることができるわけです。 しかし、もしこのようにし"
#~ "てしまうと、新しくインストールされた プログラムはシステム上に既に存在して"
#~ "いる他のすべてのプログラムの 中に混ざってしまい、パッケージ作成のための"
#~ "ツールにとって あなたのパッケージに含まれるファイルとそうでないファイルを "
#~ "見分けることが非常に難しくなります。"
# type: <p></p>
#~ msgid ""
#~ "Therefore you need to do something else: install the program into a "
#~ "temporary subdirectory from which the maintainer tools will build a "
#~ "working .deb package. Everything that is contained in this directory will "
#~ "be installed on a user's system when they install your package, the only "
#~ "difference is that dpkg will be installing the files in the root "
#~ "directory."
#~ msgstr ""
#~ "従って、何か別の、例えば以下のような方法を採用する必要があります。 プログ"
#~ "ラムを作業用の一時的なサブディレクトリ以下にインストールし、 メンテナー用"
#~ "ツールを使ってそのサブディレクトリの内容をちゃんと 動作する .deb パッケー"
#~ "ジに仕立て上げる、という方法です。 このディレクトリ以下にあるファイルは、"
#~ "パッケージをインストール した際にすべてユーザのシステムへとインストールさ"
#~ "れます。 唯一の違いは dpkg がファイルをルートディレクトリ以下に インストー"
#~ "ルするということだけです。"
# type: <p></p>
#~ msgid ""
#~ "This temporary directory is usually created under your debian/ directory "
#~ "in the unpacked source tree. It is usually called <file>debian/"
#~ "packagename</file>."
#~ msgstr ""
#~ "通常、この一時的なディレクトリは、展開されたソースツリーの 中にある "
#~ "debian/ ディレクトリの下に作成されます。 またこのサブディレクトリは "
#~ "<file>debian/パッケージ名</file> といった名前で呼ばれる ことが多いです。"
# type: <p></p>
#~ msgid ""
#~ "With programs that use GNU autoconf, this will be quite easy. Most such "
#~ "programs have makefiles that are by default set up to allow installation "
#~ "into a random subdirectory while keeping in mind that /usr (for example) "
#~ "is the canonical prefix. When it detects your program uses autoconf, "
#~ "dh_make will set up commands for doing all this automatically, so you "
#~ "might as well skip reading this section. But with other programs, you "
#~ "will most probably have to examine and edit the Makefiles."
#~ msgstr ""
#~ "GNU autoconf を使用するプログラムの場合は、これはとても 簡単な作業です。こ"
#~ "うしたプログラムでは、 (例えば) /usr が本当の置き場所だということを残した"
#~ "ままで、 任意のサブディレクトリにインストールできるような makefile が デ"
#~ "フォルトで作成されます。 あなたのプログラムが autoconf を使っている場合、"
#~ "dh_make が それを検出して、こうした作業を行なうコマンドを自動的に設定 して"
#~ "くれるため、このセクションを読み飛ばしてしまってもいい くらい非常に簡単な"
#~ "作業です。 しかし、その他のプログラムについては、おそらく自分で Makefile "
#~ "を調べて 編集する必要があるでしょう。"
# type: <p></p>
#~ msgid "Here's the relevant part of gentoo's Makefile:"
#~ msgstr "以下は gentoo の Makefile 中の関連する部分です。"
# type: <p></p>
#~ msgid ""
#~ "Edit those files and in those lines replace /usr/local/* with usr/* -- "
#~ "and that's about it. Be careful that you don't mess up the rest of the "
#~ "code! :-)"
#~ msgstr ""
#~ "見つかったファイルを編集して usr/local/ という部分を usr/ に 置き換えてく"
#~ "ださい。これでもう作業完了です。 他の部分をいじってぐちゃぐちゃにしないよ"
#~ "う気をつけましょう。:-)"
# type: <p><example>
#~ msgid "After our change it says:"
#~ msgstr "修正後はこんな風になります。"
# type: <p></p>
#~ msgid ""
#~ "A careful reader will notice that I changed `gentoo' to `gentoo-target' "
#~ "in the `install:' line. That is called an unrelated bug fix :-)"
#~ msgstr ""
#~ "鋭い人なら私が「install:」の行の「gentoo」を「gentoo-target」に変えた のに"
#~ "気づくでしょう。 こういうのをバグフィックスというのですな。:-)"
# type: <p></p>
#~ msgid ""
#~ "So, if there is a line in your program's Makefile (or Makefile.in) that "
#~ "says something like this (and your program doesn't compile):"
#~ msgstr ""
#~ "そんなわけで、もしあなたのプログラムの Makefile (または Makefile.in) に以"
#~ "下のような部分があったら(そしてうまくコンパイルできなかったら)、"
# type: <p></p>
#~ msgid "Change it to this, and it will most probably work:"
#~ msgstr "こういう風に変えましょう。今度はきっと大丈夫です。"
# type: <example></example>
#~ msgid "  LIBS = -lncurses -lsomething -lsomethingelse"
#~ msgstr "  LIBS = -lncurses -lなんとか -lかんとか"
# type: <heading></heading>
#~ msgid "Required stuff under debian/"
#~ msgstr "debian/ ディレクトリ以下に無くてはならないファイル"
# type: <heading></heading>
#~ msgid "`control' file"
#~ msgstr "「control」ファイル"
# type: <p></p>
#~ msgid ""
#~ "This file contains various values which <prgn>dpkg</prgn>, <prgn>dselect</"
#~ "prgn> and other package management tools will use to manage the package."
#~ msgstr ""
#~ "このファイルには <prgn>dpkg</prgn> と <prgn>dselect</prgn> が パッケージを"
#~ "管理するために利用する 様々な情報が記載されています。"
# type: <p></p>
#~ msgid ""
#~ "The 5th line includes the list of packages required to build your "
#~ "package. Some packages like gcc and make are implied, see the "
#~ "<package>build-essential</package> package for details. If some non-"
#~ "standard compiler or other tool is needed to build your package, you "
#~ "should add it to the `Build-Depends' line. Multiple entries are separated "
#~ "with commas; read on for the explanation of binary dependencies to find "
#~ "out more about the syntax of this field."
#~ msgstr ""
#~ "5 行目はあなたのパッケージを生成するために必要となる パッケージのリストで"
#~ "す。例えば gcc や make のように 暗黙の前提としてこのリストに含まれている"
#~ "パッケージも いくつかあります。詳しくは <package>build-essential</"
#~ "package> パッケージをご覧ください。もしあなたのパッケージを 生成するため"
#~ "に、このリストに記載されていない、 標準的でないコンパイラやその他のツール"
#~ "が必要なら、 それらを「Build-Depends」行に追加しておきます。 複数のパッ"
#~ "ケージを記載する場合は、コンマで区切ってください。 このフィールドの書式に"
#~ "ついては、バイナリ依存関係（後述）の ところでもうすこし詳しく説明します。"
# type: <p></p>
#~ msgid ""
#~ "You can also have Build-Depends-Indep, Build-Conflicts and other fields "
#~ "here. This data will be used by the Debian automatic package building "
#~ "software in order to create binary packages for other computer platforms. "
#~ "See the Policy manual for more information about the build-dependencies "
#~ "and the Developers' Reference for more information about these other "
#~ "platforms (architectures) and how to port software to them."
#~ msgstr ""
#~ "ここには Build-Depends-Indep や Build-Conflicts など、 その他のソース依存"
#~ "関係を設定することもできます。 これらの情報は Debian がサポートしている他"
#~ "のコンピュータ プラットフォーム用にバイナリパッケージを作成する 自動パッ"
#~ "ケージ生成プログラムによって利用されます。 ソース依存関係についての詳細は "
#~ "Debian ポリシーマニュアルを、 また Debian がサポートしているプラットフォー"
#~ "ム （アーキテクチャ）と、ソフトウェアをそれらへ移植 （ポート）する方法につ"
#~ "いては開発者リファレンスを 参照してください。"
# type: <example></example>
#~ msgid ""
#~ "  strace -f -o /tmp/log ./configure\n"
#~ "  # or make instead of ./configure, if the package doesn't use autoconf\n"
#~ "  for x in `dpkg -S $(grep open /tmp/log|\\\n"
#~ "                      perl -pe 's!.* open\\(\\\"([^\\\"]*).*!$1!' |\\\n"
#~ "                      grep \"^/\"| sort | uniq|\\\n"
#~ "                      grep -v \"^\\(/tmp\\|/dev\\|/proc\\)\" ) 2>/dev/"
#~ "null|\\\n"
#~ "                      cut -f1 -d\":\"| sort | uniq`; \\\n"
#~ "        do \\\n"
#~ "          echo -n \"$x (>=\" `dpkg -s $x|grep ^Version|cut -f2 -d\":\"` "
#~ "\"), \"; \\\n"
#~ "        done"
#~ msgstr ""
#~ "  strace -f -o /tmp/log ./configure\n"
#~ "  # パッケージが autoconf を使わない場合、./configure の代わりに make\n"
#~ "  for x in `dpkg -S $(grep open /tmp/log|\\\n"
#~ "                      perl -pe 's!.* open\\(\\\"([^\\\"]*).*!$1!' |\\\n"
#~ "                      grep \"^/\"| sort | uniq|\\\n"
#~ "                      grep -v \"^\\(/tmp\\|/dev\\|/proc\\)\" ) 2>/dev/"
#~ "null|\\\n"
#~ "                      cut -f1 -d\":\"| sort | uniq`; \\\n"
#~ "        do \\\n"
#~ "          echo -n \"$x (>=\" `dpkg -s $x|grep ^Version|cut -f2 -d\":\"` "
#~ "\"), \"; \\\n"
#~ "        done"
# type: <p></p>
#~ msgid ""
#~ "This script returns version numbers for all the \"Build-depends\". Please "
#~ "note that versioned dependencies which are fulfilable in stable shouldn't "
#~ "be specified as versioned one in the \"Build-depends\" stanza."
#~ msgstr ""
#~ "このスクリプトは、\"Build-depends\" にあるすべてに対してバージョン番号を返"
#~ "します。安定版ですべて指定できるバージョン付き依存関係は、\"Build-depends"
#~ "\" の中では、バージョン付き依存関係として指定するべきではありません。"
# type: <p></p>
#~ msgid "Depends:"
#~ msgstr "Depends: 「依存」"
# type: <p></p>
#~ msgid ""
#~ "Frontends such as dselect or aptitude will prompt you to install the "
#~ "recommended packages along with your package; dselect will even insist. "
#~ "dpkg and apt-get will ignore this field, though. Use this for packages "
#~ "that are not strictly necessary but are typically used with your program."
#~ msgstr ""
#~ "dselect や aptitude などのフロントエンドの場合、ユーザが インストールのた"
#~ "めにパッケージを選択すると、それが「推奨」 しているパッケージも一緒にイン"
#~ "ストールするよう促します。 さらに dselect の場合には、「Q」または「X」キー"
#~ "で強制的に やめさせるまで、推奨されたパッケージをインストールするよう、 何"
#~ "度でも繰り返し確認を求めてきます。 しかし dpkg と apt-get の場合、「推奨」"
#~ "されたパッケージに 関する情報は無視され、あるパッケージをインストールして"
#~ "も、 そのパッケージが「推奨」しているパッケージについては何の メッセージも"
#~ "表示しませんし、もちろんインストールもしません。 このフィールドには、厳密"
#~ "に言えばあなたのプログラムの動作に 必須ではないけれど、一緒に使うことがほ"
#~ "ぼ前提となっている ようなパッケージを指定しましょう。"
# type: <p></p>
#~ msgid ""
#~ "When a user installs your program, all frontends will likely prompt them "
#~ "to install the suggested packages. dpkg and apt-get won't care. Use this "
#~ "for packages which will work nicely with your program but are not at all "
#~ "necessary."
#~ msgstr ""
#~ "ユーザがパッケージをインストールする際、dselect や aptitude の ようなフロ"
#~ "ントエンドはすべて、選択したパッケージによって「提案」 されているパッケー"
#~ "ジも合わせてインストールするかどうか聞いてきます。 dpkg と apt-get の場合"
#~ "はまったく気にしません。 あなたのパッケージの動作に必要というわけではない"
#~ "が、これがあると もっと便利に使える、というパッケージについては、この指定"
#~ "を使って ください。"
# type: <p></p>
#~ msgid ""
#~ "The last feature you need to know about is ${shlibs:Depends}. After your "
#~ "package has been built and installed into the temporary directory, "
#~ "<manref section=\"1\" name=\"dh_shlibdeps\"> will scan it for binaries "
#~ "and libraries, determine their shared library dependencies and detect "
#~ "which packages they are in, such as libc6 or xlib6g. It'll pass on the "
#~ "list to <manref section=\"1\" name=\"dh_gencontrol\"> which will fill it "
#~ "in the right place, and you won't have to worry about this yourself."
#~ msgstr ""
#~ "最後に、知っておかなければいけない機能をもうひとつ。 それは $(shlibs:"
#~ "Depends) です。パッケージを生成する際に、 その中身が一時的なディレクトリに"
#~ "インストールされた後、 そこに含まれるバイナリとライブラリによって利用され"
#~ "ている 共有ライブラリと、それらの共有ライブラリを含むパッケージ の名前 (例"
#~ "えば libc6 や xlib6g など) が <manref section=\"1\" name=\"dh_shlibdeps"
#~ "\"> によって自動的に 調べられます。そしてその結果は <manref section=\"1\" "
#~ "name=\"dh_gencontrol\"> に渡され、control ファイル中の $(shlibs:Depends) "
#~ "と置換されます。 これを使えば、あなた自身が自分で共有ライブラリを調べて記"
#~ "述する 必要はありません。"
# type: <example></example>
#~ msgid ""
#~ "  1  Source: gentoo\n"
#~ "  2  Section: x11\n"
#~ "  3  Priority: optional\n"
#~ "  4  Maintainer: Josip Rodin &lt;joy-mg@debian.org&gt;\n"
#~ "  5  Build-Depends: debhelper (>> 3.0.0), xlibs-dev, libgtk1.2-dev, "
#~ "libglib1.2-dev\n"
#~ "  6  Standards-Version: 3.5.2\n"
#~ "  7\n"
#~ "  8  Package: gentoo\n"
#~ "  9  Architecture: any\n"
#~ "  10 Depends: ${shlibs:Depends}\n"
#~ "  11 Suggests: file\n"
#~ "  12 Description: fully GUI configurable X file manager using GTK+\n"
#~ "  13  gentoo is a file manager for Linux written from scratch in pure C. "
#~ "It\n"
#~ "  14  uses the GTK+ toolkit for all of its interface needs. gentoo "
#~ "provides\n"
#~ "  15  100% GUI configurability; no need to edit config files by hand and "
#~ "re-\n"
#~ "  16  start the program. gentoo supports identifying the type of various\n"
#~ "  17  files (using extension, regular expressions, or the 'file' "
#~ "command),\n"
#~ "  18  and can display files of different types with different colors and "
#~ "icons.\n"
#~ "  19  .\n"
#~ "  20  gentoo borrows some of its look and feel from the classic Amiga "
#~ "file\n"
#~ "  21  manager \"Directory OPUS\" (written by Jonathan Potter)."
#~ msgstr ""
#~ "  1  Source: gentoo\n"
#~ "  2  Section: x11\n"
#~ "  3  Priority: optional\n"
#~ "  4  Maintainer: Josip Rodin &lt;joy-mg@debian.org&gt;\n"
#~ "  5  Build-Depends: debhelper (>> 3.0.0), xlibs-dev, libgtk1.2-dev, "
#~ "libglib1.2-dev\n"
#~ "  6  Standards-Version: 3.5.2\n"
#~ "  7\n"
#~ "  8  Package: gentoo\n"
#~ "  9  Architecture: any\n"
#~ "  10 Depends: ${shlibs:Depends}\n"
#~ "  11 Suggests: file\n"
#~ "  12 Description: fully GUI configurable X file manager using GTK+\n"
#~ "  13  gentoo is a file manager for Linux written from scratch in pure C. "
#~ "It\n"
#~ "  14  uses the GTK+ toolkit for all of its interface needs. gentoo "
#~ "provides\n"
#~ "  15  100% GUI configurability; no need to edit config files by hand and "
#~ "re-\n"
#~ "  16  start the program. gentoo supports identifying the type of various\n"
#~ "  17  files (using extension, regular expressions, or the 'file' "
#~ "command),\n"
#~ "  18  and can display files of different types with different colors and "
#~ "icons.\n"
#~ "  19  .\n"
#~ "  20  gentoo borrows some of its look and feel from the classic Amiga "
#~ "file\n"
#~ "  21  manager \"Directory OPUS\" (written by Jonathan Potter)."
# type: <heading></heading>
#~ msgid "`copyright' file"
#~ msgstr "「copyright」ファイル"
# type: <example></example>
#~ msgid ""
#~ "  1  This package was debianized by Josip Rodin &lt;joy-mg@debian.org&gt; "
#~ "on\n"
#~ "  2  Wed, 11 Nov 1998 21:02:14 +0100.\n"
#~ "  3\n"
#~ "  4  It was downloaded from &lt;fill in ftp site&gt;\n"
#~ "  5\n"
#~ "  6  Upstream Author(s): &lt;put author(s) name and email here&gt;\n"
#~ "  7\n"
#~ "  8  Copyright:\n"
#~ "  9\n"
#~ "  10 &lt;Must follow here&gt;"
#~ msgstr ""
#~ "  1  This package was debianized by Josip Rodin &lt;joy-mg@debian.org&gt; "
#~ "on\n"
#~ "  2  Wed, 11 Nov 1998 21:02:14 +0100.\n"
#~ "  3\n"
#~ "  4  It was downloaded from &lt;fill in ftp site&gt;\n"
#~ "  5\n"
#~ "  6  Upstream Author(s): &lt;put author(s) name and email here&gt;\n"
#~ "  7\n"
#~ "  8  Copyright:\n"
#~ "  9\n"
#~ "  10 &lt;Must follow here&gt;"
# type: <example></example>
#~ msgid ""
#~ "  1  This package was debianized by Josip Rodin &lt;joy-mg@debian.org&gt; "
#~ "on\n"
#~ "  2  Wed, 11 Nov 1998 21:02:14 +0100.\n"
#~ "  3\n"
#~ "  4  It was downloaded from: ftp://ftp.obsession.se/gentoo/\n"
#~ "  5\n"
#~ "  6  Upstream author: Emil Brink &lt;emil@obsession.se&gt;\n"
#~ "  7\n"
#~ "  8  This software is copyright (c) 1998-99 by Emil Brink, Obsession\n"
#~ "  9  Development.\n"
#~ "  10\n"
#~ "  11 You are free to distribute this software under the terms of\n"
#~ "  12 the GNU General Public License  either version 2 of the License,\n"
#~ "  13 or (at your option) any later version.\n"
#~ "  14 On Debian systems, the complete text of the GNU General Public\n"
#~ "  15 License can be found in the file `/usr/share/common-licenses/GPL-2'."
#~ msgstr ""
#~ "  1  This package was debianized by Josip Rodin &lt;joy-mg@debian.org&gt; "
#~ "on\n"
#~ "  2  Wed, 11 Nov 1998 21:02:14 +0100.\n"
#~ "  3\n"
#~ "  4  It was downloaded from: ftp://ftp.obsession.se/gentoo/\n"
#~ "  5\n"
#~ "  6  Upstream author: Emil Brink &lt;emil@obsession.se&gt;\n"
#~ "  7\n"
#~ "  8  This software is copyright (c) 1998-99 by Emil Brink, Obsession\n"
#~ "  9  Development.\n"
#~ "  10\n"
#~ "  11 You are free to distribute this software under the terms of\n"
#~ "  12 the GNU General Public License  either version 2 of the License,\n"
#~ "  13 or (at your option) any later version.\n"
#~ "  14 On Debian systems, the complete text of the GNU General Public\n"
#~ "  15 License can be found in the file `/usr/share/common-licenses/GPL-2'."
# type: <heading></heading>
#~ msgid "`changelog' file"
#~ msgstr "「changelog」ファイル"
# type: <heading></heading>
#~ msgid "`rules' file"
#~ msgstr "「rules」ファイル"
# type: <p></p>
#~ msgid ""
#~ "Here's (approximately) how the default debian/rules file that dh_make "
#~ "generated for us looks like:"
#~ msgstr ""
#~ "dh_make はデフォルトの debian/rules ファイルとして (おおよそ) 以下のような"
#~ "ひな型を作成します。"
# type: <p></p>
#~ msgid ""
#~ "The meaning of DH_* variables mentioned on lines 8 and 9 should be "
#~ "evident from the short description. For information on DH_COMPAT read the "
#~ "\"Debhelper compatibility levels\" section of the <manref section=\"1\" "
#~ "name=\"debhelper\"> manual page."
#~ msgstr ""
#~ "8 行目から 9 行目にかけて記述されている、変数 DH_* の 意味は、コメントとし"
#~ "て書かれている短い説明を読めばすぐに わかるでしょう。DH_COMPAT についての"
#~ "詳細はマニュアル ページ <manref section=\"1\" name=\"debhelper\"> の "
#~ "「Debhelper compatibility levels (debhelper 互換レベル)」 の項を参照してく"
#~ "ださい。"
# type: <p></p>
#~ msgid ""
#~ "The lines 11 through 16 are a skeleton of support for DEB_BUILD_OPTIONS "
#~ "parameters, described in the Policy section 10.1 \"Binaries\". Basically, "
#~ "these things control if the binaries are to be built with the debugging "
#~ "symbols, and if they should be stripped upon installation. Again, this is "
#~ "just a skeleton, a hint that you should do it. You should check into how "
#~ "the upstream build system handles the inclusion of debugging symbols and "
#~ "stripping on installation and implement this yourself."
#~ msgstr ""
#~ "11 行目から 16 行目までは Debian ポリシー 10.1 節 「Binaries (バイナリ)」"
#~ "に規定されたパラメータ DEB_BUILD_OPTIONS をサポートするための枠組です。 簡"
#~ "単に言えば、このパラメータはバイナリをビルドする際に デバッグシンボルを付"
#~ "加するかどうか、またインストールの 際にそれらをストリップすべきかどうかを"
#~ "制御します。 繰り返しますが、ここに記載されているのは単なる枠組であり、 ど"
#~ "うすべきかという点についてヒントを示しているに過ぎない、 ということに注意"
#~ "してください。 実際にパッケージを開発する際には、デバッグシンボルの付加と "
#~ "インストール時のストリップについて、上流開発者がソフトウェアを 生成する際"
#~ "にどのように扱っているかを調べ、そして自分自身で このパラメータをサポート"
#~ "する仕組を実装してください。"
# type: <p></p>
#~ msgid ""
#~ "Usually you can tell gcc to compile with \"-g\" using the CFLAGS variable "
#~ "-- if that's the case for your package, propagate the variable by "
#~ "<em>appending</em> <tt>CFLAGS=\"$(CFLAGS)\"</tt> to the $(MAKE) "
#~ "invocation in the build rule (see below). Alternatively, if your package "
#~ "uses an autoconf configure script, you can pass it to configure by "
#~ "<em>prepending</em> the above string to the ./configure invocation in the "
#~ "build rule."
#~ msgstr ""
#~ "通常、デバッグシンボルを付加するには、コンパイルの際に CFLAGS 変数を使っ"
#~ "て gcc に「-g」オプションを指定します。 もしあなたのパッケージもこの方法で"
#~ "うまくいくようなら、 build ルール (後述) の中で $(MAKE) を実行している箇所"
#~ "に <tt>CFLAGS=\"$(CFLAGS)\"</tt> を <em>追加</em>して、この 変数を指定しま"
#~ "す。もしあなたのパッケージが autoconf に よる configure スクリプトを利用し"
#~ "ているなら、別の方法と して build ルールの中で ./configure を実行する際に "
#~ "上記の <tt>CFLAGS=\"$(CFLAGS)\"</tt> を <em>前置き</em> して configure ス"
#~ "クリプトに渡すこともできます。"
# type: <p></p>
#~ msgid ""
#~ "As for the stripping, programs are commonly configured to install "
#~ "themselves unstripped, and often without an option to change this. "
#~ "Fortunately, you still have <manref section=\"1\" name=\"dh_strip\"> "
#~ "which will detect when the DEB_BUILD_OPTIONS=nostrip flag is set and "
#~ "silently exit."
#~ msgstr ""
#~ "ストリップについて説明すると、たいていのプログラムは ストリップせずにイン"
#~ "ストールされるよう設定されており、 また多くの場合、それを変更するためのオ"
#~ "プションは用意されて いません。そのような場合でも Debian なら大丈夫、あな"
#~ "たは <manref section=\"1\" name=\"dh_strip\"> を利用することができます。 "
#~ "これは DEB_BUILD_OPTIONS=nostrip フラッグが設定されているか どうかを調べ"
#~ "て、このフラッグが有効な場合にはバイナリを ストリップせずにそのまま (エ"
#~ "ラーを出さずに) 終了してくれます。"
# type: <p></p>
#~ msgid ""
#~ "Lines 18 through 26 describe the `build' (and its child `build-stamp') "
#~ "rule, which runs make with the application's own Makefile to compile the "
#~ "program. If your package uses GNU configure utilities to build binaries, "
#~ "please make absolutely sure to read <file>&autotools-dev;</file> . We'll "
#~ "talk about the commented out docbook-to-man example later in <ref id="
#~ "\"manpage\">."
#~ msgstr ""
#~ "18 行目から 26 行目までは「build」 (およびその子供である 「build-stamp」) "
#~ "ルールを記述しており、その中でプログラムを コンパイルするためにアプリケー"
#~ "ション自身の Makefile を実行 しています。バイナリをビルドするため、あなた"
#~ "のパッケージが GNU configure ユーティリティを使用する場合、"
#~ "<file>&autotools-dev;</file> を読んで、絶対に理解してください。コメントと"
#~ "して記載されている docbook-to-man の サンプルについては、後で説明する "
#~ "<ref id=\"manpage\"> の箇所を 参照してください。"
# type: <p></p>
#~ msgid ""
#~ "The `clean' rule, as specified in lines 28-36, cleans up any unneeded "
#~ "binary or auto-generated stuff, left over from building the package. This "
#~ "rule must be working at all times (even when the source tree <em>is</em> "
#~ "cleaned up!), so please use the forcing options (e.g. for rm, that is `-"
#~ "f'), or have make ignore return values (failures) using a `-' in front of "
#~ "the command name."
#~ msgstr ""
#~ "28 行目から 36 行目までに記述されている「clean」ルールは、 パッケージの生"
#~ "成過程によって自動生成されたバイナリその他の 不要なファイルをすべて削除し"
#~ "ます。 このルールはどんな時でも (たとえソースツリーが <em>削除</em> されて"
#~ "しまっている状態でも!) きちんと動作しなければいけません。 このため、強制オ"
#~ "プションを使うか (たとえば rm なら「-f」)、 返り値 (エラー) を無視する (コ"
#~ "マンド名の前に「-」を追加) などの措置を講じてください。"
# type: <p></p>
#~ msgid ""
#~ "The installation process, the `install' rule, starts with line 38. It "
#~ "basically runs the `install' rule from the program's own Makefile, but "
#~ "installs in the <tt>$(CURDIR)/debian/gentoo</tt> directory - this is why "
#~ "we specified $(DESTDIR) as the root installation directory in gentoo's "
#~ "Makefile."
#~ msgstr ""
#~ "インストール方法を記述する「install」ルールは 38 行目から 始まります。この"
#~ "ルールは基本的にプログラム自身の Makefile に 記述されている「install」ルー"
#~ "ルを実行しますが、インストール 先は <tt>$(CURDIR)/debian/gentoo</tt> ディ"
#~ "レクトリです - このために gentoo の Makefile の中で $(DESTDIR) を ルートイ"
#~ "ンストールディレクトリとして指定しておいたのです。"
# type: <p></p>
#~ msgid ""
#~ "As the comments suggest, the `binary-indep' rule, on the line 48, is used "
#~ "to build packages independent of architecture. As we don't have any, "
#~ "nothing will be done there."
#~ msgstr ""
#~ "コメントにもあるように、48 行目の「binary-indep」ルールは アーキテクチャに"
#~ "依存しないパッケージを生成するために使われます。 今回の例はそのようなパッ"
#~ "ケージではないため、ここでするべきことは 何もありません。"
# type: <p></p>
#~ msgid ""
#~ "On to the next rule - `binary-arch', on lines 52 through 79, in which we "
#~ "run several small utilities from the debhelper package that do various "
#~ "operations on your package files to make the package Policy conforming."
#~ msgstr ""
#~ "さあ、次のルール - 「binary-arch」の番です。52 行目から 79 行目に かけて記"
#~ "述されたこのルールでは、あなたのパッケージが Debian ポリシー に適合するよ"
#~ "う、debhelper パッケージに収録されているいくつかの小さな ユーティリティを"
#~ "実行して、これから生成するパッケージ中のファイルに 対してさまざまな操作を"
#~ "行ないます。"
# type: <p></p>
#~ msgid ""
#~ "If your package is an `Architecture: all' one, you need to include all "
#~ "the commands for building the package under the `binary-indep' rule, and "
#~ "leave the `binary-arch' rule empty instead."
#~ msgstr ""
#~ "もしあなたのパッケージが「Architecture: all」なら、パッケージを 生成するた"
#~ "めに必要なコマンドをすべて「binary-indep」ルールの中で 指定し、その代りに"
#~ "「binary-arch」ルールを空にしておかなければ いけません。"
# type: <p><list>
#~ msgid ""
#~ "The names of debhelper programs start with dh_, and the rest is the "
#~ "description of what the particular utility does. It is all quite self-"
#~ "explanatory, but here are some additional explanations:"
#~ msgstr ""
#~ "debhelper プログラムの名前は dh_ で始まり、残りの部分は そのユーティリティ"
#~ "が実際に行なう内容に関する説明となっています。 これらはほとんど読めばすぐ"
#~ "わかるような簡単なものですが、 以下に説明を追加しておきます。"
# type: <p></p>
#~ msgid ""
#~ "<manref section=\"1\" name=\"dh_testdir\"> checks that you are in the "
#~ "right directory (i.e. the top-level source directory),"
#~ msgstr ""
#~ "<manref section=\"1\" name=\"dh_testdir\"> はあなたが正しい ディレクトリ "
#~ "(つまり、ソースディレクトリのトップレベル) に いるかどうかをチェックします"
# type: <p></p>
#~ msgid ""
#~ "<manref section=\"1\" name=\"dh_testroot\"> checks that you have root "
#~ "permissions which is needed for the targets `binary-arch', `binary-indep' "
#~ "and `clean',"
#~ msgstr ""
#~ "<manref section=\"1\" name=\"dh_testroot\"> は「binary-arch」 および"
#~ "「binary-indep」ターゲットと「clean」ルールの実行に必要な ルート権限をあな"
#~ "たが持っているかどうかチェックします。"
# type: <p></p>
#~ msgid ""
#~ "<manref section=\"1\" name=\"dh_installman\"> will copy the manpages into "
#~ "the right place in the destination directory, you just have to tell it "
#~ "where they are, relative to the top-level source directory,"
#~ msgstr ""
#~ "<manref section=\"1\" name=\"dh_installman\"> はマニュアル ページをパッ"
#~ "ケージ作成用ディレクトリの中の適切な場所へコピー します。ただしこれを使う"
#~ "際には、インストールしたいマニュアル ページの場所をソースディレクトリの"
#~ "トップレベルからの相対的な 位置で指定しなければいけません。"
# type: <p></p>
#~ msgid ""
#~ "<manref section=\"1\" name=\"dh_strip\"> strips debugging headers from "
#~ "executable files and libraries, to make them smaller,"
#~ msgstr ""
#~ "<manref section=\"1\" name=\"dh_strip\"> はデバッグ用ヘッダを 実行形式ファ"
#~ "イルおよびライブラリから取り除き、それらのサイズを 小さくします。"
# type: <p></p>
#~ msgid ""
#~ "<manref section=\"1\" name=\"dh_compress\"> compresses man pages and "
#~ "documentation larger than 4 kB with <manref section=\"1\" name=\"gzip\">,"
#~ msgstr ""
#~ "<manref section=\"1\" name=\"dh_compress\"> は マニュアルページとサイズが "
#~ "4 kB より大きな附属文書を <manref section=\"1\" name=\"gzip\"> で圧縮しま"
#~ "す。"
# type: <p></p>
#~ msgid ""
#~ "<manref section=\"1\" name=\"dh_installdeb\"> copies package related "
#~ "files (e.g. the maintainer scripts) to the <file>debian/gentoo/DEBIAN</"
#~ "file> directory,"
#~ msgstr ""
#~ "<manref section=\"1\" name=\"dh_installdeb\"> はパッケージに 関連するファ"
#~ "イル (例えばメンテナースクリプトなど) を <file>debian/gentoo/DEBIAN</"
#~ "file> ディレクトリにコピーします。"
# type: <p></p>
#~ msgid ""
#~ "<manref section=\"1\" name=\"dh_shlibdeps\"> calculates shared libraries "
#~ "dependencies of the libraries and executables,"
#~ msgstr ""
#~ "<manref section=\"1\" name=\"dh_shlibdeps\"> はライブラリや 実行形式ファイ"
#~ "ルが依存している共有ライブラリを判定します。"
# type: <p></p>
#~ msgid ""
#~ "<manref section=\"1\" name=\"dh_gencontrol\"> installs a fine-tuned "
#~ "version of the control file into <file>debian/gentoo/DEBIAN</file>,"
#~ msgstr ""
#~ "<manref section=\"1\" name=\"dh_gencontrol\"> は control ファイルに必要な"
#~ "情報を追加し、 <file>debian/gentoo/DEBIAN</file> へインストールします。"
# type: <p></p>
#~ msgid ""
#~ "<manref section=\"1\" name=\"dh_md5sums\"> generates MD5 checksums for "
#~ "all the files in the package."
#~ msgstr ""
#~ "<manref section=\"1\" name=\"dh_md5sums\"> はパッケージ中の すべてのファイ"
#~ "ルに対して MD5 チェックサムを計算します。"
# type: <p></p>
#~ msgid ""
#~ "For more complete information on what do all these dh_* scripts do, and "
#~ "what their other options are, please read their respective manual pages. "
#~ "There are some other (possibly very useful) dh_* scripts which were not "
#~ "mentioned here. If you need them, read the debhelper documentation."
#~ msgstr ""
#~ "これらすべての dh_* スクリプトが実際にはそれぞれ何をするのか、 また他には"
#~ "どんなオプションが使えるのか、などのさらに詳しい情報に ついては、それぞれ"
#~ "のマニュアルページを参照してください。 また、ここでは取り上げませんでした"
#~ "が、(非常に便利だと思われる) dh_* スクリプトが他にもいくつか用意されていま"
#~ "す。 これらに関しては、必要に応じて debhelper の説明書を読んでみて くださ"
#~ "い。"
# type: <p></p>
#~ msgid ""
#~ "The binary-arch section is the one where you really should comment out or "
#~ "remove any lines that call features you don't need. For gentoo, I'll "
#~ "comment out lines about examples, cron, init, man and info, simply "
#~ "because gentoo doesn't need them. Also, on the line 68, I'll replace "
#~ "`ChangeLog' with `FIXES', because that is the real name of the upstream "
#~ "changelog file."
#~ msgstr ""
#~ "binary-arch セクションの中にある、不要な処理を 実行している行はすべてどん"
#~ "どんコメントにしてしまうか、 あるいは削除してしまうべきです。 gentoo の場"
#~ "合、examples、cron、init、man、そして info に 関する処理は必要ありませんか"
#~ "ら、コメントにしておきます。 また今回の場合、68 行目の「ChangeLog」を"
#~ "「FIXES」に変更して おきます。上流開発者 (upstream) の changelog (変更履"
#~ "歴) ファイルの名前が FIXES だからです。"
# type: <p></p>
#~ msgid ""
#~ "The last two lines (along with any other unexplained ones) are just some "
#~ "more-or-less necessary things, regarding which you can read in the make "
#~ "manual, and the Policy. For now, they're not important to know about."
#~ msgstr ""
#~ "最後の 2 行は (説明しなかった他の行と同様に) 多少なりとも 必要なものです。"
#~ "これらについては make のマニュアルや Debian ポリシーマニュアルの中に説明が"
#~ "あります。 今のところは、必ず知っておかなくてはいけないような重要な項目 と"
#~ "いうわけではありません。"
# type: <p><list>
#~ msgid ""
#~ "You will see that there are several other files in the debian/ "
#~ "subdirectory, most of them with the `ex' suffix or prefix, meaning that "
#~ "they are examples. Take a look at all of them. If you wish or need to use "
#~ "any of those features:"
#~ msgstr ""
#~ "debian/ サブディレクトリには他にもいくつかのファイルが あるはずです。それ"
#~ "らのほとんどには「ex」サフィックス・プレフィックスが付いており、そのファイ"
#~ "ルがただの例、サンプルであることを示しています。これらのファイルにはすべて"
#~ "目を通しておいてください。もしこれらの機能のどれかを使いたいと思ったり、ま"
#~ "た使う必要が生じたりした場合には、以下のようにします。"
# type: <p></p>
#~ msgid "take a look at the related documentation (hint: the Policy Manual),"
#~ msgstr "関連する文書 (ヒント: Debian ポリシーマニュアル) を調べます。"
# type: <p></p>
#~ msgid "rename them to remove the `.ex' suffix if they have one,"
#~ msgstr ""
#~ "「.ex」というサフィックスが付いていたら、それを取り除くよう名前を変更しま"
#~ "す。"
# type: <p></p>
#~ msgid "rename them to remove the `ex.' prefix if they have one,"
#~ msgstr ""
#~ "「ex.」というプレフィックスが付いていたら、それを取り除くよう名前を変更し"
#~ "ます。"
# type: <p></p>
#~ msgid ""
#~ "Some of those files, the commonly used ones, are explained in the "
#~ "following sections."
#~ msgstr ""
#~ "これらのファイルのうち、特によく利用されるものについては、以下のセクション"
#~ "に説明があります。"
# type: <heading></heading>
#~ msgid "README.Debian"
#~ msgstr "README.Debian"
# type: <p></p>
#~ msgid "Since we don't have anything to put there, we'll delete the file."
#~ msgstr ""
#~ "今回は特に何も書き込む必要はありませんから、あとでこのファイルを 削除して"
#~ "おきます。"
# type: <heading></heading>
#~ msgid "conffiles.ex"
#~ msgstr "conffiles.ex"
# type: <p></p>
#~ msgid ""
#~ "The way to do this in a package is to enter the full path to each "
#~ "configuration file (usually in /etc), one per line, in a file called "
#~ "<tt>conffiles</tt>. Gentoo has one conffile, /etc/gentoorc, and we'll "
#~ "enter that in the <tt>conffiles</tt> file."
#~ msgstr ""
#~ "この機能を使うには、パッケージのプログラムが使う各設定ファイル (たいてい /"
#~ "etc にあります) のフルパス名を 1 行にひとつずつ、 <tt>conffiles</tt> とい"
#~ "う名前のファイルに記載します。 gentoo では /etc/gentoorc という名前の設定"
#~ "ファイルが 使われるので、これを <tt>conffiles</tt> ファイルに記載します。"
# type: <p></p>
#~ msgid ""
#~ "If your program has no conffiles, you can safely delete the "
#~ "<tt>conffiles</tt> file from the debian/ directory."
#~ msgstr ""
#~ "もしあなたのプログラムが設定ファイルを一切利用しないので あれば、 debian/ "
#~ "ディレクトリから <tt>conffiles</tt> ファイルを 問題無く削除できます。"
# type: <heading></heading>
#~ msgid "cron.d.ex"
#~ msgstr "cron.d.ex"
# type: <p></p>
#~ msgid ""
#~ "If your package requires regularly scheduled tasks to operate properly, "
#~ "you can use this file to set it up."
#~ msgstr ""
#~ "もしあなたのパッケージがきちんと動作するために、 決められたスケジュールに"
#~ "従った定期的な作業の実行を 必要とする場合、このファイルを使ってその作業を "
#~ "cron に登録できます。"
# type: <heading></heading>
#~ msgid "dirs"
#~ msgstr "dirs"
# type: <p></p>
#~ msgid "By default, it looks like this:"
#~ msgstr "デフォルトでは、こんな風になっています:"
# type: <p></p>
#~ msgid ""
#~ "Note that the preceding slash is not included. We would have normally "
#~ "changed it to look like this:"
#~ msgstr ""
#~ "一番最初のスラッシュが含まれない事に注意してください。 たいていの場合、こ"
#~ "のファイルの内容は以下のように変更して おけば問題無いでしょう。"
# type: <example></example>
#~ msgid ""
#~ "  usr/bin\n"
#~ "  usr/man/man1"
#~ msgstr ""
#~ "  usr/bin\n"
#~ "  usr/share/man/man1"
# type: <p></p>
#~ msgid ""
#~ "but those directories are already created in the Makefile, so we won't "
#~ "need this file, and we will instead delete it."
#~ msgstr ""
#~ "ただ今回の場合、これらのディレクトリは Makefile 中の 処理によって既に作成"
#~ "されているので、このファイルは 不要であり、そのまま削除してしまうことにし"
#~ "ます。"
# type: <heading></heading>
#~ msgid "docs"
#~ msgstr "docs"
# type: <p></p>
#~ msgid ""
#~ "We can also remove this file and instead list these files on the "
#~ "<tt>dh_installdocs</tt> command line in the <tt>rules</tt> file, like "
#~ "this:"
#~ msgstr ""
#~ "別の方法として、このファイルを削除し、その代わり以下のように <tt>rules</"
#~ "tt> ファイルにある <tt>dh_installdocs</tt> コマンド行の中で これらの文書"
#~ "ファイル名を指定することも可能です。"
# type: <example></example>
#~ msgid ""
#~ "        dh_installdocs BUGS CONFIG-CHANGES CREDITS ONEWS README \\\n"
#~ "                       README.gtkrc TODO"
#~ msgstr ""
#~ "        dh_installdocs BUGS CONFIG-CHANGES CREDITS ONEWS README \\\n"
#~ "                       README.gtkrc TODO"
# type: <p></p>
#~ msgid ""
#~ "How ever unlikely it may seem, you may not have any such files in your "
#~ "package's sources. In that case you can safely remove this file. But "
#~ "don't remove the <tt>dh_installdocs</tt> invocation from the <tt>rules</"
#~ "tt> file because that's used to install the <tt>copyright</tt> file and "
#~ "other things."
#~ msgstr ""
#~ "ありそうにないことですが、パッケージのソース中にここで 指定したくなるよう"
#~ "な附属文書がまったく存在しないという 場合もあるかもしれません。 そうした場"
#~ "合には、この docs ファイルを削除しても問題無い でしょう。 ただし、その場合"
#~ "にも <tt>rules</tt> ファイルの中の <tt>dh_installdocs</tt> コマンドを削除"
#~ "してはいけません。 このコマンドは <tt>copyright</tt> ファイルやその他の"
#~ "ファイルを インストールするために利用されます。"
# type: <heading></heading>
#~ msgid "emacsen-*.ex"
#~ msgstr "emacsen-*.ex"
# type: <heading></heading>
#~ msgid "init.d.ex"
#~ msgstr "init.d.ex"
# type: <p></p>
#~ msgid ""
#~ "This is a fairly generic skeleton file for an <file>/etc/init.d/</file> "
#~ "script, so you'll likely have to edit it, a lot. It gets installed into "
#~ "the temporary directory by <manref section=\"1\" name=\"dh_installinit\">."
#~ msgstr ""
#~ "これは <file>/etc/init.d/</file> スクリプトの 非常に一般的なほんの骨組みの"
#~ "ファイルにすぎません。 もしこれを使いたければ、内容を大幅に変更する必要が "
#~ "あるでしょう。このファイルは <manref section=\"1\" name=\"dh_installinit"
#~ "\"> によってパッケージ作成用の一時的なディレクトリに インストールされま"
#~ "す。"
# type: <heading></heading>
#~ msgid "manpage.1.ex, manpage.sgml.ex, manpage.xml.ex"
#~ msgstr "manpage.1.ex, manpage.sgml.ex, manpage.xml.ex"
# type: <p></p>
#~ msgid ""
#~ "Your program(s) should have a manual page. If they don't, each of these "
#~ "files is a template that you can fill out."
#~ msgstr ""
#~ "すべてのプログラムは man ページを持つべきです。 もし無かったら、これらのひ"
#~ "な型のどれかを利用して、 必要な情報を追加すれば作成できます。"
# type: <p></p>
#~ msgid ""
#~ "remove the comment from the docbook-to-man invocation in the `build' "
#~ "target of your <tt>rules</tt> file"
#~ msgstr ""
#~ "<tt>rules</tt> ファイルに記述された「build」ターゲットの中で、docbook-to-"
#~ "man を実行している行を有効化"
# type: <p><list>
#~ msgid "Alternatively:"
#~ msgstr "もうひとつの方法は以下の通りです。"
# type: <p></p>
#~ msgid ""
#~ "add the <tt>docbook2x</tt> package to the <tt>Build-Depends</tt> line in "
#~ "the <tt>control</tt> file"
#~ msgstr ""
#~ "<tt>control</tt> ファイルの <tt>Build-Depends</tt> 行へ <tt>docbook2x</"
#~ "tt> を追加"
# type: <example></example>
#~ msgid "docbook2man debian/manpage.xml"
#~ msgstr "docbook2man debian/manpage.xml"
# type: <p></p>
#~ msgid ""
#~ "Rename the source file(s) to something like <tt>gentoo.1.xml</tt> or so "
#~ "and check the package documentations for stylesheet parameters and output "
#~ "options."
#~ msgstr ""
#~ "ソースファイルの名前を、<tt>gentoo.1.xml</tt> のように変更し、スタイルシー"
#~ "トのパラメータや出力オプションを、パッケージのドキュメントで確認してくださ"
#~ "い。"
# type: <heading></heading>
#~ msgid "menu.ex"
#~ msgstr "menu.ex"
# type: <p></p>
#~ msgid "Now we'll change the menu entry to this:"
#~ msgstr "さて、今回はこんな風に menu エントリを変えましょう。"
# type: <heading></heading>
#~ msgid "watch.ex"
#~ msgstr "watch.ex"
# type: <p></p>
#~ msgid ""
#~ "This file is used to configure the <manref section=\"1\" name=\"uscan\"> "
#~ "and <manref section=\"1\" name=\"uupdate\"> programs (in the "
#~ "<package>devscripts</package> package). These are used to watch the site "
#~ "you got the original source from."
#~ msgstr ""
#~ "このファイルを <manref section=\"1\" name=\"uscan\"> および <manref "
#~ "section=\"1\" name=\"uupdate\"> プログラム (これらは <package>devscripts</"
#~ "package> パッケージにあります) と 合わせて使うことによって、オリジナルソー"
#~ "スを入手したサイトの 更新をチェックすることができます。"
# type: <p></p>
#~ msgid ""
#~ "Hint: connect to the Internet, and try running \"uscan\" in the program "
#~ "directory once you create the file. And read the manuals! :)"
#~ msgstr ""
#~ "ヒント:このファイルを作成したら、インターネットに接続し、ソースを 展開した"
#~ "ディレクトリの中から「uscan」を試しに実行してみるとよいでしょう。 それか"
#~ "ら、マニュアルページも読んでみてください。:)"
# type: <heading></heading>
#~ msgid "ex.package.doc-base"
#~ msgstr "ex.package.doc-base"
# type: <heading></heading>
#~ msgid "postinst.ex, preinst.ex, postrm.ex, prerm.ex"
#~ msgstr "postinst.ex, preinst.ex, postrm.ex, prerm.ex"
# type: <p></p>
#~ msgid ""
#~ "These files are called maintainer scripts. They are scripts which are put "
#~ "in the control area of the package and run by <prgn>dpkg</prgn> when your "
#~ "package is installed, upgraded or removed."
#~ msgstr ""
#~ "これらのファイルはメンテナスクリプトと呼ばれるもので、 パッケージの制御"
#~ "パートに収録され、 あなたのパッケージがインストール、アップグレード、ある"
#~ "いは 削除されるときに dpkg によって実行されます。"
# type: <p></p>
#~ msgid "Enter the program's main directory and then issue this command:"
#~ msgstr ""
#~ "プログラムのメインディレクトリに移動して 以下のコマンドを実行してください:"
# type: <p></p>
#~ msgid ""
#~ "build the binary package (debian/rules binary), using <prgn>fakeroot</"
#~ "prgn>"
#~ msgstr ""
#~ "<prgn>fakeroot</prgn> を使ったバイナリパッケージの構築 (debian/rules "
#~ "binary)"
# type: <p></p>
#~ msgid "<em>gentoo_0.9.12-1.diff.gz</em>"
#~ msgstr "<em>gentoo_0.9.12-1.diff.gz</em>"
# type: <p></p>
#~ msgid ""
#~ "This compressed file contains each and every addition you made to the "
#~ "original source code, in the form known as \"unified diff\". It is made "
#~ "and used by <manref section=\"1\" name=\"dpkg-source\">. Warning: if you "
#~ "don't name the original tarball packagename_version.orig.tar.gz, "
#~ "<prgn>dpkg-source</prgn> will fail to generate the .diff.gz file properly!"
#~ msgstr ""
#~ "この圧縮されたファイルにはあなたがオリジナルのソースコードに 行なったすべ"
#~ "ての変更や追加などの情報が「unified diff」の形式で 含まれています。これは "
#~ "<manref section=\"1\" name=\"dpkg-source\"> によって生成され、また利用され"
#~ "ます。警告: もしオリジナルの tar アーカイブの名前を packagename_version."
#~ "orig.tar.gz の形式に 変更していなかった場合、<prgn>dpkg-source</prgn> を"
#~ "使って 適切な .diff.gz ファイルを作成できなくなります!"
# type: </example></p>
#~ msgid ""
#~ "With these, you can build package always with your GPG key and avoid "
#~ "including undesired components. (This is good for sponsoring too.) For "
#~ "example, cleaning source and rebuilding package from a user account is as "
#~ "simple as:"
#~ msgstr ""
#~ "これにより、常に自分の GPG 鍵を使用し、必要のないコンポーネントを含まずに"
#~ "パッケージを構築できます (これはスポンサーをする方にとってもありがたいで"
#~ "す)。たとえば、ユーザのアカウントからソースを掃除し、パッケージを再構築す"
#~ "るには、単純に以下のようになります。"
# type: <p></p>
#~ msgid ""
#~ "Several methods for the patch set maintenance have been proposed and are "
#~ "in use with Debian packages. The <prgn>dpatch</prgn> and <prgn>quilt</"
#~ "prgn> systems are two of the simplest of such patch maintenance systems "
#~ "proposed. Other ones are dbs, cdbs, etc."
#~ msgstr ""
#~ "パッチセットをメンテナンスする方法は、いくつか案があり、Debian のパッケー"
#~ "ジで利用できます。<prgn>dpatch</prgn> システムと <prgn>quilt</prgn> システ"
#~ "ムが、お勧めのパッチメンテナンスシステムの中でもっともシンプルです。他に"
#~ "は、dbs や cdbs があります。"
# type: <p></p>
#~ msgid ""
#~ "In the case of <prgn>dpatch</prgn>, add header using `<tt>dpatch patch-"
#~ "template</tt>' command."
#~ msgstr ""
#~ "<prgn>dpatch</prgn> の場合、`<tt>dpatch patch-template</tt>' コマンドを使"
#~ "用してヘッダを追加してください。"
# type: <p></p>
#~ msgid ""
#~ "Add the patch filenames to <file>debian/patches/00list</file> (for "
#~ "<prgn>dpatch</prgn>) or <file>debian/patches/series</file> (for "
#~ "<prgn>quilt</prgn>)."
#~ msgstr ""
#~ "パッチファイル名を <file>debian/patches/00list</file> (<prgn>dpatch</"
#~ "prgn> の場合) や、<file>debian/patches/series</file> (<prgn>quilt</prgn> "
#~ "の場合) に追加してください。"
# type: <p></p>
#~ msgid ""
#~ "Run <manref section=\"1\" name=\"lintian\"> on your .changes file; these "
#~ "programs will check for many common packaging errors. The commands are:"
#~ msgstr ""
#~ "<manref section=\"1\" name=\"lintian\"> をあなたの .changes ファイルに か"
#~ "けてみましょう。このプログラムはパッケージ化におけるよくある間違いを "
#~ "チェックしてくれます。実行するコマンドは以下のとおりです。"
# type: <p></p>
#~ msgid ""
#~ "Of course, replace the filename with the name of the .changes file "
#~ "generated for your package. If it appears that there are some errors "
#~ "(lines beginning with E:), read the explanation (the N: lines), correct "
#~ "mistakes, and rebuild as described in <ref id=\"completebuild\">. If "
#~ "there are lines that begin with W:, those are warnings, so tune the "
#~ "package or verify that the warnings are spurious (and make Lintian "
#~ "overrides; see the documentation for details)."
#~ msgstr ""
#~ "もちろん、ファイル名はあなたのパッケージのために生成された .changes ファイ"
#~ "ルの名前に置き換えてください。 もしエラー (E: で始まる行) が表示されたな"
#~ "ら、説明 (N: の行) を 読んで誤りを訂正し、<ref id=\"completebuild\"> に記"
#~ "述されているように パッケージを完全に再構築してください。 もし W: で始まる"
#~ "行、つまり警告が表示されたら、パッケージを 調整するか、あるいはその警告が"
#~ "間違いであることを確認してください。 (そして Lintian の override ファイル"
#~ "に記載するための設定を 作成してください。この詳細については文書を参照して"
#~ "ください。)"
# type: <p></p>
#~ msgid ""
#~ "Install the package to test it yourself, e.g. using the <manref section="
#~ "\"1\" name=\"debi\"> command as root. Try to install and run it on "
#~ "machines other than your own and watch closely for any warnings or errors "
#~ "both during the installation and while the program is being run."
#~ msgstr ""
#~ "自分でパッケージをインストールして試してみましょう。 例えば、<manref "
#~ "section=\"1\" name=\"debi\"> コマンドを root で 実行してみましょう。 自分"
#~ "の環境以外のマシンでも試してみて、パッケージをインストール する際やプログ"
#~ "ラムを実行する際に警告やエラーが発生しないか 注意深く観察してみてくださ"
#~ "い。"
# type: <example></example>
#~ msgid ""
#~ "root # pbuilder create # if second time, pbuilder update\n"
#~ "root # pbuilder build foo.dsc"
#~ msgstr ""
#~ "root # pbuilder create # if second time, pbuilder update\n"
#~ "root # pbuilder build foo.dsc"
# type: <example></example>
#~ msgid "$ sudo pbuilder update --distribution sarge --override-config"
#~ msgstr "$ sudo pbuilder update --distribution sarge --override-config"
# type: <example></example>
#~ msgid ""
#~ "  package config;\n"
#~ "\n"
#~ "  $default_host = \"anonymous-ftp-master\";\n"
#~ "\n"
#~ "  $cfg{'anonymous-ftp-master'} = {\n"
#~ "        fqdn => \"ftp-master.debian.org\",\n"
#~ "        method => \"ftp\",\n"
#~ "        incoming => \"/pub/UploadQueue/\",\n"
#~ "        # files pass on to dinstall on ftp-master which sends emails "
#~ "itself\n"
#~ "        dinstall_runs => 1,\n"
#~ "  };\n"
#~ "\n"
#~ "  1;"
#~ msgstr ""
#~ "  package config;\n"
#~ "\n"
#~ "  $default_host = \"anonymous-ftp-master\";\n"
#~ "\n"
#~ "  $cfg{'anonymous-ftp-master'} = {\n"
#~ "        fqdn => \"ftp-master.debian.org\",\n"
#~ "        method => \"ftp\",\n"
#~ "        incoming => \"/pub/UploadQueue/\",\n"
#~ "        # files pass on to dinstall on ftp-master which sends emails "
#~ "itself\n"
#~ "        dinstall_runs => 1,\n"
#~ "  };\n"
#~ "\n"
#~ "  1;"
# type: <p></p>
#~ msgid "Then connect to your Internet provider, and issue this command:"
#~ msgstr ""
#~ "さてそれでは、インターネットプロバイダに接続し、 以下のコマンドを実行して"
#~ "ください:"
# type: <heading></heading>
#~ msgid "Uploading to a private archive"
#~ msgstr "パッケージをアップロードする"
# type: <example></example>
#~ msgid ""
#~ "# Developer account\n"
#~ "$cfg{'<var>target_name</var>'} = {\n"
#~ "        fqdn =&gt; \"people.debian.org\",\n"
#~ "        method =&gt; \"scpb\",\n"
#~ "        incoming =&gt; \"/home/<var>account_name</var>/public_html/"
#~ "package/\",\n"
#~ "        # I do not need to announce\n"
#~ "        dinstall_runs =&gt; 1,\n"
#~ "};\n"
#~ "$cfg{'<var>target_name</var>'}{preupload}{'changes'} = \"\n"
#~ "        echo 'mkdir -p public_html/package' | ssh people.debian.org  "
#~ "2&gt;/dev/null ; \n"
#~ "        echo 'Package directory created!'\";\n"
#~ "\n"
#~ "$cfg{'<var>target_name</var>'}{postupload}{'changes'} = \"\n"
#~ "        echo 'cd public_html/package ;\n"
#~ "        dpkg-scanpackages . /dev/null &gt;Packages || true ;\n"
#~ "        dpkg-scansources . /dev/null &gt;Sources || true ;\n"
#~ "        gzip -c Packages >Packages.gz ;\n"
#~ "        gzip -c Sources &gt;Sources.gz ' | ssh people.debian.org  2&gt;/"
#~ "dev/null ;\n"
#~ "        echo 'Package archive created!'\";"
#~ msgstr ""
#~ "# Developer account\n"
#~ "$cfg{'<var>target_name</var>'} = {\n"
#~ "        fqdn =&gt; \"people.debian.org\",\n"
#~ "        method =&gt; \"scpb\",\n"
#~ "        incoming =&gt; \"/home/<var>account_name</var>/public_html/"
#~ "package/\",\n"
#~ "        # I do not need to announce\n"
#~ "        dinstall_runs =&gt; 1,\n"
#~ "};\n"
#~ "$cfg{'<var>target_name</var>'}{preupload}{'changes'} = \"\n"
#~ "        echo 'mkdir -p public_html/package' | ssh people.debian.org  "
#~ "2&gt;/dev/null ; \n"
#~ "        echo 'Package directory created!'\";\n"
#~ "\n"
#~ "$cfg{'<var>target_name</var>'}{postupload}{'changes'} = \"\n"
#~ "        echo 'cd public_html/package ;\n"
#~ "        dpkg-scanpackages . /dev/null &gt;Packages || true ;\n"
#~ "        dpkg-scansources . /dev/null &gt;Sources || true ;\n"
#~ "        gzip -c Packages >Packages.gz ;\n"
#~ "        gzip -c Sources &gt;Sources.gz ' | ssh people.debian.org  2&gt;/"
#~ "dev/null ;\n"
#~ "        echo 'Package archive created!'\";"
# type: <p></p>
#~ msgid ""
#~ "Tip: how to easily get the date in required format? Use `<tt>822-date</"
#~ "tt>', or `<tt>date -R</tt>'."
#~ msgstr ""
#~ "ヒント: 指定された形式で日付情報を取得する方法は ? 答: 「<tt>822-date</"
#~ "tt>」または「<tt>date -R</tt>」を使いましょう。"
# type: <p><list>
#~ msgid ""
#~ "Now let's consider a different, slightly more complicated situation - a "
#~ "new upstream version was released, and of course you want it packaged. "
#~ "You need to do the following:"
#~ msgstr ""
#~ "さて、ではまた別の、もうすこし複雑な状況を考えてみましょう。 新しい上流の"
#~ "バージョン (new upstream version) がリリースされ、 もちろんあなたはそれを"
#~ "パッケージ化したい、という状況です。 この場合、以下を実行する必要がありま"
#~ "す。"
# type: <p></p>
#~ msgid ""
#~ "Download the new sources and put the tarball (e.g. named "
#~ "`<file>gentoo-0.9.13.tar.gz</file>') in the directory above the old "
#~ "source tree (e.g. <file>~/gentoo/</file>)."
#~ msgstr ""
#~ "新しいソースをダウンロードして (例えば「<file>gentoo-0.9.13.tar.gz</"
#~ "file>」 という名前で) tarball にまとめ、古いソースツリーの上のディレクト"
#~ "リ (例えば <file>~/gentoo/</file>) にそれを置きます。"
# type: <p><example>
#~ msgid "Enter the old source directory, and run:"
#~ msgstr "古いソースディレクトリに移動し、以下を実行:"
# type: <example></example>
#~ msgid "  uupdate -u gentoo-0.9.13.tar.gz"
#~ msgstr "  uupdate -u gentoo-0.9.13.tar.gz"
# type: <p></p>
#~ msgid ""
#~ "Of course, replace this file name with the name of your program's new "
#~ "source archive. <manref section=\"1\" name=\"uupdate\"> will properly "
#~ "rename that tarball, try to apply all the changes from your previous "
#~ "<file>.diff.gz</file> file, and update the new <file>debian/changelog</"
#~ "file> file."
#~ msgstr ""
#~ "もちろん、このファイル名はあなたのプログラムのソースアーカイブ名で 置き換"
#~ "えてください。<manref section=\"1\" name=\"uupdate\"> は tarball の名前を"
#~ "適切に変更し、以前の <file>.diff.gz</file> ファイルにある変更をすべて 適用"
#~ "して新しい <file>debian/changelog</file> ファイルの内容を更新します。"
# type: <p></p>
#~ msgid ""
#~ "Note that if you set up a `<file>debian/watch</file>' file as described "
#~ "in <ref id=\"watch\">, you can run <manref section=\"1\" name=\"uscan\"> "
#~ "to automagically look for revised sources, download them, and run "
#~ "<prgn>uupdate</prgn>."
#~ msgstr ""
#~ "もし「<file>debian/watch</file>」ファイルを <ref id=\"watch\"> で 説明した"
#~ "ように設定していれば、 <manref section=\"1\" name=\"uscan\"> を実行して、"
#~ "改訂されたソースを探し、ダウンロードし、 <prgn>uupdate</prgn> を実行、とい"
#~ "う一連の手順を (魔法のように) 自動的に行なわせることができます。"
# type: <heading></heading>
#~ msgid "New upstream release (realistic)"
#~ msgstr "上流ソフトウェアの更新 (New upstream release) 現実編"
# type: <p><list compact="compact">
#~ msgid "Verify changes in upstream source"
#~ msgstr "上流ソースの変更を検証"
# type: <p></p>
#~ msgid ""
#~ "Do a `<tt>diff -urN</tt>' between the old and new upstream sources to try "
#~ "to get a feel for the scope of the changes, where work is actively being "
#~ "done (and thus where new bugs may appear), and also keep an eye out for "
#~ "anything suspicious."
#~ msgstr ""
#~ "新旧の上流ソースに対して `<tt>diff -urN</tt>' を行い、どこに作業が行われ"
#~ "た (どこにバグがあり得る) のか、変更のポイントをつかんでください。また、な"
#~ "にか不審なことがないかそれとなく探ってください。"
# type: <p><list compact="compact">
#~ msgid "Port the old Debian packaging to the new version."
#~ msgstr "旧 Debian パッケージを新版へ移植します。"
# type: <p></p>
#~ msgid ""
#~ "`<tt>zcat <var>/path/to/</var>&lt;packagename&gt;_&lt;old-version&gt;."
#~ "diff.gz | patch -p1</tt>' command,"
#~ msgstr ""
#~ "`<tt>zcat <var>/path/to/</var>&lt;packagename&gt;_&lt;old-version&gt;."
#~ "diff.gz | patch -p1</tt>' コマンド"
# type: <p></p>
#~ msgid "`<prgn>uupdate</prgn>' command,"
#~ msgstr "`<prgn>uupdate</prgn>' コマンド"
# type: <p><list compact="compact">
#~ msgid "Verify new packages are built correctly."
#~ msgstr "正常にパッケージ構築が完了したら検証してください。"
# type: <p></p>
#~ msgid "Perform <ref id=\"checkit\">."
#~ msgstr "<ref id=\"checkit\"> を実行してください。"
# type: <p></p>
#~ msgid "Perform <ref id=\"upgrading\">."
#~ msgstr "<ref id=\"upgrading\"> を実行してください。"
# type: <p><list compact="compact">
#~ msgid "CVS"
#~ msgstr "CVS"
# type: <p></p>
#~ msgid "<package>cvs-buildpackage</package>"
#~ msgstr "<package>cvs-buildpackage</package>"
# type: <p><list compact="compact">
#~ msgid "Subversion"
#~ msgstr "Subversion"
# type: <p></p>
#~ msgid "<package>svn-buildpackage</package>"
#~ msgstr "<package>svn-buildpackage</package>"
# type: <p><list compact="compact">
#~ msgid "Git (git-core)"
#~ msgstr "Git (git-core)"
# type: <p></p>
#~ msgid "<package>git-buildpackage</package>"
#~ msgstr "<package>git-buildpackage</package>"
# type: <p><list>
#~ msgid ""
#~ "When you build a new version of the package, you should do the following "
#~ "to verify that the package can be safely upgraded:"
#~ msgstr ""
#~ "パッケージの新しいバージョンを構築したら、 (それが New Debian revision で"
#~ "も New upstream release でも) 古いパッケージから安全にアップグレードできる"
#~ "ことを 検証するために、以下を実行してください。"
# type: <p></p>
#~ msgid "downgrade back again and then remove it,"
#~ msgstr "再び旧バージョンにダウングレードして、削除する"
# type: <p></p>
#~ msgid "remove it and then reinstall it again,"
#~ msgstr "いったん削除して、またインストールする"
# type: <heading></heading>
#~ msgid "Examples"
#~ msgstr "サンプル"
# type: <p></p>
#~ msgid ""
#~ "Here we package the upstream tarball <var>gentoo-1.0.2</var>.tar.gz and "
#~ "uploading all the packages to the <tt><var>nm_target</var></tt>."
#~ msgstr ""
#~ "ここでは <var>gentoo-1.0.2</var>.tar.gz の上流 tarball をパッケージ化し、"
#~ "パッケージをすべて、<tt><var>nm_target</var></tt> にアップロードしましょ"
#~ "う。"
# type: <heading></heading>
#~ msgid "Simple packaging example"
#~ msgstr "シンプルなパッケージのサンプル"
# type: <example></example>
#~ msgid ""
#~ "$ mkdir -p <var>/path/to</var> # new empty directory\n"
#~ "$ cd <var>/path/to</var>\n"
#~ "$ tar -xvzf <var>/path/from/gentoo-1.0.2</var>.tar.gz # get source\n"
#~ "$ cd <var>gentoo-1.0.2</var>\n"
#~ "$ dh_make -e <var>name@domain.dom</var> -f <var>/path/from/gentoo-1.0.2</"
#~ "var>.tar.gz\n"
#~ "... Answer prompts.\n"
#~ "... Fix source tree\n"
#~ "... If it is a script package, set debian/control to \"Architecture: all"
#~ "\"\n"
#~ "... Do not erase ../<var>gentoo_1.0.2</var>.orig.tar.gz\n"
#~ "$ debuild\n"
#~ "... Make sure no warning happens.\n"
#~ "$ cd ..\n"
#~ "$ dupload -t <var>nm_target</var> <var>gentoo_1.0.2-1</var>_i386.changes"
#~ msgstr ""
#~ "$ mkdir -p <var>/path/to</var> # new empty directory\n"
#~ "$ cd <var>/path/to</var>\n"
#~ "$ tar -xvzf <var>/path/from/gentoo-1.0.2</var>.tar.gz # get source\n"
#~ "$ cd <var>gentoo-1.0.2</var>\n"
#~ "$ dh_make -e <var>name@domain.dom</var> -f <var>/path/from/gentoo-1.0.2</"
#~ "var>.tar.gz\n"
#~ "... Answer prompts.\n"
#~ "... Fix source tree\n"
#~ "... If it is a script package, set debian/control to \"Architecture: all"
#~ "\"\n"
#~ "... Do not erase ../<var>gentoo_1.0.2</var>.orig.tar.gz\n"
#~ "$ debuild\n"
#~ "... Make sure no warning happens.\n"
#~ "$ cd ..\n"
#~ "$ dupload -t <var>nm_target</var> <var>gentoo_1.0.2-1</var>_i386.changes"
# type: <heading></heading>
#~ msgid ""
#~ "Packaging example with the <package>dpatch</package> and the "
#~ "<package>pbuilder</package>"
#~ msgstr ""
#~ "<package>dpatch</package> と <package>pbuilder</package> を用いたパッケー"
#~ "ジ化の例"
# type: <example></example>
#~ msgid ""
#~ "$ mkdir -p <var>/path/to</var> # new empty directory\n"
#~ "$ cd <var>/path/to</var>\n"
#~ "$ tar -xvzf <var>/path/from/gentoo-1.0.2</var>.tar.gz\n"
#~ "$ cp -a  <var>gentoo-1.0.2</var> <var>gentoo-1.0.2-orig</var>\n"
#~ "$ cd <var>gentoo-1.0.2</var>\n"
#~ "$ dh_make -e <var>name@domain.dom</var> -f /path/from/<var>gentoo-1.0.2</"
#~ "var>.tar.gz\n"
#~ "... Answer prompts."
#~ msgstr ""
#~ "$ mkdir -p <var>/path/to</var> # new empty directory\n"
#~ "$ cd <var>/path/to</var>\n"
#~ "$ tar -xvzf <var>/path/from/gentoo-1.0.2</var>.tar.gz\n"
#~ "$ cp -a  <var>gentoo-1.0.2</var> <var>gentoo-1.0.2-orig</var>\n"
#~ "$ cd <var>gentoo-1.0.2</var>\n"
#~ "$ dh_make -e <var>name@domain.dom</var> -f /path/from/<var>gentoo-1.0.2</"
#~ "var>.tar.gz\n"
#~ "... Answer prompts."
# type: <example></example>
#~ msgid ""
#~ "configure: configure-stamp\n"
#~ "configure-stamp:\n"
#~ "        dh_testdir\n"
#~ "        # Add here commands to configure the package.\n"
#~ "        touch configure-stamp\n"
#~ "build: build-stamp\n"
#~ "build-stamp: configure-stamp \n"
#~ "        dh_testdir\n"
#~ "        # Add here commands to compile the package.\n"
#~ "        $(MAKE)\n"
#~ "        #docbook-to-man debian/gentoo.sgml > gentoo.1\n"
#~ "        touch $@\n"
#~ "clean:\n"
#~ "        dh_testdir\n"
#~ "        dh_testroot\n"
#~ "        rm -f build-stamp configure-stamp\n"
#~ "        # Add here commands to clean up after the build process.\n"
#~ "        -$(MAKE) clean\n"
#~ "        dh_clean"
#~ msgstr ""
#~ "configure: configure-stamp\n"
#~ "configure-stamp:\n"
#~ "        dh_testdir\n"
#~ "        # Add here commands to configure the package.\n"
#~ "        touch configure-stamp\n"
#~ "build: build-stamp\n"
#~ "build-stamp: configure-stamp \n"
#~ "        dh_testdir\n"
#~ "        # Add here commands to compile the package.\n"
#~ "        $(MAKE)\n"
#~ "        #docbook-to-man debian/gentoo.sgml > gentoo.1\n"
#~ "        touch $@\n"
#~ "clean:\n"
#~ "        dh_testdir\n"
#~ "        dh_testroot\n"
#~ "        rm -f build-stamp configure-stamp\n"
#~ "        # Add here commands to clean up after the build process.\n"
#~ "        -$(MAKE) clean\n"
#~ "        dh_clean"
# type: <example></example>
#~ msgid ""
#~ "configure: configure-stamp\n"
#~ "configure-stamp: patch\n"
#~ "        dh_testdir\n"
#~ "        # Add here commands to configure the package.\n"
#~ "        touch configure-stamp\n"
#~ "build: build-stamp\n"
#~ "build-stamp: configure-stamp \n"
#~ "        dh_testdir\n"
#~ "        # Add here commands to compile the package.\n"
#~ "        $(MAKE)\n"
#~ "        #docbook-to-man debian/gentoo.sgml > gentoo.1\n"
#~ "        touch $@\n"
#~ "clean: clean-patched unpatch\n"
#~ "clean-patched:\n"
#~ "        dh_testdir\n"
#~ "        dh_testroot\n"
#~ "        rm -f build-stamp configure-stamp\n"
#~ "        # Add here commands to clean up after the build process.\n"
#~ "        -$(MAKE) clean\n"
#~ "        dh_clean \n"
#~ "patch: patch-stamp\n"
#~ "patch-stamp:\n"
#~ "     dpatch apply-all\n"
#~ "     dpatch call-all -a=pkg-info >patch-stamp\n"
#~ "unpatch:\n"
#~ "     dpatch deapply-all\n"
#~ "     rm -rf patch-stamp debian/patched"
#~ msgstr ""
#~ "configure: configure-stamp\n"
#~ "configure-stamp: patch\n"
#~ "        dh_testdir\n"
#~ "        # Add here commands to configure the package.\n"
#~ "        touch configure-stamp\n"
#~ "build: build-stamp\n"
#~ "build-stamp: configure-stamp \n"
#~ "        dh_testdir\n"
#~ "        # Add here commands to compile the package.\n"
#~ "        $(MAKE)\n"
#~ "        #docbook-to-man debian/gentoo.sgml > gentoo.1\n"
#~ "        touch $@\n"
#~ "clean: clean-patched unpatch\n"
#~ "clean-patched:\n"
#~ "        dh_testdir\n"
#~ "        dh_testroot\n"
#~ "        rm -f build-stamp configure-stamp\n"
#~ "        # Add here commands to clean up after the build process.\n"
#~ "        -$(MAKE) clean\n"
#~ "        dh_clean \n"
#~ "patch: patch-stamp\n"
#~ "patch-stamp:\n"
#~ "     dpatch apply-all\n"
#~ "     dpatch call-all -a=pkg-info >patch-stamp\n"
#~ "unpatch:\n"
#~ "     dpatch deapply-all\n"
#~ "     rm -rf patch-stamp debian/patched"
# type: <example></example>
#~ msgid ""
#~ "$ dpatch-edit-patch patch 10_firstpatch\n"
#~ "... Fix source tree by editor\n"
#~ "$ exit 0\n"
#~ "... Try building packages with \"debuild -us -uc\"\n"
#~ "... Clean source with \"debuild clean\"\n"
#~ "... Repeat dpatch-edit-patch until making source buildable.\n"
#~ "$ sudo pbuilder update\n"
#~ "$ pdebuild\n"
#~ "$ cd /var/cache/pbuilder/result/\n"
#~ "$ dupload -t <var>nm_target</var> <var>gentoo_1.0.2-1</var>_i386.changes"
#~ msgstr ""
#~ "$ dpatch-edit-patch patch 10_firstpatch\n"
#~ "... Fix source tree by editor\n"
#~ "$ exit 0\n"
#~ "... Try building packages with \"debuild -us -uc\"\n"
#~ "... Clean source with \"debuild clean\"\n"
#~ "... Repeat dpatch-edit-patch until making source buildable.\n"
#~ "$ sudo pbuilder update\n"
#~ "$ pdebuild\n"
#~ "$ cd /var/cache/pbuilder/result/\n"
#~ "$ dupload -t <var>nm_target</var> <var>gentoo_1.0.2-1</var>_i386.changes"
# type: <example></example>
#, fuzzy
#~ msgid ""
#~ "  dpkg -s program\n"
#~ "  dpkg -l '*program*'"
#~ msgstr ""
#~ "  dpkg -s プログラム名\n"
#~ "  dpkg -l '*プログラム名*'"

# type: <p></p>
#, fuzzy
#~ msgid ""
#~ "program <strong>must</strong> have a license, if possible free as "
#~ "according to the <url id=\"http://www.debian.org/"
#~ "social_contract#guidelines\" name=\"Debian Free Software Guidelines\">. "
#~ "If it doesn't conform to some of these rules but it can be distributed "
#~ "anyway, it could still can be included in the `contrib' or `non-free' "
#~ "sections. If you are unsure about where should it go, post the license "
#~ "text on <email>debian-legal@lists.debian.org</email> and ask for advice."
#~ msgstr ""
#~ "プログラムはライセンスを<strong>与えられていなければなりません</strong>。 "
#~ "そのライセンスが <url id=\"http://www.debian.org/"
#~ "social_contract#guidelines\" name=\"Debian フリーソフトウェアガイドライ"
#~ "ン、DFSG\"> に示された基準を満たす「フリー」なものであれば言うことなしで"
#~ "す。 ((訳注: 日本のミラーサイトは <url id=\"http://www.jp.debian.org/"
#~ "social_contract#guidelines\" name=\"Debian フリーソフトウェアガイドライン"
#~ "\"> にあります)) もしガイドラインにそぐわない点があっても、ライセンスが プ"
#~ "ログラムの配布を許可している場合には、Debian の「contrib」や 「non-free」"
#~ "のセクションに含めることができます。 もしどのセクションに入れるべきか迷っ"
#~ "たら、 <email>debian-legal@list.debian.org</email> で聞いてみてください。"

# type: <p></p>
#, fuzzy
#~ msgid ""
#~ "Look inside the package using a file manager like <manref section=\"1\" "
#~ "name=\"mc\">, or unpack it in a temporary place using <manref section="
#~ "\"1\" name=\"dpkg-deb\">. Be on the lookout for extra unneeded files, "
#~ "both in the binary and source package. Often cruft doesn't get cleaned up "
#~ "properly; adjust your rules file to compensate for that. Tips: `zgrep ^++"
#~ "+ ../gentoo_0.9.12-1.diff.gz` will give you a list of your changes/"
#~ "additions to the source files, and `dpkg-deb -c gentoo_0.9.12-1_i386.deb` "
#~ "will list the files in the binary package."
#~ msgstr ""
#~ "<manref section=\"1\" name=\"mc\"> などのファイルマネージャを 使ってパッ"
#~ "ケージの中を見たり、<manref section=\"1\" name=\"dpkg-deb\"> を使ってパッ"
#~ "ケージの中身を一時的な場所へ取り出したりしてみましょう。 なにかがうまく行"
#~ "かず、妙なものが削除されないまま残されてしまった 場合に備えて、バイナリお"
#~ "よびソースパッケージの両方について不要な ファイルが余分に含まれたりしてい"
#~ "ないかどうか、しっかり検査して ください。 ヒント:「zgrep ^+++ ../"
#~ "gentoo_0.9.12-1.diff.gz」を実行すると、 ソースファイルに対してあなたが行"
#~ "なった変更や追加のリストを 得ることができます。 また `dpkg-deb -c "
#~ "gentoo_0.9.12-1_i386.deb` を実行すると バイナリパッケージ中のファイルのリ"
#~ "ストを得ることができます。"

# type: <example></example>
#, fuzzy
#~ msgid ""
#~ "  package config;\n"
#~ "\n"
#~ "  $default_host = \"ftp-master\";\n"
#~ "\n"
#~ "  $cfg{\"ftp-master\"}{\"login\"} = \"yourdebianusername\";\n"
#~ "\n"
#~ "  $cfg{\"non-us\"}{\"login\"} = \"yourdebianusername\";\n"
#~ "\n"
#~ "  1;"
#~ msgstr ""
#~ "  package config;\n"
#~ "\n"
#~ "  $default_host = \"ftp-master\";\n"
#~ "\n"
#~ "  $cfg{\"ftp-master\"}{\"login\"} = \"yourdebianusername\";\n"
#~ "\n"
#~ "  $cfg{\"non-us\"}{\"login\"} = \"yourdebianusername\";\n"
#~ "\n"
#~ "  1;"

# type: <p></p>
#, fuzzy
#~ msgid ""
#~ "If you upload to \"ftp-master\", <prgn>dupload</prgn> will ask for your "
#~ "password on Debian machines, and then upload the packages."
#~ msgstr ""
#~ "「ftp-master」へアップロードするよう指定した場合、 <prgn>dupload</prgn> "
#~ "は Debian マシン上でのあなたのパスワードを 確認し、そしてパッケージを "
#~ "upload します。"

