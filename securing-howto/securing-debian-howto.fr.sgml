<!doctype debiandoc system>

<!--
# TODO list:
# - Shorten overlong lines - there are lots of sections (by jfs?) where
#   lines are routinely longer than 80 characters. Actually it makes sense
#   to author SGML with much shorter lines, because it makes editing simpler
#   (while the internal line length of the SGML source is obviously not
#   visible in any way to the end user).
#   (occur (make-string 80 ?.))   ;  C-x C-e here
# - Remove gratuitous trailing whitespace; M-x occur " +$"
# - add prgn tags
# JFS reminders :) 
#   setup is a noun, set up is a verb

 Version anglaise de base "1.113"

-->

<book>

<titlepag>
<!-- Title information -->
<title>Manuel de sécurisation de Debian
<author>
<name>Javier Fernández-Sanguino Peña</name>
<email>jfs@computer.org</email>
</author>
<version>2.95
<date>Vendredi 4 juillet 2003 23:13:42 +0100

<abstract>
Ce document décrit la sécurité dans le projet Debian. Il commence par
la sécurisation et le renforcement de l'installation standard d'une distribution
Debian GNU/Linux. Il couvre quelques tâches courantes telles que la 
sécurisation d'un réseau utilisant Debian GNU/Linux et il donne 
également des informations complémentaires sur les outils de sécurisation
disponibles ainsi que sur le travail accompli par l'équipe en charge
de la sécurité chez Debian.
</abstract>

<copyright> <copyrightsummary>Copyright &copy;  2002, 2003 Javier Fernández-Sanguino Peña
<p>Copyright &copy;  2001  Alexander Reelsen, Javier Fernández-Sanguino Peña
<p>Copyright &copy;  2000  Alexander Reelsen

<p>Il vous est permis de copier, de distribuer et/ou de modifier ce
document d'après le termes de la <url id="http://www.fsf.org/copyleft/fdl.html"
name="licence de documentation libre GNU, Version 1.1"> ou toute version
postérieure publiée par la Free Software Foundation. Nous le distribuons car
nous pensons qu'il peut vous être utile, mais SANS AUCUNE GARANTIE.
</copyright>

</titlepag>

<!-- Table des matières -->
<toc>

<!-- Début du document -->

<chapt>Introduction
<p>
L'une des choses les plus difficiles dans l'écriture de documents liés à la
sécurité est que chaque cas est unique. Il faut prêter attention à deux
choses&nbsp;: la menace que constitue l'environnement et les besoins de
sécurité liés à un site individuel, une machine ou un réseau. Par exemple,
les exigences que l'on a pour une utilisation familiale n'ont rien de comparable 
aux exigences que l'on trouve dans le réseau d'une banque. Alors que dans le
premier cas, l'utilisateur aura à affonter de simples scripts d'attaque,
le réseau d'une banque sera, lui, sous la menace d'attaques directes.
De plus, la banque se doit de protéger l'exactitude des données clients. 
Il faudra donc que chaque utilisateur trouve le bon compromis entre
facilité d'utilisation et une sécurité outrancière (paranoïaque&nbsp;?).

<p>
Prenez conscience que cet ouvrage traite uniquement des questions liées
aux logiciels. Le meilleur programme du monde ne pourra pas vous protéger 
contre quelqu'un qui aura un accès physique à la machine. Vous pouvez mettre
votre machine sous votre bureau ou dans un bunker protégé par une armée. 
Pourtant, un ordinateur de bureau avec une bonne configuration sera beaucoup 
plus sûr (d'un point de vue logiciel) qu'un ordinateur protégé physiquement 
si son disque dur est truffé de logiciels connus pour avoir des failles de
sécurité.
Bien entendu, vous devez prendre en compte les deux aspects.

<p>
Ce document donne simplement un aperçu de ce qu'il est possible de
faire pour accroître la sécurité de votre système Debian GNU/Linux. 
Si vous avez d'ores et déjà lu des ouvrages traitant de la sécurité 
sous Linux, vous trouverez des similitudes avec ce document. Ce manuel 
ne prétend pas être l'ultime source d'informations à laquelle vous devez
vous référer. Il essaye seulement d'adapter ces informations pour le
système Debian GNU/Linux. D'autres distributions procèdent de manière 
différente pour certaines questions (le démarrage de démons est un 
exemple courant)&nbsp;; vous trouverez dans cet ouvrage les éléments
propres aux procédures et aux outils de Debian.

<p>
Si vous avez des commentaires, des éléments à ajouter ou des suggestions,
envoyez-les (en anglais) à
<!-- <url name="Alexander Reelsen" id="mailto:ar@rhwd.de"> et  -->
<url name="Javier Fernández-Sanguino" id="mailto:jfs@computer.org">
(autre adresse&nbsp;: jfs@debian.org) et ils seront intégrés dans ce manuel.

<sect>Télécharger ce manuel 
<p>
Vous pouvez télécharger ou lire la dernière version du manuel de sécurisation
Debian sur le site du <url name="projet de documentation de debian" 
id="http://www.debian.org/doc/manuals/securing-debian-howto/">.  
Jetez un &oelig;il également à la version contenue dans le <url name="serveur CVS" 
id="http://cvs.debian.org/ddp/manuals.sgml/securing-howto/?cvsroot=debian-doc">.

<p>
Vous pouvez, également, télécharger le document dans le <url
id="http://www.debian.org/doc/manuals/securing-debian-howto/securing-debian-howto.txt" 
name="format texte"> sur le site du projet de documentation
Debian. D'autres formats, tel que le PDF, ne sont pas encore
fournis. Cependant, vous pouvez télécharger ou installer le paquet
<url id="http://packages.debian.org/harden-doc" name="harden-doc"> qui 
offre ce même document dans les formats HTML, txt et PDF (en langue
anglaise). Veuillez cependant noter que le paquet peut ne pas être tout
à fait à jour avec le document fourni sur l'Internet (mais vous pouvez
toujours utilier le paquet source pour construire vous-même une version
à jour&nbsp;!).

<!-- 
<p>
Les anciennes versions (non maintenues) de ce HOWTO peuvent être trouvées ici&nbsp;:

<list>
<item><url name="Uniquement en texte"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.txt">
<item><url name="HTML"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.html">
<item><url name="HTML, tarball and gzippée"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.tar.gz">
<item><url name="SGML"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.sgml">
</list>
-->
<!-- TODO: remove these stale links rather than leave references to -->
<!-- the old versions hanging around? era -->


<sect>Avis et Réactions
<p>
Maintenant, la partie officielle. Pour l'instant, c'est moi
(Alexander Reelsen) qui ai écrit la plupart des paragraphes de ce manuel
mais, à mon avis, il ne faudrait pas que cela reste ainsi. J'ai grandi 
et vécu avec les logiciels libres, c'est une part de ma vie de tous les jours 
et, j'espère, de la vôtre aussi. J'encourage chacun à m'envoyer ses réactions, astuces 
ou suggestions.

<p>
Si vous pensez que pouvez vous occuper d'une partie en particulier
ou d'un paragraphe, écrivez au responsable du document. Cela sera apprécié&nbsp;!
En particulier, si vous trouvez une section estampillée «&nbsp;FIXME&nbsp;»,
qui signifie que les auteurs n'ont pas eu le temps ou les connaissances 
requises pour s'en occuper, envoyez-leur un courrier immédiatement.

<p>
Le thème de ce manuel fait clairement comprendre qu'il est 
important de tenir ce manuel à jour&nbsp;; vous pouvez apporter 
votre pierre à l'édifice. S'il vous plaît, aidez-nous.

<sect>Connaissances requises
<p>
L'installation de Debian GNU/Linux n'est pas très difficile et vous 
avez été sans doute capable de l'installer. Si vous disposez déjà de
connaissances concernant Linux ou d'autres Unices et si vous êtes quelque
peu familier avec les problèmes élémentaires de sécurité, il vous sera plus
facile de comprendre ce manuel, car ce document ne peut pas entrer dans tous
les petits détails (sans quoi cela aurait été un livre plutôt qu'un manuel).
Si vous n'êtes pas si familier que cela, vous pouvez consulter
<ref id="references"> pour savoir où trouver des informations plus
approfondies sur le sujet.
 

<sect>Éléments restants à écrire (FIXME/TODO)
<p>
<list>

<item>Développer les informations sur la réponse d'incident (?),
peut-être ajouter quelques idées dérivées du Guide de la sécurité de
RedHat au
<url id="http://www.redhat.com/docs/manuals/linux/RHL-9-Manual/security-guide/ch-response.html" name="chapitre sur la réponse d'incident">.

<item>Écrire sur les outils de surveillance à distance (pour vérifier 
la disponibilité du système) tels que monit, daemontools et mon. Voir <url
id="http://linux.oreillynet.com/pub/a/linux/2002/05/09/sysadminguide.html">.

<item>Envisager la rédaction d'une section sur la construction d'application
orientée réseau pour Debian (avec des informations telles que
le système de base, <package>equivs</package> et FAI).

<item>Vérifier si <url id="http://rr.sans.org/linux/hardening.php"> n'a pas
d'informations pertinentes non traitées ici.

<item>Ajouter des informations sur la manière de configurer un portable avec
une Debian <url id="http://rr.sans.org/linux/debian_laptop.php">.

>Comment mettre en place un pare-feu en utilisant
Debian GNU/Linux. La section sur les pare-feux concerne actuellement un système isolé
(pas de protection d'autres machines...). Comment tester la configuration.

<item>Paramétrage d'un serveur mandataire pare-feu avec Debian
GNU/Linux et faire un état des lieux des paquets fournissant des 
services <em>proxy</em> (tels que 
<package>xfwp</package>,<package>xproxy</package>, 
<package>ftp-proxy</package>, <package>redir</package>,
<package>smtpd</package>, <package>nntp-cache</package>, 
<package>dnrd</package>, <package>jftpgw</package>, <package>oops</package>,
<package>pnsd</package>, <package>perdition</package>,
<package>transproxy</package>, <package>tsocks</package>). Renvoi au manuel 
pour toute autre information. Considérer également que
<package>zorp</package> est maintenant disponible comme paquet Debian et qu'il 
<em>s'agit</em> d'un mandataire pare-feu (il existe également des paquets
Debian fournis par les auteurs).

<item>Informations sur la configuration de services avec file-rc

<item>Vérifier toutes les URLs et supprimer ou corriger celles
qui ne sont plus disponibles.

<item>Ajouter des informations sur les substituts de serveurs 
typiques (disponibles dans Debian) qui fournissent des
fonctionnalités restreintes. Par exemple&nbsp;:

	<list>
	<item>lpr local par cups (paquet)&nbsp;?&nbsp;;

	<item>lrp distant par lpr&nbsp;;

	<item>bind par dnrd/maradns&nbsp;;

	<item>apache par dhttpd/thttpd/wn (tux?)&nbsp;;

	<item>exim/sendmail par ssmtpd/smtpd/postfix&nbsp;;

	<item>squid par tinyproxy&nbsp;;

	<item>ftpd par oftpd/vsftp&nbsp;;

	<item>etc.

	</list>


<item>De plus amples informations concernant les 
rustines spécialisées dans la sécurité du noyau dans 
Debian, incluant celles montrées ci-dessus et ajouter
des informations spécifiques sur la façon d'activer ces rustines dans un 
système Debian.

<list>

<item>Linux Intrusion Detection (<package>lids-2.2.19</package>)&nbsp;;

<item>Linux Trustees (paquet <package>trustees</package>)&nbsp;;

<item><url name="NSA Enhanced Linux"
id="http://www.coker.com.au/selinux/">&nbsp;;

<item><url name="kernel-patch-2.2.18-openwall"
id="http://packages.debian.org/kernel-patch-2.2.18-openwall">&nbsp;;

<item><package>kernel-patch-2.2.19-harden</package>&nbsp;;

<!-- <item>Linux capabilities (paquet <package>lcap</package>&nbsp;; -->

<item><package>kernel-patch-freeswan, kernel-patch-int</package>.

</list>

<item>Précisions sur l'arrêt de certains services réseaux non nécessaires
(outre <prgn>inetd</prgn>)&nbsp;; ceci est en partie dans la procédure de consolidation mais
pourrot être élargi un petit peu.

<item>Informations sur le renouvellement des mots de passe&nbsp;;
c'est étroitement lié à la politique mise en place.

<item>Politique de sécurité et formation des utilisateurs.

<item>Davantage à propos de tcpwrappers, et des wrappers en général&nbsp;?

<item><file>hosts.equiv</file> et d'autres trous de sécurité majeurs.

<item>Problèmes avec les serveurs de partage de fichiers tels que Samba
et NFS&nbsp;?

<item>suidmanager/dpkg-statoverrides.

<item>lpr et lprng.

<item>Désactiver les outils Gnome qui utilisent IP.

<item>Parler de pam_chroot (voir <url
id="http://http://lists.debian.org/debian-security/2002/debian-security-200205/msg00011.html">)
et de son utilité pour restreindre les utilisateurs. Introduire les 
informations relatives à
<url id="http://online.securityfocus.com/infocus/1575">.
<package>Pdmenu</package>, par exemple, est disponible dans
Debian (alors que flash ne l'est pas).

<item>Parler des services «&nbsp;chrootés&nbsp;», plus d'informations sur
<url id="http://www.linuxfocus.org/English/January2002/aritcle225.shtml">,
<url id="http://www.networkdweebs.com/chroot.html"> et
<url id="http://www.linuxsecurity.com/feature_stories/feature_story-99.html">

<item>Parler des programmes pour faire des «&nbsp;prisons&nbsp;» chroot. 
<package>compartment</package> et <package>chrootuid</package>
sont en attente dans dans incoming. D'autres (makejail, jailer) pourraient aussi être
présentés.

<item>Ajouter les informations fournies par Karl Hegbloom concernant la 
configuration de Bind&nbsp;9 «&nbsp;chrooté&nbsp;», voir
<url id="http://people.pdxlinux.org/~karlheg/Secure_Bind9_uHOWTO/Secure_Bind_9_uHOWTO.xhtml">.

<item>Ajouter les informations fournies par Pedro Zornenon pour chrooter Bind&nbsp;8,
malheureusement pour la potato uniquement&nbsp;:(, voir
<url id="http://people.debian.org/~pzn/howto/chroot-bind.sh.txt"> 
(inclure le script en entier&nbsp;?).

<item>Plus d'informations concernant les logiciels d'analyse de journaux
(i.e. logcheck et logcolorise).

<item>Routage «&nbsp;avancé&nbsp;» (la politique de trafic concerne la sécurité)

<item>Restreindre <prgn>ssh</prgn> pour qu'il puisse uniquement exécuter certaines 
commandes.

<item>Utilisation de dpkg-statoverride.

<item>Moyens sûrs de partager un graveur de CD parmi les utilisateurs.

<item>Moyens sûrs de fournir du son en réseau en plus des possibilités
d'affichage en réseau (pour que le son des clients X soient envoyées sur le
périphérique son du serveur X)

<item>Sécurisation des navigateurs web.

<item>Configurer ftp au travers de <prgn>ssh</prgn>.

<item>Utilisation des systèmes de fichiers «&nbsp;loopback&nbsp;» 
chiffrés (cryptés&nbsp;?).

<item>Chiffrement entier du système de fichiers.

<item>Outils stéganographiques.

<item>Configurer une autorité de clés publiques (PKA) pour une organisation.

<item>Utiliser LDAP pour gérer les utilisateurs. Il y a un HOWTO sur 
ldap+kerberos pour Debian à www.bayour.com écrit par Turbo Fredrikson.

<item>Comment enlever des informations non-essentielles sur les systèmes
de production tels que /usr/share/doc, /usr/share/man (oui, sécurité par 
obscurité).
	
</list>

<sect id="changelog">Changelog/Historique

<sect1>Version&nbsp;2.95 (juin 2003)
<p>Modifications de Javier Fernández-Sanguino Peña
<list>
<item>Corrections de fautes signalées par Leonard Norrgard.
<item>Ajout d'une section sur comment contacter le CERT pour la gestion d'incident
(<url id="#after-compromise">)
<item>Plus d'informations sur la mise en place d'un serveur mandataire
(«&nbsp;proxy&nbsp;») Squid
<item>Ajout d'un pointeur et suppresion d'un FIXME grâce à Helge H. F.
<item>Correction d'une faute (save_inactive) signalée par Philippe Faes.
<item>Corrections de plusieurs fautes signalées par Jaime Robles.
</list>

<sect1>Version&nbsp;2.94 (avril 2003)
<p>Modifications de Javier Fernández-Sanguino Peña
<list>
<item>Selon les suggestions de Maciej Stachura, j'ai développé la
section sur les limitations pour les utilisateurs.
<item>Correction d'une faute signalée par Wolfgang Nolte.
<item>Correction de liens avec un correctif fourni par Ruben Leote Mendes.
<item>Ajout d'un lien vers l'excellent document de David Wheeler dans la
note sur le décompte des failles de sécurité.
</list>

<sect1>Version&nbsp;2.93 (mars 2003)
<p>Modifications de Frédéric Schütz.
<list>
<item>Ré-écriture complète de la section sur les attributs ext2
(lsattr/chattr)
</list>

<sect1>Version&nbsp;2.92 (février 2003)
<p>Modifications de Javier Fernández-Sanguino Peña et
Frédéric Schütz.
<list>
<item>Fusion de la secton&nbsp;9.3 («&nbsp;rustines noyau utiles&nbsp;»)
   dans la section&nbsp;4.13 («&nbsp;Ajouter des rustines noyau&nbsp;»)
   et ajout d'un peu de contenu.
<item>Ajout de quelques TODOs supplémentaires
<item>Ajout d'information sur la façon de vérifier manuellement les
   mises à jour et également sur cron-apt. Ainsi Tiger n'est plus vu
   comme le seul moyen de faire des vérifications de mises à jour automatiques.
<item>Légère ré-écriture de la section sur l'exécution des mises à jour
   de sécurité grâce aux commentaires de Jean-Marc Ranger.
<item>Ajout d'une note sur l'installation de Debian (qui suggérera à
   l'utilisateur une mise à jour de sécurité juste après l'installation)
</list>

<sect1>Version&nbsp;2.91 (janvier/février 2003)
<p>Modifications de Javier Fernández-Sanguino Peña (moi).
<list>
<item>Ajout d'une rustine proposée par Frédéric Schütz.
<item>Ajout de quelques références supplémentaires sur les capacités
grâce à Frédéric.
<item>Modifications légères sur la section bind par l'ajout d'une
référence à la documentation en ligne de BIND 9 et des références
corrections dans la première zone (Hello Pedro&nbsp;!)
<item>Correction de la date du changelog &ndash; nouvelle année :-)
<item>Ajout d'une référence aux articles de Colin pour les TODOs.
<item>Suppression de la référence à d'anciennes rustines ssh+chroot.
<item>Rustines additionnelles de Carlo Perassi.
<item>Corrections de fautes (récursif dans Bind est récursion) signalées
par Maik Holtkamp.
</list>

<sect1>Version&nbsp;2.9 (décembre 2002)
<p>Modifications de Javier Fernández-Sanguino Peña (moi).
<list>
<item>Réorganisation des informations sur chroot (fusion de deux
sections, cela n'avait pas de sens de les garder séparées)
<item>Ajout de notes sur le chroot d'Apache fournies par Alexandre Raitti.
<item>Application de correctifs proposés par Guillermo Jover.
</list>

<sect1>Version&nbsp;2.8 (novembre 2002)
<p>Modifications de Javier Fernández-Sanguino Peña (moi).
<list>
<item>Application des rustines de Carlo Perassi, corrections incluant&nbsp;:
modification de la longueur de lignes, correction d'URL, et 
correction de certains FIXMES&nbsp;;
<item>Mise à jour du contenu de la FAQ de l'équipe en charge de la
sécurité de Debian&nbsp;;
<item>Ajout d'un lien vers la FAQ de l'équipe en charge de la sécurité
de Debian et la référence du développeur Debian, les sections dupliquées 
pourraient (juste pourraient) être supprimées à l'aveni&nbsp;;
<item>Correction de la section d'audit manuel avec les commentaires de 
Michal Zielinski&nbsp;;
<item>Ajout d'un lien vers des dictionnaires (contribution de Carlo Perassi).
</list>

<sect1>Version&nbsp;2.7 (octobre 2002)
<p>Modifications de Javier Fernández-Sanguino Peña (moi).  Note&nbsp;: 
j'ai encore beaucoup de modifications qui sont stockées dans ma boîte de
réception (ce qui représente en ce moment environ 5 Mo) à intégrer.
<list>
<item>Correction de quelques fautes qui ont été signalées par 
Tuyen Dinh, Bartek Golenko et Daniel K. Gebhart&nbsp;;
<item>Note concernant les rootkits utilisant /dev/kmem suggérées
par Laurent Bonnaud&nbsp;;
<item>Correction de fautes et de FIXMes par Carlo Perassi.
</list>

<sect1>Version&nbsp;2.6 (septembre 2002)
<p>Modifications de Chris Tillman, tillman@voicetrak.com. 
<list>
<item>Modifications pour améliorer la grammaire/l'orthographe&nbsp;;
<item>s/host.deny/hosts.deny/ (1 endroit)&nbsp;;
<item>Application de la rustine de Larry Holish (assez grosse, corrige 
de nombreux FIXMEs).
</list>

<sect1>Version&nbsp;2.5 (septembre 2002)
<p>Modifications de Javier Fernández-Sanguino Peña (moi). 
<list>
<item>Corrections de quelques fautes signalées par Thiemo Nagel&nbsp;;
<item>Ajout d'une note de bas de page sur les conseils de 
Thiemo Nagel&nbsp;;
<item>Corrige un lien URL.
</list>

<sect1>Version&nbsp;;2.5 (août 2002)

<p>Modifications de Javier Fernández-Sanguino Peña (moi). Il y avait
beaucoup de choses en attente dans ma boîte de réception (depuis février), 
je vais donc appeler ceci la version <em>retour de lune de miel</em>&nbsp;:)

<list>

<item>Application d'une rustine fournie par Philipe Gaspar concernant Squid
qui supprime aussi un FIXME&nbsp;;

<item>Encore une autre FAQ concernant les bannières de services provenant de
la liste de diffusion debian-security (discussion «&nbsp;Telnet information&nbsp;»
démarrée le 26 juillet 2002)&nbsp;;

<item>Ajout d'une note concernant l'utilisation des références croisée CVE
dans l'élément de la FAQ <em>En combien de temps l'équipe en charge de 
la sécurité de Debian...</em>&nbsp;;

<item>Ajout d'une nouvelle section concernant les attaques ARP fournie par
Arnaud «&nbsp;Arhuman&nbsp;» Assad&nbsp;;

<item>Nouvelle FAQ concernant dmesg et le démarrage en mode console par 
le noyau&nbsp;;

<item>Petites parcelles d'informations sur les problèmes de vérification
de signature dans les paquets (il semble qu'ils n'aient pas passé le stade
de la version béta)&nbsp;;

<item>Nouvelle FAQ concernant les faux positifs des outils d'évaluation
de vulnérabilité&nbsp;;

<item>Ajout de nouvelles sections au chapitre qui contient des informations
sur les signatures de paquet et réorganisation en un nouveau chapitre
<em>Infrastructure de sécurité Debian</em>&nbsp;;

<item>Nouvel élément de FAQ concernant Debian et les autres distributions
Linux&nbsp;;

<item>Nouvelle section sur les clients de mail avec des fonctionnalités
GPG/PGP dans le chapitre outils de sécurité&nbsp;;

<item>Clarification sur la manière d'activer les mots de passe MD5 dans
la <em>Woody</em>, ajout d'une lien vers PAM ainsi qu'une note concernant la 
définition de max dans PAM&nbsp;;

<item>Ajout d'une nouvelle annexe sur comment créer des environnements 
«&nbsp;chroot&nbsp;» (après avoir joué un peu avec makejail et avoir corrigé, 
aussi, quelques-un de ses bogues), intégration des informations dupliquées 
dans toutes les annexes&nbsp;;

<item>Ajout d'informations complémentaires concernant le «&nbsp;chrootage&nbsp;» 
de <PRGN>SSH</PRGN> et de son impact sur les transferts sécurisés de fichiers.
Certaines informations ont été récupérées de la liste de diffusion
debian-security (Juin 2002 discussion&nbsp;;:<em>Secure file 
transfers</em>)&nbsp;;

<item>Nouvelles sections sur la mise à jour automatique des systèmes Debian
ainsi que les dangers d'utiliser la distribution «&nbsp;testing&nbsp;» ou 
la distribution «&nbsp;unstable&nbsp;» du point de vue des mises à jour de 
sécurité&nbsp;;

<item>Nouvelle section, concernant la manière de rester à jour avec
la mise en place de rustines de sécurité, dans la section 
<em>avant la compromission</em> ainsi qu'une nouvelle section sur la liste de 
diffusion debian-security-announce&nbsp;;

<item>Ajouts d'informations sur la manière de générer 
automatiquement des mots de passe sûrs&nbsp;;

<item>Nouvelle section relative à la connexion des utilisateurs 
oisifs (<em>idle</em>)&nbsp;;

<item>Réorganisation de la section sécurisation du serveur de mail suite
à la discussion <em>Secure/hardened/minimal Debian (ou "Why is the base system
the way it is?")</em> sur la liste de diffusion debian-security 
(Mai 2002)&nbsp;;

<item>Réorganisation de la section sur les paramètres réseaux du noyau, avec
les informations fournies par la liste de diffusion debian-security
(Mai 2002, discussion <em>syn flood attacked?</em>) et ajout d'un nouvel
élément de FAQ&nbsp;;

<item>Nouvelle section sur la manière de vérifier les mots de passe des
utilisateurs et quels paquets utiliser pour cela&nbsp;;

<item>Nouvelle section sur le chiffrement PPTP avec les clients Microsoft
discuté sur la liste de diffusion debian-security (Avril 2002)&nbsp;;

<item>Ajout d'une nouvelle section décrivant les problèmes qui peuvent
survenir lorsque l'on attribue une adresse IP spécifique pour chaque service,
cette information a été écrite d'après d'une discussion qui s'est
tennue sur de la liste de diffusion bugtraq&nbsp;:
<em>Linux kernel 2.4 "weak end host" issue (discuté précédemment sur
debian-security sous le titre «&nbsp;arp problem&nbsp;»)</em> (démarré 
le 9 mai 2002 par Felix von Leitner)&nbsp;;

<item>Ajout d'informations sur le protocole <prgn>ssh</prgn> 
version&nbsp;2&nbsp;;

<item>Ajout de deux sous-sections relatives à la configuration sécurisée 
d'Apache (C'est à dire, les choses spécifiques à la Debian)&nbsp;;

<item>Ajout d'une nouvelle FAQ traitant des «&nbsp;raw sockets&nbsp;», 
une relative à /root, une partie traitant des groupes d'utilisateurs et 
une autre traitant des permissions des journanaux et des permission des 
fichiers de configuration&nbsp;;

<item>Ajout d'un lien vers un bogue dans libpam-cracklib qui pourrait encore
être présent... (besoin de vérifier)&nbsp;;

<item>Ajout de plus d'informations sur l'analyse avancée (en suspend,
plus d'information sur les outils d'inspection de paquet tels que 
<prgn>tcpflow</prgn>)&nbsp;;

<item>Transformation de «&nbsp;Que dois je faire concernant la 
compromission&nbsp;» en une série d'énumération et en y ajoutant
plus d'éléments&nbsp;;

<item>Ajout d'informations sur la configuration de Xscreensaver pour
verrouiller l'écran automatiquement après une durée donnée&nbsp;;

<item>Ajout d'une note sur les utilitaires que vous ne devriez pas
installer sur un système. Inclus une note concernant Perl et pourquoi il
ne peut pas être retiré facilement de la Debian. L'idée vient de la lecture
des documents d'Intersect concernant le renforcement de Linux&nbsp;;

<item>Ajout d'informations sur lvm et les systèmes de fichiers journalisés,
ext3 est préconisé. Les informations pourraient cependant y être trop 
génériques&nbsp;;

<item>Ajout d'une lien sur la version texte disponible en ligne 
(à vérifier)&nbsp;;

<item>Ajout d'informations additionnelles sur la protection par pare-feu
d'un système local, faisant suite à un commentaire d'Hubert Chan sur
la liste de diffusion&nbsp;;

<item>Ajout d'informations additionnelles sur les limites PAM et de liens
vers les documents de Kurt Seifried (relatifs à un de ses posts sur
bugtraq le 4 avril 2002 répondant à une personne qui avait «&nbsp;découvert&nbsp;» 
une vulnérabilité dans Debian GNU/Linux relative à la privation de ressource)&nbsp;;

<item>Comme suggéré par Julián Muñoz, ajout de plus d'information
sur l'umask par défaut de la Debian et ce à quoi un utilisateur peut accéder
si on lui a donné un shell sur le système (effrayant, hein?)&nbsp;;

<item>Inclusion d'une note dans la section du mot de passe BIOS suite à un
commentaire d'Andreas Wohlfeld&nbsp;;

<item>Inclusion des rustines fournies par Alfred E. Heggestad corrigeant
beaucoup de fautes encore présentes dans le document&nbsp;;

<item>Ajout d'un lien vers le changelog dans la section des remerciements
comme beaucoup des personnes qui ont contribué sont listées ici (et pas
là bas)&nbsp;;

<item>Ajout de quelques notes complémentaires dans la section de chattr et
d'une nouvelle section après l'installation qui parle des images systèmes.
Les deux idées sont la contribution de Kurt Pomeroy&nbsp;;

<item>Ajout d'une nouvelle section après l'installation juste pour rappeler
aux utilisateurs de changer la séquence de démarrage&nbsp;;

<item>Ajout d'éléments restant à faire (TODO) fournis par Korn Andras&nbsp;;

<item>Ajout d'un lien vers les recommandations du NIST sur la manière de
sécuriser un DNS. Cette contribution nous est fournie par Daniel Quinlan&nbsp;;

<item>Ajout d'un petit paragraphe concernant l'infrastructure des certificats
SSL de la Debian&nbsp;;

<item>Ajout des suggestions de Daniel Quinlan concernant l'authentification 
<prgn>ssh</prgn> et la configuration d'exim en relai&nbsp;;

<item>Ajout de plus d'information concernant la sécurisation de bind incluant
les modifications suggérées par Daniel Quinlan et une annexe avec un script
pour faire quelques un des changements commentés dans cette section&nbsp;;

<item>Ajout d'un lien vers un autre élément concernant le «&nbsp;chrootage&nbsp;» 
de Bind (a besoin d'être fusionné)&nbsp;;

<item>Ajout d'un une ligne de Cristian Ionescu-Idbohrn pour récupérer les paquets 
avec support des tcpwrappers&nbsp;;

<item>Ajout d'un peu plus d'information sur la configuration PAM par défaut de
la Debian&nbsp;;

<item>Inclusion d'une question dans la FAQ au sujet de l'utilisation de PAM
pour fournir des services sans comptes shell&nbsp;;

<item>Déplacement de deux éléments de la FAQ dans une autre section et ajout
d'une nouvelle FAQ concernant la détection des attaques 
(et des systèmes corrompus)&nbsp;;

<item>Inclusion d'information sur configurer un pont pare-feu (incluant une
annexe d'exemple). Merci à Francois Bayar qui m'a envoyé ça en Mars&nbsp;;

<item>Ajout d'une FAQ concernant les <em>MARK</em> d'heartbeat dans
le syslogd d'après une question à laquelle Noah Meyerhans et Alain Tesio ont
répondu en décembre 2001&nbsp;;

<item>Inclusion d'information sur la protection contre les débordements de
tampons ainsi que quelques informations sur les rustines du noyau&nbsp;;

<item>Ajout d'informations supplémentaires (et réorganisation) de la section 
pare-feu. Mise à jour des informations concernant le paquet iptables et les 
générateurs de pare-feu disponibles&nbsp;;

<item>Réorganisation des informations concernant la vérification des journaux,
déplacement des informations de logcheck sur la détection d'intrusion machine
vers cette section&nbsp;;

<item>Ajout d'informations sur la manière de préparer un paquet statique pour
bind dans l'optique d'un «&nbsp;chrootage&nbsp;» (non testé)&nbsp;;

<item>Ajout d'un élément de FAQ concernant certains serveurs/services 
spécifiques (pourrait être développé avec quelques une des recommandations de la 
liste de diffusion debian-security)&nbsp;;

<item>Ajout d'informations sur les services RPC (et quand ils 
sont nécessaires)&nbsp;;

<item>Ajout de plus d'informations sur les possibilité d'amélioration 
(et ce que fait lcap). Y a-t-il une bonne documentation sur ce sujet&nbsp;? 
Je n'ai trouvé aucune documentation sur mon noyau&nbsp;2.4&nbsp;;

<item>Correction de fautes.

</list>

<sect1>Version&nbsp;2.4
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>
<item>Réécriture d'une partie de la section BIOS.
</list>

<sect1>Version&nbsp;2.3
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>
<item>Encadrement de la plupart des emplacements de fichiers par la
balise «&nbsp;file&nbsp;»&nbsp;;
<item>Correction de fautes rapportées par Edi Stojicevi&nbsp;;
<item>Légère modification de la section des outils d'audit distant&nbsp;;
<item>Ajout d'éléments à faire (todo)&nbsp;;
<item>Ajout d'informations concernant les imprimantes et du fichier de
configuration de cups (tiré d'une discussion sur debian-security)&nbsp;;
<item>Ajout d'une rustine soumise par Jesus Climent concernant l'accès
d'utilisateurs valides du système à proftpd quand il est configuré en
serveur anonyme&nbsp;;
<item>Petite modification aux schémas de partitionnement dans le
cas particulier des serveurs de mails&nbsp;;
<item>Ajout du livre «&nbsp;Hacking Linux Exposed&nbsp;» à la section 
des livres&nbsp;;
<item>Correction d'une faute de frappe sur un répertoire rapportée par 
Eduardo Pérez Ureta&nbsp;;
<item>Correction d'une coquille daus /etc/ssh dans la liste de contrôle
signalée par Edi Stojicevi.
</list>
<sect1>Version&nbsp;2.3
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>
<item>Correction de l'emplacement du fichier de configuration de dpkg&nbsp;;
<item>Suppression d'Alexander des informations sur les contacts&nbsp;;
<item>Ajout d'une autre adresse mail&nbsp;;
<item>Correction de l'adresse mail d'Alexander (même si elle est commentée)&nbsp;;
<item>Correction de l'emplacement des clés de versions (merci à 
Pedro Zorzenon pour avoir relevé cette erreur).
</list>

<sect1>Version&nbsp;;2.2
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>
<item>Corrections de fautes, merci à Jamin W. Collins pour ces 
corrections&nbsp;;
<item>Ajout d'une référence à la page de manuel d'apt-extracttemplate
(documentation sur la configuration de APT::ExtractTemplate)&nbsp;;
<item>Ajout d'une section concernant la limitation de SSH. Informations 
basées sur celles qui ont été postées par Mark Janssen, Christian G. Warden 
et Emmanuel Lacour sur la liste de diffusion debian-security&nbsp;;
<item>Ajout d'informations sur les logiciels antivirus.
<item>Ajout d'une FAQ&nbsp;: journaux de su provenant du fait que cron 
fonctionne entant que root.
</list>

<sect1>Version&nbsp;2.1
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>
<item>Modifications du «&nbsp;FIXME&nbsp;» de lshell, merci à Oohara
Yuuma&nbsp;;
<item>Ajout d'un paquet sXid et retrait du commentaire étant donné
qu'il est disponible&nbsp;;
<item>De nombreuses fautes relevées par Oohara Yuuma ont été corrigées&nbsp;;
<item>ACID est maintenant disponible dans Debian (dans le paquet acidlab)&nbsp;;
<item>Liens de LinuxSecurity corrigés (merci à Dave Wreski de nous l'avoir
signalé).
</list>
<sect1>Version&nbsp;2.0
<p>Modifications de Javier Fernández-Sanguino Peña. Je voulais passer à
2.0 quand tous les «&nbsp;FIXME&nbsp;» auraient été supprimés mais 
j'ai manqué de numéro dans la série 1.9X&nbsp;:(
<list>
<item>Transformation du HOWTO en Manuel (maintenant je peux 
dire RTFM&nbsp;!)&nbsp;;

<item>Ajout d'informations concernant les tcp wrappers et Debian
(maintenant plusieurs services sont compilés avec le support 
adéquat&nbsp;; ainsi ceci n'est plus un problème 
d'<prgn>inetd</prgn>)&nbsp;;

<item>Clarification des informations sur la désactivation des 
services pour la rendre plus cohérente (les infos sur rpc se 
réferent toujours à update-rc.d)&nbsp;;

<item>Ajout d'une petite note sur lprn&nbsp;;

<item>Ajout de quelques infos sur les serveurs corrompus 
(toujours très approximatif)&nbsp;;

<item>Corrections des fautes signalées par Mark Bucciarelli&nbsp;;

<item>Ajout d'étapes supplémentaires sur la récupération des mots de
passe lorsque l'admin a paramétré paranoid-mode=on&nbsp;;

<item>Ajout d'informations pour paramétrer paranoid-mode=on lorsque l'on 
se connecte en mode console&nbsp;;

<item>Nouveau paragraphe pour présenter la configuration des 
services&nbsp;;

<item>Réorganisation de la section <em>Après l'installation</em> afin de 
permettre une lecture plus aisée du document&nbsp;;

<item>Informations sur la manière de paramétrer des pare-feux avec
l'installation standard de Debian&nbsp;3.0 (paquet iptables)&nbsp;;

<item>Petit paragraphe détaillant pourquoi l'installation par le réseau
n'est pas une bonne idée et comment on peut l'éviter en utilisant les 
outils Debian&nbsp;;

<item>Petit paragraphe sur un article de l'IEEE qui souligne l'importance
d'une application rapide des rustines&nbsp;;

<item>Annexe sur la manière de paramétrer une bécane snort Debian, basé sur 
ce que Vladimir a envoyé à la liste de diffussion debian-security (le 3 
septembre 2001)&nbsp;;

<item>Information sur la manière dont est configurée logcheck dans Debian et
comment il peut être utilisé pour paramétrer HIDS&nbsp;;

<item>Informations sur les comptes utilisateurs et sur les analyses 
de profils&nbsp;;

<item>Inclusion de la configuration de apt.conf pour un /usr uniquement
lisible&nbsp;; copié à partir du courrier d'Olaf Meeuwissen envoyé
à la liste de diffusion debian-security&nbsp;;

<item>Nouvelle section sur le VPN qui contient quelques liens ainsi que 
les paquets disponibles dans Debian (besoin de contenu concernant 
l'installation de VPN et les problèmes spécifiques à Debian) basé sur les 
courriers de Jaroslaw Tabor et Samuli Suonpaa postés sur la liste de 
diffusion debian-security&nbsp;;

<item>Petite note concernant quelques programmes pour construire automatiquement
des prisons «&nbsp;chrootées&nbsp;»&nbsp;;

<item>Nouveau sujet de FAQ concernant identd d'après une discussion sur la liste de 
diffusion debian-security (février 2002, commencé par Johannes Weiss)&nbsp;;

<item>Nouveau sujet de FAQ concernant <prgn>inetd</prgn> d'après une discussion 
sur la liste de diffusion debian-security (février 2002)&nbsp;;

<item>Note d'introduction sur rcconf dans la section 
«&nbsp;désactivation de services&nbsp;»&nbsp;;

<item>Diverses approches concernant le LKM. Remerciements à Philipe Gaspar&nbsp;;

<item>Ajouts de liens vers les documents du CERT et les ressources Couterpane.
</list>

<sect1>Version&nbsp;1.99
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>
<item>Ajout d'un nouveau sujet de FAQ concernant le temps de réaction
à avoir pour corriger les failles de sécurité&nbsp;;
<item>Réorganisation des sections de la FAQ&nbsp;;
<item>Début d'une section concernant les pare-feux dans Debian
GNU/Linux (pourrait être un peu élargi)&nbsp;;
<item>Corrections de fautes signalées par Matt Kraai&nbsp;;
<item>Correction sur les informations DNS&nbsp;;
<item>Ajout d'informations sur whisker et nbtscan à la section audit&nbsp;;
<item>Correction d'URL erronées.
</list>
<sect1>Version&nbsp;1.98
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>
<item>Ajout d'une nouvelle section concernant l'utilisation de la 
Debian GNU/Linux pour réaliser des audits&nbsp;;
<item>Ajout d'infos concernant le démon finger depuis la liste de 
diffusion debian-security.
</list>
<sect1>Version&nbsp;1.97
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>
<item>Correction du lien pour Linux Trustees&nbsp;;
<item>Correction de fautes (rustines d'Oohara Yuuma 
et Pedro Zorzenon).
</list>

<sect1>Version 1.96
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>

<item>Réorganisation de la section installation et suppression de services et
ajout de nouvelles notes&nbsp;;

<item>Ajout de quelques notes concernant l'utilisation d'outils tels que
les outils de détection d'intrusion&nbsp;;

<item>Ajout d'un chapitre concernant la signature de paquets.

</list>

<sect1>Version&nbsp;1.95
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>

<item>Ajout de notes concernant la sécurité de Squid envoyés par 
Philipe Gaspar&nbsp;;

<item>Correction de liens rootkit. Merci à Philipe Gaspar.

</list>

<sect1>Version&nbsp;1.94
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>

<item>Ajout de quelques notes concernant Apache et Lpr/lpng&nbsp;;

<item>Ajout d'informations concernant les partitions noexec et readonly&nbsp;;

<item>Réécriture de la manière dont les utilisateurs peuvent aider 
aux problèmes liés à la sécurité Debian (sujet d'une FAQ).
</list>

<sect1>Version&nbsp;1.93
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>

<item>Correction de l'emplacement du programme mail&nbsp;;

<item>Ajout de nouveaux sujets à la FAQ.
</list>

<sect1>Version&nbsp;1.92
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>

<item>Ajout d'une petite section sur la manière dont Debian 
s'occupe de la sécurité&nbsp;;

<item>Clarification sur les mots de passe 
MD5 (merci à «&nbsp;rocky&nbsp;»)&nbsp;;

<item>Ajout d'informations concernant le renforcement de X
par Stephen van Egmond&nbsp;;

<item>Ajout de nouveaux sujets à la FAQ.

</list>

<sect1>Version &nbsp;.91
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>

<item>Ajout d'informations détaillées envoyées par Yotam Rubin&nbsp;;

<item>Ajout de renseignements sur la manière de mettre en place un 
«&nbsp;honeynet&nbsp;» en utilisant Debian GNU/Linux&nbsp;;

<item>Ajout de TODOS supplémentaires&nbsp;;

<item>Correction de nouvelles fautes (merci Yotam&nbsp;!).

</list>

<sect1>Version&nbsp;1.9
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>

<item>Ajout d'une rustine pour corriger des «&nbsp;fautes 
d'orthographe&nbsp;» et nouvelles informations (contributions de 
Yotam Rubin)&nbsp;;

<item>Ajout de liens vers d'autres documents en ligne (et hors 
ligne) tous deux figurant dans la section (voir <ref id="references">)&nbsp;;

<item>Ajout d'informations sur la configuration d'options de Bind pour restreindre 
l'accès au serveur DNS&nbsp;;

<item>Ajout d'informations sur la consolidation automatique d'un système Debian
(par référence aux paquets harden et bastille)&nbsp;;

<item>Suppression de quelques TODOs terminés et ajout de nouveaux.

</list>

<sect1>Version&nbsp;1.8
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>

<item>Ajout de la liste des utilisateurs et des groupes standard, donnée
par Joey Hess à la liste de discussion debian-security&nbsp;;

<item>Ajout d'informations sur les «&nbsp;rootkits&nbsp;» LKM 
(<ref id="LKM">) avec la contribution de Philipe Gaspar&nbsp;;

<item>Ajout d'informations sur Proftp avec la contribution 
d'Emmanuel Lacour&nbsp;;

<item>Rajout de l'annexe «&nbsp;pense-bête&nbsp;» d'Era Eriksson&nbsp;;

<item>Ajout de nouveaux TODOs et retrait de ceux terminés&nbsp;;

<item>Ajout manuel des rustines d'Era car elles n'ont pas été incluses dans
la version précédente.

</list>
<sect1>Version&nbsp;1.7
<p>Modifications d'Era Eriksson.
<list>
<item>Fautes de frappes et changements de formulation
</list>
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>
<item>Changements mineurs de balises&nbsp;: supprimer les balises
tt et les remplacer par les balises prgn/package.
</list>

<sect1>Version&nbsp;1.6 
<p>Modifications de Javier Fernández-Sanguino Peña.
<list>
<item>Ajout d'un lien sur le document publié dans le DDP (devrait
à terme remplacer l'original)&nbsp;;
<item>Démarrage d'une mini-FAQ
(qui devrait être élargie) avec quelques questions 
récupérées depuis ma boite de réception&nbsp;;
<item>Ajout d'informations générales concernant la sécurisation&nbsp;;
<item>Ajout d'un paragraphe au sujet de la distribution de 
courriers locaux&nbsp;;
<item>Ajout de quelques liens vers d'autres sources 
d'informations&nbsp;;
<item>Ajout d'informations sur le service d'impression&nbsp;;
<item>Ajout d'une liste de tâches sur le renforcement de la 
sécurité&nbsp;;
<item>Réorganisation des informations sur NIS et RPC&nbsp;;
<item>Ajout de quelques notes lors de la lecture de ce document 
sur mon nouveau Visor&nbsp;:) 
<item>Correction de certaines lignes mal formattées&nbsp;;
<item>Fautes de frappes corrigées&nbsp;;
<item>Ajout d'une idée Géniale/Paranoïaque avec la contribution de Gaby
Schilders.
</list>
<sect1>Version&nbsp;1.5 

<p>Modifications de Josip Rodin et Javier Fernández-Sanguino Peña.

<list>
<item>Ajout de paragraphes concernant BIND et quelques FIXMEs.  <!-- Removed
this because I found no evidence for it in the diffs. // era Rewrote
style in order to make it more formal.  -->
</list>
<sect1>Version&nbsp;1.4
    <p>
<list>
<item>Petit paragraphe sur la vérification des «&nbsp;setuid&nbsp;»
    <item>Différents nettoyages mineurs&nbsp;;
    <item>Découverte sur la manière d'utiliser <tt>sgml2txt -f</tt> pour la 
    version txt.
</list>
<sect1>Version&nbsp;1.3
    <p>
    <list>
    <item>Ajout de mise à jour de sécurité après le paragraphe 
    «&nbsp;après installation&nbsp;»&nbsp;;
    <item>Ajout d'un paragraphe proftpd&nbsp;;
    <item>Cette fois, quelque chose concernant XDM a réellement été écrit. 
    Désolé pour la dernière fois.
    </list>
<sect1>Version&nbsp;1.2
    <p>
    <list>
    <item>Beaucoup de corrections grammaticales de 
     James Treacy, nouveau paragraphe XDM.
    </list>
<sect1>Version&nbsp;1.1
    <p>
    <list>
    <item>Corrections de fautes de frappes, divers ajouts.
    </list>
<sect1>Version&nbsp;1.0
    <p>
    <list>
   <item>Première publication.
   </list>
<!-- Fin M-a-j 1er Dec 2002, Pierre Machard. Tout ce qui est au dessus de ce
commentaire est à jour à la date du 1er Dec. C'est à dire == à la version dans 
le cvs anglais à cette date. Normalement c'est relu, affiné, uniformisé. -->


<sect>Remerciements à&nbsp;:
<p>
<list>
<item>Alexander Reelsen qui a écrit le document original. 

<item>Javier Fernández-Sanguino qui a ajouté des informations
au document original.

<item>Robert van der Meulen pour les paragraphes sur les quotas ainsi que de
nombreuses bonnes idées.

<item>Ethan Benson qui a corrigé le paragraphe sur PAM et qui a eu quelques idées de qualité.

<item>Dariusz Puchalak qui a contribué aux informations de plusieurs chapitres.

<item>Gaby Schilders qui a eu une idée Géniale/Paranoïaque sympathique.

<item>Era Eriksson qui a éliminé les fautes de langage et qui a contribué à
l'annexe «&nbsp;pense-bête&nbsp;».

<item>Philipe Gaspar qui a écrit les informations concernant LKM.

<item>Yotam Rubin qui a contribué des corrections pour toutes les fautes de frappes ainsi que 
les informations liées aux versions de Bind et aux mots de passes md5.

<item>Toutes les personnes qui m'ont suggéré des améliorations qui
(éventuellement) ont été incluses ici (voir <ref id="changelog">).

<item>Tout le monde qui m'a encouragé (Alexander) à écrire ce HOWTO (qui plus tard a évolué vers le Manuel).

<item>Tout le projet Debian.
</list>

<chapt>Avant de commencer.


<sect>Que voulez-vous faire de votre système&nbsp;?

<p>
Sécuriser un système Debian n'est pas différent de la sécurisation d'un autre
système&nbsp;; de façon à procéder correctement, vous devez tout d'abord
décider quelle en sera l'utilisation. Ensuite, vous devez penser aux tâches
à prendre en compte si vous désirez réellement sécuriser votre système.

<p>
Vous constaterez que ce manuel va du début à la fin, c.-à-d. que vous
trouverez des informations sur les tâches à réaliser avant,
pendant et après l'installation de votre système Debian. Les tâches
peuvent être découpées comme ceci&nbsp;:

<list>

<item>Décider quels sont les services dont vous avez besoin et vous 
limiter à ceux-là. Ceci inclut la désactivation ou la désinstallation des 
services indésirables et l'ajout de filtres de type pare-feu ou de tcpwrappers.

<item>Limiter les utilisateurs et les permissions sur votre système.

<item>Consolider les services disponibles&nbsp;; ainsi, même en cas
d'intrusion, l'impact sur votre système sera minimisé.

<item>Utiliser des outils appropriés pour garantir qu'une utilisation 
non autorisée sera détectée et que vous pourrez prendre des mesures
adéquates.

</list>

<sect id="references">Être conscient des problèmes de sécurité

<p>
Ce manuel n'explique pas pourquoi certains problèmes sont considérés comme
des risques pour la sécurité. Toutefois, vous pourriez désirer avoir une
meilleure vision de la sécurité sur les systèmes Unix et plus particulièrement 
le système Linux. Prenez le temps de lire les documentations relatives à la 
sécurité afin que, confronté à différents choix, vous puissiez prendre des 
décisions éclairées. Debian GNU/Linux est basée sur le noyau Linux&nbsp;; 
aussi, la plupart des informations concernant Linux, venant d'autres 
distributions ou d'UNIX en général, peuvent être appliquées (même si les 
outils utilisés ou les programmes disponibles diffèrent).

<p>Quelques documents pratiques&nbsp;:

<list>

<item>Le <url name="Linux Security HOWTO"
id="http://www.tldp.org/HOWTO/Security-HOWTO.html">
(aussi disponible sur <url id="http://www.linuxsecurity.com/docs/LDP/Security-HOWTO.html" name="LinuxSecurity">) 
est une des meilleures références concernant la sécurité Linux.

<item>Le <url name="Security Quick-Start HOWTO for Linux" 
id="http://www.linuxsecurity.com/docs/LDP/Security-Quickstart-HOWTO/">
est également une très bonne base pour les utilisateurs néophytes 
(aussi bien à Linux qu'en matière de sécurité).

<item>
  Le <url id="http://seifried.org/lasg/" name="Linux Security
  Administrator's Guide"> (paquet Debian
  <package>lasg</package>) est un guide complet qui englobe tous les
  problèmes de sécurité Linux, de la sécurité du noyau jusqu'aux VPN.
  Veuillez noter qu'il n'a pas été mis à jour depuis 2001, mais certaines
  informations peuvent encore être pertinentes.
  <footnote>
  Il a été remplacé à un moment donné par le <url id="http://seifried.org/lskb"
  name="Linux Security Knowledge Base ">. Cette documentation est
  également disponible dans Debian via le paquet <package>lksb</package>.
  Il est à nouveau de retour en tant que le <em>Lasg</em>.
  </footnote>

<item>Dans <url name="Securing and Optimizing Linux: RedHat Edition"
id="http://www.tldp.org/links/p_books.html#securing_linux"> vous 
pouvez trouver un document similaire à ce manuel, mais destiné à RedHat&nbsp;;
certaines questions ne sont pas spécifiques à cette distribution et
peuvent s'appliquer à Debian.

<item>IntersectAlliance a publié des documents qui peuvent être utilisés
comme fiches de référence sur la manière de consolider les serveurs
Linux (et leurs services)&nbsp;; ils sont disponibles sur
<url id="http://www.intersectalliance.com/projects/index.html" name="leur site">.

<item>Pour les administrateurs réseaux, une bonne référence pour bâtir un
réseau sécurisé est le <url name="Securing your Domain HOWTO"
 id="http://www.linuxsecurity.com/docs/LDP/Securing-Domain-HOWTO/">.


<item>Si vous voulez évaluer le programme que vous allez utiliser (ou 
en créer de nouveaux) vous devriez lire le <url name="Secure Programs HOWTO"
id="http://www.tldp.org/HOWTO/Secure-Programs-HOWTO.html"> (le document de
référence est disponible à <url id="http://www.dwheeler.com/secure-programs/">,
il inclut des présentations et des conférences de l'auteur, David Wheeler).

<item>Si vous pensez installer un pare-feu, vous 
devriez lire le <url name="Firewall HOWTO"
id="http://www.tldp.org/HOWTO/Firewall-HOWTO.html"> et le  <url
name="IPCHAINS HOWTO"
id="http://www.tldp.org/HOWTO/IPCHAINS-HOWTO.html"> (pour les noyaux antérieurs
au 2.4).

<item>Finalement, une bonne fiche de référence à avoir sous la main est le 
<url name="Linux Security ReferenceCard"
 id="http://www.linuxsecurity.com/docs/QuickRefCard.pdf">.

</list>

<p>
Dans tous les cas, vous trouverez plus d'informations concernant les services
expliqués ici (NFS, NIS, SMB...) dans les nombreux HOWTO du <url
name="Projet de Documentation Linux" id="http://www.tldp.org/">. Certains d'entre
eux discutent de la sécurité d'un service donné, donc n'oubliez pas 
de jeter un &oelig;il là-dessus également.

<p>Les documents HOWTO du Projet de Documentation Linux sont disponibles
dans Debian GNU/Linux via l'installation des paquets 
<package>doc-linux-text</package> (version texte) ou
<package>doc-linux-html</package> (version html). Après l'installation,
ces documents seront disponibles dans, respectivement, les répertoires
<file>/usr/share/doc/HOWTO/en-txt</file> et
<file>/usr/share/doc/HOWTO/en-html</file>.

<p>Autres livres Linux recommandés&nbsp;:

<list>

<item>Maximum Linux Security&nbsp;: A Hacker's Guide to Protecting Your Linux
  Server and Network.  Anonymous. Paperback - 829 pages. Sams Publishing.
  ISBN&nbsp;: 0672313413.July 1999.

<item>Linux Security By John S. Flowers. New Riders; ISBN: 0735700354
March 1999

</list>

<p>Livres divers (qui se rapportent à des questions générales concernant UNIX
et la sécurité, pas spécifiques à Linux)&nbsp;:

<list>

<item><url id="http://www.ora.com/catalog/puis/noframes.html"
        name="Practical Unix and Internet Security (2nd Edition)">
Garfinkel, Simpson, and Spafford, Gene; O'Reilly Associates;
        ISBN 0-56592-148-8; 1004pp; 1996.

<item>Firewalls and Internet Security Cheswick, William R. and Bellovin,
        Steven M.; Addison-Wesley; 1994; ISBN 0-201-63357-4; 320pp.

</list>

<p>Quelques sites Web utiles pour se tenir informé des questions de 
sécurité&nbsp;:

<list>

<item><url name="NIST Security Guidelines"
id="http://csrc.nist.gov/fasp/index.html">.

<item><url name="Security Focus" id="http://www.securityfocus.com">
le serveur qui héberge la base de données des vulnérabilités
	Bugtraq ainsi que ses listes de discussions. Il fournit également
	des informations générales sur la sécurité ainsi que des actualités 
	et des rapports.

<item> <url name="Linux Security"
	id="http://www.linuxsecurity.com/">. Informations générales 
	concernant la sécurité Linux (outils, actualités, etc.). Le plus utile
	est la page de 
	<url name="documentation principale"
	id="http://www.linuxsecurity.com/resources/documentation-1.html">.

<item> <url name="Linux firewall and security site" id="
	http://www.linux-firewall-tools.com/linux/">. Informations générales
	concernant les pare-feu Linux et les outils pour les contrôler et les
	administrer.
</list>

<sect>Comment Debian gère la sécurité&nbsp;?
<p>
Tout comme vous avez une vue générale de la sécurité dans Debian GNU/Linux,
vous devez connaître les différents problèmes auxquels Debian s'attaque
afin de fournir un système sécurisé&nbsp;:
<list>

<item>Les problèmes Debian sont toujours traités ouvertement, même ceux liés à
la sécurité. Les problèmes de sécurité sont abordés ouvertement sur la liste de
discussions debian-security. Les bulletins de sécurité de Sécurité Debian sont
envoyées sur les listes de discussions publiques (interne et externe) et
publiées sur les serveurs publics. Comme le déclare le 
<url name="Contrat Social Debian" id="http://www.debian.org/social_contract">&nbsp;:
<em>
Nous ne cacherons pas les problèmes.
</em></p><p><em>
Nous garderons toujours notre base de données des rapports de bogues ouverte
au public. Les rapports que les utilisateurs remplissent en ligne seront
immédiatement visibles par les autres.
</em></p>

<item>Debian suit les problèmes de sécurité de très près. L'équipe de la 
sécurité consulte les sources liées à la sécurité, la plus importante
étant <url name="Bugtraq" id="http://www.securityfocus.com/cgi-bin/vulns.pl">,
à la recherche de paquets possédant des problèmes de sécurité et qui
pourraient être inclus dans Debian.

<item>Les mises à jour liées à la sécurité sont la première priorité. Lorsqu'un 
problème survient dans un paquet Debian, la mise à jour est préparée aussi vite 
que possible et elle est intégrée dans nos versions stable et unstable, et
pour toutes les architectures.

<item>Les informations concernant la sécurité sont centralisées en un point
unique, <url id="http://security.debian.org/">.

<item>Debian essaie toujours d'améliorer la sécurité globale concernant les 
nouveaux projets de la distribution, comme les vérifications automatiques des 
signatures de paquets.

<item>Debian fournit de nombreux outils liés à la sécurité
pour l'administration système et la surveillance. Les développeurs essayent 
de lier étroitement ces outils à la distribution de façon à créer une suite
d'outils destinée à rendre effectives les règles locales de sécurité. Les
outils disponibles sont&nbsp;: vérificateurs d'intégrité,
outils d'audit, outils de consolidation, outils pour pare-feu, outils de
détection d'intrusion, etc.

<item>Les responsables de paquets sont avertis des problèmes de sécurité. 
Ceci conduit à de nombreuses installations de service «&nbsp;sécurisé par
défaut&nbsp;»&nbsp;; cela peut parfois engendrer certaines limitations à
une utilisation normale.
Toutefois, Debian essaye d'équilibrer les problèmes de sécurité et la facilité 
d'administration&nbsp;: par exemple, les systèmes ne sont pas installés en
mode <em>désactivé</em> comme sur les distributions de la famille BSD.
Quelques problèmes spéciaux, tels les programmes <em>setuid</em>, sont abordés par la
<url id="http://www.debian.org/doc/debian-policy/" name="Charte Debian">.

</list>

<p>
Ce document vise à une meilleure distribution en matière de sécurité, en
publiant des informations sur la sécurité spécifiques à Debian qui complètent
d'autres documents liés à la sécurité concernant les outils utilisés par
Debian ou par le système d'exploitation lui-même (voir <ref id="references">).

<chapt>Avant et pendant l'installation

<sect id="bios-passwd">Choisir un mot de passe pour le BIOS
<p>
Avant d'installer un système d'exploitation sur votre ordinateur, créez un 
mot de passe pour le BIOS. Après l'installation (une fois que vous avez rendu 
possible un démarrage à partir du disque dur), retournez dans le BIOS et 
changez la séquence de démarrage afin de rendre 
impossible le démarrage à partir d'une disquette, d'un cdrom ou de tout autre
périphérique. Sinon un pirate n'a besoin que d'un accès physique et d'une disquette 
de démarrage pour accéder au système complet.

<p>
Désactiver le démarrage sans mot de passe est solution encore meilleure.
Ceci peut être très efficace pour un serveur car il n'est pas redémarré très souvent.
L'inconvénient de cette méthode est que le redémarrage nécessite l'intervention 
d'une personne, ce qui peut poser des problèmes si la machine n'est pas facilement
accessible.

<p>Remarque&nbsp;: certains BIOS ont des mots de passe par défaut bien connus
et des applications existent également pour récupérer les mots de passe du BIOS.
Corrolaire&nbsp;: ne dépendez pas de cette mesure pour sécuriser l'accès console
du système.

<sect>Partitionner le système <!-- l'espace disque ? FBO -->

<sect1>Choisir un schéma de partitionnement intelligent
<p>
Un schéma de partitionnement intelligent dépend de l'utilisation de la 
machine. Une bonne règle est d'être assez large avec vos partitions et
de faire attention aux facteurs suivants&nbsp;:

<list>
<item>Une arborescence de répertoires modifiables par un utilisateur,
telles que <file>/home</file> et <file>/tmp</file>, doit être sur une partition distincte. 
Cela réduit le risque qu'un déni de service par utilisateur <!-- malveillant -->
<!-- (bof, l'utilisateur n'est pas nécessairement malveillant --> <!-- c'est bien : a user
DoS, deny of service par un utilisateur  que tu traduis ? --> remplisse
votre point de montage «&nbsp;/&nbsp;» et rende votre système inutilisable. 
(Note&nbsp;: ce n'est pas strictement vrai car il existe toujours un espace 
réservé à l'utilisateur root qu'un utilisateur normal ne pourra pas remplir.)

<item>Toute partition qui peut fluctuer, par exemple <file>/var</file> (surtout 
<file>/var/log</file>) devrait être également sur une partition distincte. Sur un
système Debian, vous devriez créer <file>/var</file> un petit peu plus grand que la 
normale car les paquets téléchargés (le cache d'apt) sont stockés dans 
<file>/var/apt/cache/archives</file>.

<item>Toute partition où vous voulez installer des logiciels ne faisant pas
partie de la distribution devrait être sur une partition distincte. Selon le
standard sur la hiérarchie des fichiers (FHS), c'est <file>/opt</file> ou
<file>/usr/local</file>. Si ce sont des partitions distinctes, elles ne seront
pas effacées si vous devez réinstaller Debian.

<item>D'un point de vue sécurité, il est bien d'essayer de mettre les 
données statiques sur une partition et de monter celle-ci en 
lecture seule. Encore mieux, mettre les données sur un périphérique en 
lecture seule. Voir ci-dessous pour plus d'informations.
</list>

<p>Dans le cas d'un serveur de courriers, il est important d'avoir une partition
séparée pour le répertoire des courriers (spool). Les utilisateurs distants
(soit consciemment, soit inconsciemment) peuvent remplir le répertoire des
courriers (<file>/var/mail</file> ou <file>/var/spool/mail</file>). Si le
répertoire est sur une partition séparée, cette situation ne rendra pas le
système inutilisable. Sinon (si le répertoire est sur la même partition que
<file>/var</file>), le système pourrait avoir d'importants problèmes&nbsp;: les
entrées des journaux ne seront pas crées, aucun paquet ne pourra être installé
et certains programmes pourraient même avoir des problèmes à être exécutés
(s'ils utilisent <file>/var/run</file>).

<p>Pour les partitions pour lesquelles vous ne pouvez pas être certain de la
place nécessaire, installez Logical Volume Manager
(<package>lvm-common</package> et les binaires nécessaires pour votre noyau qui
peuvent être soit <package>lvm10</package>, soit <package>lvm6</package> ou
encore <package>lvm5</package>). En utilisant <tt>lvm</tt>, vous pouvez créer
des groupes de volumes répartis sur plusieurs volumes physiquesa.

<sect2>Choisir les systèmes de fichiers appropriés

<p>Pendant le partitionnement du système, vous devez également décider du
système de fichiers à utiliser. Le système de fichiers choisi par défaut pendant
l'installation de Debian pour les partitions Linux est <tt>ext2</tt>. Cependant,
il vous est recommandé de choisir un système de fichiers journalisé comme
<tt>ext3</tt>, <tt>reiserfs</tt>, <tt>jfs</tt> ou <tt>xfs</tt> pour réduire les
problèmes découlant d'un plantage système dans les cas suivants&nbsp;:

<list>

<item>pour les portables pour tous les systèmes de fichiers installés. Ainsi, si
votre batterie est vide inopinément ou si le système se gèle à cause d'un
problème matériel (comme pour la configuration de X, ce qui est assez courant),
vous êtes moins susceptible de perdre des données pendant le redémarrage
matériel.

<item>pour le systèmes de production qui stockent des quantités importantes de
données (comme les serveurs de courriers, les serveurs FTP, les systèmes de
fichiers en réseau, etc.), cela est recommandé pour ces partitions. Ainsi, en
cas de plantage du système, le serveur nécessitera moins de temps pour récupérer
et vérifier le système de fichiers et une perte de données est moins probable.

</list>

<p>En laissant de côté les problèmes de performance concernant les systèmes de
fichiers journalisés (ceci pouvant parfois tourner à la guerre de religion), il
est habituellement mieux d'utiliser le système de fichiers <tt>ext3</tt>. La
raison pour cela est qu'il est rétro-compatible avec <tt>ext2</tt>, donc s'il y
a un quelconque problème avec la journalisation, vous pouvez la désactiver et
toujours avoir un système de fichiers fonctionnel. Également, si vous avez
besoin de récupérer le système avec une disquette d'amorçage (ou un cédérom),
vous n'avez pas besoin d'un noyau personnalisé. Si le noyau est en version 2.4,
le support <tt>ext3</tt> est déjà disponible, s'il s'agit d'un noyau 2.2, vous
pourrez amorcer le système de fichiers même si vous n'aurez plus la capacité de
journalisation. Si vous utilisez d'autres systèmes de fichiers, vous trouverez
que vous ne pourrez pas effectuer de récupération à moins d'avoir un noyau 2.4
avec les modules nécessaires inclus dans le noyau. Si vous êtes bloqué avec un
noyau 2.2 sur la disquette de sauvegarde, cela pourrait même être encore plus
difficile d'accéder à des partitions <tt>reiserfs</tt> ou <tt>xfs</tt>.

<p>Dans tous les cas, il est possible que l'intégrité des données soit meilleure
avec <tt>ext3</tt> car il fait de la journalisation des données par fichier
alors que les autres ne font que de la journalisation par méta-données, voir
<url id="http://lwn.net/2001/0802/a/ext3-modes.php3">.

<sect>Ne pas se connecter à l'Internet tant que tout n'est pas prêt

<p>Le système ne devrait pas 
être connecté à l'Internet pendant l'installation. Ceci peut paraître 
stupide mais il faut savoir que l'installation par le réseau est une méthode
d'installation habituelle. Étant donné que le système
va installer et activer les services immédiatement, si le système est
connecté à Internet et que les services ne sont pas configurés correctement,
vous les exposez à des attaques.

<p>Il faut noter également que certains services peuvent avoir des trous de 
sécurité qui n'ont pas encore été corrigés dans les paquets que vous 
utilisez pour l'installation. C'est généralement vrai si vous 
installez depuis de vieux médias (comme des cédéroms). Dans ce 
cas, il se peut que votre système soit compromis avant même la 
fin de l'installation&nbsp;!

<p>Étant donné que l'installation et les mises à jours peuvent être
faites par Internet, vous pourriez penser que c'est une bonne idée
d'utiliser cette caractéristique lors de l'installation. Si le système
va être connecté directement à l'Internet (et pas protégé par un pare-feu
ou un NAT), il est plus judicieux de l'installer sans connexion
à Internet et d'utiliser un miroir local de paquets contenant à la fois les
paquets sources et les mises à jour de sécurité. Vous pouvez mettre en
place des miroirs de paquets en utilisant un autre système connecté à
l'Internet et des outils spécifiques à Debian (si c'est un système
Debian) tels que <package>apt-move</package> ou
<package>apt-proxy</package> ou tout autre outil de miroir pour fournir
l'archive aux systèmes installés. Si vous ne pouvez pas faire cela, vous pouvez
mettre en place des règles de pare-feu pour limiter l'accès au système pendant
la mise à jour (voir <ref id="fw-security-update">).

<sect>Définir un mot de passe root
<p>
Définir un bon mot de passe est la condition de base pour avoir un 
système sécurisé. Consultez <manref section="1" name="passwd"> pour quelques
conseils pour créer de bons mots de passe. Vous pouvez également utiliser un
générateur automatique de mots de passe pour faire cela pour vous (voir <ref
id="user-pwgen">).

<p>FIXME&nbsp;: Ajouter des pointeurs vers des informations sur de bons mots de passe.

<sect>Activer les mots de passe masqués et les mots de passe MD5
<!-- J'ai change ombrés par masqués car plus significatif. Le terme de shadow peut être conservé
car c'est le processus "shadow" dans son ensemble. jpg -->
<p>
A la fin de l'installation, il vous sera demandé si les mots de passe
masqués doivent être activés. Répondez oui à cette question&nbsp;; ainsi les 
mots de passe seront stockés dans le fichier <file>/etc/shadow</file>.
Seul l'utilisateur root et le groupe shadow peuvent lire ce 
fichier, ainsi aucun utilisateur ne sera en mesure de récupérer une copie
de ce fichier afin de le passer par un programme <em>craqueur</em> de mots de passe.
Vous pouvez basculer entre les mots de passe masqués et les mots de passes 
normaux à n'importe quel moment en utilisant <tt>shadowconfig</tt>. 

<p>Vous pouvez en lire davantage sur les mots de passes masqués dans le
<url
name="Shadow Password"
id="http://www.linuxdoc.org/HOWTO/Shadow-Password-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/Shadow-Password.txt.gz</file>).

<p>
De plus, pendant l'installation il vous sera demandé si vous voulez
utiliser les mots de passe MD5. C'est généralement une bonne idée étant
donné que cela permet des mots de passe plus longs et un meilleur chiffrement.
MD5 permet de s mots de passer de plus de 8 caractères. Cela peu, si c'est
utilisé à bon escient, rendre plus difficiles les attaques par la force brute
sur les mots de passe système. Concernant les mots de passe MD5, il s'agit de
l'option par défaut quand vous installer le paquet <package>passwd</package>.
Vous pouvez changer cela à tout moment après l'installation en faisant
<prgn>dpkg-reconfigure -plow passwd</prgn>. Vous pouvez reconnaître les mots de
passe md5 dans le fichier <file>/etc/shadow</file> par leur préfixe $1$.

<p>
Cela modifie tous les fichiers sous <file>/etc/pam.d</file> en modifiant la
ligne password en insérant md5 dans celle-ci&nbsp;:
<example>
      password required pam_unix.so md5 nullok obscure min=6 max=16
</example>

<p>Si <tt>max</tt> n'est pas positionné à plus de 8, la modification ne sera pas
utile du tout. Pour plus d'informations sur cela, lisez <ref id="auth-pam">.

<p>Remarque&nbsp;: même quand les mots de passe MD5 sont activés, la
configuration par défaut dans Debian ne modifie pas la valeur précédemment
positionnée de <tt>max</tt>.

<sect>Administrer le nombre minimum de services nécessaires

<p>
Les services sont des programmes tels que les serveurs ftp et les 
serveurs web. Puisqu'ils doivent <em>écouter</em> les connexions
entrantes qui demandent le service, des ordinateurs externes peuvent se
connecter au vôtre. Les services sont parfois vulnérables (entendez par 
là qu'ils peuvent être compromis par certaines attaques)&nbsp;: ils créent des
risques pour la sécurité. <!-- ne peut on pas utiliser facteurs risques plutôt que 
risques de sécurité? Il me semble que ca passerait mieux. jpg -->
<!-- facteurs de risque, faiseurs de risques  oui pb -->
<p>
Vous ne devriez pas installer les services dont vous n'avez pas besoin 
sur votre machine. Chaque service installé peut introduire de nouveaux
trous de sécurité, peu évidents ou inconnus, sur votre ordinateur.

<p>
Comme vous le savez sans doute déjà, lorsque vous installez un service, la 
démarche par défaut est de l'activer. 
Dans une installation Debian par défaut, sans services installés, 
le nombre des services actifs est assez faible et il est même plus faible  
quand on parle des services réseaux. 
Leur nombre dans Debian 2.1 n'était pas aussi faible que celui dans Debian 
2.2 (quelques services inetd étaient actifs par défaut) et dans Debian 
2.2 le service rpc est activé à l'installation. 
Rpc est installé par défaut car il est nécessaire à de nombreux services, 
par exemple NFS, pour tourner sur un système bien spécifique. Cependant, 
il peut être facilement retiré, voir <ref id="disableserv"> sur la manière 
de le désactiver.

<p>
Lorsque vous installez un nouveau service réseau (démon) sur votre 
système Debian GNU/Linux, il peut être activé de deux façons&nbsp;: via le 
super démon inetd (une ligne sera ajoutée à <file>/etc/inetd.conf</file>) 
ou via un programme qui s'attache lui-même aux interfaces réseaux. Ces 
programmes sont contrôlés via les fichiers <file>/etc/init.d</file> qui sont 
appelés lors du démarrage au moyen du mécanisme SysV (ou un autre) en 
utilisant des liens symboliques dans <file>/etc/rc?.d/*</file> (pour plus 
d'informations sur la manière dont cela est fait, lire
<file>/usr/share/doc/sysvinit/README.runlevels.gz</file>).

<!-- La traduction de deamon existe => démon. Pourquoi ne pas l'employer? jpg -->
<!-- d'accord, pb -->
<p>
Si vous voulez garder certains services tout en les utilisant rarement, 
utilisez les commandes update, par exemple «&nbsp;update-inetd&nbsp;» et
«&nbsp;update-rc.d&nbsp;» pour les supprimer du processus de démarrage.

<sect1 id="disableserv">Désactivation de services démon 

<p>
La désactivation d'un démon est relativement simple. Il y a différentes
méthodes&nbsp;:
<list>

<item>supprimer les liens de <file>/etc/rc${runlevel}.d/</file> ou re-nommer
les liens (de sorte qu'ils ne commencent pas avec «&nbsp;S&nbsp;»)&nbsp;;

<item>donner un autre nom au script <file>/etc/init.d/_nom_service_</file>,
(par exemple <file>/etc/init.d/OFF._nom_service_</file>)&nbsp;;

<item>retirer le droit d'exécution du fichier 
<file>/etc/init.d/_nom_service_</file>&nbsp;;

<item>modifier le script <file>/etc/init.d/_nom_service_</file> pour qu'il 
s'arrête immédiatement.
</list>

<p>Vous pouvez supprimer les liens de /etc/rc${runlevel}.d/ manuellement ou
en utilisant <tt>update-rc.d</tt> (voir <manref section="8"
name="update-rc.d">). Par exemple, vous pouvez désactiver l'exécution d'un 
service dans le niveau d'exécution multi-utilisateur en faisant&nbsp;:

<example>
update-rc.d stop XX 2 3 4 5 .
</example>

<p>Veuillez noter que, si vous <em>n'utilisez</em> pas 
<package>file-rc</package>, <tt>update-rc.d -f _service_ remove</tt>
ne fonctionnera pas correctement, étant donné que <em>tous</em> les liens 
sont supprimés, seules la réinstallation ou la mise à jour du paquet 
créera à nouveau ces liens (ce n'est probablement pas ce que 
vous voulez). Si vous pensez que ce n'est pas intuitif, vous avez sans
doute raison (voir <url id="http://bugs.debian.org/67095" name="Bug 67095">. 
Voici un passage de la page de manuel&nbsp;:
<!-- traduite en français déjà ! pb-->

<example>
Quand un fichier /etc/rcrunlevel.d/[SK]??nom existe déjà, alors
  update-rc.d ne fait rien. C'est ainsi pour que l'administrateur système 
  puisse réarranger les liens -- à condition qu'il en reste au moins un -- 
  sans que sa configuration soit réécrite.
</example>

<p>Si vous utilisez <package>file-rc</package>, toutes les informations 
concernant le démarrage des services sont gérées par un fichier de 
configuration commun et sont conservées même si les paquets sont retirés du 
système.

<p>Vous pouvez utilisez l'interface texte (TUI Text User Interface)<!--Dois-je le traduire. Comm de jpg: Je ne pense pas.-->
fournie par <package>rcconf</package> pour faire tous ces changements 
facilement (<prgn>rcconf</prgn> fonctionne pour <package>file-rc</package> ainsi que pour les 
niveaux d'exécution normaux de type System V).
<p>D'autres méthodes (non recommandées) de désactivation de services sont&nbsp;:
<tt>chmod 644 /etc/init.d/daemon</tt> (mais ceci donne un message d'erreur au
démarrage), ou modifier le script <file>/etc/init.d/daemon</file> (en ajoutant
une ligne <prgn>exit 0</prgn> au début ou en commentant la partie 
<tt>start-stop-daemon</tt>). Étant donné que les fichiers init.d sont des 
fichiers de configuration, ils ne seront pas ré-écris lors d'une mise à jour.

<p>Malheureusement, contrairement à d'autres systèmes d'exploitation (UNIX), 
les services dans Debian ne peuvent être désactivés en modifiant les fichiers
dans <file>/etc/default/_nomservice_</file>.

<p>FIXME&nbsp;: Ajouter des informations sur la gestion des démons par file-rc
<!-- J'ai utilisé démon au lieu de deamon. Quelle uniformisation? jpg -->

<sect1 id="inetd">Désactivation des services inetd
<p>
Vous devriez arrêter tous les services non nécessaires sur votre système, comme
<prgn>echo</prgn>, <prgn>chargen</prgn>, <prgn>discard</prgn>, <prgn>daytime</prgn>, <prgn>time</prgn>, <prgn>talk</prgn>, <prgn>ntalk</prgn> et les r-services 
(<prgn>rsh</prgn>, <prgn>rlogin</prgn> et <prgn>rcp</prgn>) qui sont considérés comme EXTRÈMEMENT dangereux (utilisez <prgn>ssh</prgn> à la 
place). Après la désactivation de ceux-ci, vous devriez vérifier si vous avez 
réellement besoin du démon <prgn>inetd</prgn>. De nombreuses personnes préfèrent 
utiliser les démons plutôt que d'appeler des services via <prgn>inetd</prgn>. Le 
La possibilité de <em>déni de service</em> sur <prgn>inetd</prgn> existe, ce
qui peut augmenter notablement la charge de la machine. Si vous désirez
toujours lancer un service du genre d'<prgn>inetd</prgn>, tournez-vous plutôt vers un
démon inetd plus configurable tel <prgn>xinetd</prgn> ou <prgn>rlinetd</prgn>.

<p>
Vous pouvez désactiver les services en modifiant directement 
<file>/etc/inetd.conf</file>, mais Debian offre un meilleur moyen&nbsp;:
<tt>update-inetd</tt> (qui commente les services de manière à ce qu'ils 
puissent être facilement réactivés). Vous pouvez supprimer le démon <prgn>telnet</prgn> 
en exécutant cette commande pour changer le fichier de configuration
et redémarrer le démon (dans ce cas le service est désactivé)&nbsp;:

<example>
/usr/sbin/update-inetd --disable telnet
</example>
<!-- # /etc/init.d/inetd restart N'est pas nécessaire étant donné que la 
page de man dit que update-inetd envoi un SIGHUP, 
commenté comme suggéré par Dariusz Puchalak -->

<p>Si vous désirez des services en attente, mais qui n'écoutent pas toutes
les adresses IP de votre hôte, vous voudrez peut-être utiliser des fonctions
non documentées de <prgn>inetd</prgn>.<!-- FIXME write the information sent
by Alexander to the debian-security mailing list -->. Ou utilisez un autre 
démon tel que <prgn>xinetd</prgn>.

<sect>Installer le minimum de logiciels nécessaires

<p>Debian est fournie avec une <em>grande quantité</em> de logiciels, par
exemple, Debian&nbsp;3.0 <em>woody</em> inclut presque 6&nbsp;cédéroms de
logiciels et des milliers de paquets. Avec autant de logiciels et même si
l'installation du système de base est assez réduite
<footnote>Par exemple, dans Debian woody, elle est d'environ 40&nbsp;Mo, essayez
ceci&nbsp;:
<example>
  $ size=0
  $ for i in `grep -A 1 -B 1 "^Section: base" /var/lib/dpkg/available |
  grep -A 2 "^Priority: required" |grep "^Installed-Size" |cut -d : -f 2
  `; do size=$(($size+$i)); done
  $ echo $size
  34234
</example>
</footnote>
vous pourriez vous laisser entraîner<!--  carried away ? --> et installer plus
de logiciels qu'il n'est vraiment nécessaire sur votre système.

<p>Comme vous connaissez déjà l'utilité de votre système (n'est-ce pas&nbsp;?),
vous ne devez installer que les logiciels qui sont vraiment nécessaires pour
qu'il fonctionne. Tout outil non nécessaure qui est installé pourrait être
utilisé par un utilisateur qui voudrait compromettrele système ou par un intrus
externe qui aurait obtenu un accès shell (ou par exécution de code à distance
grâce à un service exploitable). <!-- exploitable ~= susceptible d'exploit ? -->

<p>La présence, par exemple, d'outils de développement (un compilateur C) ou de
langages interprétés (comme <prgn>perl</prgn> &ndash; mais voir ci-dessous &ndash;, 
<prgn>python</prgn>, <prgn>tcl</prgn>, etc.) pourrait aider un attaquant à
compromettre le système un peu plus&nbsp;:

<list>
<item>lui permettre de faire une escalade de privilège. Il est plus facile, par
exemple, d'exécuter des exploits locaux dans le système si un débogueur et un
compilateur sont prêts à les compiler et à les tester&nbsp;!

<item>fournir des outils qui pourraient aider l'attaquant à utiliser le système
compromis comme une <em>base d'attaque</em> contre d'autres systèmes
<footnote>
Beaucoup d'intrusions ne sont faites que pour avoir accès aux ressources pour
effectuer des activités illégales (attaques de déni de service, envoi de spams,
serveurs FTP illicites, pollution de DNS, etc.) plus que pour obtenir des
données confidentielles du système compromis.
</footnote>

</list>

<p>Bien sûr, un intrus ayant un accès shell local peut télécharger son propre
jeu d'outils et les exécuter et le shell lui-même peut être utilisé pour créer
des programmes complexes. Supprimer les logiciels non nécessaires ne va pas
aider à <em>prévenir</em> le problème, mais cela rendra la tâche un peu plus
difficile pour un attaquant (et certains pourraient abandonner dans cette
situation et aller chercher des cibles plus faciles). Ainsi, si vous laissez des
outils sur un système de production qui peuvent être utilisés pour attaquer des
systèmes à distance (voir <ref id="vuln-asses">), vous pouvez vous attendre à ce
qu'un intrus les utilise également s'ils sont disponibles.

<sect1>Supprimer Perl

<p>Vous devez prendre en compte qu'enlever <prgn>perl</prgn> peut ne pas très
simple (en fait, cela peut être assez difficile) sur un système Debian car il
est utilisé par beaucoup d'outils système. Le paquet
<package>perl-base</package> est également <em>Priority: required</em> (ce qui
veut tout dire). C'est tout de même faisable, mais vous ne pourrez pas exécuter
d'applications <prgn>perl</prgn> sur le système&nbsp;; vous devrez également
tromper le système de gestion des paquets pour lui faire croîre que le paquet
<package>perl-base</package> est installé même si ce n'est pas le cas.
<footnote>Vous pouvez créer (sur un autre système) un paquet bidon avec
<package>equivs</package>
</footnote>

<p>Quels outils utilisent <prgn>perl</prgn>&nbsp;? Vous pouvez vous en rendre
compte vous-même&nbsp;:

<example>
  $ for i in /bin/* /sbin/* /usr/bin/* /usr/sbin/*; do [ -f $i ] && {
  type=`file $i | grep -il perl`; [ -n "$type" ] && echo $i; }; done
</example>

<p>Ceux-ci incluent les outils suivants des paquets de priorité <em>requis</em>
ou <em>important</em>&nbsp;:

<list>
<item><file>/usr/bin/chkdupexe</file> du paquet
<package>util-linux</package>.

<item><file>/usr/bin/replay</file> du paquet
<package>bsdutils</package>.

<item><file>/usr/sbin/cleanup-info</file> du paquet
<package>dpkg</package>.

<item><file>/usr/sbin/dpkg-divert</file> du paquet
<package>dpkg</package>.

<item><file>/usr/sbin/dpkg-statoverride</file> du paquet
<package>dpkg</package>.

<item><file>/usr/sbin/install-info</file> du paquet
<package>dpkg</package>.

<item><file>/usr/sbin/update-alternatives</file> du paquet
<package>dpkg</package>.

<item><file>/usr/sbin/update-rc.d</file> du paquet
<package>sysvinit</package>.

<item><file>/usr/bin/grog</file> du paquet
<package>groff-base</package>.

<item><file>/usr/sbin/adduser</file> du paquet
<package>adduser</package>.

<item><file>/usr/sbin/debconf-show</file> du paquet
<package>debconf</package>.

<item><file>/usr/sbin/deluser</file> du paquet
<package>adduser</package>.

<item><file>/usr/sbin/dpkg-preconfigure</file> du paquet
<package>debconf</package>.

<item><file>/usr/sbin/dpkg-reconfigure</file> du paquet
<package>debconf</package>.

<item><file>/usr/sbin/exigrep</file> du paquet
<package>exim</package>.

<item><file>/usr/sbin/eximconfig</file> du paquet
<package>exim</package>.

<item><file>/usr/sbin/eximstats</file> du paquet
<package>exim</package>.

<item><file>/usr/sbin/exim-upgrade-to-r3</file> du paquet
<package>exim</package>.

<item><file>/usr/sbin/exiqsumm</file> du paquet
<package>exim</package>.

<item><file>/usr/sbin/keytab-lilo</file> du paquet
<package>lilo</package>.

<item><file>/usr/sbin/liloconfig</file> du paquet
<package>lilo</package>.

<item><file>/usr/sbin/lilo_find_mbr</file> du paquet
<package>lilo</package>.

<item><file>/usr/sbin/syslogd-listfiles</file> du paquet
<package>sysklogd</package>.

<item><file>/usr/sbin/syslog-facility</file> du paquet
<package>sysklogd</package>.

<item><file>/usr/sbin/update-inetd</file> du paquet
<package>netbase</package>.

</list>

<p>Dans, sans Perl et à moins que vous ne ré-écriviez ces outils en script
shell, vous ne pourrez probablement pas gérer de paquets (vous ne pourrez donc
pas mettre à jour le système, ce qui n'est <em>pas une Bonne Chose</em>).

<p>Si vous êtes déterminé à enlever Perl du système de base Debian et si vous
avez du temps libre, créez des rapports de bogue sur les paquets précédents en
incluant un remplacement (sous forme de correctif) écrit en script shell aux
outils ci-dessus.

<sect>Lire les listes de discussions Debian sur la sécurité

<p>Cela ne fait pas de mal de jeter un &oelig;il à la liste de discussion 
debian-security-announce, où des alertes et des solutions pour les paquets 
sont annoncés par l'équipe sécurité de Debian, ou sur la liste 
<url id="mailto:debian-security@lists.debian.org">, où vous pouvez participer aux discussions
à propos de différentes choses liées à la sécurité Debian.

<p>De façon à recevoir les alertes importantes concernant les mises à jour liées 
à la sécurité, envoyez un courriel à 
<url name="debian-security-announce-request@lists.debian.org"
id="mailto:debian-security-announce-request@lists.debian.org"> avec le mot
«&nbsp;subscribe&nbsp;» dans le sujet du courrier. Vous pouvez également vous inscrire à 
cette liste via la page web sur 
<url name="http://www.debian.org/MailingLists/subscribe"
id="http://www.debian.org/MailingLists/subscribe">

<p>Cette liste de discussion a très peu de trafic, et en vous inscrivant vous 
serez tenu au courant des mises à jour pour la distribution Debian.
Cela vous permet de télécharger rapidement les nouveaux paquets sans les bogues, 
ce qui est relativement important dans le maintien d'un système sécurisé. (Voir
<ref id="security-update"> pour les détails.)

<chapt>Après l'installation

<p>Une fois que le système est installé, vous pouvez encore faire plus pour
sécuriser le système&nbsp;; certaines des étapes décrites ci-dessous peuvent
être effectuées. Bien sûr, cela dépend vraiment de votre configuration, mais
pour prévenir un accès physique, vous devriez lire <ref id="bios-boot">,<ref
id="lilo-passwd">,<ref id="kernel-root-prompt">, <ref id="floppy-boot">, <ref
id="restrict-console-login"> et <ref id="restrict-reboots">.

<p>Avant de vous connecter à tout réseau, particulièrement s'il s'agit d'un
réseau public, vous devez, au minimum, exécuter une mise à jour de sécurité
(voir <ref id="security-update">). Vous pouvez optionnellement prendre un
instantané de votre système (voir <ref id="snapshot">).

<sect id="bios-boot">Changer le BIOS (à nouveau)

<p>Vous vous souvenez de <ref id="bios-passwd">&nbsp;? Et bien, vous devriez
maintenant, une fois que vous n'avez plus besoin de démarrer à partir d'un
support amovible, changer la configuration par défaut du BIOS pour qu'il ne
puisse démarrer <em>que</em> depuis le disque dur. Assurez-vous de ne pas perdre
le mot de passe BIOS, sinon, en cas de défaillance du disque dur, vous ne
pourrez pas retourner dans le BIOS et modifier la configuration pour le
récupérer en utilisant, par exemple, un cédérom.

<p>Un autre moyen moins sécurisé, mais plus pratique est de changer la
configuration pour que le système s'amorce depuis le disque dur et, si cela
échoue, d'essayer un support amovible. À propos, c'est ainsi fait parce que la
plupart des personnes n'utilisent pas le mot de passe BIOS très souvent&nbsp;;
il est facilement oublié.

<sect id="lilo-passwd">Attribuer un mot de passe à LILO ou GRUB 
<p>
N'importe qui peut obtenir facilement un shell root et changer 
vos mots de passe en entrant au prompt de boot <tt>&lt;nom-de-votre-image-de-boot&gt; 
init=/bin/sh</tt>. Après le changement du mot de passe et le redémarrage du
système, la personne a un accès root illimité et peut faire tout ce qu'elle
veut sur le système. Après ceci, vous n'aurez plus d'accès root sur votre machine,
étant donné que vous ne connaîtrez pas le mot de passe.
<p>
Pour être sûr que cela ne puisse pas se produire, vous devriez attribuer un
mot de passe au démarrage. Vous avez le choix entre un mot de passe global et un 
mot de passe pour une image donnée.

<p>
Pour LILO, vous avez besoin d'éditer le fichier <file>/etc/lilo.conf</file> et ajouter les lignes
<tt>password</tt> ainsi que <tt>restricted</tt> comme dans l'exemple suivant.

<example>
  image=/boot/2.2.14-vmlinuz
     label=Linux
     read-only
     password=piratemoi
     restricted
</example>

<p>
Une fois terminé, relancez lilo. Omettre la ligne <tt>restricted</tt> entraîne une attente 
de mot de passe, en dépit des paramètres passés à LILO.
Les permissions par défaut pour le fichier <file>/etc/lilo.conf</file> accordent à root les 
droits de lecture et d'écriture et permettent un accès en lecture seule pour le groupe
de configuration de <file>lilo.conf</file>, à savoir root.

<p>
Si vous utilisez GRUB plutôt que LILO, éditez <file>/boot/grub/menu.lst</file>
et ajoutez les deux lignes suivantes en début (en remplaçant, bien sûr, <tt>piratemoi</tt> par
le mot de passe désiré). Ceci empêche les utilisateurs d'éditer les options de démarrage.
<tt>timeout 3</tt> indique un délai de 3 secondes avant que <prgn>grub</prgn> démarre l'option par défaut.

<example>
  timeout 3
  password piratemoi
</example>

<p>
Pour aller plus loin dans le durcissement de l'intégrité du mot de passe, vous 
pourriez entreposer le mot de passe sous une forme cryptée. L'utilitaire <prgn>grub-md5-crypt</prgn>
génère un hachage de mot de passe qui est compatible avec l'algorithme du mot de passe 
grub (md5). Pour spécifier à <prgn>grub</prgn> qu'un mot de passe sous le format md5 va être 
utilisé, utilisez la directive suivante&nbsp;: 

<example>
  timeout 3
  password --md5 $1$bw0ez$tljnxxKLfMzmnDVaQWgjP0
</example>

Le paramètre --md5 a été ajouté pour informer <prgn>grub</prgn> d'effectuer la 
procédure d'authentification md5. Le mot de passe fourni est la version 
md5 cryptée de piratemoi. L'utilisation de la méthode md5 pour le mot de passe 
est préférable à la méthode précédente dont le mot de passe est en clair.
Plus d'information concernant les mots de passe <prgn>grub</prgn> se trouvent 
dans le paquet <package>grub-doc</package>.

<sect id="kernel-root-prompt">Enlever le prompt root du noyau

<p>Les noyaux Linux 2.4 fournissent un moyen d'accéder à un shell root lors de
l'amorçage et qui sera présenté juste après le chargement du système de fichiers
cramfs. Un message apparaîtra pour permettre à l'administrateur d'entrer un
shell exécutable avec des permissions root, ce shell peut être utilisé pour
charger manuellement des modules quand la détection automatique échoue. Ce
comportement est celui par défaut pour <file>linuxrc</file> de
l'<prgn>initrd</prgn>. Le message suivant apparaîtra&nbsp;:
<example>
  Press ENTER to obtain a shell (waits 5 seconds)
</example>

<p>Pour supprimer ce comportement, vous devez changer
<file>/etc/mkinitrd/mkinitrd.conf</file> et positionner&nbsp;:
<example>
  # DELAY  Le nombre de secondes que le script linuxrc doit attendre pour
  # permettre à l'utilisateur de l'interrompre avant que le système soit lancé
  DELAY=0
</example>
<p>Puis, régénérez votre image de ramdisk. Vous pouvez faire cela ainsi, par
exemple&nbsp;:
<example>
  # cd /boot
  # mkinitrd -o initrd.img-2.4.18-k7 /lib/modules/2.4.18-k7
</example>
<p>ou (de préférence)&nbsp;:
<example>
  # dpkg-reconfigure -plow kernel-image-2.4.x-yz
</example>
<p>Notez que Debian&nbsp;3.0 woody permet aux utilisateurs d'installer des
noyaux 2.4 (en sélectionnant des <em>saveurs</em>), <em>cependant</em> le noyau
par défaut est un 2.2 (excepté pour certaines architectures pour lesquelles le
noyau 2.2 n'a pas été porté). Si vous considérez cela comme un bogue, veuillez
consulter le <url id="http://bugs.debian.org/145244" name="bogue 145244"> avant
d'envoyer un rapport de bogue.

<sect id="floppy-boot">Interdire le démarrage sur disquette
<p>
Le MBR par défaut dans Debian avant la version 2.2 ne fonctionnait pas 
comme le master boot record habituel et laissait un moyen facile de 
pénétrer un système&nbsp;:

<list>
<item>Appuyez sur shift lors du démarrage et le prompt du MBR apparaît

<item>Ensuite appuyez sur F, et votre système démarrera à partir d'une 
disquette de démarrage. Ceci peut être utilisé pour obtenir un accès root
au système.
</list>

<p>Ce comportement peut être modifié en entrant&nbsp;:

<example>
  lilo -b /dev/hda
</example>

<p>Maintenant LILO est mis dans le MBR. Ceci peut être fait également
en ajoutant <tt>boot=/dev/hda</tt> au fichier <file>lilo.conf</file>. Il y a encore une 
autre solution qui désactivera complètement le prompt MBR&nbsp;:

<example>
  install-mbr -i n /dev/hda
</example>

<p>
D'un autre côté, cette «&nbsp;porte dérobée&nbsp;», dont de nombreuses personnes ne 
sont pas au courant, peut aussi bien vous sauver la peau si vous rencontrez 
de gros problèmes, quelque soient les raisons, avec votre installation.

<p>FIXME vérifier si cela touche réellement la 2.2 ou seulement la 2.1?
INFO: Les disques de démarrage de la 2.2 n'installe pas le mbr, mais seulement LILO.


<sect id="restrict-console-login">Restreindre les accès aux consoles 

<p>Certaines règles de sécurité peuvent forcer les administrateurs à 
se connecter au système via une console avec leur identifiant/mot de passe 
puis devenir super utilisateur (avec <prgn>su</prgn> ou <prgn>sudo</prgn>). 
Cette règle est appliquée sous Debian en éditant les fichiers
<file>/etc/login.defs</file> ou <file>/etc/securetty</file> lors de 
l'utilisation de PAM. Dans&nbsp;:

<list>

<item><file>login.defs</file>, éditez la variable CONSOLE qui définit un 
fichier ou une liste de terminaux sur lesquels la connexion de root est 
autorisée&nbsp;;

<item><file>securetty</file> en ajoutant/supprimant les terminaux auxquels 
les accès root seront autorisés.

</list>

<p>
En cas d'utilisation de PAM d'autres changements au processus de login,
qui peuvent inclure des restrictions aux utilisateurs et groupes à certains
moments, peuvent être configurés dans <file>/etc/pam.d/login</file>.
Une fonctionnalité intéressante qui peut être désactivée est la possibilité
de se connecter avec des mots de passe nuls (vides). Cette fonctionnalité
peut être limitée en enlevant <em>nullok</em> de la ligne&nbsp;:

<example>
  auth       required   pam_unix.so nullok
</example>

<sect id="restrict-reboots">Restreindre les redémarrages système depuis la console

<p>Si votre système dispose d'un clavier attaché, n'importe qui (oui, vraiment
<em>n'importe qui</em>) peut redémarrer le système avec celui-ci sans se
connecter au système. Cela peut en conformité ou non avec vos règles de
sécurité. Si vous désirez restreindre cela, vous devez vérifier le fichier
<file>/etc/inittab</file> pour que la ligne incluant <tt>ctrlaltdel</tt> appelle
<prgn>shutdown</prgn> avec le paramètre <tt>-a</tt> (rappelez-vous d'exécuter
<tt>init q</tt> après avoir fait un changement à ce fichierà. La valeur par
défaut dans Debian inclut ce paramètre&nbsp;:

<example>
  ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now
</example>

<p>Puis, pour permettre à <em>certains</em> utilisateurs d'arrêter le système,
comme décrit dans la page de manuel <manref section="8" name="shutdown">, vous
devez créer le fichier <file>/etc/shutdown.allow</file> et inclure le nom des
utilisateurs qui peuvent amorcer (?) le système. Quand le <em>salut à trois
doigts</em> (ou <em>ctrl+alt+del</em>) est exécuté, le programme va vérifier
si l'un des utilisateurs de ce fichier est connecté. Si aucun d'entre eux ne
l'est, <prgn>shutdown</prgn> ne va <em>pas</em> redémarrer le système.
 

<sect>Monter correctement les partitions
<p>
Lorsque vous montez une partition ext2, vous avez différentes options 
additionnelles pour l'appel mount ou pour le fichier <file>/etc/fstab</file>. 
Par exemple, ceci est mon entrée pour la partition /tmp&nbsp;:

<example>
/dev/hda7    /tmp    ext2    defaults,nosuid,noexec,nodev    0    2
</example>

<p>
Vous voyez la différence dans la section des options. L'option 
<tt>nosuid</tt> ignore complètement les bits setuid et setgid, tandis que
<tt>noexec</tt> interdit l'exécution de tout programme sur ce point de 
montage et <tt>nodev</tt> ignore les périphériques. Ceci semble bon mais cela 
<list>
<item>ne s'applique uniquement qu'au système de fichier ext2,
<item>peut être contourner facilement.
</list>

<p>L'option <tt>noexec</tt> évite aux binaires d'être exécutés directement mais
cela est facilement contournable&nbsp;:

<example>
  alex@joker:/tmp# mount | grep tmp
  /dev/hda7 on /tmp type ext2 (rw,noexec,nosuid,nodev)
  alex@joker:/tmp# ./date
  bash: ./date: Permission denied
  alex@joker:/tmp# /lib/ld-linux.so.2 ./date
  Sun Dec  3 17:49:23 CET 2000
</example>

<p>
Toutefois, de nombreux script kiddies utilisent des exploits qui essayent
de créer et d'exécuter des fichiers dans <file>/tmp</file>. S'ils ne sont pas futés<!-- n'ont pas d'indice -->,
ils tomberont sur un pépin. En d'autres termes, un utilisateur ne peut être 
abusé en exécutant un binaire compromis (genre cheval de troie) dans /tmp 
lorsqu'il a accidentellement ajouté <file>/tmp</file> dans son PATH.

<p>
Soyez aussi vigilant, certains scripts peuvent dépendre du fait que 
<file>/tmp</file> devienne exécutable. Notamment Debconf qui a (avait&nbsp;?) quelques problèmes
concernant cela, pour plus d'information voir le bogue <url
id="http://bugs.debian.org/116448" name="116448">.

<p>
Ce qui suit est un exemple un plus poussé. Prenez note que, bien que
<file>/var</file> peut être mis à noexec, certains logiciels<footnote>Cela
inclut le gestionnaire de paquet <package>dpkg</package> car les scripts
d'installation (pre et pos) et de suppression (pre et post) sont à
<file>/var/lib/dpkg/</file> et aussi Smartlit</footnote> conservent leurs
programmes dans /var. Les mêmes conditions peuvent être appliquées à l'option
nosuid.

<example>
/dev/sda6       /usr            ext2    defaults,ro,nodev       0       2
/dev/sda12      /usr/share      ext2    defaults,ro,nodev,nosuid        0       2
/dev/sda7       /var            ext2    defaults,nodev,usrquota,grpquota          0       2
/dev/sda8       /tmp            ext2    defaults,nodev,nosuid,noexec,usrquota,grpquota    0       2
/dev/sda9       /var/tmp        ext2    defaults,nodev,nosuid,noexec,usrquota,grpquota    0       2
/dev/sda10      /var/log        ext2    defaults,nodev,nosuid,noexec    0       2
/dev/sda11      /var/account    ext2    defaults,nodev,nosuid,noexec    0       2
/dev/sda13      /home           ext2    rw,nosuid,nodev,exec,auto,nouser,async,usrquota,grpquota                0       2
/dev/fd0        /mnt/fd0        ext2    defaults,users,nodev,nosuid,noexec      0       0
/dev/fd0        /mnt/floppy     vfat    defaults,users,nodev.nosuid,noexec      0       0
/dev/hda        /mnt/cdrom      iso9660 ro,users,nodev.nosuid,noexec            0       0
</example>


<sect1>Paramétrer <file>/tmp</file> en noexec
<p>
Soyez vigilant si vous mettez <file>/tmp</file> en noexec et que vous voulez installer de 
nouveaux logiciels étant donné que certains peuvent l'utiliser pendant l'installation.
<package>Apt</package> est un programme de ce genre (voir <url id="http://bugs.debian.org/116448">) si
<tt>APT::ExtractTemplates::TempDir</tt> n'est pas configuré correctement (voir <manref name="apt-extracttemplates" section="1">). 
Vous pouvez paramétrer cette variable dans le fichier <file>/etc/apt/apt.conf</file> vers 
un autre répertoire que <file>/tmp</file> et qui aura les privilèges exec.

<p>
Concernant noxec, prenez conscience qu'il peut ne pas offrir le niveau de sécurité désiré.
Observons ceci&nbsp;:
<example>
  $ cp /bin/date /tmp
  $ /tmp/date
  (n'est pas exécuté pas à cause de noexec)
  $/lib/ld-linux.so.2 /tmp/date
  (fonctionne correctement étant donné que date n'est pas exécuté directement)
</example>


<sect1>Paramétrer /usr en lecture seule
<p>
Si vous mettez <file>/usr</file> en lecture seule, vous serez dans l'incapacité
d'installer de nouveaux paquets sur votre système Debian GNU/Linux. Vous devrez, 
avant tout la remonter en lecture-écriture, puis installer les nouveaux paquets 
et enfin la remonter en lecture seule. La dernière version d'<package>apt</package> (dans Debian 
3.0 «&nbsp;Woody&nbsp;») peut être configurée pour lancer des commandes avant et après 
l'installation de paquets, ainsi vous pouvez avoir envie de le configurer correctement.


<p>
Pour réaliser ceci, modifiez le fichier <file>/etc/apt/apt.conf</file> et ajoutez&nbsp;:
<example>
  DPkg
  {
      Pre-Invoke  { "mount /usr -o remount,rw" };
      Post-Invoke { "mount /usr -o remount,ro" };
  };
</example>

<p>
Notez que le Post-invoke peut échouer avec un message d'erreur "/usr busy".
Ceci survient principalement lorsque vous utilisez des fichiers lors de la 
mise à jour et que ces fichiers sont justement mis à jour. C'est agaçant mais 
pas réellement un problème. Vérifiez juste qu'ils ne sont plus utilisés puis
lancez le Post-Invoke manuellement.

<sect id="security-update">Se mettre à jour au niveau de la sécurité

<p>
Dès que des nouveaux bogues de sécurité sont décelés dans les paquets, les 
responsables Debian et les auteurs en amont les corrigent dans les journées ou les
heures suivantes. Une fois le bogue résolu, un nouveau paquet est fourni sur <url
name="http://security.debian.org" id="http://security.debian.org">.

<p>Si vous installez une version de Debian, vous devez prendre en compte qu'il a
pu y avoir des mises à jour de sécurité depuis la publication après qu'il a été
déterminé qu'un paquet donné est vulnérable. Ainsi, il a pu y avoir des versions
mineures (il y en a eu sept dans la version Debian 2.2 <em>Potato</em>) incluant
ces mises à jour de paquets.

<p>Vous devez noter la date à laquelle votre support amovible (si vous en
utilisez un) a été créé et vérifier le site de sécurité pour savoir s'il y a eu
des mises à jour de sécurité. S'il y en a et que vous ne pouvez pas télécharger
les paquets du site de sécurité sur un autre système (vous n'êtes pas encore
connecté à l'Internet, n'est-ce pas&nbsp;?) avant de vous connecter au réseau,
vous devriez évaluer (si vous n'êtes pas protégé par un pare-feu par exemple)
d'ajouter des règles de pare-feu pour que votre système ne puisse se connecter
qu'à security.debian.org et ensuite réaliser la mise à jour. Une configuration
exemple est donnée dans <ref id="fw-security-update">.

<p><em>Remarque&nbsp;:</em>Depuis Debian woody 3.0, après l'installation, il
vous est donné la possibilité d'ajouter les mises à jour de sécurité au système.
Si vous répondez «&nbsp;oui&nbsp;» (yes ?) à ceci, le système d'installation
prendra les étapes nécessaires pour ajouter la source pour les mises à jour de
sécurité aux sources de paquets et votre système, s'il a une connexion Internet,
téléchargera et installera toutes les mises à jour de sécurité qui auront pu
être produites après que votre support a été créé. Si vous mettez à jour depuis
une version précédente de Debian ou si vous demandez au système de ne pas faire
cela, vous devriez faires les étapes décrites ici.

<p>
Pour metter à jour manuellement le système, mettez la ligne suivante dans votre
<file>sources.list</file> et vous serez mis à jour automatiquement quand vous
mettrez à jour votre système.

<example>
  deb http://security.debian.org/debian-security stable/updates main contrib non-free
</example>

<p>
Une fois ceci fait, vous pouvez utiliser soit <package>apt</package>, soit
<package>dselect</package> pour les mises à jour&nbsp;:

<list>
<item>Si vous voulez utiliser <package>apt</package>, exécutez simplement (en
tant que root)&nbsp;:
<example>
# apt-get update
# apt-get upgrade
</example>
<item>Si vous voulez utiliser <package>dselect</package>, choisissez tout d'abord [U]pdate,
puis [I]nstall et enfin [C]onfigure pour mettre à jour et installer les paquets.
</list>

<p>
Si vous voulez, vous pouvez ajouter également les lignes deb-src à
<file>/etc/apt/sources.list</file>. Voir <manref name="apt" section="8"> pour
plus de détails.

<p>Remarque&nbsp;: vous n'avez <em>pas</em> besoin d'ajouter les lignes suivantes&nbsp;:

<example>
  deb http://security.debian.org/debian-non-US stable/non-US main contrib non-free
</example>

<p>
car security.debian.org est hébergé à un emplacement hors des États-Unis et n'a
donc pas d'archive non-US séparée.


<!-- <p>
Vous devriez procéder à des mises à jour fréquemment, la plupart des piratages 
est le résultat de vulnérabilités connues mais qui n'ont pas été raccommodées à 
temps, tel que le décrit le <url id="http://www.cs.umd.edu/~waa/vulnerability.html"
 name="texte de Bill Arbaugh"> (présenté au Symposium IEEE 2001 sur la Sécurité et 
 la Vie Privé).

<p>FIXME&nbsp;: Ajouter des informations sur comment est réalisé la signature des paquets, ce qui peut
être réalisé automatiquement par un cron job (Gros avertissement: DNS spoofing).
 -->

<sect id="debian-sec-announce">S'abonner à la liste de diffusion Debian Security Announce

<p>Pour recevoir des informations sur les mises à jour de sécurité disponibles,
vous devriez vous abonner à la liste de diffusion debian-security-announce pour
recevoir les Avis de Sécurité Debian <footnote>
Debian Security Advisories</footnote> (DSAs). Voir <ref id="debian-sec-team">
pour plus d'informations sur la façon dont fonctionne l'équipe de sécurité
Debian. Pour des informations sur l'inscription aux listes de diffusion Debian,
lisez <url id="http://lists.debian.org">.

<p>Les DSAs sont signées par la signature de l'équipe de sécurité Debian qui
peut être récupérée depuis <url id="http://security.debian.org">.

<p>Vous devriez également considérer un abonnement à la liste de discussions
debian-security pour des discussions générales sur les problèmes de sécurité
dans le système d'exploitation Debian.

<p>FIXME: ajouter la clé ici également&nbsp;?

<sect>Fournir des accès sécurisés aux utilisateurs

<sect1 id="auth-pam">Authentification utilisateur&nbsp;: PAM

<p>PAM (Pluggable Authentication Modules) permet aux administrateurs systèmes de 
choisir comment les applications authentifient les utilisateurs. Il est à noter 
que PAM ne peut rien faire tant qu'une application n'a pas été compilée avec le 
support pour PAM. La plupart des applications livrées dans la Debian 2.2 ont 
ce support d'inclus. Par ailleurs, Debian n'avait pas le support de PAM avant 
la 2.2. La configuration actuelle par défaut pour tout service activé avec PAM
est d'émuler l'authentification UNIX (lisez
<file>/usr/share/doc/libpam0g/Debian-PAM-MiniPolicy.gz</file> pour plus
d'informations sur la façon dont les services <em>devraient</em> fonctionner dans Debian).

<p>
Chaque application avec le support PAM fournit un fichier de configuration 
dans <file>/etc/pam.d</file> qui peut être utilisé pour modifier son
comportement&nbsp:

<list>
<item>quelle fonction de base est utilisée pour l'authentification&nbsp;;
<item>quelle fonction de base est utilisée pour les sessions&nbsp;;
<item>comment les vérifications de mots de passe se comportent.
</list>

<p>
La description qui suit est loin d'être complète, pour plus d'informations vous 
pouvez regarder le 
<url id="http://www.kernel.org/pub/linux/libs/pam/Linux-PAM-html/pam.html" 
name="The Linux-PAM System Administrator's Guide"> (sur le
<url id="http://www.kernel.org/pub/linux/libs/pam/"
name="site primaire de distribution de PAM">), ce document est également fourni
dans <package>libpam-doc</package>.

<p>
PAM vous offre la possibilité de passer en revue plusieurs étapes d'authentification 
en une seule fois, à l'insu de l'utilisateur. Vous pouvez vous authentifier à une base 
de données Berkeley et à un fichier <file>passwd</file> normal, ainsi l'utilisateur pourra se 
connecter seulement si l'authentification est correcte des deux côtés.
Vous pouvez restreindre beaucoup de choses avec PAM comme vous pouvez laisser libre 
accès à votre système. Donc soyez prudent. Une ligne de configuration typique a un 
champ de contrôle comme deuxième élément.
<!-- Second in mine (old Debian v2.0 though), check this! (FIXME) (era) -->
Généralement, il devrait être paramétrer sur <tt>requisite</tt> qui retourne un échec de
connexion si un module échoue.
<!-- Lots of fields in mine are "required", please elaborate? (FIXME) (era) -->

<p>
La première chose que j'aime faire est d'ajouter le support MD5 aux applications 
PAM, étant donné que ceci protège le système contre les tentatives d'attaques par dictionnaire 
(les mots de passes peuvent être plus long en utilisant MD5). Les deux lignes suivantes
devraient être ajoutées à toutes les lignes dans <file>/etc/pam.d/</file> qui alloue l'accès à la 
machine, tel <tt>login</tt> et <tt>ssh</tt>.

<example>
  # Vérifier que libpam-cracklib soit installé avant sinon vous ne pourrez pas vous connecter.
  password   required     pam_cracklib.so retry=3 minlen=12 difok=3
  password   required     pam_unix.so use_authtok nullok md5
</example>

<p>
Que fait cette formule magique&nbsp;? La première ligne charge le module PAM
cracklib qui fournit la vérification de la longueur des mots de passe, attend un
nouveau mot de passe avec au minimum 12 caractères, une différence d'au-moins 3
caractères par rapport à l'ancien et autorise 3 essais. La seconde ligne
introduit le module d'authentification standard avec MD5 et autorise un mot de
passe nul. La directive <tt>use_authok</tt> est nécessaire pour passer le mot de
passe du module précédent. Le paquet dépend d'une liste de mots (comme
<package>wenglish</package>, <package>wspanish</package>,
<package>wbritish</package>, etc.), assurez-vous d'en avoir installé une adaptée
à votre langue (sinon, cela peut ne pas être utile du tout).
<footnote>
Cependant, cette dépendance n'est pas fixe. Veuillez lire le <url
id="http://bugs.debian.org/112965" name="Bogue 112965">.
</footnote>

<p>
Afin d'être sûr que l'utilisateur root peut se connecter uniquement à 
partir des terminaux locaux, la ligne suivante doit être activée dans 
<file>/etc/pam.d/login</file>&nbsp;:

<example>
  auth     requisite  pam_securetty.so
</example>

<p>
Ensuite, vous devriez ajouter les terminaux depuis lesquels l'utilisateur 
root peut se connecter au système dans le fichier <file>/etc/security/access.conf</file>.  
La dernière mais pas la moindre, la ligne suivante devra être activée si vous 
voulez paramétrer les limites des utilisateurs.

<!-- FIXME: This is pam.d/login you're talking about, still? Elaborate? era -->
<example>
  session  required   pam_limits.so
</example>

<p>
Ceci restreint les ressources du système auxquelles les utilisateurs sont
autorisées (voir ci-dessous <ref id="user-limits">).  Par exemple, vous pouvez 
restreindre le nombre de connexions (d'un groupe d'utilisateurs donné ou 
tout le système) que vous avez, le nombre de processus, la taille de la mémoire, 
etc.

<p>
Maintenant, éditez <file>/etc/pam.d/passwd</file> et changez la première ligne.
Vous devriez ajouter l'option «&nbsp;md5&nbsp;» pour utiliser les mots de passe MD5, modifiez 
la longueur minimale du mot de passe de 4 à 6 (ou plus) et fixez une longueur maximale si 
vous le désirez. La ligne devrait ressembler à quelque chose comme ceci&nbsp;:
<!-- J'ai change les verbes a l'infinitif par un imperatif qui me semble plus adequat, non? jpg -->

<example>
  password   required   pam_unix.so nullok obscure min=6 max=11 md5
</example>

<p>
Si vous voulez protéger su, pour que seuls quelques personnes puissent
l'utiliser pour devenir root sur votre système, vous avez besoin de 
créer un nouveau groupe «&nbsp;wheel&nbsp;» (c'est la meilleure façon, étant donné 
qu'aucun fichier n'a ces permissions d'attribuées). Ajoutez root et les 
autres utilisateurs, qui auront la possibilité d'utiliser <prgn>su</prgn> pour
devenir root, à ce groupe. Ensuite, ajoutez la ligne suivante dans 
<file>/etc/pam.d/su</file>&nbsp;:

<example>
  auth        requisite   pam_wheel.so group=wheel debug
</example>

<p>
Ceci permet d'être sûr qu'uniquement les personnes du groupe «&nbsp;wheel&nbsp;» pourront 
utiliser <prgn>su</prgn> pour devenir root. Les autres utilisateurs ne 
seront pas capable de le devenir. En fait, ils recevront un message de refus
s'ils essayent de devenir root.

<p>
Si vous désirez que seulement certains utilisateurs s'authentifient à un 
service PAM, il suffit de faire cela en utilisant les fichiers où sont stockés les utilisateurs autorisés (ou pas) à se 
connecter. Imaginons que vous ne vouliez autoriser que l'utilisateur «&nbsp;ref&nbsp;» 
à se connecter via <prgn>ssh</prgn>. Vous le mettez dans <file>/etc/sshusers-allowed</file>
et écrivez ce qui suit dans <file>/etc/pam.d/ssh</file>:

<example>
  auth        required    pam_listfile.so item=user sense=allow file=/etc/sshusers-allowed onerr=fail
</example>

<p>
La dernière étape, mais pas la moindre, est de créer le fichier <file>/etc/pam.d/other</file> et 
d'ajouter les lignes suivantes&nbsp;:

<example>
  auth     required       pam_securetty.so
  auth     required       pam_unix_auth.so
  auth     required       pam_warn.so
  auth     required       pam_deny.so
  account  required       pam_unix_acct.so
  account  required       pam_warn.so
  account  required       pam_deny.so
  password required       pam_unix_passwd.so
  password required       pam_warn.so
  password required       pam_deny.so
  session  required       pam_unix_session.so
  session  required       pam_warn.so
  session  required       pam_deny.so
</example>

<p>
Ces lignes vont fournir une bonne configuration par défaut pour toutes
les applications qui supportent PAM (accès refusé par défaut).


<sect1 id="user-limits">Restreindre l'utilisation des ressources&nbsp;: le fichier <file>limits.conf</file>

<p>
Vous devriez sérieusement jeter un &oelig;il à ce fichier. Voux pouvez
définir dans celui-ci les limites des ressources par utilisateur. Si vous utilisez
PAM, le fichier <file>/etc/limits.conf</file> est ignoré et vous 
devriez utiliser <file>/etc/security/limits.conf</file> à la place.

<p>Si vous ne désirez pas restreindre l'utilisation des ressources,
<em>n'importe quel</em> utilisateur ayant un shell valide sur votre système (ou
même un intrus qui aurait compromis le système par un service) pourra utiliser
autant de CPU, de mémoire, de pile, etc. que le système pourra fournir. Ce
problème d'<em>épuisement de ressources</em> ne peut être réglé que par
l'utilisation de PAM. Veuillez noter qu'il existe un moyen d'ajouter des limites
de ressources pour certains shells (par exemple, <prgn>bash</prgn> a
<prgn>ulimit</prgn>, voir <manref section="1" name="bash">), mais comme ils ne
fournissent pas tous les mêmes limites et comme l'utilisateur peut changer de
shell (voir <manref section="1" name="chsh">), il est préférable de placer ces
limites dans les modules PAM.

<p>
Pour plus d'informations, lisez&nbsp;:
<list>

<item><url
id="http://www.samag.com/documents/s=1161/sam0009a/0009a.htm"
name="PAM configuration article">.

<item> <url
id="http://seifried.org/security/os/linux/20020324-securing-linux-step-by-step.html"
name="Seifried's Securing Linux Step by Step"> pour la section <em>Limiting
users overview</em>.

<item><url id="http://seifried.org/lasg/users/" name="LASG"> pour la section 
<em>Limiting and monitoring users</em>.

</list>

<p>FIXME&nbsp;: Placer un fichier exemple de <file>limits.conf</file> ici

<sect1>Actions de connexion de l'utilisateur&nbsp;: éditer <file>/etc/login.defs</file>

<p>
La prochaine étape est d'éditer la configuration et action de base sur
la connexion de l'utilisateur.

<example>
  FAIL_DELAY          10
</example>

<p>
Cette variable devrait être fixée à une valeur suffisamment grande de façon 
à rendre plus difficile les tentatives de connexion en utilisant la 
manière forte. Si un mauvais mot de passe est fourni, le pirate potentiel 
(ou le simple utilisateur&nbsp;!) doit attendre 10 secondes avant d'obtenir un 
nouveau prompt de connexion, ce qui prend pas mal de temps quand vous testez des mots de passe.
Prenez garde car ce paramétrage est inutile si vous utilisez un  
programme autre que <prgn>getty</prgn>, tel que <prgn>mingetty</prgn> par exemple.

<example>
  FAILLOG_ENAB        yes
</example>

Si vous activez cette variable, les connexions échouées seront enregistrées dans
un journal. Il est important d'en garder une trace pour quelqu'un qui tente une
attaque par la manière forte.

<example>
  LOG_UNKFAIL_ENAB    yes
</example>

<p>
Si vous mettez la variable <var>FAILLOG_ENAB</var> à yes, alors il faudra mettre 
cette variable également à yes. Ceci sauvegardera les noms d'utilisateurs 
inconnus si la connexion échoue. Si vous faites cela, assurez-vous que les 
journaux de connexion ont les bonnes permissions (640 par exemple avec un groupe adéquat 
comme adm), car souvent les utilisateurs entrent accidentellement leur mot de 
passe au lieu du nom d'utilisateur et vous ne voulez pas permettre aux 
autres utilisateurs de le voir.

<example>
  SYSLOG_SU_ENAB      yes
</example>

<p>Ceci va activer l'écriture dans les journaux de <file>syslog</file> des tentatives de 
<prgn>su</prgn>. Plutôt important sur des machines sérieuses, mais notez que 
ceci peut aussi bien être à la base de problèmes de respect de la vie privée.

<example>
  SYSLOG_SG_ENAB      yes
</example>

<p>
La même chose que SYSLOG_SU_ENAB, mais s'applique au programme <prgn>sg</prgn>.

<example>
  MD5_CRYPT_ENAB      yes
</example>

<p>
Comme mentionné ci-dessus, les mots de passe MD5 réduit considérablement le
problème des attaques par dictionnaire étant donné que vous pouvez utiliser des
mots de passe plus longs. Si vous utilisez slink, lisez les documentations avant
d'activer le MD5. Sinon, cela est paramétré dans PAM.

<example>
  PASS_MAX_LEN        50
</example>

<p>
Si les mots de passe MD5 sont activés dans votre configuration PAM, 
alors cette variable devrait avoir la même valeur que dans celle-ci.

<sect1>Restreindre le ftp&nbsp;: éditer <file>/etc/ftpusers</file>

<p>
Ce fichier contient une liste d'utilisateurs qui ne sont pas autorisés 
à se connecter à l'hôte en utilisant ftp. Utilisez uniquement ce fichier 
si vous voulez réellement autoriser le ftp (qui n'est, en général, pas 
recommandé car il utilise des mots de passe en clair). Si votre démon 
supporte PAM, celui-ci peut être utilisé pour permettre ou refuser 
certains services aux utilisateurs.

<p>FIXME (BUG): Est-ce un bogue que le fichier par défaut <file>ftpusers</file>
dans Debian ne contient <em>pas</em> tous les utilisateurs d'administration
(dans <package>base-passwd</package>).

<sect1>Utilisation de su

<p>
Si vous avez réellement besoin que des utilisateurs deviennent super 
utilisateur sur votre système, par exemple pour installer des paquets 
ou ajouter des utilisateurs, vous pouvez utiliser la commande
<prgn>su</prgn> pour changer d'identité. Vous devriez essayer d'éviter 
toute connexion en tant que root et d'utiliser à la place <prgn>su</prgn>. 
En réalité, la meilleure solution est de supprimer <prgn>su</prgn> et de changer pour 
<prgn>sudo</prgn>, étant donné qu'il dispose de plus de caractéristiques que 
<prgn>su</prgn>. Cependant, <prgn>su</prgn> est plus commun étant donné qu'il est
utilisé sur beaucoup d'autres Unices.

<sect1>Utilisation de sudo

<p>
<prgn>sudo</prgn> autorise l'utilisateur à exécuter des commandes définies 
sous l'identité d'un autre utilisateur, même en tant que root. Si 
l'utilisateur est ajouté à
<file>/etc/sudoers</file> et est authentifié correctement, il est capable 
de lancer des commandes qui ont été définies dans 
<file>/etc/sudoers</file>. Les infractions, telles que les mots de passe 
incorrects ou les tentatives de lancement d'un programme pour lequel vous n'avez 
pas les permissions, sont logguées et envoyées au root.

<sect1>Désactiver des accès d'administration à distance
<p>Vous devriez également modifier <file>/etc/security/access.conf</file> pour
que la connexion d'administration à distance soit désactivée. Ainsi, les
utilisateurs doivent utiliser <prgn>su</prgn> (ou <prgn>sudo</prgn>) pour qu'il
y ait toujours une trace d'audit à chaque fois qu'un utilisateur veut utiliser
les pouvoirs administratifs.

<p>Vous devez ajouter la ligne suivant à <file>/etc/security/access.conf</file>,
le fichier de configuration par défaut Debian contient une ligne exemple commentée&nbsp;:
<example>
   -:wheel:ALL EXCEPT LOCAL
</example>

<sect1 id="user-restrict">Restriction des utilisateurs

<p>
Parfois, vous pensez avoir besoin d'utilisateurs créés dans votre système 
local de façon à fournir un service donné (service courrier pop3 ou
ftp). Avant tout, rappelez-vous que l'implémentation PAM dans Debian GNU/Linux 
vous autorise à valider les utilisateurs avec une grande variété de 
répertoires de services externes (radius, ldap, etc.) fournis par les paquets 
libpam.

<p>
Si des utilisateurs doivent être créés et que le système est 
accessible à distance, prenez en compte que des utilisateurs pourront se 
connecter au système. Ceci peut être corrigé en donnant aux utilisateurs 
un shell null (<file>/dev/null</file>) (il devra être listé dans 
<file>/etc/shells</file>). Si vous voulez autoriser les utilisateurs à accéder 
au système mais limiter leurs mouvements, vous pouvez utiliser le fichier 
<file>/bin/rbash</file>, ce qui est équivalent à l'ajout de l'option <tt>-r</tt>
dans bash (<em>RESTRICTED SHELL</em> voir <manref name="bash"
section="1">). Veuillez noter que même avec un shell restreint, un utilisateur 
ayant accès à un programme interactif (qui peut permettre l'exécution d'un 
sous-shell) peut être capable de passer outre les limites du shell.

<p>
Debian fournit actuellement dans la version unstable le module
<file>pam_chroot</file> (dans le paquet <package> libpam-chroot</package>) (et
il pourrait être inclus dans les prochaines versions stables). Une alternative à
celui-ci est de <prgn>chroot</prgn>er le service qui fournit la connexion à
distance (<prgn>ssh</prgn>, <prgn>telnet</prgn>).
<footnote><package>Libpam-chroot</package> n'a pas encore été testé en
profondeur, il fonctionne pour <prgn>login</prgn>, mais il est possible qu'il ne
soit pas facile de mettre en place l'environnement pour d'autres
programmes</footnote>

<p>
Si vous voulez restreindre <em>quand</em> les utilisateurs peuvent accéder au 
système, vous devrez personnaliser <file>/etc/security/access.conf</file> en 
fonction de vos besoins.

<p>Des informations sur comment <prgn>chroot</prgn>er des utilisateurs accédant
au système par le service <prgn>ssh</prgn> sont décrites dans <ref
id="chroot-ssh-env">.


<sect1>Audit d'utilisateur à la main 

<p>
Si vous êtes paranoïaque, il se peut que vous vouliez configurer 
pour le système un <file>/etc/profile</file> qui configure l'environnement 
de telle façon que les utilisateurs ne puissent pas retirer les capacités 
d'audit du shell (les commandes sont déposées dans <tt>$HISTFILE</tt>. Le 
<file>/etc/profile</file> peut être paramétré ainsi&nbsp;:

<example>
  HISTFILE=~/.bash_history
  HISTSIZE=100000000000000000
  HISTFILESIZE=10000000000000000
  readonly HISTFILE
  readonly HISTSIZE
  readonly HISTFILESIZE
  export HISTFILE HISTSIZE HISTFILESIZE
</example>

<p>
Afin que cela fonctionne, l'utilisateur doit être seulement capable d'ajouter 
des informations à <file>.bash_history</file>. Vous devez <em>aussi</em>
positionner l'attribut <em>ajout-uniquement</em> en utilisant le programme
<prgn>chattr</prgn> sur <file>.bash_history</file> pour tous les utilisateurs.
<footnote>
Sans l'attribut ajout-uniquement les utilisateurs seraient capables de
vider le contenu du fichier des historiques en exécutant le programme
<prgn> > .bash_history</prgn>.
</footnote>

<p>
Notez que vous pouvez faire cela grâce au fichier utilisateur 
<file>.profile</file>. Mais alors vous devriez configurer les permissions
correctement&nbsp;: pour que le répertoire des utilisateurs ne leur appartiennent
<em>PAS</em> mais qu'ils aient le droit de lire le fichier de configuration
<file>.profile</file>  et d'écrire le <file>.bash_history</file>. Il serait
bon de configurer l'attribut <em>immuable</em> (aussi en utilisant 
<prgn>chattr</prgn>) pour le <file>.profile</file> aussi si vous procédez
ainsi.
<p>
Si vous êtes complètement paranoïaque et que vous voulez auditer toutes 
les commandes des utilisateurs, vous pouvez prendre les codes sources du 
<prgn>bash</prgn>, les éditer et récupérer dans un fichier toutes les commandes que 
l'utilisateur tape. Ou avoir <package>ttysnoop</package> constamment en 
attente de nouveaux ttys et reverser toutes les sorties dans un fichier.
Un autre programme utile est <package>snoopy</package>
qui est un programme transparent pour l'utilisateur qui se positionne
comme une librairie fournissant une encapsulation des appels <var>execve()</var>,
toute commande exécutée est loguée par <prgn>syslogd</prgn> en utilisant la facilité <tt>authpriv</tt>
(généralement stocké dans <file>/var/log/auth.log</file>).
<p>
Notez que vous ne pouvez pas utiliser la commande <prgn>script</prgn>
pour ceci étant donné qu'elle ne fonctionnera pas comme un shell (même 
si vous l'ajoutez à <file>/etc/shells</file>.

<sect1>Audit utilisateur complet

<p>
L'exemple précédent est une manière simple de configurer le contrôle 
utilisateur mais qui peut ne pas être pratique pour des systèmes 
complexes. Si cela est votre cas, vous devrez examiner <package>acct</package>,
l'utilitaire de comptabilité. Ceci archivera toutes les commandes ou processus 
du système au détriment de l'espace disque.

<p>
Lors de l'activation de la comptabilité, toutes les informations sur les processus et 
les utilisateurs sont conservées dans <file>/var/account/</file>, plus spécifiquement dans 
le fichier <file>pacct</file>. Le paquetage de comptabilité 
inclut des outils (<prgn>sa</prgn> et <prgn>ac</prgn>) afin d'analyser ces 
données.

<sect1>Inspection des profils utilisateurs

<p>
Si vous désirez <em>voir</em> ce que font les utilisateurs habituellement, 
comme l'heure à laquelle ils se connectent, vous pouvez utiliser la base 
de données <file>wtmp</file> qui contient toutes les informations 
concernant les connexions. Ce fichier peut être employé avec plusieurs 
utilitaires, parmi eux <prgn>sac</prgn> qui peut sortir un profil de chaque 
utilisateur montrant dans quel créneau horaire ils se connectent au système 
habituellement.

<p>
Dans le cas où vous avez la comptabilité activée, vous pouvez également utiliser 
les outils qu'elle fournit pour déterminer quand les utilisateurs accèdent au 
système et ce qu'ils exécutent.

<sect1>Positionner des umasks aux utilisateurs

<p>Selon vos règles d'utilisation, vous pouvez vouloir changer comment les
utilisateurs peuvent partager des informations, c'est-à-dire, quelles sont les
permissions par défaut des fichiers nouvellements créés par les utilisateurs. Ce
changement est effectué en définissant un paramètre <tt>umask</tt> correct pour
tous les utilisateurs. Vous pouvez changer le paramètre <var>UMASK</var> dans
<file>/etc/limits.conf</file>, <file>/etc/profile</file>,
<file>/etc/csh.cshrc</file>, <file>/etc/csh.login</file>,
<file>/etc/zshrc</file> et probablement dans d'autres fichiers (selon les shells
que vous avez installé sur votre système). Parmi ceux-ci, le dernier à être
chargé prendra précédence sur les autres. L'ordre est&nbsp;: le
<file>limits.conf</file> de PAM, la configuration système par défaut du shell de
l'utilisateur, le shell de l'utilisateur (son <file>~/.profile</file>,
<file>~/.bash_profile</file>, etc.).

<p>Le paramètre <tt>umask</tt> par défaut de Debian est <em>022</em>, ceci veut
dire que les fichiers (et les répertoires) peuvent être lus et accédés par le
groupe de l'utilisateur et par tout autre utilisateur du système. Si cela est
trop permissif pour votre système, vous devrez changer ce paramètre umask pour
tous les shells (et pour PAM). N'oubliez pas de modifier les fichiers sous
<file>/etc/skel/</file> car ce seront les valeurs par défaut d'un nouvel
utilisateur quand il sera créé par la commande <prgn>adduser</prgn>.

<p>Notez, cependant, que les utilisateurs peuvent modifier leur propre paramètre
<tt>umask</tt> s'ils le désirent, le rendant plus permissif ou plus restrictif.

<sect1>Limiter ce que les utilisateurs peuvent voir et accéder

<P>FIXME&nbsp;: Besoin de contenu. Indiquer les conséquences de changement des
permissions des paquets lors d'une mise à jour (et un administrateur aussi
paranoïaque que cela devrait <prgn>chroot</prgn>er ses utilisateurs).

<p>Si vous avez besoin d'accorder aux utilisateurs un accès au système avec un
shell, réfléchissez-y très soigneusement. Un utilisateur peut, par défaut à
moins d'être dans un environnement extrèmement restreint (comme une prison
<tt>chroot</tt>), récupérer un assez grand nombre d'informations concernant
votre système, y compris&nbsp;:

<list>

<item>certains fichiers de configuration dans <file>/etc</file>. Cependant, les
permissions par défaut de Debian pour certains fichiers sensible (qui peuvent,
par exemple, contenir des mots de passe) empêcheront l'accès à des informations
critiques. Pour voir quels fichiers ne sont accessibles que par l'utilisateur
root par exemple <tt>find /etc -type f -a -perm 600 -a -uid 0</tt> en tant que
super-utilisateur.

<item>vos paquets installés, soit en consultant la base de données des paquets,
soit dans le répertoire <file>/usr/share/doc</file>, soit en devinant en
regardant les binaires et bibliothèques installés sur votre système.

<item>certains fichiers journaux dans <file>/var/log</file>. Notez également que
quelqies fichiers journaux ne sont accessibles que par root et le groupe
<tt>adm</tt> (essayez <tt>find /var/log -type f -a -perm 640</tt>) et certains
ne sont même disponibles que pour l'utilisateur root (essayez <tt>find /var/log
-type f -a -perm 600 -a -uid 0</tt>).

</list>

<p>
Que peut voir un utilisateur dans votre système&nbsp;? Probablement un assez
grand nombre de choses, essayez ceci (prenez une profonde respiration)&nbsp;:
<example>
  find / -type f -a -perm +006 2>/dev/null  
  find / -type d -a -perm +007 2>/dev/null  
</example>

<p>
La liste des fichiers qu'un utilisateur peut <em>voir</em> et des répertoires
auxquels il a accès est affichée.

<sect2 id="limit-user-perm">Limiter l'accès aux informations d'autres utilisateurs

<p>Si vous accordez toujours un accès shell aux utilisateurs, vous pouvez
vouloir limiter les informations qu'ils peuvent voir des autres utilisateurs.
Les utilisateurs ayant un accès shell ont tendance à créer un grand nombre de
fichiers dans leur répertoire $HOME&nbsp;: boîtes à lettres, documents
personnels, configuration des applications X/GNOME/KDE, etc.

<p>Sous Debian, chaque utilisateur est créé avec un groupe associé et aucun
utilisateur n'appartient au groupe d'un autre utilisateur. Il s'agit du
comportement par défaut&nbsp;: quand un utilisateur userX est créé, un groupe nommé
userX est créé et l'utilisateur lui est assigné. Ceci évite le concept d'un groupe
<em>users</em> qui peut rendre plus difficile pour les utilisateurs de cacher
des informations aux autres utiisateurs.

<p>Cependant, les répertoires <var>$HOME</var> des utilisateurs sont créés avec
les permissions 0755 (lisible par le groupe et par tout le monde). Les
permissions de groupe ne sont pas un problème car seul l'utilisateur appartient
au groupe, cependant les permissions pour les autres peut être (ou non) un
problème selon vos règles locales.

<p>Vous pouvez changer ce comportement pour la création de l'utilisateur
fournisse des permissions sur <var>$HOME</var> différentes. Pour changer ce
comportement pour les <em>nouveaux</em> utilisateurs quand il seront créés,
changez <em>DIR_MODE</em> dans le fichier de configuration
<file>/etc/adduser.conf</file> à 0750 (pas d'accès en lecture pour tout le
monde).

<p>Les utilisateurs peuvent toujours partager des informations, mais directement
dans leur répertoire <var>$HOME</var> à moins qu'ils change les permissions de celui-ci.

<p>Notez que ceci empêche les utilisateurs de pouvoir mettre en place des pages
personnelles (<file>~userX</file>) si un serveur web est présent, car le serveur
web ne pourra pas lire le répertoire <var>$HOME</var> et donc, le répertoire
<file>public_html</file> sous celui-ci. Si vous voulez permettre aux
utilisateurs de publier des pages HTML dans leur
<file>~userX/public_html</file>, changez <em>DIR_MODE</em> en 0751. Ceci
permettra au serveur web d'accéder à ce répertoire (qui sera en mode 0755) et de
fournir le contenu publié par les utilisateurs.

<sect1 id="user-pwgen">Générer des mots de passe utilisateur

<p>Il y a plusieurs cas dans lesquels un utilisateur a besoin de créer un grand
nombre de comptes utilisateur et de fournir des mots de passe pour tous ceux-ci.
Bien sûr, l'administrateur peut facilement positionner le mot de passer pour
être le même que le nom du compte utilisateur, mais ceci n'est pas très
conseillé sur le plan de la sécurité. Une meilleure approche est d'utiliser un
programme de génération de mots de passe. Debian fournit les paquets
<package>makepasswd</package>, <package>apg</package> et
<package>pwgen</package> qui contiennent des programmes (dont le nom est le même
que celui du paquet) qui peuvent être utilisés dans ce but.
<prgn>Makepasswd</prgn> génère des mots de passe vraiment aléatoires avec un
accent sur la sécurité plus que la prononçabilité tandis que <prgn>pwgen</prgn>
essaie de créer des mots de passe sans signification, mais prononçables (bien
sûr, cela dépend de votre langue maternelle). <prgn>Apg</prgn> dispose
d'algorithmes pour les deux (il y a une version client/serveur pour ce
programme, mais elle n'est pas incluse dans le paquet Debian).

<p><prgn>Passwd</prgn> ne permet pas une assignation non interactive des mots de
passe (car il utilise un accès direct au terminal tty). Si vous désirez changer
des mots de passe lors de la création d'un grand nombre d'utilisateurs, vous
pouvez les créer en utilisant <prgn>adduser</prgn> avec l'option
<tt>--disabled-login</tt>, puis utiliser <prgn>chpasswd</prgn>
<footnote>
<prgn>Chpasswd</prgn> ne sait pas gérer la génération de mots de passe MD5, il
faut donc lui donner le mot de passe sous sa forme cryptée avant de l'utiliser
avec l'option <tt>-e</tt>.
</footnote>
(dans le paquet <package>passwd</package>, vous l'avez donc déjà d'installé). Si
vous voulez utilisez un fichier avec toutes les informations pour créer les
utilisateurs comme un processus batch, il sera probablement préférable
d'utiliser <prgn>newusers</prgn>.

<sect1>Vérifier les mots de passe utilisateur

<p>Les mots de passe des utilisateurs peuvent parfois devenir le <em>maillon
faible</em> de la sécurité d'un système donné. Cela provient du fait que
quelques utilisateurs choisissent des mots de passe faibles pour leur compte (et
plus il y a d'utilisateurs, plus sont grandes les chances que cela se produise).
Même si vous mettez en place des vérifications avec le module PAM cracklib et
les limitations sur les mots de passe comme décrites dans <ref id="auth-pam">,
les utilisateurs pourront toujours utiliser des mots de passe faibles. Comme
l'accès utilisateur peut inclure un accès à un shell à distance (on espère, par
<prgn>ssh</prgn>), il est important qu'un attaquant à distance ne puisse pas
deviner les mots de passe utilisateur (après avoir pu énumérer les utilisateurs
par d'autres moyens).

<p>Un administrateur ssytème doit, pour un nombre d'utilisateurs donnés,
vérifier si les mots de passe sont cohérents avec la règle locale de sécurité.
Comment vérifier&nbsp;? Essayez de les cracker comme le ferait un attaquant s'il
avait accès aux mots de passe hachés (le fichier <file>/etc/shadow</file>).

<p>Un administrateur peut utiliser <package>john</package> ou
<package>crack</package> (tous deux utilisent la force brute pour cracker)
ensemble avec une liste de mots appropriés <footnote>Essayez <prgn>apt-cache
search wordlist</prgn> pour une liste des paquets disponibles pouvant fournir
des listes de mots. Vous pouvez également récupérer des listes de mots de
plusieurs sites FTP sur l'Internet. Voir <url
id="ftp://ftp.ox.ac.uk/pub/wordlists"> ou <url
id="ftp://ftp.cerias.purdue.edu/pub/dict">.</footnote> pour vérifier les mots de
passe utilisateurs et prendre des mesures appropriées si un mot de passe faible
est détecté.

<sect1 id="idle-logoff">Déconnecter les utilisateurs inactifs (idle)

<p>L'inactivité des utilisateurs pose habituellement un problème de sécurité, un
utilisateur peut être inactif parce qu'il est parti déjeuner ou parce qu'une
connexion à distance a été interrompue et non rétablie. Quelqu'en soit la
raison, les utilisateurs inactives peuvent amener à une compromission&nbsp;:

<list>
<item>car la console de l'utilisateur peut ne pas être bloquée et peut être
accédée par un intrus,

<item>car un attaquant peut êtr capable de se ré-attacher lui-même à une
connexion réseau fermée et envoyer des commandes au shell distant (cela est
assez facile si le shell distant n'est pas encrypté comme dans le cas
<prgn>telnet</prgn>).
</list>

<p>Certains systèmes à distance ont même été compromis à travers un
<prgn>screen</prgn> inactif (détaché) .

<p>La déconnexion automatique des utilisateurs inactifs est habituellement une
partie qui doit être imposée par les règles de sécurité locales. Il y a
plusieurs moyens de faire cela&nbsp;:

<list>
<item>Si <prgn>bash</prgn> est le shell de l'utilisateur, un administrateur
système peut positionner une valeur <tt>TMOUT</tt> par défaut (voir <manref
section="1" name="bash">) qui entraînera la déconnexion automatique des
utilisateurs distants inactifs. Notez que ceci doit être position avec l'option
<tt>-o</tt> ou les utilisateurs pourront la changer (ou la désactiver).

<item>Installer <package>timeoutd</package> et configurer
<file>/etc/timeouts</file> selon vos règles de sécurité locales. Le démon
regardera les utilisateurs inactifs et mettra un terme à leur shell en fonction.

<item>Installer <package>autolog</package> et configurer-le pour enlever les
utilisateurs inactifs.

</list>

<p>Les démons <prgn>timeoutd</prgn> et <prgn>autolog</prgn> sont les méthodes
préférées car, après tout, les utilisateurs peuvent changer leur shell par
défaut ou il peuvent après avoir exécuter leus shell par défaut, basculer sur un
autre shell (non contrôlé).

<sect>Utilisation de tcpwrappers 

<p>
Les TCP wrappers ont été développés quand il n'y avait pas de réels filtres de 
paquets de disponible et que les contrôles d'accès étaient nécessaires.
Les TCP wrappers vous permettent d'autoriser ou de refuser un service à un hôte 
ou à un domaine et de définir une règle par défaut pour les 
autorisations et les refus. Pour plus de détails, jetez un &oelig;il à 
<manref name="hosts_access" section="5">.

<p>De nombreux services installés dans Debian sont soit&nbsp;:

<list>
<item>lancés via la service tcpwrapper (<file>tcpd</file>)
<item>compilés avec le support libwrapper.
</list>

<p>
D'un côté, pour des services configurés dans 
<file>/etc/inetd.conf</file>, ceci incluant <prgn>telnet</prgn>, <prgn>ftp</prgn>, <prgn>netbios</prgn>, <prgn>swat</prgn>
et <prgn>finger</prgn>), vous observerez que le fichier de configuration exécute avant 
tout <prgn>/usr/sbin/tcpd</prgn>. D'un autre côté, même si un service 
n'est pas lancé par le super démon <prgn>inetd</prgn>, il peut être compilé avec
le support pour les règles des tcp wrappers.
Les services compilés avec support tcp wrappers dans Debian incluent 
<prgn>ssh</prgn>, <prgn>portmap</prgn>, <prgn>in.talk</prgn>,
<prgn>rpc.statd</prgn>, <prgn>rpc.mountd</prgn>, <prgn>gdm</prgn>,
<prgn>oaf</prgn> (le démon d'activation GNOME), <prgn>nessus</prgn> et beaucoup d'autres.

<p>Pour voir quels paquets utilisent tcpwrappers, essayez ceci&nbsp;:

<example>
  $ apt-cache showpkg libwrap0 | egrep '^[[:space:]]' | sort -u | \
        sed 's/,libwrap0$//;s/^[[:space:]]\+//'
</example>

<p>
Tenez compte de ceci quand vous utilisez <prgn>tcpchk</prgn>.
Vous pouvez ajouter des services, qui sont liés à la bibliothèque du wrapper,
dans les fichiers <file>host.deny</file> et <file>hosts.allow</file> mais 
<prgn>tcpchk</prgn> vous informera qu'il n'est pas capable de trouver ces 
services étant donné qu'il les cherche dans <file>/etc/inetd.conf</file>
(la page de manuel n'est pas totalement précise ici).

<p>
À présent, voici une petite astuce et probablement le plus petit système 
de détection d'intrusions disponible. Généralement, vous devriez disposer 
d'une politique correcte concernant le pare-feu en première ligne, puis 
disposer de tcp wrappers en seconde ligne de défense. Un petit truc est 
de mettre en place une commande SPAWN <footnote>assurez-vous d'utiliser des
majuscules car <em>spawn</em> ne fonctionnera pas</footnote> dans /etc/hosts.deny qui enverra un courrier
à root quand un déclencheur wrapper pour service dénié est rencontré&nbsp;: <!-- bof, à reformuler -->

<example>
  ALL: ALL: SPAWN ( \
    echo -e "\n\
    TCP Wrappers\: Connection refused\n\
    By\: $(uname -n)\n\
    Process\: %d (pid %p)\n\
    User\: %u\n\
    Host\: %c\n\
    Date\: $(date)\n\
  " | /usr/bin/mail -s "Connection to %d blocked" root) &
</example>

<p><em>Attention</em>&nbsp;: L'exemple ci-dessus peut-être facilement sujet à
une attaque par déni de service en soumettant énormément de connexions dans une
période très courte. De nombreux courriers signifient de nombreuses E/S en
envoyant uniquement quelques paquets.

<!--
# Could this example be more interesting? 
# It also relates to the next section (jfs)
#
# era: cf hosts_access(5) manual page,
# and why are you not using logger(1) here? (FIXME?)
#
#&lt;example&gt;
#ALL: ALL: SPAWN ( \
#  /usr/local/sbin/send_syslog %u %c %d )
#&lt;example&gt;

#  With send_syslog as:
##!/usr/bin/perl -w
#
#use Sys::Syslog qw(:DEFAULT setlogsock);
#
#$user=shift(@ARGV) || 'unkown';
#$host=shift(@ARGV) || 'unkown';
#$service=shift(@ARGV) || 'unkown';
#setlogsock('unix');
#openlog("alert",'', 'user');
#syslog('warning', 'Connection from %s at %s to %s blocked.', ($user, $host, $service) );
#closelog();
#
#exit 0;
-->

<sect id="log-alerts">L'importance des logs et des alertes

<p>
Il est facile de voir que le traitement de logs et alertes est un problème
sérieux sur un système sécurisé. Supposons qu'un système est parfaitement
configuré et sécurisé à 99%. Si l'attaque représentant le 1% vient à arriver et
qu'il n'y a pas de mesures de sécurité mises en place pour, dans un premier
temps, détecter ceci et dans un deuxième temps, lancer l'alerte, le système
n'est pas sécurisé du tout.

<p>Debian GNU/Linux fournit quelques outils pour effectuer des analyses de logs,
notamment <package>swatch</package><footnote>il y a un très bon article sur
celui-ci écrit par <url id="http://www.enteract.com/~lspitz/swatch.html"
name="Lance Spitzner"> </footnote>, <package>logcheck</package> ou
<package>log-analysis</package> (tous ont besoin d'être personnalisés pour
enlever les choses non nécessaires des comptes-rendus). Il peut être également
utile, si le système est proche, d'avoir les logs du système d'affichés sur une
console virtuelle. Ceci est utile car vous pouvez (depuis une distance) voir si
le système se comporte correctement. Le fichier <file>/etc/syslog.conf</file> de
Debian est fourni avec une configuration commentée par défaut&nbsp;; pour
l'activer, décommenter les lignes et redémarrez <prgn>syslogd</prgn>
(<tt>/etc/init.d/syslogd restart</tt>)&nbsp;:

<example>
  daemon,mail.*;\
        news.=crit;news.=err;news.=notice;\
        *.=debug;*.=info;\
        *.=notice;*.=warn       /dev/tty8
</example>

<!-- FIXME: Parler de logcolorise? Est-il dans Debian ? -->
<p>Il y a une grande partie sur l'analyse des log qui ne peut pas être couverte ici,
une bonne ressource d'information est 
<url name="Couterpane's Log Analysis Resources"
id="http://www.counterpane.com/log-analysis.html">.
Dans tous les cas, même des outils automatiques ne peuvent rivaliser avec le
meilleur outil d'analyse&nbsp;: votre cerveau.

<!-- FIXME: Vérifier des informations sur SHARP, le 'syslog heuristic analysis
and response program'.  Le papier est à 
http://www.csis.gvsu.edu/sharp/. Est-ce un logiciel libre ? Empaqueté ? -->

<sect1 id="custom-logcheck">Utiliser et personnaliser <prgn>logcheck</prgn>

<p>Le paquet <prgn>logcheck</prgn> dans Debian est divisé entre deux paquets
<package>logcheck</package> (le programme principal) et
<package>logcheck-database</package> (une base de données d'expressions
rationnelles pour le programme). Le comportement par défaut sous Debian (dans
<file>/etc/cron.d/logcheck</file>) est que <prgn>logcheck</prgn> est exécuté
chaque jour à 2&nbsp;h et une fois après le démarrage.

<p>Cet outil peut être assez utile s'il est personnalisé correctement pour
alerter l'administrateur d'événements inhabituels dans le système.
<prgn>logcheck</prgn> peut être complètement personnalisé pour envoyer des
courriers à partir d'événements récupérés des logs et qui sont dignes
d'attention. L'installation par défaut inclut des profils pour des événements
ignorés et des violations de règles pour trois configurations différentes
(station de travail, serveur et paranoïaque). Le paquet Debian inclut un fichier
de configuration <file>/etc/logcheck/logcheck.conf</file>, sourcé par le
programme, qui définit à quel utilisateur sont envoyés les vérifications. Il
fournit également un moyen pour les paquets qui fournissent des services pour
implémenter de nouvelles règles dans les répertoires&nbsp;:
<file>/etc/logcheck/hacking.d/_packagename_</file>,
<file>/etc/logcheck/violations.d/_packagename_</file>,
<file>/etc/logcheck/violations.ignore.d/_packagename_</file>,
<file>/etc/logcheck/ignore.d.paranoid/_packagename_</file>,
<file>/etc/logcheck/ignore.d.server/_packagename_</file> et
<file>/etc/logcheck/ignore.d.workstation/_packagename_</file>. Cependant, peu de
paquets le font actuellement. Si vous avez une règle qui peut être utile à
d'autres utilisateurs, veuillez l'envoyer comme un rapport de bogue sur le
paquet approprié (comme un bogue de gravité <em>wishlist</em>). Pour plus
d'informations, veuillez lire <file>/usr/share/doc/logcheck/README.Debian</file>

<p>Le meilleur moyen de configurer <prgn>logcheck</prgn> est de l'installer
(il demandera à quel utilisateur les comptes-rendus doivent être envoyés et
générera le fichier <file>/etc/logcheck/logcheck.logfiles</file> à partir des
entrées syslog). Si vous désirez ajouter de nouveaux fichiers de log, ajoutez
les simplement à <file>/etc/logcheck/logcheck.logfiles</file>. La dépendance du
paquet va également forcer l'installation de
<package>logcheck-database</package>&nbsp;; pendant l'installation, il demandera
quel niveau de sécurité est désiré&nbsp;: station de travail, serveur ou
paranoïaque. Cela va faire pointer <file>/etc/logcheck/ignore.d</file> vers les
répertoires appropriés (par des liens symboliques). Pour changer ceci, exécutez
<tt>dpkg-reconfigure -plow logcheck-database</tt>. Puis, créez le
<file>/etc/ignore.d/local</file>, ce fichier contiendra toutes les rêgles pour
exclure les messages qui ne doivent pas être reportées. Laissez le vide pour le
moment (un simple <tt>cp /dev/null /etc/ignore.d/local</tt> fera l'affaire). 

<p>Une fois ceci fait, vous pouvez vouloir vérifier les courriers envoyés, pour
les quelques premiers jours/semaines/mois. Si vous trouvez que vous recevez des
messages que vous ne voulez pas recevoir, ajoutez simplement l'expression
rationnalle (voir <manref name="regex" section="7">) qui correspond à ces
messages au fichier <file>/etc/ignore.d/local</file>. C'est un processus
d'affinement perpétuel&nbsp;; une fois que les messages qui sont envoyés sont
toujours pertinents, vous pouvez considérer que l'affinement est terminé. Notez
que si <prgn>logcheck</prgn> ne trouve rien de pertinent dans votre système, il
ne vous enverra pas de courrier même s'il fonctionne (donc, vous pouvez ne
recevoir de courrier qu'une fois par semaine si vous êtes chanceux).

<sect1>Configurer l'endroit où les alertes sont envoyées 

<p>
Debian livre une configuration standard de syslog (dans <file>/etc/syslog.conf</file>)
qui archive les messages dans les fichiers appropriés dépendant de la 
facilité du système. Vous devriez être familier avec ceci&nbsp;; jetez un &oelig;il 
au fichier <file>syslog.conf</file> et à la documentation si vous ne l'êtes 
pas. Si vous avez l'intention de maintenir un système sécurisé, vous devriez 
être conscient de l'endroit où les logs sont envoyées ainsi ils <!-- log est masculin. jpg --> ne sont 
pas perdus dans la nature. <!-- ils ne sont pas ignorés (FBO) -->

<p>
Par exemple, envoyer des messages à la console est également utile pour de 
nombreux systèmes de production. Mais pour de nombreux systèmes semblables 
il est également important d'ajouter une nouvelle machine qui servira de 
serveur de log (il reçoit les logs de tous les autres 
systèmes).
<!-- traduction de loghost. Je me suis permis de traduire.jpg-->

<p>
Le courrier de root devrait être pris en considération également, de nombreux
contrôles de sécurité (tel <package>snort</package>) envoient des alertes 
dans la boîte aux lettres de root. Celle-ci pointe généralement sur le 
premier utilisateur créé sur le système (vérifiez <file>/etc/aliases</file>). Prenez 
garde à envoyer le courrier du root à un endroit où il sera lu (soit localement 
soit à distance).

<!-- ES pluriel d'alias ? => C'est pas aliases ? Non, c'est un adverbe a la base ;) On reste donc invariable, amha. Je propose donc la correction. jpg-->

<p> Il y a d'autres comptes et alias «&nbsp;rôles&nbsp;» sur votre système. Sur un petit
système, c'est probablement le plus simple de s'assurer que tous ces alias
pointent vers le compte root, et que ce mail pour root est retransmis vers
la boîte aux lettres personnelle de l'administrateur système.

<p>FIXME: Il serait intéressant de dire comment un système Debian peut
envoyer/recevoir des messages SNMP relatifs à des problèmes de sécurité (jfs).
Voir&nbsp;: <package>snmptraglogd</package>, <package>snmp</package> et 
<package>snmpd</package>.


<sect1>Utilisation d'un hôte d'archivage (loghost)
<!-- voir pour une  traduction sur la liste. Serveur de log? jpg -->

<p>
Un <!-- Serveur de log-->loghost est un hôte qui recueille les données des syslog à travers 
le réseau. Si l'une de vos machines est piratée, l'intrus n'est pas capable de 
dissimuler ses traces, à moins qu'il ne pirate également le <!-- Serveur de log-->loghost. Par 
conséquent, le <!-- Serveur de log-->loghost devrait être particulièrement sécurisé. Faire d'une 
machine un loghost est simple. Il suffit juste de démarrer le <prgn>syslogd</prgn> 
avec <tt>syslogd -r</tt> et un nouveau <!-- Serveur de log-->loghost est né. De façon à rendre cela 
permanent dans Debian, éditez <file>/etc/init.d/sysklogd</file> et 
changez la ligne

<!-- FIXME: The following could also be interesting -->
<!-- How to hide the logging server on the network i.e. by not giving -->
<!-- it an IP address and adding a static ARP entry on the hosts using -->
<!-- the remote syslog server (only if on the same hub); if the remote -->
<!-- syslog server would be on a separate network, the default gateway -->
<!-- should be configured accordingly -->

<example>
  SYSLOGD=""
</example>
par
<example>
  SYSLOGD="-r"
</example>

Ensuite, configurez les autres machines afin qu'elles envoient les données 
au <!-- Serveur de log-->loghost.  Ajoutez une entrée comme celle qui suit dans 
<file>/etc/syslog.conf</file>&nbsp;:

<example>
  facilité.niveau           @votre_loghost
</example>

Voyez la documentation pour savoir ce qu'on peut utiliser à la place de 
<em>facilité</em> et <em>niveau</em> (ils ne devraient pas être mot pour mot comme 
ceci). Si vous voulez tout archiver à distance, il suffit d'écrire&nbsp;:

<example>
  *.*                       @votre_loghost
</example>

dans votre <file>syslog.conf</file>. 
Archiver à distance ainsi que localement est la meilleure solution 
(le pirate peut estimer avoir couvert ses traces après la suppression 
des fichiers de logs locaux). Voir les pages de manuel <manref name="syslog"
section="3">, <manref name="syslogd" section="8"> et <manref
name="syslog.conf" section="5"> pour toutes informations complémentaires.

<!-- ES garder fichiers de log ou de logs ?  => apparemment ils utilisent sur
la liste journaux d'événements ...-->

<sect1>Permissions du fichier d'archivage

<p>Il est important de décider non seulement comment les alertes sont utilisées,
mais aussi qui y accède, i.e. qui peut lire ou modifier les fichiers de log
(si on n'utilise pas un hôte d'archivage). Les alertes de sécurité que l'attaquant
peut changer ou désactiver sont de peu de valeur en cas d'intrusion. Vous devez
également tenir compte que les fichiers de log peuvent révéler un grand nombre
d'informations à propos de votre système à un intrus s'il y a accès.

<!-- Il devrait être expliqué pourquoi après l'installation ce n'est pas déjà
fait, jfs -->

<p>
Certaines permissions de fichiers de log ne sont pas parfaites après
l'installation (mais, bien sûr, cela dépend vraiment de vos règles de sécurité
locales). Premièrement <file>/var/log/lastlog</file> et <file>/var/log/faillog</file> n'ont
pas besoin  d'être lisibles par les utilisateurs normaux. Dans le <file>lastlog</file>, vous
pouvez voir qui s'est connecté récemment, et dans le <file>faillog</file>, vous voyez un
résumé des connexions qui ont échouées. L'auteur recommande de un <prgn>chmod
660</prgn> sur les deux fichiers. Faites un tour rapide de vos fichiers de log et décidez avec
beaucoup d'attention quels fichiers de log vous rendez lisible/modifiable par
un utilisateur avec un UID différent de 0 et un groupe autre que
«&nbsp;adm&nbsp;» ou «&nbsp;root&nbsp;». Vous pouvez facilement vérifier ceci
sur votre système avec&nbsp;:

<example>
  #  find /var/log -type f -exec ls -l {} \; | cut -c 17-35 |sort -u
  (voir à quels utilisateurs appartiennent les fichiers de /var/log)
  #  find /var/log -type f -exec ls -l {} \; | cut -c 26-34 |sort -u
  (voir à quels groups appartiennent les fichiers de /var/log)
  # find /var/log -perm +004
  (fichiers lisibles par tout utilisateur)
  #  find /var/log \! -group root \! -group adm -exec ls -ld {} \;
  (fichiers appartenant à des groupes autres que root ou adm)
</example>

<p>Pour personnaliser comment les fichiers de log sont créés, vous devez
probablement personnaliser le programme qui les génère. Cependant, si le fichier
de log est archivé, vous pouvez personnaliser le comportement de la création et
de l'archivage.

<!-- Ceci n'est plus vrai, vérifier le logrotate d'apache

<p>
Je voudrais souligner que les permissions du fichier de log d'apache sont
vraiment défaillantes de par le fait que l'utilisateur apache est le
propriétaire de ses fichiers de log. Si un utilisateur obtient un shell par une
voie dérobée d'apache, il pourra facilement supprimer les fichiers de log.
-->

<!--
# C'est assez personnel, à mon humble avis, car c'est du au fait que
# les privilèges root sont abandonnés au démarrage. Je préfère qu'un attaquant
# efface les fichiers de log d'un service plutot tous mes fichiers de log système.
# Dans tous les cas, cela peut être amélioré en changeant les permissions 
# utilisateur après rotation
-->

<sect id="kernel-patches">Les utilitaires pour mettre des rustines au noyau
<!-- éditer en dernier par Frédéric Schütz <schutz@mathgen.ch> -->

<p>FIXME: Cette section a besoin de couvrir la manière d'installer ces
rustines spécifiques sur Debian en utilisant les paquets kernel-2.x.x-patch-XXX.
</p>

<!-- Rendre les entrées cohérentes : est-ce que les noms de paquet devraient -->
<!-- être des liens vers les pages des paquets correspondantes ? -->

<p>
Debian GNU/Linux fournit quelques rustines pour le noyau Linux qui améliorent
sa sécurité du système. En voici quelques-unes&nbsp;:


<list>

<item>LIDS &mdash; «&nbsp;Linux intrusion detection system&nbsp;» (du paquet
<package>lids-2.2.19</package>), par Huagang Xie et
Philippe Biondi. Cette rustine du noyau rend le processus de renforcement d'un système
Linux plus facile en vous permettant de restreindre, cacher et protéger des
processus, même par rapport au root. Il vous permet égaelemnt de protéger ou
cacher certains fichiers pour que même root ne puisse les modifier. C'est un outil incontournable
pour l'administrateur paranoïaque de système. Site Internet&nbsp;: <url
name="http://www.lids.org" id="http://www.lids.org">

<item>POSIX Access Control Lists (ACLs) pour Linux (du paquet
<package>kernel-patch-acl</package>). Cette rustine
ajoute les listes de contrôle d'accès, une méthode avancée pour restreindre 
l'accès aux fichiers, par le noyau linux. Cette rustine a été ajoutée au noyau
de développement 2.5 et sera inclue par défaut dans le futur noyau 2.6. Site
Internet&nbsp;: <url name="http://acl.bestbits.at/" id="http://acl.bestbits.at/">

<item>Linux trustees (du paquet <package>trustees</package>). Cette rustine ajoute un
système avancé décent de gestion des permissions à votre noyau Linux. Des objets
spéciaux (les trustees) sont associés à chaque fichier ou répertoire et ils sont
stockés dans la mémoire noyau, ce qui permet un accès rapide pour
toutes les permissions. Site Internet&nbsp;: <url name="http://trustees.sourceforge.net/" 
id="http://trustees.sourceforge.net/">

<item>NSA Enhanced Linux (du paquet <package>selinux</package>,
également disponible depuis
<url id="http://www.coker.com.au/selinux/" name="le site web du développeur">)

<item><package>kernel-patch-2.2.18-openwall</package> par Solar Designer.  C'est un ensemble utile de restrictions
pour le noyau, comme la restriction de liens, FIFOs dans /tmp, une restriction de
/proc, maniement de la description de fichiers spéciaux, pile de l'utilisateur
non exécutable et bien plus.  Site Internet&nbsp;:
<url name="http://www.openwall.com/linux/" id="http://www.openwall.com/linux/">

<item><package>kernel-patch-2.2.19-harden</package>

<item>Support IPSEC du noyau (du paquet
<package>kernel-patch-freeswan</package>). Si vous voulez utiliser le protocole IPSec avec Linux, vous avez besoin 
de cette rustine. Vous pouvez ainsi créer des VPNs très facilement, même vers les machines
Windows, puisque IPSec est un standard courant. Des fonctionnalités IPSec ont
été ajoutées au noyau de développement 2.5, cette fonctionnalité sera donc
présente par défaut dans le futur noyau Linux 2.6. Site Internet&nbsp;: <url
id="http://www.freeswan.org">

<item><package>cryptoapi-core-source</package>.  Cette rustine noyau ajoute des
fonctionnalités de cryptage au noyau Linux, comme des fonctions cipher et
digest. L'utilisation habituelle de ces fonctions est pour le cryptage des
systèmes de fichiers et du swap. Notez qu'à partir de la version 2.5.45, des
fonctionnalités semblables ont été ajoutés au noyau officiel Linux, il est donc
probable que vous n'aurez plus besoin de cette rustine dans le futur noyau 2.6.
<em>Remarque</em>&nbsp;: ce paquet n'existe pas dans les versions de Debian
antérieures à <url id="http://www.debian.org/releases/sarge/" name="Sarge">.
Site Internet&nbsp;: <url name="http://www.kerneli.org" id="http://www.kerneli.org">

<item><package>cryptoloop-source</package>. Cette rustine vous permet d'utiliser
les fonctions du paquet <package>crytoapi-core-source</package> pour créer des
systèmes de fichiers encryptés en utilisant le périphérique loopback.

<item><package>kernel-patch-int</package>. Cette rustine vous permet également
d'ajouter des fonctionnalités de cryptographie au noyau Linux et elle était
utile pour les versions de Debian jusqu'à Potato. Elle ne fonctionne pas avec
Woody et si vous utilisez Sarge ou une version plus récente, vous devriez
utiliser le plus récent <package>cryptoapi-core-source</package>.

</list>

<p>
Cependant, certaines rustines ne sont pas encore fournies dans Debian. Si vous
croyez que certaines devraient être incluses, veuillez le demander sur la page
des <url name="paquets en souffrance et paquets prospectifs"
id="http://wnpp.debian.org">.  Certains d'entre eux sont&nbsp;:
<!-- http://wnpp.debian.org unreachable in the last two days... -->

<list>

<item><url id="http://pageexec.virtualave.net/" name="
rustine PaX">

<item>
<url name="rustine HAP"
id="http://www.theaimsgroup.com/~hlein/hap-linux/">

<item>
<url name="rustune Stealth"
id="http://www.energymech.net/madcamel/fm/">

<item><em>SubDomain</em>. Une extension du noyau pour fournir un confinement de
privilèges pour des programmes potentiellement peu sûrs. SubDomain complète et
étend les contrôles d'accès natifs. Bien qu'il soit sembable à un environnement
<prgn>chroot</prgn>, il prétend être plus facile à construire et plus créer
qu'un environnement <prgn>chroot</prgn>. Site Internet&nbsp;: <url
name="http://www.immunix.org/subdomain.html"
id="http://www.immunix.org/subdomain.html">

<item><em>UserIPAcct</em>.  Ce n'est pas réellement une rustine liée à la sécurité,
mais cela vous permet de créer des quotas par utilisateur pour le trafic sur votre
serveur. Vous pouvez aussi obtenir des statistiques sur le trafic utilisateur.
Site Internet&nbsp;: <url id="http://ramses.smeyers.be/useripacct">.

</list>

<sect>Se protéger contre les dépassements de tampon

<p><em>Dépassement de tampon</em> est le nom d'une attaque courante sur un
logiciel qui utilise insuffisamment des vérifications de limites (une erreur de
programmation courante) pour exécuter du code machine par des entrées d'un
programme. Ces attaques, contre des logiciels serveurs qui attendent des
connexions distantes et contre des logiciels locaux qui autorisent des
privilèges élevés aux utilisateurs (<tt>setuid</tt> ou <tt>setgid</tt>) peuvent
résulter en la compromission de tout système donné.

<p>Il y a dans l'ensemble quatre méthodes pour se protéger contre les
dépassement de tampon&nbsp;:

<list>

<item>appliquer une rustine au noyau pour empêcher l'exécution de la pile&nbsp;;

<!-- FIXME: ajouter un lien vers à l'endroit principal -->

<item>utiliser une bibliothèque, comme libsage, pour ré-écrire des fonctions
vulnérables et introduire une vérification correcte (pour des informations sur
l'installation de libsafe, veuillez lire
<url id="http://www.Linux-Sec.net/harden/libsafe.uhow2.txt" name="ceci">)&nbsp;;

<item>recompiler le code pour introduire des vérifications corrections qui
empêchent les dépassements en utilisant, par exemple, stackguard&nbsp;;

<item>utiliser des outils pour trouver et corriger le code qui peut introduire
cette faille.

</list>

<p>Debian GNU/Linux, dans sa version 3.0, ne fournit des logiciels que pour
implémenter la première et la dernière de ces méthodes (des rustines noyau et
des outils pour détecter de possibles dépassements de tampon). L'utilisation de
ces outils pour détecter des dépassements de tampn nécessite, en tout cas, une
expérience de programmation pour corriger (et recompiler) le code. Debian
fournit, par exemple&nbsp;: <package>bfbtester</package> (un testeur de
dépassement de tampon qui effectue un test brut sur les binaires par des
dépassements de tampon sur la ligne de commande et l'environnement) et
<package>njamd</package>.

<p>En ce qui concerne les rustines noyau (décrites dans la section <ref
id="kernel-patches">), la rustine Openwall fournit une protection contre les
dépassements de tampon dans les noyaux Linux 2.2. Cependant, pour les noyaux
2.4, vous devez utiliser la rustine Grsecurity (dans le paquet <package>
kernel-patch-2.4-grsecurity</package>) qui inclut la rustine Openwall et
beaucoup plus de <url id="http://www.grsecurity.net/features.php"
name="fonctionnalités"> (y compris les ACLs et un caractère aléatoire pour le
réseau pour le rendre plus résistant à la détection d'empreinte à distance du
système d'exploitation) ou le «nbsp;Linux Security
Modules&nbsp;» (dans les paquets <package>kernel-patch-2.4-lsm</package> et
<package>kernel-patch-2.5-lsm</package>).

<p>Dans tous les cas, soyez conscient que même ces contournement peuvent ne pas
prévenir les dépassements de tampon cas il existe des moyens de circonvenir
ceux-ci, comme décrit dans l'<url name="édition 58"
id="http://packetstorm.linuxsecurity.com/mag/phrack/phrack58.tar.gz"> du
magazine phrack.


<sect>Sécurisation des transferts de fichiers

<p>
Pendant l'administration normale du système, il est habituellement nécessaire de
transférer des fichiers à partir et vers le système installé. La copie des
fichiers de façon sécurisée d'un hôte vers un autre peut être effectuée en
utilisant le paquet serveur <package>sshd</package>. Une autre possibilité est
d'utiliser <package>ftpd-ssl</package>, un serveur FTP qui utilise <em>Secure
Socket Layer</em> pour encrypter les transmissions.

<p>
Toutes ces méthodes nécessitent, bien sûr, des clients spécifiques. Debian
fournit ces clients, par exemple le paquet <package>ssh</package> fournit
<prgn>scp</prgn>. Il fonctionner comme <prgn>rcp</prgn>, mais est complètement
encrypté, donc les <em>méchants</em> ne peuvent même pas savoir CE QUE vous
copiez. Il existe également un paquet client <package>ftp-ssl</package> pour
le serveur équivalent. Vous pouvez trouver des clients pour ces logiciels, même
pour d'autres systèmes d'exploitation (non-UNIX), <prgn>putty</prgn> et
<prgn>winscp</prgn> fournissent des implémentations de copie sécurisée pour
toutes les versions des systèmes d'exploitation de Microsoft.

<p>
Notez qu'utiliser <prgn>scp</prgn> fournit un accès pour tous les utilisateurs à
tout le système de fichiers à moins de faire un <prgn>chroot</prgn> comme décrit
dans <ref id="ssh-chroot">. L'accès FTP peut être <prgn>chroot</prgn>é, ceci est
probablement plus facile selon le démon que vous choisissez, comme décrit dans <ref
id="ftp-secure">. Si vous vous inquiétez d'utilisateurs locaux pouvant parcourir
vos fichiers locaux et que vous voulez avoir une communication encryptée, vous
pouvez utiliser soit un démon FTP avec support SSL ou combiner un FTP sans
cryptage avec une configuration VPN (voir <ref id="vpn">).

<!-- Je sais bien que c'est la traduction mot pour mot, "méchant", mais ne devrait on pas
préférer intrus? jpg -->


<sect>Limites et contrôle des systèmes de fichiers

<sect1>Utilisation de quotas

<p>
Avoir une bonne politique relative aux quotas est important, vu qu'elle 
empêche les utilisateurs de remplir le(s) disque(s) dur(s).

<p>
Vous pouvez utiliser deux systèmes de quotas différents&nbsp;: les quotas utilisateur 
et les quotas groupe. Comme vous l'avez probablement deviné, les quotas utilisateur 
limitent la quantité d'espace qu'un utilisateur peut avoir, les quotas groupe 
quant à eux font la même chose pour les groupes. Retenez ceci quand vous 
calculerez les tailles des quotas.

<p>
Il y a quelques points importants auxquels il faut penser dans la mise en place 
d'un système de quotas&nbsp;:

<list>
<item>Garder les quotas suffisamment petits, ainsi les utilisateurs ne dévoreront pas 
votre espace disque.

<item>Garder les quotas suffisamment grands, ainsi les utilisateurs ne 
se plaindront pas et leur quota de courrier leur permettra d'accepter des
courriers pendant une longue période.

<item>Utilisez des quotas sur tous les espaces accessibles en écriture par les 
utilisateurs, <file>/home</file> aussi bien que <file>/tmp</file>.
</list>

<p>
Tous les répertoires et partitions auxquels les utilisateurs ont accès en écriture 
complet devraient avoir les quotas d'activés. Recherchez ces partitions et 
répertoires et calculez une taille adaptée qui combine disponibilité et 
sécurité.

<p>
Bon, maintenant vous désirez utiliser les quotas. Avant tout, vous avez besoin 
de vérifier si vous avez activé le support du quota dans votre noyau. Si non,
vous devrez le recompiler. Après cela, contrôlez si le paquet <prgn>quota</prgn> est 
installé. Si non, vous en aurez également besoin.

<!-- FIXME: Comment verifier si les quotas sont activés? Qu'y a t'il
à faire pour recompiler? -->

<p>
L'activation des quotas pour des systèmes de fichiers différents est 
aussi facile que la modification du paramètre <tt>defaults</tt> en 
<tt>defaults,usrquota</tt> dans votre fichier <file>/etc/fstab</file>.
Si vous avez besoin des quotas par groupe, remplacez 
<tt>usrquota</tt> par <tt>grpquota</tt>. Vous pouvez également utiliser les 
deux. Ensuite, créez des fichiers vides quota.user et quota.group à la racine du 
système de fichiers sur lequel vous voulez utiliser les quotas (<tt>touch
/home/quota.user /home/quota.group</tt> pour un système de fichier <file>/home</file>).

<p>
Redémarrez le quota en faisant <tt>/etc/init.d/quota stop;/etc/init.d/quota
start</tt>. Maintenant les quotas devraient être en fonction et leurs tailles peuvent 
être configurées.

<p>
L'édition de quotas pour un utilisateur spécifique (disons «&nbsp;ref&nbsp;») peut être 
réalisée en faisant <tt>edquota -u ref</tt>. Les quotas par groupes peuvent 
être modifiés avec <tt>edquota -g &lt;group&gt;</tt>. Ensuite, paramétrez
les quotas soft et hard et/ou les quotas pour inodes selon vos besoins.

<!-- Quota permet d'etablir des quotas par utilisateur, ou par groupe d'utilisateurs.
Il faut faire attention dans cette partie de traduction qui amha est a revoir pour affiner.jpg -->

<p>
Pour plus d'informations concernant les quotas, voir la page de manuel de la 
commande quota et le quota mini-howto
(<file>/usr/share/doc/HOWTO/en-html/mini/Quota.html</file>).

<p>
Vous pouvez apprécier ou non <package>lshell</package>, puisque il 
transgresse le FHS. Aussi prenez note que pam_limits.so peut vous
fournir la même fonctionnalité et <package>lshell</package>
est actuellement <url id="http://bugs.debian.org/93894" name="orphelin">
<!-- Section dupliquée "Logfile permissions" supprimée (era) -->
<!-- Section dupliquée "Setting up setuid check" supprimée (era) -->

<sect1 id="ext2attr">Les attributs spécifiques du système de fichiers ext2 (chattr/lsattr) 
<!-- section éditée en dernier par Frédéric Schütz <schutz@mathgen.ch> -->

<p>
En plus des permissions standard Unix, les systèmes de fichiers ext2 et ext3
vous offrent un ensemble d'attributs spécifiques qui vous donne plus de contrôle
sur les fichiers de votre système. À la différence des persmissions de base, ces
attributs ne sont pas affichés par la commande standard <prgn>ls -l</prgn>, ni
changés par la commande <prgn>chmod</prgn> et vous avez besoin de deux autres
utilitaires, <prgn>lsattr</prgn> et <prgn>chattr</prgn> (du paquet
<package>e2fsprogs</package>) pour les gérer. Notez que ceci veut dire que ces
attributs ne sont habituellement pas sauvés quand vous sauvegardez le système,
donc si vous changez l'un d'entre eux, il peux être utile de sauver les
commandes <prgn>chattr</prgn> successives dans un script pour pouvoir les
repositionner plus tard si vous avez à récupérer une sauvegarde.

<p>
Parmi tous les attributs disponibles, les deux plus importants pour améliorer la
sécurité sont référencés par les lettres «&nbsp;i&nbsp;» et «&nbsp;a&nbsp;» et
ils ne peuvent être positionés (ou enlevés) que le super-utilisateurs&nbsp;:

<list>
<item>L'attribut «&nbsp;i&nbsp;» (inchangeable, «&nbsp;immutable&nbsp;»)&nbsp;:
un fichier ayant cet attribut ne peut-être ni modifié ni effacé 
ou encore renommé et aucun lien ne peut le référencer, même par le
super-utilisateur.

<item>L'attribut «&nbsp;a&nbsp;» (ajout, «&nbsp;append&nbsp;»)&nbsp;: cet
attribut a le même effet que l'attribut «&nbsp;immutable&nbsp;», excepté que
vous pouvez encore ouvrir le fichier en mode ajout. Ceci veut dire que vous
pouvez encore ajouter plus de contenu au fichier, mais qu'il est impossible de
modifier un contenu précédent. Cet attribut est particulièrement utile pour les
fichiers de log stockés dans <file>/var/log/</file>, bien que vous devez
considérer qu'ils sont parfois déplacés à cause des scripts d'archivage.
</list>

<p>
Ces attributs peuvent également être positionnés pour les répertoires, dans ce
cas, le droit de modifier le contenu de la liste d'un répertoire est refusé (par
exemple, renommer ou supprimer un fichier, etc.). Quand il est appliqué à un
répertoire, l'attribut d'ajout ne permet que la création de fichiers.

<p>
Il est aisé de voir que l'attribut «&nbsp;a&nbsp;» améliore la sécurité, en
donnant aux programmes qui ne fonctionnent pas en tant que super-utilisateur, la
possibilité d'ajouter des données à un fichier sans pouvoir modifier son
précédent contenu. D'un autre côté, l'attribut «&nbsp;i&nbsp;» semble moins
intéressant&nbsp;: après tout, le super-utilisateur peut déjà utiliser les
permissions standards Unix pour restreindre l'accès à un fichier et un intrus
qui aurait accès au compte super-utilisateur peut toujours utiliser le programme
<prgn>chattr</prgn> pour supprimer l'attribut. Un tel intrus peut tout d'abord
être perplexe quand il se rendra compte qu'il ne peut pas supprimer un fichier,
mais vous ne devriez pas supposer qu'il est aveugle &mdash&nbsp; après tout, il
est entré dans votre système&nbsp;! Certains manuels (y compris une précédente
version de ce document) suggèrent de supprimer simplement les programmes
<prgn>chattr</prgn> et <prgn>lsattr</prgn> du système pour améliorer la
sécurité, mais ce genre de stratégie, aussi connu comme «&nbsp;sécurité par
l'obscurité&nbsp;», doit être absolument évitée, car elle donne un sentiment
trompeur de sécurité.

<p>
Une façon sûre de résoudre ce problème est d'utiliser les fonctionnalités du
noyau Linux, comme décrit dans <ref id="proactive">. La fonctionnalité
intéressante est appelée ici <tt>CAP_LINUX_IMMUTABLE</tt>&nbsp;: si vous la
supprimez de l'ensemble des fonctionnalités <!-- (capabilities bounding set ?) -->
<!-- --> (en utilisant par exemple la commande
<tt>lcap CAP_LINUX_IMMUTABLE</tt>), il ne sera plus possible n'importe quel attribut
«&nbsp;a&nbsp;» ou «&nbsp;i&nbsp;» sur votre système, même par le
super-utilisateur&nbsp;! Une stratégie complète serait alors la suivante&nbsp;:

<enumlist>
  <item> Positionner les attributs «&nbsp;a&nbsp;» et «&nbsp;i&nbsp;» sur tous
  les fichiers que vous désirez&nbsp;;
  <item> Ajouter la commande <tt>lcap CAP_LINUX_IMMUTABLE</tt> (ainsi que
         <tt>lcap CAP_SYS_MODULE</tt>, comme suggéré dans <ref id="proactive">)
         à l'un des scripts de démarrage&nbsp;;
<!-- Quelqu'un est-il intéressé par :
http://lists.debian.org/debian-security/2001/debian-security-200107/msg00024.html -->
  <item> Positionner l'attribut «&nbsp;i&nbsp;» sur ce script et d'autres
  fichiers de démarrage ainsi que sur le binaire <prgn>lcap</prgn> lui-même&nbsp;;
  <item> Exécuter la commande ci-dessus manuellement (ou ré-amorcer le système
  pour vous assurer que tout fonctionner comme prévu).
</enumlist>

<p>
Maintenant que la fonctionnalité a été enlevée de votre système, un intrus ne
peut plus changer aucun attribut des fichiers protégés et donc, il ne peut pas
changer ou supprimer les fichiers. S'il force la machine à redémarrer (ce qui
est la seuNow that the capability has been rele façon de récupérer le jeu de
fonctionnalités <!-- capabilities bounding set -->), cela sera facile à détecter
et la fonctionnalité sera de toute façon enlevée à nouveau dès que le
redémarrage du système. La seule façon de changer un fichier protégé serait de
ré-amorcer le système en mode utiliseur seul (single-user mode) ou d'utiliser
une autre image d'amorçage, deux opérations qui nécessitent un accès physique à
la machine&nbsp;!

<!-- Ajouter une note sur le fait que ce n'est pas très répandu -->

<sect1 id="check-integ">Vérifier l'intégrité des systèmes de fichiers

<p>
Êtes-vous sûr que le /bin/login présent sur votre disque dur soit le même 
que celui que vous aviez installé il y a de cela quelques mois&nbsp;? Que faire 
si c'est une version piratée, qui enregistre les mots de passe entrés 
dans un fichier caché ou les envoie en clair à travers l'Internet&nbsp;?

<p>
La seule méthode pour avoir un semblant de protection est de vérifier 
vos fichiers tous les heures/jours/mois (je préfère quotidiennement) 
en comparant l'actuel et l'ancien md5sum de ce fichier. Deux fichiers 
ne peuvent avoir le même md5sum (le MD5 est basé sur 128 bits, ainsi 
la chance que deux fichiers différents aient le même md5sum est 
approximativement de un sur 3.4e3803), donc de ce côté tout est ok, à 
moins que quelqu'un ait piraté également l'algorithme qui crée les 
md5sums sur cette machine. Ceci est extrêmement difficile et très 
improbable. Vous devriez vraiment prendre en compte que la vérification 
de vos binaires est très importante étant donné que ceci est un moyen 
facile de reconnaître des changements sur vos binaires. Les outils 
couramment utilisés pour ceci sont <package>sXid</package>,
<package>AIDE</package> (Advanced Intrusion Detection Environment),
<package>TripWire</package> (non libre&nbsp;; la nouvelle version sera en GPL),
<package>integrit</package> et <package>samhain</package>.

<p>Installer <tt>debsums</tt> vous aidera à vérifier l'intégrité du 
système de fichiers en comparant le md5sum de chaque fichier avec celui 
utilisé dans l'archive des paquets Debian. Mais faîtes attention, ces 
fichiers peuvent facilement être modifiés.

<p>De plus, vous pouvez remplacer <package>locate</package> par 
<package>slocate</package>. slocate est une version sécurisée améliorée de 
GNU locate. Lors de l'utilisation de slocate, l'utilisateur ne peut voir 
que les fichiers auxquels il a réellement accès et vous pouvez exclure tous 
fichiers et répertoires du système.


<sect1>Mise en place de la vérification setuid

<p>
Debian fournit une tâche <prgn>cron</prgn> qui s'exécute quotidiennement dans 
<file>/etc/cron.daily/standard</file>. Cette tâche <prgn>cron</prgn> exécutera le script 
<prgn>/usr/sbin/checksecurity</prgn> qui sauvegardera l'information sur les 
changements.

<!-- FIXME: Quel est le défaut pour ceci dans le paquet cron ? jfs -->

<p>Pour que cette vérification soit faite vous devez positionner
<tt>CHECKSECURITY_DISABLE="FALSE"</tt> dans <file>/etc/checksecurity.conf</file>.
Notez que c'est la configuration par défaut, donc à moins que vous ayez changé
quelque chose, cette option sera déjà positionnée à "FALSE".

<p>Le comportement par défaut est de ne pas envoyer cette information au super-utilisateur
mais à la place de garder une copie journalière des changements dans
<file>/var/log/setuid.changes</file>. Vous devrez positionner
CHECKSECURITY_EMAIL (dans <file>/etc/checksecurity.conf</file>) à «&nbsp;root&nbsp;» pour
que cette information lui soit envoyée. Voir <manref
name="checksecurity" section="8"> pour plus d'informations sur la configuration.

 
<sect id="network-secure">Sécurations des accès réseau

<p>FIXME. Besoin de plus de contenu (spécifique Debian)

<sect1 id="kernel-conf">Configuration des options réseaux du noyau

<p>FIXME&nbsp;: Pas de contenu

<p>
Beaucoup de fonctionnalités du kernel peuvent être modifiées en cours
de fonctionnement en envoyant quelque chose (via la commande <prgn>echo</prgn>) dans
le système  de fichier <file>/proc</file> ou en utilisant <prgn>sysctl</prgn>. En entrant
<tt>sysctl -A</tt>, vous pouvez voir ce que vous pouvez configurer et quelles
sont les options, elles peuvent être modifiées en exécutant <tt>/sbin/sysctl -w variable=valeur</tt> (voir <manref
section="8" name="sysctl">). Vous aurez seulement en de rares occasions à éditer 
quelque chose ici, mais vous pouvez augmenter la sécurité de cette manière
aussi. Par exemple&nbsp;:
 
<!-- FIXME: /proc/sys/ ne devrait-il pas préfixer tout ça ? era -->

<example>
net/ipv4/icmp_echo_ignore_broadcasts = 1
</example>

C'est un «&nbsp;émulateur Windows&nbsp;» parce que ça agit comme Windows sur 
les ping de broadcast si celui-ci est positionné à 1. C'est-à-dire que les
requêtes ICMP_ECHO envoyées à l'adresse broadcast seront ignorées.
<!-- Ce qui veut dire quoi exactement? Simplement que ça ignore les broadcasts? FIXME -->
Sinon, cela ne fait rien.

<p>Si vous voulez bloquer toutes requêtes ICMP sur votre système, activez cette
option de configuration&nbsp;:

<example>
net/ipv4/icmp_echo_ignore_all = 0
</example>

<p>Pour enregistrer les paquets avec des adresses impossibles (à cause de routes
erronnées) sur votre réseau, utilisez&nbsp;:

<example>
/proc/sys/net/ipv4/conf/all/log_martians = 1
</example>

<p>Pour plus d'informations sur ce qui peut être fait avec
<file>/proc/sys/net/ipv4/*</file>, lisez
<file>/usr/src/linux/Documentation/filesystems/proc.txt</file>. Toutes les
options sont décrites de façon complète sous
<file>/usr/src/linux/Documentation/networking/ip-sysctl.txt</file>
<footnote>Dans Debian, le paquet <package>kernel-image</package> installe les
sources sous <file>/usr/src/kernel-souce-2.X.X</file>, remplacez simplement
<em>linux</em> par l'endroit où est installé votre noyau</footnote>.

<sect2 id="tcp-syncookies">Configurer Syncookies

<p>Cette option est à double tranchant. D'un côté, elle protège votre système
contre le syn flooding&nbsp;; d'un autre côté, elle viole les standards définis (RFCs).

<!-- What does this mean? (jfs)
This option is quite dumb as it floods the
other side like it floods you, so the other side is also busy. 
Cette option est assez stupide car elle floode l'autre partie de la même manière
qu'elle vous flood, ainsi l'autre partie est aussi occupée. Si vous voulez changer
cette option vous pouvez aussi la changer dans
<tt>/etc/network/options</tt> en positionnant <tt>syncookies=yes</tt>.
-->

<!-- <p>Si vous ne voulez pas bloquer ICMP avec votre pare-feux, activez ceci. -->

<!--
Est ce que ça veut dire, si vous voulez bloquer ICMP mais pas vec votre parefeux? FIXME
-->

<example>
net/ipv4/tcp_syncookies = 1
</example>

<p>Si vous voulez changer cette option à chaque fois que le noyau fonctionne,
vous devez le faire dans <tt>/etc/network/options</tt> en positionnant
<tt>syncookies=yes</tt>. Ceci prendra effet à chaque fois que
<tt>/etc/init.d/networking</tt> est exécuté (ce qui est fait lors du démarrage)
alors que ceci ne fontionnera qu'avec le noyau en cours de fonctionnement&nbsp;:

<example>
echo 1 > /proc/sys/net/ipv4/tcp_syncookies 
</example>

<p>Cette option n'est dispobile que si vous avez compilé le noyau avec
<tt>CONFIG_SYNCOOKIES</tt>. Tous les noyaux Debian sont compilés avec cette
option incluse, mais vous pouvez le vérifier en exécutant&nbsp;:

<example>
$ sysctl -A |grep syncookies
net/ipv4/tcp_syncookies = 1
</example>

<p>Pour plus d'informations sur les syncookies TCP, lisez
<url id="http://cr.yp.to/syncookies.html">.

<sect1 id="net-harden">Sécurisation du réseau pendant l'amorçage

<p>
Quand vous positionnez des options de configuration de réseau du noyau, vous
devez le configurer pour que ce soit chargé à chaque fois que le système est
redémarré. L'exemple suivant active un grand nombre des options précédentes
ainsi que d'autres options utiles.

<p>
Créez le script dans <file>/etc/network/interface-secure</file> (le nom est
donné comme exemple) et appelez le à partir de
<file>/etc/network/interfaces</file> comme ceci&nbsp;:

<example>
auto eth0
iface eth0 inet static
        address xxx.xxx.xxx.xxx
        netmask 255.255.255.xxx
        broadcast xxx.xxx.xxx.xxx
        gateway xxx.xxx.xxx.xxx
        pre-up /etc/network/interface-secure

</example>

<example>
# Nom du script : /etc/network/interface-secure
# Modifie plusieurs comportements par défaut pour sécuriser contre certaines
# attaques et IP spoofing
#
# Fourni par Dariusz Puchalak  
#
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts 
                                           # active la protection broadcast echo
echo 0 > /proc/sys/net/ipv4/ip_forward     # désactive l'ip forwarding
echo 1 > /proc/sys/net/ipv4/tcp_syncookies # active la protection TCP syn cookie
echo 1 >/proc/sys/net/ipv4/conf/all/log_martians 
                                           # Logue les paquets avec des adresses impossibles
                         # mais faites attention à ceci sur les serveurs web très chargés
echo 1 > /proc/sys/net/ipv4/ip_always_defrag 
                                           # active la protection permanente sur la défragmentation
echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses 
                                           # active la protection sur les mauvais messages d'erreur

# maintenant la protection ip spoofing
for f in /proc/sys/net/ipv4/conf/*/rp_filter; do
        echo 1 > $f
done

# et enfin, encore d'autres choses
# Désactuve l'acceptation Redirect ICMP
for f in /proc/sys/net/ipv4/conf/*/accept_redirects; do
        echo 0 > $f
done

for f in /proc/sys/net/ipv4/conf/*/send_redirects; do
      echo 0 > $f
done

# Désactuve Source Routed
for f in /proc/sys/net/ipv4/conf/*/accept_source_route; do
        echo 0 > $f
done

# Logue les paquets spoofés, les paquets Source Routed, les paquets Redirect
for f in /proc/sys/net/ipv4/conf/*/log_martians; do
        echo 1 > $f
done
</example>

<p>
Vous pouvez également créer un script <tt>init.d</tt> et le faire exécuter au
démarrage (en utilisant <prgn>update-rc.d</prgn> pour créer les liens
<tt>rc.d</tt> appropriés).

<!-- Fin de traduction je fais la partie suivante :) -->

<sect1 id="kernel-fw">Configuration des fonctionnalités de pare-feu
<!--- Configuration des composants du firewall. Je laisse en non traduit. jpg -->
<p>
De façon à avoir des privilèges de pare-feux, soit pour protéger le 
système local ou d'autres <em>derrière</em> lui, le noyau doit 
être compilé avec les options correspondant aux pare-feu. Le 
noyau standard 2.2 de la Debian (également 2.2) fournit <prgn>ipchains</prgn>
qui est un pare-feu pour filtrer les paquets, le noyau standard de 
la Debian 3.0 (noyau 2.4) fournit lui le pare-feu <prgn>iptables</prgn>
(netfilter). Les anciennes distributions Debian auront besoin de rustines
appropriées pour le noyau (Debian 2.1 utilise le noyau 2.0.34).

<p>
Dans tous les cas, il est relativement facile d'utiliser un noyau 
différent de celui fourni par Debian. Vous pouvez trouver des noyaux 
pré-compilés sous forme de paquets que vous pouvez facilement installer 
sur le système Debian. Vous pouvez également télécharger les sources du 
noyau en utilisant <package>kernel-source-X</package> et construire des 
paquets de noyau personnalisé en utilisant <package>make-kpkg</package>.

<p>
La mise en place de pare-feu dans Debian est abordée plus en détail dans 
<ref id="firewall-setup">.

<sect1 id="limit-bindaddr">Désactiver les problèmes d'hôtes weak-end <!-- Pas d'idée ... -->

<p>
Les systèmes avec plus d'une interface sur différents réseaux peuvent avoir
des services configurés pour qu'ils ne puissent s'associer qu'à une adresse IP
donnée. Ceci prévient habituellement les services quand ils sont interrogés par
une adresse donnée. Cependant, cela ne veut pas dire (bien qu'il s'agisse d'une
erreur de conception commune que j'ai moi aussi faite) que le service est lié à
une adresse <em>matérielle</em> donnée (carte interface).
<footnote>
Pour reproduire ceci (exemple fourni par Felix von Leitner sur la liste de
diffusion bugtraq)&nbsp;:
<example>
   hôte a (eth0 connecté sur l'eth0 de l'hôte b):
     ifconfig eth0 10.0.0.1
     ifconfig eth1 23.0.0.1
     tcpserver -RHl localhost 23.0.0.1 8000 echo fnord

   hôte b:
     ifconfig eth0 10.0.0.2
     route add 23.0.0.1 gw 10.0.0.1
     telnet 23.0.0.1 8000
</example>
<p>
Cela semble, cependant, ne pas fonctionner avec les services liés à 127.0.0.1,
vous pourriez devoir écrire des tests utilisant des sockets raw.</p> <!-- bruts ? -->
</footnote>

<p>
Ceci n'est pas un problème ARP et ce n'est pas une violation de RFC (c'est ce
que l'on appelle le <em>weak end host</em> dans la <url
id="ftp://ftp.isi.edu/in-notes/rfc1122.txt" name="RFC1122">, section 3.3.4.2).
Rappelez-vous que les adresses IP n'ont rien à voir avec les interfaces
physiques.

<p>Sur les noyaux 2.2 (et antérieurs), ceci peut être corrigé avec&nbsp;:
<example>
# echo 1 > /proc/sys/net/ipv4/conf/all/hidden
# echo 1 > /proc/sys/net/ipv4/conf/eth0/hidden
# echo 1 > /proc/sys/net/ipv4/conf/eth1/hidden
.....
</example>
<p>Sur des noyaux postérieurs, ceci peut être corrigé avec&nbsp;:
<list>
<item>des rêgles iptables,
<item>un routage correctement configuré
<footnote>
Le fait que ce comportement puisse être changé par le routage a été décrit par
Matthew G. Marsh dans l'enfilade sur bugtraq&nbsp;:
<example>
eth0 = 1.1.1.1/24
eth1 = 2.2.2.2/24

ip rule add from 1.1.1.1/32 dev lo table 1 prio 15000
ip rule add from 2.2.2.2/32 dev lo table 2 prio 16000

ip route add default dev eth0 table 1
ip route add default dev eth1 table 2
</example>
</footnote>,
<item>des correctifs du noyau
<footnote>
Il existe des correctifs disponibles pour ce comportement comme décrit dans
l'enfilade sur bugtraq à
<url id="http://www.linuxvirtualserver.org/~julian/#hidden">
et <url id="http://www.fefe.de/linux-eth-forwarding.diff">.
</footnote>
</list>
<p>Tout au long de ce texte, il y aura plusieurs occasions pour lesquelles ils
est affiché comment configurer certains services (serveur sshd, apache, service
d'impression, etc.) pour les avoir en attente sur une adresse donnée, le lecteur
devra prendre en compte que, sans les correctifs données ici, le correctif
n'empêchera pas les accès depuis le même réseau (local).
<footnote>
Un attaquant peut avoir beaucoup de problèmes à transférer un accès après une
configuration de l'adresse IP s'il n'est pas le domaine de broadcast (même
réseauà que l'hôte attaqué. Si l'attaque passe par un routeur, il peut être
assez difficile pour les réponses de retourner quelque part. <!-- euh ? -->
</footnote>

<p>FIXME: commentaires sur bugtraq indiquant qu'il existe une méthode spécifique
Linux pour associer à une interface donnée.

<p>FIXME: Créer un bogue sur netbase pour que le correctif de routage soit le
comportement standard dans Debian&nbsp;?

<sect1>Protéger contre les attaques ARP

<p>Quand vous ne faites pas confiance aux autres machines de votre réseau (ce
qui devrait toujours être le cas parce que c'est l'attitude la plus sûre), vous
devriez vous protéger contre les différentes attaques ARP existantes.

<p>Comme vous le savez, le protocole ARP est utilisé pour lier des adresses IP à
des adresses MAC (voir la <url name="RFC826"
id="ftp://ftp.isi.edu/in-notes/rfc826.txt"> pour tous les détails). À chaque
fois que vous envoyez un paquet à une adresse IP, une résolution arp est
effectuée (en regardant en premier dans le cache local ARP, puis si l'adresse IP
n'est pas présente dans le cache, en diffusant une requête arp) pour trouver
l'adresse matérielle de la cible. Toutes les attaques ARP ont pour but d'amener
votre machine à croîre que l'adresse IP de la machine B est associée à l'adresse
MAC de la machine de l'intrus&nbsp;; puis tous les paquets que vous voudrez
envoyer à l'adresse IP associée à la machine B seront envoyée à la machine de
l'intrus, etc.

<p>
Ces attaques (empoisonnement du cache, falsification ARP, etc.) permettent à
l'attaquant de renifler le trafic même sur des réseaux switchés, pour pirater
facilement des connexions, pour déconnecter tout hôte du réseau, etc. Les
attaques arp sont puissantes et simples à implémenter, plusieurs outils existent&nbsp;: arpspoof
(présent dans le paquet <package>dsniff</package>), <url name="arpmim"
id="http://www.team-teso.net/releases/arpmim-0.2.tar.gz">, <url
name="arpoison" id="http://web.syr.edu/~sabuer/arpoison/">, etc.
<!-- ~sabuer broken and unavailable in the new web site provided -->

<p>Cependant, il existe toujours une solution&nbsp;:

<list>

<item>Utiliser un cache statique arp. Vous pouvez mettre en place des entrées
«&nbsp;statiques&nbsp;» dans votre cache arp&nbsp;:

<example>
arp -s host_name hdwr_addr 
</example> 

<p>En plaçant des entrées statiques pour chaque hôte important de votre réseau,
vous garantissez que personne ne pourra créer ou modifier une entrée
(dissimulée) pour ces hôtes (les entrées statiques n'expirent pas et elles ne
peuvent pas être modifiées) et les réponses arp falsifiées seront ignorées.


<item>Détecter le trafic ARP suspect. Vous pouvez utiliser
<package>arpwatch</package>, <package>karpski</package> ou des IDS plus
générales qui peuvent également détecter le trafic arp suspect
(<package>snort</package>, <url name="prelude"
id="http://www.mandrakelinux.com/prelude">, etc.).

<item>Implémenter un filtrage de trafic IP validant l'adresse MAC.
</list>


<sect id="snapshot">Prendre un instantané (snapshot) du système

<p>Avant de mettre le système en production, vous pouvez prendre un instantané
de votre système entier. Cet instantané pourrait être utilisé en cas de
compromis (see <ref id="after-compromise">). Vous devriez refaire cette mise à
jour à chaque fois que le système est mis à jour, particulièrement si vous
mettez à jour vers une nouvelle version de Debian.

<p>Pour cela, vous pouvez utiliser un support inscriptible et amovible qui peut
être positionné en lecture seule, ce peut être une disquette (en lecture seule
après utilisation) ou un CD d'une unité de CD-ROM (vous pourriez utiliser un
CD-ROM ré-inscriptible, ainsi vous pourriez même garder des sauvegardes des
md5sums à différentes dates).

<p>Le script suivant crée un tel instantané&nbsp;:

<example>
#!/bin/bash
/bin/mount /dev/fd0 /mnt/floppy
/bin/cp /usr/bin/md5sum /mnt/floppy
echo "Calcul de la base de données md5"
>/mnt/floppy/md5checksums.txt
for dir in /bin/ /sbin/ /usr/bin/ /usr/sbin/ /lib/ /usr/lib/
do
   find $dir -type f | xargs /usr/bin/md5sum >>/mnt/floppy/md5checksums-lib.txt
done
/bin/umout /dev/fd0
echo "Base de données md5 de post-installation calculée"
</example>

<p>Notez que le binaire md5sum est placé sur la disquette pour pouvoir être
utilisé plus tard pour vérifier les binaires du système (juste au cas où il
serait aussi corrompu). 

<p>L'instantané n'inclut pas les fichiers sous
<file>/var/lib/dpkg/info</file> qui incluent les hashes md5 des paquets
installés (dans les fichiers se terminant par <file>.md5sums</file>). Vous
pourriez également y copier cette information, cependant il faut que vous
remarquiez que&nbsp;:

<list>
<item>les md5sums fournis par les paquets Debian incluent tous les fichiers que
ceux-ci fournissent, ce qui rend la base de données importante (5 Mo contre
600 ko dans un système Debian GNU/Linux avec un système graphique et environ
2.5 Go de logiciels installés)

<item>tous les paquets Debian ne fournissent pas les md5sums pour les fichiers
installé car ce n'est pas (actuellement) imposé par la Charte.

</list>

<p>Une fois que l'instantané est fait, vous devriez vous assurer de placer le
support en lecture seule. Vous pouvez ensuite le stocker pour archivage ou le
placer dans le lecteur et utiliser une vérification <prgn>cron</prgn> toutes les
nuits en comparant les md5sums d'origine avec ceux de l'instantané.

<sect>Autres recommandations

<sect1>N'utilisez pas de logiciels dépendant de svgalib

<p>
SVGAlib est très bien pour les amoureux de la console comme moi mais 
dans le passé il a été prouvé plusieurs fois qu'elle est très peu sûre.
Des exploits contre <prgn>zgv</prgn> ont été diffusés et il était facile de 
devenir root. Essayez d'éviter l'utilisation de programmes utilisant la 
SVGAlib chaque fois que c'est possible.

<!-- FIXME: move this to policy section if there ever is one? -->

<chapt id="sec-services">Sécuriser les services de votre système

<p>Les services présents sur un système peuvent être sécurisés de deux façons&nbsp;:

<list>

<item>Les rendre accessibles uniquement à certains points d'accès (interfaces).

<item>Les configurer correctement ainsi seuls les utilisateurs habilités 
pourront les utiliser.

</list>

<p>Restreindre les services pour qu'ils soient accessibles que depuis un 
endroit bien spécifique peut être fait au niveau 
du noyau (pare-feu), configurez les services pour écouter uniquement sur 
une interface définie (certains services ne fournissent peut-être pas cette 
fonctionnalité) ou utilisez tout autre méthode, par exemple la rustine vserver 
pour linux (pour 2.4.16) peut être utilisée pour forcer les processus à 
n'utiliser qu'une interface.

<p>Concernant les services lancés par <prgn>inetd</prgn> (<prgn>telnet</prgn>,
<prgn>ftp</prgn>, <prgn>finger</prgn>, <prgn>pop3</prgn>, etc.), il est à noter que inetd ne peut pas être configuré pour
que des services n'écoutent uniquement que sur une interface précise. Toutefois, 
son remplaçant, le méta-démon <prgn>xinetd</prgn>, inclut un <tt>raccourci</tt> <!-- bind ? -->
pour faire cela. Voir <manref name="xinetd.conf" section="5">.


<example>
service nntp
{
        socket_type     = stream
        protocol        = tcp
        wait            = no
        user            = news
        group           = news
        server          = /usr/bin/env
        server_args     = POSTING_OK=1 PATH=/usr/sbin/:/usr/bin:/sbin/:/bin
+/usr/sbin/snntpd logger -p news.info
        bind            = 127.0.0.1
} 
</example>

<p>
Les paragraphes suivants détaillent comment déterminer les services qui peuvent 
être configurés correctement s'appuyant sur une utilisation définie.

<sect>Sécurisation de ssh

<p>
Si vous utilisez toujours telnet au lieu de ssh, vous devriez prendre 
une pause dans la lecture de ce manuel pour remédier à cela. Ssh devrait 
être utilisé pour toutes les connexions distantes à la place de telnet.
À une époque où il est facile de scruter le trafic Internet et d'obtenir les 
mots de passe en clair, vous devriez utiliser uniquement les protocoles qui 
utilisent la cryptographie. Par conséquent, effectuez maintenant un 
<tt>apt-get install ssh</tt> sur votre système.

<p>
Encourager tous les utilisateurs de votre système à utiliser ssh au lieu de 
telnet, ou mieux encore, désinstallez telnet/telnetd. De plus, vous devriez 
éviter de vous connecter au système en utilisant ssh en tant que root et préférer 
l'utilisation de méthodes alternatives pour devenir root tel <tt>su</tt> ou 
<tt>sudo</tt>. Enfin, le fichier <file>sshd_config</file>, dans <file>/etc/ssh</file>, devrait être 
modifié ainsi pour accroître la sécurité&nbsp;:

<list>
<item><tt>ListenAddress 192.168.0.1</tt> <p>Ne faîtes écouter ssh que sur une interface donnée, juste au cas où vous
en avez plus d'une (et ne voulez pas que ssh y soit disponible) ou si vous ajoutez,
dans le futur, une nouvelle carte réseau (et ne voulez pas de connexions ssh dessus).


<item><tt>PermitRootLogin No</tt>

<p>Essayez autant que possible de ne pas autoriser de connexion en tant que root.
Si quelqu'un veut devenir root via ssh, deux logins sont maintenant nécessaires et
le mot de passe root ne peut être attaqué par la force brute via SSH.

<!--force brute =>trouver une autre traduction. Moulinette est aussi employé dans le milieu en reference
a l'action repetitive. jpg  -->


<item><tt>Listen 666</tt>

<p>Change le port d'écoute, ainsi l'intrus ne peut être complètement sûr de 
l'exécution d'un démon sshd (soyez prévenus, c'est de la sécurité par l'obscurité). 
<!-- AA security through obscurity => je te propose c'est un manque de clarté au niveau sécurité--> <!-- AA Non, je crois pas "Security through obscurity" est une notion de sécurité 
exprimant la croyance (fausse) qu'en cachant des informations sur un système on
le rend sûr... -->
<!-- je tranche <Op. jpg -->


<item><tt>PermitEmptyPasswords no</tt>
<p>Les mots de passe vides sont un affront au système de sécurité.

<item><tt>AllowUsers alex ref</tt>
<p>Autorise seulement certains utilisateurs à avoir accès via ssh à cette
machine. <tt>user@host</tt> peut également être utilisé pour n'autoriser l'accès
qu'à un utilisateur donné depuis un hôte donné.

<item><tt>AllowGroups wheel admin</tt>
<p>Autorise seulement certains membres de groupes à avoir accès via ssh à cette
machine. AllowGroups et AllowUsers ont des directives équivalentes pour interdire
l'accès à la machine. Sans surprise elles s'appellent
«&nbsp;DenyUsers&nbsp;» et «&nbsp;DenyGroups&nbsp;».

<item><tt>PasswordAuthentication yes</tt>

<p>Il vous appartient complètement de décider ce que vous voulez faire.
Il est plus sûr d'autoriser l'accès à la machine uniquement aux utilisateurs
avec des clés ssh placées dans le fichier <file>~/.ssh/authorized_keys</file>. 
Si c'est ce que vous voulez, positionnez cette option à "no".
<!-- FIXME: Qu'est ce que ça veut dire? Est-ce "plus sûr" de positionner à "no"
 (era) --> <!-- jfs, à mon humble avis oui car on place la clé de l'hôte se
 connectant sur votre serveur et l'authentification est faite avec cette clé -->

<item>Désactiver toute forme d'autorisation dont vous n'avez pas réellement
besoin&nbsp; si vous n'utilisez pas, par exemple, <tt>RhostsRSAAuthentication</tt>,
<tt>HostbasedAuthentication</tt>, <tt>KerberosAuthentication</tt> ou
<tt>RhostsAuthentication</tt>, vous devriez les désactiver même s'ils le sont
déjà par défaut (voir la page de manuel <manref name="sshd_config" section="5">).

<item><tt>Protocole 2</tt>
<p>Désactiver le protocole version 1, car il a des défauts de conception qui
facilite le crack de mots de passe. Pour plus d'informations, lisez
<url id="http://paris.cs.berkeley.edu/~dawnson/papers/ssh-timing.pdf"
name="un article concernant les problèmes du protocole ssh"> ou le
<url id="http://xforce.iss.net/static/6449.php" name="bulletin d'alerte Xforce">.

<item><tt>Bannière /etc/some_file</tt>
<p>Ajouter une bannière (ellev sera récupérée du fichier) pour les utilisateurs
se connectant au serveur ssh, dans certains pays, envoyer un avertissement avant
l'accès à un système donné avertissant des accès non autorisés ou du suivi des
utilisateurs devrait être ajouté pour avoir une protection légale. <!-- Phrase à -->
<!-- reformuler-->

</list>

<p>Vous pouvez également restreindre l'accès au serveur ssh en utilisant
<tt>pam_listfile</tt> ou <tt>pam_wheel</tt> dans le fichier de contrôle PAM de
ssh pour restreindre les connexions ssh. Par exemple, vous pourriez empêcher
tous les utilisateurs qui ne sont pas dans <file>/etc/loginusers</file> en
ajoutant cette ligne à <file>/etc/pam.d/ssh</file>&nbsp;:

<example>
auth       required     pam_listfile.so sense=allow onerr=fail item=user file=/etc/loginusers
</example>

<p>Pour finir, soyez conscient que ces directives proviennent d'un fichier de
configuration OpenSSH. Actuellement, il y a 3 démons ssh couramment utilisés,
ssh1, ssh2, et OpenSSH par les gens d'OpenBSD. Ssh1 était le premier démon
ssh disponible et est toujours le plus couramment utilisé (il y a des rumeurs
qu'il y aurait même un portage pour Windows). Ssh2 a beaucoup d'avantages par rapport
à ssh1 excepté qu'il est diffusé sous une licence non libre.
<!-- AA closed-source => non-libre ? => oui il me semble ou bien code fermé, à voir sur la liste -->
OpenSSH est un démon ssh complètement libre, qui supporte à la fois ssh1 et 
ssh2. OpenSSH est la version installée sur Debian quand le paquetage <package>ssh</package> 
est choisi.

<p>
Vous pouvez obtenir plus d'informations concernant la mise en place de SSH 
avec le support PAM dans les <url
id="http://lists.debian.org/debian-security/2001/debian-security-200111/msg00395.html"
name="archives de la liste de discussion sécurité">.

<sect1 id="ssh-chroot">Chrooter ssh
<p>

<p>OpenSSH ne fournit pas de moyen à l'heure actuelle pour chrooter
automatiquement les utilisateurs lors de la connexion (la version commerciale
fournit cette fonctionnalité). Cependant, il existe un projet ayant pour but de
fournir cette fonctionnalité pour OpenSSH également, voir <url
id="http://chrootssh.sourceforge.net">, il n'est cependant pas empaqueté pour
Debian actuellement. Vous pourriez cependant utiliser le module
<file>pam_chroot</file> module comme décrit dans <ref id="user-restrict">.

<p>Dans <ref id="chroot-ssh-env">, vous pouvez trouver plusieurs options pour
créer des environnements chroot pour SSH.

<sect1>Clients ssh

<p>Si vous utilisez un client SSH contre (?) le serveur SSH, vous devez vous
assurer qu'ils supportent les mêmes protocoles qui sont en application sur le
serveur. Par exemple, si vous utilisez le paquet <package>mindterm</package>, il
ne supporte que le protocole version 1. Cependant, le serveur sshd est, par
défaut, configuré pour n'accepter que la version 2 (pour des raisons de
sécurité).

<sect1>Interdire les transferts de fichiers

<p>Si vous ne voulez <em>pas</em> que les utilisateurs transfèrent des fichiers
depuis et vers le serveur ssh, vous devez restreindre l'accès au
<prgn>sftp-server</prgn> <em>et</em> l'accès <prgn>scp</prgn>. Vous pouvez
restreindre <prgn>sftp-server</prgn> en configurant le bon <tt>Subsystem</tt>
dans <file>/etc/ssh/sshd_config</file>. Cependant, pour restreindre l'accès
<prgn>scp</prgn>, vous devez&nbsp;:

<list>

<item>soit interdire les connexions d'utilisateurs au serveur ssh (comme décrit
ci-dessus par le fichier de configuration ou par la configuration PAM),

<item>soit ne pas donner de shells valides aux utilisateurs qui ne sont pas
autorisés à faire des transferts sécurités. Cependant, les shells fournis
devraient être des programmes qui justifieraient la connexion au serveur ssh par
eux-même, comme des programmes de menus
<!-- FIXME: What do you mean with "was useful at all" ? -->
(ala BBS). Sinon, l'option précédente est préférée.

</list>

<sect>Sécurisation de Squid

<p>
Squid est l'un des plus populaires serveurs mandataire («&nbsp;proxy&nbsp;») et
cache et certains problèmes de sécurité sont à prendre en compte.
Le fichier de configuration par défaut de Squid refuse toutes les requêtes 
d'utilisateurs. Cependant, le paquet Debian permet l'accès depuis
«&nbsp;localhost&nbsp;», il est simplement nécessaire de configurer votre
navigateur correctement.
Vous devriez configurer Squid pour permettre l'accès aux utilisateurs, hôtes ou réseaux 
de confiance en définissant une Liste de Contrôle d'Accès (ACL) dans <file>/etc/squid.conf</file>.
Voir le 
<url name="Guide d'utilisateur de Squid"
id="http://squid-docs.sourceforge.net/latest/html/book1.htm"> pour plus d'informations 
à propos des règles ACL. Veuillez noter que Debian fournit une configuration
minimale pour Squi qui empêche tout, à l'exception de la connexion de
<em>localhost</em> au serveur mandataire (qui fonctionnera sur le port par défaut
3128). Vous devrez personnaliser votre fichier<file>/etc/squid.conf</file> comme
nécessaire. La configuration recommandée minimum (fournie avec le paquet) est
indiquée ci-dessous&nbsp;:

<example>
acl all src 0.0.0.0/0.0.0.0
acl manager proto cache_object
acl localhost src 127.0.0.1/255.255.255.255
acl SSL_ports port 443 563
acl Safe_ports port 80          # http
acl Safe_ports port 21          # ftp
acl Safe_ports port 443 563     # https, snews
acl Safe_ports port 70          # gopher
acl Safe_ports port 210         # wais
acl Safe_ports port 1025-65535  # unregistered ports
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 777         # multiling http
acl Safe_ports port 901         # SWAT
acl purge method PURGE
acl CONNECT method CONNECT
(...)
# Ne permet l'accès à cachemgr que depuis localhost
http_access allow manager localhost
http_access deny manager
# Ne permet des requêtes de purge que depuis localhost
http_access allow purge localhost
http_access deny purge
# Interdit les requêtes sur des ports inconnus
http_access deny !Safe_ports
# Interdit CONNECT sur tout autre port que SSL
http_access deny CONNECT !SSL_ports
#
# INSÉRER VOTRE (VOS) PROPRE(S) RÊGLES ICI POUR PERMETTRE L'ACCÈS DEPUIS VOS CLIENTS
#
http_access allow localhost
# En enfin, interdit tout autre accès à ce mandataire
http_access deny all
# Par défaut :
# icp_access deny all
#
# Permet les requêtes ICP depuis tout le monde
icp_access allow all
</example>

<p>Vous pouvez également configurer Squid selon vos ressources système, en
incluant la mémoire cache (option <tt>cache_mem</tt>), l'emplacement de vos
fichiers du cache et la quantité d'espace qu'ils prendront sur disque (option
<tt>cache_dir</tt>).

<p>Notez que, s'il n'est pas configuré correctement, n'importe qui peut relayer un message
par l'intermédiaire de Squid, puisque les protocoles HTTP et SMTP sont conçus de façon similaire.
Le fichier de configuration par défaut interdit l'accès au port 25. Si vous voulez
autoriser les connexions sur ce port, il vous faudra l'ajouter dans la liste des Safe_ports
(ports autorisés). Cependant, ce n'est <em>PAS</em> recommandé.

<p>Installer et configurer le serveur mandataire/cache correctement représente seulement une
partie de la sécurisation de votre site. Une autre tâche nécessaire consiste dans l'analyse 
des logs de Squid pour assurer que tout fonctionne comme il se doit.
Il y a quelques paquets dans Debian GNU/Linux qui peuvent
aider l'administrateur dans cette tâche.
Les paquets suivant sont disponible dans Woody (Debian 3.0):

<list>
<item><package>calamaris</package> - Analyseur de log pour fichiers de Squid ou Oops proxy.
<item><package>modlogan</package> - Un analyseur modulaire de fichier logs.
<!-- Celui-ci n'est plus disponible ?
<item><package>sarg</package> - Squid Analysis Report Generator.
-->
<item><package>squidtaild</package> - Programme de surveillance des logs Squid.
</list>

<p>Quand vous utilisez Squi en Accelerator Mode, il se comporte également comme
un serveur web. Activer cette option augmente la complexité du code, le rendant
moins fiable. Par défaut, Squid n'est pas configuré pour se comporter comme un
serveur web, donc vous n'avez pas besoin de vous tracasser à cause de cela.
Notez que si vous désirez utiliser cette fonctionnalité, assurez-vous qu'elle
est vraiment nécessaire. Pour trouver plus d'informations à propos de
l'Accelerator Mode de Squid, consultez le <url name="Guide de l'utilisateur de
Squid Chapitre 9" id="http://squid-docs.sourceforge.net/latest/html/c2416.html">.


<sect id="ftp-secure">Sécurisation FTP

<p>
Si vous avez réellement besoin d'utiliser FTP (sans l'emballer avec sslwrap ou à
l'intérieur d'un tunnel SSL ou SSH), vous devriez «&nbsp;chrooter&nbsp;» ftp
dans le répertoire personnel de l'utilisateur, ainsi l'utilisateur ne pourra rien
voir d'autre que ses propres répertoires. Autrement, il pourrait parcourir votre
système comme s'il avait un shell. Vous pouvez ajouter la ligne suivante dans
votre <file>proftpd.conf</file> dans la section global pour activer ce
chroot&nbsp;:

<example>
DefaultRoot ~
</example>

<p>
Redémarrez proftpd par <tt>/etc/init.d/proftpd restart</tt> et vérifiez
si vous pouvez sortir de votre propre répertoire personnel.

<P>
Pour prévenir Proftpd d'attaques Dos avec l'utilisation de  ../../.., 
ajoutez la ligne suivante dans <file>/etc/proftpd.conf</file>&nbsp;:

<tt>DenyFilter \*.*/</tt>

<p>
Rappelez-vous toujours que FTP envoie les identifiants et les mots de 
passe d'authentification en clair (ceci n'est pas un problème si vous 
fournissez un service public anonyme) et il existe de meilleures 
alternatives dans Debian pour cela. Par exemple, <prgn>sftp</prgn> (fourni par
<package>ssh</package>). Il existe également d'autres
implémentatations de SSH pour d'autres systèmes d'exploitation&nbsp;: <url 
id="http://www.chiark.greenend.org.uk/~sgtatham/putty/" name="putty">
et <url id="http://www.cygwin.com" name="cygwin"> par exemple.

<!-- contribué par Jesus Climent --> 
<p>Cependant, si vous maintenez encre le serveur FTP tout en donnant un accès
par SSH aux utilisateurs, vous pouvez rencontrer un problème courant. Les
utilisateurs accédant aux serveurs FTP en anonyme à l'intérieur des systèmes
sécurisés par SSH peuvent essayer de se connecter dans le <em>serveur FTP</em>.
Bien que l'accès sera refusé, le mot de passe sera tout de même envoyé en clair
sur le réseau. Pour éviter cela, le développeur de ProFTPd, TJ Saunders, a créé
un correctif pour empêcher des utilisateurs de fournir au serveur FTP anonyme
des comptes SSH valides. Plus d'informations et le correctif sont disponibles
à&nbsp;: <url id="http://www.castaglia.org/proftpd/#Patches" name="Correctifs
ProFTPD">. Ce correctif a été également indiqué pour Debian, voir le
<url id="http://bugs.debian.org/145669" name="bogue 145669">.

<sect>Sécurisation de l'accès à X Window System

<p>
Actuellement, les terminaux X sont de plus en plus utilisés dans les 
entreprises où un seul serveur est nécessaire pour un grand nombre de stations de 
travail. Ceci peut être dangereux car vous devez autoriser le serveur 
de fichiers à se connecter aux clients (le serveur X d'un point de vue 
X. X intervertit la notion de client et de serveur). Si vous 
suivez les (très mauvaises) suggestions de nombreuses documentations, vous 
tapez <tt>xhost +</tt> sur votre machine. Ceci autorise tout client X 
à se connecter à votre système. Pour une sécurité légèrement meilleure, 
vous pouvez utiliser la commande <tt>xhost +hostname</tt> à la place, ce qui permet  
d'autoriser uniquement les accès depuis des hôtes spécifiques.

<p>
Une solution encore meilleure serait d'utiliser un tunnel ssh pour X et 
d'encrypter <!-- FIXME: ajouter "et compresser" -->  toute la session. Ceci est
fait automatiquement lors de l'utilisation de ssh pour se connecter sur une
autre machine.

<!-- Ceci doit être activé dans /etc/ssh/ssh_config en paramétrant -->
<!-- <tt>X11Forwarding</tt> à <tt>yes</tt>. -->

Pour que cela fonctionne, vous devez configurer à la fois le client ssh et le
serveur ssh. Sur le client ssh, <tt>ForwardX11</tt> doit être positionné à
<tt>yes</tt> dans <file>/etc/ssh/ssh_config</file>. Sur le serveur ssh,
<tt>X11Forwarding</tt> doit être positionné à <tt>yes</tt> dans
<file>/etc/ssh/sshd_config</file> et le paquet
<package>xbase-clients</package> doit être installé car le serveur ssh utilise
<file>/usr/X11R6/bin/xauth</file> pour mettre en place le pseudo-affichage X.
<!-- découvert cela en mettant en place 2 machines installées minimales -->

À l'heure de SSH, vous devriez abandonner complètement 
le contrôle d'accès basé sur xhost.
<!-- FIXME: vérifier. Le texte disait "doit être désactivé" [sic] -->

<p>
Pour une sécurité accrue, si vous n'avez pas besoin d'accéder à X depuis 
d'autres machines, désactivez-le du port 6000 en tapant simplement&nbsp;:

<example>$ startx -- -nolisten tcp</example>

<p>
Ceci est le comportement par défaut dans Xfree 4.1.0 (le serveur X fourni dans 
la Debian 3.0). Si vous utilisez Xfree 3.3.6 (vous avez donc la Debian 2.2 
d'installée), vous pouvez éditer <file>/etc/X11/xinit/xserverrcc</file>
afin d'avoir quelque chose ressemblant à ceci&nbsp;:

<example>
#!/bin/sh
exec /usr/bin/X11/X -dpi 100 -nolisten tcp
</example>

<p>Si vous utilisez XDM, mettez <file>/etc/X11/xdm/Xservers</file> à&nbsp;:
<tt>:0 local /usr/bin/X11/X vt7 -dpi 100 -nolisten tcp</tt>. Si vous utilisez
Gdm, assurez-vous que l'option <tt>-nolisten tcp</tt> est positionnée dans
<file>/etc/gdm/gdm.conf</file> (qui est par défaut dans Debian) ainsi&nbsp;:

<example>
[server-Standard]
name=Standard Server
command=/usr/bin/X11/X -nolisten tcp
</example>

<p>Vous pouvez également positionner l'expiration de délai système par défaut pour
les blocages <prgn>xscreensaver</prgn>. Même si l'utilisateur peut annuler cela,
vous devriez éditer le fichier de configuration
<file>/etc/X11/app-defaults/XScreenSaver</file> et changer la ligne de
blocage&nbsp;:
<example>
*lock:                  False
</example>
<p>(qui est par défaut dans Debian) à&nbsp;:
<example>
*lock:                  True
</example>

<p>FIXME: ajouter des informations sur comment désactiver les économiseurs
d'écran qui affichent l'écran de l'utilisateur (qui peuvent avoir des
informations sensibles).

<p>Plus d'infos sur la sécurité X Window dans <url name="XWindow-User-HOWTO"
id="http://www.linuxdoc.org/HOWTO/XWindow-User-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/XWindow-User-HOWTO.txt.gz</file>).

<p>FIXME: Ajouter des informations d'une discussion de debian-security pour
avoir les modifications des fichiers de configuration de XFree 3.3.6 pour faire
cela.

<sect1>Vérifiez votre gestionnaire d'affichage
<p>
Si vous voulez seulement avoir un gestionnaire d'affichage installé pour une
utilisation locale (en ayant un joli login graphique, c'est tout), assurez-vous <!-- "that is" ? -->
que le XDMCP (X Display Manager Control Protocol) est désactivé. Dans XDM, vous
pouvez faire cela avec cette ligne dans <tt>/etc/X11/xdm/xdm-config</tt>&nbsp;:


<example>
DisplayManager.requestPort:     0
</example>

<p>Normalement, tous les gestionnaires d'affichages sont configurés par défaut
pour ne pas démarrer les services XDMCP dans la Debian.

<sect>Sécurisation de l'accès à l'impression (Le problème lpd et lprng)


<p>Imaginez, vous arrivez au travail et l'imprimante crache une quantité 
infinie de papier car quelqu'un est en train de provoquer un déni de service 
sur votre démon d'impression. Méchant, n'est ce pas?

<!-- Info based on Dale Southard's post to debian-security april 11th 2002-->
<p>Dans toute architecture d'impression Unix, il y a un moyen de fournir les
données du client vers le serveur d'impression de l'hôte. Dans les traditionnels
<prgn>lpr</prgn> et <prgn>lp</prgn>, la commande du client copie ou crée un lien
symbolique pour les données dans le répertoire de spool (c'est pour cela que ces
programmes sont habitullement SUID ou SGID).

<p>Pour éviter tout problème, vous devriez garder vos serveurs
d'impression particulièrement sûrs. Cela veut dire qu'il est nécessaire de 
configurer votre service d'impression pour qu'il autorise seulement les 
connexions d'un ensemble de serveurs de confiance. Pour ce faire, ajoutez 
les serveurs auxquels vous voulez autoriser l'impression à votre 
<file>/etc/hosts.lpd</file>. 

<p>
Cependant, même si vous faites cela, le démon <prgn>lpr</prgn> accepte les connexions entrantes
sur le port 515 de n'importe quelle interface. Vous devriez réfléchir au filtrage
par un pare-feu des connexions provenant de réseaux/hôtes qui ne sont pas
autorisés à imprimer (le démon <prgn>lpr</prgn> ne peut être limité pour écouter seulement
sur une adresse IP donnée).

<!-- FIXME
<p>Bien sûr, vous pourriez aussi prendre les sources de lpr/lprng et les changer
de façon à ce que la fonction connect se fasse uniquement sur "127.0.0.1".
 apt-get source lpr et patcher l'appel bind (finet)
 -->
<p><prgn>Lprng</prgn> doit être préféré à <prgn>lpr</prgn> car il peut être configuré pour faire du contrôle
d'accès basé sur l'adresse IP. Vous pouvez spécifier l'interface sur laquelle se 
lier (cependant d'une manière un peu bizarre)

<!-- FIXME: questionner Craig Small au sujet de son post dans debian-private du 
19 octobre 2001 -->

<p>Si vous utilisez une imprimante sur votre système, mais seulement localement,
vous ne voulez pas partager ce service sur le réseau. Vous pouvez considérer
l'utilisation d'autres systèmes d'impression, comme celui fournit par
<package>cups</package> ou <url name="PDQ" id="http://pdq.sourceforge.net/">
qui est basé sur les permissions utilisateurs du périphérique <file>/dev/lp0</file>.
 
<p>Dans <package>cups</package>, les données d'impression sont transférées vers
le serveur via le protocole HTTP. Ceci veut dire que le programme client n'a pas
besoin de privilèges spéciaux, mais cela nécessite que le serveur écoute sur un
port quelque part.

<p>Cependant, si vous voulez utiliser <prgn>cups</prgn>, mais seulement
localement, vous pouvez le configurer pour se lier à l'interface de
bouclage (loopback) en modifiant <file>/etc/cups/cupsd.conf</file>&nbsp;:
<!-- voir si une traduction officielle est disponible pour loopback -->

<example>
Listen 127.0.0.1:631
</example>

<P>Il y a plusieurs autres options de sécurité comme autoriser ou interdire des
réseaux et hôtes dans le fichier de configuration. Cependant, si vous n'en avez
pas besoin, il peut être préférable de simplement limiter le port d'écoute.
<prgn>Cups</prgn> fournit également la documentation par le port HTTP, si vous
ne voulez pas dévoiler des informations potentiellement utiles aux attaquants
extérieurs (et que le port est ouvert), ajoutez également&nbsp;:

<example>
&lt;Location /&gt;
  Order Deny,Allow
   Deny From All
    Allow From 127.0.0.1
&lt;/Locationi&gt;
</example>

<p>Ce fichier de configuration peut être modifié pour ajouter plus de
fonctionnalités y compris des certificats SSL/TLS et du cryptage. Les manuels
sont disponibles sur http://localhost:631/ ou à <url id="cups.org">.

<P>FIXME: Ajouter plus de contenu (l'article sur <url name="Amateur Fortress
Building" id="http://www.rootprompt.org"> fournit certains points de vues très 
intéressants).

<p>FIXME: Vérifier la disponibilité de PDG dans la Debian, et s'il l'est,
le suggérer comme le système d'impression préféré.

<p>FIXME: Vérifier si Farmer/Wietse a une alternative pour le démon d'imprimante
et si il est disponible dans la Debian.

<sect>Sécurisation du démon mail

<p>
Si votre serveur n'est pas un système d'envoi de mail, vous n'avez pas réellement
besoin d'un démon mail écoutant les connexions entrantes, mais vous pourriez
vouloir que votre courrier local soit distribué pour, par exemple, recevoir le courrier
pour l'utilisateur root en provenance d'un des systèmes d'alerte en place.

<p>
Si vous avez <prgn>exim</prgn>, vous n'avez pas besoin que le démon tourne pour
le faire car la tâche standard <prgn>cron</prgn> vide la file des messages. Voir
<ref id="disableserv"> sur comment faire cela.

<sect1>Configurer un Nullmailer

<p>Vous pouvez vouloir avoir un démon local de courrier pour qu'il puisse
relayer les courriers envoyés localement à un autre système. Ceci est courant
quand vous avez à administrer un certain nombre de systèmes et que vous ne
voulez pas vous connecter à chacun d'entre eux pour lire le courrier envoyé
localement. Tout comme logguer tout sur chaque système individuel peut être
centralisé en utilisant un serveur syslog central, les courriers peuvent être
envoyés à un serveur de courriers central.

<p>Un tel système <em>relai-seulement</em> devrait être configuré correctement
pour cela. Le démon pourrait également être configuré pour n'écouter que sur
l'adresse de bouclage.

<p>Pour faire cela dans un système Debian, vous aurez à retirer le démon smtp
d'inetd&nbsp;:
 <example>
$ update-inetd --disable smtp
 </example>
<p>et configurer le démon de courrier pour écouter seulement sur l'interface de
bouclage. Dans <prgn>exim</prgn> (le MTA par défaut) vous pouvez faire ça en éditant le fichier
<file>/etc/exim.conf</file> et en ajoutant la ligne suivante&nbsp;:

<example>
local_interfaces = "127.0.0.1"
</example>

<p>Redémarrez les deux démons (inetd et exim) et vous aurez exim
qui écoutera sur la socket 127.0.0.1:25 uniquement. Faites attention, et avant tout 
désactivez inetd, sinon exim ne démarrera pas étant donné que le démon inetd 
est déjà en attente de connexions entrantes.

<p>Pour <prgn>postfix</prgn> éditez <file>/etc/postfix/main.conf</file>&nbsp;:

<example>
inet_interfaces = localhost
</example>


<p>
Si vous voulez seulement le courrier local, cette approche est meilleure que
l'encapsulation du démon mail par un tcp wrapper ou l'ajout de règles
pare-feu pour limiter les personnes qui y accèdent. Cependant, si vous
n'avez pas besoin d'écouter sur d'autres interfaces, vous pourriez envisager
de le lancer à partir d'inetd et ajouter un tcp wrapper pour que les
connexions entrantes soit vérifiées par rapport à
<file>/etc/hosts.allow</file> et <file>/etc/hosts.deny</file>. De plus,
vous serez au courant quand un accès non autorisé est tenté contre votre
démon de courrier, si vous mettez en place correctement le logging pour 
n'importe laquelle des méthodes décrites plus haut.

<p>En tout cas, pour rejeter les tentatives de relai de courrier au niveau SMTP,
vous pouvez changer <file>/etc/exim/exim.conf</file> pour inclure&nbsp;:

<example>
receiver_verify = true
</example>

<p>Même si votre serveur de courrier ne relaiera pas le message, ce genre de
configuration est nécessaire au testeur de relai à <url
id="http://www.abuse.net/relay.html"> pour déterminer que votre serveur ne peut
<em>pas</em> faire de relai.

<p>Si vous voulez une configuration relai-seulement, cependant, vous pouvez
vouloir changer le démon de courrier pour des programmes qui ne peuvent être
configurés <em>que</em> pour faire suivre le courrier à un serveur de courrier
distant. Debian fournit actuellement les paquets <package>ssmtp</package> et
<package>nullmailer</package> dans ce but. En tout cas, vous pouvez évaluer pour
vous-même l'un de ces deux agents de transport de courrier
<footnote>
Pour récupérer la liste des démons de courrier disponibles dans Debian, essayez&nbsp;:
<example>
$ apt-cache search mail-transport-agent
</example>
<p>
La liste n'inclura pas <prgn>qmail</prgn>, qui est distribué seulement comme
code source dans le paquet <package>qmail-src</package>.
</footnote>
fournis par Debian et voir lequel correspond le mieux aux buts du système.

<sect1>Fournir un accès sécurisé aux boîtes à lettres

<p>Si vous désirez donner un accès à distance aux boîtes à lettres, il y a un
certain nombre de démons POP3 et IMAP disponibles
<footnote>Une liste des serveurs/démons supportant ces protocoles dans Debian
peut être récupérée avec&nbsp;:
<example>
$ apt-cache search pop3-server
$ apt-cache search imap-server
</example>
</footnote>
. Cependant, si vous fournissez un accès IMAP, notez qu'il s'agit d'un protocole
générique d'accès aux fichiers, il peut devenir l'équivalent d'un accès shell
car les utilisateurs peuvent être capable de récupérer tout fichier par
celui-ci.

<p>Essayez, par exemple, de configurer comme chemin de votre boîte de
réception <tt>{server.com}/etc/passwd</tt>, si cela réussit, votre démon IMAP
n'est pas configuré correctement pour empêcher ce genre d'accès.

<p>Parmi les serveurs IMAP dans Debian, le serveur <prgn>cyrus</prgn> (dans le
paquet <package>cyrus-imapd</package>) contourne cela en ayant tous les accès
sur une base de données dans une partie restreinte du système de fichiers. Également,
<prgn>uw-imapd</prgn> (installez soit <package>uw-imapd</package>
ou mieux, si votre client IMAP le supporte, <package>uw-imapd-ssl</package>)
peut être configuré pour «&nbsp;chrooter&nbsp;» les répertoires de courrier des
utilisateurs, mais ceci n'est pas activé par défaut. La documentation fournie
donne plus d'informations sur la façon de le configurer.

<p>Vous pouvez également vouloir faire fonctionner un serveur IMAP qui n'ait pas
besoin que des utilisateurs valides soient créés sur le système local (ce qui
donnerait également un accès shell), les paquets <package>courier-imap</package>
(pour IMAP), <package>courier-pop</package> <package>teapop</package> (pour POP3)
et <package>cyrus-imapd</package> (pour POP3 et IMAP) fournissent des serveurs
avec des méthodes d'authentification en plus des comptes utilisateur locaux.
<prgn>cyrus</prgn> peut utiliser toute méthode d'authentification qui peut être
configurée par PAM tandis que <prgn>teapop</prgn> peut utiliser des bases de
données (comme <package>postgresql</package> et <package>mysql</package>) pour
l'authentification des utilisateurs.


<p>FIXME: Vérifier: <package>uw-imapd</package> peut être configuré avec
l'authentification utilisateur grâce à PAM également...

<sect1>Réception du courrier d'une manière sûre.
<p>
La lecture/réception du courrier est le plus courant des protocoles en
texte clair. Si vous utilisez soit POP3 ou IMAP pour récupérer votre
courrier, vous envoyez votre mot de passe en clair à travers le réseau,
et donc presque tout le monde peut lire votre courrier à partir de 
maintenant. À la place, utilisez SSL (Secure Sockets Layer) pour recevoir
votre courrier. L'autre alternative est ssh, si vous avez un compte shell
sur la machine qui sert de serveur POP ou IMAP. Voici un <file>fetchmailrc</file> simple
décrivant cela&nbsp;:

<example>
poll my-imap-mailserver.org via "localhost"
  with proto IMAP port 1236
      user "ref" there with password "hackme" is alex here warnings 3600
    folders
      .Mail/debian
    preconnect 'ssh -f -P -C -L 1236:my-imap-mailserver.org:143 -l ref
     my-imap-mailserver.org sleep 15 &lt;/dev/null &gt; /dev/null'
</example>

Le preconnect est la ligne importante. Il lance une session ssh et
crée le tunnel nécessaire, qui relaie automatiquement les connections
au port local 1236 vers le port IMAP du serveur de mail, mais cryptées. 
Une autre possibilité serait d'utiliser fetchmail avec la fonctionnalité ssl.

<p>si vous désirez fournir des services de courrier comme POP et IMAP cryptés,
<tt>apt-get install stunnel</tt> et démarrez vos démons ainsi&nbsp;:

<example>
stunnel -p /etc/ssl/certs/stunnel.pem -d pop3s -l /usr/sbin/popd
</example>

<p>Cette commande encapsule le démon fourni (-l) au port (-d) et utilise le
certificat ssl spécifié (-p).


<sect id="sec-bind">Sécurisation de BIND

<p>Il y a différents problèmes qui peuvent être traités pour sécuriser le démon
de serveur de domaine; problèmes similaires à ceux étudiés quand on sécurise
n'importe quel service donné&nbsp;:

<list>
<item>configurer le démon lui-même pour qu'il ne puisse pas être mal utilisé
de l'extérieur (voir <ref id="configure-bind">). Cela inclut limiter les
requêtes possibles pour les clients&nbsp;: transferts de zones et requêtes récursives.

<item>limiter l'accès du démon au serveur lui-même, ainsi s'il est utilisé
pour s'introduire, les dommages au système sont limités. Cela inclut
d'exécuter le démon en tant qu'utilisateur non privilégié (voir <ref
id="user-bind">) et le chrooter (voir <ref id="chroot-bind">).

</list>

<sect1 id="configure-bind">Configuration de Bind pour éviter de mauvaises utilisations

<p>Vous devriez restreindre certaines informations données par le serveur
DNS aux clients extérieurs pour qu'il ne puisse pas être utilisé pour obtenir
des informations de valeur sur votre organisation que vous ne voudriez pas
divulguer. Cela inclut l'ajout des options suivantes&nbsp;:
<em>allow-transfer</em>, <em>allow-query</em>,
<em>allow-recursive</em> et <em>version</em>. Vous pouvez soit limiter cela
dans la section globale (pour que cela s'applique à toutes les zones servies) 
ou individuellement par zone. Cette information est documentée dans le paquet
<package>bind-doc</package>, lisez en plus à ce sujet dans
<file>/usr/share/doc/bind/html/index.html</file> une fois que le paquet est
installé.

<p>Imaginez que votre serveur (un serveur avec plusieurs adresses de base) est
connecté à Internet et à votre réseau interne (votre adresse IP interne est
192.168.1.2), vous ne voulez fournir aucun service à Internet et vous voulez
juste autoriser les consultations DNS à partir de vos hôtes internes. Vous
pourriez le restreindre en incluant dans <file>/etc/bind/named.conf</file>:

<example>
options {
	    allow-query { 192.168.1/24; } ;
	    allow-transfer { none; } ; 
	    allow-recursive { 192.168.1/24; } ;
	    listen-on { 192.168.1.2; } ;
	    forward { only; } ;
	    forwarders { A.B.C.D; } ;
};
</example>


<p> L'option <em>listen-on</em> lie uniquement le DNS à l'interface
ayant une adresse interne, mais, même si cette interface
est la même que l'interface qui permet la connexion à l'Internet (par l'utilisation
de NAT, par exemple), les requêtes ne seront acceptées que si celles-ci proviennent
d'hôtes internes. Si le système est constitué de plusieurs interfaces et que 
le <em>listen-on</em> n'est pas présent, seuls les utilisateurs internes pourront
émettre des requêtes, mais, puisque le port restera accessible à des attaquants 
externes, ils pourront essayer de faire tomber (ou tenter une attaque d'exploit de 
débordement de tampon) le serveur DNS. Vous pouvez même le mettre uniquement en
écoute sur l'adresse 127.0.0.1 si vous ne désirez pas offrir le service à quelqu'un 
d'autre qu'à vous même.
</p>

<!-- AA je maîtrise pas le sujet : vérifier traduc chaos class -->
<p>L'enregistrement version.bind dans la classe chaos contient la version
du processus bind actuellement en cours d'exécution. Cette information
est souvent utilisée par des scanners automatisés et des individus malveillants
qui souhaitent déterminer si un bind est vulnérable à une attaque spécifique.
En fournissant des informations fausses ou pas d'informations du tout, on limite
la probabilité qu'un serveur soit attaqué sur la base de la version qu'il publie.

Pour fournir votre propre version, utilisez la directive <em>version</em> de
la manière suivante&nbsp;:

 <example>
options {
	... diverses options ici ...
 	version "Not available.";
 };
 </example>

<p>Changer l'enregistrement version.bind ne fournit pas actuellement de
protection contre les attaques, mais ceci devrait être considéré comme une
protection utile.

<p>Un fichier de configuration <file>named.conf</file> d'exemple pourrait être
me suivant&nbsp;:

<example>
acl internal {
        127.0.0.1/32;           // localhost
        10.0.0.0/8;             // interne
        aa.bb.cc.dd;            // IP eth0
};

acl friendly {
        ee.ff.gg.hh;            // DNS escalve
        aa.bb.cc.dd;            // IP eth0
        127.0.0.1/32;           // localhost
        10.0.0.0/8;             // interne
};

options {
        directory "/var/cache/bind";
        allow-query { internal; };
        allow-recursion { internal; };
        allow-transfer { none; };
};
// À partir d'ici jusqu'à la zone mysite.bogus
// est dans l'ensemble non modifié des valeurs par défaut Debian
logging {
        category lame-servers { null; };
        category cname { null; };   
};

zone "." {
        type hint;
        file "/etc/bind/db.root";
};

zone "localhost" {
        type master;
        file "/etc/bind/db.local";
};

zone "127.in-addr.arpa" {
        type master;
        file "/etc/bind/db.127";
};

zone "0.in-addr.arpa" {
        type master;
        file "/etc/bind/db.0";
};

zone "255.in-addr.arpa" {
        type master;
        file "/etc/bind/db.255";
};

// Zones ajoutées moi-même
zone "mysite.bogus" {
        type master;
        file "/etc/bind/named.mysite";
        allow-query { any; };
        allow-transfer { friendly; };
};
</example>

<P>Veuillez (s'il vous plait) vérifier le système de suivi des bogues (BTS),
spécifiquement <url name="Bug #94760 (regarding ACLs on zone transfers)"
id="http://bugs.debian.org/94760">. Vous pouvez contribuer si vous le désirez au
rapport de bogue si vous pensez pouvoir ajouter des informations utiles.

<sect1 id="user-bind">Changer l'utilisateur de BIND

<p>Concernant la limitation des privilèges de BIND vous devez être conscient
que si un utilisateur autre que root exécute BIND, alors BIND ne peut pas détecter
de nouvelles interfaces automatiquement, par exemple, quand vous insérez une carte
PCMCIA dans votre portable. Consultez le fichier README.Debian dans votre 
répertoire de documentation named (<file>/usr/share/doc/bind/README.Debian</file>)
pour plus d'information sur ce problème. Il y a eu récemment de nombreux problèmes 
de sécurité  concernant BIND, donc le changement d'utilisateur est utile quand
il est possible, cependant si vous désirez le faire de façon automatique, vous
pouvez essayer le script fourni dans <ref id="bind-chuser">.
<p>
Pour démarrer BIND sous un autre utilisateur, tout d'abord créez un 
utilisateur et un groupe séparé (ce n'est <em>pas</em> une bonne idée
d'utiliser nobody ou nogroup pour chaque service ne devant pas tourner
en tant que root). Dans cette exemple, l'utilisateur et le groupe 
<tt>named</tt> seront utilisés. Vous pouvez faire cela en tapant&nbsp;:

<example>
addgroup named
adduser --system --ingroup named named
</example>

<p>
Maintenant éditez, à l'aide de votre éditeur favori, <tt>/etc/init.d/bind</tt> et changez les lignes commençant par 

<example>
start-stop-daemon --start
</example>

en

<example>
start-stop-daemon --start --quiet --exec /usr/sbin/named -- -g named -u named
</example>

<p>Pour éviter également d'exécuter quoi que ce soit en tant que root, changez
la ligne <tt>reload</tt> en commentant&nbsp;:

<example>
reload)
       /usr/sbin/ndc reload
</example>

<p>Et changez cela en&nbsp;
<example>
reload)
        $0 stop
        sleep 1
        $0 start
</example>

<p>Note&nbsp;: Selon votre version de Debian, vous pouvez devoir changer la
ligne <tt>restart</tt> également. Ceci a été corrigé dans la version
<tt>1:8.3.1-2</tt> du bind de Debian.

<p>
Tout ce dont vous avez besoin est de redémarrer bind à l'aide de 
«&nbsp;/etc/init.d/bind restart&nbsp;» puis rechercher dans votre syslog les deux entrées 
suivantes&nbsp;:
 <p>
<example>
Sep  4 15:11:08 nexus named[13439]: group = named
Sep  4 15:11:08 nexus named[13439]: user = named
</example>

<p>Voilà&nbsp;! Maintenant votre named ne s'exécute <em>plus</em> en tant que
root. Si vous voulez lire plus d'informations sur pourquoi BIND ne fonctionne
pas en tant qu'utilisateur non root sur les systèmes Debian, veuillez vérifier
le système de suivi des bogues concernant Bind, spécifiquement
<url name="Bug #50013: bind should not run as root" 
id="http://bugs.debian.org/50013"> et
<url name="Bug #132582: Default install is potentially insecure"
id="http://bugs.debian.org/132582">, 
<url name="Bug #53550" id="http://bugs.debian.org/53550">, 
<url name="Bug #128120" id="http://bugs.debian.org/52745"> et
<url name="Bug #128120" id="http://bugs.debian.org/128129">. 
Vous pouvez contribuer à ces rapports de bogue si vous le désirez si vous pensez
pouvoir ajouter des informations utiles.


<sect1 id="chroot-bind">Chrooter le serveur de domaine

<p> Pour atteindre une sécurité de BIND maximale, construisez maintenant une
prison chroot (voir <ref id="chroot">) autour de votre démon.
Il y a un moyen facile de faire cela&nbsp;: l'option <tt>-t</tt> (voyez la page de manuel
<manref name="named" section="8"> ou la page 100 de la<url id="http://www.nominum.com/content/documents/bind9arm.pdf"
name="documentation de Bind 9 (PDF)"> ). Cela fera que Bind se chrootera lui-même dans
le répertoire donné sans que vous ayez besoin de configurer une prison chroot et
de vous inquiéter au sujet des librairies dynamiques. Les seuls fichiers qui
doivent être dans cette prison chroot&nbsp;:
<!-- AA Traduction ? j'ai peur du contresens ici -->

<example>
dev/null
etc/bind/       - doit contenir named.conf et toutes les zones du serveur.
sbin/named-xfer - si vous faites du transfert de nom
var/run/named/  - devrait contenir le pid et le cache du serveur de nom (s'il
                  existe), ce répertoire doit être inscriptible par
                  l'utilisateur named
var/log/named   - si vous configurez le log vers un fichier, doit être inscriptible
                  par l'utilisateur named
dev/log         - syslogd devrait écouter ici si named est configuré pour loguer
                  en l'utilisant
</example>


<p>Pour que votre démon Bind fonctionne correctement il a besoin de
permissions dans les fichiers named.
<!-- AA needs permissions IN the named files -->
C'est une tâche facile car les fichiers de configuration sont toujours dans
<tt>/etc/named</tt>. Tenez compte qu'il nécessite seulement un accès en lecture 
seule aux fichiers de zone, à moins qu'il ne soit un serveur de nom secondaire 
ou serveur cache. Si c'est votre cas vous aurez à donner les permissions en 
lecture-écriture aux zones nécessaires (pour que les transferts de zone à partir
du serveur primaire fonctionnent).

<p>De plus, vous pouvez trouver plus d'informations concernant le chrootage de
Bind dans le <url name="Chroot-BIND-HOWTO"
id="http://www.linuxdoc.org/HOWTO/Chroot-BIND-HOWTO.html"> (au sujet de
Bind 9) et <url name="Chroot-BIND8-HOWTO"
id="http://www.linuxdoc.org/HOWTO/Chroot-BIND8-HOWTO.html"> (au sujet de
Bind 8). Ces mêmes documents devraient être disponibles par l'installation de
<package>doc-linux-text</package> (version texte)
ou <package>doc-linux-html</package> (version html). Un autre document utile est
<url id="http://www.psionic.com/papers/dns/dns-linux">.

<p>Si vous configurez une véritable prison chroot (i.e. pas juste l'option
<tt>-t</tt>) pour Bind 8.2.3 dans la Debian (potato), assurez-vous qu'elle 
contient les fichiers suivants&nbsp;:

<example>
dev/log - syslogd devrait écouter ici
dev/null
etc/bind/named.conf 
etc/localtime
etc/group - avec une seule ligne: "named:x:GID:"
etc/ld.so.cache - généré avec ldconfig   
lib/ld-2.1.3.so
lib/libc-2.1.3.so
lib/ld-linux.so.2 - lié symboliquement à ld-2.1.3.so  
lib/libc.so.6 - lié symboliquement à libc-2.1.3.so
sbin/ldconfig - pourra être effacé après la configuration du chroot
sbin/named-xfer - si vous faites des transferts de nom
var/run/
</example>

<p>Et modifiez également <prgn>syslogd</prgn> écoutant dans $CHROOT/dev/log pour
que le serveur de nom puisse écrire des entrées syslog dans le log du système local.

<p>Si vous voulez éviter des problèmes avec les bibliothèques dynamiques, vous
pouvez compiler bind statiquement. Vous pouvez utiliser <prgn>apt-get</prgn>
pour cela avec l'option <tt>source</tt>. Il peut même récupérer les paquets dont
vous avez besoin pour le compiler correctement. Il vous faidrait faire quelque
chose comme&nbsp;:

<!-- FIXME: Does bind use autoconf? -->
<example>
$ apt-get --download-only source bind build-dep bind
$ cd bind-8.2.5-2
(éditer le Makefile.in pour que CFLAGS inclut l'option '-static' avant
la définition @CFLAGS@ substituée par)
$ dpkg-buildpackage -rfakeroot
$ cd ..
$ dpkg  -i bind-8.2.5-2*deb
</example>

<p>Après l'installation, vous devrez déplacer des fichiers dans la prison chroot
<footnote>sauf si vous utilisez l'option <tt>instdir</tt> lors de l'appel à
<prgn>dpkg</prgn> mais alors la prison chroot peut être un petit peu plus
complexe</footnote>
vous pouvez conserver les scrips <tt>init.d</tt> dans <file>/etc/init.d</file>
pour que le système lance automatiquement le serveur de domaine, mais éditez les
pour ajouter <tt>--chroot /location_of_chroot</tt> dans les appels à
<prgn>start-stop-daemon</prgn> dans ces scripts.

<p>Pour plus d'informations sur la mise en place de chroots, consultez <ref id="chroot">.

<p>FIXME, inclure les informations provenant de
<url id="http://people.debian.org/~pzn/howto/chroot-bind.sh.txt">,
<url id="http://people.pdxlinux.org/~karlheg/"> (Bind9 sur Debian),
<url id="http://www.cryptio.net/~ferlatte/config/"> (spécifique Debian),
<url id="http://www.psionic.com/papers/whitep01.html">, 
<url id="http://csrc.nist.gov/fasp/FASPDocs/NISTSecuringDNS.htm">
et
<url id="http://www.acmebw.com/papers/securing.pdf">.

<sect>Sécurisation d'Apache

<p>FIXME. Ajout de contenu&nbsp;: modules fournis par l'installation normale
d'Apache (sous /usr/lib/apache/X.X/mod_*) et modules qui peuvent être installés
séparément dans les paquets libapache-mod-XXX.

<p>
Vous pouvez limiter l'accès au serveur Apache si vous voulez uniquement l'utiliser en interne
(dans un but d'essai, pour accéder à l'archive <package>doc-central</package>
, etc.) et si vous ne voulez pas que des intrus y accèdent. Pour réaliser cela, utilisez les directives 
<tt>Listen</tt> ou <tt>BindAddress</tt> dans <file>/etc/apache/http.conf</file>.

<p>En utilisant Listen&nbsp;:
<example>
Listen 127.0.0.1:80
</example>
<p>En utilisant BindAddress&nbsp;:
<example>
BindAddress 127.0.0.1
</example>

<p>
Ensuite, redémarrez apache avec <tt>/etc/init.d/apache restart</tt> et vous observerez 
qu'il écoute uniquement l'interface loopback.

<p>
Dans tous les cas, si vous n'utilisez pas toutes les fonctionnalités 
fournies par Apache, vous pouvez jeter un &oelig;il aux autres serveurs 
web fournis dans Debian tel <package>dhttpd</package>.

<p>La <url name="Documentation Apache"
id="http://httpd.apache.org/docs/misc/security_tips.html"> fournit des 
informations concernant les mesures de sécurité à prendre pour les 
serveurs web Apache (ces mêmes informations sont fournies dans Debian 
par le paquet <package>apache-doc</package>). Il peut également être utile de
lire la
<url name="Documentation de configuration de sécurité Apache"
id="http://www.intersectalliance.com/projects/ApacheConfig/index.html"> 
fournie par <url name="InterSect Alliance" id="http://www.intersectalliance.com/">.

<p>Plus d'informations sur des restrictions supplémentaires d'Apache en mettant
en place une prison chrooté dans <ref id="chroot-apache-env">.

<sect1>Désactiver la publication de contenu sur le web par les utilisateurs

<p>L'installation par défaut d'Apache dans Debian permet aux utilisateurs de
publier du contenu dans leur répertoire <file>$HOME/public_html</file>. Ce
contenu peut être récupéré à distance en utilisant une URL comme&nbsp;:
http://your_apache_server/~user.

<p>Si vous ne voulez pas permettre cela, vous devez changer le fichier de
configuration <file>/etc/apache/http.conf</file> en commentant&nbsp;:

<example>
LoadModule userdir_module /usr/lib/apache/1.3/mod_userdir.so
</example>

Mais, si le module a été lié statiquement (vous pouvez vérifier cela en
exécutant <tt>apache -l</tt>), vous devez ajouter la ligne suivante à la
place&nbsp;:

<example>
Userdir disabled
</example>

<p>Remarque&nbsp;: Le mot-clé <tt>disabled</tt> n'est disponible que dans
Apache&nbsp;1.3 et supérieur. Si vous utilisez d'anciennes versions d'Apache,
vous devez changer le fichier de configuration et ajouter&nbsp;:

<!-- This can be removed since woody provides Apache 1.3 -->

<example>
&lt;Directory /home/*/public_html&gt;
    AllowOverride None
    Order deny,allow
    Deny from all
&lt;/Directory&gt;
</example> 

<p>Un attaquant peut encore faire de l'énumération d'utilisateur, car la réponse
du serveur web sera un <em>403 Permission Denied</em> et non un
<em>404 Not available</em>.

<sect1>Permissions des fichiers de log

<p>Les fichiers de log d'Apache, depuis la version&nbsp;1.3.22-1, ont pour
propriétaire l'utilisateur «&nbsp;root&nbsp;» et pour groupe «&nbsp;adm&nbsp;»
avec les permissions 640, ces permissions sont changées après la rotation. Un
intrus qui peut accéder au système par le serveur web ne pourra pas (sans
escalade de privilège) enlever d'anciennes entrées de fichiers de log.

<!-- FIXME: qu'entends-tu par "ces permissions sont changées après rotation" -->

<sect1>Fichiers web publiés

<p>Les fichiers d'Apache sont situés sous <file>/var/www</file>. Juste après
l'installation, le fichier par défaut fournit quelques informations sur le
système (principalement qu'il s'agit d'un système Debian exécutant Apache). Les
pages web par défaut appartiennent à l'utilisateur root et au groupe root par
défaut alors que le processus Apache s'exécutent avec l'utilisateur www-data et
le groupe www-data. Ceci devrait plus difficile aux attaquants qui compromettent
le système par le site web de défigurer le site. Vous devriez, bien sûr,
remplacer les pages web par défaut (qui peuvent fournir des informations que
vous ne voulez pas donner aux visiteurs) avec les vôtres.


<p>


<sect>Sécurisation de finger

<p>
Si vous désirez utiliser le service finger, demandez-vous si vous en avez réellement 
besoin. Si oui, vous découvrirez que Debian fournit de nombreux démons finger 
(sortie d'un <prgn>apt-cache search fingerd</prgn>): 
<list>
<item>cfingerd - Un démon finger configurable.
<item>efingerd - Un autre démon finger pour Unix capable syntoniser précisément votre sortie.
<item>ffingerd - Un démon finger sécurisé.
<item>fingerd - Un serveur distant pour informations d'utilisateurs.
<item>Démon finger de type BSD avec le support qmail.
</list>
<p><package>ffingerd</package> est le démon finger recommandé si vous comptez l'utiliser 
pour un service public. Dans tous les cas, vous êtes encouragé, lors de la mise 
en place via inetd, xinetd ou tcpserver à&nbsp;: limiter le nombre de processus qui seront 
lancés en même temps, limiter les accès au démon finger depuis un nombre 
donné d'hôtes (en utilisant tcp wrappers) et de l'avoir en écoute uniquement 
sur une interface bien définie.

<!--
# Ceci est assez personnel, AMHA, car cela est dû au fait que
# les privilèges root sont abandonnés au démarrage. Je préfère qu'un attaquant efface
# les fichiers de log d'un service plutôt qu'il efface tous les logs de mon système. De toute façon, ceci
# peut être amélioré en changeant les permissions utilisateur après rotation.
-->

<sect id="chroot">Paranoïa généralisée du suid et du chroot

<p><prgn>chroot</prgn> est l'une des plus puissantes possibilités pour
restreindre un démon, un utilisateur ou un autre service. Imaginez simplement
une prison autour de votre cible, de laquelle votre cible ne peut s'échapper
(normalement, mais il y a encore beaucoup de conditions qui peuvent permettre de
s'échapper d'une telle prison). Si vous ne fait pas confiance à l'utilisateur ou
au servuce, vous pouvez créer un environnement de changement de racine
(«&nbsp;root&nbsp») pour lui. Ceci peut utiliser pas mal d'espace disque car
vous devez copier tous les exécutables nécessaires, ainsi que des bibliothèques,
dans la prison. Même si l'utilisateur fait quelque chose de malfaisant, l'étendu
des dommage est limitée à la prison.

<!-- Considérer de supprimer ceci :
<p>Un bon exempel pour ce cas est, si vous ne vous authentifiez pas avec un fichier
<file>/etc/passwd</file>, mais que vous utilisez LDAP ou MySQL à la place. Votre
démon FTP aura seulement besoin d'un binaire et peut-être quelques
bibliothèques. Un environnement <prgn>chroot</prgn>é serait une excellente amélioration ;
si un nouvel exploit est découvert pour ce démon FTP, les attaquants ne pourront exploiter
que l'UID de l'utilisateur du démon FTP et rien d'autre. 
-->

<p>Un grand nombre de services fonctionnant comme démons pourraient bénéficier
de ce type d'arrangement. Les démons que vous installez dans votre distribution
Debian ne seront cependant pas fournis chrootés<footnote>Elle essaie de les
faire fonctionner avec le <em>minimum de privilèges</em>, ce qui inclut de faire
tourner les démons avec leurs propres utilisateurs au lieu de les exécuter sous
root</footnote> par défaut.</p>

<p>Ceci inclut&nbsp;: serveurs de domaines (comme <prgn>bind</prgn>), serveurs
web (comme <prgn>apache</prgn>), serveurs de courrier (comme
<prgn>sendmail</prgn>) et serveurs ftp (comme <prgn>wu-ftpd</prgn>). Il est
probablement juste de dire que la complexité de BIND est la raison pour laquelle
il a été exposé à de nombreuses attaques ces dernières années (voir <ref
id="sec-bind">).

<p>Cependant, Debian fournit des logiciels qui peuvent vous aider à mettre en
place des environnements <prgn>chroot</prgn>. Voir <ref id="auto-chroot">.

<p>De toute façon, si vous exécutez un quelconque service sur votre système,
vous devriez considérer de le faire fonctionner de la façon la plus sécurisée
possible. Ceci inclut&nbsp;: révoquer les privilèges root, le faire fonctionner
dans un environnement restreint (comme un prison chroot) ou le remplacer par
un équivalent plus sécurisé.</p>

<p>Cependant, soyez prévenu qu'une prison <prgn>chroot</prgn> peut être cassée
si l'utilisateur fonctionnant dedans est le super-utilisateur. Vous devez donc
faire fonctionner le service avec un utilisateur non privilégié. En limitant son
environnement, vous limitez les fichiers lisibles et exécutables par tout le
monde que le service peut accéder, vous limitez donc aussi les possibilités
d'une escalade de privilège par l'utilisation de failles de sécurité du système
local. Même dans une situation où vous ne pouvez pas être complèrement certain
qu'il n'y a pas de moyen pour un attaquant intelligent de sortir de la prison
d'une manière ou d'une autre. Utiliser seulement des programmes serveur ayant
une réputation de sécurité est une bonne mesure de sécurité additionnelle. Même
des trous minuscules comme des descripteurs de fichier peuvent être utilisés par
un attaquant doué pour s'introduire dans le système. Après tout, 
<prgn>chroot</prgn> n'a pas été conçu pour être un outil de sécurité, mais un
outil de test.</p>


<!-- <p>D'autres programmes avec des fonctionnalités complexes et une large base -->
<!-- d'utilisateurs incluent Sendmail et quelques démon ftp (e.g. WUftpd). -->
<!-- (Bien sûr un programme avec aucune fonctionnalité et pas de clients satisfaits -->
<!-- peut être aussi peu sûr, outre le fait qu'il est inutile.) -->

<!-- <p>Dans tous les cas, si vous exécutez un de ces programmes, -->
<!-- considérez des mesures semblables à leur encontre &mdash; annuler les privilèges -->
<!-- root, s'exécuter dans une prison chroot &mdash; ou les remplacer par des équivalents -->
<!-- plus sûrs. -->

<sect1 id="auto-chroot">Créer des environnements chrooté automatiquement

<p>Il existe plusieurs programmes pour chrooter automatiquement des serveurs et
services. Debian fournit actuellement (accepté en mai 2002)
<prgn>chrootuid</prgn> de Wietse Venema dans le paquet
<package>chrootuid</package>, ainsi que <package>compartment</package> et
<package>makejail</package>. Ces programmes peuvent être utilisés pour mettre en
place un environnement restreint pour exécuter tout programme
(<prgn>chrootuid</prgn> vous permet même de l'exécuter avec un utilisateur
restreint).

<p>Certains de ces outils peuvent être utilisés pour mettre en place
l'environnement chrooté facilement. Le programme <prgn>makejail</prgn>, par
exemple, peut créer et mettre à jour une prison chroot avec de petits fichiers
de configuration (il fournit des fichiers de configuration exemple pour
<prgn>bind</prgn>, <prgn>apache</prgn>, <prgn>postgresql</prgn> et
<prgn>mysql</prgn>). Il tente de deviner et d'installer dans la prison tous les
fichiers nécessaires requis par le démon en utilisant <prgn>strace</prgn>,
<prgn>stat</prgn> et les dépendances du paquet Debian. Plus d'informations à
<url id="http://www.floc.net/makejail/">. <prgn>Jailer</prgn> est un outil
semblable qui peut être récupéré depuis <url
id="http://www.balabit.hu/downloads/jailer/">.

<p>FIXME: j'ai des paquets prêts pour jailer, mettre à jour ceci quand ils
seront acceptés.

<p><package>deb.pl</package>, un script qui analyse les dépendances d'un jeu de
fichiers, est également utile pour créer des chroots (ou prisons).


<sect>Paranoïa généralisée du mot de passe en texte clair

<p>
Vous devriez essayer d'éviter tout service réseau qui envoie et reçoit des
mots de passe en texte clair par le net comme FTP/Telnet/NIS/RPC. L'auteur
recommande l'utilisation de ssh à la place de telnet et ftp pour tout le monde.

<p>
Gardez à l'esprit que la migration de telnet vers ssh, en conservant l'utilisation d'autres
protocoles à texte non chiffrés n'augmente votre sécurité en AUCUNE manière&nbsp;!
Le mieux serait de retirer ftp, telnet, pop, imap, http et de les remplacer
par leurs services cryptés respectifs. Vous devriez considérer la migration de ces
services vers leurs versions SSL, ftp-ssl, telnet-ssl, pop-ssl, https, etc.

<p>
La plupart des astuces ci-dessus s'appliquent à tout système Unix (vous 
les trouverez dans des documents de durcissement liés à Linux et autres 
Unix).

<sect>Désactivation du NIS 

<p>
Vous ne devriez pas utiliser NIS, le Service d'Information Réseau (Network 
Information Service), si possible car il autorise le partage de mot de 
passe. Ceci peut être fortement dangereux si votre installation est cassée.

<p>
Si vous avez besoin de partager les mots de passe entre machines, pensez 
à d'autres alternatives. Par exemple, mettre en place un serveur LDAP et 
configurer PAM sur votre système afin de contacter le serveur LDAP pour 
l'authentification des utilisateurs. Une installation détaillée est 
disponible dans le <url
name="LDAP-HOWTO" id="http://www.linuxdoc.org/HOWTO/LDAP-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/LDAP-HOWTO.txt.gz</file>).

<p>
Informations supplémentaires sur la sécurité de NIS à l'adresse suivante 
<url
name="NIS-HOWTO" id="http://www.linuxdoc.org/HOWTO/NIS-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/NIS-HOWTO.txt.gz</file>).


<p>FIXME (jfs)&nbsp;: Ajouter des infos sur comment configurer cela dans la Debian

<sect id="rpc">Désactivation des services RPC

<p>Vous devriez désactiver RPC quand c'est possible, c'est à dire, quand vous
n'en avez pas besoin.
<footnote>
Vous n'en avez probablement seulement besoin si vous utilisez NFS (Network File System), NIS
(Network Information System) ou un autre service basé sur RPC.
</footnote>
De nombreuses failles de sécurité pour ce service sont
connues et peuvent être facilement exploitées. D'un autre côté les services NFS
sont assez importants dans certains réseaux, trouvez donc le juste équilibre 
entre sécurité et facilité d'utilisation sur votre réseau. Certaines attaques
DDos (Distributed Denial of Service ou déni de service distribué) utilisent des
exploits rpc pour s'introduire dans le système et y agir comme agent/gestionnaire.
Lisez en plus sur la sécurité de NFS dans le
<url name="NFS-HOWTO" id="http://www.linuxdoc.org/HOWTO/NFS-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/NFS-HOWTO.txt.gz</file>).

<p>La désactivation de portmap est assez simple. Il y a différentes méthodes.
La plus simple sur un système Debian 3.0 est de désinstaller le paquet
<package>portmap</package>. Si vous exécutez une autre version vous devrez
désactiver le service comme expliqué dans <ref id="disableserv">, cela est dû
au fait que le programme fait partie du paquetage <package>net-base</package>
(qui ne peut être désinstallé sans endommager le système).

<p>Cela enlève en fait tous les liens symboliques relatifs à portmap dans
<tt>/etc/rc${runlevel}.d/</tt>, qui est aussi quelque chose que vous pourriez
faire manuellement. Une autre possibilité est de faire <tt>chmod 644 
/etc/init.d/portmap</tt>, mais cela produit un message d'erreur lors du 
démarrage. Vous pouvez aussi enlever la partie <tt>start-stop-daemon</tt>
du script shell <file>/etc/init.d/portmap</file>.

<sect id="firewall-setup">Ajouter des capacités au pare-feu

<p> Le système d'exploitation Debian GNU/Linux possède les capacités intégrées
fournies par le noyau Linux. Cela signifie que si vous installez un système
Potato (Debian version 2.2, le noyau par défaut est le 2.2) vous aurez la
fonctionnalité pare-feu <prgn>ipchains</prgn> disponible dans le noyau, vous
avez à installer le paquetage <package>ipchains</package> qui devrait
déjà être installé (de part sa priorité). Si vous installez un système Woody
(Debian version 3.0, le noyau par défaut est le 2.4) vous aurez la 
fonctionnalité pare-feu <prgn>iptables</prgn> (neftfilter) disponible.
La principale différence entre <prgn>ipchains</prgn> et <prgn>iptables</prgn>
est que ce dernier est basé sur une <em>inspection des paquets en fonctione de
l'état</em> (stateful packet inspection) qui fournit des configurations de
filtrage plus sécurisées (et plus faciles à construire).

<!-- AA Comment traduire firewalling ? -->

<!-- AA Le paragraphe suivant est à retraduire, tous les commentaires sont
bienvenus. J'ai retraduit. jpg -->

<!--

<p>
Certains utilisateurs peuvent aussi bien vouloir ajouter des règles de pare-feu dans ce script.
Cependant, vérifiez quels programmes/composants pare-feu vous voulez utiliser puisqu'ils peuvent
modifier d'autres fichiers et changer les définitions que vous avez ajouté au démarrage. Par exemple,
<package>firewalk>, pour n'en citer qu'un, utilisera un autre fichier de configuration pour configurer
le pare-feu.
	  </package></p>
   
<sect1>Règles de Iptables 

<p>
Si vous utilisez Debian 3.0, vous noterez que vous disposez du paquet
<package>iptables</package>. Ceci est le support pour l'implémentation 
de netfilter des noyaux 2.4.4+. Juste après l'installation, le système 
ne peut <em>connaître</em> les règles du pare-feu (celles-ci sont 
spécifiques à chaque système) et vous devez activer iptables.

<p>
De manière à réaliser ceci, vous devez&nbsp;:

<list>

<item>éditer <file>/etc/default/iptables</file> ainsi la variable 
<tt>enable_iptables_initd</tt> est mise à <em>true</em>

<item>Pour créer une configuration de pare-feu en utilisant iptables, vous pouvez utiliser la ligne
de commande (see <manref name="iptables" section="8">) ou un des outils 
fournit par les paquetages pare-feu Debian (voir <ref
id="firewall-pack">). Vous devez creer un jeu de règles  du pare-feu pour
les utiliser quand le pare-feu est en état <em>actif</em> et un autre lorsque le pare-feu est en état <em>inactif</em> (Ceux peuvent être
juste des règles vides).

<item>sauvegarder les règles créées en utilisant <tt>/etc/init.d/iptables
save_active</tt> et <tt>/etc/init.d/iptables save_active</tt> en lançant 
ces scripts avec les règles de pare-feu que vous voulez activer.

</list>

<p>
Une fois ceci fait l'installation de votre pare-feu est sauvegardée dans 
le répertoire <file>/var/lib/iptables/</file> et sera exécutée quand le 
système démarrera (ou lorsque le script initd sera lancé avec les arguments 
<em>start</em> et <em>stop</em>). Notez que l'installation par défaut de 
Debian démarre le pare-feu dans le niveau d'exécution multi-utilisateurs 
(2 à 5) bientôt (10). De plus, il est arrêté en mode mono-utilisateur (1),
changez ceci si cela ne correspond pas à votre politique.


<p>
Soyez avertis que certains des paquetages passés en revue ci-dessous
pourraient amener des scripts pare-feux à être exécuter quand le système
démarre, cela va indubitablement entrer en conflit avec la configuration
courante et vous pourriez avoir des effets indésirables.
Consultez la documentation du paquetage et utilisez l'une de ces
configurations.

<p>
Si vous n'avez aucun renseignement sur la manière d'organiser vos 
règles de filtrage pour votre pare-feu, consulter le <em>Packet 
Filtering HOWTO</em> fourni par <package>iptables</package> pour 
une consultation hors-ligne sous 
<file>/usr/share/doc/iptables/html/</file>.

 -->

<sect1>Firewaller le système local

<p>
Vous pouvez utiliser des règles de pare-feu comme façon de 
sécuriser l'accès à votre système local et, même, de limiter les 
connexions extérieures<!-- outbound a traduire --> effectuées par celui-ci. Des 
règles de pare-feux peuvent être également utilisées pour protéger 
des processus qui ne peuvent être proprement configurés pour <em>ne pas</em>
fournir certains services à certains réseaux, certaines adresses IP, etc.

<p>
Toutefois, cette étape est présentée en dernier dans ce manuel car 
il est <em>beaucoup</em> mieux de ne pas dépendre exclusivement des 
capacités d'un pare-feu de façon à protéger un système donné.
La sécurité dans un système est faites de couches, le filtrage devrait
être la dernière, une fois que tous les services ont été renforcés.
Vous pouvez facilement imaginer une installation dans laquelle le 
système est uniquement protégé par le pare-feu et que l'administrateur
enlève bêtement les règles pour n'importe quelle raison (problêmes 
avec l'installation, exaspération, erreur humaine, ...), ce système 
pourrait être grand ouvert à une attaque s'il n'y avait aucun autre renforcement
dans le système pour le protéger.

<p>D'un autre côté, avoir des règles de pare-feu sur le système local
préviennent également quelques mauvaises choses de se produire. Même si les
services fournis sont configurés avec sécurité, un pare-feu peut protéger des
erreurs de configuration ou des services fraîchement installés qui n'ont pas
encore été configurés correctement. Une configuration serrée préviendra
également un cheval de Troie <em>appelant à la maison</em> de fonctionner sauf
si le code de pare-feu est enlevé. Notez qu'un intrus n'a <em>pas</em> besoin de
l'accès super-utilisateur pour installer un cheval de Troie qui pourrait être
contrôlé à distance (car l'association sur des ports est autorisée si le port
n'est pas privilégié et si des capacités n'ont pas été supprimées).

<p>Une configuration correcte de pare-feu serait donc une rêgle de refus par
défaut, c'est à dire&nbsp;:

<list>

<item>les connexions entrantes ne sont autorisés que pour des services locaux
par des machines autorisées.

<item>les connexions sortantes ne sont autorisés que pour les services utilisés
par votre système (DNS, navigation web, pop, courrier, etc.)  
<footnote>À la différence des pare-feux personnels d'autres systèmes
d'exploitation, Debian&nbsp;GNU/Linux ne fournit pas (encore) d'interfaces de
génération de pare-feu qui puisse créer des règles les limitant par processus ou
par utilisateur. Cependant, le code iptables peut être configuré pour faire cela
(voir le module propriétaire (owner) dans la page de manuel <manref
			name="iptables" section="8">)</footnote>

<item>la règle forward interdit tout (à moins que vous ne protégiez d'autres
systèmes, voir ci-desssous).

<item>toutes les autres connexions entrantes et sortantes sont interdites.

</list>

<sect1>Utiliser un pare-feu pour protéger d'autres systèmes

<p>
Un pare-feu Debian peut aussi être installé de façon à protéger, selon 
des règles de filtrage, l'accès aux systèmes <em>derrière</em> lui, 
limitant leur exposition à Internet. Le pare-feu peut être configuré pour
interdire aux systèmes en dehors de votre réseau local d'accéder à des services
(ports) qui ne sont pas publics. Par exemple, sur un serveur de messagerie, seul
le port 25 (où le service de courrier est fourni) doit être accessible depuis
l'extérieur. Un pare-feu peut être configuré pour, même s'il y a d'autres
services en plus des services publics, rejeter les paquets (ceci est connu sous
le nom de<em>filtrage</em>) dirigés vers eux. <!-- ? -->

<p>
Vous pouvez même installer une machine Debian GNU/Linux en tant que pont 
pare-feux, c'est-à-dire un pare-feu filtrant complètement transparent 
pour le réseau qui est dépourvu d'adresse IP et donc ne peut pas être 
attaqué directement. Selon le noyau que vous avez installé, vous pouvez avoir
besoin d'installer le correctif pare-feu pour pont, puis aller à <em>802.1d
Ethernet Bridging</em> lors de la configuration du noyau et une nouvelle option
<em>netfilter (firewalling) support</em>. Voir <ref id="bridge-fw"> pour plus
d'informations sur la façon de faire cela dans un système
Debian&nbsp;GNU/Linux).

<!-- <p>
Si vous ne connaissez pas grand chose aux pare-feux, vous pouvez lire le 
Firewalling-HOWTO qui se trouve dans le paquet 
<package>doc-linux-text</package> (d'autres formats de document 
sont également disponibles). Voir <ref id="references"> pour plus de 
pointeurs.
 -->

<sect1>Configurer le pare-feu

<p>Bien sûr, la configuration du pare-feu dépend toujours du système et du
résea. Un administrateur doit connaître auparavant quelle est la disposition du
réseau, les systèmes qu'il désire protéger et si d'autres considérations réseau
(comme le NAT ou le routage) doivent être prises en compte ou non. Soyez prudent
quand vous configurez votre pare-feu, comme le dit Laurence J. Lane dans son
paquet <package>iptables</package>&nbsp;:

<p><em>Les outils peuvent facilement être mal utilisés, entraînant d'énormes
quantités de maux en paralysant complètement l'accès au réseau pour un système
d'ordinateur. Il n'est pas très inhabituel pour un administrateur système de se
bloquer lui-même en dehors du système situé à quelques centaines ou milliers de
kilomètres de là. Il est même possible de se bloquer en dehors d'un ordinateur
dont le clavier est sous ses doigts. Veuillez s'il vous plait l'utiliser avec
précaution.</em>

<p>Rappelez-vous de cela&nbsp;: installer simplement le paquet
<package>iptables</package> (ou l'ancien code de pare-feu) ne vous fournit pas
de protection, mais seulement les logiciels. Pour avoir un pare-feu, vous devez
le <em>configurer</em>&nbsp;!

<p>Si vous n'en connaissez pas beaucoup sur les pare-feu, lisez le
Firewalling-HOWTO qui se trouve dans le paquet <package>doc-linux-text</package>
(d'autres formats du document sont également disponibles). Consultez <ref
id="references"> pour plus de pointeurs (généraux).

<sect2>Le faire à la façon Debian

<p>Si vous utilisez Debian 3.0, vous remarquerez que le paquet
<package>iptables</package> est déjà installé. Il s'agit du support pour
l'implémentation de netfilter des noyaux 2.4.4 et plus. Comme, juste après
l'installation, le système ne peut pas <em>connaître</em> de règles de pare-feu
(toute règle de pare-feu est trop dépendante du système), vous devez activer
iptables. Cependant, les scripts ont été configurés pour que l'administrateur
puisse configurer des règles de pare-feu, puis que les scripts d'initialisation
les <em>apprennent</em> et les utilisent toujours pour la configuration du
pare-feu.

<p>Pour faire cela, vous devez&nbsp;:

<list>

<item>configurer le paquet pour qu'il se lance avec le système. Sur les versions
plus récentes (depuis 1.2.6a-1), cela est demandé quand le paquet est installé.
Vous pouvez le configurer par la suite avec <tt>dpkg-reconfigure
-plow iptables</tt>. <em>Note</em>&nbsp;: sur les systèmes plus anciens, cela
était fait par l'édition du fichier <file>/etc/default/iptables</file> pour que
la variable <tt>enable_iptables_initd</tt> soit positionnée à <em>true</em>.

<item>créer une configuration de pare-feu en utilisant iptables, vous pouvez
utiliser la ligne de commande (voir <manref name="iptables" section="8">) ou
certains des outils fournis par les paquets de pare-feu de Debian (voir <ref
id="firewall-pack">). Vous devez créer un jeu de règles de pare-feu à utiliser
quand le pare-feu est dans l'état <em>actif</em> et un autre à utiliser quand le
pare-feu est dans l'état <em>inactif</em> (celles-ci peuvent être simplement des
règles vides).

<item>sauver les règles que vous avez créé en utilisant <tt>/etc/init.d/iptables
save_active</tt> et <tt>/etc/init.d/iptables save_inactive</tt> en exécutant ces
scripts avec les règles de pare-feu que vous voulez activées.

</list>

<p>Une fois que ceci est fait, votre configuration de pare-feu est sauvée dans
le répertoire <file>/var/lib/iptables/</file> et elle sera exécutée lors de
l'amorçage du système (ou lors de l'exécution du script d'initd avec les
paramètres <em>start</em> et <em>stop</em>). Veuillez noter que les
configurations Debian par défaut lance le code de pare-feu dans les niveaux
d'exécution multi-utilisateurs (2 à 5) assez tôt (10). Il est stoppé dans le
mode utilisateur seul (1), changez cela si cela ne correspond pas à vos règles
locales.

<p>Si vous n'avez aucune idée comment configurer vos règles de pare-feu,
consultez manuellement le <em>Packet Filtering HOWTO</em> et le <em>NAT
HOWTO</em> fournis dans le paquet <package>iptables</package> pour consultation
hors-ligne dans <file>/usr/share/doc/iptables/html/</file>. Le fichier de
configuration <file>/etc/default/iptables</file> fournit également plusieurs
informations concernant les problèmes relatifs à ce paquet.


<sect2 id="firewall-pack">Paquets pare-feu

<p>
Configurer manuellement un pare-feu peut être compliqué pour un administrateur
débutant (et même parfois pour un expert). Cependant, la communauté des
logiciels libres a créé un certain nombre d'outils pouvant être utilisés pour
configurer facilement un pare-feu local. Soyez prévenu que certains de ces
outils sont plus orientés vers de la protection locale seulement (également
connu sous le nom de <em>pare-feu personnel</em>) et d'autres sont plus
versatiles et peuvent être utilisés pour configurer des rêgles complexes pour
protéger des réseaux entiers.

<p>
Il existe plusieurs logiciels qui peuvent être utilisés pour configurer 
des règles de pare-feu dans un système Debian&nbsp;:

<list>
<item><package>firestarter</package>, orienté vers les utilisateurs
finaux et incluant un wizard (?) pour définir rapidement des règles de pare-feu,
<item><package>knetfilter</package>,
<item><package>fwbuilder</package>, une interface graphique orientée objet qui
inclut des compilateurs de règles pour diverses plates-formes de pare-feu
incluant iptables ainsi que des listes d'accès du routeur,
<item><package>shorewall</package> qui fournit un support pour IPsec ainsi qu'un
support limité pour le dimensionnement du traffic (traffic shaping) et la
définition des règles du pare-feu,
<item><package>mason</package>, qui peut suggérer des règles de pare-feu
basées sur le traffic réseau que votre réseau «&nbsp;voit&nbsp;».
<item><package>bastille</package> (parmi les étapes de durcissement qui 
constituent les nouvelles versions de bastille, l'une d'entre elles est 
l'ajout de règles de pare-feu exécutables au démarrage du système),
<item><package>ferm</package>,
<item><package>fwctl</package>,
<item><package>easyfw</package>,
<item><package>firewall-easy</package>,
<item><package>ipac-ng</package>,
<item><package>gfcc</package>,
<item><package>lokkit</package> ou <package>gnome-lokkit</package>.
</list>

<p>
Les derniers paquets&nbsp;: gfcc, firestarter et knetfilter sont des interfaces graphiques
pour l'administration qui utilisent soit GNOME (les deux premiers) soit 
KDE (le dernier) qui sont plus orientées utilisateur (c'est-à-dire utilisation 
«&nbsp;familiale&nbsp;») tandis que les autres paquets de la liste sont plus orientés 
administrateur.

<p>Soyez prévenu que certains de ces paquets cités ci-dessus introduiront
probablement des scripts de pare-feu à exécuter lors de l'amorçage du système,
ce qui entrera certainement en conflit avec la configuration standard (si elle
est configurée) et peut apporter des effets indésirables. Habituellement, le
script de pare-feu qui s'exécute en dernier sera celui qui configurera le
système (qui peut ne pas être ce que vous prétendez). Consultez la documentation
du paquet et utilisez l'un d'entre eux pour ces configurations. Habituellement,
les autres programmes qui vous aident à configurer les règles du pare-feu
peuvent modifier d'autres fichiers de configuration.

<p>FIXME: Ajouter plus d'informations concernant ces paquets

<p>FIXME: Vérifier les informations sur les pare-feu Debian et quoi/comment cela
change par rapport aux autres distributions. 

<p>FIXME: À quel endroit la personnalisation du pare-feu peut-elle être activée
(FAQ générale dans debian-firewall ?)

<p>FIXME: Ajouter des informations sur <url
id="http://www.balabit.hu/downloads/zorp/debian/" name="Zorp"> dans Debian (voir
<url id="http://bugs.debian.org/88347" name="Bug #88347">. Des paquets Debian
sont fournis, mais ils dépendent de libglib1.3 qui n'est pas encore disponible
dans Debian.

<chapt>Durcissement automatique de systèmes Debian 

<p>
Après la lecture de toutes les informations des précédents chapitres, 
vous vous demandez certainement «&nbsp;de nombreuses choses sont à faire afin de 
durcir mon système, tout cela ne peut-il pas être automatisé&nbsp;?&nbsp;». La 
réponse est oui mais soyez prudent avec les outils automatisés. 
Certaines personnes croient qu'un outil de renforcement n'élimine pas 
la nécessité d'une bonne administration. Donc, ne pensez pas que vous 
pouvez automatiser toutes les procédures et que vous arriverez à 
résoudre tous les problèmes. La sécurité est un processus évoluant 
constamment dans lequel l'administrateur doit participer et ne peut pas 
rester à l'écart et laisser les outils se débrouiller tout seul avec 
toutes les implémentations de directives de sécurité, toutes les attaques et 
tous les environnements.

<p>
Depuis woody (Debian 3.0) il existe deux paquets spécifiques qui sont 
utiles pour le durcissement de la sécurité. Le paquet 
<package>harden</package> qui base son approche sur les dépendances 
des paquets pour installer rapidement des paquets sûrs et retirer ceux 
avec des imperfections, la configuration devant être faite par 
l'administrateur. Le paquet <package>bastille</package> implémente 
une politique de sécurité donnée pour le système basée sur une 
configuration antérieure de l'administrateur (la configuration peut 
être faite à l'aide de simples questions oui/non).

<sect>Harden

<p>Le paquet <package>harden</package> essaie de rendre plus facile 
l'installation et l'administration d'hôtes qui ont besoin d'une bonne 
sécurité. Ce paquet devrait être utilisé par ceux qui veulent une aide 
afin d'améliorer la sécurité du système. 

Pour cela, il est en conflit avec des paquets ayant des problèmes connus,
incluant (mais non limitativement): des bogues de sécurité connus (comme
les dépassements de tampon), l'utilisation de mots de passe en clair, le manque
de contrôle d'accès, etc. Il installe aussi automatiquement des outils pour
accroître la sécurité&nbsp;: outils de détection d'intrusions, outils d'analyse
de sécurité, etc. Harden installes les paquetages <em>virtuels</em> suivants
(i.e., pas de contenu, juste des dependences sur d'autres paquets)&nbsp;:

<list>

<item><package>harden-tools</package>&nbsp;: outils pour améliorer la sécurité 
du sytème (vérificateur d'intégrité, détection d'intrusions, rustines pour 
noyau, etc.),

<item><package>harden-doc</package>&nbsp;: fournit ce même manuel et d'autres 
paquets de documentations liés à la sécurité,

<item><package>harden-environment</package>&nbsp;: aide à configurer un 
durcissement d'environnement (actuellement vide),

<item><package>harden-servers</package>&nbsp;: retire les serveurs considérés 
comme douteux pour certaines raisons,

<item><package>harden-clients</package>&nbsp;: retire les clients considérés 
comme douteux pour certaines raisons,

<item><package>harden-remoteflaws</package>&nbsp;: supprime les paquets 
contenant des trous de sécurité connus pouvant être utilisés 
par un assaillant distant afin de compromettre le système 
(utilise des <em>Conflicts:</em> versionés),

<item><package>harden-localflaws</package>&nbsp;: supprime les paquets 
contenant des trous de sécurité connus qui peuvent être utilisés 
par un assaillant local afin de compromettre le système 
(utilise des <em>Conflicts:</em> versionés).

<item><package>harden-remoteaudit</package>&nbsp;: outils pour auditer un système 
à distance.

</list>

<p>Prenez garde dans le cas où vous avez besoin d'un logiciel (et que vous ne 
voulez pas désinstaller) et qu'il soit en contradiction avec certains 
paquets ci-dessus, vous ne serez peut-être pas capable d'utiliser 
pleinement <package>harden</package>.

Les paquets harden ne font rien (directement). Ils entrent, cependant, en 
conflit avec des paquets non sûrs connus. De cette façon, le système de 
paquetage Debian n'approuvera pas l'installation de ces paquets. Par exemple,
lorsque vous essayer d'installer un démon telnet avec 
<package>harden-servers</package>, <package>apt</package> vous dira&nbsp;:

<example>
# apt-get install telnetd 
The following packages will be REMOVED:
	harden-servers
The following NEW packages will be installed:
telnetd 
Do you want to continue (Y/n)
</example>

<p>Ceci devrait alerter l'administrateur, qui devrait reconsidérer ses actions.
<!--ES Phrase à retraduire. Fait. jpg -->

<sect>Bastille Linux

<p><url name="Bastille Linux" id="http://www.bastille-linux.org"> est 
un outil de durcissement automatique originellement orienté vers les 
distributions Linux RedHat et Mandrake. Toutefois, le paquet 
<package>bastille</package> fourni dans Debian (depuis Woody) a été 
modifié de façon à fournir les mêmes fonctionnalités pour le système 
Debian GNU/Linux.

<p>Bastille peut être utilisé avec différentes interfaces (toutes sont 
documentées dans leur propre page de manuel dans le paquet Debian) qui 
permettent à l'administrateur de&nbsp;:

<list>

<item>répondre aux questions, étape par étape, concernant le niveau 
de sécurité désiré de votre système (en utilisant 
<manref name="InteractiveBastille" section="8">),

<item>utiliser un paramétrage par défaut pour la sécurité (parmi trois&nbsp;: 
relachée, modérée ou paranoïaque) dans une installation définie (serveur ou poste de 
travail) et laisser Bastille décider quelle politique de sécurité appliquer 
(en utilisant <manref name="BastilleChooser" section="8">),

<item>prendre un fichier de configuration prédéfini (qui peut être fourni par 
Bastille ou créé par l'administrateur) et implémenter une politique de sécurité 
donnée (en utilisant <manref name="AutomatedBastille" section="8">).

</list>

<chapt>Infrastructure de sécurité Debian

<sect id="debian-sec-team">L'équipe de sécurité Debian

<p>Debian possède une équipe de sécurité, composée de cinq membres et deux
secrétaires, qui gère la sécurité dans la distribution <em>stable</em>. Gérer la
sécurité veut dire qu'ils suivent les failles qui surviennent dans les logiciels
(en surveillant des forums comme bugtraq ou vuln-dev) et ils déterminent si la
distribution <em>stable</em> est touchée par ces failles.

<p>L'équipe de sécurité Debian est également le point de contact pour les
problèmes qui sont coordonnées par les développeurs amont ou des organisations
comme le <url id="http://www.cert.org" name="CERT">, qui peuvent toucher de
multiples vendeurs. C'est-à-dire, quand les problèmes ne sont pas spécifiques à
Debian. Il existe deux points de contact avec l'équipe de sécurité&nbsp;:

<list>

<item><url id="mailto:team@security.debian.org"
name="team@security.debian.org"> qui n'est lu que par les membres de l'équipe de
sécurité.

<item><url id="mailto:security@debian.org" name="security@debian.org">
qui est lu par tous les développeurs Debian (y compris l'équipe de sécurité).
Les messages envoyés sur cette liste ne sont pas publiés sur l'Internet (ce
n'est pas une liste publique).

</list>

<p>Les informations secrètes devraient être envoyées à la première adresse et,
dans certains cas, devraient être cryptées avec la clé du contact de l'équipe de
sécurité (key ID 363CCD95).

<p>Une fois qu'un problème probable est reçu par l'équipe de sécurit, elle
recherchera si la distribution <em>stable</em> est affectée et si c'est le cas,
un correctif sera créé pour la base de code source. Ce correctif inclura parfois
un rétro-portage du correctif effectué en amont (qui est habituellement en
avance de plusieurs version par rapport à la version distribuée par Debian).
Après qu'un test du correctif ait été effectué, les nouveaux paquets sont
préparés et publiés sur le site <url id="security.debian.org"> pour pouvoir être
récupéré par <prgn>apt</prgn> (voir <ref id="security-update">). En même temps,
une <em>alerte de sécurité Debian</em> (Debian Security Advisory ou DSA) est
publiée sur le site web et envoyée aux listes de diffusion publiques y compris
<url id="lists.debian.org/debian-security-announce"
name="debian-security-announce"> et bugtraq.

<p>D'autres questions souvent posées sur l'équipe de sécurité Debian peuvent
être trouvées à <ref id="debian-sec-team-faq">.


<sect id="dsa">Alertes de sécurité Debian

<p>Les alertes de sécurité Debian sont effectuées à chaque fois qu'une faille
est découverte affectant un paquet Debian. Ces alerte, signées par l'un des
membres de l'équipe de sécurité, incluent des informations sur les versions
touchées ainsi que l'emplacement des mises à jour et leurs MD5sums. Ces
informations sont&nbsp;:

<list>
<item>numéro de version pour le correctif,
<item>type de problème,
<item>s'il est exploitable à distance ou localement,
<item>description courte du paquet,
<item>description du problème,
<item>description de l'exploit,
<item>description du correctif.
</list>


<p>Les DSA sont publiées sur <url id="http://www.debian.org/"
name="la page principale de Debian"> et dans les <url
id="http://www.debian.org/security/" name="pages de sécurité Debian">. Ceci ne
se produit habituellement pas avant que le site web ne soit reconstruit (une
fois par jour), elles peuvent donc ne pas être immédiatement présentes, le canal
préféré est la liste de diffusion debian-security-announce.

<p>Les utilisateurs intéressées peuvent, cependant (et ceci est fait sur
quelques portails relatifs à Debian) utiliser le canal RDF pour télécharger
automatiquement les DSA sur leur bureau. Certaines applications, comme
<prgn>Evolution</prgn> (un client de messagerie et assistant d'informations
personnelles) et <prgn>Multiticker</prgn> (une applet GNOME) peuvent être
utilisés pour récupérer les alertes automatiquement. Le canal RDF est disponible
à <url id="http://www.debian.org/security/dsa.rdf">.

<p>Les DSA publiées sur le site web peuvent être mises à jour après avoir été
envoyées sur les listes de diffusion publiques. Une mise à jour courante est
d'ajouter des références croisées vers les bases de données des failles de
sécurité comme <url
id="http://cve.mitre.org" name="CVE">, <url id="http://www.cert.org"
name="Notes de failles CERT/CC"> ou <url
id="http://www.securityfocus.com/bid/" name="Bugtraq">. Cette fonctionnalité a
été ajoutée au site web en juin 2002.

<p>L'un des avantages d'ajouter les références croisées vers ces bases de
données de failles est que&nbsp;:

<list>
<item>cela permet plus facilement aux utilisateurs de Debian de voir et de
suivre quelles alertes générales (publiées) ont déjà été couvertes par Debian,

<item>les administrateurs systèmes peuvent en apprendre plus sur la faille et
ses impacts en suivant les références croisées,

<item>ces informations peuvent être utilisées pour vérifier les sorties de
scanneurs de failles qui incluent des références à CVE pour supprimer des faux
positifs (voir <ref id="vulnasses-false-positive">).

</list>

<sect>Infrastructure de construction de sécurité Debian

<p>Comme Debian supporte actuellement un grand nombre d'architectures, les
administrateurs se demandent parfois si une architecture donnée pourrait prendre
plus de temps pour recevoir des mises à jour de sécurité qu'une autre. En fait,
à l'exception de rares circonstances, les mises à jour sont disponibles pour
toutes les architectures en même temps.

<p>Alors que précédemment la tâche de construction des mises à jour de sécurié
était faite à la main, ce n'est plus actuellement le cas (comme le décrit
Anthony Towns dans <url
id="http://lists.debian.org/debian-devel-announce/2002/debian-devel-announce-20+0206/msg00002.html"
name="un courriel">
envoyé à la liste de diffusion debian-devel-announce daté du 8 juin 2002).

<p>Les paquets envoyés par l'équipe de sécurité (à <url
id="security.debian.org:/org/security.debian.org/queue/unchecked"> ou
<url id="ftp://security.debian.org/pub/SecurityUploadQueue">
avec un correctif approprié voient leur signature vérifiée dans les quinze
minutes après l'envoir, une fois ceci fait, ils sont ajoutés à la liste des
autoconstructeurs (qui n'est plus une exécution d'archive journalière). Les
paquets sont donc automatiquement construits pour <em>toutes</em> les
architectures trente minutes ou une heure après leur envoi. Cependant, les mises
à jour de sécurité sont un petit peu différentes que les envois normaux par les
responsables de paquets car, dans certains cas, avant d'être publiées, elles
doivent attendre de pouvoir être plus testés, qu'une alerte soit rédigée ou
attendre une semaine ou plus pour éviter de publier le défaut jusqu'à ce que
tous les vendeurs aient eu une chance raisonnable de la corriger.

<p>L'archive d'envoi de sécurité fonctionner donc de la façon suivante (dénommée
<em>"Accepted-Autobuilding"</em>)&nbsp;:

<list>

<item>quelqu'un trouve un problème de sécurité,
     
<item>quelqu'un corrige le problème et fait un envoi vers l'incoming de
      security.debian.org (ce <em>quelqu'un</em> est habituellement un membre de
      l'équipe de sécurité, mais ce peut aussi être un responsable de paquet
      avec un correctif approprié qui a contacté l'équipe de sécurité
      auparavant). Le Changelog inclut une cible de distribution
      <em>testing-security</em> ou <em>stable-security</em>,

<item>l'envoi est vérifié et traité par un système Debian et déplacé dans
       queue/accepted et les buildds sont notifiés. Les fichiers à cet endroit
       peuvent être accédés par l'équipe de sécurité et (de façon un peu
       indirecte) par les buildds,

<item>les buildds activés pour la sécurité récupèrent le paquet source (en
       priorité par rapport aux constructions normales), le construisent et
       envoient les journaux à l'équipe de sécurité,

<item>l'équipe de sécurité répond aux journaux et les paquets nouvellement
       construits sont envoyés vers queue/unchecked, où ils sont traités par un
       système Debian et déplacé dans queue/accepted,

<item>quand l'équipe de sécurité trouve les paquets acceptable (i.e., ils sont
       correctement construits pour toutes les architectures pertinentes et ils
       corrigent le trou de sécurité et n'introduisent pas de nouveau problème
       par eux-même), ils exécutent un script qui&nbsp;:

<list>
<item>install le paquet dans l'archive de sécurité,

<item>met à jour les fichiers Packages, Sources et Release files de
security.debian.org de la façon habituelle (<prgn>dpkg-scanpackages</prgn>,
<prgn>dpkg-scansources</prgn>, etc.),

<item>met en place un modèle d'alerte que l'équipe de sécurité peut compléter,

<item>(facultativement) fait suivre les paquets vers le proposed-updates
approprié pour qu'il soit inclus dans l'archive réelle aussitôt que possible.

</list>

</list>

<p>Cette procédure, auparavant fait à la main, a été testé et mise en place
pendant l'étape de gel de Debian 3.0 woody (juillet 2002). Grâce à cette
architecture, l'équipe de sécurité a pu avoir des paquets mis à jour pour les
problèmes d'Apache et d'OpenSSH issues pour toutes les architectures supportées
(presque vingt) en moins d'un jour.

<sect1>Le guide du développeur aux mises à jour de sécurité

<p>Ce message a été envoyé par Wichert Akkerman à la <url
id="http://lists.debian.org/debian-devel-announce/2002/debian-devel-announce-200206/msg00004.html"
name="liste de diffusion debian-devel-announce"> pour décrire le comportement
des développeurs Debian pour la gestion des problèmes de sécurité dans leurs
paquets. Il est publié ici à la fois pour le bénéfice des développeurs ainsi que
pour que les utilisateurs comprennent mieux comment est gérée la sécurité dans
Debian.

<p>Veuillez noter que la référence à jour pour cette information est la <url
id="http://www.debian.org/doc/manuals/developers-reference/ch-pkgs.en.html#s-bug-security"
name="référence du développeur Debian">, cette section sera supprimée dans un
avenir proche.

<sect2>Se coordonner avec l'équipe de sécurité

<p>Si un développeur apprend un problème de sécurit, soit dans son paquet ou
dans celui de quelqu'un d'autre, il devrait toujours contacter l'équipe de
sécurité (à team@security.debian.org). Il suivent les problèmes de sécurité
existants, ils peuvent aider les responsables avec des problèmes de sécurité ou
les corriger eux-même, ils sont responsables de l'envoi des alertes de sécurité
et maintiennent security.debian.org.

<p>Veuillez noter que les alertes de sécurité ne sont effectuées que pour des
distributions de version, pas pour testing, unstable (voir <ref id="sec-unstable">)
ou d'anciennes distributions (voir <ref id="sec-older">).

<sect2>Prendre connaissance des problèmes de sécurité

<p>
Il existe plusieurs façons pour un développeur de prendre connaissance d'un
problème de sécurité&nbsp;:

<list>
<item>il le remarque sur un forum public (liste de diffusion, site web, etc.),
<item>quelqu'un remplit un rapport de bogue, (la marque <em>Security</em>
devrait être utilisée ou ajoutée par le développeur)
<item>quelqu'un l'informe par courrier privé.
</list>

<p>
Dans les deux premiers cas, l'information est publique et il est important
d'avoir une solution le plus vite possible. Dans le dernier cas, cependant, ce
n'est peut-être pas une information publique. Dans ce cas, il existe quelques
options possibles pour traiter le problème&nbsp;:

<list>

<item>si le problème est trivial (comme des fichiers temporaires non sécurisés),
  il n'y a pas besoin de garder le secret sur le problème et une correction
  devrait être effectuée et diffusée,

<item>si le problème est grave (exploitable à distance, possibilité d'obtenir
  les privilèges root), il est préférable de partager cette
      information avec d'autres vendeurs et de coordonner une diffusion.
      L'équipe de sécurité garde des contacts avec les différentes organisations
      et individus et peut prendre soin des actions à mener.

</list>

<p>
Dans tous les cas, si la personne qui indique le problème demande à ce que
l'information ne soit pas diffusée, cela devrait être respecté avec l'évidente exception
d'informer l'équipe de sécurité (le développeur devrait s'assurer de dire à
l'équipe de sécurité que l'information ne peut être dévoilée).

<p>
Veuillez noter que si le secret est nécessaire, vous ne pourrez pas envoyer
un correctif vers unstable (ou ailleurs) puisque les informations de
changelog sont publiques.

<p>Il existe deux raisons pour diffuser l'information même si le secret est
demandé&nbsp;: le problème est connu depuis un certain temps ou le problème est
devenu public.

<sect2>Construire le paquet

<p>
La règle la plus important lors de la construction d'un nouveau paquet
corrigeant un problème de sécurité est de faire aussi peu de modifications que
possible. Les personnes s'attendent à un comportement identique dans une version
lorsque celle-ci est diffusée, donc tout changement qui est fait est susceptible
de casser le système de quelqu'un. Ceci est spécialement vrai pour les
bibliothèques&nbsp;: assurez-vous ne de jamais changer l'API ou l'ABI, quelque
minimal que soit le changement.

<p>
Cela veut dire que passer à une version amont supérieure n'est pas une bonne
solution. À la place, les changements pertinents devraient être rétroportés.
Habituellement, les développeurs amont veulent bien aider. Sinon, l'équipe de
sécurité Debian peut le faire.

<p>
Dans certains cas, il n'est pas possible de rétroporter un correctif de
sécurité, par exemple, quand de grandes quantités de code source doivent être
modifiées ou réécrites. Si cela se produit, il peut être nécessaire de passer à
une nouvelle version amont, mais vous devez toujours coordonner cela avec
l'équipe de sécurité au préalable.

<p>
Il existe une autre règle de conduite liée à cela&nbsp;: les développeurs
doivent toujours tester leurs changements. Si une exploitation du problème
existe, essayez-la et vérifiez qu'elle réussit sur le paquet non corrigé et
échoue sur le paquet corrigé. Testez aussi les autres actions normales car
parfois un correctif de sécurité peut casser de manière subtile des
fonctionnalités normales.

<p>
Enfin, quelques points techniques que les développeurs doivent garder à l'esprit&nbsp;:

<list>
<item>
      Assurez-vous que vous avez pour cible la bonne distribution dans votre
      fichier debian/changelog. Pour stable, il s'agit de
      stable-security et pour testing, c'est testing-security. Ne ciblez ni
      &lt;nomdecode&gt;-proposed-updates.

<item>
      Assurez-vous que le numéro de version est correct. Il doit être plus élevé
      que celui du paquet actuel, mais moins que ceux des paquets des versions
      des distributions suivantes. Pour testing, il doit y avoir un numéro de
      version supérieur dans unstable. S'il n'y en a pas encore (par
      exemple, si testing et unstable ont la même version),
      vous devez envoyer une nouvelle version vers unstable en premier.

<item>
      Ne faites pas d'envoi de source seul si votre paquet possède un ou
      plusieurs paquets binary-all. L'infrastructure <prgn>buildd</prgn> ne
      construira pas ceux-ci.

<item>
      Assurez-vous de compiler sur un système propre, dont tous les paquets
      appartiennent à la distribution pour laquelle vous construisez le paquet.
      Si vous n'avez pas un tel système, vous pouvez utiliser l'une des machines
      de debian.org (voir http://db.debian.org/machines.cgi) ou mettez en place un
      chroot (les paquets <package>pbuilder</package> et
      <package>debootstrap</package> peuvent s'avérer utiles dans ce cas).

</list>

<sect2>Envoyer les correctifs de sécurité

<p>
Une fois que le développeur a créé et testé le nouveau paquet, il doit être
envoyé pour être installé dans l'archive. Pour les envois de sécurité, l'adresse d'envoi est
ftp://security.debian.org/pub/SecurityUploadQueue/.

<p>
Une fois que l'envoi vers la file d'attente de sécurité a été accepté, le paquet sera
automatiquement recompilé pour toutes les architectures et stocké pour
vérification par l'équipe de sécurité.

<p>
Les envois en attente d'acceptation ou de vérification ne sont accessibles que
par l'équipe de sécurité. C'est nécessaire car il pourrait y avoir des
correctifs pour des problèmes de sécurité qui ne peuvent pas encore être
diffusés.

<p>
Si une personne de l'équipe de sécurité accepte un paquet, il sera installé sur
security.debian.org ainsi que dans le répertoire
&lt;nomdecode&gt;-proposed-updates qui convient sur ftp-master ou dans
l'archive non-US.

<sect2>Alertes de sécurité

<p>
Les alertes de sécurité sont écrites et envoyées par l'équipe de sécurité.
Cependant, ils ne verront aucun inconvénient à qu'un responsable fournisse (une
partie) du texte pour eux. Les informations qui devraient être présentes dans
une alerte sont décrites dans <ref id="dsa">.

<sect  id="deb-pack-sign">La signature de paquet dans Debian

<p>Ce chapitre pourrait également être intitulé «&nbsp;comment améliorer/actualiser 
sûrement votre système Debian GNU/Linux&nbsp;» et il mérite d'avoir son propre 
chapitre car c'est une partie improtante de l'infrastructure de sécurité. La
signature des paquets est un point important car elle évite l'altération de
paquets distribués sur les miroirs et des téléchargements avec des attaques sur
l'homme-du-milieu («&nbsp;man-in-the-middle&nbsp;»). Les mises à jour de
logiciels automatiques sont une fonctionnalité importante, mais il est également
important d'enlever les menaces de sécurité qui pourrait favoriser la
propagation de chevaux de Troie et la compromission de systèmes lors des mises à
jour.
<footnote>
<p>Certains systèmes d'exploitation ont déjà été touchés par des problèmes de
mises à jour automatiques comme la
<url name="faille de mises à jour de logiciels de Mac OS X"
id="http://www.cunap.com/~hardingr/projects/osx/exploit.html">.
<p>FIXME: la faille d'Internet Explorer sur la gestion des chaînes de certicat a
probablement un impact sur les mises à jour de sécurité de Microsoft Windows.
</footnote>


<p>À ce jour (février 2003), Debian ne fournit pas de paquets 
signés pour la distribution et la version <em>woody</em> (3.0) n'intègre pas cette fonctionnalité. 
Il existe une solution pour les paquets signés qui sera, espérons-le, fournie dans les 
prochaines versions (<em>sarge</em>).

<p>Ce problème est mieux décrit dans le
<url id="http://www.cryptnet.net/fdp/crypto/strong_distro.html" name="Strong
Distribution HOWTO"> par V. Alex Brennen.

<sect1>Le schéma proposé pour la vérification de paquet 

<p>Le schéma actuel (non implémenté) pour la vérification de signatures de paquet 
en utilisant <prgn>apt</prgn> est&nbsp;:

<list>
<item>le fichier Release inclut le md5sum de Packages.gz 
(qui contient les md5sums des paquets) et sera signé.
La signature est celle d'une source sûre.

<item>Ce fichier Release est téléchargé par 'apt-get update' et stockée sur le 
disque dur avec le Packages.gz.

<item>Quand un paquet est sur le point d'être installé, il est premièrement 
téléchargé, puis le md5sum est généré.

<item>Le fichier Release signé est vérifié (signature ok) et il en est extrait le 
md5sum pour le fichier Packages.gz, le checksum de Packages.gz est généré et 
(si ok) le md5sum du paquet téléchargé en est extrait.

<item>Si le md5sum du paquet téléchargé est le même que celui du fichier 
Packages.gz le paquet sera installé sinon l'administrateur sera averti et le 
paquet sera laissé dans le cache (ainsi l'administrateur décidera s'il l'installe 
ou non). Si le paquet n'est pas dans Packages.gz et que  l'administrateur a 
configuré le système pour installer uniquement les paquets vérifiés il ne sera 
pas plus installé.
</list>

<p>
En suivant la chaîne de sommes MD5, <prgn>apt</prgn> est capable de vérifier 
qu'un paquet est originaire d'une version bien spécifique. Ceci est moins 
souple que de signer chaque paquet un par un, mais peut être combiné 
également avec ce schéma suivant (voir ci-dessous).

<p>La signature de paquets a été abordée dans la Debian depuis pas mal de temps déjà,
pour plus d'informations vous pouvez lire&nbsp;:
<url id="http://www.debian.org/News/weekly/2001/8/"> et
<url id="http://www.debian.org/News/weekly/2000/11/">.

<sect1>Schéma complémentaire pour la signature par paquet

<p>Le schéma complémentaire concernant la signature de chaque 
paquet autorise les paquets à être vérifiés quand ils ne sont plus 
référencés par un fichier Packages existant, les paquets
tiers pour lesquels aucun fichier Packages n'existe peuvent également être
utilisés avec la Debian mais n'entre pas dans le système par défaut.

<p>Ce schéma de signature par paquet peut être implémenté en utilisant 
<package>debsig-verify</package> et <package>debsigs</package>.
Ces deux paquets peuvent signer et vérifier les signatures incluses dans 
le .deb lui-même. Debian a déjà la capacité de le faire maintenant mais 
l'implémentation de cette politique et de ces outils ne démarrera qu'après
la sortie de la woody.

<p>Les dernières versions de dpkg (depuis la 1.9.21) incluent un <url
id="http://lists.debian.org/debian-dpkg/2001/debian-dpkg-200103/msg00024.html"
name="correctif"> qui fournit cette fonctionnalité dès que
<package>debsig-verify</package> est installé.

<p>Note&nbsp;: Actuellement <file>/etc/dpkg/dpkg.conf</file> est livré avec
«&nbsp;no-debsig&nbsp;» par défaut.

<p>Note2&nbsp;: Les signatures des développeurs sont actuellement épurées quand
elles entrent dans l'archive des paquets car la méthode préférée actuellement
est les vérifications de distribution comme décrit précédemment.

<sect1 id="check-releases">Vérification des paquets sortis

<p>
Au cas où vous voudriez ajouter des vérifications de sécurité supplémentaires,
vous pouvez utiliser le script ci-dessous fourni par Anthony Thown. 
Ce script peut automatiquement faire certaines nouvelles vérifications de 
sécurité qui permettent à l'utilisateur d'être sûr que le logiel qu'il
télécharge correspond à celui de la distribution de logiciels Debian. 

Cela empêche les développeurs Debian d'intégrer des nouveautés au système de quelqu'un
en outrepassant les responsabilités qui incombent au chargement vers l'archive
principale, ou encore cela empêche une duplication similaire mais pas exactement
identique, ou pour finir cela empêche l'utilisation de miroirs fournissant des copies
anciennes de la version instable ou connaissant des problèmes de sécurité.
<!-- J'ai tenté une autre approche... jpg -->
<!-- à revoir (fbo)-->

<p>
Ce code exmple, renommé en <prgn>apt-release-check</prgn>, devrait être
utilisé de la manière suivante&nbsp;:
<example>
# apt-get update
# apt-release-check
(...résultats...)
# apt-get dist-upgrade
</example>

<p>Avant tout, vous avez besoin de&nbsp;:

<list>
<item>récupérer les clés que les logiciels de l'archive utilisent 
pour signer les fichiers Release,
<url id="http://ftp-master.debian.org/ziyi_key.asc">, et 
les ajouter à <file>~/.gnupg/trustedkeys.gpg</file> (ce qui est ce que <prgn>gpgv</prgn> utilise par défaut).
<example>
  gpg --no-default-keyring --keyring trustedkeys.gpg --import ziyi_key_2003.asc
</example>

<item>retirer toutes les lignes de <file>/etc/apt/sources.list</file>
qui n'utilisent pas la structure normale «&nbsp;dists&nbsp;» ou changer le script 
afin qu'il fonctionne avec elles.

<item>être prêt à ignorer le fait que les mises à jour de sécurité 
Debian n'ont pas de fichiers Release signés et que les fichiers 
Sources n'ont pas (encore) les checksums appropriés dans le fichier 
Release.

<item>être prêt à vérifier que les sources appropriées soient signées 
par les clés appropriées.

</list>

<p>Ceci est le code exemple pour <prgn>apt-check-sigs</prgn>, la dernière
version peut être récupérée de <url
id="http://people.debian.org/~ajt/apt-check-sigs">.
Ce code est actuellement en bêta, pour plus d'informations, lisez
<url id="http://lists.debian.org/debian-devel/2002/debian-devel-200207/msg00421.html">.


<example>
#!/bin/bash
# This script is copyright (c) 2001, Anthony Towns
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

rm -rf /tmp/apt-release-check
mkdir /tmp/apt-release-check || exit 1
cd /tmp/apt-release-check

>OK
>MISSING
>NOCHECK
>BAD

arch=`dpkg --print-installation-architecture`

am_root () {
        [ `id -u` -eq 0 ]
}

get_md5sumsize () {
        cat "$1" | awk '/^MD5Sum:/,/^SHA1:/' | 
          MYARG="$2" perl -ne '@f = split /\s+/; if ($f[3] eq $ENV{"MYARG"}) { print "$f[1] $f[2]\n"; exit(0); }'
}
checkit () {
        local FILE="$1"
        local LOOKUP="$2"

        Y="`get_md5sumsize Release "$LOOKUP"`"
        Y="`echo "$Y" | sed 's/^ *//;s/  */ /g'`"

        if [ ! -e "/var/lib/apt/lists/$FILE" ]; then
                if [ "$Y" = "" ]; then
                        # No file, but not needed anyway
                        echo "OK"
                        return
                fi
                echo "$FILE" >>MISSING
                echo "MISSING $Y"
                return
        fi
        if [ "$Y" = "" ]; then
                echo "$FILE" >>NOCHECK
                echo "NOCHECK"
                return
        fi
        X="`md5sum < /var/lib/apt/lists/$FILE` `wc -c < /var/lib/apt/lists/$FILE`"
        X="`echo "$X" | sed 's/^ *//;s/  */ /g'`"
        if [ "$X" != "$Y" ]; then
                echo "$FILE" >>BAD
                echo "BAD"
                return
        fi
        echo "$FILE" >>OK
        echo "OK"
}

echo
echo "Checking sources in /etc/apt/sources.list:"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo
(echo "You should take care to ensure that the distributions you're downloading"
echo "are the ones you think you are downloading, and that they are as up to"
echo "date as you would expect (testing and unstable should be no more than"
echo "two or three days out of date, stable-updates no more than a few weeks"
echo "or a month)."
) | fmt
echo

cat /etc/apt/sources.list | 
  sed 's/^ *//' | grep '^[^#]' |
  while read ty url dist comps; do
        if [ "${url%%:*}" = "http" -o "${url%%:*}" = "ftp" ]; then
                baseurl="${url#*://}"
        else
                continue
        fi
        echo "Source: ${ty} ${url} ${dist} ${comps}"
        
        rm -f Release Release.gpg
        wget -q -O Release "${url}/dists/${dist}/Release"

        if ! grep -q '^' Release; then
                echo "  * NO TOP-LEVEL Release FILE"
        else
                origline=`sed -n 's/^Origin: *//p' Release | head -1`
                lablline=`sed -n 's/^Label: *//p' Release | head -1`
                suitline=`sed -n 's/^Suite: *//p' Release | head -1`
                codeline=`sed -n 's/^Codename: *//p' Release | head -1`
                dateline=`grep "^Date:" Release | head -1`
                dscrline=`grep "^Description:" Release | head -1`
                echo "  o Origin: $origline/$lablline"
                echo "  o Suite: $suitline/$codeline"
                echo "  o $dateline"
                echo "  o $dscrline"

                if [ "${dist%%/*}" != "$suitline" -a "${dist%%/*}" != "$codeline" ]; then
                        echo "  * WARNING: asked for $dist, got $suitline/$codeline"
                fi

                wget -q -O Release.gpg "${url}/dists/${dist}/Release.gpg"
                sigline="`gpgv --status-fd 3 Release.gpg Release 3>&1 >/dev/null 2>&1 | sed -n "s/^\[GNUPG:\] GOODSIG [0-9A-Fa-f]* //p"`"
                if [ "$sigline" ]; then
                        echo "  o Signed by: $sigline"
                else
                        echo "  * NO VALID SIGNATURE"
                        >Release
                fi
        fi
        okaycomps=""
        for comp in $comps; do
                if [ "$ty" = "deb" ]; then
                        X=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/binary-${arch}/Release" | sed 's,//*,_,g'`" "${comp}/binary-${arch}/Release")
                        Y=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/binary-${arch}/Packages" | sed 's,//*,_,g'`" "${comp}/binary-${arch}/Packages")
                        if [ "$X $Y" = "OK OK" ]; then
                                okaycomps="$okaycomps $comp"
                        else
                                echo "  * PROBLEMS WITH $comp ($X, $Y)"
                        fi
                elif [ "$ty" = "deb-src" ]; then
                        X=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/source/Release" | sed 's,//*,_,g'`" "${comp}/source/Release")
                        Y=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/source/Sources" | sed 's,//*,_,g'`" "${comp}/source/Sources")
                        if [ "$X $Y" = "OK OK" ]; then
                                okaycomps="$okaycomps $comp"
                        else
                                echo "  * PROBLEMS WITH component $comp ($X, $Y)"
                        fi
                fi
        done
        [ "$okaycomps" = "" ] || echo "  o Okay:$okaycomps"
        echo
  done

echo "Results"
echo "~~~~~~~"
echo

allokay=true

cd /tmp/apt-release-check
diff <(cat BAD MISSING NOCHECK OK | sort) <(cd /var/lib/apt/lists && find . -type f -maxdepth 1 | sed 's,^\./,,g' | grep '_' | sort) | sed -n 's/^> //p' >UNVALIDATED

cd /tmp/apt-release-check
if grep -q ^ UNVALIDATED; then
    allokay=false
    (echo "The following files in /var/lib/apt/lists have not been validated."
    echo "This could turn out to be a harmless indication that this script"
    echo "is buggy or out of date, or it could let trojaned packages get onto"
    echo "your system."
    ) | fmt
    echo
    sed 's/^/    /' < UNVALIDATED
    echo
fi

if grep -q ^ BAD; then
    allokay=false
    (echo "The contents of the following files in /var/lib/apt/lists does not"
    echo "match what was expected. This may mean these sources are out of date,"
    echo "that the archive is having problems, or that someone is actively"
    echo "using your mirror to distribute trojans."
    if am_root; then 
        echo "The files have been renamed to have the extension .FAILED and"
        echo "will be ignored by apt."
        cat BAD | while read a; do
            mv /var/lib/apt/lists/$a /var/lib/apt/lists/${a}.FAILED
        done
    fi) | fmt
    echo
    sed 's/^/    /' < BAD
    echo
fi

if grep -q ^ MISSING; then
    allokay=false
    (echo "The following files from /var/lib/apt/lists were missing. This"
    echo "may cause you to miss out on updates to some vulnerable packages."
    ) | fmt
    echo
    sed 's/^/    /' < MISSING
    echo
fi

if grep -q ^ NOCHECK; then
    allokay=false
    (echo "The contents of the following files in /var/lib/apt/lists could not"
    echo "be validated due to the lack of a signed Release file, or the lack"
    echo "of an appropriate entry in a signed Release file. This probably"
    echo "means that the maintainers of these sources are slack, but may mean"
    echo "these sources are being actively used to distribute trojans."
    if am_root; then 
        echo "The files have been renamed to have the extension .FAILED and"
        echo "will be ignored by apt."
        cat NOCHECK | while read a; do
            mv /var/lib/apt/lists/$a /var/lib/apt/lists/${a}.FAILED
        done
    fi) | fmt
    echo
    sed 's/^/    /' < NOCHECK
    echo
fi

if $allokay; then
    echo 'Everything seems okay!'
    echo
fi

rm -rf /tmp/apt-release-check
</example>

<p>
Il est possible que vous deviez ajouter le correctif suivant pour <em>Sid</em>
car <prgn>md5sum</prgn> ajoute un '-' après la somme quand l'entrée est stdin&nbsp;:

<example>
@@ -37,7 +37,7 @@
        local LOOKUP="$2"

        Y="`get_md5sumsize Release "$LOOKUP"`"
-       Y="`echo "$Y" | sed 's/^ *//;s/  */ /g'`"
+       Y="`echo "$Y" | sed 's/-//;s/^ *//;s/  */ /g'`"

        if [ ! -e "/var/lib/apt/lists/$FILE" ]; then
                if [ "$Y" = "" ]; then
@@ -55,7 +55,7 @@
                return
        fi
        X="`md5sum < /var/lib/apt/lists/$FILE` `wc -c < /var/lib/apt/lists/$FILE`"
-       X="`echo "$X" | sed 's/^ *//;s/  */ /g'`"
+       X="`echo "$X" | sed 's/-//;s/^ *//;s/  */ /g'`"
        if [ "$X" != "$Y" ]; then
                echo "$FILE" >>BAD
                echo "BAD"
</example>

<chapt id="sec-tools">Outils de sécurité dans Debian

<p>FIXME: Besoin de plus de contenu

<p>
Debian fournit aussi un certain nombre d'outils de sécurité qui peuvent faire de 
votre Debian une machine dont le but serait de réaliser des tests de sécurité.
Ce but inclut la protection des systèmes d'information au travers de pare-feu
(soit au niveau des paquets, soit au niveau des application), de détection
d'intrusion (basé sur le réseau et sur l'hôte), évaluation des vulnérabilités,
antivirus, réseau privé, etc.

<p>Depuis Debian 3.0 (<em>woody</em>), la distribution propose des logiciels de
chiffrage intégrés dans la distribution principale (<em>main</em>). OpenSSH et
GNU Privacy Guard sont inclus dans l'installation par défaut et le chiffrage
fort est maintenant présent dans les navigateurs web, les serveurs webs, les
bases de données, etc. Une intégration plus poussée du chiffrage est prévue pour
des versions ultérieures. Ces logiciels, à cause de restrictions d'export au
États-Unis, n'étaient pas distribuées avec la distribution principale, mais
inclus seulement dans les sites non-US.

<sect id="vuln-asses">Outils d'évaluation des vulnérabilités à distances

<p>Les outils fournis dans Debian pour effectuer une évaluation des 
vulnérabilités à distance sont&nbsp;:
<footnote>
Certains d'entre eux sont fournis en installant le paquet <package>harden-remoteaudit</package>.
</footnote>
<list>
<item>nessus
<item>raccess
<item>nikto (en remplacement de whisker )
<item>bass (non libre)
<item>satan (non libre)
<!-- currently uploaded but not included
<item>saint (non libre)
<item>sara (non libre)
-->
</list>

<p>De loin, l'outil le plus complet et mis à jour est <package>nessus</package> qui est composé d'un client (<package>nessus</package>) utilisé tel un GUI 
et un serveur (<package>nessusd</package>) qui lance les attaques programmées.
Nessus inclut des vulnérabilités à distance pour un grand nombre de systèmes 
incluant les appareils réseaux, les serveurs ftp, les serveurs www, etc. Les 
dernières versions sont capables même de parcourir un site web et d'essayer de 
découvrir les pages interactives qui sont susceptibles d'être attaquées. Il 
existe également des clients Java et Win32 (non inclus dans Debian) qui peuvent 
être utilisés pour contacter le serveur de management.

<p><package>Whisker</package> est un scanner pour évaluer les vulnérabilités 
de serveur web uniquement et qui inclut aussi des tactiques anti-IDS (la plupart 
ne sont plus des <em>anti-IDS</em>). C'est un des meilleurs scanners pour 
cgi disponible, étant capable de détecter des serveurs web et de lancer un 
assortiment d'attaques contre lui. La base de donnée utilisée pour scanner 
peut être facilement modifiée pour fournir de nouvelles informations.

<p><package>Bass</package> (Bulk Auditing Security Scanner) 
et <package>Satan</package> (Security Auditing Tool for Analysing Networks)
doivent plus être pensés comme des programmes «&nbsp;preuve de concept&nbsp;» que 
comme des outils à utiliser pour réaliser un audit. 
Ils sont anciens et ne sont pas tenus à jour.
Cependant, SATAN a été le premier outil à fournir des tests de vulnérabilités 
de manière simple (GUI) et Bass est toujours un outil de vérification très performant.

<sect>Outils pour parcourir le réseau

<p>
Debian fournit quelques outils pour parcourir des hôtes distants (toutefois 
en n'examinant pas les vulnérabilités). Ces outils sont, dans certains cas,
utilisés tels des scanners de vulnérabilités. Ceci est le premier type d'«&nbsp;attaque&nbsp;»
lancé contre des hôtes distants afin de tenter de déterminer les services 
disponibles. À l'heure actuelle, Debian fournit&nbsp;:

<list>
<item>nmap
<item>xprobe
<item>queso
<item>knocker
<item>isic
<item>icmpush
<item>nbtscan (pour audits NetBIOS)
<item>fragrouter
<item>strobe (du paquet <package>netdiag</package>)
<item>hping2 (<em>Note&nbsp;:</em> plus à jour)
</list>

<!--
Etter cap n'est pas inclus car c'est un outil d'espionnage et non une sonde à distance
-->

<p>
Tandis que <package>queso</package> et <package>xprobe</package> fournissent 
uniquement la détection des systèmes d'exploitations (en utilisant les empreintes
TCP/IP), <package>nmap</package> et <package>knocker</package> font les deux, la 
détection du système d'exploitation et la détection de ports ouverts sur les hôtes 
distants. D'un autre côté, <package>hping2</package> et <package>icmpush</package> peuvent être utilisés pour des techniques d'attaques distantes ICMP.

<p>
Créé spécifiquement pour les réseaux Netbios, <package>nbtscan</package>
peut être utilisé pour scanner des réseaux IP et retrouver des informations 
sur les noms de serveurs ayant le SMB d'activé, ceci incluant&nbsp;: les noms 
d'utilisateurs, les noms des réseaux, les adresses MAC, ...

<p>D'un autre côté, <package>fragrouter</package> peut être utilisé pour tester
des systèmes de détection d'intrusion réseau et voir si le NIDS peut être éludé
par des attaques par fragmentation (de paquets).

<p>FIXME: Vérifier <url id="http://bugs.debian.org/153117" name="Bug
#153117"> (ITP fragrouter) pour voir s'il est inclus.


<p>FIXME: ajouter des informations basés sur
<url id="http://rr.sans.org/linux/debian_laptop.php"
name="Debian Linux Laptop for Road Warriors"> qui décrit comment utiliser Debian
et un ordinateur portable pour parcourir les réseaux sans fils (803.1).

<sect>Audits internes

<p>
De nos jours, seul l'outil <package>tiger</package> utilisé dans Debian peut
être utilisé pour effectuer un audit interne (également appelé boîte blanche 
(white box)) d'hôtes de façon à déterminer si le système de fichiers est 
installé correctement, quels processus sont à l'écoute sur l'hôte, etc...

<sect>Contrôle du code source
<p>
Debian fournit trois paquets qui peuvent être utilisés pour contrôler le code 
source de programmes C/C++ et trouver les erreurs de programmation qui 
peuvent mener à de potentielles fautes de sécurité&nbsp;:
<list>
<item>flawfinder
<item>rats
<item>splint
</list>

<sect id="vpn">Réseaux Privés Virtuels 

<p>Un réseau privé virtuel (VPN) est un groupe de deux ou plusieurs ordinateurs,
habituellement connecté à un réseau privé avec un accès réseau public limité,
qui communiquent de façon sécurisée par un réseau public. Les VPN peuvent
connecter un seul ordinateur à un réseau privé (client-serveur) ou un réseau
local (LAN) distant à un réseau privé (serveur-serveur). Les VPN incluent
souvent l'utilisation de chiffrage, une authentification forte des utilisateurs
ou hôtes distants et des méthodes pour cacher la topologie du réseau privé.

<p>Debian fournit un nombre assez important de paquets pour mettre en place 
des réseaux privés virtuels chiffrés&nbsp;:

<list>

<item><package>vtun</package>
<item><package>tunnelv</package>
<item><package>cipe</package>
<item><package>vpnd</package>
<item><package>tinc</package>
<item><package>secvpn</package>
<item><package>pptp</package>
<item><package>freeswan</package>

</list>

<p>
IPsec (FreeSWAN) est probablement le meilleur choix dans l'ensemble étant donné
qu'il promet d'être fonctionnel avec tout matériel supportant le protocole de
sécurité d'IP, IPsec (RFC 2411). Mais, les autres paquets peuvent vous aider à
obtenir un tunnel sécurisé rapidement. Le protocole de tunnel point à point
(PPTP) est le protocole propriétaire Microsoft pour les VPN. Il est supporté
sous Linux mais il est connu pour avoir de sérieux problèmes de sécurité.

<p>Pour plus d'informations lire le <url
id="http://www.linuxdoc.org/HOWTO/VPN-Masquerade-HOWTO.html"name="VPN-Masquerade
HOWTO"> (couvre IPsec et PPTP), le <url
id="http://www.linuxdoc.org/HOWTO/VPN-HOWTO.html"name="VPN HOWTO">
(couvre PPP à travers SSH), le <url
id="http://www.linuxdoc.org/HOWTO/mini/Cipe+Masq.html" name="Cipe
mini-HOWTO"> et le <url
id="http://www.linuxdoc.org/HOWTO/mini/ppp-ssh/index.html"name="PPP
and SSH mini-HOWTO">.

<sect1>Le tunnel point à point

<p>Si vous désirez fournir un serveur de tunnel pour un environnement mixte (à
la fois pour les systèmes d'exploitations Microsoft et les clients Linux) et
qu'IPsec n'est pas une option (car il n'est fourni que pour Windows 2000 et
Windows XP), vous pouvez utilliser <em>PoPToP</em> (serveur de tunnel point à point),
fourni dans le paquet <package>pptpd</package>.

<p>Si vous voulez utiliser l'authentification et le chiffrage de Microsoft avec
le serveur fourni dans le paquet <package>ppp</package>, veuillez noter la
remarque suivante de la FAQ&nbsp;:

<example>
Il est seulement nécessaire d'utiliser PPP 2.3.8 si vous voulez une
athentification et un chiffrage compatible Microsoft MSCHAPv2/MPPE. La raison à
cela est que le correctif MSCHAPv2/MPPE actuellement fourni (19990813) est
relatif à PPP 2.3.8. Si vous n'avez pas besoin de l'authentification ou du
chiffrage compatible Microsoft, tout source PPP 2.3.x fera l'affaire.
</example>

<p>Vous devez cependant appliquer le correctif noyau fourni par le paquet
<package>kernel-patch-mppe</package> qui fournit le module pp_mppe pour pppd.

<p>Prenez également en compte que le chiffrag dans pptp vous force à stocker les
mots de passer utilisateur en clair et que le protocole MS-CHAPv2 contient des
<url id="http://mopo.informatik.uni-freiburg.de/pptp_mschapv2/"
name="failles de sécurité connues">.


<sect>Infrastructure de clé public (PKI)

<p>L'infrastructure de clé public (PKI) est une architecture de sécurité
introduite pour fournir un niveau de confiance amélioré lors de l'échange
d'informations sur des réseaux non sécurisés. Elle utilise le concept de clés
publics et privés de chiffrage pour vérifier l'identité de l'expéditeur
(signature) et pour garantir la confidentialité (chiffrage).

<p>Lorsque vous vous intéressez aux PKI, vous vous trouvez confronté à une grande variété d'outils&nbsp;:

<list>
<item>Une autorité de certificat (CA) qui peut vous fournir des certificats extérieurs et 
travailler sous une hiérarchie donnée

<item>Un répertoire pour conserver les certificats publics des utilisateurs 

<item>Une base de données (?) pour maintenir les listes des certificats révoqués (CRL)

<item>Des périphériques interopérant avec le CA pour éditer
des cartes à puce/jetons USB/n'importe quoi d'autre pour stocker les certificats
en sécurité

<item>Les applications prévues pour fonctionner avec des certificats de
confiance peuvent utiliser des certificats distribués par
des CA pour engager une communication chiffrée et vérifier les certificats
délivrés contre un CRL (pour l'authentification et les solutions de signature
complète unique)

<item>Une autorité estampillée pour les documents signés numériquement

<item>Une console de gestion permettant une gestion correcte de tout cela
(génération de certificat, contrôle de liste de révocation, etc...)

</list>

<p>Debian GNU/Linux contient des paquets logiciels pour vous aider à résoudre
ces problèmes de PKI. Cela inclut <prgn>Openssl</prgn> (pour la génération
de certificats), <prgn>OpenLDAP</prgn> (comme répertoire pour maintenir les certificats), <prgn>gnupg</prgn>
et <prgn>freeswan</prgn> (avec le support standard X.509). Cependant, le système
d'exploitation ne fournit pas (comme dans la version Woody, Debian 3.0)
d'autorité de délivrance de certificat librement disponible comme pyCA, <url
id="http://www.openca.org" name="OpenCA"> ou les exemples CA d'OpenSSL. 
Pour plus d'information, reportez-vous au <url
id="http://ospkme ibook.sourceforge.net/" name="livre Open PKI">.

<sect>Infrastructure SSL

<p>Debian fournit quelques certificats SSL avec la distribution pour qu'ils
puissent être installés localement. Ils sont disponibles dans le paquet
<package>ca-certificates</package>. Ce paquet fournit un dépôt central des
certificats qui ont été soumis à Debian et approuvé (c.-à-d. vérifiés) par le
responsable du paquet, cela est utile pour toutes les applications OpenSSL qui
vérifient des connexion SSL.

<p>FIXME: lire debian-devel pour voir s'il y a quelque chose à ajouter à cela.

<sect>Outils antivirus 

<p>
Il n'y a pas beaucoup d'outils antivirus dans Debian GNU/Linux, probablement 
car les utilisateurs de GNU/Linux ne sont pas submergés réellement par 
les virus. Le modèle de sécurité UN*X fait une distinction entre les processus
privilégiés (root) et les processus appartenant aux utilisateurs, c'est pourquoi
un exécutable «&nbsp;hostile&nbsp;» reçu ou créé par un utilisateur et ensuite
exécuté par celui-ci ne peut pas «&nbsp;infecter&nbsp;» ou manipuler de tout
autre manière le système entier. Il y a eu, toutefois, des vers et virus pour GNU/Linux même 
s'il n'y pas (encore) eu de virus qui se soient étendus sur les 
distributions Debian. Dans tous les cas, les administrateurs peuvent 
vouloir de mettre en place des passerelles antivirus pour se protéger contre les
virus affectant d'autres systèmes plus vulnérables dans leur réseau.

<p>Debian GNU/Linux fournit à l'heure actuelle les outils suivants pour mettre 
en place des environnements antivirus&nbsp;:
<list>
<item><url id="http://packages.debian.org/sanitizer" name="sanitizer">, un outil
qui utilise le paquet <package>procmail</package> qui peut filtrer les
attachements de courrier, bloquer les attachements selon leurs noms de fichier
et plus.
<item><url id="http://packages.debian.org/amavis-postfix" name="amavis-postfix">, un
script qui fournit une interface depuis un MTA vers un ou plusieurs scanners commerciaux de 
virus (ce paquet est seulement construit pour le MTA <prgn>postfix</prgn>).
<item><package>scannerdaemon</package>, un démon écrit en Java qui accepte les
connexions entrantes pour scanner les fichiers pour les virus.
</list>

<p>
Comme vous pouvez le voir, Debian ne fournit pas à l'heure actuelle un logiciel 
antivirus. Il existe, toutefois, des projets de logiciels antivirus qui pourront 
dans le futur être inclus dans des versions de Debian&nbsp;:

<list>
<item>
<url id="http://sourceforge.net/projects/openantivirus/" name="Open Antivirus">
(voir <url id="http://bugs.debian.org/150698" name="Bug #150698 (ITP oav-scannerdaemon"> 
et <url id="http://bugs.debian.org/150695" name="Bug #150695 (ITP oav-update">).

<item><url id="http://clamav.elektrapro.com/" name="Clam Antivirus">

<item>
<url id="http://sourceforge.net/projects/jvirus/" name="jvirus">

<item><url id="http://www.sourceforge.net/projects/amavis" name="Amavis Next
Generation">, un scanner de virus de courrier qui s'intègre à votre MTA et
supporte plusieurs moteurs de scan de virus (voir <url
id="http://bugs.debian.org/154294" name="Bug #154294">).

</list>

<p><!-- FIXME: Je ne trouve pas ce paquet dans Debian, peut-être oav-update le
 remplace-t-il ? -->Il y a également un paquet <package>virussignatures</package>
package, qui fournit des signatures pour tous les paquets, ce paquet fournit un
script qui télécharge les dernières signatures de virus depuis <url
id="http://www.openantivirus.org/latest.php">.

<p>FIXME: Vérifier pour déterminer quels paquets sont disponibles comme
antivirus. Est-ce que clamav est disponible&nbsp;? (il semble y avoir des
paquets Debian).
<p>FIXME: Vérifier si scannerdaemon est le même que le démon scanner antivirus
open (lire les ITPs).

<p>
Cependant, Debian ne fournira <em>jamais</em> des logiciels antivirus commerciaux tels que&nbsp;:
<url id="http://www.pandasoftware.com/com/linux/linux.asp" name="Panda Antivirus">,
<url id="http://www.nai.com/naicommon/buy-try/try/products-evals.asp" name="NAI Netshield (uvscan)">,
<url id="http://www.sophos.com/" name="Sophos Sweep">,
<url id="http://www.antivirus.com/products/" name="TrendMicro Interscan"> ou
<url id="http://www.ravantivirus.com" name="RAV">.
Pour plus d'infos, voir la <url id="http://www.computer-networking.de/~link/security/av-linux_e.txt"
name="mini-FAQ logiciels antivirus pour Linux">. Cela ne veut pas dire que ces
logiciels ne peuvent pas être installés correctement sur un système Debian.

<p>Pour plus d'informations sur la façon de mettre en place un système de
détection des virus, veuillez lire l'article de Dave Jones <url
id="http://www.linuxjournal.com/article.php?sid=4882" name="Construire un
	    système de détection des virus des courriels pour votre réseau">.

<sect id="gpg-agent">Agent GPG

<p>Il est très courant de nos jours de signer numériquement (et parfois de
chiffrer) des courriels. Vous pouvez, par exemple, trouver que de nombreuses
personnes participant sur des listes de diffusion signent leur courriel de la
liste. Les signatures de clé public sont actuellement le seul moyen de vérifier
qu'un courriel a été envoyé par l'expéditeur et non par une autre personne.

<p>Debian GNU/Linux fournit un certain nombre de clients de messagerie avec des
fonctionnalité de signature de courriels intégrés qui interagissent soit avec
<package>gnupg</package> ou avec <package>pgp</package>&nbsp;:

<list>
<item><package>Evolution</package>,
<item><package>mutt</package>,
<item><package>kmail</package>,
<item><package>sylpheed</package>. Selon la façon dont évolue la version stable
de ce paquet, vous pouvez avoir besoin d'utilise la <em>version dernier
cri</em>, <package>sylpheed-claws</package>.

<item><package>gnus</package>, qui, lorsqu'il est installé avec le paquet
<package>mailcrypt</package>, est une interface <prgn>emacs</prgn>
à <prgn>gnupg</prgn>.

<item><package>kuvert</package>, qui fournit cette fonctionnalité indépendamment
de votre client de messagerie choisi en interagissant avec l'agent de transport
de courrier (MTA).

</list>

<p>Les serveurs de clé vous permettent de télécharger des clés publiques publiées
pour pouvoir vérifier des signatures. Un tel serveur est <url
id="http://wwwkeys.pgp.net">. <package>gnupg</package> peut récupérer
automatiquement des clés publics qui ne sont pas déjà dans votre porte-clés
(keyring) public. Par exemple, pour configurer <prgn>gnupg</prgn> pour utiliser
le serveur de clés ci-dessus, éditez le fichier <file>~/.gnupg/options</file> et
ajoutez la ligne suivante&nbsp;:

<footnote>
Pour plus d'exemples sur la façon de configurer <prgn>gnupg</prgn>, consultez
<file>/usr/share/doc/mutt/examples/gpg.rc</file>.
</footnote>
<example>
keyserver wwwkeys.pgp.net
</example>

<p>La plupart des serveurs de clés sont liés afin que, quand votre clé publique
est ajoutée à un serveur, l'addition soit propagée à tous les autres serveurs de
clés publiques. Il existe également un paquet Debian GNU/Linux
<package>debian-keyring</package> fournissant les clés publiques des
développeurs Debian. Les portes-clés <prgn>gnupg</prgn> sont installés dans
<file>/usr/share/keyrings/</file>.

<p>Pour plus d'informations&nbsp;:

<list>

<item><url ID="http://www.gnupg.org/faq.html" name="GnuPG FAQ">.

<item><url ID="http://www.gnupg.org/gph/en/manual.html" name="GnuPG
Handbook">.

<item><url
ID="http://www.dewinter.com/gnupg_howto/english/GPGMiniHowto.html"
name="GnuPG Mini Howto (English)">.

<item><url ID="http://www.uk.pgp.net/pgpnet/pgp-faq/"
name="comp.security.pgp FAQ">.

<item><url ID="http://www.cryptnet.net/fdp/crypto/gpg-party.html"
name="Keysigning Party HOWTO">.

</list>

<chapt>Avant la compromission
<!-- A traduire compromise!. C'est Ok! jpg -->

<sect id="keep-up-to-date">Mettre à jour le système en permanence

<p>Vous devriez effectuer des mises à jour de sécurité fréquemment. La grande
majorité des exploits résulte de failles connues qui n'ont pas été bouchés à
temps, comme l'explique ce <url
id="http://www.cs.umd.edu/~waa/vulnerability.html" name="papier par
Bill Arbaugh"> (presenté lors du Symposium 2001 IEEE sur la sécurité et la
confidentialité). Les mises à jour sont décrites dans <ref
id="security-update">.

<sect1>Vérifiez manuellement quand des mises à jour de sécurité sont disponibles
<p>Debian dispose d'un outil spécifique pour déterminer si un système a besoin
d'être mis à jour (voir Tiger ci-dessous), mais beaucoup d'utilisateurs
veulement simplement vérifier si des mises à jour de sécurité sont disponibles
pour leur système.

<p>Si vous avez configuré votre système comme décrit dans
<ref id="security-update">, vous avez simplement à faire&nbsp;:

<example>
# apt-get update
# apt-get upgrade -s
</example>

<p>La première ligne téléchargera la liste des paquets disponibles depuis vos
sources de paquets configurées. L'option <tt>-s</tt> effectuera une simulation
d'exécution, c'est-à-dire, qu'elle ne va <em>pas</em> télécharger ou installer
de paquets, mais qu'elle va plutôt vous dire quels paquets seraient téléchargés
et/ou installés. À partir de cette sortie, vous pouvez en déduire quels paquets
ont été corrigés dans debian et sont disponibles comme mise à jour de sécurité.
Par exemple&nbsp;:
<example>
# apt-get upgrade -s
Reading Package Lists... Done
Building Dependency Tree... Done
2 packages upgraded, 0 newly installed, 0 to remove and 0  not upgraded.
Inst cvs (1.11.1p1debian-8.1 Debian-Security:3.0/stable)
Inst libcupsys2 (1.1.14-4.4 Debian-Security:3.0/stable)
Conf cvs (1.11.1p1debian-8.1 Debian-Security:3.0/stable)
Conf libcupsys2 (1.1.14-4.4 Debian-Security:3.0/stable)
</example>
<p>Dans cet exemple, vous pouvez voir que le système a besoin d'être mis à jour
avec des nouveaux paquets cvs et cupsys qui sont récupérés depuis l'archive de
mises à jour de sécurité de <em>woody</em>. Si vous voulez comprendre pourquoi
de tels paquets sont nécessaires, vous devriez aller à
<url id="http://security.debian.org"> et vérifier quelles Alerts de sécurité
Debian (DSA) récentes ont été publiées concernant ces paquets. Dans ce cas, les
DSA concernées sont
<url id="http://www.debian.org/security/2003/dsa-233" name="DSA-233"> (pour cvs)
et
<url id="http://www.debian.org/security/2003/dsa-232" name="DSA-232"> (pour cupsys)

<sect1 id="cron-apt">Vérifiez automatiquement les mises à jour avec cron-apt
<p>Une autre méthode pour des mises à jour de sécurité automatique est
l'utilisation de <package>cron-apt</package>. Ce paquet fournit un outil pour
mettre à jour le système à intervalles réguliers (en utilisant une tâche cron).
Par défaut, il va simplement mettre à jour la liste des paquets et télécharger
les nouveaux paquets. Il peut également être configuré pour envoyer un courriel
à l'administrateur système. 
<p>Notez que vous pouvez vouloir vérifier la version de distribution comme
décrant dans <ref id="check-releases">, si vous avez l'intention de mettre à
jour automatiquement votre système (même si vous ne faites que télécharger les
paquets). Sinon, vous ne pouvez pas être certain que les paquets téléchargés
proviennent réellement d'une source de confiance.

<sect1>Utilisez Tiger pour vérifier automatiquement les mises à jour de sécurité

<p>Si vous recherchez un outil pour vérifier rapidement et donner un compte
rendu sur les failles de sécurité d'un système, essayez le paquet
<package>tiger</package>. Ce paquet est un ensemble de scripts shell Bourne, de
programmes C et de fichiers de données utilisés pour effectuer des audits de
sécurité. Le paquet Debian GNU/Linux dispose d'améliorations supplémentaires
orientés vers la distribution Debian, en fournissant plus de fonctionnalités que
les scripts Tiger fourni par TAMU (ou même TARA, une version de tiger distribuée
par ARSC). Voir le fichier README.Debian et la page de manuel <manref section="8" name="tiger">
pour plus d'informations.

<p>L'une de ces améliorations est le script <tt>deb_checkadvisories</tt>. Ce
script prend une liste de DSA et la vérifie par rapport à la base de paquets
installés, en indiquant tout paquets qui serait vulnérables selon l'équipe de
sécurité Debian. Cela est une approche légèrement différente et plus générale
que celle implémentée par le script Tiger <tt>check_signatures</tt> qui vérifie
les MD5sums de programmes vulnérables connus.

<p>Comme Debian ne fournit pas actuellement une liste de MD5sums des programmes
vulnérables connus (utilisée par certains autres systèmes d'exploitation comme Sun
Solaris), l'approche <em>vérifier-par-rapport-aux-DSA</em> est utilisée.
L'approche DSA et l'approche MD5sums souffrent toutes deux du problème que les
signatures doivent mises à jour régulièrement.

<p>Cela est actuellement résolu en créant de nouvelles version du paquet Tiger,
mais le responsable du paquet pourrait ne pas faire une nouvelle version à
chaque fois qu'une DSA est annoncée. Un ajout agréable, qui n'est pas encore
implémenté, serait de faire cela de façon proactive. C'est-à-dire, de
télécharger les DSA du web, de faire la liste et d'exécuter la vérification. Les
DSA sont actuellement mises à jour depuis la mise à jour CVS locale du
responsable des sources WML utilisés pour construire <url
id="http://security.debian.org"> (le serveur web).

<p>Un programme pour analyser les DSA publiées, soit reçues par courriel ou
disponible sur security.debian.org et qui générerait le fichier utilisé par
'deb_checkadvisories' pour confirmer les failles serait apprécié. Envoyez un
rapport de bogue pour <package>tiger</package>.

<p>La vérification mentionnée est exécuté par la configuration de programme
standard une fois installé (voir <file>/etc/tiger/cronrc</file>)&nbsp;:

<example>
# Vérifie les mesures de sécurité Debian chaque jour à 1h00
#
1 * *   deb_checkmd5sums deb_nopackfiles deb_checkadvisories
#
</example>

<p>Il y a une vérification supplémentaire que vous pourriez vouloir ajouter, qui
ne fait pas partie des scripts standard <prgn>cron</prgn> scripts. Cette
vérification est le script <tt>check_patches</tt>, qui fonctionne de la façon suivante&nbsp;:

<list>

<item>exécuter <tt># apt-get update</tt>

<item>vérifer si de nouveaux paquets sont disponibles

</list>

<p>Si vous utilisez un système <em>stable</em> et que vous ajoutez la ligne de source
<prgn>apt</prgn> pour security.debian.org à votre fichier
<file>/etc/apt/sources.list</file> (comme décrit dans <ref
id="security-update">), ce script sera capable de vous dire s'il y a de nouveaux
paquets que vous devez installer. Comme les seuls paquets modifiés dans cette
configuration sont les mises à jour de sécurit, vous pourriez avoir exactement
ce que vous désirez.

<p>Bien sûr, ceci ne fonctionnera par si vous utilisez <em>testing</em>
ou <em>sid/unstable</em>, car actuellement, les nouveaux paquets sont
probablement beaucoup plus que des mises à jour de sécurité.

<p>Vous pouvez ajouter ce script aux vérifications effectuées par la tâche <prgn>cron</prgn>
(dans le fichier de configuration ci-dessus) et <prgn>tigercron</prgn> vous
enverra un courrier (à l'expéditeur désigné par <tt>Tiger_Mail_RCPT</tt> dans le
fichier <file>/etc/tiger/tigerrc</file>) les nouveaux paquets&nbsp;:

<example>
# Vérifie les mesures de sécurité Debian chaque jour à 1h00
#
1 * *   deb_checkmd5sums deb_nopackfiles check_patches
#
</example>

<sect1>D'autres méthodes de mises à jour de sécurité

<P>Vous pourriez également regarder du côté de 
<url id="http://therapy.endorphin.org/secpack/" name="secpack"> qui est un
programme non officiel pour effectuer des mises à jour de sécurité depuis
security.debian.org avec des vérifications de signatures écrit par Fruhwirth
Clemens.

<sect1>Évitez d'utiliser la branche unstable

<p>À moins que vous ne vouliez dédier du temps à corriger les paquets vous-même
quand une faille survient, vous ne devriez <em>pas</em> utiliser la branche
unstable de Debian pour des systèmes de production. La raison principale à cela
est qu'il n'y a pas de mises à jour de sécurité pour <em>unstable</em> (voir <ref
id="sec-unstable">).

<p>Le fait est que certains problèmes de sécurité peuvent apparaître dans
unstable et <em>pas</em> dans la distribution <em>stable</em>. Cela est dû aux
nouvelles fonctionnalités ajoutés constamment aux applications fournies, ainsi
qu'aux nouvelles applications incluses qui peuvent ne pas encore avoir été
testées en profondeur.

<p>Pour effectuer des mises à jour de sécurité dans la branche <em>unstable</em>,
il se peut que vous deviez faire des mises à jour complètes vers de nouvelles
versions (ce qui peut mettre à jour beaucoup plus que les paquets touchés). Bien
qu'il y ait des exceptions, les correctifs de sécurité sont habituellement
rétro-portés dans la branche <em>stable</em>. L'idée principale étant qu'entre
les mises à jour, <em>aucun nouveau code</em> ne doit être ajouté, seulement des
correctifs pour des problèmes importants.

<sect1>Évitez d'utiliser la branche testing

<p>Si vous utilisez la branche <em>testing</em>, il y a plusieurs problèmes que
vous devez prendre en compte concernant la disponibilité des mises à jour de
sécurité&nbsp;:

<list>

<item>Quand un correctif de sécurité est préparé, les paquets sont préparés pour
<em>unstable</em> et le correctif est rétro-porté dans <em>stable</em>
(car stable est habituellement en retard de quelques versions mineures ou
majeures). Les paquets de la distribution <em>stable</em> sont testés plus en
profondeur que ceux d'<em>unstable</em> car ces derniers peuvent fournir la
dernière version amont.

<item>Les mises à jour de sécurité sont disponibles immédiatement pour les deux
branches (mais ne sont pas encore dans la branche testing).

<item>Su aucun (nouveau) bogue n'est détecté dans la version <em>unstable</em>
de paquet, il est déplacé dans <em>testing</em> après plusieurs jours
(habituellement plus d'une semaine). Cependant, cela dépend de l'état de
publication de la distribution.

</list>

<sect1>Mises à jour automatiques dans un système Debian GNU/Linux

<p>Tout d'abord, les mises à jour automatiques ne sont complètement recommandées
car les administrateurs devraient vérifier les DSA et comprendre l'imact de
toute mise à jour de sécurité donnée.

<p>Si vous voulez mettre à jour votre système automatiquement, vous
devriez&nbsp;:

<list>

<item>Configurer <prgn>apt</prgn> pour que les paquets que vous ne voulez pas
mettre à jour restent à leur version actuelle, soit avec
la fonctionnalité de <em>pinning</em> d'<prgn>apt</prgn>, soit en les marquant comme
<em>hold</em> (à garder) avec <prgn>dpkg</prgn> ou <prgn>dselect</prgn>.

<p>Pour conserver les paquets à une version donnée, vous devez éditer
<file>/etc/apt/preferences</file> (voir <manref section="5"
name="apt_preferences">) et ajouter&nbsp;:

<example>
  Package: *
  Pin: release a=stable
  Pin-Priority: 100
</example>
<p>FIXME: vérifier si cette configuration est correcte.

<item>Utiliser soit cron-apt comme décrit dans <ref id="cron-apt"> et activez-le
pour installer les paquets récupérés, soit ajouter une entrée <prgn>cron</prgn>
vous-même pour que la mise à jour soit exécutée tous les jours, par exemple&nbsp;:

<example>
  apt-get update && apt-get -y upgrade
</example>

L'option <tt>-y</tt> fera qu'<prgn>apt</prgn> supposera une réponse
«&nbsp;yes&nbsp;» pour toutes les questions qui pourraient être posées lors de
la mise à jour. Dans certains cas, vous pouvez vouloir utiliser l'option
<tt>--trivial-only</tt> à la place de <tt>--assume-yes</tt> (qui est équivalent
à <tt>-y</tt>).

<footnote>Vous pouvez aussi vouloir utiliser l'option <tt>--quiet</tt>
(<tt>-q</tt>) pour réduire la sortie de <prgn>apt-get</prgn>, ce qui empêchera
la génération de toute sortie si aucun paquet n'est installé.</footnote>

<item>Configurer <prgn>cron</prgn> pour que <prgn>debconf</prgn> ne demande
aucune entrée pendant les mises à jour, ainsi, elles sont faites non
interactivement. <footnote>Notez que certains paquets peuvent <em>ne pas</em>
utiliser <prgn>debconf</prgn> et les mises à jour seront bloquées car les
paquets demanderont des entrées de la part de l'utilisateur pendant la
configuration.</footnote>

<item>Vérifier les résultats de l'exécution de <prgn>cron</prgn> qui seront
envoyées au superutilisateur (sauf si la variable d'environnement
<tt>MAILTO</tt> est changée dans le script).

</list>

<p>Une alternative plus sure peut être d'utiliser l'option <tt>-d</tt> (ou
<tt>--download-only</tt>) qui téléchargera les paquets nécessaires, mais ne les
installera pas. Puis, si l'exécution de <prgn>cron</prgn> affiche que le système
doit être mis à jour, cela peut être fait manuellement.

<p>Pour accomplir ces tâches, le système doit être configuré correctement pour
télécharger les mises à jour de sécurité comme décrit dans <ref
id="security-update">.

<p>Cependant, cela n'est pas recommandé pour <em>unstable</em> sans analyse
attentive, car vous pourriez placer votre système dans un état inutilisable si
un bogue sérieux s'introduit dans un paquet important et est installé sur votre
système. <em>Testing</em> est un peu mieux <em>sécurisé</em> concernant ce
problème car les bogues sérieux ont une meilleure chance d'être détecté avant
que le paquet ne soir placé dans la branche testing (cependant, vous pouvez
n'avoir <em>aucune</em> mise à jour de sécurité disponible de quelque façon).

<p>Si vous avez une distribution mixte, c'est-à-dire, une installation de
<em>stable</em> avec des paquets mis à jour de <em>testing</em> ou
d'<em>unstable</em>, vous pouvez jouez avec les préférences de pinning ainsi
qu'avec l'option <tt>--target-release</tt> d'<prgn>apt-get</prgn> pour ne mettre
à jour <em>que</em> les paquets que vous avez mis à jour.
<footnote>C'est un problème courant car beaucoup d'utilisateurs veulent
conserver un système stable tout en mettant à jour certains paquets avec
<em>unstable</em> pour obtenir les dernières fonctionnalités. Ce besoin provient
de l'volution plus rapide de certains projets que le temps entre les
distributions <em>stable</em> de Debian.</footnote>

<sect id="intrusion-detect">Mise en place d'un système de détection d'intrusion

<p>
Debian inclut certains outils pour la détection d'intrusion qui sont utiles
pour défendre votre système local ou pour défendre d'autres systèmes dans 
le même réseau. Ce type de défense est important si le système est très critique
ou si vous êtes vraiment paranoïaque. Les approches les plus communes dans la
détection d'intrusion sont la détection d'anomalie statistique et la détection
de correspondance de modèle. <!-- pattern-matching -->

<p>
Soyez toujours aux aguets de manière à réellement améliorer la sécurité 
du système avec n'importe lequel de ces outils, vous devez avoir un 
mécanisme alerte+réaction. Donc, n'utilisez pas de système de détection 
d'intrusion si vous n'avertissez personne.<!--  (ne perdez pas de temps à configurer  -->
<!-- des choses que vous n'utiliserez pas par la suite) -->

<p>
Quand une attaque particulière est détectée, la plupart des outils de détection
d'intrusion vont soit loguer l'événement avec <prgn>syslogd</prgn>,
soit envoyer des courriers à l'utilisateur root (le destinataire du courrier est
habituellement configurable).
Un administrateur doit configurer convenablement les outils afin que de fausses alertes 
ne soient pas envoyées. Les alertes peuvent également indiquer une attaque en cours et ne seraient
pas très utiles un jour plus tard, puisque l'attaque pourrait déjà alors avoir été
couronnée de succès. Assurez-vous donc qu'une règle de sécurité correcte a été mise en place
vis-à-vis des alertes et que les mécanismes techniques pour l'implémenter sont en place.

<p>
Une source d'information intéressante est la
<url id="http://www.cert.org/tech_tips/intruder_detection_checklist.html"
name="checklist de détection d'intrusion du CERT">.

<sect1>Détection d'intrusion provenant du réseau

<p>Les outils de détection d'intrusions provenant du réseau scrutent le trafic
sur un segment de réseau et utilisent cette information comme source de données.
Spécifiquement, les paquets du réseau sont examinés et ils sont vérifiés pour
voir s'ils correspondent à une certaine signature.

<p><package>Snort</package> est un renifleur flexible de paquets ou un logueur
qui détecte les attaques selon un dictionnaire de signature d'attaques. Il détecte une variété 
d'attaques et de sondes, tels que des débordements de capacité, les scans dissimulés 
de ports, les attaques CGI, les sondes SMB, et bien d'autres. <prgn>Snort</prgn>
dispose également d'une capacité
d'alerte en temps réel. Vous pouvez utiliser <prgn>snort</prgn> pour un
certain nombre d'hôtes de votre réseau ainsi que pour votre propre hôte. C'est un
outil qui peut être installé sur n'importe quel routeur
pour garder un &oelig;il sur le réseau. Installez-le simplement avec
<tt>apt-get install snort</tt>, suivez les questions et regardez les logs.

<p>
Le paquet <package>snort</package> de Debian est activé avec de nombreuses vérifications de sécurité 
activées par défaut. Toutefois, vous devriez prendre le temps de 
personnaliser l'installation pour prendre en compte les services que vous
utilisez sur votre système. Vous pouvez très bien aussi demander des vérifications
supplémentaires spécifiques à ces services.

<p>Il y a d'autres plus simples outils qui peuvent être utilisés pour détecter
les attaques réseaux. <package>portsentry</package> est un autre paquet intéressant
qui peut vous informer lorsqu'un scan de votre réseau est effectué sur votre site.
D'autres outils comme que<package>ippl</package> ou
<package>iplogger</package> peuvent aussi détecter certaines attaques IP (TCP et ICMP),
même s'ils ne fournissent pas de techniques avancées pour détecter 
les attaques réseaux (comme le ferait <prgn>snort</prgn>).

<p>Vous pouvez testez chacun de ces outils avec le paquet Debian
<package>idswakeup</package>, un générateur de fausses alertes et qui inclut un
grand nombre de signature d'attaques communes.

<sect1>La détection d'intrusion fondée sur hôte 

<p>La détection d'intrusion fondée sur l'hôte implique de charger des logiciel
sur le système à étudier qui utilise les fichiers de journaux et/ou les
programmes d'audit du système comme source de données. Il scrute les processus
suspects, scrute les accès d'hôtes et peut même scruter les changements aux
fichiers critiques du système.

<p><package>Tiger</package> est un ancien outil de détection d'intrusion qui
a été porté sous Debian depuis la distribution woody. <prgn>Tiger</prgn>
fournit un ensemble de vérifications sur des problèmes communs liés aux failles de sécurité, il vérifie la 
force des mots de passe, les problèmes du système de fichiers, les processus de
communications et d'autres façons par lesquelles root peut être compromis. Ce
paquet inclut de nouvelles vérifications de sécurité spécifiques à Debian
comprenant&nbsp;: les vérifications de MD5sums des fichiers installés, les
emplacements de fichiers n'appartenant pas aux paquets et l'analyse des
processus locaux à l'écoute. L'installation par défaut configure
<prgn>tiger</prgn> pour être exécuté chaquet jour, générant un compte-rendu qui
est envoyé au super-utilisateur à propos des compromis possibles du système.

<p>Des outils d'analyse de journaux comme <package>logcheck</package> peuvent
également être utilisés pour détecter des tentatives d'intrusions. Voir <ref
id="custom-logcheck">.

<p>De plus, des paquets scrutant l'intégrité du système de fichiers (voir <ref
id="check-integ">) peuvent être utiles dans la détection d'anomalies dans un
environnement sécurisé. Il est très probable qu'une intrusion effective
modifiera certains fichiers du système de fichiers locaux pour court-circuiter
les règles de sécurité locales, installer un cheval de Troie ou créer des
utilisateurs. De tels événements peuvent être détectés avec les vérificateurs
d'intégrité du système de fichiers.

<sect>Éviter les rootkits
<p>

<sect1 id="LKM">Loadable Kernel Modules (LKM)

<p>
Les LKM (<em>Loadable Kernel Modules</em> ou modules de noyau chargeables) sont
des fichiers contenant des composants de noyau chargeables dynamiquement
utilisés pour étendre les fonctionnalités de noyau. Le principal avantage
d'utiliser des modules est la possibilité d'ajouter des périphériques
additionnels comme une carte réseau ou une carte son sans avoir à recompiler le
noyau entièrement. Cependant certains pirates peuvent utiliser les LKMs 
pour les rootkits (knark et adore) afin d'installer des portes 
dérobées sur des systèmes GNU/Linux.

<p>
Les portes dérobées des LKM peuvent être plus sophistiquées et moins détectables
que des rootkits traditionnels. Ils peuvent cacher des proce, des fichiers, 
répertoires et même des connexions sans modifier les codes 
sources des binaires.
Par exemple, un LKM <!-- malicious  --> peut forcer le noyau à cacher des
processus spécifiques dans <file>procps</file> pour que même une bonne copie du
binaire <prgn>ps</prgn> ne puisse lister des informations exactes à propose des
processus actuels du système.

<sect1>Détection des rootkits

<p>
Il existe deux approches pour défendre votre système contre les rootkits LKM,
une défense proactive et une défense réactive. La détection peut être simple et
sans douleur ou difficile et usante selon la mesure que vous choisissez.

<sect2 id="proactive">Défense proactive

<p>
L'avantage de ce type de défense est qu'elle prévient des dommages que 
pourrait entraîner un rootkit au système. Une telle stratégie est de "les
attraper en premier", c'est-à-dire, de charger un LKM bien défini afin de protéger
le système d'autres LKM infectés. Une deuxième stratégie consiste à retirer la
fonctionnalité de chargement des modules du noyau lui-même. Notez, cependant,
qu'il existe des rootkits qui peuvent fonctionner même dans ce cas, il en existe
certains qui altèrent directement <file>/dev/kmem</file> (la mémoire du noyau)
pour se rendre indétectables.

<p>
Debian GNU/Linux fournit quelques paquets qui peuvent être utilisés pour mettre
en place une défense proactive&nbsp;:

<list>

<item> <package>kernel-patch-2.4-lsm</package> - LSM est le cadre de projet Linux 
Security Modules.

<item> <package>lcap</package> - Une interface utilisateur agréable pour retirer
les <em>fonctionnalités</em> (contrôle d'accès basé sur le noyau) dans le noyau, 
rendant le système plus sécurisé. Par exemple, exécuter <tt>lcap
CAP_SYS_MODULE</tt>
<footnote>
Il existe 28&nbsp;fonctionnalités incluant&nbsp;:
<tt>CAP_BSET</tt>,
<tt>CAP_CHOWN</tt>,
<tt>CAP_FOWNER</tt>,
<tt>CAP_FSETID</tt>,
<tt>CAP_FS_MASK</tt>,
<tt>CAP_FULL_SET</tt>,
<tt>CAP_INIT_EFF_SET</tt>,
<tt>CAP_INIT_INH_SET</tt>,
<tt>CAP_IPC_LOCK</tt>,
<tt>CAP_IPC_OWNER</tt>,
<tt>CAP_KILL</tt>,
<tt>CAP_LEASE</tt>,
<tt>CAP_LINUX_IMMUTABLE</tt>,
<tt>CAP_MKNOD</tt>,
<tt>CAP_NET_ADMIN</tt>,
<tt>CAP_NET_BIND_SERVICE</tt>,
<tt>CAP_NET_RAW</tt>,
<tt>CAP_SETGID</tt>, 
<tt>CAP_SETPCAP</tt>,
<tt>CAP_SETUID</tt>,
<tt>CAP_SYS_ADMIN</tt>,
<tt>CAP_SYS_BOOT</tt>,
<tt>CAP_SYS_CHROOT</tt>,
<tt>CAP_SYS_MODULE</tt>,
<tt>CAP_SYS_NICE</tt>,
<tt>CAP_SYS_PACCT</tt>,
<tt>CAP_SYS_PTRACE</tt>,
<tt>CAP_SYS_RAWIO</tt>,
<tt>CAP_SYS_RESOURCE</tt>,
<tt>CAP_SYS_TIME</tt> et
<tt>CAP_SYS_TTY_CONFIG</tt>. Elles peuvent être toutes désactivées pour
renforcer votre noyau.
</footnote>
enlèvera des fonctionnalités de chargement des modules (même pour l'utilisateur root).
<footnote>
Vous n'avez pas besoin d'installer <package>lcap</package> pour faire cela, mais
c'est plus facile que de configurer <file>/proc/sys/kernel/cap-bound</file> à la main.
</footnote>
Pour plus d'informations sur ces fonctionnalités, vous pouvez vérifier la
section de Jon Corbet <url id="http://lwn.net/1999/1202/kernel.php3" 
name="Kernel development">  sur LWN (décembre 1999).

</list>

<p>
Si vous n'avez pas l'utilité de toutes ces fonctionnalités de noayau sur votre 
système GNU/Linux, vous pouvez vouloir désactiver le support des modules 
chargeables lors de la configuration du noyau. Pour désactiver le support des
modules chargeables, positionnez simplement CONFIG_MODULES=n lors de l'étape de
configuration de construction de votre noyau ou dans le fichier
<file>.config</file>. Cela prévient des rootkits LKM mais
vous ne pourrez plus utiliser les modules avec votre noyau GNU/Linux. Faites 
attention que la désactivation des modules peut surcharger le noyau, rendant le
support du chargement nécessaire.

<sect2>Défense réactive 

<p>
L'avantage d'une défense réactive est qu'elle représente une faible surcharge
au niveau des ressources systèmes. Elle fonctionne en comparant la table des
appels systèmes avec une copie sûre d'un fichier du disque,
<file>System.map</file>. Bien sûr, une défense réactive n'avertira
l'administrateur qu'après la compromission du système.

<!-- AA rootkit ? traduction officielle ? kit d'intrusions furtifs ? -->
<p>La détection des rootkits dans Debian peut être accomplie avec le paquet
<package>chkrootkit</package>. Le programme <url name="Chkrootkit"
id="http://www.chkrootkit.org"> cherche des signes de présence
de plusieurs rootkits connus sur le système local, mais ce n'est pas un test
définitif.

<p>Vous pouvez aussi utiliser
<url name="KSTAT" id="http://s0ftpj.org/en/site.html"> (Kernel Security Therapy Anti
Trolls) du groupe S0ftproject.
KSTAT vérifie la zone mémoire du kernel (<file>/dev/kmem</file>) pour des
informations au sujet de l'hôte cible pour aider l'administrateur système à
trouver et supprimer des LKM <!-- malicious -->.


<sect>Idées géniales/paranoïaques &mdash; ce que vous pourriez faire

<p><!-- AA duh ? -->
C'est probablement la section la plus instable et la plus amusante, car j'espère
que quelques unes des idées «&nbsp;bah, ça semble dingue&nbsp;» pourraient être réalisées.
Vous trouverez ci-dessous certaines idées pour améliorer la sécurité &mdash; suivant votre point de vue
vous les qualifierez de géniales, paranoïaques, folles ou inspirées.<!--  &mdash; pour -->
<!-- augmenter votre sécurité rapidement mais vous n'en sortirez pas indemne. -->

<list>

<item>S'amuser avec PAM (Pluggable Authentication Modules)
Comme il est dit dans l'article PAM du phrack 56, la chose bien avec PAM est
qu'«&nbsp;On est limité seulement par son imagination&nbsp;». C'est vrai. Imaginez une
connexion root seulement possible avec empreinte digitale ou un scan de l'&oelig;il 
ou une cryptocarte (pourquoi ai-je fait une conjonction de OU et pas de ET ici&nbsp;?).

<item>Journalisation fasciste. Je voudrais dire que tout ce dont nous avons
discuté plus haut est de la «&nbsp;journalisation douce&nbsp;». Si vous voulez effectuer
une vraie journalisation, procurez-vous une imprimante avec du papier listing
<!-- traduction de fanfold ? --> et journalisez tout en l'imprimant. Ca semble
amusant, mais c'est fiable et ne peut être supprimé, ni altéré.

<item>Distribution CD. Cette idée est très simple à réaliser et offre une assez
bonne sécurité. Créez une distribution Debian durcie, avec les bonnes règles
pare-feu, faites-en une image ISO amorçable et gravez-la sur un cédérom.
Vous avez maintenant une bonne distribution en lecture-seule avec environ
600&nbsp;Mo d'espace pour les services. Assurez-vous juste que toutes les 
données qui devraient être écrites, soient écrites via le réseau. Il est
impossible pour des intrus d'obtenir un accès en lecture/écriture sur ce système
et tout changement qu'un intrus ferait peut être désacitver avec un redémarrage
du système.

<item>Désactiver la capacité module. Comme décrit auparavant, quand vous
désactivez l'usage des modules noyau à la compilation, beaucoup de portes
dérobées basées sur le noyau sont impossibles à implémenter car la plupart
d'entre elles sont basées sur l'installation de modules noyau modifiés.

<item>Journalisation par câble série (contribution de Gaby schilders).
Tant que les serveurs ont toujours des ports série, imaginez-vous ayant une machine
dédiée à la journalisation pour un certain nombre de serveurs. Le système de
journalisation serait déconnecté du net et connecté aux serveurs via un multiplexeur de
ports série (cyclades ou similaire). Maintenant faites journaliser vos serveurs
par leurs ports série en écriture seule. La machine de journalisation
n'accepterait que du texte en clair en entrée sur ses ports séries et n'écrirait
que sur un fichier journal. Branchez un graveur de cédérom/dévédérom et
transférez-y les fichiers journaux quand le fichier journal atteint la capacité
du média. Maintenant si seulement ils faisaient des graveurs avec des
auto-changeurs... Pas aussi "copie-en-dur" <!-- AA hard-copy ?..jpg --> que
la journalisation directe vers l'imprimante, mais cette méthode peut gérer de
larges volumes et les cédéroms prennent moins d'espace de stockage.

<item>Changez les attributs de tous les fichiers avec <prgn>chattr</prgn> (tiré
du Tips-HOWTO écrit par Jim Dennis). Tout de suite après que vous ayez installé
et configuré initialement votre système, utilisez le programme
<prgn>chattr</prgn> avec l'attribut <tt>+i</tt> pour rendre les fichiers
non-modifiables (le fichier ne peut être supprimé, renommé, lié ou réécrit).
Envisagez de positionner cet attribut sur tous les fichiers de
<file>/bin</file>, <file>/sbin/</file>, <file>/usr/bin</file>,
<file>/usr/sbin</file>, <file>/usr/lib</file> et tous les fichiers noyau de la
racine. Vous pouvez également faire une copie de tous les fichiers de
<file>/etc/</file>, en utilisant <prgn>tar</prgn> et marquez l'archive comme
immuable.

<p>Cette stratégie vous aider à limiter les dégâts que vous pouvez faire quand
 vous êtes connecté en root. Vous n'écraserez pas de fichiers avec un opérateur
 de redirection égaré, et vous ne rendrez pas votre système inutilisable avec
 un espace mal placé dans une commande <prgn>rm -fr</prgn> (vous pourriez encore
 faire pas mal de dégâts à vos données &mdash; mais vos librairies et binaires
 seront plus à l'abri).

<p>Cela rend aussi un large éventail d'exploits de sécurité et de denis de 
 service soit impossibles soit plus difficiles (car beaucoup d'entre eux comptent
 sur l'écrasement d'un fichier à travers les actions d'un programme SETUID qui
 <em>ne fournit pas une commande shell arbitraire</em>).

<p>Le seul inconvénient de cette stratégie survient lorsque vous compilez et
installez divers binaires systèmes. D'un autre côté, cela empêche aussi le
<prgn>make install</prgn> d'écraser les fichiers. Quand vous oubliez de lire le
Makefile et de faire un <prgn>chattr -i</prgn>, les fichiers qui vont être
réécrits (et les répertoires auxquels vous voulez ajouter des fichiers) &dash;
la commande make échoue, utilisez juste la commande <prgn>chattr</prgn> et
relancez-le. Vous pouvez aussi profiter de l'occasion pour déplacer vos vieux
binaires et bibliothèques dans un répertoire .old/ ou dans une archive tar par
exemple.

<p>Notez que cette stratégie vous empêche aussi de mettre à jour vos paquetages
systèmes car les fichiers qu'ils fournissent ne peuvent être réécrits, vous
pourriez donc souhaiter avoir un mécanisme pour désactiver le drapeau immuable
sur tous les binaires juste avant de faire un <prgn>apt-get update</prgn>.

</list>

<sect1>Construction d'un pot de miel

<p>FIXME. Nécessite plus de contenu spécifique à la Debian.

<p>Un pot de miel est un système conçu pour apprendre aux administrateurs
système comment des attaquants sondent et exploitent un système. Il s'agit d'une
configuration système qui a pour but d'être sondée, attaquée et potentiellement
exploitée. En apprenant les outils et méthodes utilisées par l'attaquant, un
administrateur système peut apprendre à mieux protéger ses propres systèmes et
son réseau.

<p>Un système Debian GNU/Linux peut facilement être configuré comme un pot de
miel, si vous y consacrez le temps de l'implémenter et de le surveiller. Mettez
simplement en place le serveur factice avec un pare-feu et quelque sorte de
détecteur d'intrusion réseau, placez-le sur l'Internet et attendez. Prenez soin
de vous assurer d'être averti à temps (voir <ref id="log-alerts">) si le système
est victime d'un exploit pour que vous puissiez prendre des mesures appropriées
et terminer le compromis quand vous en avez assez vu. Voici quelques uns des
paquets et problèmes que vous devez considérez lors de la configuration de votre
pot de miel&nbsp;:

<list>

<item>la technologie pare-feu dont vous aurez besoin (fourni par les 
noyaux Linux).

<item><package>syslog-ng</package> pour envoyer les logs du pot de miel
vers un serveur syslog distant.

<item><package>snort</package> pour configurer la capture de tout le trafic
réseau arrivant sur le pot de miel et détecter les attaques.


<item><package>osh</package>, un shell restreint à sécurité amélioré et SETUID
root avec journalisation (voir l'article de Lance Spitzner ci-dessous).

<item>bien sûr, tous les serveurs que vous pouvez imaginer pour votre faux serveur 
pot de miel (mais ne durcissez <em>pas</em> le pot de miel).

<item>Le Deception Toolkit, qui utilise deception pour contrer les attaques. <!-- ? -->
Page d'origine&nbsp;: <url id="http://www.all.net/dtk/" name="Deception Toolkit">

<!-- <item>et aussi de faux services, fournis par <package>dtk</package> si vous -->
<!-- voulez aussi utiliser le honeynet comme un service de détection d'intrusion. -->

<item>Des vérificateurs d'intégrité (voir <ref id="check-integ">) et la boîte à 
outils du légiste (The Coroner's Toolkit (<package>tct</package>)) pour faire
des audits post-attaques.

</list>

<p>Vous pouvez en lire plus sur la construction des pots de miel dans l'excellent
article de Lance Spizner
<url id="http://www.net-security.org/text/articles/spitzner/honeypot.shtml"
name="To Build a Honeypot"> (de la série des "connaissez votre ennemi"), ou
le 
<url id="http://www.zdnetindia.com/techzone/resources/security/stories/7601.htm"
name="Building your own honeypot"> de David Raikow.
De même, le <url id="http://project.honeynet.org/" name="Honeynet Project">
est dédié à la construction de pots de miel et à l'audit des attaques menées contre
eux, il y a là des informations de valeurs sur comment configurer un pot de miel et
comment auditer les résultats d'une attaque. <!--  (voyez le concours) -->

<chapt id="after-compromise">Après la compromission (la réponse à l'incident)
<!-- AA After the compromise -->


<sect>Comportement général

<p>Si vous êtes physiquement présent quand l'attaque se déroule et que faire
ce qui suit n'a pas d'effet fâcheux sur vos transactions d'affaires, 
votre première réaction devrait être de débrancher simplement la machine du
réseau en débranchant la carte réseau.
<!-- jusqu'a ce que vous puissiez comprendre ce que l'intrus a fait et de sécuriser -->
<!-- votre machine -->
La désactivation du réseau à la couche 1 est le seul vrai moyen
de garder un attaquant hors d'une machine compromise. (Conseil sage de Phillip Hofmeister)

<p>Cependant, certains rootkits et back doors sont capables de détecter cet
événement et d'y réagir. Voir un <tt>rm -rf /</tt> s'exécuter quand vous
débranchez le réseau dy système n'est pas vraiment très drole. Si vous ne
désirez pas prendre le risque et que vous êtes sûr que le système est compromis,
vous devriez <em>débrancher le cable d'alimentation</em> (tous les cables
d'alimentation s'il y en a plusieurs) et croiser les doigts. Ceci peut être
extrême, mais en fait cela évitera toute bombe logique que l'intrus pourrait
avoir programmé. Dans ce cas, le système compromis <em>ne doit pas être
redémarré</em>. Soit le disque dur devrait être déplacé sur un autre système
pour analyse, soir vous devriez utiliser un autre support (un CD-ROM) pour
amorcer le système et pour l'analyser. Vous <em>ne devez pas</em> utiliser les
disquettes de récupération de Debian pour amorcer le système, mais vous
<em>pouvez</em> utiliser le shell fourni par les disquettes d'installation
(rappelez-vous qu'Alt+F2 vous y amènera) pour analyser le système.

<footnote>
Si vous êtes aventureux, vous pouvez vous connecter au système et sauver les
informations sur tous les processus en fonctionnement (vous en aurez beaucoup avec
/proc/nnn/). Il est possible d'avoir l'intégralité du code exécutable depuis la
mémoire, même si l'attaquant a supprimé les fichiers exécutables du disque. Puis
tirez sur le cordon d'alimentation.
</footnote>

<p>La méthode la plus recommandée pour récupérer un système compromis est
d'utiliser un système de fichier autonome sur un CD-ROM avec tous les outils (et
les modules noyau) dont vous pouvez avoir besoin pour accéder au système
compromis. Vous pouvez utiliser le paquet <package>mkinitrd-cd</package> pour
construire un tel CDROM<footnote>En fait, c'est l'outil utilisé pour construire
les CD-ROM pour le projet <url id="http://www.gibraltar.at/" name="Gibraltar">
(un pare-feu sur un CD-ROM autonome basé sur la distribution
Debian).</footnote>. Vous pourriez également trouver que le CD-ROM <url
id="http://biatchux.dmzs.com/" name="FIRE"> (anciennement appelé Biatchux)
est utile ici, car il s'agit aussi d'un CD-ROM autonome avec des outils
d'analyse post-mortem utiles dans ces situations. Il n'y a pas (encore) d'outil
basé sur Debian comme celui-ci, ni de moyen simple de construire un CD-ROM en
utilisant votre propre sélection de paquets Debian et
<package>mkinitrd-cd</package> (vous devrez donc lire la documentation fournie
avec celui-ci pour faire vos propres CD-ROM).

<p>Si vous voulez réellement corriger la compromission rapidement, vous devriez
retirer l'hôte compromis du réseau et réinstaller le système d'exploitation à
partir de zéro. Cela pourrait n'avoir aucun effet si vous ne savez pas comment
l'intrus est devenu root. Dans ce cas vous devez tout vérifier&nbsp;: pare-feu,
intégrité fichier, journaux de l'hôte de journalisation, etc. Pour
plus d'informations sur quoi faire après une intrusion, voir <url name="Sans'
Incident Handling Guide" id="http://www.sans.org/y2k/DDoS.htm"> ou
<url id="http://www.cert.org/tech_tips/root_compromise.html"
name="CERT's Steps for Recovering from a UNIX or NT System Compromise">.

<p>Certaines questions générales sur comment gérer un système Debian GNU/Linux
compromis sont également disponibles dans <ref id="vulnerable-system">.

<sect>Sauvegarde du système

<p>Rappelez-vous que si vous êtes sûr que le système a été compromis, vous
ne pouvez faire confiance aux logiciels qui s'y trouvent ou à n'importe quelle
autre information qu'il vous donne. Les applications pourraient contenir un
trojan, des modules noyau pourraient être installés, etc.

<p>La meilleure chose à faire est une sauvegarde complète du système de fichiers
(en utilisant <prgn>dd</prgn>) après avoir démarré d'un média sûr. Les CDs 
Debian GNU/Linux peuvent utiles pour cela car il fournissent un shell en
console 2 quand l'installation est commencée (allez-y en utilisant Alt+2 et en
appuyant sur la touche Entrée). Le shell peut être utilisé pour sauvegarder les
informations vers un autre endroit si possible (peut-être un serveur de fichier réseau à 
travers NFS/FTP...) pour analyse pendant que le système affecté est hors-ligne (ou 
réinstallé).

<p>Si vous êtes sûr qu'il y a seulement un module noyau trojan, vous pouvez 
essayer d'exécuter l'image noyau du CD en mode <em>rescue</em>. Assurez-vous
aussi de démarrer en mode <em>single</em> de façon à ce qu'aucun autre processus
trojan ne s'exécute après le noyau.

<sect>Contacter votre CERT local
<p>Le CERT (<em>Computer and Emergency Response Team</em>) est une organisation
qui peut vous aider à récupérer d'une compromission d'un système. Il y a des
CERT partout dans le monde
<footnote>
Voici une liste de quelques CERT, pour la liste complète, consultez le
<url id="http://www.first.org/team-info/" name="FIRST Member Team
		information"> (FIRST est le <em>Forum of Incident Response and Security Teams</em>)&nbsp;:
<url id="http://www.auscert.org.au" name="AusCERT"> (Australie),
<url id="http://www.unam-cert.unam.mx/" name="UNAM-CERT"> (Mexique)
<url id="http://www.cert.funet.fi" name="CERT-Funet"> (Finlande),
<url id="http://ww.dfn-cert.de" name="DFN-CERT"> (Allemagne), 
<url id="http://cert.uni-stuttgart.de/" name="RUS-CERT"> (Allemagne),
<url id="http://idea.sec.dsi.unim.it" name="CERT-IT"> (Italie),
<url id="http://www.jpcert.or.jp/" name="JPCERT/CC"> (Japon),
<url id="http://cert.uninett.no" name="UNINETT CERT"> (Norvège),
<url id="http://www.cert.pl" name="CERT Polskay"> (Pologne),
<url id="http://www.cert.ru" name="RU-CERT"> (Russie),
<url id="http://www.arnes.si/si-cert/" name="Sl-CERT"> (Slovénie)
<url id="http://www.rediris.es/cert/" name="IRIS-CERT"> (Espagne),
<url id="http://www.switch.ch/cert/" name="SWITCH-CERT"> (Suisse),
<url id="http://www.cert.org.tw" name="TWCERT/CC"> (Taiwan), 
et
<url id="http://ww.cert.org" name="CERT/CC"> (États-Unis).
</footnote>
et vous devriez contacter votre CERT local en cas d'incident de sécurité qui a
conduit à une compromission système. Les personnes du CERT local peuvent vous
aider à le récupérer.

<p>Fournir à votre CERT (ou au centre de coordination CERT) des informations sur
la compromission même si vous ne demandez pas d'aide peut également aider
d'autres personnes car les informations aggrégées des incidents reportés sont
utilisées pour déterminer si une faille donnée est répandue, s'il y a un nouveau
ver dans la nature, quels nouveaux outils d'attaque sont utilisés. Cette
information est utilisé pour fournir à la communeauté Internet des information
sur les <url id="http://www.cert.org/current/" name="activités actuelles des
	    incidents de sécurité"> et pour publier des 
<url id="http://www.cert.org/incident_notes/" name="notes d'incident"> et même
des <url id="http://www.cert.org/advisories/" name="alertes">. 
Pour des informations plus détaillées sur la façon (et les raisons) de rendre
compte d'un incident, veuillez lire les <url id="http://www.cert.org/tech_tips/incident_reporting.html"
name="règles de compte-rendu d'incident du CERT">.

<p>Vous pouvez également utiliser un mécanisme moins formel si vous avez besoin
d'aide pour récupérer d'un compromis ou si vous voulez discuter d'informations
d'incident. Cela inclut la
<url id="http://marc.theaimsgroup.com/?l=incidents" name="liste de diffusion des
	    incidents"> et la
<url id="http://marc.theaimsgroup.com/?l=intrusions" name="liste de diffusion
	    des intrusions">.

<sect>Analyse post-mortem
<p>Si vous souhaitez rassembler plus d'informations, le paquetage
<package>tct</package> (The Coroner's Toolkit de Dan Farmer et Wietse Venema) contient
des utilitaires qui effectuent une analyse «&nbsp;post mortem&nbsp;» d'un système.
<package>tct</package> permet à l'utilisateur de collecter des informations sur 
les fichiers effacés, les processus qui s'exécutent et plus. Voir la documentation
incluse pour plus d'informations.

<p>D'autres outils pouvant être utilisés pour analyse post-mortem sont inclus
dans la distribution Debian&nbsp;:

<list>
<item><package>Fenris</package>,
<item><package>Strace</package>,
<item><package>Ltrace</package>.
</list>

<p>L'un de ces paquets peut être utilisé pour analyser des binaires dangereux
(comme des portes dérobées) afin de déterminer comment ils fonctionnent et ce
qu'ils font au système. Plusieurs outils standard incluent <prgn>ldd</prgn>
(dans <package>libc6</package>), <prgn>strings</prgn> et
<prgn>objdump</prgn> (tous deux dans <package>binutils</package>).

<p>Si vous essayez de faire une analyse post-mortem avec des portes dérobées ou
des binaires suspects récupérés de systèmes compromis, vous devriez le faire
dans un environnement sécurisé (par exemple dans une image <package>bochs</package> ou
<package>plex86</package> ou un environnement <prgn>chroot</prgn>é en utilisant
un utilisateur avec des privilèges bas). Sinon votre propre système peut être
victime de la porte dérobée et également contaminé&nbsp;!

<p>L'analyse post mortem devrait toujours être faite sur une copie de sauvegarde
des données, <em>jamais</em> sur les données elles-même car elles pourraient être
altérées par cette analyse (et toutes les preuves perdues).

<p>FIXME. Ce paragraphe fournira, je l'espère plus d'informations sur la
"médecine légale" <!-- AA Analyse post-mortem ? (forensics)--> sur un système Debian dans
un futur proche.

<p>FIXME: décrire comment faire des debsums sur un système stable avec md5sums
sur un CD et avec le système de fichiers récupérés restorés sur une partition 
séparée

<p>FIXME ajouter des liens vers des papiers d'analyse post-mortem (comme le
challnge inversé de Honeynet ou les <url id="http://staff.washington.edu/dittrich/"
name="papiers de David Dittirch">.

<chapt>Foire Aux Questions (FAQ)

<p>
Ce chapitre introduit quelques questions qui reviennent souvent sur 
la liste de diffusion de sécurité. Vous devriez les consulter avant de 
poster sur la liste ou certains pourraient vous dire d'aller RTFM.

<sect>La sécurité dans le système d'exploitation Debian

<sect1>Debian est-elle plus sûre que X&nbsp;?
<p>
Un système est aussi sûr que l'administrateur est capable de le rendre.
Debian essaie d'installer les services d'une façon <em>sûre par défaut</em>,
mais elle n'est peut-être pas aussi paranoïaque que d'autres systèmes
d'exploitation qui installent tous les services <em>désactivés par défaut</em>.
Toutefois, l'administrateur système a besoin d'adapter la sécurité du système à
la politique de sécurité locale.

<p>Pour une liste des données concernant les failles de sécurité pour plusieurs
systèmes d'exploitation, voir <url
id="http://securityfocus.com/vulns/stats.shtml">. Est-ce que ces données sont
utiles&nbsp;? Le site liste plusieurs facteurs à considérer pour
l'interprétation des données et avertit que les données ne peuvent être
utilisées pour comparer les failles de l'un des systèmes d'exploitation par
rapport à un autre.<footnote>Par exemple, basé sur les données de Securityfocus,
il pourrait sembler que Windows NT est plus sûr que Linux, ce qui est une
assertion discutable. Après tout, les distributions Linux fournissent
habituellement beaucoup plus d'applications en comparison de Windows NT de
Microsoft. Ces problèmes de <em>failles comptabilisées</em> sont mieux décrits dans
<url id="http://www.dwheeler.com/oss_fs_why.html#security" 
name="Why Open Source Software / Free Software (OSS/FS)? Look at the Numbers!">
par David A. Wheeler</footnote> Conservez également à l'esprit que certaines
failles Bugtraq concernant Debian ne s'appliquent qu'à la branche
<em>unstable</em>.

<sect2>Est-ce que Debian est plus sécurisée que d'autres distributions Linux
(comme RedHat, SuSE, etc.)?

<p>Il n'y a pas de grandes différences entre les distributions Linux, à
l'exception de l'installation de base et du système de gestion des paquets. La
plupart des distributions partagent une grande partie des mêmes applications,
les différences étant seulement dans les versions de ces applications livrées
avec la version stable de la distribution. Par exemple, le noyau, Bind, Apache,
OpenSSH, XFree, gcc, zlib, etc sont tous communs entre les distributions Linux.

<p>Par exemple, RedHat a été joué de malchance et a livré une version stable
quand la version de foo était la&nbsp;1.2.3, version dans laquelle il a été
trouvé par la suite un trou de sécurité. Debian, d'un autre côté, a été plus
chanceuse de livrer foo&nbsp;1.2.4, qui incorpore la correction du bogue. Cela a
été le cas avec le gros problème de <url
id="http://www.cert.org/advisories/CA-2000-17.html" name="rpc.statd"> il y
quelques années.

<p>Il y a beaucoup de collaboration entre les équipes de sécurité respectives
des majeures distributions Linux. Les mises à jour de sécurité connues sont
rarement, si même jamais, laissés non corrigées par un vendeur d'une
distribution. La connaissance d'une faille de sécurité n'est jamais conservée au
détriment d'un autre vendeur de distribution, tout comme les corrections sont
habituellement coordonnées en amont ou par le <url
id="http://cert.org" name="CERT">. Le résultat de cela est que les mises à jour
de sécurité nécessaire sont habituellement diffusés en même temps et que la
sécurité relative des différentes distributions est très semblable.

<p>L'un des principaux avantages de Debian concernant la sécurité est la
facilité des mises à jour du système par l'utilisation d'<prgn>apt</prgn>. Voici
quelqu'uns des autres aspects de la sécurité dans Debian à considérer&nbsp;:

<list>

<item>Debian fournit plus d'outils de sécurité que les autres distributions,
voir <ref id="sec-tools">.

<item>L'installation standard de Debian est plus petite (moins de
fonctionnalité) et donc plus sûre. Les autres distributions, au nom de
l'utilisabilité, ont tendance à installer plusieurs services par défaut et
parfois, ils ne sont pas configurés correctement (rappelez-vous des <url
id="http://www.sans.org/y2k/lion.htm" name="vers Ramen ou Lion">).
L'installation de Debian n'est pas aussi limitée que celle d'OpenBSD (aucun
démon n'est activé par défaut), mais c'est un bon compromis.

<footnote>Sans diminuer le fait que d'autres distributions, comme RedHat ou
Mandrake, prennent aussi en compte la sécurité dans leurs installations standard
en demandant à l'utilisateur de sélectionne des <em>profils de sécurité</em> ou
en utilisant des assistants pour aider la configuration de <em>pare-feux
personnels</em>.</footnote>

<item>Debian documente les meilleures pratiques de sécurité dans des documents
comme celui-ci.

</list>

<sect1>De nombreux bogues Debian sont listés dans bugtraq, cela le rend il 
plus vulnérable&nbsp;?

<p>
Debian contient un grand nombre de paquetages et différents logiciels (et s'aggrandissant),
probablement plus que beaucoup de systèmes d'exploitation propriétaires. Cela
signifie qu'il y a un plus grand risque de trouver des logiciels proposant
des failles de sécurité exploitables que sur certains systèmes contenant
moins de logiciels. 

<p>De plus en plus de personnes examinent le code source à la recherche de
failles. Il y a de nombreux papiers consultatifs liés à des audits de code source
effectués sur des composants logiciels majeurs livrés dans Debian. Lorsque un de
ces audits de code source fait ressortir une faille majeur, elle est réparée et
une alerte est envoyée aux listes telle que celle de Bug Traq.

<p>Les bogues présents dans la distribution Debian affectent également d'autres
vendeurs et d'autres distributions.  Vérifiez la partie "Debian
specific: yes/no" en haut de chaque document (DSA).

<sect1>Debian possède t'il une certification touchant à la sécurité?

<p>Réponse courte&nbsp;: non. 

<p>Réponse longue&nbsp;: la certification coûte de l'argent et personne
n'a attribué de ressources pour faire certifier la distribution Debian 
GNU/Linux à n'importe quel niveau que ce soit, par exemple, la Common 
Criteria. Si vous êtes intéressé par l'obtention d'une distribution
GNU/Linux certifiée, essayez de fournir les ressources pour que cela
devienne possible.

<sect1>Existe-t-il un programme de durcissement pour Debian&nbsp;?

<p>Oui. <url name="Bastille Linux" id="http://www.bastille-linux.org">, orienté
à la base vers certaines distributions Linux (RedHat et Mandrake), fonctionne
actuellement sur Debian. Des étapes sont prévues pour intégrer les changements
de la version amont dans le paquet Debian nommé <package>bastille</package>.

<p>
Certains pensent, cependant, qu'un outil de durcissement n'élimine 
pas la nécessité d'une bonne administration.

<sect1>Je veux fournir le service XYZ, lequel dois-je choisir&nbsp;?

<p>L'une des grandes forces de Debian est la grande variété de choix disponibles
entre les paquets fournissant la même fonctionnalité (serveurs DNS, serveurs de
messagerie, serveurs FTP, serveurs web, etc.). Ceci peut être déroutant pour
l'administrateur débutant lorsqu'il essaie de déterminer quel est le bon outil
pour lui. Le mieux pour une situation donnée dépend d'un équilibre entre les
fonctionnalités et la sécurité dont vous avez besoin. Voici quelques questions à
vous poser pour décider entre des paquets semblables&nbsp;:

<list>

<item>Est-ce que le logiciel est maintenu en amont&nbsp;? De quand date la
dernière version&nbsp;

<item>Est-ce que le paquet est mûre&nbsp;? Le numéro de version ne vous dira vraiment
<em>rien</em> concernant sa maturité. Essayez de tracer l'histoire du logiciel.

<item>Est-ce que le logiciel est truffé de bogues&nbsp;? <!-- contre-sens sur bug-ridden ? -->
Y a-t-il eu des alertes de sécurité liées au logiciel&nbsp;?

<item>Est-ce que le logiciel fournit toutes les fonctionnalités dont vous avez
besoin&nbsp;? Fournit-il plus que ce dont vous avez vraiment besoin&nbsp;?

</list>

<sect1>Comment sécuriser davantage un service XYZ dans la Debian&nbsp;? 
<!-- Changed to XYZ in order to avoid confusion :) jfs -->

<p>
Les informations disponibles dans ce document vous permettront de 
rendre certains services (FTP, Bind) plus sécurisés dans la Debian GNU/Linux. 
Toutefois, pour les services non abordés ici, vous pouvez vérifier la 
documentation des programmes ou les informations générales Linux.
La plupart des directives concernant la sécurité pour les systèmes Unix 
peut également s'appliquer à Debian. Ainsi, la sécurisation d'un service 
X dans la Debian revient, la plupart du temps, à sécuriser un service comme pour 
n'importe quelle autre distribution Linux (ou Unix, peu importe).

<sect1>Comment supprimer toutes les informations de version pour les servuces&nbsp;?

<p>Si vous voulez pas ques des utilisateurs se connectent à votre démon POP3,
par exemple, et récupèrent des informations à propos de votre système, vous
pouvez vouloir supprimer (ou modifier) les informations de version affichées aux
utilisateurs.
<footnote>Notez que ceci est de la «&nbsp;sécurité par l'obscurité&nbsp;» et ne
vaudra probablement pas l'effort à long terme.</footnote> Faire cela dépend du
logiciel que vous utilisez pour un service donné. Par exemple, dans
<prgn>postfix</prgn>, vous pouvez placer votre bannière SMTP dans
<file>/etc/postfix/main.cf</file>: 
<example> 
  smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU) 
</example>

<p>D'autres logiciels ne sont pas aussi faciles à changer. <package>OpenSSH</package>
devra être recompilé pour pouvoir changer la version qu'il affiche. Faites
attention à ne pas suppriemr la première partie (<tt>SSH-2.0</tt>) de la
bannière, car les clients l'utilisent pour identifier quel(s) protocole(s)
est(sont) supporté(s) par votre paquet.

<sect1>Les paquets Debian sont-ils tous sûrs&nbsp;?

<p>L'équipe de sécurité Debian ne peut pas analyser tous les paquets inclus
dans Debian pour tester des potentielles failles de sécurité, puisque il n'y a tout simplement
pas assez de ressources pour auditer le code source de l'ensemble du projet.
Cependant Debian bénéficie des audits de code source réalisés en amont par des 
développeurs d'autres projets comme
<url name="Linux Kernel Security Audit Project" id="http://kernel-audit.sourceforge.net/">
ou le <url name="Linux Security-Audit Project" 
id="http://www.lsap.org/">.

<p>De fait, un développeur Debian pourrait distribuer un trojan dans un paquet 
et il n'y a pas moyen de le vérifier. Même s'il était introduit dans 
une branche Debian, il serait impossible de couvrir toutes les situations imaginables 
dans lesquelles le trojan pourrait agir. C'est pourquoi Debian a une clause de
licence de <em>«&nbsp;non-garantie&nbsp;»</em>.

<p>Cependant, les utilisateurs Debian peuvent être assurés que le code stable
rassemble une large audience et que la plupart des problèmes seront découverts
pendant l'utilisation. Il n'est pas recommandé d'installer
des logiciels non testés dans un système critique (si vous n'êtes pas en mesure
de fournir l'audit de code nécessaire). Dans tous les cas, si des failles de 
sécurités étaient incluses dans la distribution, le processus permettant
d'inclure les paquets (utilisation de signature numérique) assure que le
problème pourra être remonté jusqu'au développeur, et que le projet Debian ne
prend pas cela à la légère.

<sect1>Pourquoi certains fichiers journaux/fichiers de configuration sont-ils
lisibles par tous les utilisateurs, est-ce que c'est sûr&nbsp;?

<p>Vous pouvez naturellement changer les permissions Debian par défaut de votre
système. La règle actuelle concernant les fichiers journaux et les fichiers de
configuration est qu'ils doivent être lisibles par tous les utilisateurs <em>à
moins</em> qu'ils fournissent des informations sensibles.

<p>Soyez attentifs si vous faites des modifications car&nbsp;:

<list>

<item>Il se peut que des processus ne puissent pas écrire dans des fichiers
journaux si vous avez restreint leurs permissions.

<item>Certains applications peuvent ne pas fonctionne si le fichier de
configuration dont elles dépendent ne peut être lu. Par exemple, si vous
supprimez la permission en lecture pour tous les utilisateurs de
<file>/etc/samba/smb.conf</file>, le programme <prgn>smbclient</prgn> ne pourra
pas fonctionner pour un utilisateur normal.

</list>

<p>FIXME: Vérifier si c'est écrit dans la Charte. Certains paquets (par exemple,
les démons FTP) semblent nécessiter différentes permissions.

<sect1>Pourquoi est-ce que /root/ (ou UserX) a 755 comme permissions&nbsp;?

<p>De fait, la même question s'applique pour tout autre utilisateur. Comme
l'installation de Debian ne place <em>aucun</em> fichier dans ce répertoire, il
n'y a aucune information sensible à y protéger. Si vous pensez que ces
permissions sont trop laxistes pour votre système, vous pouvez les renforcer en
750. Pour les utilisateurs, veuillez lire <ref
id="limit-user-perm">.

<p>Ce <url
id="http://lists.debian.org/debian-devel/2000/debian-devel-200011/msg00783.html"
name= "file"> de la liste de diffusion de sécurité Debian contient plus
d'informations sur ce problème.

<sect1>Après l'installation de grsec/d'un pare-feu, j'ai commencé à recevoir
beaucoup de messages de console&nbsp;! Comment est-ce que je les
supprimer&nbsp;?

<p>Si vous recevez des messages de console et que vous avez configuré
<file>/etc/syslog.conf</file> pour les rediriger soit dans des fichiers, soit
dans un TTY spécial, vous pouvez voir des messages envoyés directement à la
console.

<p>Le niveau par défaut de log de la console pour tout noyau donné est de 7, ce
qui veut dire que tout message avec une priorité inférieure apparaîtra dans la
console. Habituellement, les pare-feux (la règle LOG) et d'autres outils de
sécurité logguent à des priorités inférieures à cette priorité et les messages
sont donc envoyés directement à la console.

<p>Pour réduire les messages envoyés à la console, vous pouvez utiliser
<prgn>dmesg</prgn> (l'option <tt>-n</tt> option, voir <manref section="8"
name="dmesg">), qui examine et <em>contrôle</em> le tampon anneau du noyau. Pour
corriger cela après le prochain redémarrage, changez
<file>/etc/init.d/klogd</file> de&nbsp;:

<example>
  KLOGD=""
</example>

<p>à&nbsp;:

<example>
  KLOGD="-c 4"
</example>

<p>Utilisez un nombre plus faible pour <tt>-c</tt> si vous les voyez toujours.
Une description des différents niveaux de log peut être trouvée dans
<file>/usr/include/sys/syslog.h</file>:

<example>
  #define LOG_EMERG       0       /* le système est inutilisable */
  #define LOG_ALERT       1       /* une action doit être entreprise immédiatement */
  #define LOG_CRIT        2       /* conditions critiques */
  #define LOG_ERR         3       /* conditions d'erreur */
  #define LOG_WARNING     4       /* conditions d'avertissement */
  #define LOG_NOTICE      5       /* normal, mais conditions significatives */
  #define LOG_INFO        6       /* informatif */
  #define LOG_DEBUG       7       /* messages de niveau déboguage */
</example>

<sect1>Les utilisateurs et les groupes du système d'exploitation

<sect2>Tous les utilisateurs systèmes sont-ils nécessaires&nbsp;?

<p>Oui et non. Debian est livrée avec certains utilisateurs prédéfinis 
(id utilisateur (UID) &lt; 99 comme décrit dans la <url name="charte Debian"
id="http://www.debian.org/doc/debian-policy/"> ou
<file>/usr/share/doc/base-passwd/README</file>) afin de faciliter  
l'installation de certains services qui imposent d'être lancés par un
utilisateur/UID approprié. Si vous n'avez pas l'intention 
d'en installer de nouveaux, vous pouvez supprimer sans problème
ces utilisateurs qui ne possèdent aucun fichier sur votre système et 
qui n'exécutent aucun service. Dans tous les cas, le comportement par défaut est
que les UID de 0 à 99 sont réservées dans Debian et les UID de 100 à 999 sont
crées par des paquets lors de l'installation (et supprimées quand le paquet est
purgé).

<p>Vous pouvez facilement trouver les utilisateurs ne possédant aucun 
fichier en exécutant la commande suivante (soyez sûr de l'exécuter en 
tant que root, étant donné qu'un utilisateur ordinaire pourrait ne pas 
avoir les droits nécessaires pour accéder à certains répertoires 
sensibles)&nbsp;:

<!-- J'ai pris la liberté de rendre ce script plus sécurisé ... >:^) // era -->
<example>
cut -f 1 -d : /etc/passwd |
while read i; do find / -user "$i" | grep -q . && echo "$i"; done
</example>

<p>Ces utilisateurs sont fournis par <package>base-passwd</package>. Vous
trouverez dans sa documentation plus d'informations sur la manière dont 
ces utilisateurs sont gérés dans Debian. La liste des utilisateurs par défaut
(avec un groupe correspondant)&nbsp;:

<list>

<item>root&nbsp;:
	Root est (typiquement) le super-utilisateur.

<item>daemon&nbsp;:
	Quelques démons non privilégiés ont besoin de pouvoir d'écrire sur certains
	fichiers du disque en tant que daemon:daemon (par exemple,
	<prgn>portmap</prgn>, <prgn>atd</prgn>, et probablement d'autres).
	Les démons qui n'ont besoin d'aucune appartenance de fichier peuvent tourner en tant
	que nobody:nogroup, et des démons plus complexes ou plus consciencieux
	de la sécurité tournent en tant qu'utilisateurs spécifiques.
	L'utilisateur daemon est aussi utile pour les démons installés
	localement.

<item>bin&nbsp;:
	Maintenu pour des raisons historiques.

<item>sys&nbsp;:
	La même chose que pour bin.
        Toutefois, /dev/vcs* et <file>/var/spool/cups</file> appartiennent au groupe sys.

<item>sync&nbsp;:
	Le shell de l'utilisateur sync est /bin/sync. Donc, si son mot de passe est 
	quelque chose de facile à deviner (comme ""), n'importe qui peut synchroniser le système 
	à la console même s'il n'a pas de compte sur le système.
	
<item>games&nbsp;:
	De nombreux jeux sont SETGID à games ainsi ils peuvent écrire dans les fichiers 
	des meilleurs scores. Ceci est expliqué dans la charte.
	
<item>man&nbsp;:
	Le programme man est (parfois) lancé en tant qu'utilisateur man, il peut alors écrire
	les pages cat vers <file>/var/cache/man</file>.

<item>lp&nbsp;:
	Utilisé par les démons d'impression.

<item>mail&nbsp;:
	Les boîtes aux lettres dans <file>/var/mail</file> appartiennent au 
	groupe mail, comme décrit dans la charte. L'utilisateur et le 
	groupe sont également utilisés à d'autres fins par différents MTA.

<item>news&nbsp;:
	Plusieurs serveurs de news et autres programmes associés (tel <prgn>suck</prgn>)
	utilisent l'utilisateur et le groupe news de différentes façons. Les
	fichiers dans la file d'attente des news appartiennent souvent
	à l'utilisateur et au groupe news. Les programmes tels que <prgn>inews</prgn> qui
	peuvent être utilisés pour poster des news son typiquement SETGID news.

<item>uucp&nbsp;:
	L'utilisateur et le groupe uucp sont utilisés par le sous-système UUCP.
	Il gère les fichiers de spool et de configuration. Les utilisateurs 
	du groupe uucp peuvent exécuter uucico.

<item>proxy&nbsp;:
	Comme daemon, cet utilisateur et ce groupe sont utilisés par certains 
	démons (particulièrement les démons proxy) qui ne possèdent pas 
	d'id utilisateur et qui ne nécessite pas la possession de fichiers. 
	Par exemple, le groupe proxy est utilisé par <prgn>pdnsd</prgn> et
	<prgn>squid</prgn> tourne en tant qu'utilisateur proxy.

<item>majordom&nbsp;:
	<prgn>Majordomo</prgn> a un uid alloué statiquement sur les systèmes Debian pour 
	des raisons historiques. Il n'est plus installé sur les nouveaux systèmes.
	
<item>postgres&nbsp;:
	Les bases de données <prgn>Postgresql</prgn> appartiennent à cet
	utilisateur et ce groupe. Tous les fichiers dans
	<file>/var/lib/postgresql</file> appartiennent à cet utilisateur afin
	d'imposer un niveau de sécurité convenable.

<item>www-data&nbsp;:
	Certains serveurs web tournent en tant que www-data. 
	Le contenu Internent *ne devrait pas* appartenir à cet utilisateur,
	ou un serveur Internet compromis serait alors en mesure de réécrire un
	site web. Les données transférées par les serveurs web, incluant les 
	fichiers journaux, seront la propriété de www-data.

<item>backup&nbsp;:
	De cette manière la responsabilité de sauvegarde/restauration peut être
	localement déléguée à quelqu'un sans avoir à lui donner toutes les permissions de root.
	
<item>operator&nbsp;:
	Operator est historiquement (et pratiquement) le seul compte «&nbsp;utilisateur&nbsp;»
	qui peut se connecter à distance, et qui ne dépend pas de NIS/NFS.
	
<item>list&nbsp;:
	Les archives des listes de diffusion liste et les données appartiennent
	à cet utilisateur et à son groupe. Certains programmes de listes de diffusion
	utilisent aussi cet utilisateur.
	
<item>irc&nbsp;:
	Utilisé par les démons irc. Un utilisateur alloué statiquement est nécessaire
	à cause d'un bug dans <prgn>ircd</prgn>, il se setuid()e lui-même vers un UID donné au
	démarrage.

<item>gnats.
 
<item>nobody, nogroup&nbsp;:
	Les démons qui n'ont pas besoin d'être propriétaires de fichiers
	devraient fonctionner sous l'utilisateur nobody et le groupe nogroup.
	Donc, aucun fichier sur un système ne devrait appartenir à cet
	utilisateur ou à ce groupe.

</list>

<p>Autres groupes qui n'ont pas d'utilisateur associé&nbsp;:

<list>

<item>adm&nbsp;:
	Le groupe adm est utilisé pour les tâches de surveillance du système. Les membres 
	de ce groupe peuvent lire de nombreux journaux d'événements dans <file>/var/log</file> et 
	peuvent utiliser xconsole. Historiquement, <file>/var/log</file> était <file>/usr/adm</file> (et plus tard 
	<file>/var/adm</file>) d'où le nom du groupe.

<item>tty&nbsp;:
	Les périphériques TTY appartiennent à ce groupe. C'est utilisé par <prgn>write</prgn>
	et <file>wall</file> pour permettre d'écrire sur les TTY d'autres personnes.

<item>disk&nbsp;:
	Accès brut vers les disques. Quasiment équivalent à l'accès root.

<item>kmem&nbsp;:
	<file>/dev/kmem</file> et les fichiers similaires sont lisibles par ce groupe. C'est la plupart
	du temps un reste de BSD, mais certains programmes en ont besoin pour un 
	accès direct en lecture sur la mémoire du système ce qui peut ainsi être fait par
	SETGID kmem.

<item>dialout&nbsp;:
	Accès direct et total aux ports séries. Les membres de ce groupe peuvent reconfigurer
	les modems, téléphoner n'importe où, etc.

<item>dip&nbsp;: 
	Le nom du groupe signifie «&nbsp;Dialup IP&nbsp;». Être dans le groupe dip
	permet d'utiliser des outils comme que <prgn>ppp</prgn>,
	<prgn>dip</prgn>, <prgn>wvdial</prgn>, etc. pour établir une 
	connexion. Les utilisateurs de ce groupe ne peuvent pas configurer le 
	modem, ils peuvent juste utiliser les programmes qui en font usage.

<item>fax&nbsp;:
	Autorise les membres à utiliser les logiciels de fax pour envoyer et 
	recevoir des faxes.

<item>voice&nbsp;:
	Boîte vocale, utile pour les systèmes qui utilisent leur modem comme 
	répondeur.

<item>cdrom&nbsp;:
	Ce groupe peut être utilisé localement pour donner à certains utilisateurs
	un accès à un lecteur CDROM.

<item>floppy&nbsp;:
	Ce groupe peut être utilisé localement pour donner à certains utilisateurs
	un accès à un lecteur de disquettes.

<item>tape&nbsp;:
	Ce groupe peut être utiliser localement pour donner à certains utilisateurs
	un accès à un lecteur de bandes.

<item>sudo&nbsp;:
	Les membres de ce groupe n'ont pas besoin de fournir un mot de passe lors de 
	l'utilisation de <prgn>sudo</prgn>. Voir <file>/usr/share/doc/sudo/OPTIONS</file>.

<item>audio&nbsp;:
	Ce groupe peut être utilisé localement pour donner à certains utilisateurs
	un accès à un périphérique audio.

<item>src&nbsp;: 
	Ce groupe possède les codes sources, incluant les fichiers dans 
	<file>/usr/src</file>. Il peut être utilisé afin de donner à un utilisateur 
	la capacité de manipuler les codes sources du système.

<item>shadow&nbsp;:
	<file>/etc/shadow</file> est lisible par ce groupe. Certains programmes 
	qui ont besoin d'accéder à ce fichier sont SETGID shadow.

<item>utmp&nbsp;: 
	Ce groupe peut écrire dans <file>/var/run/utmp</file> et dans les fichiers 
	similaires. Les programmes qui nécessitent l'écriture sont SETGID utmp.

<item>video&nbsp;:
        Ce groupe peut être utilisé localement pour donner à certains utilisateurs
	un accès à un périphérique vidéo.
	
<item>staff&nbsp;: 
	Autorise les utilisateurs à ajouter des modifications au système local
	(<file>/usr/local</file>, <file>/home</file>) sans avoir les privilèges root.
	À comparer au groupe «&nbsp;adm&nbsp;» qui est plus apparenté à la
	surveillance/sécurité. <!--traduction de monitoring. -> surveillance. jpg -->

<item>users&nbsp;:
	Tandis que les systèmes Debian utilisent le système de groupe privé par 
	utilisateur par défaut (chaque utilisateur a son propre groupe), certains
	préfèrent d'utiliser un système de groupes plus traditionnel.
	Dans ce système, chaque utilisateur est un membre de ce groupe.

</list>

<sect2>Quelle est la différence entre les groupes adm et staff&nbsp;?
<p>

<p>Le groupe «&nbsp;adm&nbsp;» est habituellement celui des administrateurs et est utile afin de le autoriser 
à lire les journaux d'activités sans avoir à utiliser <prgn>su</prgn>. Le groupe «&nbsp;staff&nbsp;»
est généralement pour des personnes du genre administrateur système helpdesk/junior et 
leur offre la capacité de faire des choses dans <file>/usr/local</file> et de créer 
des répertoires dans <file>home</file>.

<sect1>Pourquoi y a-t-il un nouveau groupe quand j'ajoute un nouvel
utilisateur&nbsp;? (ou pourquoi Debian attribue-t-elle un groupe à chaque
utilisateur&nbsp;?)

<p>Le comportement par défaut dans Debian est que chaque utilisateur a son
propre groupe privé. Le schéma traditionnel Unix place tous les utilisateurs
dans le groupe <em>users</em>. Des groupes supplémentaires étaient créés et
utilisés pour restreindre l'accès à des fichiers partagés associés aux
différents répertoires de projets. La gestion des fichiers devenait difficile
quand un seul utilisateur travaillait sur plusieurs projets car quand quelqu'un
créait un fichier, ce dernier était associé au groupe primaire auquel il
appartenait (c.-à-d. «&nbsp;users&nbsp;»).

<p>Le schéma Debian résoud ce problème en attribuant à chaque utilisateur son
propre groupe&nbsp; ainsi avec un umask correct (0002) et le bit SETGID
positionné dans un répertoire de projet donné, le groupe correcte est
automatiquement attribué aux fichiers créés dans ce répertoire. Cela facilite le
travail sur plusieurs projets car il n'y a pas besoin de changer les groupes ou
les umask quand on travaille sur des fichiers partagés.

<p>Vous pouvez, cependant, changer ce comportement en modifiant
<file>/etc/adduser.conf</file>. Changez la variable <em>USERGROUPS</em>
à «&nbsp;no&nbsp;», pour qu'aucun nouveau groupe ne soit créé quand un nouvel
utilisateur est créé. Positionnez également <em>USERS_GID</em> vers le GID du
groupe users auquel appartiennent tous les utilisateurs.

<sect1>Question concernant les services et les ports ouverts

<sect2>Pourquoi tous les services sont-ils activés lors de l'installation&nbsp;?

<p>Ceci est juste une approche du problème qui est, d'un côté,d'avoir
une sécurité présente et d'un autre coté l'utilisation facile. Contrairement à
OpenBSD, qui désactive tous les services à moins que ceux-ci soit activés 
par l'administrateur, Debian GNU/Linux activera tous les services installés
à moins de les désactiver (voir <ref id="disableserv"> pour plus d'informations).
Après tout, vous avez installé ces services de votre propre chef, n'est-ce pas&nbsp;?

<p>Il y a un grand nombre de discussions sur les listes de diffusion Debian (sur
debian-devel et debian-security) à propos de ce que doit être l'installation 
standart. Cependant, il n'y a pas de consensus à ce jour (mars 2002) 
sur la solution à adopter.

<sect2>Puis-je retirer <prgn>inetd</prgn>&nbsp;?

<p><prgn>Inetd</prgn> n'est pas aisé à retirer étant donné que <package>netbase</package>
dépend du paquet qui le fournit (<package>netkit-inetd</package>).
Si vous voulez le retirer, vous pouvez soit le désactiver (voir <ref 
id="disableserv">) ou retirer le paquet en utilisant le paquet 
<package>equivs</package>.

<sect2>Pourquoi ai-je le port 111 d'ouvert&nbsp;?

<p>Le port 111 est le mappeur de port sunrpc, il est installé par défaut dans
toutes les installations de base d'un système Debian puisqu'il est requis pour savoir <!-- contre-sens ? -->
lorsque le programme d'un utilisateur a besoin de RPC pour fonctionner correctement. 
Dans tous les cas, il est principalement utilisé pour NFS. Si vous n'en avez 
pas besoin, retirez le comme décrit dans <ref id="rpc">.

<sect2>Quelle est l'utilisation d'<prgn>identd</prgn> (port 113)&nbsp;?

<p>Le service identd est un service d'authentification identifiant le
propriétaire d'une connexion TCP/IP spécifique au serveur distant acceptant la
connexion. Par exemple, quand un utilisateur se connecte sur un hôte distant,
<prgn>inetd</prgn> de l'hôte distant va envoyer une demande sur le port 113 pour
déterminer les informations du propriétaire.
<!-- employé par les administrateurs pour fournir les détails userid -->
<!-- aux systèmes distants qui veulent savoir qui est la personne responsable  -->
<!-- pour une connexion donnée sur votre machine. --> Cela est souvent utilisé
pour les serveurs de courriers,
FTP et IRC et peut également être utilisé pour remonter la trace de l'utilisateur qui attaque
un système distant par l'intermédiaire de votre machine.

<p>Il y a eu des discussions complètes sur la sécurité d'<prgn>identd</prgn>
(voir les <url
id="http://lists.debian.org/debian-security/2001/debian-security-200108/msg00297.html"
name="archives de la liste de diffusion">). En règle générale,
<prgn>identd</prgn> est plus utile sur un système multi-utilisateurs que sur un
poste de travail mono-utilisateur. Si vous n'en avez pas l'utilité,
désactivez-le, pour ne pas laisser un service ouvert au monde extérieur. Mais si
vous le bloquez par un pare-feu, <em>s'il vous plaît</em>, créez une règle de
rejet et non pas une règle de déni, autrement la communication à un serveur
utilisant <prgn>identd</prgn> pourrait être en attente jusqu'à l'expiration d'un
délai (voir les <url id="http://logi.cc/linux/reject_or_deny.php3"
		name="problèmes sur le rejet ou le déni">).

<sect2>J'ai des services utilisant les ports 1 et 6, quels sont ces services et
comment puis-je les enlever&nbsp;?

<p>Si vous exécutez la commande <tt>netstat -an</tt> et que vous recevez&nbsp;:

<example>
  Active Internet connections (servers and established)
  Proto Recv-Q Send-Q Local Address           Foreign Address         State
  PID/Program name
  raw        0      0 0.0.0.0:1               0.0.0.0:*               7
  -
  raw        0      0 0.0.0.0:6               0.0.0.0:*               7
  -
</example>

<p>Vous ne voyez <em>aucun</em> processus écoutant sur les ports 1 et 6. En
fait, vous voyez un processus écoutant sur une socket <em>raw</em> (brut) pour
les protocoles 1 (ICMP) et 6 (TCP). Un tel comportement est courant pour les
trojans et aussi pour certains systèmes de détection d'intrusions comme
<package>iipl</package>, <package>iplogger</package> et
<package>portsentry</package>. Si vous avez ces paquets, supprimez-les
simplement. Si vous ne les avez pas, essayez l'option <tt>-p</tt> (processus)
de netstat pour voir quel processus est à l'écoute.

<sect2>J'ai vérifié et j'ai le port suivant (XYZ) d'ouvert, puis-je le fermer&nbsp;? 

<p>
Bien sûr que vous pouvez, les ports que vous laissez ouverts doivent 
adhérer à la politique de sécurité de votre site concernant les services publiques 
disponibles pour les autres systèmes. Vérifiez s'ils sont ouvert par 
<prgn>inetd</prgn> (voir <ref id="inetd">) ou par d'autres paquets installés et prenez
les mesures adéquates (par exemple, configuration d'inetd, suppression du paquet, éviter
qu'il démarre au démarrage).

<sect2>Est-ce que la suppresion de services de <file>/etc/services</file> va
m'aider à sécuriser ma machine&nbsp;? 

<p><em>Non</em>, le fichier <file>/etc/services</file> fournit juste une 
cartographie d'un nom virtuel à un numéro de port donné. La suppression des 
noms ne va pas (en général) prévenir les services d'être lancées. Certains
démons ne se lanceront peut-être pas si <file>/etc/services</file> est modifié mais 
ce n'est pas la norme. Pour désactiver correctement les services, voir <ref id="disableserv">.

<sect1>Problèmes courants de sécurité

<sect2>J'ai perdu mon mot de passe et je ne peux plus accéder au système&nbsp;!

<p>Les démarches à prendre afin de récupérer votre système dépend si vous avez 
ou non appliqué les différentes procédures concernant les limitations d'accès à 
<prgn>lilo</prgn> et au BIOS.

<p>Si vous avez limités les deux accès, vous devez désactiver les 
fonctionnalités du BIOS (démarrer uniquement depuis le disque dur) avant de 
commencer. Si vous avez également oublié votre mot de passe pour le BIOS, vous 
devrez ouvrir votre système et retirer manuellement la pile du BIOS.

<p>Une fois que vous avez activé l'amorçage depuis un CD-ROM ou une disquette,
vous pouvez essayer de&nbsp;:
<list>

<item>démarrer depuis une disquette de secours (rescue) et démarrer le noyau

<item>accéder aux consoles virtuelles (Alt+F2)

<item>monter le disque dur où est placé votre partition /root 

<item>éditer (la disquette de secours de la Debian&nbsp;2.2 est livrée avec 
<prgn>ae</prgn>, la Debian&nbsp;3.0 est livrée avec <prgn>nano-tiny</prgn> qui est 
similaire à <prgn>vi</prgn>) <file>/etc/shadow</file> et changer la ligne&nbsp;:

<example>
root:asdfjl290341274075:XXXX:X:XXXX:X::: (X=n'importe quel nombre)
</example>

<p>en&nbsp;:

<example>
root::XXXX:X:XXXX:X:::
</example>

</list>

<p>Ceci retirera le mot de passe root oublié, contenu dans le premier champ
séparé par deux points après le nom d'utilisateur. Enregistrez le fichier, redémarrer le système 
et connectez-vous en tant que root (avec un mot de passe vide).
Ceci fonctionnera à moins que vous n'ayez 
configuré le système plus strictement, par exemple, si vous n'autorisez pas aux
utilisateurs de mots de passe vides ou à root de se connecter à
partir de la console.

<p>Si vous avez introduit ces caractéristiques, vous devrez passer
en mode utilisateur unique. Si LILO a été restreint, vous devrez relancer
<prgn>lilo</prgn> après le reset du root indiqué ci-dessus. C'est assez rusé <!-- tricky ? -->
puisque votre <file>/etc/lilo.conf</file> devra être modifié car le
système de fichier / est alors un disque virtuel et non le réel disque dur.

<p>Une fois que LILO n'est plus restreint, vous pouvez&nbsp;:

<list>

<item>Pressez l'une des touches Alt, shift ou Control juste avant que le BIOS système
ne finisse, pour obtenir l'invite prompt de LILO.

<item>Entrez <tt>linux single</tt>, <tt>linux init=/bin/sh</tt> ou <tt>linux
1</tt> à l'invite.

<item>Vous devriez arriver à une invite de shell un mode utilisateur unique (il
vous sera demander un mot de passe, mais vous le connaisez déjà)

<item>Remontez en lecture/écriture la partition racine (/), en utilisant la
commande de montage.
<example>
mount -o remount,rw /
</example>

<item>Changez le mot de passe du super-utilisateur avec <prgn>passwd</prgn> (étant 
donné que vous êtes le super-utilisateur, l'ancien mot de passe ne vous sera pas 
demandé).

</list>

<sect1>Comment puis-je mettre en place un service pour mes utilisateurs sans
leur donner un compte shell&nbsp;?

<p>Par exemple, si vous voulez mettre en place un service POP, vous n'avez pas
besoin de configurer un compte d'utilisateur pour chaquet utilisateur y
accédant. Il est préférable de mettre en place une authentification basé sur un
répertoire grâce à un service externe (comme Radius, LDAP ou une base de données
SQL). Installez simplement la bibliothèque PAM appropriée (<package>libpam-radius-auth</package>,
<package>libpam-ldap</package>, <package>libpam-pgsql</package> ou
<package>libpam-mysql</package>), lisez la documentation (pour commencer, voir
<ref id="auth-pam">) et configurez le service en activant PAM pour utiliser la
méthode que vous avez choisi. Cela est fait en éditer les fichiers sous
<file>/etc/pam.d/</file> pour vos services et en modifiant
<example> 
  auth   required    pam_unix_auth.so shadow nullok use_first_pass 
</example> 
en, par exemple pour ldap&nbsp;:
<example>
  auth   required    pam_ldap.so 
</example>

<!-- FIXME: check if this i right (jfs) -->

<p>Dans le cas de répertoires LDAP, certains services fournissent des schémas
LDAP à inclure dans votre répertoire et qui sont nécessaires pour utiliser
l'authentification LDAP. Si vous utilisez une base de données relationnelle, une
astuce utile est d'utiliser la clause <em>where</em> quand vous configurez les modules PAM
modules. Par exemple, si vous avez une base de données avec les attributs de
table suivants&nbsp;:

<example>
  (user_id, user_name, realname, shell, password, UID, GID, homedir, sys, pop, imap, ftp)
</example>

<p>En changeant les attributs de service en champs booléens, vous pouvez
les utiliser pour permettre ou interdire l'accès aux différents services en
utilisant simplement les lignes appropriées dans les fichiers suivants&nbsp;:

<list>

<item><file>/etc/pam.d/imap</file>&nbsp;: <tt>where=imap=1</tt>.

<item><file>/etc/pam.d/qpopper</file>&nbsp;: <tt>where=pop=1</tt>.

<item><file>/etc/nss-mysql*.conf</file>&nbsp;: <tt>users.where_clause =
user.sys = 1;</tt>.

<item><file>/etc/proftpd.conf</file>&nbsp;: <tt> SQLWhereClause "ftp=1"</tt>.

</list>

<sect id="vulnerable-system">Mon système est vulnérable&nbsp;! (En êtes-vous
certain&nbsp;?)

<sect1 id="vulnasses-false-positive">Le scanneur X de vérification des failles
indique que mon système Debian est vulnérable&nbsp;!

<p>Plusieurs scanneurs de vérification de failles renvoient des faux positifs
quand ils sont utilisés sur des systèmes Debian, car ils n'utilisent que le
numéro de version pour déterminer si un paquet donné de logiciel est vulnérable,
mais ils ne testent pas réellement la faille de sécurité elle-même. Comme Debian
ne change de numéros de version lors de la correction d'un paquet (il est
courant que la correction effectuée pour des versions plus récentes soit
rétro-portée), certains outils ont tendance à croire qu'un système Debian mis à
jour est vulnérable alors qu'il ne l'est pas.

<p>Si vous pensez que votre système est à jour concernant les correctifs de
sécurité, vous pouvez désirer utiliser les références croisées des bases de
données des failles de sécurité publiées avec les DSA (voir <ref id="dsa">) pour
éliminer les faux positifs, si l'outil que vous utilisez inclut des références CVE.

<sect1>J'ai vu une attaque dans les fichiers journaux de mon système. Est-ce que
mon système est compromis&nbsp;?

<p>Une trace d'une attaque ne veut pas toujours dire que votre système a été
compromis et vous devriez effectuer les étapes habituelles pour déterminer si le
système est vraiment compromis (voir <ref id="after-compromise">). Notez
également que le fait que vous voyez les attaques dans les fichiers journaux
peut vouloir dire que votre système est déjà vulnérable (cependant, un attaquant
déterminé pourrait avoir utilisé une autre faille en plus de celles que vous
avez vu).

<sect1>J'ai trouvé d'étranges lignes «&nbsp;MARK&nbsp;» dans mes journaux&nbsp;:
est-ce que mon système est compromis&nbsp;?

<p>Il se peut que vous trouviez les lignes suivantes dans vos fichiers journaux
du système&nbsp;:

<example>
  Dec 30 07:33:36 debian -- MARK --
  Dec 30 07:53:36 debian -- MARK --
  Dec 30 08:13:36 debian -- MARK --
</example>

<p>Cela n'indique pas un type de compromission et les utilisateurs changeant de
versions de Debian peuvent trouver cela étrange. Si votre système n'a pas
une charge importante (ou beaucoup de services actifs), ces lignes peuvent
apparaître dans vos journaux. C'est une indication que votre démon
<prgn>syslogd</prgn> fonctionne correctement. De <manref
section="8" name="syslogd">&nbsp;:

<example>
       -m interval
              Syslogd stocke dans un journal une marque d'horodatage
              régulièrement. L'intervalle par défaut entre deux lignes
              -- MARK -- est de 20&nbsp;minutes. Ceci peut être changé avec
              cette option. Positionner l'intervalle à 0 désactive cela
              complètement.
</example>

<sect1>J'ai trouvé des utilisateurs utilisant «&nbsp;su&nbsp;» dans mes
journaux&nbsp;: mon système est-il compromis&nbsp;?

<p>Vous pouvez trouver des lignes comme ceci dans vos journaux&nbsp;:
<example>
  Apr  1 09:25:01 server su[30315]: + ??? root-nobody
  Apr  1 09:25:01 server PAM_unix[30315]: (su) session opened for user nobody by (UID=0)
</example>

<p>Ne vous inquiétez pas trop. Vérifiez que ces entrées sont dues à des tâches
<prgn>cron</prgn> (habituellement, <file>/etc/cron.daily/find</file> ou
<prgn>logrotate</prgn>)&nbsp;:

<example>
  $ grep 25 /etc/crontab
  25 6    * * *   root    test -e /usr/sbin/anacron || run-parts --report
  /etc/cron.daily
  $ grep nobody /etc/cron.daily/*
  find:cd / && updatedb --localuser=nobody 2>/dev/null
</example>

<sect1>J'ai trouvé un «&nbsp;SYN flooding&nbsp;» possible dans mes
journaux&nbsp;: mon système est-il attaqué&nbsp;?

<p>Si vous voyez des entrées comme ceci dans vos fichiers journaux&nbsp;:

<example>
  May 1 12:35:25 linux kernel: possible SYN flooding on port X. Sending cookies.
  May 1 12:36:25 linux kernel: possible SYN flooding on port X. Sending cookies.
  May 1 12:37:25 linux kernel: possible SYN flooding on port X. Sending cookies.
  May 1 13:43:11 linux kernel: possible SYN flooding on port X. Sending cookies.
</example>

<p>Vérifiez s'il y a un nombre élevé de connexions au serveur en utilisant
<prgn>netstat</prgn>, par exemple&nbsp;:

<example>
  linux:~# netstat -ant | grep SYN_RECV | wc -l
     9000
</example>

<p>C'est une indication d'une attaque par déni de service (DoS) sur le port X
de votre système (très certainement sur un service public comme un serveur web
ou un serveur de courrier). Vous devriez activer TCP syncookies dans votre
noyau, voir <ref id="tcp-syncookies">. Cependant, notez qu'une attaque par DoS
peut inonder votre réseau même si vous pouvez l'empêcher de planter vos systèmes
(à cause de la raréfaction de descripteurs de fichiers, le système peut ne plus
répondre jusqu'à ce que les connexions TCP expirent). Le seul moyen efficace
pour stopper cette attaque est de contacter votre fournisseur d'accès réseau.

<sect1>J'ai trouver des sessions root étranges dans mes journaux&nbsp;: mon
système est-il compromis&nbsp;?

<p>Vous pouvez voir ce genre d'entrées dans votre ficheir
<file>/var/log/auth.log</file>&nbsp;:

<example>
  May 2 11:55:02 linux PAM_unix[1477]: (cron) session closed for user root
  May 2 11:55:02 linux PAM_unix[1476]: (cron) session closed for user root
  May 2 12:00:01 linux PAM_unix[1536]: (cron) session opened for user root by
  (UID=0)
  May 2 12:00:02 linux PAM_unix[1536]: (cron) session closed for user root
</example>

<p>Elles sont dues à l'exécution d'une tâche <prgn>cron</prgn> (dans cet
exemple, toutes les cinq minutes). Pour déterminer quel programme est
responsable de ces tâches, vérifiez les entrées dans&nbsp;:
<file>/etc/crontab</file>, <file>/etc/cron.d</file>,
<file>/etc/crond.daily</file> et la <file>crontab</file> de root dans
<file>/var/spool/cron/crontabs</file>.

<sect1>J'ai souffert d'une intrusion, que dois-je faire&nbsp;?

<p>Il y a plusieurs étapes que vous pouvez effectuer en cas d'intrusion&nbsp;:

<list>

<item>Vérifiez que votre système est à jour avec les correctifs de sécurité pour
les failles publiées. Si votre système est vulnérable, les risques que le
système est vraiment compromis augmentent. Les risques augmentent encore plus si
la faille est connue depuis un certain temps, car il y a habituellement plus
d'activité en lien avec d'anciennes failles. Voici un lien vers les <url
id="http://www.sans.org/top20.htm" name="20 principales failles de sécurité
		    selon le SANS">.

<item>Lisez ce document, particulièrement la section <ref id="after-compromise">.

<item>Demandez de l'aide. Vous pouvez utiliser la liste de diffusion debian-security
pour demander conseil sur la manière de rétablir/raccommoder votre système.

<item>Informez votre <url id="http://www.cert.org" name="CERT"> local (s'il
existe, sinon vous pouvez vouloir contacter le CERT directement). Ceci peut ou
non vous aider, mais au minimum, cela informera le CERT sur les attaques en
cours. Cette information est très précieuse pour déterminer quels outils et
quelles attaques sont utilisées par la communauté <em>blackhat</em>.

</list>

<sect1>Comment puis-je pister une attaque&nbsp;?

<p>En regardant les logs (s'ils n'ont pas été modifiés), en utilisant 
un système de détection d'intrusions (voir <ref id="intrusion-detect">),
<prgn>traceroute</prgn>, <prgn>whois</prgn> et outils similaires 
(incluant des analyses légales) vous pouvez rechercher la source de l'attaque.
La manière dont vous devez réagir sur ces informations dépend uniquement
de vos règles de sécurité, et de ce que <em>vous</em> considérez comme une attaque
Un scan distant est-il une attaque&nbsp;? Un test de failles de sécurité est-il une attaque&nbsp;?

<sect1>Le programme X dans Debian est vulnérable, que dois-je faire&nbsp;?

<p>Tout d'abord, prenez un moment pour regarder si la vulnérabilité a été
annoncée sur les listes de diffusion publiques de sécurité (comme Bugtraq) ou
autre forums. L'équipe de sécurité Debian se met à jour à l'aide de ces listes,
ils sont donc peut être déjà conscients du problème. Ne lancez pas d'autres actions
si vous avez vu paraître l'annonce sur <url id="http://security.debian.org">.

<p>Si vous n'avez rien vu de cela, envoyez s'il vous plaît un courriel sur le(s) paquet(s) affecté(s)
avec une description de la vulnérabilité rencontrée aussi détaillée que possible 
(la preuve par un code d'exploitation est aussi bienvenue) à <url
	      id="mailto:team@security.debian.org"
	      name="team@security.debian.org">. Cela vous mettra en rapport avec
l'équipe de sécurité Debian.

<sect1>Le numéro de version pour un paquet indique que j'utilise toujours une
version vulnérable&nbsp;!

<p>Au lieu de mettre à jour vers une nouvelle version, nous appliquons la rustine de sécurité
à la version présente dans la distribution stable. La raison pour laquelle nous agissons 
ainsi est simple. Elle permet d'assurer qu'une version a le moins de changements possible,
de cette manière les choses ne changeront pas ou ne se briseront pas à cause d'une
mise à jour de sécurité. Vous pouvez vérifier que vous utilisez une version sécurisée
de votre paquet en regardant le changelog du paquet ou en comparant 
le numéro exact de version (version amont -slash- version Debian)
avec celui indiqué dans l'alerte de sécurité Debian (Debian Security Advisory).

<sect1>Logiciels spécifiques

<sect2><package>proftpd</package> est vulnérable à une attaque de déni de service

<p>Ajoutez <tt>DenyFilter \*.*/</tt> à votre fichier de configuration, pour plus 
d'informations, voir <url id="http://www.proftpd.org/critbugs.html">.

<sect2>Après l'installation de <package>portsentry</package>, il y a un grand
nombre de ports d'ouverts.

<p>Il s'agit simplement de la façon dont fonctionne <prgn>portsentry</prgn>. Il
ouvre environ 20 ports non utilisés pour tenter de détecter les scans de ports.

<sect id="debian-sec-team-faq">Questions concernant l'équipe de sécurité Debian

<p>Cette information est tirée de la
<url id="http://www.debian.org/security/faq.en.html" 
name="FAQ de l'équipe Debian sur la sécurité">. Elle inclut les informations au
19 novembre et fournit plusieurs autres questions communes posées sur la liste
de diffusion debian-security.


<!-- FIXME: should this be included in the FAQ? -->
<sect1>Qu'est ce qu'une alerte de sécurité Debian (Debian Security Advisory, DSA)&nbsp;?

<p>C'est l'information envoyée par l'équipe de sécurité Debian (voir ci-dessous) 
informant qu'une mise à jour de sécurité concernant une vulnérabilité d'un
paquet de Debian GNU/Linux est disponible. Les DSA signés sont envoyées aux
listes de diffusion publiques (debian-security-announce) et postées sur le site
Debian (sur la page de garde et dans la <url
	      id="http://www.debian.org/security/" name="zone concernant la sécurité">).

<p>Les DSA incluent des informations sur les paquets concernés, la faille de sécurité
découverte et l'endroit où récupérer les paquets mis à jour (ainsi que leurs sommes MD5).

<!-- FIXME: update from web page automatically -->

<sect1>La signature des alertes Debian ne se vérifie pas correctement!

<p>C'est la plupart du temps un problème de votre côté. La liste
   <url id="http://www.debian.org/security/faq.en.html" 
name="debian-security-announce"> a un filtre qui autorise uniquement l'envoi de messages
   ayant une signature correcte appartenant à un des membres de l'équipe de sécurité.

<p>Le plus probable est qu'un logiciel de courrier de votre côté change
   légèrement le message, ce qui rompt la signature. Assurez-vous pour cela que votre logiciel
   ne fait aucun encodage ou décodage MIME, ou de conversion de
   tabulation ou espace.

<p>Des coupables connus sont fetchmail (avec l'option mimedecode activée),
   formail (pour procmail 3.14 uniquement) et evolution.

<sect1>Comment la sécurité est-elle gérée chez Debian&nbsp;? 

<p>Dès que l'équipe de sécurité reçoit une notification d'un incident, 
un ou plusieurs membres l'inspecte et étudie si la distribution stable de Debian y est 
vulnérable ou pas. Si notre système est vulnérable, un travail est 
entrepris pour résoudre le problème. Le responsable du paquet est 
également contacté s'il n'a pas déjà contacté l'équipe de sécurité. 
Finalement, la solution est testée et de nouveaux paquets sont 
préparés qui sont ensuite compilés sur toutes les architectures 
stables et mis à disposition ensuite. Après que toutes ces tâches 
sont terminées, une alerte de sécurité est publiée.

<sect1>Pourquoi vous embêtez-vous avec une vieille version de tel paquet&nbsp;?

<p>La règle la plus importante lors de la création d'un nouveau paquet qui
corrige un problème de sécurité est de faire le moins de changements possible.
Nos utilisateurs et développeurs comptent sur le comportement exact d'une
distribution une fois qu'elle est stable, donc tout changement que nous faisons
peut peut-être casser le système de quelqu'un. Cela est particulièrement vrai
dans le cas de bibliothèques&nbsp;: assurez-vous de ne jamais changer
l'interface de programmation d'applications (API) ou l'interface binaire
d'applications (ABI), quelque petit que soit le changement.

<p>Cela veut dire que passer à une nouvelle version amont n'est pas une bonne
solution, au lieu de cela, les changements pertinents devraient être
rétro-portés. Habituellement, les responsables amont sont désireux d'aider si
nécessaire, sinon l'équipe de sécurité Debian peut peut-être aider.

<p>Dans certains cas, il n'est pas possible de rétro-porter un correctif de
sécurité, par exemple quand de grandes quantités de code source doivent être
modifiées ou réécrites. Si cela arrive, il peut être nécessaire de passer à une
nouvelle version amont, mais cela doit obligatoirement être coordonné avec
l'équipe de sécurité auparavant.

<sect1>Quelle est la règle pour qu'un paquet fixé apparaisse sur security.debian.org&nbsp;?

<p>Les problèmes de sécurité dans la distribution stable garantisse qu'un paquet
ira sur security.debian.org. Rien d'autre ne le peut. La taille du problème
n'est pas un problème réel ici. Habituellement, l'équipe de sécurité va préparer
des paquets avec le responsable du paquet. Pourvu que quelqu'un (de confiance)
suive le problème, compile tous les paquets nécessaires et les propose à
l'équipe de sécurité, même des problèmes de sécurité très triviaux peuvent faire
aller le paquet sur security.debian.org. Voir ci-dessous.

<!-- FBO : paragraphe dupliqué avec un autre -->
<sect1>Le numéro de version pour un paquet indique que j'utilise toujours une
version vulnérable&nbsp;!

<p>Au lieu de mettre à jour vers une nouvelle version, nous appliquons la rustine de sécurité
à la version présente dans la distribution stable. La raison pour laquelle nous agissons 
ainsi est simple. Elle permet d'assurer qu'une version a le moins de changements possible,
de cette manière les choses ne changeront pas ou ne se briseront pas à cause d'une
mise à jour de sécurité. Vous pouvez vérifier que vous utilisez une version sécurisée
de votre paquet en regardant le changelog du paquet ou en comparant 
le numéro exact de version avec celui indiqué dans l'alerte de sécurité Debian
(Debian Security Advisory).

<sect1 id="sec-unstable">Comment est assurée la sécurité pour les versions <tt>testing</tt> et <tt>unstable</tt>&nbsp;?
<p>La réponse courte est&nbsp;: il n'y en a pas. Testing et unstable évoluent très rapidement
   et l'équipe de sécurité  n'a pas les ressources nécessaires pour les supporter correctement.
   Si vous désirez un serveur sécurisé (et stable), nous vous encourageons fortement
   à rester sur une version stable. Cependant, les secrétaires de sécurité
essaieront de corriger les problèmes dans testing et unstable après leur
correction dans la distribution stable.

<!-- Note: the following paragraph is not in the FAQ (jfs) -->
<p>Dans certains cas, cependant, la branche unstable récupère les correctifs de
sécurité très rapidement puisque les mises à jour de sécurité sont généralement
disponibles en amont plus rapidement (pour les autres versions, comme celles
introduites dans la branche stable, il est nécessaire de faire un rétro-portage).

<!-- The following section is not on the FAQ -->
<sect1 id="sec-older">Je possède un ancienne version de Debian, est-elle
supportée par l'équipe de sécurité Debian&nbsp;?

<p>
Malheureusement non. L'équipe de sécurité Debian ne peut pas gérer à la fois la version 
stable (officieusement elle ne gère pas non plus la version unstable) et d'autres 
anciennes versions. Cependant, vous pouvez espérer des mises à jour de sécurité 
pour une période limitée juste (habituellement plusieurs mois) après la sortie
d'une nouvelle distribution Debian.

<sect1>Pourquoi n'y a-t-il pas de miroirs officiels de security.debian.org&nbsp;?

<p>Le but de security.debian.org est de mettre à disposition les mises
   à jour de sécurité aussi vite et facilement que possible. Les miroirs 
   ajouteraient un niveau de complexité qui n'est pas nécessaire et qui
   provoquerait une certaine frustration en cas de non mise à jour.

<sect1>J'ai vu la DSA 100 et la DSA 102, que s'est-il passé avec la DSA 101&nbsp;?

<p>Plusieurs vendeurs (la plupart pour GNU/Linux, mais aussi des dérivés
   BSD) coordonnent les alertes de sécurité pour certains incidents et
   se mettent d'accord pour un calendrier particulier pour que tous les vendeurs
   puissent diffuser l'alerte en même temps. Cela a été décidé afin de ne pas
   discriminer un vendeur en particulier qui aurait besoin de plus de temps (par
   exemple si le vendeur doit faire passer ses paquets par de longs tests de QA
   ou doit supporter plusieurs architectures ou distributions binaires). Notre
   propre équipe de sécurité prépare également les alertes à l'avance. De temps
   en temps, d'autres problèmes de sécurité doivent être traités avant que
   l'alerte en attente puisse être diffusée, cela laisse donc temporairement
   vide un ou plusieurs numéros d'alerte.

<sect1>Comment joindre l'équipe de sécurité&nbsp;?

<p>Les informations de sécurité peuvent être envoyées à <url id="mailto:security@debian.org" name="security@debian.org">,
   qui est lu par tous les développeurs Debian. Si vous disposez d'informations
   sensibles, veuillez utiliser <url id="mailto:team@security.debian.org"
name="team@security.debian.org"> qui n'est lu que par les membres
   de l'équipe de sécurité. Si vous le désirez, le courriel peut être chiffré à l'aide
   de la clef de contact de la sécurité Debian (identifiant de clé <url
   id="http://blackhole.pca.dfn.de:11371/pks/lookup?op=get&amp;exact=on&amp;search=0x363CCD95"
   name="0x363CCD95">).

<sect1>Quelles différence existe-t-il entre security@debian.org et 
debian-security@lists.debian.org&nbsp;?

<p>Lorsque vous envoyez des messages à security@debian.org, ceux-ci
sont envoyés aux listes de diffusion des développeurs (debian-private).
Tous les développeurs Debian sont inscrits à cette liste et tous les envois à cette liste
sont tenus confidentiels (i.e. ne sont pas archivés sur le site web public). 
La liste de diffusion publique debian-security@lists.debian.org est
ouverte à tous ceux qui désirent s'y <url
id="http://www.debian.org/MailingLists/" name="inscrire">, et des archives sont disponible pour
la recherche à partir du site Internet <url id="http://lists.debian.org/search.html" name="ici">.

<!-- The following items are not included in the Debian Security Team FAQ -->
<sect1>Comment puis-je aider l'équipe de sécurité Debian&nbsp;? 

<p>
<list>

<item>En contribuant à ce document, en résolvant les FIXMEs ou en fournissant 
un nouveau contenu. La documentation est importante et réduit le nombre 
de réponses aux problèmes courants. La traduction de ce document dans d'autres 
langues est également un bonne contribution.

<item>En empaquetant des applications utiles pour vérifier ou améliorer la sécurité 
d'un système Debian GNU/Linux. Si vous n'êtes pas un développeur, remplissez 
un <url name="rapport de bogue WNPP" id="http://www.debian.org/devel/wnpp/"> et proposez des 
logiciels que vous pensez utiles et qui ne sont pas encore disponibles.

<item>Contrôlez les applications dans Debian ou aidez à résoudre les bogues et 
rapportez les problèmes à security@debian.org. Le travail d'autres projets tels que 
<url name="Linux Kernel Security Audit Project" id="http://kernel-audit.sourceforge.net/">
ou <url name="Linux Security-Audit Project" id="http://www.lsap.org/"> accroît
la sécurité de Debian GNU/Linux car les contributions apporteront peut-être une
aide supplémentaire.

</list>

<p>
Dans tous les cas, s'il vous plaît, passez en revue chaque problème 
avant de les rapporter à security@debian.org. Si vous êtes capable de fournir 
des rustines, cela accélérera le processus. Ne faites pas simplement suivre le 
courrier de Bugtraq étant donné qu'ils l'ont déjà reçu. Fournir des informations
supplémentaires est cependant toujours une bonne idée.

<sect1>Qui compose l'équipe de sécurité&nbsp;?

<p>
L'équipe de sécurité Debian se résume à cinq membres et deux secrétaires. 
L'équipe de sécurité elle-même invite tout le monde à se joindre à l'équipe.

<sect1>L'équipe de sécurité Debian vérifie-t-elle chaque nouveau paquet dans Debian&nbsp;? 

<p>
Non, l'équipe de sécurité Debian ne vérifie pas tous les paquets et il n'existe pas 
de vérification automatique (lintian) afin de déceler de nouveaux paquets 
malveillants étant donné que ces vérifications sont plutôt impossibles à détecter 
automatiquement. Toutefois, les développeurs sont complètement responsables du
logiciel qu'ils introduisent dans Debian et tout logiciel est d'abord signé par
un développeur habilité. Celui-ci a la responsabilité d'analyser la sécurité du
paquet qu'il maintient. <!-- Attente d'une meilleure traduction. Fait. jpg -->

<sect1>Combien de temps faudra-t-il à debian pour résoudre la vulnérabilité XXXX?

<p>L'équipe de sécurité Debian travaille rapidement pour envoyer les alertes et
produire des paquets corrigés pour la branche stable une fois que la
vulnérabilité a été découverte. Un rapport 
<url
	      id="http://lists.debian.org/debian-security/2001/debian-security-200112/msg00257.html" name="publié sur la liste de diffusion debian-security">
a montré que durant l'année 2001, il a fallu un temps moyen de
35 jours à l'équipe de sécurité Debian pour corriger les vulnérabilités découvertes. 
Cependant, plus de 50&nbsp;% de ces vulnérabilités ont été réparées dans une durée
de dix jours, et plus de 15&nbsp;% de celles-ci ont été réparées <em>le jour
même</em> de la sortie de l'alerte.

<p>Cependant, quand ils posent cette question, les gens ont tendance à oublier que&nbsp;:

<list>

<item>Les DSA ne sont pas envoyées avant que&nbsp;:

<list>

<item>les paquets soient disponibles pour <em>toutes</em>
les architectures supportées par Debian (ce qui prend du temps pour les paquets
qui font partie intégrante du système de base, spécialement si l'on considère le nombre
d'architectures supportées dans la version stable)&nbsp;;

<item>les nouveaux paquets sont ensuite testés pour s'assurer qu'aucun
nouveau bug n'est introduit.

</list>

<item>Les paquets peuvent être disponibles avant que la DSA ne soit envoyée (dans la file
d'arrivée ou sur les miroirs).

<item>Debian est un projet basé sur le volontariat.

<item>La licence de Debian comprend une clause de «&nbsp;non garantie&nbsp;».

</list>

<p>Si vous désirez une analyse plus poussée du temps que cela prend à l'équipe
de sécurité Debian de travailler sur les vulnérabilités, vous devriez considérer
que les nouvelles
DSA (voir <ref id="dsa">) publiées sur le <url
id="http://security.debian.org" name="site web de sécurité"> et les méta-données
utilisées pour les générer incluent des liens vers les bases de données de
vulnérabilités. Vous pouvez télécharger les sources depuis le serveur web
(depuis le <url id="http://cvs.debian.org" name="CVS">) ou utiliser les pages
HTML pour déterminer le temps que cela prend à Debian pour corriger les
vulnérabilités et corréler cette donnée avec les bases de données publiques.

<appendix id="harden-step">La procédure de durcissement étape par étape

<!--
# J'ai pris la liberté de changer cette "liste de vérification" par 
# "processus pas à pas" puisque ça n'a pas réellement la forme 
# d'une liste de vérification, et j'ai ajouté une liste de vérification
# différente. Le remaniement est plus pour éviter la confusion que pour 
# autre chose. // era
-->

<p>
Une procédure est toujours utile étant donné qu'elle permet de voir 
les étapes du durcissement du système et permet une prise de décisions.
Une approche possible d'une telle procédure pour Debian 2.2 GNU/Linux est 
présentée ci-dessous. Ceci est une procédure post-installation, avec une 
liste de mesures à prendre en compte, étape par étape, lors de la 
configuration voir <ref id="checklist">. De même que, cette procédure est 
(pour le moment) plus orientée sur le renforcement des services réseaux.

<list>

<item>
Faire une installation du système (tenez compte des informations dans ce 
manuel concernant le partitionnement). Après l'installation de base passez 
dans l'installation traditionnelle, ne sélectionnez pas les paquets "task" 
mais sélectionnez les mots de passe "ombrés".

<item>Passer en revue avec <prgn>dselect</prgn> et retirer les paquets 
non nécessaire mais sélectionnés avant de faire [I]nstall. Laisser le strict 
minimum de logiciels sur le serveur.

<item>Actualiser tous les logiciels à partir des paquets disponibles 
sur security.debian.org comme décrit précédemment dans <ref id="security-update">.

<item>Exécuter les différents problèmes présentés dans ce manuel concernant 
les quotas utilisateur, les logins et lilo.

<item>De façon à renforcer un service, faire une liste de services actifs 
sur votre système.

<example>
$ ps -aux
$ netstat -pn -l -A inet 
# /usr/sbin/lsof -i | grep LISTEN
</example>

Vous devrez installer <package>lsof-2.2</package> pour que la troisième 
commande fonctionne (à lancer en root). Vous devriez faire attention car
lsof peut traduire le mot LISTEN  dans vos paramètres.

<item>Afin de retirer les services non nécessaires, avant tout déterminer 
comment ils sont démarrés et de quels paquets proviennent-ils. Cette 
tâche peut être facilement réalisé en vérifiant le programme qui écoute 
la «&nbsp;socket&nbsp;», l'exemple suivant nous le montre en utilisant ces
outils et <prgn>dpkg</prgn>.
 <!-- traduction de socket nécessaire-->

<example>
#!/bin/sh
# FIXME: this is quick and dirty; replace with a more robust script snippet
for i in `sudo lsof -i | grep LISTEN | cut -d " " -f 1 |sort -u` ; do
        pack=`dpkg -S $i |grep bin |cut -f 1 -d : | uniq`
        echo "Service $i is installed by $pack";
        init=`dpkg -L $pack |grep init.d/ `
        if [ ! -z "$init" ]; then
                 echo "and is run by $init"
        fi
done
</example>

<item>Une fois les services indésirables trouvés, supprimer le paquet (avec
<prgn>dpkg --purge</prgn>) ou utiliser <prgn>update-rc.d</prgn> (voir
 <ref id="disableserv">) de façon à le retirer du système de démarrage.

<item>Pour les services inetd (lancés par le super démon) vous pouvez juste
vérifier les services activés, par exemple avec&nbsp;:

<example>
$ grep -v "^#" /etc/inetd.conf | sort -u
</example>

et désactiver ceux qui ne sont pas nécessaire en commentant les lignes, supprimant 
le paquet ou en utilisant <prgn>update-inetd</prgn>

<item>Si vous avez des services "wrappés" (ceux utilisant <prgn>/usr/sbin/tcpd</prgn>), 
vérifier que <file>/etc/hosts.allow</file> et <file>/etc/hosts.deny</file> sont 
configurés d'après votre politique pour les services.

<item>Si possible, et s'appuyant sur chaque service, vous pouvez avoir 
envie de limiter les services lors d'une utilisation de plusieurs interfaces 
externes afin d'écouter que sur une seule d'entre elles. Par exemple, si vous 
voulez un accès FTP interne, paramétrez le démon FTP afin qu'il écoute 
uniquement l'interface désiré et non toutes les interfaces (c'est-à-dire 
0.0.0.0:21).

<item>Redémarrez la machine ou passer en mode utilisateur seul puis repasser en mode multi-utilisateur avec&nbsp;:
<example>
$ init 1
(....)
$ init 2
</example>
<item>Vérifiez que les services sont maintenant disponibles et, si nécessaire, réitérez les étapes ci-dessus.
<item>Installez maintenant les services nécessaires si vous ne l'avez pas encore fait et configurer les
proprement.
<item>Vérifiez ce que les utilisateurs sont habitués pour lancer les services 
disponibles avec par exemple&nbsp;:
<example>
$ for i in `/usr/sbin/lsof -i |grep LISTEN |cut -d " " -f 1 |sort -u`; do user=`ps -ef |grep $i |grep -v grep |cut -f 1 -d " "` ; echo "Le service $i a été lancé en tant qu'utilisateur $user"; done
</example>

pensez à changer ces services pour un utilisateur/groupe donné et 
peut-être les "chrooté" pour augmenter le niveau de sécurité. Vous pouvez 
procéder en changeant les scripts de démarrage de services de <file>/etc/init.d</file>.
La plupart des services dans la Debian utilisent <prgn>start-stop-daemon</prgn> ainsi 
vous pouvez utiliser les options --change-uid et --chroot pour installer ces 
services. "Chrooter" des services ne rentre pas dans le cadre de ce document mais 
un petit avertissement est nécessaire&nbsp;: vous aurez peut-être besoin de mettre tous les 
fichiers installés par le paquet service en utilisant dpkg -L ainsi que les paquets
dont il dépend dans l'environnement chroot.

<item>Répéter les étapes ci-dessus afin de vérifier que seuls les services
désirés sont lancés avec une combinaison utilisateur/groupe prédéfinie.

<item>Tester les services installés afin de voir si leur fonctionnement est 
bien celui souhaité.

<item>Vérifier le système en utilisant un scanner de vulnérabilités (tel 
<package>nessus</package>) de façon à déterminer les vulnérabilités du système
(mauvaise configuration, services vieux ou indésirables).

<item>Mettre en place des mesures contres les intrusions de toute sorte (réseaux et hôtes) 
(telles que <package>snort</package> et <package>logsentry</package>).

<item>Répéter l'étape du scanner de réseaux et vérifier que le système de détection
d'intrusion fonctionne correctement.

</list>

Pour le vrai paranoïaque, il faut prendre en considération ce qui suit&nbsp;:

<list>

<item>Ajouter au système des possibilités de pare-feux, acceptant les connexions entrantes 
uniquement pour les services définis et limitant les connexions sortantes à celles autorisées.

<item>Revérifier l'installation avec une nouvelle évaluation de vulnérabilité à l'aide 
d'un scanner de réseaux.

<item>Vérifier les connexions sortantes en utilisant un scanner de réseaux depuis le système 
jusqu'à un hôte à l'extérieur et vérifier que les connexions non voulues ne trouvent pas leur
sortie.

</list>


<p>FIXME: cette procédure considère le service harden mais pas le
sytème harden au niveau utilisateur, incluant des informations
à propos de la vérification des permissions utilisateurs,  les fichiers
setuid et le gel des changements dans le système en utilisant
le système de fichier ext2.


<appendix id="checklist">Liste de contrôles des configuration.

<p>Cet appendice récapitule brièvement les points des autres sections de ce manuel sous 
une forme condensée de liste de contrôles. Ceci est un petit résumé pour une personne qui
a déjà lu le manuel.

<!-- FIXME: Add pointer to Unix Security Checklist (CERT) -->

<!-- Order is slightly different from body text. Consider changing text? -->
<!-- (FIXME) -->

<p>FIXME: Ceci est basé sur la version 1.4 du manuel et a peut-être besoin d'une mise à jour.


<list>
<item>Limiter les accès physiques et les possibilités de démarrage.
	      <list>
<item>Activer un mot de passe pour le BIOS.
		<item>Désactiver le démarrage sur disquette/cdrom/...
		    
		<item>Mettre un mot de passe à LILO ou GRUB (respectivement <file>/etc/lilo.conf</file>
ou <file>/boot/grub/menu.lst</file>);
			vérifier que le fichier de configuration de LILO ou de GRUB soit en lecture
			seule.

		<item>Interdire le démarrage par disquette sur le MBR en récrivant par dessus le MBR 
		(peut-être pas&nbsp;?)

	      </list>

<item>Partitionnement
	      <list>
<item>Séparer les données où les utilisateurs peuvent écrire, données non-système, et
		    rapidement changer les données runtime pour leurs propres partitions
		


		<item>Mettre les options de montage <tt>nosuid,noexec,nodev</tt> dans
		    <file>/etc/fstab</file> sur les partitions ext2 tel que /tmp.
	      </list>



<item>Hygiène pour les mots de passes et la sécurité des connexions.
	  	      
	      <list>
<item>Établir un bon mot de passe root.
		<item>Activer les mots de passes ombrés et MD5.
		<item>Installer et utiliser PAM.
		    
		    <list>
<item>Ajouter le support du MD5 à PAM et être sûr que 
			  (de manière générale) les entrées dans les fichiers
			<file>/etc/pam.d/</file> qui ouvrent les droits d'accès
			  à la machine ont un second champs dans
			  le fichier pam.d <!-- ou est ce le troisième? (FIXME:
			  vérifier) --> mettre à "requisite" ou "required".
			  
		      <item>Modifiez <file>/etc/pam.d/login</file> pour que
			  seul le root puisse se loguer localement.

		      <item>Indiquer également les tty:s autorisés dans 
			  <file>/etc/security/access.conf</file> et généralement 
			  limiter le plus possible l'accès à ce fichier par l'utilisateur
			  root.
			  
		      <item>Ajouter pam_limits.so si vous voulez fixer des limites par
			  utilisateur.
			  
		      <item>Modifiez <file>/etc/pam.d/passwd</file>: augmenter la taille minimum
		      	  du mot de passe (6 caractères peut-être).

		      <item>Ajouter le groupe wheel à <file>/etc/group</file> si vous voulez;
			  ajouter l'entrée pam_wheel.so group=wheel au fichier 
			  <file>/etc/pam.d/su</file>.
			  
		      <item>Pour les contrôles d'usage par utilisateur, utiliser les entrées 
		      appropriées dans parm_listfile.so.
		      
		      <item>Avoir un fichier <file>/etc/pam.d/other</file> et mettre en 
		      place une sécurité serrée.

		    </list>
<item>Fixer des limites dans <file>/etc/security/limits.conf</file>
(notez que <file>/etc/limits</file> n'est pas utilisé is vous utiliser
		    PAM)

		<item>Resserrer <file>/etc/login.defs</file>; de même que, si vous 
		activé MD5 et/ou PAM, soyez sûr de faire également les changements ici.
		    
		<item>Désactiver l'accès par ftp à l'utilisateur root dans le fichier
		<file>/etc/ftpusers</file>.
		    
		<item>Désactiver la connexion par réseau de root; use <manref
		    name="su" section="1"> ou <manref name="sudo"
		    section="1">.  (prendre en compte que le paquet
		    <package>sudo</package> soit installé)
		    
		<item>Utiliser PAM pour imposer des contraintes supplémentaires sur 
		les connexions&nbsp;?

	      </list>

<item>Autres problèmes de sécurité locaux 
	      <list>
<item>Modification du noyau
<!-- Traduction nécessaire.Fait. jpg -->
(see <ref id="kernel-conf">)
		    
		<item>Rustines pour noyaux
		    (voir <ref id="kernel-patches">)
		    
		<item>Resserrer les permissions sur les fichiers de logs.
		    (<file>/var/log/{last,fail}log</file>, logs d'Apache)
		    
		<item>Verifier que la vérification de setuid soit active dans 
		    <file>/etc/checksecurity.conf</file>
<item>Penser à créer des fichiers de logs en avec uniquement le droit d'ajout
et des fichiers de configuration invariable en utilisant chattr (système de fichier ext2 uniquement)
<!-- Traduction de append-only nécessaire. Fait. jpg -->

		<item>Mettre en place une vérification d'intégrité des fichiers (voir  <ref
		id="check-integ">).  Installer <package>debsums</package>
<item>Penser à remplacer locate par slocate
		    
		<item>Impression de tous les logs sur une imprimante locale&nbsp;?
		    
		<item>Graver votre configuration sur un CD démarrable et 
		démarrer dessus? <!-- traduction nécessaire. Fait.jpg-->
<item>Désactiver les modules pour le noyau&nbsp;?

	      </list>

<item>Restreindre les accès réseaux
	      <list>

<item>Installer et configurer <prgn>ssh</prgn>
(proposer PermitRootLogin No dans <file>/etc/ssh</file>,
		    PermitEmptyPasswords No;
		    noter d'autre suggestion de texte)
		    
		<item>Envisager la désactivation ou la suppression de in.telnetd.
		    
		<item>Généralement, désactiver les services inutiles dans le fichier 
		<file>/etc/inetd.conf</file> en utilisant <tt>update-inetd
		      --disable</tt> (ou désactiver inetd complètement, ou utiliser une 
		      solution de rechange tel xinetd ou rlinetd).
		    
		<item>Désactiver les autres services inutiles; 
		mail, ftp, DNS, www, etc ne devraient pas être lancés si vous 
		n'en avez pas besoin et veillez à les vérifier régulièrement.
		
		<item>Pour les services dont vous avez besoin, n'utilisez pas 
		uniquement les programmes communs, rechercher des versions plus 
		sécurisées disponibles avec la Debian (ou depuis tout autre source).
		Peu importe celle que vous utiliserez, soyez sûr que vous compreniez
		bien les risques induits.
		
		<item>Mettre en place des prisons chroot pour les utilisateurs et démons extérieurs.

		<item>Configurer pare-feux et tcpwrappers
		    (voir <manref name="hosts_access" section="5">);
		    notez l'astuce pour /etc/hosts.deny 
		    		    
		<item>Si vous utiliser ftp, mettre en place un serveur ftpd qui sera toujours lancé dans 
		un environnement chrooté au répertoire home de l'utilisateur.
		    
		<item>Si vous utiliser X, désactiver l'authentification xhost et utiliser plutôt ssh;
		de façon encore plus sécurisé, désactiver X à distance si vous pouvez (ajouter -nolisten tcp 
		à la ligne se référant à la commande X et mettre hors service XDMCP dans le fichier 
		    <file>/etc/X11/xdm/xdm-config</file> en plaçant la valeur 0 à requestPort).
		    
		<item>Désactivez l'accès aux imprimantes de l'extérieur.
		    
		<item>Encryptez toute session IMAP ou POP via SSL ou SSH;
		installez stunnel si vous voulez fournir ce service pour des utilisateurs distant.
		    
		<item>Mettre en place un hôte de logs et configurer les autres machines afin qu'elles envoient
		les logs à cet hôte (<file>/etc/syslog.conf</file>).
		    
		<item>Sécuriser BIND, Sendmail et tout autre démon complexe 
		    (Lancer dans une prison chroot; lancer en tant qu'utilisateur non root)

		<item>Installer snort ou un outil similaire.
		    
		<item>Faire sans NIS et RPC si vous pouvez (désactiver portmap).
		    
	      </list>
<item>Problèmes de politique
	      <list>
<item>Éduquer les utilisateurs sur le comment et le pourquoi de vos règles.
		Lorsque que vous avez interdit quelque chose qui est généralement 
		disponible sur d'autres systèmes, fournissez leur une documentation qui 
		explique comment arriver aux mêmes résultats d'une manière plus sécurisée.

		<item>Interdire l'utilisation de protocoles qui utilisent des mots 
		de passes en clair (telnet, rsh and friends; ftp, imap, http, ...).
		    
		<item>Interdire les programmes qui utilisent la SVGAlib.
		    
		<item>Utiliser les quotas disques.

	      </list>
<item>Rester informé à propos des problèmes de sécurité
	      <list>
<item>S'abonner aux listes de discussions liées à la sécurité.
		    
		<item>S'abonner aux mises à jour de sécurité -- ajouter une ou des entrées 
		http://security.debian.org/debian-security au fichier 
		<file>/etc/apt/sources.list</file> <item>Se rappeler périodiquement de lancer 
		<prgn>apt-get update ; apt-get upgrade</prgn>
(mettre en place peut-être un job avec cron&nbsp;?) tel décrit dans <ref
		id="security-update">.

	      </list>

</list>

<appendix id="snort-box">Paramétrer un IDS autonome
<!-- Voir la traduction de standalone ! ici je l'ai traduit par dédié mais cela ne me convient pas. J'ai corrigé par autonome. jpg -->

<p>
Vous pouvez facilement mettre en place une bécane Debian autonome pour 
un Système de Détection d'Intrusion en utilisant <package>snort</package>.

<p>Quelques directives&nbsp;:

<list>
<item>Installer un système de base Debian et ne pas sélectionner 
de paquets additionnels.

<item>Télécharger et installer manuellement (avec dpkg) les 
paquets nécessaire (voir la liste de paquets installée ci-dessous).

<item>Télécharger et installer ACID (Analysis Console for
Intrusion Databases).

</list>

<p>
ACID est actuellement empaqueté pour Debian avec <package>acidlab</package>,
qui fournit une interface web graphique à la sortie de snort.
Il peut être téléchargé depuis 
<url id="http://www.cert.org/kb/acid/">, <url
id="http://acidlab.sourceforge.net"> ou <url
id="http://www.andrew.cmu.edu/~rdanyliw/snort/">. 
Vous pourriez avoir envie de lire le 
<url id="http://www.linuxdoc.org/HOWTO/Snort-Statistics-HOWTO/index.html" name="Snort Statistics HOWTO">.

<p>
Vous pouvez paramétrer ce système avec, au moins, deux interfaces&nbsp;:
une interface connecté à un réseau de gestion (pour accéder aux résultats 
et maintenir le système), l'autre interface sans adresse ip lié au segment 
du réseau à analyser.

<p>
De façon à configurer les cartes réseaux sans adresses ip vous ne pouvez pas 
utilisez le fichier standard Debian <file>/etc/network/interfaces</file> étant donné que le programme <prgn>ifup</prgn> et <prgn>ifdown</prgn> attendent plus d'informations que nécessaire. Vous devez faire, simplement,
<tt>ifconfig eth0 up</tt>.

<p>
Vous avez besoin, en outre de l'installation standard Debian, d'Apache, 
MySQL et PHP4 pour faire fonctionner ACID. Paquets téléchargés (Note: 
les versions peuvent différer en fonction de quelle distribution Debian 
vous utilisez, ceux-ci sont de la debian <em>woody</em> de septembre 2001)&nbsp;:

<example>
ACID-0.9.5b9.tar.gz
adduser_3.39_all.deb
apache-common_1.3.20-1_i386.deb
apache_1.3.20-1_i386.deb
debconf_0.9.77_all.deb
dialog_0.9a-20010527-1_i386.deb
fileutils_4.1-2_i386.deb
klogd_1.4.1-2_i386.deb
libbz2-1.0_1.0.1-10_i386.deb
libc6_2.2.3-6_i386.deb
libdb2_2.7.7-8_i386.deb
libdbd-mysql-perl_1.2216-2_i386.deb
libdbi-perl_1.18-1_i386.deb
libexpat1_1.95.1-5_i386.deb
libgdbmg1_1.7.3-27_i386.deb
libmm11_1.1.3-4_i386.deb
libmysqlclient10_3.23.39-3_i386.deb
libncurses5_5.2.20010318-2_i386.deb
libpcap0_0.6.2-1_i386.deb
libpcre3_3.4-1_i386.deb
libreadline4_4.2-3_i386.deb 
libstdc++2.10-glibc2.2_2.95.4-0.010703_i386.deb
logrotate_3.5.4-2_i386.deb
mime-support_3.11-1_all.deb
mysql-client_3.23.39-3_i386.deb
mysql-common_3.23.39-3.1_all.deb
mysql-server_3.23.39-3_i386.deb
perl-base_5.6.1-5_i386.deb
perl-modules_5.6.1-5_all.deb
perl_5.6.1-5_i386.deb
php4-mysql_4.0.6-4_i386.deb
php4_4.0.6-1_i386.deb
php4_4.0.6-4_i386.deb
snort_1.7-9_i386.deb
sysklogd_1.4.1-2_i386.deb
zlib1g_1.1.3-15_i386.deb
</example>

<p>Paquets installés (dpkg -l):
<example>
ii  adduser        3.39
ii  ae             962-26
ii  apache         1.3.20-1
ii  apache-common  1.3.20-1
ii  apt            0.3.19
ii  base-config    0.33.2
ii  base-files     2.2.0
ii  base-passwd    3.1.10
ii  bash           2.03-6
ii  bsdutils       2.10f-5.1
ii  console-data   1999.08.29-11.
ii  console-tools  0.2.3-10.3
ii  console-tools- 0.2.3-10.3
ii  cron           3.0pl1-57.2
ii  debconf        0.9.77
ii  debianutils    1.13.3
ii  dialog         0.9a-20010527-
ii  diff           2.7-21
ii  dpkg           1.6.15
ii  e2fsprogs      1.18-3.0
ii  elvis-tiny     1.4-11
ii  fbset          2.1-6
ii  fdflush        1.0.1-5
ii  fdutils        5.3-3   
ii  fileutils      4.1-2   
ii  findutils      4.1-40
ii  ftp            0.10-3.1
ii  gettext-base   0.10.35-13
ii  grep           2.4.2-1
ii  gzip           1.2.4-33
ii  hostname       2.07
ii  isapnptools    1.21-2
ii  joe            2.8-15.2  
ii  klogd          1.4.1-2   
ii  ldso           1.9.11-9   
ii  libbz2-1.0     1.0.1-10
ii  libc6          2.2.3-6
ii  libdb2         2.7.7-8
ii  libdbd-mysql-p 1.2216-2
ii  libdbi-perl    1.18-1
ii  libexpat1      1.95.1-5
ii  libgdbmg1      1.7.3-27
ii  libmm11        1.1.3-4
ii  libmysqlclient 3.23.39-3
ii  libncurses5    5.2.20010318-2
ii  libnewt0       0.50-7  
ii  libpam-modules 0.72-9
ii  libpam-runtime 0.72-9  
ii  libpam0g       0.72-9
ii  libpcap0       0.6.2-1
ii  libpcre3       3.4-1   
ii  libpopt0       1.4-1.1
ii  libreadline4   4.2-3 
ii  libssl09       0.9.4-5   
ii  libstdc++2.10  2.95.2-13 
ii  libstdc++2.10- 2.95.4-0.01070
ii  libwrap0       7.6-4   
ii  lilo           21.4.3-2
ii  locales        2.1.3-18
ii  login          19990827-20
ii  makedev        2.3.1-46.2
ii  mawk           1.3.3-5
ii  mbr            1.1.2-1 
ii  mime-support   3.11-1 
ii  modutils       2.3.11-13.1
ii  mount          2.10f-5.1
ii  mysql-client   3.23.39-3
ii  mysql-common   3.23.39-3.1
ii  mysql-server   3.23.39-3
ii  ncurses-base   5.0-6.0potato1
ii  ncurses-bin    5.0-6.0potato1
ii  netbase        3.18-4  
ii  passwd         19990827-20
ii  pciutils       2.1.2-2
ii  perl           5.6.1-5   
ii  perl-base      5.6.1-5   
ii  perl-modules   5.6.1-5
ii  php4           4.0.6-4   
ii  php4-mysql     4.0.6-4 
ii  ppp            2.3.11-1.4
ii  pppconfig      2.0.5
ii  procps         2.0.6-5   
ii  psmisc         19-2   
ii  pump           0.7.3-2 
ii  sed            3.02-5 
ii  setserial      2.17-16
ii  shellutils     2.0-7
ii  slang1         1.3.9-1  
ii  snort          1.7-9
ii  ssh            1.2.3-9.3
ii  sysklogd       1.4.1-2
ii  syslinux       1.48-2
ii  sysvinit       2.78-4  
ii  tar            1.13.17-2  
ii  tasksel        1.0-10 
ii  tcpd           7.6-4     
ii  telnet         0.16-4potato.1
ii  textutils      2.0-2  
ii  update         2.11-1    
ii  util-linux     2.10f-5.1
ii  zlib1g         1.1.3-15
</example>

<appendix id="bridge-fw">Setting up a bridge firewall 

<p>This information was contributed by Francois Bayart in order to
help users set up a Linux bridge/firewall with the 2.4.x kernel and
<package>iptables</package>. The only features needed are the bridge
firewall patch, available at <url name="sourceforge download page"
id="http://bridge.sourceforge.net/download.html">.

<p>For example, if you are using a 2.4.18 kernel, first install the
kernel source package, then download the <url name="patch"
id="http://bridge.sourceforge.net/devel/bridge-nf/bridge-nf-0.0.6-against-2.4.18.diff">
and apply it, as shown in this example:

<example>
Zipowz:/usr/src# apt-get install kernel-source-2.4.18
Zipowz:/usr/src# cd kernel-source-2.4.18
Zipowz:/usr/src/kernel-source-2.4.18# patch -p1 < ../bridge-nf-0.0.6-against-2.4.18.diff 
patching file include/linux/netfilter.h
patching file include/linux/netfilter_ipv4.h
patching file include/linux/skbuff.h
patching file net/bridge/br.c
patching file net/bridge/br_forward.c
patching file net/bridge/br_input.c
patching file net/bridge/br_netfilter.c
patching file net/bridge/br_private.h
patching file net/bridge/Makefile
patching file net/Config.in
patching file net/core/netfilter.c
patching file net/core/skbuff.c
patching file net/ipv4/ip_output.c
patching file net/ipv4/netfilter/ip_tables.c
patching file net/ipv4/netfilter/ipt_LOG.c
</example>

<p>Now, configure the kernel (i.e., <tt>make menuconfig</tt>, 
<tt>make xconfig</tt>). In the section <em>Networking options</em>, enable the 
following options:

<example>
[*] Network packet filtering (replaces ipchains)
[ ]   Network packet filtering debugging (NEW)
<*> 802.1d Ethernet Bridging
[*]   netfilter (firewalling) support (NEW)
</example>

<p>Caution: you must disable this if you want to apply some
firewalling rules or else <prgn>iptables</prgn> will not work.

<example>
[ ]   Network packet filtering debugging (NEW)
</example>

<p>Next, add the correct options in the section <em>IP: Netfilter
Configuration</em>. Then, compile and install the kernel. If you want
to do it the <em>Debian way</em>, install
<package>kernel-package</package> and run <prgn>make-kpkg</prgn> to
create a custom Debian kernel package you can install on your server
using dpkg. Once the new kernel is compiled and installed, install the
<package>bridge-utils</package> package.

<p>Once these steps are complete, you can complete the configuration
of your bridge. The next section presents two different possible
configurations for the bridge, each with a hypothetical network map
and the necessary commands.

<sect>A bridge providing NAT and firewall capabilities

<p>The first configuration uses the bridge as a firewall with network
address translation (NAT) that protects a server and internal LAN
clients. A diagram of the network configuration is shown below:

<example>
Internet ---- router ( 62.3.3.25 ) ---- bridge (62.3.3.26 gw 62.3.3.25 / 192.168.0.1)
                                          |
                                          |
                                          |---- WWW Server (62.3.3.27 gw 62.3.3.25)
                                          |
                                          |
                                         LAN --- Zipowz (192.168.0.2 gw 192.168.0.1)
</example>

<p>The following commands show how this bridge can be configured.

<example>
# Create the interface br0
/usr/sbin/brctl addbr br0

# Add the Ethernet interface to use with the bridge
/usr/sbin/brctl addif br0 eth0
/usr/sbin/brctl addif br0 eth1

# Start up the Ethernet interface
/sbin/ifconfig eth0 0.0.0.0
/sbin/ifconfig eth1 0.0.0.0

# Configure the bridge ethernet
# The bridge will be correct and invisible ( transparent firewall ).
# It's hidden in a traceroute and you keep your real gateway on the 
# other computers. Now if you want you can config a gateway on your 
# bridge and choose it as your new gateway for the other computers.

/sbin/ifconfig br0 62.3.3.26 netmask 255.255.255.248 broadcast 62.3.3.32

# I have added this internal IP to create my NAT 
ip addr add 192.168.0.1/24 dev br0
/sbin/route add default gw 62.3.3.25
</example>

<sect>A bridge providing firewall capabilities

<p>A second possible configuration is a system that is set up as a
transparent firewall for a LAN with a public IP address space.

<example>
Internet ---- router (62.3.3.25) ---- bridge (62.3.3.26)
                                        |
                                        |
                                        |---- WWW Server (62.3.3.28 gw 62.3.3.25)
                                        |
                                        |
                                        |---- Mail Server (62.3.3.27 gw 62.3.3.25)
</example>

<p>The following commands show how this bridge can be configured.

<example>
# Create the interface br0
/usr/sbin/brctl addbr br0

# Add the Ethernet interface to use with the bridge
/usr/sbin/brctl addif br0 eth0
/usr/sbin/brctl addif br0 eth1

# Start up the Ethernet interface
/sbin/ifconfig eth0 0.0.0.0
/sbin/ifconfig eth1 0.0.0.0

# Configure the bridge Ethernet
# The bridge will be correct and invisible ( transparent firewall ).
# It's hidden in a traceroute and you keep your real gateway on the 
# other computers. Now if you want you can config a gateway on your
# bridge and choose it as your new gateway for the other computers.

/sbin/ifconfig br0 62.3.3.26 netmask 255.255.255.248 broadcast 62.3.3.32
</example>

<p>If you traceroute the Linux Mail Server, you won't see the bridge.
If you want access to the bridge with <prgn>ssh</prgn>, you must have
a gateway or you must first connect to another server, such as the
"Mail Server", and then connect to the bridge through the internal
network card.</p>

<sect>Basic IPtables rules

<p>This is an example of the basic rules that could be used for either of these
setups.

<example>
  iptables -F FORWARD
  iptables -P FORWARD DROP
  iptables -A FORWARD -s 0.0.0.0/0.0.0.0 -d 0.0.0.0/0.0.0.0 -m state --state INVALID -j DROP
  iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

  # Some funny rules but not in a classic Iptables sorry ...
  # Limit ICMP 
  # iptables -A FORWARD -p icmp -m limit --limit 4/s -j ACCEPT
  # Match string, a good simple method to block some VIRUS very quickly
  # iptables -I FORWARD -j DROP -p tcp -s 0.0.0.0/0 -m string --string "cmd.exe"

  # Block all MySQL connection just to be sure
  iptables -A FORWARD -p tcp -s 0/0 -d 62.3.3.0/24 --dport 3306 -j DROP

  # Linux Mail Server Rules

  # Allow FTP-DATA ( 20 ) , FTP ( 21 ) , SSH ( 22 ) 
  iptables -A FORWARD -p tcp -s 0.0.0.0/0 -d 62.3.3.27/32 --dport 20:22 -j ACCEPT

  # Allow the Mail Server to connect to the outside
  # Note: This is *not* needed for the previous connections 
  # (remember: stateful filtering) and could be removed.
  iptables -A FORWARD -p tcp -s 62.3.3.27/32 -d 0/0 -j ACCEPT

  # WWW Server Rules

  # Allow HTTP ( 80 ) connections with the WWW server
  iptables -A FORWARD -p tcp -s 0.0.0.0/0 -d 62.3.3.28/32 --dport 80 -j ACCEPT

  # Allow HTTPS ( 443 ) connections with the WWW server
  iptables -A FORWARD -p tcp -s 0.0.0.0/0 -d 62.3.3.28/32 --dport 443 -j ACCEPT

  # Allow the WWW server to go out
  # Note: This is *not* needed for the previous connections 
  # (remember: stateful filtering) and could be removed.
  iptables -A FORWARD -p tcp -s 62.3.3.28/32 -d 0/0 -j ACCEPT
</example>

<!-- A DÉPLACER -->

<appendix id="bind-chuser">Sample script to change the default Bind installation.

<p>This script automates the procedure for changing the
<prgn>bind</prgn> name server's default installation so that it does
<em>not</em> run as the superuser. It will create the user and groups
to be used for the name server. Use with extreme care since it has not
been tested thoroughly.

<example>
  #!/bin/sh
  # Change the default Debian bind configuration to have it run
  # with a non-root user and group.
  #
  # WARN: This script has not been tested throughly, please
  # verify the changes made to the INITD script

  # (c) 2002 Javier Fernandez-Sanguino Peña
  #
  #    This program is free software; you can redistribute it and/or modify
  #    it under the terms of the GNU General Public License as published by
  #    the Free Software Foundation; either version 1, or (at your option)
  #    any later version.
  #
  #    This program is distributed in the hope that it will be useful,
  #    but WITHOUT ANY WARRANTY; without even the implied warranty of
  #    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  #    GNU General Public License for more details.
  #
  #     Please see the file `COPYING' for the complete copyright notice.
  #

  restore() {
  # Just in case, restore the system if the changes fail
	  echo "WARN: Restoring to the previous setup since I'm unable to properly change it."
	  echo "WARN: Please check the $INITDERR script."
	  mv $INITD $INITDERR
	  cp $INITDBAK $INITD
  }


  USER=named
  GROUP=named
  INITD=/etc/init.d/bind
  INITDBAK=$INITD.preuserchange
  INITDERR=$INITD.changeerror
  START="start-stop-daemon --start --quiet --exec /usr/sbin/named -- -g $GROUP -u $USER"
  AWKS="awk ' /start-stop-daemon --start/ { print \"$START\"; noprint = 1; }; /\/usr\/sbin\/ndc reload/ { print \"stop; sleep 2; start;\"; noprint = 1; } /\\\\$/ { if ( noprint != 0 ) { noprint = noprint + 1;} } /^.*$/ { if ( noprint != 0 ) { noprint = noprint - 1; } else { print \$0; } } '"

  [ `id -u` -ne 0 ] && {
	  echo "This program must be run by the root user"
	  exit 1
  }

  RUNUSER=`ps -eo user,fname |grep named |cut -f 1 -d " "`

  if [ "$RUNUSER" = "$USER" ] 
  then
	  echo "WARN: The name server running daemon is already running as $USER"
	  echo "ERR:  This script will not many any changes to your setup."
	  exit 1
  fi
  if [ ! -f $INITD ]
  then
	  echo "ERR:  This system does not have $INITD (which this script tries to change)"
	  RUNNING=`ps -eo fname |grep named`
	   [ -z "$RUNNING" ] && \
	      echo "ERR:  In fact the name server daemon is not even running (is it installed?)"
	   echo "ERR:  No changes will be made to your system"
	  exit 1
  fi

  # Check if named group exists
  if [ -z "`grep $GROUP /etc/group`" ] 
  then
	  echo "Creating group $GROUP:"
	  addgroup $GROUP
  else
	  echo "WARN: Group $GROUP already exists. Will not create it"
  fi
  # Same for the user
  if [ -z "`grep $USER /etc/passwd`" ] 
  then
	  echo "Creating user $USER:"
	  adduser --system --home /home/$USER \
	  --no-create-home --ingroup $GROUP \
	  --disabled-password --disabled-login $USER
  else
	  echo "WARN: The user $USER already exists. Will not create it"
  fi

  # Change the init.d script

  # First make a backup (check that there is not already
  # one there first)
  if [ ! -f $INITDBAK ] 
  then
	  cp $INITD $INITDBAK
  fi

  # Then use it to change it
  cat $INITDBAK |
  eval $AWKS > $INITD

  echo "WARN: The script $INITD has been changed, trying to test the changes."
  echo "Restarting the named daemon (check for errors here)."

  $INITD restart
  if [ $? -ne 0 ] 
  then
	  echo "ERR:  Failed to restart the daemon."
	  restore
	  exit 1
  fi

  RUNNING=`ps -eo fname |grep named`
  if [ -z "$RUNNING" ] 
  then
	  echo "ERR:  Named is not running, probably due to a problem with the changes."
	  restore
	  exit 1
  fi

  # Check if it's running as expected
  RUNUSER=`ps -eo user,fname |grep named |cut -f 1 -d " "`

  if [ "$RUNUSER" = "$USER" ] 
  then
	  echo "All has gone well, named seems to be running now as $USER."
  else
	  echo "ERR:  The script failed to automatically change the system."
	  echo "ERR:  Named is currently running as $RUNUSER."
	  restore
	  exit 1
  fi

  exit 0
</example>

<p>The previous script, run on Woody's (Debian 3.0) custom
<prgn>bind</prgn>, will produce the following initd file after
creating the 'named' user and group:

<example>
  #!/bin/sh

  PATH=/sbin:/bin:/usr/sbin:/usr/bin

  test -x /usr/sbin/named || exit 0

  start () {
	  echo -n "Starting domain name service: named"
	  start-stop-daemon --start --quiet \
	      --pidfile /var/run/named.pid --exec /usr/sbin/named 
	  echo "."	
  }

  stop () {
	  echo -n "Stopping domain name service: named"
	  # --exec doesn't catch daemons running deleted instances of named,
	  # as in an upgrade.  Fortunately, --pidfile is only going to hit
	  # things from the pidfile.
	  start-stop-daemon --stop --quiet  \
	      --pidfile /var/run/named.pid --name named
	  echo "."	
  }

  case "$1" in
      start)
	  start
      ;;

      stop)
	  stop
      ;;

      restart|force-reload)
	  stop
	  sleep 2
	  start
      ;;

      reload)
	  /usr/sbin/ndc reload
      ;;

      *)
	  echo "Usage: /etc/init.d/bind {start|stop|reload|restart|force-reload}" >&2
	  exit 1
      ;;
  esac

  exit 0
</example>

<appendix id="fw-security-update">Security update protected by a firewall

<p>After a standard installation, a system may still have some
security vulnerabilities. Unless you can download updates for the
vulnerable packages on another system (or you have mirrored
security.debian.org for local use), the system will have to be
connected to the Internet for the downloads.

<p>However, as soon as you connect to the Internet you are exposing
this system. If one of your local services is vulnerable, you might be
compromised even before the update is finished! This may seem paranoid
but, in fact, analysis from the <url id="http://www.honeynet.org"
name="Honeynet Project"> has shown that systems can be compromised in
less than three days, even if the system is not publicly known (i.e.,
not published in DNS records).

<p>When doing an update on a system not protected by an external
system like a firewall, it is possible to properly configure your
local firewall to restrict connections involving only the security
update itself. The example below shows how to set up such local
firewall capabilities, which allow connections from
security.debian.org only, logging all others.

<p>FIXME: add IP address for security.debian.org (since otherwise you
need DNS up to work) on /etc/hosts.

<p>FIXME: test this setup to see if it works properly

<p>FIXME: this will only work with HTTP URLs since ftp might need 
the ip_conntrack_ftp module, or use passive mode.

<!-- FIXME: this is probably not needed, after all it is a packet inspection 
     fw: -->
<!-- # iptables -A INPUT -s security.debian.org -p 80 -j ACCEPT -->

<example>
  # iptables -F
  # iptables -L
  Chain INPUT (policy ACCEPT)
  target     prot opt source               destination

  Chain FORWARD (policy ACCEPT)
  target     prot opt source               destination

  Chain OUTPUT (policy ACCEPT)
  target     prot opt source               destination
  # iptables -P INPUT DROP
  # iptables -P FORWARD DROP
  # iptables -P OUTPUT DROP
  # iptables -A OUTPUT -d security.debian.org -p 80 -j ACCEPT
  # iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
  # iptables -A INPUT -p icmp -j ACCEPT
  # iptables -A INPUT -j LOG
  # iptables -A OUTPUT -j LOG
  # iptables -L
  Chain INPUT (policy DROP)
  target     prot opt source               destination
  ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0          state RELATED,ESTABLISHED
  ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0
  LOG        all  --  anywhere             anywhere           LOG level warning

  Chain FORWARD (policy DROP)
  target     prot opt source               destination

  Chain OUTPUT (policy DROP)
  target     prot opt source               destination
  ACCEPT     80   --  anywhere             security.debian.org
  LOG        all  --  anywhere             anywhere           LOG level warning
</example>

<appendix>Utilisation de chroot
<!-- sect id="chroot" -->

<p><prgn>chroot</prgn> est une des possibilités les plus puissantes pour
restreindre un démon ou un utilisateur ou un autre service. Imaginez juste
une prison autour de votre cible, dont votre cible ne peut s'échapper
(normalement, mais il y a encore beaucoup de conditions qui permettent de
s'échapper d'une telle prison). Si vous ne faites pas confiance à un utilisateur,
vous pouvez créer un environnement à racine modifiée pour lui. Cela peut utiliser
pas mal d'espace disque comme vous avez besoin de copier tous les exécutables
nécessaires, ainsi que les librairies, dans la prison. Même si l'utilisateur
fait quelque chose de malveillant, la portée des dégâts sera limitée à la prison.

<p>Un bon exemple pour ce cas est, si vous n'authentifiez pas avec 
<file>/etc/passwd</file> mais utilisez LDAP ou MySQL à la place. Donc votre
daemon-ftp a seulement besoin d'un binaire et peut être de quelques librairies.
Un environnement chrooté serait une excellent amélioration de la sécurité&nbsp;;
si un nouvel exploit est découvert pour ce daemon-ftp, alors les attaquants 
pourront seulement exploiter l'UID de l'utilisateur-daemon-ftp et rien d'autre.

<p>Bien sur, beaucoup d'autres démons pourraient bénéficier de ce genre
d'aménagement aussi.

<p>Cependant, soyez averti qu'une prison chroot peut être brisée si
l'utilisateur qui y évolue est le super-utilisateur. Donc, vous devez
faire s'exécuter le service comme un utilisateur non-privilégié. En
limitant son environnement vous limitez les fichiers lisibles/inscriptibles
par tout le monde auxquels le service peut accéder, ainsi, vous limitez les
possibilités d'élévation de privilège en utilisant des vulnérabilités du
système local. Même si dans cette situation vous ne pouvez être complètement
sur qu'il n'y a aucun moyen pour un attaquant intelligent de s'échapper d'une
façon ou d'une autre de la prison. L'utilisation des seuls programmes serveurs
qui ont la réputation d'être surs est une bonne mesure de sécurité supplémentaire.
Même des failles minuscules comme des références de fichier ouverts peuvent être
utilisées par un attaquant talentueux pour s'introduire dans le système. Après
tout <prgn>chroot</prgn> n'a pas été conçu comme un outil de sécurité mais comme
un outil de test.

<!-- FIXME: Cette information devra être vérifiée quand woody sortira -->
<!-- AA : Service de nom Internet ? serveur de résolution de nom) -->

<p>Note additionnelle, le BIND par défaut de la Debian (le service de nom 
Internet) n'est pas livré chrooté par défaut; en fait, aucun démon n'est
chrooté. Cela pourrait changer dans la version woody (3.0).

<!-- Il faudrait peut etre signifier ici que BIND est un outil très vulnérable.
il est impératif de mettre les dernières mises à jour? jpg -->

<p>Il y a aussi des logiciels (pas dans la Debian actuellement mais qui pourraient
fournis dans le futur) qui peuvent aider à configurer des environnements chroot.
<prgn>makejail</prgn> par exemple, peut créer et mettre à jour une prison chroot
avec de petits fichiers de configuration. il essaie aussi de deviner et 
<!-- AA ou peu de fichiers ? -->
d'installer dans la prison tous les fichiers requis par le démon.
Plus d'information à <url id="http://www.floc.net/makejail/">. <prgn>Jailer</prgn> est un outil similaire qui peut être récupéré sur 
<url id="http://www.balabit.hu/downloads/jailer/">


<appendix id="chroot-ssh-env"><Prgn>Chroot</Prgn> environment for <PRGN>SSH</PRGN>

<p>Creating a restricted environment for <PRGN>SSH</PRGN> is a tough job due 
to its dependencies and the fact that, unlike other servers, <PRGN>SSH</PRGN> 
provides a remote shell to users. Thus, you will also have to consider the
applications users will be allowed to use in the environment. If you create 
this file structure in, for example <file>/var/chroot/ssh</file>, you could 
start the <prgn>ssh</prgn> server <prgn>chroot</prgn>'ed with this command:

<example>
  # chroot /var/chroot/ssh /sbin/sshd -f /etc/sshd_config
</example>

<sect>Automatically making the environment (the easy way)

<p>You can easily create a restricted environment with the
<package>makejail</package> package, since it automatically takes care
of tracing the server daemon (with <prgn>strace</prgn>), and makes it
run under the restricted environment.

<p>The advantage of programs that automatically generate <prgn>chroot</prgn>
environments is that they are capable of copying any package to the
<prgn>chroot</prgn> environment (even following the package's dependencies and
making sure it's complete). Thus, providing user applications is easier.

<p>To set up the environment using <prgn>makejail</prgn>'s provided
examples, just use the command:

<example>
  # makejail /usr/share/doc/makejail/examples/sshd.py
</example>

<p>Read the sample file to see what other changes need to be made to
the environment. Some of these changes, such as copying user's home
directories, cannot be done automatically. Also, limit the exposure of
sensitive information by only copying the data from a given number of
users from the files <file>/etc/shadow</file> or
<file>/etc/group</file>.

<p>The following sample environment has been (slightly) tested and is
built with the configuration file provided in the package and includes
the <package>fileutils</package> package:

<example>
.
|-- bin
|   |-- ash
|   |-- bash
|   |-- chgrp
|   |-- chmod
|   |-- chown
|   |-- cp
|   |-- csh -> /etc/alternatives/csh
|   |-- dd
|   |-- df
|   |-- dir
|   |-- fdflush
|   |-- ksh
|   |-- ln
|   |-- ls
|   |-- mkdir
|   |-- mknod
|   |-- mv
|   |-- rbash -> bash
|   |-- rm
|   |-- rmdir
|   |-- sh -> bash
|   |-- sync
|   |-- tcsh
|   |-- touch
|   |-- vdir
|   |-- zsh -> /etc/alternatives/zsh
|   `-- zsh4
|-- dev
|   |-- null
|   |-- ptmx
|   |-- pts
|   |-- ptya0
(...)
|   |-- tty
|   |-- tty0
(...)
|   `-- urandom
|-- etc
|   |-- alternatives
|   |   |-- csh -> /bin/tcsh
|   |   `-- zsh -> /bin/zsh4
|   |-- environment
|   |-- hosts
|   |-- hosts.allow
|   |-- hosts.deny
|   |-- ld.so.conf
|   |-- localtime -> /usr/share/zoneinfo/Europe/Madrid
|   |-- motd
|   |-- nsswitch.conf
|   |-- pam.conf
|   |-- pam.d
|   |   |-- other
|   |   `-- ssh
|   |-- passwd
|   |-- resolv.conf
|   |-- security
|   |   |-- access.conf
|   |   |-- chroot.conf
|   |   |-- group.conf
|   |   |-- limits.conf
|   |   |-- pam_env.conf
|   |   `-- time.conf
|   |-- shadow
|   |-- shells
|   `-- ssh
|       |-- moduli
|       |-- ssh_host_dsa_key
|       |-- ssh_host_dsa_key.pub
|       |-- ssh_host_rsa_key
|       |-- ssh_host_rsa_key.pub
|       `-- sshd_config
|-- home
|   `-- userX
|-- lib
|   |-- ld-2.2.5.so
|   |-- ld-linux.so.2 -> ld-2.2.5.so
|   |-- libc-2.2.5.so
|   |-- libc.so.6 -> libc-2.2.5.so
|   |-- libcap.so.1 -> libcap.so.1.10
|   |-- libcap.so.1.10
|   |-- libcrypt-2.2.5.so
|   |-- libcrypt.so.1 -> libcrypt-2.2.5.so
|   |-- libdl-2.2.5.so
|   |-- libdl.so.2 -> libdl-2.2.5.so
|   |-- libm-2.2.5.so
|   |-- libm.so.6 -> libm-2.2.5.so
|   |-- libncurses.so.5 -> libncurses.so.5.2
|   |-- libncurses.so.5.2
|   |-- libnsl-2.2.5.so
|   |-- libnsl.so.1 -> libnsl-2.2.5.so
|   |-- libnss_compat-2.2.5.so
|   |-- libnss_compat.so.2 -> libnss_compat-2.2.5.so
|   |-- libnss_db-2.2.so
|   |-- libnss_db.so.2 -> libnss_db-2.2.so
|   |-- libnss_dns-2.2.5.so
|   |-- libnss_dns.so.2 -> libnss_dns-2.2.5.so
|   |-- libnss_files-2.2.5.so
|   |-- libnss_files.so.2 -> libnss_files-2.2.5.so
|   |-- libnss_hesiod-2.2.5.so
|   |-- libnss_hesiod.so.2 -> libnss_hesiod-2.2.5.so
|   |-- libnss_nis-2.2.5.so
|   |-- libnss_nis.so.2 -> libnss_nis-2.2.5.so
|   |-- libnss_nisplus-2.2.5.so
|   |-- libnss_nisplus.so.2 -> libnss_nisplus-2.2.5.so
|   |-- libpam.so.0 -> libpam.so.0.72
|   |-- libpam.so.0.72
|   |-- libpthread-0.9.so
|   |-- libpthread.so.0 -> libpthread-0.9.so
|   |-- libresolv-2.2.5.so
|   |-- libresolv.so.2 -> libresolv-2.2.5.so
|   |-- librt-2.2.5.so
|   |-- librt.so.1 -> librt-2.2.5.so
|   |-- libutil-2.2.5.so
|   |-- libutil.so.1 -> libutil-2.2.5.so
|   |-- libwrap.so.0 -> libwrap.so.0.7.6
|   |-- libwrap.so.0.7.6
|   `-- security
|       |-- pam_access.so
|       |-- pam_chroot.so
|       |-- pam_deny.so
|       |-- pam_env.so
|       |-- pam_filter.so
|       |-- pam_ftp.so
|       |-- pam_group.so
|       |-- pam_issue.so
|       |-- pam_lastlog.so
|       |-- pam_limits.so
|       |-- pam_listfile.so
|       |-- pam_mail.so
|       |-- pam_mkhomedir.so
|       |-- pam_motd.so
|       |-- pam_nologin.so
|       |-- pam_permit.so
|       |-- pam_rhosts_auth.so
|       |-- pam_rootok.so
|       |-- pam_securetty.so
|       |-- pam_shells.so
|       |-- pam_stress.so
|       |-- pam_tally.so
|       |-- pam_time.so
|       |-- pam_unix.so
|       |-- pam_unix_acct.so -> pam_unix.so
|       |-- pam_unix_auth.so -> pam_unix.so
|       |-- pam_unix_passwd.so -> pam_unix.so
|       |-- pam_unix_session.so -> pam_unix.so
|       |-- pam_userdb.so
|       |-- pam_warn.so
|       `-- pam_wheel.so
|-- sbin
|   `-- start-stop-daemon
|-- usr
|   |-- bin
|   |   |-- dircolors
|   |   |-- du
|   |   |-- install
|   |   |-- link
|   |   |-- mkfifo
|   |   |-- shred
|   |   |-- touch -> /bin/touch
|   |   `-- unlink
|   |-- lib
|   |   |-- libcrypto.so.0.9.6
|   |   |-- libdb3.so.3 -> libdb3.so.3.0.2
|   |   |-- libdb3.so.3.0.2
|   |   |-- libz.so.1 -> libz.so.1.1.4
|   |   `-- libz.so.1.1.4
|   |-- sbin
|   |   `-- sshd
|   `-- share
|       |-- locale
|       |   `-- es
|       |       |-- LC_MESSAGES
|       |       |   |-- fileutils.mo
|       |       |   |-- libc.mo
|       |       |   `-- sh-utils.mo
|       |       `-- LC_TIME -> LC_MESSAGES
|       `-- zoneinfo
|           `-- Europe
|               `-- Madrid
`-- var
    `-- run
        |-- sshd
        `-- sshd.pid

27 directories, 733 files
</example>

<appendix>Restriction de ssh pour les utilisateurs

<p>
Le serveur sshd de Debian ne vous autorisera pas à restreindre les mouvements 
des utilisateurs via le serveur étant donné que celui-ci est dépourvu de la 
fonction Chroot que la version commerciale (sshd2) possède (utilisation de 
"ChrootGroups" ou "ChrootUsers", voir <manref name="sshd2_config" section="5">). 
Toutefois, une rustine est disponible afin de vous permettre de le faire, elle 
peut être trouvée depuis 
<url id="http://bugs.debian.org/139047" name="Bug report 139047"> ou
<url id="http://www.cag.lcs.mit.edu/~raoul/"> (et sera peut-être appliquée 
au paquet OpenSSH dans le futur). Emmanuel <!-- Il ne manque pas un m a emmanuel
la? jpg --> Lacour dispose d'un paquet avec 
cette fonctionnalité sur <url id="http://debian.home-dn.net/woody/ssh/">, 
quoique la compilation est recommandée. Une description de toutes les étapes 
nécessaires peut-être aperçue sur 
<url id="http://mail.incredimail.com/howto/openssh/"> (pratiquement tout est 
applicable à Debian même s'il est question de la RedHat 7.2).
Après l'application de la rustine, vous devez juste modifier le 
<file>/etc/passwd</file> en changeant le chemin personnel des utilisateurs 
(avec le jeton spécial <tt>/./</tt>):

<example>
joeuser:x:1099:1099:Joe Random User:/home/joe/./:/bin/bash
</example>

<p>
<em>Tous deux</em>, aussi bien les accès distants au shell que la copie via 
le tunnel ssh, seront restreints.

<p>
Il faut être sûr que tous les binaires et librairies soient présents dans le 
chemin chrooté pour les utilisateurs. Ces fichiers devraient appartenir à 
root pour éviter les fraudes de l'utilisateur (tel la sortie d'une prison chrooté).
Un échantillon pourrait inclure ceci&nbsp;:

<example>
./bin:
total 660
drwxr-xr-x    2 root     root         4096 Mar 18 13:36 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
-r-xr-xr-x    1 root     root       531160 Feb  6 22:36 bash
-r-xr-xr-x    1 root     root        43916 Nov 29 13:19 ls
-r-xr-xr-x    1 root     root        16684 Nov 29 13:19 mkdir
-rwxr-xr-x    1 root     root        23960 Mar 18 13:36 more
-r-xr-xr-x    1 root     root         9916 Jul 26  2001 pwd
-r-xr-xr-x    1 root     root        24780 Nov 29 13:19 rm
lrwxrwxrwx    1 root     root            4 Mar 30 16:29 sh -> bash

./etc:
total 24
drwxr-xr-x    2 root     root         4096 Mar 15 16:13 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
-rw-r--r--    1 root     root           54 Mar 15 13:23 group
-rw-r--r--    1 root     root          428 Mar 15 15:56 hosts
-rw-r--r--    1 root     root           44 Mar 15 15:53 passwd
-rw-r--r--    1 root     root           52 Mar 15 13:23 shells

./lib:
total 1848
drwxr-xr-x    2 root     root         4096 Mar 18 13:37 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
-rwxr-xr-x    1 root     root        92511 Mar 15 12:49 ld-linux.so.2
-rwxr-xr-x    1 root     root      1170812 Mar 15 12:49 libc.so.6
-rw-r--r--    1 root     root        20900 Mar 15 13:01 libcrypt.so.1
-rw-r--r--    1 root     root         9436 Mar 15 12:49 libdl.so.2
-rw-r--r--    1 root     root       248132 Mar 15 12:48 libncurses.so.5
-rw-r--r--    1 root     root        71332 Mar 15 13:00 libnsl.so.1
-rw-r--r--    1 root     root        34144 Mar 15 16:10
libnss_files.so.2
-rw-r--r--    1 root     root        29420 Mar 15 12:57 libpam.so.0
-rw-r--r--    1 root     root       105498 Mar 15 12:51 libpthread.so.0
-rw-r--r--    1 root     root        25596 Mar 15 12:51 librt.so.1
-rw-r--r--    1 root     root         7760 Mar 15 12:59 libutil.so.1
-rw-r--r--    1 root     root        24328 Mar 15 12:57 libwrap.so.0

./usr:
total 16
drwxr-xr-x    4 root     root         4096 Mar 15 13:00 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
drwxr-xr-x    2 root     root         4096 Mar 15 15:55 bin
drwxr-xr-x    2 root     root         4096 Mar 15 15:37 lib

./usr/bin:
total 340
drwxr-xr-x    2 root     root         4096 Mar 15 15:55 .
drwxr-xr-x    4 root     root         4096 Mar 15 13:00 ..
-rwxr-xr-x    1 root     root        10332 Mar 15 15:55 env
-rwxr-xr-x    1 root     root        13052 Mar 15 13:13 id
-r-xr-xr-x    1 root     root        25432 Mar 15 12:40 scp
-rwxr-xr-x    1 root     root        43768 Mar 15 15:15 sftp
-r-sr-xr-x    1 root     root       218456 Mar 15 12:40 ssh
-rwxr-xr-x    1 root     root         9692 Mar 15 13:17 tty

./usr/lib:
total 852
drwxr-xr-x    2 root     root         4096 Mar 15 15:37 .
drwxr-xr-x    4 root     root         4096 Mar 15 13:00 ..
-rw-r--r--    1 root     root       771088 Mar 15 13:01
libcrypto.so.0.9.6
-rw-r--r--    1 root     root        54548 Mar 15 13:00 libz.so.1
-rwxr-xr-x    1 root     root        23096 Mar 15 15:37 sftp-server
</example>

<sect>Handmade environment (the hard way)

<p>It is possible to create an environment, using a trial-and-error
method, by monitoring the <prgn>sshd</prgn> server traces and log
files in order to determine the necessary files. The following
environment, contributed by José Luis Ledesma, is a sample listing of
files in a <prgn>chroot</prgn> environment for <prgn>ssh</prgn>:

<footnote>
Notice that there are no SETUID files. This makes it more difficult
for remote users to escape the <prgn>chroot</prgn>
environment. However, it also prevents users from changing their
passwords, since the <prgn>passwd</prgn> program cannot modify the
files <file>/etc/passwd</file> or <file>/etc/shadow</file>.
</footnote>

<example>
.:
total 36
drwxr-xr-x 9 root root 4096 Jun 5 10:05 ./
drwxr-xr-x 11 root root 4096 Jun 3 13:43 ../
drwxr-xr-x 2 root root 4096 Jun 4 12:13 bin/
drwxr-xr-x 2 root root 4096 Jun 4 12:16 dev/
drwxr-xr-x 4 root root 4096 Jun 4 12:35 etc/
drwxr-xr-x 3 root root 4096 Jun 4 12:13 lib/
drwxr-xr-x 2 root root 4096 Jun 4 12:35 sbin/
drwxr-xr-x 2 root root 4096 Jun 4 12:32 tmp/
drwxr-xr-x 2 root root 4096 Jun 4 12:16 usr/
./bin:
total 8368
drwxr-xr-x 2 root root 4096 Jun 4 12:13 ./
drwxr-xr-x 9 root root 4096 Jun 5 10:05 ../
-rwxr-xr-x 1 root root 109855 Jun 3 13:45 a2p*
-rwxr-xr-x 1 root root 387764 Jun 3 13:45 bash*
-rwxr-xr-x 1 root root 36365 Jun 3 13:45 c2ph*
-rwxr-xr-x 1 root root 20629 Jun 3 13:45 dprofpp*
-rwxr-xr-x 1 root root 6956 Jun 3 13:46 env*
-rwxr-xr-x 1 root root 158116 Jun 3 13:45 fax2ps*
-rwxr-xr-x 1 root root 104008 Jun 3 13:45 faxalter*
-rwxr-xr-x 1 root root 89340 Jun 3 13:45 faxcover*
-rwxr-xr-x 1 root root 441584 Jun 3 13:45 faxmail*
-rwxr-xr-x 1 root root 96036 Jun 3 13:45 faxrm*
-rwxr-xr-x 1 root root 107000 Jun 3 13:45 faxstat*
-rwxr-xr-x 1 root root 77832 Jun 4 11:46 grep*
-rwxr-xr-x 1 root root 19597 Jun 3 13:45 h2ph*
-rwxr-xr-x 1 root root 46979 Jun 3 13:45 h2xs*
-rwxr-xr-x 1 root root 10420 Jun 3 13:46 id*
-rwxr-xr-x 1 root root 4528 Jun 3 13:46 ldd*
-rwxr-xr-x 1 root root 111386 Jun 4 11:46 less*
-r-xr-xr-x 1 root root 26168 Jun 3 13:45 login*
-rwxr-xr-x 1 root root 49164 Jun 3 13:45 ls*
-rwxr-xr-x 1 root root 11600 Jun 3 13:45 mkdir*
-rwxr-xr-x 1 root root 24780 Jun 3 13:45 more*
-rwxr-xr-x 1 root root 154980 Jun 3 13:45 pal2rgb*
-rwxr-xr-x 1 root root 27920 Jun 3 13:46 passwd*
-rwxr-xr-x 1 root root 4241 Jun 3 13:45 pl2pm*
-rwxr-xr-x 1 root root 2350 Jun 3 13:45 pod2html*
-rwxr-xr-x 1 root root 7875 Jun 3 13:45 pod2latex*
-rwxr-xr-x 1 root root 17587 Jun 3 13:45 pod2man*
-rwxr-xr-x 1 root root 6877 Jun 3 13:45 pod2text*
-rwxr-xr-x 1 root root 3300 Jun 3 13:45 pod2usage*
-rwxr-xr-x 1 root root 3341 Jun 3 13:45 podchecker*
-rwxr-xr-x 1 root root 2483 Jun 3 13:45 podselect*
-r-xr-xr-x 1 root root 82412 Jun 4 11:46 ps*
-rwxr-xr-x 1 root root 36365 Jun 3 13:45 pstruct*
-rwxr-xr-x 1 root root 7120 Jun 3 13:45 pwd*
-rwxr-xr-x 1 root root 179884 Jun 3 13:45 rgb2ycbcr*
-rwxr-xr-x 1 root root 20532 Jun 3 13:45 rm*
-rwxr-xr-x 1 root root 6720 Jun 4 10:15 rmdir*
-rwxr-xr-x 1 root root 14705 Jun 3 13:45 s2p*
-rwxr-xr-x 1 root root 28764 Jun 3 13:46 scp*
-rwxr-xr-x 1 root root 385000 Jun 3 13:45 sendfax*
-rwxr-xr-x 1 root root 67548 Jun 3 13:45 sendpage*
-rwxr-xr-x 1 root root 88632 Jun 3 13:46 sftp*
-rwxr-xr-x 1 root root 387764 Jun 3 13:45 sh*
-rws--x--x 1 root root 744500 Jun 3 13:46 slogin*
-rwxr-xr-x 1 root root 14523 Jun 3 13:46 splain*
-rws--x--x 1 root root 744500 Jun 3 13:46 ssh*
-rwxr-xr-x 1 root root 570960 Jun 3 13:46 ssh-add*
-rwxr-xr-x 1 root root 502952 Jun 3 13:46 ssh-agent*
-rwxr-xr-x 1 root root 575740 Jun 3 13:46 ssh-keygen*
-rwxr-xr-x 1 root root 383480 Jun 3 13:46 ssh-keyscan*
-rwxr-xr-x 1 root root 39 Jun 3 13:46 ssh_europa*
-rwxr-xr-x 1 root root 107252 Jun 4 10:14 strace*
-rwxr-xr-x 1 root root 8323 Jun 4 10:14 strace-graph*
-rwxr-xr-x 1 root root 158088 Jun 3 13:46 thumbnail*
-rwxr-xr-x 1 root root 6312 Jun 3 13:46 tty*
-rwxr-xr-x 1 root root 55904 Jun 4 11:46 useradd*
-rwxr-xr-x 1 root root 585656 Jun 4 11:47 vi*
-rwxr-xr-x 1 root root 6444 Jun 4 11:45 whoami*
./dev:
total 8
drwxr-xr-x 2 root root 4096 Jun 4 12:16 ./
drwxr-xr-x 9 root root 4096 Jun 5 10:05 ../
crw-r--r-- 1 root root 1, 9 Jun 3 13:43 urandom
./etc:
total 208
drwxr-xr-x 4 root root 4096 Jun 4 12:35 ./
drwxr-xr-x 9 root root 4096 Jun 5 10:05 ../
-rw------- 1 root root 0 Jun 4 11:46 .pwd.lock
-rw-r--r-- 1 root root 653 Jun 3 13:46 group
-rw-r--r-- 1 root root 242 Jun 4 11:33 host.conf
-rw-r--r-- 1 root root 857 Jun 4 12:04 hosts
-rw-r--r-- 1 root root 1050 Jun 4 11:29 ld.so.cache
-rw-r--r-- 1 root root 304 Jun 4 11:28 ld.so.conf
-rw-r--r-- 1 root root 235 Jun 4 11:27 ld.so.conf~
-rw-r--r-- 1 root root 88039 Jun 3 13:46 moduli
-rw-r--r-- 1 root root 1342 Jun 4 11:34 nsswitch.conf
drwxr-xr-x 2 root root 4096 Jun 4 12:02 pam.d/
-rw-r--r-- 1 root root 28 Jun 4 12:00 pam_smb.conf
-rw-r--r-- 1 root root 2520 Jun 4 11:57 passwd
-rw-r--r-- 1 root root 7228 Jun 3 13:48 profile
-rw-r--r-- 1 root root 1339 Jun 4 11:33 protocols
-rw-r--r-- 1 root root 274 Jun 4 11:44 resolv.conf
drwxr-xr-x 2 root root 4096 Jun 3 13:43 security/
-rw-r----- 1 root root 1178 Jun 4 11:51 shadow
-rw------- 1 root root 80 Jun 4 11:45 shadow-
-rw-r----- 1 root root 1178 Jun 4 11:48 shadow.old
-rw-r--r-- 1 root root 161 Jun 3 13:46 shells
-rw-r--r-- 1 root root 1144 Jun 3 13:46 ssh_config
-rw------- 1 root root 668 Jun 3 13:46 ssh_host_dsa_key
-rw-r--r-- 1 root root 602 Jun 3 13:46 ssh_host_dsa_key.pub
-rw------- 1 root root 527 Jun 3 13:46 ssh_host_key
-rw-r--r-- 1 root root 331 Jun 3 13:46 ssh_host_key.pub
-rw------- 1 root root 883 Jun 3 13:46 ssh_host_rsa_key
-rw-r--r-- 1 root root 222 Jun 3 13:46 ssh_host_rsa_key.pub
-rw-r--r-- 1 root root 2471 Jun 4 12:15 sshd_config
./etc/pam.d:
total 24
drwxr-xr-x 2 root root 4096 Jun 4 12:02 ./
drwxr-xr-x 4 root root 4096 Jun 4 12:35 ../
lrwxrwxrwx 1 root root 4 Jun 4 12:02 other -> sshd
-rw-r--r-- 1 root root 318 Jun 3 13:46 passwd
-rw-r--r-- 1 root root 546 Jun 4 11:36 ssh
-rw-r--r-- 1 root root 479 Jun 4 12:02 sshd
-rw-r--r-- 1 root root 370 Jun 3 13:46 su
./etc/security:
total 32
drwxr-xr-x 2 root root 4096 Jun 3 13:43 ./
drwxr-xr-x 4 root root 4096 Jun 4 12:35 ../
-rw-r--r-- 1 root root 1971 Jun 3 13:46 access.conf
-rw-r--r-- 1 root root 184 Jun 3 13:46 chroot.conf
-rw-r--r-- 1 root root 2145 Jun 3 13:46 group.conf
-rw-r--r-- 1 root root 1356 Jun 3 13:46 limits.conf
-rw-r--r-- 1 root root 2858 Jun 3 13:46 pam_env.conf
-rw-r--r-- 1 root root 2154 Jun 3 13:46 time.conf
./lib:
total 8316
drwxr-xr-x 3 root root 4096 Jun 4 12:13 ./
drwxr-xr-x 9 root root 4096 Jun 5 10:05 ../
-rw-r--r-- 1 root root 1024 Jun 4 11:51 cracklib_dict.hwm
-rw-r--r-- 1 root root 214324 Jun 4 11:51 cracklib_dict.pwd
-rw-r--r-- 1 root root 11360 Jun 4 11:51 cracklib_dict.pwi
-rwxr-xr-x 1 root root 342427 Jun 3 13:46 ld-linux.so.2*
-rwxr-xr-x 1 root root 4061504 Jun 3 13:46 libc.so.6*
lrwxrwxrwx 1 root root 15 Jun 4 12:11 libcrack.so -> libcrack.so.2.7*
lrwxrwxrwx 1 root root 15 Jun 4 12:11 libcrack.so.2 -> libcrack.so.2.7*
-rwxr-xr-x 1 root root 33291 Jun 4 11:39 libcrack.so.2.7*
-rwxr-xr-x 1 root root 60988 Jun 3 13:46 libcrypt.so.1*
-rwxr-xr-x 1 root root 71846 Jun 3 13:46 libdl.so.2*
-rwxr-xr-x 1 root root 27762 Jun 3 13:46 libhistory.so.4.0*
lrwxrwxrwx 1 root root 17 Jun 4 12:12 libncurses.so.4 -> libncurses.so.4.2*
-rwxr-xr-x 1 root root 503903 Jun 3 13:46 libncurses.so.4.2*
lrwxrwxrwx 1 root root 17 Jun 4 12:12 libncurses.so.5 -> libncurses.so.5.0*
-rwxr-xr-x 1 root root 549429 Jun 3 13:46 libncurses.so.5.0*
-rwxr-xr-x 1 root root 369801 Jun 3 13:46 libnsl.so.1*
-rwxr-xr-x 1 root root 142563 Jun 4 11:49 libnss_compat.so.1*
-rwxr-xr-x 1 root root 215569 Jun 4 11:49 libnss_compat.so.2*
-rwxr-xr-x 1 root root 61648 Jun 4 11:34 libnss_dns.so.1*
-rwxr-xr-x 1 root root 63453 Jun 4 11:34 libnss_dns.so.2*
-rwxr-xr-x 1 root root 63782 Jun 4 11:34 libnss_dns6.so.2*
-rwxr-xr-x 1 root root 205715 Jun 3 13:46 libnss_files.so.1*
-rwxr-xr-x 1 root root 235932 Jun 3 13:49 libnss_files.so.2*
-rwxr-xr-x 1 root root 204383 Jun 4 11:33 libnss_nis.so.1*
-rwxr-xr-x 1 root root 254023 Jun 4 11:33 libnss_nis.so.2*
-rwxr-xr-x 1 root root 256465 Jun 4 11:33 libnss_nisplus.so.2*
lrwxrwxrwx 1 root root 14 Jun 4 12:12 libpam.so.0 -> libpam.so.0.72*
-rwxr-xr-x 1 root root 31449 Jun 3 13:46 libpam.so.0.72*
lrwxrwxrwx 1 root root 19 Jun 4 12:12 libpam_misc.so.0 ->
libpam_misc.so.0.72*
-rwxr-xr-x 1 root root 8125 Jun 3 13:46 libpam_misc.so.0.72*
lrwxrwxrwx 1 root root 15 Jun 4 12:12 libpamc.so.0 -> libpamc.so.0.72*
-rwxr-xr-x 1 root root 10499 Jun 3 13:46 libpamc.so.0.72*
-rwxr-xr-x 1 root root 176427 Jun 3 13:46 libreadline.so.4.0*
-rwxr-xr-x 1 root root 44729 Jun 3 13:46 libutil.so.1*
-rwxr-xr-x 1 root root 70254 Jun 3 13:46 libz.a*
lrwxrwxrwx 1 root root 13 Jun 4 12:13 libz.so -> libz.so.1.1.3*
lrwxrwxrwx 1 root root 13 Jun 4 12:13 libz.so.1 -> libz.so.1.1.3*
-rwxr-xr-x 1 root root 63312 Jun 3 13:46 libz.so.1.1.3*
drwxr-xr-x 2 root root 4096 Jun 4 12:00 security/
./lib/security:
total 668
drwxr-xr-x 2 root root 4096 Jun 4 12:00 ./
drwxr-xr-x 3 root root 4096 Jun 4 12:13 ../
-rwxr-xr-x 1 root root 10067 Jun 3 13:46 pam_access.so*
-rwxr-xr-x 1 root root 8300 Jun 3 13:46 pam_chroot.so*
-rwxr-xr-x 1 root root 14397 Jun 3 13:46 pam_cracklib.so*
-rwxr-xr-x 1 root root 5082 Jun 3 13:46 pam_deny.so*
-rwxr-xr-x 1 root root 13153 Jun 3 13:46 pam_env.so*
-rwxr-xr-x 1 root root 13371 Jun 3 13:46 pam_filter.so*
-rwxr-xr-x 1 root root 7957 Jun 3 13:46 pam_ftp.so*
-rwxr-xr-x 1 root root 12771 Jun 3 13:46 pam_group.so*
-rwxr-xr-x 1 root root 10174 Jun 3 13:46 pam_issue.so*
-rwxr-xr-x 1 root root 9774 Jun 3 13:46 pam_lastlog.so*
-rwxr-xr-x 1 root root 13591 Jun 3 13:46 pam_limits.so*
-rwxr-xr-x 1 root root 11268 Jun 3 13:46 pam_listfile.so*
-rwxr-xr-x 1 root root 11182 Jun 3 13:46 pam_mail.so*
-rwxr-xr-x 1 root root 5923 Jun 3 13:46 pam_nologin.so*
-rwxr-xr-x 1 root root 5460 Jun 3 13:46 pam_permit.so*
-rwxr-xr-x 1 root root 18226 Jun 3 13:46 pam_pwcheck.so*
-rwxr-xr-x 1 root root 12590 Jun 3 13:46 pam_rhosts_auth.so*
-rwxr-xr-x 1 root root 5551 Jun 3 13:46 pam_rootok.so*
-rwxr-xr-x 1 root root 7239 Jun 3 13:46 pam_securetty.so*
-rwxr-xr-x 1 root root 6551 Jun 3 13:46 pam_shells.so*
-rwxr-xr-x 1 root root 55925 Jun 4 12:00 pam_smb_auth.so*
-rwxr-xr-x 1 root root 12678 Jun 3 13:46 pam_stress.so*
-rwxr-xr-x 1 root root 11170 Jun 3 13:46 pam_tally.so*
-rwxr-xr-x 1 root root 11124 Jun 3 13:46 pam_time.so*
-rwxr-xr-x 1 root root 45703 Jun 3 13:46 pam_unix.so*
-rwxr-xr-x 1 root root 45703 Jun 3 13:46 pam_unix2.so*
-rwxr-xr-x 1 root root 45386 Jun 3 13:46 pam_unix_acct.so*
-rwxr-xr-x 1 root root 45386 Jun 3 13:46 pam_unix_auth.so*
-rwxr-xr-x 1 root root 45386 Jun 3 13:46 pam_unix_passwd.so*
-rwxr-xr-x 1 root root 45386 Jun 3 13:46 pam_unix_session.so*
-rwxr-xr-x 1 root root 9726 Jun 3 13:46 pam_userdb.so*
-rwxr-xr-x 1 root root 6424 Jun 3 13:46 pam_warn.so*
-rwxr-xr-x 1 root root 7460 Jun 3 13:46 pam_wheel.so*
./sbin:
total 3132
drwxr-xr-x 2 root root 4096 Jun 4 12:35 ./
drwxr-xr-x 9 root root 4096 Jun 5 10:05 ../
-rwxr-xr-x 1 root root 178256 Jun 3 13:46 choptest*
-rwxr-xr-x 1 root root 184032 Jun 3 13:46 cqtest*
-rwxr-xr-x 1 root root 81096 Jun 3 13:46 dialtest*
-rwxr-xr-x 1 root root 1142128 Jun 4 11:28 ldconfig*
-rwxr-xr-x 1 root root 2868 Jun 3 13:46 lockname*
-rwxr-xr-x 1 root root 3340 Jun 3 13:46 ondelay*
-rwxr-xr-x 1 root root 376796 Jun 3 13:46 pagesend*
-rwxr-xr-x 1 root root 13950 Jun 3 13:46 probemodem*
-rwxr-xr-x 1 root root 9234 Jun 3 13:46 recvstats*
-rwxr-xr-x 1 root root 64480 Jun 3 13:46 sftp-server*
-rwxr-xr-x 1 root root 744412 Jun 3 13:46 sshd*
-rwxr-xr-x 1 root root 30750 Jun 4 11:46 su*
-rwxr-xr-x 1 root root 194632 Jun 3 13:46 tagtest*
-rwxr-xr-x 1 root root 69892 Jun 3 13:46 tsitest*
-rwxr-xr-x 1 root root 43792 Jun 3 13:46 typetest*
./tmp:
total 8
drwxr-xr-x 2 root root 4096 Jun 4 12:32 ./
drwxr-xr-x 9 root root 4096 Jun 5 10:05 ../
./usr:
total 8
drwxr-xr-x 2 root root 4096 Jun 4 12:16 ./
drwxr-xr-x 9 root root 4096 Jun 5 10:05 ../
lrwxrwxrwx 1 root root 7 Jun 4 12:14 bin -> ../bin//
lrwxrwxrwx 1 root root 7 Jun 4 11:33 lib -> ../lib//
lrwxrwxrwx 1 root root 8 Jun 4 12:13 sbin -> ../sbin//
</example>



<appendix id="chroot-apache-env"><Prgn>Chroot</Prgn> environment for <PRGN>Apache</PRGN>

<sect>Introduction

<p>The <prgn>chroot</prgn> utility is often used to jail a daemon in a
restricted tree. You can use it to insulate services from one another,
so that security issues in a software package do not jeoparize the
whole server. When using the <prgn>makejail</prgn> script, setting up
and updating the chrooted tree is much easier.</p>

<sect1>Licensing 

<p>This document is copyright 2002 Alexandre Ratti. It has been
released underthe GNU-FDL 1.2 (GNU Free Documentation Licence) and is
included in this manual with his explicit permission.

</sect1>
</sect>

<sect>Installing the server

<p>This procedure was tested on Debian GNU/Linux&nbsp;3.0 (Woody) with
<prgn>makejail</prgn> 0.0.4-1 (in Debian/testing).

<list>

<item> <p>Log in as <prgn>root</prgn> and create a new jail
directory:

<example>
$ mkdir -p /var/chroot/apache
</example>

 </item>

 <item> <p>Create a new user and a new group. The chrooted Apache
server will run as this user/group, which isn't used for anything else
on the system. In this example, both user and group are called
<prgn>chrapach</prgn>.

 <example> 
 $ adduser --home /var/chroot/apache --shell /bin/false \
 --no-create-home --system --group chrapach
 </example>

<p>FIXME: is a new user needed? (Apache already runs as the apache user)</p>

  </item>

  <item>Install Apache as usual on Debian: <tt>apt-get install
apache</tt></item>

<item>Set up Apache (eg. define your subdomains, etc.). In the
<file>/etc/apache/httpd.conf</file> configuration file , set the
<em>Group</em> and <em>User</em> options to <tt>chrapach</tt>. Restart
Apache and make sure the server is working correctly. Now, stop the
Apache daemon.</item>

<item>Install <prgn>makejail</prgn> (available in Debian/testing for
now). You should also <prgn>wget</prgn> et <prgn>lynx</prgn> as
they are will be used by <prgn>makejail</prgn> to test the chrooted
server: <tt>apt-get install makejail wget lynx</tt></item>

<item>Copy the sample configuration file for Apache to the
<file>/etc/makejail</file> directory:
 <example> 
 # cp/usr/share/doc/makejail/examples/apache.py /etc/makejail/ 
 </example>

</item>
 
 <item>Edit <file>/etc/makejail/apache.py</file>. You need to change
the <em>chroot</em>, <em>users</em> and <em>groups</em> options. To
run this version of <prgn>makejail</prgn>, you can also added a
<prgn>packages</prgn> option. See the <url
id="http://www.floc.net/makejail/current/doc/" name="makejail
documentation">. A sample is shown here:

<example>
chroot=&quot;/var/chroot/apache&quot;
testCommandsInsideJail=[&quot;/usr/sbin/apachectl start&quot;]
processNames=[&quot;apache&quot;]
testCommandsOutsideJail=[&quot;wget -r --spider http://localhost/&quot;,
                         &quot;lynx --source https://localhost/&quot;]
preserve=[&quot;/var/www&quot;,
          &quot;/var/log/apache&quot;,
          &quot;/dev/log&quot;]
users=[&quot;chrapach&quot;]
groups=[&quot;chrapach&quot;]
packages=[&quot;apache&quot;, &quot;apache-common&quot;]
userFiles=[&quot;/etc/password&quot;,
           &quot;/etc/shadow&quot;]
groupFiles=[&quot;/etc/group&quot;,
            &quot;/etc/gshadow&quot;]
forceCopy=[&quot;/etc/hosts&quot;,
           &quot;/etc/mime.types&quot;]
</example>

<p><em>FIXME:</em> some options do not seem to work properly. For
instance, <file>/etc/shadow</file> and<file>/etc/gshadow</file> are
not copied, whereas <file>/etc/password</file> and
<file>/etc/group</file> are fully copied instead of being
filtered.</p>
 </item>
 
<item>Create the chroot tree: <tt>makejail /etc/makejail/apache.py</tt></item>

<item>If <file>/etc/password</file> and <file>/etc/group</file> were
fully copied, type:

      <example>
      $ grep chrapach /etc/passwd &gt; /var/chroot/apache/etc/passwd
      $ grep chrapach /etc/group &gt; /var/chroot/apache/etc/group
      </example>
to replace them with filtered copies.</item>

<item>Copy the Web site pages and the logs into the jail. These files
are not copied automatically (see the <em>preserve</em> option in
<prgn>makejail</prgn>'s configuration file).
      <example>
      # cp -Rp /var/www /var/chroot/apache/var
      # cp -Rp /var/log/apache/*.log /var/chroot/apache/var/log/apache
      </example>
  </item>

<item>Edit the startup script for the system logging daemon so that it
also listen to the <file>/var/chroot/apache/dev/log</file> socket. In
<file>/etc/init.d/sysklogd</file>, replace:
<tt>SYSLOGD=&quot;&quot;</tt> with <tt>SYSLOGD=&quot; -a
/var/chroot/apache/dev/log&quot;</tt> and restart the daemon
(<tt>/etc/init.d/sysklogd restart</tt>).</item>

  <item> Edit the Apache startup script (<file>/etc/init.d/apache</file>). You might need to make some changes to the default startup script for it to run properly with a chrooted 
      tree. Such as:
    <list>
      <item>set a new <em>CHRDIR</em> variable at the top of the file;</item>
      <item>edit the <em>start</em>, <em>stop</em>, <em>reload</em>, 
        etc. sections;</item>
      <item>add a line to mount and unmount the <file>/proc</file>
filesystem within the jail.  </item>
    </list>
<example>
#! /bin/bash
#
# apache	Start the apache HTTP server.
#

CHRDIR=/var/chroot/apache

NAME=apache
PATH=/bin:/usr/bin:/sbin:/usr/sbin
DAEMON=/usr/sbin/apache
SUEXEC=/usr/lib/apache/suexec
PIDFILE=/var/run/$NAME.pid
CONF=/etc/apache/httpd.conf
APACHECTL=/usr/sbin/apachectl 

trap "" 1
export LANG=C
export PATH

test -f $DAEMON || exit 0
test -f $APACHECTL || exit 0

# ensure we don't leak environment vars into apachectl
APACHECTL="env -i LANG=${LANG} PATH=${PATH} $APACHECTL"

if egrep -q -i "^[[:space:]]*ServerType[[:space:]]+inet" $CONF
then
    exit 0
fi

case "$1" in
  start)
    echo -n "Starting web server: $NAME"
    mount -t proc proc /var/chroot/apache/proc
    start-stop-daemon --start --pidfile $PIDFILE --exec $DAEMON \
	--chroot $CHRDIR
    ;;

  stop)
    echo -n "Stopping web server: $NAME"
    start-stop-daemon --stop --pidfile "$CHRDIR/$PIDFILE" --oknodo
    umount /var/chroot/apache/proc
    ;;

  reload)
    echo -n "Reloading $NAME configuration"
    start-stop-daemon --stop --pidfile "$CHRDIR/$PIDFILE" \
	--signal USR1 --startas $DAEMON --chroot $CHRDIR
    ;;

  reload-modules)
    echo -n "Reloading $NAME modules"
    start-stop-daemon --stop --pidfile "$CHRDIR/$PIDFILE" --oknodo \
	--retry 30
    start-stop-daemon --start --pidfile $PIDFILE \
	--exec $DAEMON --chroot $CHRDIR
    ;;

  restart)
    $0 reload-modules
    exit $?
    ;;

  force-reload)
    $0 reload-modules
    exit $?
    ;;

  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|reload|reload-modules|force-reload|restart}"
    exit 1
    ;;
esac

if [ $? == 0 ]; then
	echo .
	exit 0
else
	echo failed
	exit 1
fi
</example>

      <p><em>FIXME</em>: should the first Apache process be run as
another user than root (i.e. add --chuid chrapach:chrapach)? Cons:
chrapach will need write access to the logs, which is awkward.</p>
  </item>

  <item>Replace in <file>/etc/logrotate.d/apache</file>
<tt>/var/log/apache/*.log</tt> with
<tt>/var/chroot/apache/var/log/apache/*.log</tt> </item>

  <item>Start Apache (<prgn>/etc/init.d/apache start</prgn>) and check
what is it reported in the jail log
(<file>/var/chroot/apache/var/log/apache/error.log</file>).  If your
setup is more complex, (eg. if you also use PHP and MySQL), files will
probably be missing. if some files are not copied automatically by
<prgn>makejail</prgn>, you can list them in the <em>forceCopy</em> (to
copy files directly) or <em>packages</em> (to copy full packages and
their dependencies) option the <file>/etc/makejail/apache.py</file>
configuration file.  </item>

  <item> 
    <p>Type <tt>ps aux | grep apache</tt> to make sure Apache 
      is running. You should see something like:
      <example>
      root 180 0.0 1.1 2936 1436 ? S 04:03 0:00 /usr/sbin/apache
      chrapach 189 0.0 1.1 2960 1456 ? S 04:03 0:00 /usr/sbin/apache
      chrapach 190 0.0 1.1 2960 1456 ? S 04:03 0:00 /usr/sbin/apache
      chrapach 191 0.0 1.1 2960 1456 ? S 04:03 0:00 /usr/sbin/apache
      chrapach 192 0.0 1.1 2960 1456 ? S 04:03 0:00 /usr/sbin/apache
      chrapach 193 0.0 1.1 2960 1456 ? S 04:03 0:00 /usr/sbin/apache
      </example>
  </item>

  <item> Make sure the Apache processes are running chrooted by lookin
in the <file>/proc</file> filesystem: <tt>ls -la
/proc/<em>process_number</em>/root/.</tt> where <em>process</em> is one
of the PID numbers listed above (2nd column; 189
    for instance). The ntries for a restricted tree should be listed:
    <example>
    drwxr-sr-x 10 root staff 240 Dec 2 16:06 .
    drwxrwsr-x 4 root staff 72 Dec 2 08:07 ..
    drwxr-xr-x 2 root root 144 Dec 2 16:05 bin
    drwxr-xr-x 2 root root 120 Dec 3 04:03 dev
    drwxr-xr-x 5 root root 408 Dec 3 04:03 etc
    drwxr-xr-x 2 root root 800 Dec 2 16:06 lib
    dr-xr-xr-x 43 root root 0 Dec 3 05:03 proc
    drwxr-xr-x 2 root root 48 Dec 2 16:06 sbin
    drwxr-xr-x 6 root root 144 Dec 2 16:04 usr
    drwxr-xr-x 7 root root 168 Dec 2 16:06 var
    </example>
    <p>To automate this test, you can type:<tt>ls -la /proc/`cat
/var/chroot/apache/var/run/apache.pid`/root/.</tt></p>

    <p><em>FIXME</em>: Add other tests that can be run to make sure the
jail is closed?</p>
	</item>
</list>

<p>The reason I like this is because setting up the jail is not very
difficult and  the server can be updated in just two lines:

<example> 
apt-get update &amp;&amp; apt-get install apache
makejail /etc/makejail/apache.py
</example>

</sect>
<sect>See also

<p>If you are looking for more information you can consider these
sources of information in which the information presented is based:
<list>

  <item><url id="http://www.floc.net/makejail/" name="makejail
homepage"> , this program was written by Alain Tesio)</item>

<!-- Not appropiate for this section 
  <item><a href="http://www.easter-eggs.org/article242.html">Bind9 chroot&eacute; 
    avec <prgn>makejail</prgn></a>, Pascal Brugier, easter-eggs.org, 21/03/2002</item>
-->

  <item><url id="http://www.networkdweebs.com/chroot.html"
name="Chrooting daemons and system processes"> by Jonathan, Network
Dweebs, 21/10/2002</item>

  <item><url
id="http://www.digitaltoad.net/docs/guide/secure_rh/chap29sec254.html"
name="Apache in a chroot jail"> in <em>Securing and Optimizing
Linux</em> written by Gerhard Mourani,
    2000 </item>
</list>
</sect>
</appendix>


<!-- <sect id="kernel-patch">Ajout de rustines pour le noyau 
     <p>FIXME: More content

<p>Debian GNU/Linux fournit quelques rustines pour le noyau Linux qui améliorent 
sa sécurité. Ceci inclus 

<list>

<item>Linux Intrusion Detection (dans la paquet <package>lids-2.2.19</package>)

<item>Linux Capabilities (dans la paquet <package>lcap</package>)

<item>Linux Trustees (dans la paquet <package>trustees</package>)

<item>NSA Enhanced Linux (dans la paquet <package>selinux</package> also 
available from <url id="http://www.coker.com.au/selinux/" name="the developer's website">)

<item><url name="kernel-patch-2.2.18-openwall"
id="http://packages.debian.org/kernel-patch-2.2.18-openwall">

<item><package>kernel-patch-2.2.19-harden</package>

<item>Linux capabilities (dans la paquet <package>lcap</package>

<item>IPSEC kernel support (dans la paquet <package>kernel-patch-freeswan</package>)

<item><package>kernel-patch-int</package>

</list>
 -->


<!-- 
<p>Il y a aussi un grand nombre de logiciel d'audit de log, sur-site, comme
<package>logcheck</package>. Ces outils peuvent être très utiles s'ils sont
correctement personnalisés pour alerter l'administrateur à propos d'évènements
inhabituels se produisant sur le système de fichier local. <prgn>Logcheck</prgn>
peut être grandement personnalisé, il peut donc envoyer des mails
pour des évènements récupérés par les logs qui sont dignes d'attention.
L'installation par défaut inclus des profiles pour
des évènements ignorés et des violations de police pour trois types d'installation
(station de travail, serveur et paranoïa). Le paquetage Debian inclue un
fichier de configuration <file>/etc/logcheck/logcheck.conf</file>, complété 
par le programme, indiquant à qui sont envoyé les vérifications. Il fournit aussi
une ouverture pour des paquetages qui fournissent  des services pour implémenter
de nouvelles polices dans les répertoires suivant:
<file>/etc/logcheck/hacking.d/_packagename_</file>,
<file>/etc/logcheck/violations.d/_packagename_</file>,
<file>/etc/logcheck/violations.ignore.d/_packagename_</file>,
<file>/etc/logcheck/ignore.d.paranoid/_packagename_</file>,
<file>/etc/logcheck/ignore.d.server/_packagename_</file>, and
<file>/etc/logcheck/ignore.d.workstation/_packagename_</file>. 
Cependant,peu de paquetage font actuellement cela. Si vous possédez une police qui peut être utile
aux autres utilisateurs, envoyez la comme rapport de bug pour le paquetage adéquat.
Pour plus d'information voir
<file>/usr/share/doc/logcheck/README.Debian</file>

 -->

</book>

<!-- Local Variables: -->
<!-- mode: flyspell -->
<!-- End: -->