<!doctype debiandoc system>
<!--
# TODO list:
# - There was a 'useful software section' why was it removed? jfs
# - Shorten overlong lines - there are lots of sections (by jfs?) where
#   lines are routinely longer than 80 characters. Actually it makes sense
#   to author SGML with much shorter lines, because it makes editing simpler
#   (while the internal line length of the SGML source is obviously not
#   visible in any way to the end user).
#   (occur (make-string 80 ?.))   ;  C-x C-e here
# - Remove gratuitous trailing whitespace; M-x occur " +$"
# - Consider changing order of subsections so as to match the order in
#   the checklist appendix
-->

<book>

<titlepag>
<!-- Title information -->
<title>Anleitung zum Absichern von Debian
<author>
<name>Javier Fernández-Sanguino Peña</name>
<email>jfs@computer.org</email>
</author>
<version>2.5 (beta)
<date>Sat, 17 Aug 2002 12:23:36 +0200

<abstract>
Dieses Dokument beschreibt den Prozess, eine Debian-Standard-Installation
abzusichern und abzuhärten. Es deckt die alltägliche Arbeit,
eine sichere Netzwerkumgebung mit Debian GNU/Linux zu schaffen ab, und gibt
zusätzlich Informationen über verfügbare Sicherheits-Tools
und die Arbeit des Debian Sicherheit-Teams.
</abstract>

<copyright> 
<copyrightsummary>Copyright &copy;  2002 Javier Fernández-Sanguino Peña
<p>Copyright &copy;  2001  Alexander Reelsen, Javier Fernández-Sanguino Peña
<p>Copyright &copy;  2000  Alexander Reelsen

<p>Dieses Dokument unterliegt der GNU Free Documentation License. Es wird
in der Hoffnung veröffentlicht, dass es sich als nützlich erweisen
könnte, aber OHNE JEDE GEWÄHRLEISTUNG.
</copyright>

</titlepag>

<!-- Table of contents -->
<toc>

<!-- Begin the document -->

<chapt>Einleitung
<p>
Eines der schwierigsten Dinge beim Schreiben über Sicherheit ist,
dass jeder Fall einzigartig ist. Sie müssen zwei Dinge
beachten: Die Gefahr aus der Umgebung und das Bedürfnis an
Sicherheit Ihrer Seite, Ihres Hosts oder Ihres Netzwerkes. So
unterscheiden sich zum Beispiel die Sicherheitsbedürfnisse eines
Heimanwenders komplett von den Sicherheitsbedürfnissen des
Netzwerkes einer Bank. Während die Hauptgefahr eines Heimanwenders
von "Script-Kiddies" ausgeht, muss sich das Netzwerk einer Bank um
direkte Angriffe sorgen. Zusätzlich muss eine Bank die Daten ihrer
Kunden mit mathematischer Präzision beschützen. Um es kurz zu
machen: Jeder Nutzer muss selbst zwischen Benutzerfreundlichkeit und
Sicherheit/Paranoia abwägen.

<!-- Is this metaphor really appropriate? Sounds like rounding errors to me, era -->
<p>Beachten Sie bitte, dass diese Anleitung nur Software-Themen
behandelt. Die beste Software der Welt kann Sie nicht schützen, wenn
jemand direkten Zugang zu Ihrem Rechner hat. Sie können ihn unter
Ihren Schreibtisch stellen, oder Sie können ihn in einen starken
Bunker mit einer ganzen Armee davor stellen. Trotzdem kann der Rechner
unter Ihrem Schreibtisch weitaus sicherer sein - von der Software-Seite
aus gesehen - als der eingebunkerte, wenn Ihr Schreibtisch-Rechner richtig
konfiguriert und die Software des eingebunkerten Rechners voller
Sicherheitslöcher ist. Sie müssen beide Möglichkeiten
betrachten.

<p>Dieses Dokument gibt Ihnen lediglich einen kleinen Überblick, was
Sie tun können, um die Sicherheit Ihres Debian GNU/Linux Systems zu
erhöhen. Wenn Sie bereits andere Dokumente über Sicherheit
unter Linux gelesen haben, werden Sie feststellen, dass es einige
Überschneidungen geben wird. Wie auch immer: Dieses Dokument versucht
nicht, die ultimative Informationsquelle zu sein, es versucht nur, die
gleichen Informationen so zu adaptieren, dass sie gut auf ein Debian
GNU/Linux System passen. Unterschiedliche Distributionen erledigen manche
Dinge auf unterschiedliche Art (zum Beispiel den Aufruf von Daemons);
hier finden Sie Material, das zu Debians Prozeduren und Tools passt.
<!-- 
# Does this approximate the intent of the original author? (FIXME: check)
# Original text said: "you will find here [sic] a different approach,
# using Debian's tools, regarding security." era
-->
<!-- IMHO yes, jfs -->

<p>Wenn Sie Kommentare, Ergänzungen oder andere Anregungen haben,
mailen Sie sie bitte an <!-- <url name="Alexander Reelsen" id="mailto:ar@rhwd.de"> and  -->
<url name="Javier Fernández-Sanguino" id="mailto:jfs@computer.org">
(oder jfs@debian.org) und sie werden in diese Anleitung eingearbeitet
werden.
<p>Bei Fehlern in dieser Übersetzung wenden Sie sich bitte an <url
name="Alexander Schmehl" id="mailto:schmehl@cs.uni-frankfurt.de">

<sect>Herunterladen dieser Anleitung
<p>
Sie können sich die neuste Version der &quot;Anleitung zum Absichern
von Debian&quot; beim <url name="Debian Documentation Project"
id="http://www.debian.org/doc/manuals/securing-debian-howto/">
herunterladen oder anschauen. Sie können auch gerne die
unterschiedlichen Versionen im <url name="CVS server"
id="http://cvs.debian.org/ddp/manuals.sgml/securing-howto/?cvsroot=debian-doc">
durchforsten.

<p>Sie können außerdem eine reine <url
id="http://www.debian.org/doc/manuals/securing-debian-howto/securing-debian-howto.de.txt"
name="Text-Version"> von der Seite des Debian-Dokumentationsprojektes
bekommen. Andere Formate, wie zum Beispiel PDF, stehen (noch) nicht zur
Verfügung, Sie können aber das Paket <url
id="http://packages.debian.org/harden-doc" name="harden-doc">, in welchem
das gleiche Dokument in den Formaten HTML, txt und PDF enthalten ist,
herunterladen und installieren.

<!-- 
<p>
Previous (out of date) versions of this HOWTO can be found here:

<list>
<item><url name="Text-only"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.txt">
<item><url name="HTML"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.html">
<item><url name="HTML, tarred and gzipped"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.tar.gz">
<item><url name="SGML"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.sgml">
</list>
-->
<!-- TODO: remove these stale links rather than leave references to -->
<!-- the old versions hanging around? era -->


<sect>Organisatorisches / Feedback
<p>
Nun kommt der offizielle Teil. Derzeit sind die meisten Teile dieser
Anleitung noch von mir (Alexander Reelsen) geschrieben, aber meiner
Meinung nach sollte dies nicht so bleiben. Ich wuchs mit freier Software
auf und lebe mit ihr, sie ist ein Teil meiner alltäglichen Arbeit
und ich denke, auch von Ihrer. Ich ermutige jedermann, mir Feedback, Tipps
für Ergänzungen oder andere Vorschläge, die Sie haben
könnten, zuzuschicken.

<p>
Wenn Sie denken, dass Sie einen bestimmten Abschnitt oder Paragraphen besser
pflegen können, dann schreiben Sie dem Dokumenten-Betreuer, und Sie
dürfen es gerne erledigen. Insbesondere, wenn Sie eine Stelle
finden, die mit &quot;FIXME&quot; markiert wurde - was bedeutet, dass der
Autor noch nicht die Zeit hatte oder sich noch Wissen über das Thema
aneignen muss - schicken Sie ihm sofort eine Mail.

<p>
Für diese Anleitung ist es natürlich äußerts wichtig,
dass sie weiter gepflegt und auf dem neusten Stand gehalten wird. Auch
Sie können Ihren Teil dazu beitragen. Bitte unterstützen Sie
uns.

<sect>Vorwissen
<p>
Die Installation von Debian GNU/Linux ist nicht wirklich schwer, und Sie
sollten in der Lage gewesen sein, es zu installieren. Wenn Ihnen andere
Linux Distributionen, Unixe oder die grundsätzliche
Sicherheitskonzepte ein wenig vertraut sind, wird es Ihnen leichter fallen,
diese Anleitung zu verstehen, da nicht auf jedes winzige Detail
eingegangen werden kann (oder dies wäre ein Buch geworden und keine
Anleitung). Wenn Sie jedoch mit diesen Dingen noch nicht so vertraut
sind, sollten Sie vielleicht einen Blick in die <ref id="references">
für tiefer gehende Informationen werfen.


<sect>Dinge, die noch geschrieben werden müssen (FIXME/TODO)
<p>
<list>

<item>Informationen, wie man unter Debian GNU/Linux eine Firewall
aufsetzt. Der Firewalls betreffende Abschnitt orientiert sich derzeit an
Einzelplatz-Systemen (die keine anderen System schützen
müssen); auch auf das Testen des Setups eingehen

<item>Wie man eine Proxy-Firewall unter Debian GNU/Linux aufsetzt, unter
der Angabe, welche Pakete Proxy-Dienste anbieten (zum Beispiel
<package>xfwp</package>,
<package>xproxy</package>, <package>ftp-proxy</package>,
<package>redir</package>, <package>smtpd</package>,
<package>nntp-cache</package>, <package>dnrd</package>,
<package>jftpgw</package>,<package>oops</package>,<package>pnsd</package>,
<package>perdition</package>,<package>transproxy</package>,
<package>tsocks</package>). Sollte zu einer Anleitung mit weiteren
Informationen verweisen. Erwähnenswert ist, dass zorp (noch) nicht Teil
von Debian ist, es aber eine Proxy-Firewall <em>ist</em> (und der
Programmautor Debian-Pakete zur Verfügung stellt.)

<item>Informationen über die Service-Konfiguration mit file-rc

<item>Alle Referenzen und URLs prüfen und die nicht mehr verfügbaren
aktualisieren oder entfernen

<item>Informationen über möglichen Ersatz (unter Debian) für
häufig eingesetzte Server, die bei eingeschränktem
Funktionsumfang nützlich sind. Beispiele:

	<list>
	<item>lokaler lpr mit cups (Paket)?

	<item>remote lrp mit lpr

	<item>bind mit dnrd/maradns

	<item>apache mit dhttpd/thttpd/wn (tux?)

	<item>exim/sendmail mit ssmtpd/smtpd/postfix

	<item>squid mit tinyproxy

	<item>ftpd mit oftpd/vsftp

	<item>...

	</list>


<item>Mehr Informationen über die sicherheitsrelevanten Patches des
Kernels unter Debian, einschließlich den unten aufgeführten und
insbesondere wie man diese Patches unter einem Debian-System benutzt.

<list>

<item>Erkennung von Eindringlingen (Linux Intrusion Detection
      <package>lids-2.2.19</package>)

<item>Linux Trustees (im Paket <package>trustees</package>)

<item><url name="NSA Enhanced Linux" id="http://www.coker.com.au/selinux/">

<item><url name="kernel-patch-2.2.18-openwall"
           id="http://packages.debian.org/kernel-patch-2.2.18-openwall">

<item><package>kernel-patch-2.2.19-harden</package>

<item>Linux capabilities (im Paket <package>lcap</package>

<item><package>kernel-patch-freeswan,kernel-patch-int</package>

</list>

<item>Details, wie man unnötige Dienste übers Netzwerk
deaktiviert (abgesehen von inetd), dies ist teilweise Teil des
Abhärtungsprozesses, könnte aber etwas ausgeweitet werden.

<item>Informationen über Passwort-Rotation, was sehr nah an
grundsätzliche Regeln (Policies) herankommt

<item>Policies und die Aufklärung der Nutzer über die Policy

<item>Mehr über tcpwrapper, und wrapper im allgemeinen?

<item><file>hosts.equiv</file> und andere wichtige Sicherheitslöcher

<item>mögliche Probleme bei der Dateifreigabe, wie Samba und NFS? 

<item>suidmanager/dpkg-statoverrides.

<item>lpr und lprng.

<item>Abschalten der GNOME IP-Dinge.

<item>Erwähnen von pam_chroot (siehe <url
id="http://http://lists.debian.org/debian-security/2002/debian-security-200205/msg00011.html">)
und seine Nützlichkeit, um Nutzer einzuschränken. Einführende
Informationen in Verbindung mit <url
id="http://online.securityfocus.com/infocus/1575">.
<package>Pdmenu</package> ist zum Beispiel bereits unter Debian
verfügbar (während flash das nicht ist).

<item>Darüber reden, Dienste mit einer chroot-Umgebung zu versehen, mehr Informationen dazu
unter <url id="http://www.linuxfocus.org/English/January2002/aritcle225.shtml">,
<url id="http://www.networkdweebs.com/chroot.html"> und
<url id="http://www.linuxsecurity.com/feature_stories/feature_story-99.html">

<item>Programme erwähnen, die Chroot-Gefängnisse (chroot jails)
herstellen. <package>Compartment</package> und <package>chrootuid</package>
warten noch in incoming. Einige andere (makejail, jailer) könnten
ebenfalls eingeführt werden.

<item>Die Informationen von Karl Hegbloom über das
Einsperren (chrooting) von Bind 9 (siehe <url
id="http://people.pdxlinux.org/~karlheg/Secure_Bind9_uHOWTO/Secure_Bind_9_uHOWTO.xhtml">)
hinzufügen.

<item>Die Informationen von Pedro Zornenon über das Einsperren per
chroot von Bind 8, aber leider nur für potato :(, siehe <url
id="http://people.debian.org/~pzn/howto/chroot-bind.sh.txt">
(einfügen des ganzen Skriptes?).

<item>Mehr Informationen über Software zur Analyse von
Protokoll-Dateien (log-Dateien, logs; zum Beispiel
<package>logcheck</package> und logcolorise).

<item>&quot;Fortgeschrittenes&quot; Routing (Traffic-Regelungen sind
sicherheitsrelevant)

<item>Zugang über SSH so einschränken, dass man nur bestimmte
Kommandos ausführen kann

<item>Die Benutzung von dpkg-statoverride.

<item>Sichere Wege, mehreren Nutzern den Zugriff auf CD-Brenner zu
erlauben

<item>Sichere Wege, um Sound zusammen mit einem Display über ein
Netzwerk zu leiten (so dass die Sounds einen X Clients über die
Hardware eines X Servers abgespielt werden)

<item>Absichern von Web-Browsern

<item>Aufsetzen von ftp über ssh

<item>Die Benutzung von verschlüsselten Loopback-Dateisystemen

<item>Verschlüsselung eines ganzen Dateisystems

<item>Steganographie-Tools

<item>Aufsetzen eines PKI für eine Organisation
<!-- Was ist ein PKA? Sollte man das Übersetzen? -->

<item>LDAP benutzen zur Verwaltung der User. Es gibt ein HOWTO zu
ldap+kerberos für Debian auf www.bayour.com von Turbo Fredrikson.


</list>

<sect id="changelog">Änderungsübersicht / Changelog / History
 <p>
<sect1>Version 2.5 (August 2002)

<p>Changes by Javier Fernández-Sanguino Peña (me). There were many
things waiting on my inbox (as far back as february) to be included,
so I'm going to tag this the <em>back from honeymoon</em> release :)

<list>

<item>Added some information on how to setup the Xscreensaver to lock
automatically the screen after the configured timeout.

<item>Add a note related to the utilities you should not install in
the system. Including a note regarding Perl and why it cannot be
easily removed in Debian. The idea came after reading Intersect's
documents regarding Linux hardening.

<item>Added information on lvm and journaling filesystems, ext3
recommended. The information there might be too generic, however.

<item>Added a link to the online text version (check).

<item>Added some more stuff to the information on firewalling the
local system triggered by a comment made by Hubert Chan in the mailing list.

<item>Added more information on PAM limits and pointers to Kurt
Seifried's documents (related to a post by him to bugtraq on April 4th
2002 answering a person that had ``discovered'' a vulnerability in
Debian GNU/Linux related to resource starvation)

<item>As suggested by Julián Muñoz, provided more information on the
default Debian umask and what a user can access if he has been given a
shell in the system (scary, huh?)

<item>Included a note in the BIOS password section due to a comment
from from Andreas Wohlfeld.

<item>Included patches provided by Alfred E. Heggestad fixing many of
the typos still present in the document.

<item>Added a pointer to the changelog in the Credits section since
most people who contribute are listed here (and not there)

<item>Added a few more notes to the chattr section and a new section
after installation talking about system snapshots. Both ideas were
contributed by Kurt Pomeroy.

<item>Added a new section after installation just to remember users to
change the boot-up sequence.

<item>Added some more TODO items provided by Korn Andras.

<item>Added a pointer to the NIST's guidelines on how to secure DNS
provided by Daniel Quinlan.

<item>Added a small paragraph regarding Debian's SSL certificates
infraestructure.

<item>Added Daniel Quinlan's suggestions regarding ssh authentication
and exim's relay configuration.

<item>Added more information regarding securing bind including changes
suggested by Daniel Quinlan and an appendix with a scrip to make some of the
changes commented on that section.

<item>Added a pointer to another item regarding Bind chrooting (needs to be merged)

<item>Added a one liner contributed by Cristian Ionescu-Idbohrn to
retrieve packages with tcpwrappers support.

<item>Added a little bit more info on Debian's default PAM setup.

<item>Included a FAQ question about using PAM to give services w/o
shell accounts.

<item>Moved two FAQ items to another section and added a new FAQ
regarding attack detection (and compromised systems).

<item>Included information on how to setup a bridge firewall
(including a sample Appendix). Thanks go to Francois Bayar who sent
me this on march.

<item>Added a FAQ regarding the syslogd's <em>MARK</em>
<em>heartbeat</em> from a question answered by Noah Meyerhans and
Alain Tesio on December 2001.

<item>Included information on buffer overflow protection as well as
some information on kernel patches.

<item>Added more information (and reorganised) the firewall
section. Updated the information regarding the iptables package and
the firewall generators available.

<item>Reorganized the information regarding logchecking, moved
logcheck information from host intrusion detection to that section.

<item>Added some information on how to prepare a static package for
bind for chrooting (untested).

<item>Added a FAQ item (could be expanded with some of the
recomendations from the debian-security list regarding some specific servers/services).

<item>Added some information on RPC services (and when it's necessary).

<item>Added some more information on capabilities (and what lcap does). Is there any
good documentation on this? I haven't found any on my 2.4 kernel.

<item>Fixed some typos.

</list>

<sect1>Version 2.4
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Rewritten part of the BIOS section.
</list>

<sect1>Version 2.3
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Wrapped most file locations with the file tag.
<item>Fixed typo noticed by Edi Stojicevi.
<item>Slightly changed the remote audit tools section.
<item>Added some todo items.
<item>Added more information regarding printers and cups config file
(taken from a thread on debian-security).
<item>Added a patch submitted by Jesus Climent regarding access of
valid system users to Proftpd when configured as anonymous server.
<item>Small change on partition schemes for the special case of mail
servers.
<item>Added Hacking Linux Exposed to the books section.
<item>Fixed directory typo noticed by Eduardo Pérez Ureta.
<item>Fixed /etc/ssh typo in checklist noticed by Edi Stojicevi.
</list>

<sect1>Version 2.3
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Fixed location of dpkg conffile.
<item>Remove Alexander from contact information.
<item>Added alternate mail address.
<item>Fixed Alexander mail address (even if commented out).
<item>Fixed location of release keys (thanks to Pedro Zorzenon for pointing this out).
</list>
<sect1>Version 2.2
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Fixed typos, thanks to Jamin W. Collins.
<item>Added a reference to apt-extracttemplate manpage
(documents the APT::ExtractTemplate config).
<item>Added section about restricted SSH. Information based on that
posted by  Mark Janssen, Christian G. Warden and Emmanuel Lacour on
the debian-security mailing list.
<item>Added information on anti-virus software.
<item>Added a FAQ: su logs due to the cron running as root.
</list>
<sect1>Version 2.1
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Changed FIXME from lshell thanks to Oohara Yuuma.
<item>Added package to sXid and removed comment since it *is* available.
<item>Fixed a number of typos discovered by Oohara Yuuma.
<item>ACID is now available in Debian (in the acidlab package)
 thanks to Oohara Yuuma for noticing.
<item>Fixed LinuxSecurity links (thanks to Dave Wreski for telling).
</list>
<sect1>Version 2.0
<p>Changes by Javier Fernández-Sanguino Peña. I wanted to
change to 2.0 when all the FIXMEs were, er, fixed but I run out
of 1.9X numbers :(
<list>
<item>Converted the HOWTO into a Manual (now I can properly say RTFM)

<item>Added more information regarding tcp wrappers and Debian (now
many services are compiled with support for them so it's no longer
an inetd issue).

<item>Clarified the information on disabling services to make it more
consistent (rpc info still referred to update-rc.d)

<item>Added small note on lprng.

<item>Added some more info on compromised servers (still very rough)

<item>Fixed typos reported by Mark Bucciarelli.

<item>Added some more steps in password recovery to cover the cases
when the admin has set paranoid-mode=on.

<item>Added some information to set paranoid-mode=on when login in
console.

<item>New paragraph to introduce service configuration.

<item>Reorganised the <em>After installation</em> section so it is
more broken up into several issues and it's easier to read.

<item>Written information on howto setup firewalls with the standard
Debian 3.0 setup (iptables package).

<item>Small paragraph explaining why installing connected to the
Internet is not a good idea and how to avoid this using Debian tools.

<item>Small paragraph on timely patching referencing to IEEE paper.

<item>Appendix on how to setup a Debian snort box, based on what Vladimir
sent to the debian-security mailing list (September 3rd 2001)

<item>Information on how logcheck is setup in Debian and how it can be
used to setup HIDS.

<item>Information on user accounting and profile analysis.

<item>Included apt.conf configuration for read-only /usr copied from Olaf
Meeuwissen's post to the debian-security mailing list

<item>New section on VPN with some pointers and the packages available
in Debian (needs content on how to setup the VPNs and Debian-specific
issues), based on Jaroslaw Tabor's and Samuli Suonpaa's post to
debian-security.

<item>Small note regarding some programs to automatically build chroot jails

<item>New FAQ item regarding identd based on a discussion in the
debian-security mailing list (February 2002, started by Johannes Weiss).

<item>New FAQ item regarding inetd based on a discussion in the
debian-security mailing list (February 2002).

<item>Introduced note on rcconf in the "disabling services" section.

<item>Varied the approach regarding LKM, thanks to Philipe Gaspar 

<item>Added pointers to CERT documents and Counterpane resources
</list>

<sect1>Version 1.99
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Added a new FAQ item regarding time to fix security vulnerabilities.
<item>Reorganised FAQ sections.
<item>Started writing a section regarding firewalling in Debian GNU/Linux
(could be broadened a bit)
<item>Fixed typos sent by Matt Kraai
<item>Fixed DNS information
<item>Added information on whisker and nbtscan to the auditing section.
<item>Fixed some wrong URLs
</list>
<sect1>Version 1.98
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Added a new section regarding auditing using Debian GNU/Linux.
<item>Added info regarding finger daemon taken from the security mailing list.
</list>
<sect1>Version 1.97
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Fixed link for Linux Trustees
<item>Fixed typos (patches from Oohara Yuuma and Pedro Zorzenon)
</list>

<sect1>Version 1.96
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Reorganized service installation and removal and added some new notes.

<item>Added some notes regarding using integrity checkers as intrusion
detection tools.

<item>Added a chapter regarding package signatures.

</list>

<sect1>Version 1.95
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added notes regarding Squid security sent by Philipe Gaspar.

<item>Fixed rootkit links thanks to Philipe Gaspar.

</list>

<sect1>Version 1.94
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added some notes regarding Apache and Lpr/lpng.

<item>Added some information regarding noexec and read-only partitions.

<item>Rewritten how can users help in Debian security issues (FAQ item).
</list>

<sect1>Version 1.93
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Fixed location of mail program.

<item>Added some new items to the FAQ.
</list>

<sect1>Version 1.92
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added a small section on how Debian handles security

<item>Clarified MD5 passwords (thanks to `rocky')

<item>Added some more information regarding harden-X from Stephen van Egmond

<item>Added some new items to the FAQ

</list>

<sect1>Version 1.91
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added some forensics information sent by Yotam Rubin.

<item>Added information on how to build a honeynet using Debian GNU/Linux.

<item>Added some more TODOS.

<item>Fixed more typos (thanks Yotam!)

</list>

<sect1>Version 1.9
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added patch to fix misspellings and some new information (contributed
by Yotam Rubin)

<item>Added references to other online (and offline) documentation both in a section (see <ref id="references">) by itself and inline in some sections.

<item>Added some information on configuring Bind options to restrict
access to the DNS server.

<item>Added information on how to automatically harden a Debian system
(regarding the harden package and bastille).

<item>Removed some done TODOs and added some new ones.

</list>

<sect1>Version 1.8
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added the default user/group list provided by Joey Hess to the
debian-security mailing list.

<item>Added information on  LKM  root-kits (<ref id="LKM">)
 contributed by Philipe Gaspar.

<item>Added information on Proftp contributed by Emmanuel Lacour. 

<item>Recovered the checklist Appendix from Era Eriksson.

<item>Added some new TODO items and removed other fixed ones.

<item>Manually included Era's patches since they were not all included in 
the previous version.

</list>
<sect1>Version 1.7
<p>Changes by Era Eriksson.
<list>
<item>Typo fixes and wording changes <!-- FIXME: new checklist has not
been included yet, era, please send it back -->
</list>
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Minor changes to tags in order to keep on removing the tt tags
and substitute them for prgn/package tags.
</list>

<sect1>Version 1.6
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Added pointer to document as published in the DDP (should
supersede the original in the near future)
<item>Started a mini-FAQ
(should be expanded) with some questions recovered from my mailbox.
<item>Added general information to consider while securing.
<item>Added a paragraph regarding local (incoming) mail delivery.
<item>Added some pointers to more information.
<item>Added information regarding the printing service.
<item>Added a security hardening checklist.
<item>Reorganized NIS and RPC information.
<item>Added some notes taken while reading this document on my new
Visor :)
<item>Fixed some badly formatted lines.
<item>Fixed some typos.
<item>Added a Genius/Paranoia idea contributed by Gaby
Schilders.
</list>
<sect1>Version 1.5

<p>Changes by Josip Rodin and Javier Fernández-Sanguino Peña.

<list>
<item>Added paragraphs related to BIND and some FIXMEs.  <!-- Removed
this because I found no evidence for it in the diffs. // era Rewrote
style in order to make it more formal.  -->
</list>
<sect1>Version 1.4
    <p>
    <list>
    <item>Small setuid check paragraph <item>Various minor cleanups
    <item>Found out how to use <tt>sgml2txt -f</tt> for the txt
    version</item>
    </list>
<sect1>Version 1.3
    <p>
    <list>
    <item>Added a security update after installation paragraph
    <item>Added a proftpd paragraph <item>This time really wrote
    something about XDM, sorry for last time
    </list>
<sect1>Version 1.2
    <p>
    <list>
    <item>Lots of grammar corrections by James Treacy, new XDM
    paragraph
    </list>
<sect1>Version 1.1
    <p>
    <list>
    <item>Typo fixes, miscellaneous additions
    </list>
<sect1>Version 1.0
    <p>
    <list>
    <item>Initial release
    </list>



<sect>Danksagungen
<p>
<list>
<item>Alexander Reelsen schrieb die ursprüngliche Version.

<item>Javier Fernández-Sanguino fügte der Originalversion einiges an
Informationen hinzu.

<item>Robert van der Meulen stellte den Abschnitt über Quota und
viele seiner guten Ideen zur Verfügung.

<item>Ethan Benson korrigierte den PAM-Abschnitt und hatte einige gute
Ideen.

<item>Dariusz Puchalak trug Information zu verschiedenen Kapiteln bei.

<item>Gaby Schilders trug eine nette Genius/Paranoia Idee bei.

<item>Era Eriksson gab dem Ganzen an vielen Stellen den sprachlichen
Feinschliff und trug zur Checkliste im Anhang bei.

<item>Philipe Gaspar schrieb die LKM-Informationen.

<item>Yotam Rubin trug sowohl Korrekturen für viele Tippfehler bei
als auch Informationen über die Versionen von Bind und
md5-Passwörter.

<item>All den Leuten, die Verbesserungen vorschlugen, die (letzten Endes)
eingeflossen sind (siehe <ref id="changelog">).

<item>(Alexander) All den Leuten, die mich ermutigten dieses HOWTO zu
schreiben (die später zu einer ganzen Anleitung wurde).

<item>Dem ganzen Debian-Projekt.
</list>

<sect1>Danksagungen des Übersetzers

<p>Auch der Übersetzer hat einigen Leuten zu danken <footnote>Die
Reihenfolge habe ich übrigens ausgewürfelt.</footnote>, die mir
Verbesserungen, Korrekturen und Ratschläge geschickt
haben:

<list>
<item>Christoph Haas
<item>Mirko Jahn
<item>Frank Loeffler
<item>Andreas Marc Klingler
<item>Elisabeth Bauer
<item>Jens Kubieziel
<item>Uli Martens
<item>Simon Brandmair
<item>Jens Schuessler
<item>Marcel Schaal
</list>

<p>Insbesondere sei den Mitglieder der <url name="debian-l10n-german"
id="http://lists.debian.org/debian-l10n-german/"> Mailingliste gedankt,
für gute Ideen und fruchtbare Diskussionen.

<p>VIELEN DANK! Ohne euch hätte ich zwar nur halb so viel Arbeit
gehabt, aber viel mehr Leute könnten sich jetzt über meine
mangelhaften Orthographiekenntnisse amüsieren!


<chapt>Bevor Sie beginnen ...


<sect>Wofür möchten Sie dieses System benutzen?

<p>Das Absichern von Debian ist nicht viel anders als das Absichern von
irgendeinem anderen System. Um es richtig zu machen müssen Sie
zunächst entscheiden, was Sie damit machen möchten.
Anschließend müssen Sie sich klarmachen, dass Sie die folgenden
Schritte sorgfältig ausgeführt werden müssen, um ein wirklich
sicheres System zu bekommen.

<p>Sie werden feststellen, dass diese Anleitung von der Pike auf
geschrieben ist. Sie werden die Informationen zu einer Aufgabe, die Sie
vor, während und nach der Debian Installation ausführen sollten,
in der entsprechenden Reihenfolge vorgestellt bekommen. Die einzelnen
Aufgaben können wie folgt beschrieben werden:

<list>

<item>Entscheiden Sie, welche Dienste Sie benötigen, und
beschränken Sie Ihr System auf selbige. Dies schließt das
Deaktivieren / Deinstallieren von nicht benötigten Diensten und das
Installieren von Firewall-ähnlichen Filtern oder TCP-Wrappern ein.

<item>Einschränken der Nutzer- und Zugriffsrechte auf Ihrem System.

<item>Abhärten der angebotenen Dienste, damit der Einfluss
auf Ihr System im Falle einer Kompromittierung möglichst gering ist.

<item>Benutzen Sie die passenden Tools, um sicherzustellen, dass ein
unautorisierter Zugriff auf Ihrem System entdeckt wird, so dass Sie
geeignete Gegenmaßnahmen ergreifen können.

</list>

<sect id="references">Seien Sie wachsam gegenüber generellen
Sicherheitsproblemen!

<p>Diese Anleitung geht (normalerweise) nicht auf Details ein, warum
bestimmte Sachen als Sicherheitsrisiko betrachtet werden. Vielleicht
möchten Sie aber ein mehr Hintergrundwissen über generelle
Unix- und (bestimmte) Linux-Sicherheit. Nehmen Sie sich die Zeit, um
sicherheitsrelevante Dokumente zu lesen, um Entscheidungen informiert
treffen zu können, wenn Sie eine Auswahl treffen müssen. Debian
GNU/Linux basiert auf dem Linux-Kernel, so dass viele Informationen
über Linux, und sogar über andere Distributionen und allgemeine
UNIX-Sicherheit, auch hierauf zutreffen (sogar wenn sich die benutzten
Werkzeuge oder die verfügbaren Programme unterscheiden).

<p>Ein Paar nützliche Dokumente sind:

<!-- TODO: Gibt es davon Uebersetzungen? -->
<list>

<item>Das <url name="Linux Security HOWTO"
id="http://www.linuxdoc.org/HOWTO/Security-HOWTO.html">
(auch unter<url
id="http://www.linuxsecurity.com/docs/LDP/Security-HOWTO.html"
name="LinuxSecurity"> verfügbar) ist eine der besten Referenzen
über allgemeine Linux-Sicherheit.


<!-- FIXME: change this poiner to the LDP -->
<item>Das <url name="Security Quick-Start HOWTO for Linux" 
id="http://www.linuxsecurity.com/docs/LDP/Security-Quickstart-HOWTO/">
ist ein sehr guter Anfang für unerfahrene Nutzer (sowohl über Linux
als auch zum Thema Sicherheit)

<!-- FIXME verify seifried's links -->

<item>
Der <url id="http://seifried.org/lasg/" name="Linux Security
  Administrator's Guide"> (wird unter Debian durch das Paket
  <package>lasg</package> zur Verfügung gestellt) ist eine komplette
  Anleitung, die alle Sicherheitsangelegenheiten von Linux behandelt, von
  Sicherheit im Kernel bis hin zu VPNs. Es ist ein wenig veraltet (seit
  1999 nicht mehr aktualisiert) und wurde durch die
  <url id="http://seifried.org/lskb" name="Linux
  Security Knowledge Base "> ersetzt.  Dieses Dokument stellt Ihnen Debian
  mit dem Paket <package>lskb</package> zur Verfügung.

<item> Kurt Seifried's <url
id="http://seifried.org/security/os/linux/20020324-securing-linux-step-by-step.html"
name="Securing Linux Step by Step">.

<item>In <url name="Securing and Optimizing Linux: RedHat Edition"
id="http://www.linuxdoc.org/links/p_books.html#securing_linux"> finden
Sie eine Dokumentation ähnlich zu dieser, bezogen auf RedHat. Manche
behandelten Sachen sind nicht distributionsspezifisch, passen also auch
auf Debian.

<item>IntersectAlliance hat einige Dokumente veröffentlicht, die als
Referenz benutzt werden können, wie man einen Linux-Server (und
seine Dienste) abhärtet. Diese Dokumente sind auf <url
id="http://www.intersectalliance.com/projects/index.html" name="ihrer
Seite"> verfügbar.

<item>Für Netzwerk-Administratoren ist das <url name="Securing your
Domain HOWTO"
id="http://www.linuxsecurity.com/docs/LDP/Securing-Domain-HOWTO/"> ein
gutes Handbuch, wie man sein Netzwerk absichert.

<item>Wenn Sie die Programme, die Sie benutzen möchten (oder die Sie
neu schreiben wollen), bezüglich Sicherheit auswerten wollen,
sollten Sie das <url name="Secure Programs HOWTO"
id="http://www.linuxdoc.org/HOWTO/Secure-Programs-HOWTO.html">
durchlesen.

<!-- FIXME: check URLs --> 

<item>Wenn Sie es in Betracht ziehen, eine Firewall zu installieren,
sollten Sie das <url name="Firewall HOWTO"
id="http://www.linuxdoc.org/HOWTO/Firewall-HOWTO.html"> und das <url
name="IPCHAINS HOWTO"
id="http://www.linuxdoc.org/HOWTO/IPCHAINS-HOWTO.html"> (bei Kerneln vor
Version 2.4) lesen.

<item>Schließlich ist die <url name="Linux Security RefenceCard"
id="http://www.linuxsecurity.com/docs/QuickRefCard.pdf"> eine gute
Kurzübersicht, um in Sachen Sicherheit auf dem aktuellen Stand zu bleiben.

</list>

<p>In jedem Fall gibt es mehr Informationen über die Dienste (NFS,
NIS, SMB...) in den vielen HOWTOs, die Sie beim <url name="Linuxdoc
Project" id="http://www.linuxdoc.org/"> finden. Manche dieser Dokumente
gehen auf die Sicherheitsaspekte von bestimmten Diensten ein. Gehen Sie
sicher, dass Sie auch hierrauf einen Blick werfen.

<!-- FIXME: URL des deutschen HOWTO Projekts raussuchen -->

<p>Die HOWTO-Dokumente des Linux Dokomentation Projektes sind unter
Debian GNU/Linux duch Installation der Pakete
<package>doc-linux-text</package> (Text-Version) oder
<package>doc-linux-html</package> (HTML-Version) verfügbar. Nach der
Installation sind diese Dokumente in den Verzeichnissen
<file>/usr/share/doc/HOWTO/en-txt</file> beziehungsweise
<file>/usr/share/doc/HOWTO/en-html</file> vorhanden. 

<p>Andere empfohlene Linux-Bücher:

<list>

<item>Maximum Linux Security : A Hacker's Guide to Protecting Your Linux
  Server and Network.  Anonymous. Paperback - 829 pages. Sams Publishing.
  ISBN: 0672313413. July 1999.

<item>Linux Security By John S. Flowers. New Riders; ISBN: 0735700354.
March 1999

<item><url id="http://www.linux.org/books/ISBN_0072127732.html" name="Hacking Linux Exposed"> By Brian Hatch. McGraw-Hill Higher Education.
ISBN 0072127732. April, 2001

<!-- TODO: Irgendwelche deutschen Buecher? -->

</list>

<p>Andere Bücher (auch über allgemeine Aspekte von Sicherheit
unter Unix, nicht nur Linuxspezifisch):

<list>

<item><url id="http://www.ora.com/catalog/puis/noframes.html"
        name="Practical Unix and Internet Security (2nd Edition)">
        Garfinkel, Simpson, and Spafford, Gene; O'Reilly Associates;
        ISBN 0-56592-148-8; 1004pp; 1996.

<item>Firewalls and Internet Security Cheswick, William R. and Bellovin,
        Steven M.; Addison-Wesley; 1994; ISBN 0-201-63357-4; 320pp.

</list>

<p>Andere nützliche Webseiten, um sich bezüglich Sicherheit auf dem
   Laufenden zu halten:

<list>

<item><url name="NIST Security Guidelines"
id="http://csrc.nist.gov/fasp/index.html">.

<item><url name="Security Focus" id="http://www.securityfocus.com">
    Dort wird die Bugtraq-Schwachstellen-Datenbank und Mailingliste
    bereitgestellt und es gibt allgemeine sicherheitsrelevante
    Informationen, Neuigkeiten und Berichte.

<item> <url name="Linux Security"
	id="http://www.linuxsecurity.com/">. Allgemeine Informationen zu
    Sicherheit von Linux (Tools, Neuigkeiten...). Die Seite
	<url name="main documentation"
	id="http://www.linuxsecurity.com/resources/documentation-1.html">
    ist sehr nützlich.

<item> <url name="Linux firewall and security site" id="
	http://www.linux-firewall-tools.com/linux/">. Allgemeine Informationen
    zu Linux Firewalls und Tools, diese zu kontrollieren und zu administrieren.

</list>

<!-- TODO: Deutsche Buecher? -->


<sect>Wie geht Debian mit der Sicherheit um?
<p>Um einen allgemeinen Überblick über die Sicherheit unter
Debian GNU/Linux zu bekommen, sollten Sie sich ansehen, was Debian tut, um
ein sicheres System zu gewährleisten.

<list>

<item>Debians Probleme werden immer öffentlich behandelt, sogar, wenn
sie die Sicherheit betreffen. Wie der
<url name="Debian-Gesellschaftsvertrag"
       id="http://www.debian.org/social_contract"> sagt:
<em>
Wir werden Probleme nicht verbergen.

Wir werden unsere Fehlerdatenbank für alle Zeiten öffentlich betreiben.
Fehlermeldungen, die von Anwendern online abgeschickt werden, werden
augenblicklich für andere sichtbar.
</em>

Aspekte der Sicherheit werden öffentlich auf der debian-security
Mailing-Liste diskutiert. Debians Sicherheitsgutachten werden über
eine öffentliche Mailing-Liste gesendet (sowohl innerhalb als auch
außerhalb) und auf einem öfentlichen Server veröffentlicht.

<item>Debian verfolgt Sicherheitsangelegenheiten sehr aufmerksam. Das
Sicherheits-Team prüft viele sicherheitsrelevante Quellen, die
wichtigste davon <url name="Bugtraq"
id="http://www.securityfocus.com/cgi-bin/vulns.pl">, während es
Pakete mit Sicherheitsproblemen sucht, die ein Teil von Debian sein
können.

<item>Sicherheits-Updates genießen höchste Priorität. Wenn ein
Sicherheitsproblem in einem Debian-Paket entdeckt wird, wird ein
Sicherheitsupdate so schnell wie möglich vorbereitet und
für das stabile und instabile Release, einschließlich aller
Architekturen, veröffentlicht.

<item>Alle Informationen über Sicherheit sind an einer zentralen
Stelle zu finden: <url id="http://security.debian.org/">.

<item>Debian versucht immer, die gesamte Sicherheit seiner Distribution zu
verbessern, beispielsweise durch automatische Paket-Signierungs- und
Verifikations-Mechanismen.

<item>Debian versucht, eine nützliche Zahl von sicherheitsrelevanten
Werkzeugen für System-Administratoren und zur Überwachung zur
Verfügung zu stellen. Entwickler versuchen, diese Werkzeuge fest mit
der Distribution zu verbinden, um Sie anpassbarer zur Durchsetzung
lokaler Sicherheits-Regelungen zu machen. Diese Werkzeuge schließen
folgendes mit ein: integritätsprüfende Programme, allgemeine
Prüfwerkzeuge, Werkzeuge zum Abhärten, Werkzeuge für
Firewalls, Eindringlings-Erkennungs-Tools und vieles andere.

<item>Paket-Betreuer sind sich der Sicherheits-Probleme bewusst. Dies
führt oft zu "voreingestellt sicheren" Installationen von
Diensten, die Sie manchmal in Ihrer normalen Benutzung etwas
einschränken. Dennoch versucht Debian, Sicherheitsaspekte und
einfache Administration abzuwägen, zum Beispiel werden Dienste
nicht inaktiv installiert, wie es bei den Distributionen der
BSD-Familie üblich ist. Auf jeden Fall sind spezielle
Sicherheitsaspekte, wie zum Beispiel setuid-Programme, Teil der
<url id="http://www.debian.org/doc/debian-policy/" name="Debian Policy">.

</list>

<p>Dieses Dokument versucht, bessere, distributionsspezifische
Informationen über Sicherheit zu veröffentlichen. Dabei sollen
andere Dokumente über Sicherheit um Tools, die im Debian
Betriebssystem verwendet werden, ergänzt werden.


<chapt>Vor und während der Installation


<sect id="bios-passwd">Setzen Sie ein Passwort im BIOS
<p>
Bevor Sie irgendein Betriebssystem auf Ihrem Computer installieren,
setzen Sie ein Passwort im BIOS. Nach der Installation (sobald Sie von
der Festplatte booten können) sollten Sie zurück ins BIOS
gehen und die Boot-Reihenfolge ändern, so dass Sie nicht von
Diskette, CD-ROM oder sonstigen Geräten booten können, von denen
dies nicht gehen sollte. Andernfalls benötigt ein Cracker nur
physischen Zugang und eine Bootdiskete, um Zugriff auf Ihr ganzes System
zu bekommen.

<p>Es ist noch besser, wenn das System beim Booten immer ein Passwort verlangt.
Dies kann sehr effektiv sein, wenn Sie einen Server laufen lassen, der
selten neu gestartet wird. Der Nachteil dieser Vorgehensweise ist, dass
das Neustarten einen menschlichen Eingriff benötigt, was zu
Problemen führen kann, wenn das System nicht leicht zugänglich ist.

<p>Beachten Sie: Viele BIOS-Varianten haben bekannte Master-Passwörter
und es gibt sogar Applikationen, um Passwörter aus dem BIOS
wieder auszulesen. Folglich können Sie sich nicht auf diese
Maßnahme verlassen, um den Zugriff auf das Systems zu beschränken.

<sect>Partitionieren des Systems

<sect1>Wählen Sie eine sinnvolle Partitionierung
<p>Was eine sinnvolle Partitionierung ist, hängt davon ab,
wie die Maschine benutzt wird. Eine gute Faustregel ist, mit Ihren
Partitionen eher großzügig zu sein und die folgenden Faktoren zu
berücksichtigen:

<list>
<item>Jeder Verzeichnisbaum, auf den ein Nutzer Schreibzugriff hat (wie
zum Beispiel <file>/home</file> und <file>/tmp</file>) sollte auf einer
separaten Partition liegen. Dies reduziert das Risiko eines DoS durch
einen Nutzer, indem er Ihren "/"-Mountpoint vollschreibt und so das
gesamte System unbenutzbar macht. (Eigentlich ist das so nicht ganz
richtig, da immer etwas Platz für den Superuser root reserviert
wird, den ein normaler Nutzer nicht belegen kann.)

<item>Auch sollte jeder Verzeichnisbaum, dessen Größe schwanken kann, zum Beispiel
<file>/var</file> (insbesondere <file>/var/log</file>) eine seperate
Partition bekommen. Auf einem Debian-System sollten Sie der
/var-Partition etwas mehr Platz als gewöhnlich geben, da heruntergeladene
Pakete (der Zwischenspeicher von apt) unter
<file>/var/cache/apt/archives</file> gespeichert werden.

<item>Jeder Teil, in dem Sie Nicht-Distributions-Software installieren
wollen, sollte eine separate Partition erhalten. Nach dem
File-Hierarchy-Standard wären dies <file>/opt</file> oder
<file>/usr/local</file>. Wenn dies separate Partitionen sind, werden sie
nicht gelöscht, falls Sie einmal Ihr Debian neu installieren
(müssen).

<item>Rein sicherheitstechnisch ist es sinnvoll zu versuchen,
statische Daten auf eine eigene Partition zu legen und diese
dann als nur-lesbar einzuhängen (mounten). Oder noch
besser: legen Sie diese Daten auf einem nicht beschreibbares Medium ab.
Lesen Sie die Erklärung weiter unten.
</list>

<p>Im Falle eines Mailservers ist es wichtig, eine seperate Partition
für die Mail-Warteschlange (mail spool) anzulegen.
Nicht-Lokale Nutzer können (wissentlich oder
unwissentlich) diese Verzeichnisse (<file>/var/mail</file> oder
<file>/var/spool/mail</file>) überfüllen. Liegt dieses Verzeichnis auf einer
separaten Partition, würde dies das System nicht sofort
unbenutzbar machen. Anderenfalls (wenn das Verzeichnis
auch auf der <file>/var</file>-Partition liegt) hat das System ein
großes Problem: Protokoll-Einträge (logs) können
nicht erstellt werden, Pakete können nicht installiert werden und
es könnten sogar ein paar Programme Probleme mit dem Starten haben
(wenn Sie <file>/var/run</file> benutzen).

<p>Außerdem sollten Sie für Partitionen, deren Platzbedarf Sie noch
nicht abschätzen können, den Logical-Volume-Manager
(<package>lvm-common</package> und die benötigten ausführbaren
Programme, entweder <package>lvm10</package>
oder <package>lvm2</package>) installieren.
Durch Benutzen von <tt>lvm</tt> können Sie Datenträger-Gruppen
erstellen, die über mehrere Festplatten verteilt sind.

<sect2>Auswahl eines passenden Dateisystems

<p>Während der Partitionierung des Systems müssen Sie Sich
ebenfalls entscheiden, welche Dateisysteme Sie benutzen möchten.
Als Standard-Dateisystem wird während der Installation
für Linux Partitionen <tt>ext2</tt> ausgewählt. Dennoch ist es
ratsam, ein "journaling filesystem" (ein Dateisystem, dass
Änderungen mitprotokolliert) zu nehmen, wie zum Beispiel
<tt>ext3</tt>, <tt>reiserfs</tt>, <tt>jfs</tt> oder <tt>xfs</tt>. Dadurch
verringern Sie Probleme nach einen Absturz des Systems in diesen Fällen:

<list>

<item>Auf Laptops auf allen Dateisystemen. Auf diese Art reduzieren Sie
die Wahrscheinlichkeit eines Datenverlustes, wenn beispielsweise
unerwartet Ihr Akku leer wird oder das System aufgrund eines
Hardware-Problems (eine merkwürdige X-Konfiguration zum Beispiel)
neu starten mussten.

<item>Auf produktiven Systemen, die große Mengen von Daten speichern (zum
Beispiel Mail-Server, FTP-Server, Netzwerk-Fileserver...), ist es
empfehlenswert, ein Journaling-Filesystem auf diesen Partitionen einzusetzen.
Wenn das System abstürzt, benötigt der Server so weniger Zeit,
um das Dateisystem wieder herzustellen und zu prüfen und Sie
verringern die Wahrscheinlichkeit eines Datenverlustes.

</list>

<p>Lassen wir mal die Betrachtung der Leistung von Journaling-Filesystemen
beiseite (da dies oft in quasi-religiösen
Glaubenskriegen ausartet). In der Regel ist es besser, das
<tt>ext3</tt>-Dateisystem zu benutzen. Der Grund dafür ist die
Abwärtskompatibilität zu <tt>ext2</tt>, so können Sie,
wenn es Probleme mit dem Journal gibt, dieses einfach abschalten und
haben immer noch ein funktionierendes Dateisystem. Außerdem
müssen Sie, wenn Sie das System mal mit einer Boot-Diskette (oder
CD-ROM) wiederherstellen müssen, keinen speziellen Kernel benutzen.
Wenn es sich um einen 2.4er-Kernel handelt, ist Unterstützung
für <tt>ext3</tt> bereits vorhanden. Wenn es sich um einen
2.2er-Kernel handelt, können Sie trotzdem Ihr Dateisystem booten,
auch wenn Sie die Journaling-Fähigkeiten einbüßen. Wenn
Sie ein anderes Journaling-Filesystem benutzen, werden Sie feststellen,
dass eine Wiederherstellung nicht möglich ist, bis Sie einen
2.4er-Kernel mit den benötigten Modulen haben. Wenn
Sie mit einem 2.2er-Kernel der Rettungsdiskette festhängen, kann es
sich als ziemlich schwer erweisen, auf <tt>reiserfs</tt> oder
<tt>xfs</tt> zuzugreifen.

<p>In jedem Fall sind mit ext3 weniger Datenverluste zu befürchten, da es
auch Datei-Daten protokolliert, während andere Dateisysteme lediglich
Meta-Daten protokollieren (siehe auch <url
id="http://lwn.net/2001/0802/a/ext3-modes.php3">).


<sect>Gehen Sie nicht ins Internet, bevor Sie nicht bereit sind

<p>Das System, das Sie installieren wollen, sollten Sie nicht sofort
während der Installation mit dem Internet verbinden. Dies hört
sich vielleicht komisch an, aber die Installation über das Netzwerk ist eine
gängige Methode. Da das
System einige Dienste installiert und diese sofort aktiviert werden, könnten
Sie, wenn das System mit dem Internet verbunden ist und sie nicht
geeignet konfiguriert sind, Ihr System für Angriffe öffnen.

<p>Außerdem sollten Sie beachten, dass manche Pakete noch
Sicherheitsprobleme haben können, weil das Installationsmedium nicht
auf dem aktuellen Stand ist. Dies ist für gewöhnlich
dann der Fall, wenn Sie von älteren Medien (wie CD-ROMs) installieren. In
diesem Fall könnte Ihr System bereits kompromitiert sein, bevor Sie mit der
Installation fertig sind!

<p>Da die Debian-Installation und das Aktualisieren über das Internet
durchgeführt werden können, denken Sie vielleicht, es ist eine
gute Idee, dies gleich während der Installation zu nutzen. Wenn das
System direkt mit dem Internet verbunden ist (und nicht von einer Firewall
oder NAT geschützt wird), ist es besser, das Sytem ohne
Internet-Verbindung zu installieren. Benutzen Sie eine lokale Quelle
(mirror) sowohl für die zu installierenden Pakete als auch für
die Sicherheits-Updates. Sie können einen Paket-Mirror aufsetzen,
indem Sie ein anderes System nutzen, dass mit dem Internet verbunden ist
und Debian-spezifische Tools (wenn es sich um ein Debian-System handelt)
wie <package>apt-move</package> oder <package>apt-proxy</package>. Sollte
dies nicht möglich sein, sollten Sie Firewall-Regeln aufsetzen, die
den Zugriff auf Ihr System beschränken, während Sie das Update
durchführen (siehe <ref id="fw-security-update">).

<sect>Setzen Sie ein Passwort für root
<p>
Die wichtigste Grundlage für ein sicheres System ist ein gutes Root-Passwort.
Siehe <manref section="1" name="passwd"> für einige Tipps, wie man
gute Passwörter auswählt.
<!-- Sie können auch automatische
Passwort-Generatoren verwenden (siehe <ref id="s-user-pwgen">).

Diese Referenz fehlt, da das entsprechende Kapitel "Generating user passwords"
im nächsten Kapitel anscheinend noch nicht übersetzt wurde. -->

<sect>Aktivieren Sie Shadow-Passwörter und MD5-Passwörter
<p>
Gegen Ende der Installation werden Sie gefragt, ob "shadow passwords"
eingeschaltet werden sollen. Beantworten Sie diese Frage mit "yes", dann
werden Passwörter in der Datei <file>/etc/shadow</file> gespeichert. Nur root
und die Gruppe shadow haben Lesezugriff auf diese Datei. So ist es
keinem Nutzer möglich, sich eine Kopie dieser Datei zu besorgen, um
einen Passwort-Cracker auf Sie loszulassen. Sie können
mit dem Befehl <tt>shadowconfig</tt> jederseit zwischen "shadow
passwords" und normalen Passwörtern wechseln.

<p>Mehr zum Thema Shadow-Passwörter finden Sie unter <url name="Shadow
Password" id="http://www.linuxdoc.org/HOWTO/Shadow-Password-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/Shadow-Password.txt.gz</file>).
<!-- TODO: HOWTO uebersetzt? -->

<p>Desweiteren werden Sie
während der Installation gefragt, ob Sie Passwörter benutzen
möchten, welche als MD5-Hashwerte gespeichert wurden.
Dies ist im allgemeinen eine gute
Idee, da es längere Passwörter und bessere Verschlüsselung
erlaubt. Mit MD5 sind Passwörter möglich, die länger als
8 Zeichen sind. Auf diese Weise kann man es einem Angreifer schwieriger machen,
mit Brute-Force-Methoden an die Passwörter heranzukommen.
Dies ist die Standardeinstellung in den neueren Versionen des
Pakets <package>password</package>. Sie können dies noch jederzeit
nach der Installation mit <tt>dpkg-reconfigure -plow passwd</tt> ändern.
Sie erkennen MD5-Passwörter übrigens in der <file>/etc/shadow</file>
an dem Anfang <tt>$1$</tt>.

<p>Dies verändert allerdings alle Dateien im Verzeichnis <file>/etc/pam.d</file>
und ergänzt in der "password"-Zeile den Eintrag "md5".

<example>
password required pam_unix.so md5 nullok obscure min=6 max=16
</example>

<p>Wird der Wert für <tt>max</tt> nicht größer als 8 gewählt, ist
diese Änderung ziemlich sinnlos.
<!-- Weitere Informationen dazu finden Sie
unter <ref id="s-auth-pam">.
!!! Hier fehlt der Zieleintrag s-auth-pam !!!
-->

<sect>Lassen Sie so wenige Dienste wie möglich laufen
<p>Dienste sind Programme wie FTP- und Web-Server. Da sie
eingehende Verbindungen, die den Dienst anfordern <em>entgegennehmen
und ihnen zuhören</em> müssen, können sich externe
Computer mit Ihrem Computer verbinden. Dienste sind manchmal verwundbar (zum
Beispiel durch einen bestimmten Angriff kompromitierbar) und sind dadurch
ein Sicherheitsrisiko.

<p>Sie sollten keine Dienste installieren, die Sie nicht unbedingt auf
dem System brauchen. Jeder installierte Dienst könnte neue,
vielleicht nicht gerade offensichtliche (oder bekannte)
Sicherheitslöcher auf Ihrem Computer öffnen.

<p>Wie Sie vielleicht schon wissen, wird ein Dienst, sobald er installiert
wird, auch gleich automatisch aktiviert. 
Bei einer Standardinstallation ohne weitere installierte Dienste ist das
Risiko ziemlich gering. Es wird noch geringer, wenn man nur Dienste
installiert, die man auch wirklich im Netzwerk anbieten möchte.
Das Risiko bei Debian 2.1 war etwas größer als bei Debian 2.2
(einige <tt>inetd</tt>-Dienste waren standardmäßig aktiviert)
und in Debian 2.2 ist der RPC-Portmapper nach der Installation aktiviert.
RPC ist standardmäßig installiert, da
er für viele Dienste wie zum Beispiel NFS benötigt wird. Er kann sehr leicht
entfernt werden. Lesen Sie <ref id="disableserv">, wie Sie ihn abschalten.

<p>Wenn Sie einen neuen Netzwerk-Dienst (daemon) auf Ihrem
Debian GNU/Linux System installieren, kann er auf zwei Arten gestartet
werden: durch den inetd Superdaemon (d. h. eine Zeile wird zu der
<file>/etc/inetd.conf</file> hinzugefügt) oder durch ein
eigenständiges Programm, dass sich selbst an die Netzwerk-Schnittstelle
bindet. Eigenständige Programme werden durch <file>/etc/init.d</file>
gesteuert. Sie werden beim Hochfahren durch den Sys-V-Mechanismus gestartet,
der die symbolischen Links in <file>/etc/rc?.d/*</file> benutzt.
(Mehr Informationen dazu finden Sie in
<file>/usr/share/doc/sysvinit/README.runlevels.gz</file>).

<p>Wenn Sie trotzdem Dienste installieren möchten, diese aber selten
benutzen, entfernen Sie sie mit den update-Befehlen, wie
<tt>update-inetd</tt> und <tt>update-rc.d</tt>.

<sect1 id="disableserv">Daemons abschalten

<p>Das Abschalten eines Daemons ist sehr einfach. Es gibt
verschiedene Methoden:
<list>

<item>Entfernen des symbolischen Links aus  <file>/etc/rc${runlevel}.d/</file> oder
Umbenennen des Links (so dass er nicht mehr mit einem 'S' anfängt)

<item>Umbenennen des Start-Skripts
(<file>/etc/init.d/_service_name_</file>), zum Beispiel in
<file>/etc/init.d/OFF._service_name_</file>

<item>Entfernen des Execute-Flags von der
Datei <file>/etc/init.d/_dienst_</file>

<item>Editieren der Datei <file>/etc/init.d/_dienst_</file>, so
dass sich das Skript sofort beendet.

</list>

<p>Sie können die Links manuell aus
<file>/etc/rc${runlevel}.d/</file> entfernen oder Sie benutzen
<tt>update-rc.d</tt> (siehe auch <manref section="8"
name="update-rc.d">). So können Sie zum Beispiel einen Dienst in
den Multi-User-Runleveln abschalten:

<example>
update-rc.d stop XX 2 3 4 5 .
</example>

<p>Bitte beachten Sie, dass <tt>update-rc.d -f _service_
remove</tt> nicht korrekt arbeiten wird, wenn Sie <em>nicht</em>
<package>file-rc</package> benutzen, da <em>alle</em>
Verknüpfungen entfernt werden. Nach einer Neuinstallation oder einem
Upgrade dieses Paketes werden diese Verknüpfungen neu angelegt (was
Sie vermutlich nicht wollen). Wenn Sie denken, dass dies wenig intuitiv
ist, haben Sie wahrscheinlich recht (siehe <url
id="http://bugs.debian.org/67095" name="Bug 67095">). Aus der
Manpage:

<example>
 If any files /etc/rcrunlevel.d/[SK]??name already exist then
 update-rc.d does nothing.  This is so that the system administrator 
 can rearrange the  links,  provided that  they  leave  at  least one
 link remaining, without having their configuration overwritten.
</example>

<p>Wenn Sie <package>file-rc</package> benutzen, werden alle Informationen
über das Starten von Diensten durch eine gemeinsame
Konfigurationsdatei verarbeitet und werden sogar nach der
Deinstallation eines Dienstes von dem System beibehalten.

<p>Sie können das TUI (Text User Interface, textbasierte
Benutzungsoberfläche) des Paketes <package>rcconf</package> benutzen,
um all diese Änderungen einfach zu erledigen
(<package>rcconf</package> arbeitet sowohl mit <package>file-rc</package> als auch mit
normalen System-V-Runleveln).

<p>Andere (nicht empfohlene) Methoden zum Abschalten eines Dienstes sind:
<tt>chmod 644 /etc/init.d/daemon</tt> (aber das erzeugt eine
Fehlermeldung beim booten) oder das Ändern des
<file>/etc/init.d/daemon</file>-Skriptes (hinzufügen von <prgn>exit
0</prgn> als allererste Zeile oder Auskommentieren des
<tt>start-stop-daemon</tt> Teils). Da es sich bei allen init.d-Dateien um
Konfigurationsdateien handelt, werden sie bei einem Upgrade nicht
überschrieben.

<p>Leider können Sie, im Gegensatz zu anderen (UNIX-)
Betriebssystemen, Dienste unter Debian nicht abschalten, indem Sie die
Dateien unter <file>/etc/default/_servicename_</file> modifizieren.

<p>FIXME: Add more information on handling daemons using file-rc


<sect1 id="inetd">Abschalten von inetd-Diensten

<p>Abschalten sollten Sie alle nicht benötigten Dienste, wie zum Beispiel
echo, chargen, discard, daytime, time, talk, ntalk und die r-Dienste
(rsh, rlogin und rcp), die als SEHR unsicher gelten (benutzen Sie
stattdessen ssh).
Nachdem Sie diese abgeschaltet haben, sollten Sie überprüfen,
ob Sie überhaupt den inetd-Daemon brauchen. Viele Leute ziehen es
vor einzelne Daemonen zu benutzen, anstatt einen Dienst über inetd
zu starten. Wenn Sie dann immer noch einen inetd-Dienst laufen lassen
wollen, wechseln Sie zu einem besser zu konfigurierenden inet-Daemonen, wie xinetd
oder lrinetd.

<p>Sie können Dienste abschalten, indem Sie direkt
<file>/etc/inetd.conf</file> editieren, aber Debian stellt Ihnen einen
besseren Weg zur Verfügung: <tt>update-inetd</tt> (was
die Dienste auf eine Art auskommentiert, so dass sie leicht wieder
eingeschaltet werden können). Sie können den Telnet-Daemon sehr
leicht mit dem folgenden Kommando abschalten, so dass die
Konfigurationsdateien angepasst und der Daemon neu gestartet wird:

<example>
/usr/sbin/update-inetd --disable telnet
</example>
<!-- # /etc/init.d/inetd restart Not needed since the manpage says update-inetd
sends a SIGHUP, commented out as suggested by Dariusz Puchalak -->

<p>Wenn Sie Dienste starten wollen, aber nur auf bestimmten IP-Adressen
Ihres Systems, müssen Sie eventuell auf eine undokumentierte
Funktion des <package>inetd</package> zurückgreifen.
<!-- FIXME write the information sent by Alexander to the debian-security mailing list -->
Alternativ können Sie einen Daemon wie <package>xinetd</package> benutzen.

<sect>Installieren Sie möglichst wenig Software

<!-- FIXME es sind 7 cds  - youam -->
<p>Debian bietet <em>sehr viel</em> Software an. Debian 3.0 (<em>woody</em>)
enthält alleine 6 CDs mit Software und tausenden von Paketen.
Bei so viel Software, selbst wenn Sie die
Installation auf das Basis-System reduzieren
<footnote>
Unter Debian Woody ist das Basis-System etwa 40MB gross. Probieren Sie
folgendes:
<example>,
$ size=0
$ for i in `grep -A 1 -B 1 "^Section: base" /var/lib/dpkg/available |
grep -A 2 "^Priority: required" |grep "^Installed-Size" |cut -d : -f 2
`; do size=$(($size+$i)); done
$ echo $size
34234
</example>
</footnote>
könnten Sie auf Abwege geraten und mehr installieren als Sie
wirklich benötigen.

<p>Da Sie bereits wissen, was Sie mit Ihrem System machen wollen
(oder etwa nicht?) sollten Sie nur Software installieren, die Sie
wirklich für den Betrieb benötigen. Jedes unnötige installierte
Programm könnte von einem Nutzer, der Ihr System kompromittieren
will, genutzt werden - oder von einem externen Eindringling, der
Shell-Zugriff bekommen hat (oder der Code von Außerhalb durch einen
fehlerhaften Dienst ausführen kann).

<p>Zum Beispiel kann das Vorhandensein von Hilfsprogrammen für Programmierer
(ein C-Compiler) oder Interpretern (wie Perl, Python, tcl, s.u.) einem Angreifer
helfen, das System weiter zu kompromittieren:

<list>
<item>Der Angreifer kann seine Privilegien auf dem System erweitern.
Es ist beispielsweise leichter eine lokale Sicherheitslücke des Systems
auszunutzen, wenn man einen Debugger und Compiler zur Verfügung hat,
um den eigenen Exploit (ein Programm, das eine Sicherheitslücke
ausnutzt) zu kompilieren und zu testen.

<item>Man könnte dem Angreifer Tools zur Verfügung stellen, die ihm helfen
könnten, das kompromittierte System als <em>Basis für
Angriffe</em> auf andere Systeme zu benutzen.
<footnote>
Häufig werden fremde Systeme nur deshalb gehackt, weil Sie zu weiteren
illegitimen Aktivitäten benutzt werden sollen (DoS-Attacken, Spam,
geheime FTP-Server, DNS-Schweinereien...). Der Angreifer möchte meist
gar nicht an die vertraulichen Daten auf dem kompromittierten System herankommen.
</footnote>

</list>

<p>Natürlich kann ein Eindringling mit lokalem Shell-Zugriff seine
eigenen Programme herunterladen und ausführen. Und sogar die Shell selbst
kann benutzt werden, um komplexere Programme zu schreiben. Das Entfernen
unnötiger Programme wird also nicht helfen, das Problem zu
<em>verhindern</em>, jedoch wird wird es für den Angreifer
wesentlich schwieriger werde, das System zu komprimitieren (und manchmal
wird er in dieser Situation aufgeben
und sich ein leichteres Ziel suchen). Wenn Sie also auf einem
produktivem System Tools lassen, die benutzt werden können, um
andere Systeme anzugreifen (siehe <ref id="vuln-asses">), müssen Sie
auch davon ausgehen, dass ein Angreifer sie benutzen wird.

<sect1>Entfernen von Perl

<p>Sie müssen bedenken, dass es nicht gerade einfach ist,
<package>Perl</package> von einem Debian-System zu entfernen,
da es von vielen Dienstprogrammen benutzt wird.
<package>perl-base</package>
hat außerdem <em>Priority: required</em> (und das sagt eigentlich schon
alles). Es ist aber trotzdem machbar. Sie müssen nur bedenken, dass
Sie auf diesem System keine Perl-Anwendung mehr laufen lassen
können, und Sie müssen auch das Paket-Management-System
hereinlegen, damit es weiterhin denkt, dass <package>perl-base</package>
installiert ist, auch wenn es das nicht mehr ist. <footnote>Sie
können (auf einem anderen System) eine Paket-Attrappe mit
<package>equivs</package> erstellen.</footnote>

<p>Welche Dienstprogramme benutzen Perl? Sie können es selbst
herausfinden:
<example>
$ for i in /bin/* /sbin/* /usr/bin/* /usr/sbin/*; do [ -f $i ] && {
type=`file $i | grep -il perl`; [ -n "$type" ] && echo $i; }; done
</example>

<p>Diese Liste schließt die folgenden Dienstprogramme mit der
Priorität <em>required</em> oder <em>important</em> mit ein:

<list>
<item><file>/usr/bin/chkdupexe</file> aus dem Paket
<package>util-linux</package>.

<item><file>/usr/bin/replay</file> aus dem Paket
<package>bsdutils</package>.

<item><file>/usr/sbin/cleanup-info</file> aus dem Paket
<package>dpkg</package>.

<item><file>/usr/sbin/dpkg-divert</file> aus dem Paket
<package>dpkg</package>.

<item><file>/usr/sbin/dpkg-statoverride</file> aus dem Paket
<package>dpkg</package>.

<item><file>/usr/sbin/install-info</file> aus dem Paket
<package>dpkg</package>.

<item><file>/usr/sbin/update-alternatives</file> aus dem Paket
<package>dpkg</package>.

<item><file>/usr/sbin/update-rc.d</file> aus dem Paket
<package>sysvinit</package>.

<item><file>/usr/bin/grog</file> aus dem Paket
<package>groff-base</package>.

<item><file>/usr/sbin/adduser</file> aus dem Paket
<package>adduser</package>.

<item><file>/usr/sbin/debconf-show</file> aus dem Paket
<package>debconf</package>.

<item><file>/usr/sbin/deluser</file> aus dem Paket
<package>adduser</package>.

<item><file>/usr/sbin/dpkg-preconfigure</file> aus dem Paket
<package>debconf</package>.

<item><file>/usr/sbin/dpkg-reconfigure</file> aus dem Paket
<package>debconf</package>.

<item><file>/usr/sbin/exigrep</file> aus dem Paket
<package>exim</package>.

<item><file>/usr/sbin/eximconfig</file> aus dem Paket
<package>exim</package>.

<item><file>/usr/sbin/eximstats</file> aus dem Paket
<package>exim</package>.

<item><file>/usr/sbin/exim-upgrade-to-r3</file> aus dem Paket
<package>exim</package>.

<item><file>/usr/sbin/exiqsumm</file> aus dem Paket
<package>exim</package>.

<item><file>/usr/sbin/keytab-lilo</file> aus dem Paket
<package>lilo</package>.

<item><file>/usr/sbin/liloconfig</file> aus dem Paket
<package>lilo</package>.

<item><file>/usr/sbin/lilo_find_mbr</file> aus dem Paket
<package>lilo</package>.

<item><file>/usr/sbin/syslogd-listfiles</file> aus dem Paket
<package>sysklogd</package>.

<item><file>/usr/sbin/syslog-facility</file> aus dem Paket
<package>sysklogd</package>.

<item><file>/usr/sbin/update-inetd</file> aus dem Paket
<package>netbase</package>.

</list>

<p>Ohne Perl und solange Sie diese Dienstprogramme nicht in einem
Shell-Skript neuschreiben, werden Sie also wahrscheinlich keine Pakete mehr
verwalten können (und so das System nicht upgraden können, und das
ist <em>keine gute Idee</em>).

<p>Wenn Sie sich dazu entschlossen haben, Perl aus dem
Debian-Basis-System zu entfernen und ein wenig Freizeit haben, schicken
Sie uns doch Bug-Reports zu den aufgezählten Paketen, die (als ein
Patch) einen Ersatz dieser Dienstprogramme als Shell-Skript enthält.

<sect>Lesen Sie Debians Sicherheits-Mailinglisten

<p>Es ist niemals falsch einen Blick entweder in die debian-security-announce
Mailing-Liste zu werfen, wo Sicherheitsgutachten und Problemlösungen durch
das Debian-Sicherheits-Team bekannt gemacht werden oder sich an der
debian-security@lists.debian.org-Liste zu beteiligen, wo Sie an den
Diskussionen zu allen sicherheitsrelevanten Fragen teilnehmen könen.

<p>Um wichtige Warnungen zu Sicherheits-Update zu erhalten, senden Sie
eine E-Mail an <url
name="debian-security-announce-request@lists.debian.org"
id="mailto:debian-security-announce-request@lists.debian.org"> mit dem
Wort "subscribe" in der Betreff-Zeile. Sie können diese moderierte
E-Mail-Liste unter <url name="http://www.debian.org/MailingLists/subscribe"
id="http://www.debian.org/MailingLists/subscribe"> auch über das Web
abonnieren.

<p>Diese Mailingliste hat ein sehr geringes Aufkommen, und indem Sie sie
abonnieren, werden Sie sofort über Sicherheits-Updates der
Debian-Distribution informiert. Dies erlaubt Ihnen sehr schnell neue
Pakete mit Sicherheits-Updates herunterzuladen, was sehr wichtig ist, um
ein sicheres System zu verwalten (siehe <ref id="update"> für
weitere Details, wie Sie dies machen).


<chapt>Nach der Installation

<p>Wenn das System installiert ist, können Sie es noch weiter absichern,
indem Sie einige der in diesem Kapitel beschriebenen Schritte ausführen.
Natürlich hängt dies vor allem von Ihrem Setup ab, aber um
physischen Zugriff zu verhindern, sollten Sie <ref id="bios-boot">, 
<ref id="lilo-passwd">, <ref id="kernel-root-prompt">, <ref id="floppy-boot">,
<ref id="restrict-console-login">, und <ref id="restrict-reboots"> lesen.

<p>Bevor Sie sich mit einem Netzwerk verbinden, insbesondere wenn es sich um ein
öffentliches Netzwerk handelt, sollten Sie wenigstens ein security update
(siehe <ref id="update">) durchführen. Optional können Sie sich
einen Snapshot Ihres Systems machen (siehe <ref id="snapshot">).

<sect id="bios-boot">Änderungen im BIOS (noch einmal)

<p>Erinnern Sie sich an <ref id="bios-passwd">? Nun, jetzt sollten sie, nachdem
Sie nicht mehr von austauschbaren Datenträgern booten müssen, die
Standard-BIOS-Einstellung so umändern, dass es <em>auschließlich</em> von
der Festplatte bootet. Gehen Sie sicher, dass Sie Ihr BIOS Passwort nicht
verlieren, oder Sie werden, im Falle eines Festplattenfehlers, nicht mehr ins
BIOS zurückkehren können, um die Einstellung wieder zu ändern, so
dass Sie Ihr System wiederherstellen können, indem Sie zum Beispiel eine
CD-ROM benutzen.

<p>Eine andere, weniger sicher, aber bequemere Möglichkeit ist es, das BIOS
so einzustellen, dass es von von der Festplatte bootet, und nur falls dies
fehlschlägt versucht von austauschbaren Datenträgern zu booten.
Übrigens wird dies oft so gemacht, weil viele Leute ihr BIOS Passwort
so selten benutzen, dass sie es zu leicht vergessen.

<sect id="lilo-passwd">Ein Passwort für LILO oder GRUB einstellen
<p>
Jeder kann sehr einfach eine root Shell auf Ihrem System bekommen, indem er
einfach "&lt;Name-Ihres-Bootimages&gt; init=/bin/sh" am Bootprompt eingibt.
Nachdem die Passwörter geändert und das System neu gestartet
wurde, hat die Person uneingeschränkten Root Zugang and kann alles auf
Ihrem System machen, das Sie will. Nach dieser Prozedur haben Sie keinen
Root Zugang mehr zu Ihrem System, weil Sie das Root Passwort nicht kennen.

<p>
Um sicher zu stellen, dass dies nicht passieren kann, sollten Sie den boot
loader mit einem Passwort schützen. Sie können zwischem einem
globalen Passwort und Passwörtern für bestimmte Images
wählen.
<p>
Für LILO müssen Sie die Konfigurationsdatei
<file>/etc/lilo.conf</file> editieren und eine "password" und "restricted"
Zeile, wie im folgenden Beispiel, einfügen:

<example>
image=/boot/2.2.14-vmlinuz
   label=Linux
   read-only
   password=hackmich
   restricted
</example>

<p>
Haben Sie dies getan, rufen Sie lilo auf. Wenn Sie die "restricted" Zeile
weglassen, wird lilo immmer nach dem Passwort fragen, egal ob LILO
Parameter übergeben wurden oder nicht. Die Standard-Zugriffsrechte auf
<file>/etc/lilo.conf</file> erlauben root das Lesen und Schreiben, und der
Gruppe von lilo.conf, ebenfalls root, das Lesen.

<p>
Wenn Sie GRUB anstelle von LILO verwenden, editieren Sie
<file>/boot/grub/menu.lst</file> und fügen die folgenden zwei Zeilen
am Anfang an (dabei ersetzen Sie natürlich 'hackmich' mit dem
vorgesehenen Passwort). Dies verhindert, dass Benutzer die
Booteinträge verändern können. 'timeout 3' legt eine
Wartedauer von 3 Sekunden fest, bevor grub den Standard Eintrag bootet.

<example>
timeout 3
password hackmich
</example>

Um die Integrität Ihres Passwortes zusätzlich abzusichern,
sollten <!-- AS 20020903 : Das eigentliche 'may' = duerfen, passte hier
nicht so gut --> Sie Ihr Passwort verschlüsselt ablegen. Das Utility
grub-md5-crypt generiert ein gehashtes Passwort, das kompatibel mit grubs
Verschlüsselungsalgorithmus (md5) ist.
Um grub mitzuteilen, dass verschlüsselte Passwörter benutzt
werden, benutzen Sie die folgende Anweisung:
<example>
timeout 3
password --md5 $1$arPydhOM$bIgEKjMW5kxeEuvE1Rah4/
</example>

Der --md5 Parameter wurde hinzugefügt, um bei grub einen md5
Authentifizierungsprozess zu erzwingen. Das angegeben Passwort ist die
md5 verschlüsselte Version von &quot;hackmich&quot;. Es ist vorzuziehen md5-
statt Klartext-Passwörter zu verwenden. Weitere Informationen über
grub Passwörter können Sie im grub-doc Paket finden.

<sect id="kernel-root-prompt">Entfernen des root Promptes aus dem Kernel

<p>
Linux 2.4 Kernel bieten kurz nach dem Laden des cramfs einen Weg Zugriff
auf eine Root Shell zu bekommen, also während das System bootet. Es
erscheint eine Meldung, die dem Administrator erlaubt, eine
auszuführende Shell mit Root Privilegien zu betreten, diese Shell kann
dazu benutzt werden, manuell Module zu laden, falls die automatische
Erkennung fehlschlägt. Dies ist das Standard-Verhalten bei initrd's
Linuxrc. Die folgende Meldung wird erscheinen:
<example>
Press ENTER to obtain a shell (waits 5 seconds)
</example>

<p>
Um dieses Verhalten zu entfernen, müssen sie
<file>/etc/mkinitrd/mkinitrd.conf</file> editieren und den Eintrag
<example>
# DELAY  Anzahl Sekunden, die das linuxrc Skript warten soll,
# um den Nutzer eingriffe zu erlauben, bevor das System hochgefahren 
# wird
DELAY=0
</example>
setzen.

<p>Generieren Sie Ihr Ramdisk-Image anschließend neu. Dies können sie
zum Beispiel so tun:
<example>
# cd /boot
# mkinitrd -o initrd.img-2.4.18-k7 /lib/modules/2.4.18-k7
</example>
<p>oder machen Sie (vorzugsweise):
<example>
# dpkg-reconfigure kernel-image-2.4.x-yz
</example>
<p>Beachten Sie, dass Debian 3.0 woody den Benutzern erlaubt, 2.4er Kernel
zu installieren (indem Sie <em>flavors</em> wählen), <em>aber</em> der
Standard-Kernel ist 2.2 (von einigen Architekturen abgesehen, auf die der
Kernel 2.2 nicht portiert wurde). Wenn Sie dies als Bug ansehen, beachten
Sie <url id="http://bugs.debian.org/145244" name="Bug 145244">, bevor Sie
ihn einsenden.

<sect id="floppy-boot">Booten von Diskette verbieten
<p>
Der Standard-MBR von Debian vor Version 2.2 verhielt sich nicht wie ein
normaler Master Boot Record und ließ eine Methode offen, einfach in ein
System einzubrechen:

<list>
<item>Drücken Sie während des Starts shift, und der MBR prompt
erscheint

<item>Drücken Sie dann F, und Ihr System wird von Diskette booten.
Dies kann man ausnutzen, um root Privilegien auf dem System zu erlangen.
</list>

<p>Dieses Verhalten können Sie ändern, indem Sie
<example>
lilo -b /dev/hda
</example>
eingeben.

<p>Nun ist LILO in den MBR geschoben worden. Dies können Sie auch
erreichen, indem Sie "boot=/dev/hda" zu lilo.conf hinzufügen. Es gibt
noch eine Möglichkeit, die den MBR komplett abschalten wird:
<example>
install-mbr -i n /dev/hda
</example>

<p>Auf der anderen Seite könnte diese "Hintertür", die viele
Leute nicht kennen, Ihnen einmal die Haut retten, wenn Sie aus irgendwelchen Gründen in große
Schwierigkeiten mit Ihrer Installation geraten.

<p>FIXME überprüfen, ob das für 2.2 wirklich stimmt, oder
war es 2.1?
INFO: Die Boot Disketten von Debian 2.2 installieren KEINEN mbr, sondern
nur LILO

<sect id="restrict-console-login">einschränkender Konsolen-Zugang

<p>Manche Sicherheits-Regelwerke könnten Administratoren dazu zwingen,
sich erst als User mit Ihrem Passwort auf dem System einzuloggen, und
dann Superuser zu werden (mit <prgn>su</prgn> oder <prgn>sudo</prgn>).
Solche eine Policy ist in Debian in der Datei
<file>/etc/login.defs</file> oder <file>/etc/securetty</file> (falls sie
PAM verwenden) implementiert. In:

<list>

<item><file>login.defs</file>, ändern Sie die CONSOLE Variable,
die eine Datei oder eine Liste von Terminals definiert, an denen sich
root einloggen darf

<item><file>securetty</file> entfernen Sie oder fügen Sie Terminals
hinzu, bei denen Root Zugriff erhalten darf

</list>

<p>Wenn Sie PAM benutzen können Sie auch andere Änderungen am
Login Prozess, die auch Einschränkungen für einzelne Benutzer
oder Gruppen zu bestimmten Zeiten enthalten können, durch
konfigurieren der Datei <file>/etc/pam.d/login</file> vornehmen. Eine
interessante Eigenschaft, die man auch abschalten kann, ist die
Möglichkeit, sich mit einem leeren Passwort (Null Passwort)
einzuloggen. Diese Eigenschaft kann eingeschränkt werden, indem sie
<em>nullok</em> aus der Zeile
<example>
auth       required   pam_unix.so nullok
</example>
entfernen.

<sect id="restrict-reboots">System-Neustart auf der Konsole einschränken

<p>Wenn an Ihr System eine Tastatur angeschlossen ist, kann jeder (ja
wirklich <em>jeder</em>) Ihr System neu starten, ohne sich in Ihr System
einloggen zu müssen. Dies könnte oder könnte nicht gegen
Ihre Sicherheitsrichtlinien verstoßen. Wenn Sie dies
einschränken wollen, müssen Sie in <file>/etc/inittab</file>
prüfen, ob die Zeile, die enthält, dass <tt>ctrlaltdel</tt>
<prgn>shutdown</prgn> aufruft, den <tt>-a</tt> Schalter enthält
(vergessen Sie nicht, <tt>init q</tt> auszuführen, nachdem sie
diese Datei irgendwie verändert haben). Standardmäßig
enthält Debian diesen Schalter:
<example>
ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now
</example>

<p>Jetzt müssen Sie, um es <em>manchen</em> Benutzern zu erlauben,
Ihr System neu zu starten, eine Datei <file>/etc/shutdown.allow</file>
erstellen, wie es in der Manualseite <manref section="8"
name="shutdown"> beschreibt. Dort müssen die Namen der Benutzer, die
das System neu booten dürfen, aufgeführt sein. Wenn der
<em>drei Finger Salut</em> (auch bekannt als <em>Strg+Alt+Entf</em>)
ausgeführt wird, wird geprüft, ob irgendeiner der Benutzer, die
in der Datei aufgelistet sind, eingeloggt sind. Wenn es keiner von ihnen
ist, wird <prgn>shutdown</prgn> das System <em>nicht</em> neu starten.

<sect>Partitionen auf die richtige Art einbinden
<p>
Wenn Sie eine ext2 Partition einbinden, können Sie verschiedene
Optionen mit dem mount-Befehl oder in <file>/etc/fstab</file> verwenden.
Dies zum Beispiel, ist mein fstab Eintrag für meine
<file>/tmp</file> Partition:
<example>
/dev/hda7    /tmp    ext2    defaults,nosuid,noexec,nodev    0    2
</example>

<p>
Sie sehen den Unterschied in der Spalte mit den Optionen. Die Option
<tt>nosuid</tt> ignoriert alle setuid und setgid Bits komplett,
während <tt>noexec</tt> das ausführen irgendwelcher Programme
unterhalb des Einhängepunkt (mount point) verbietet und <tt>nodev</tt> Geräte ignoriert. Das
hört sich toll an, aber es
<list>
<item>ist nur auf ext2 Dateisysteme anwendbar
<item>kann leicht umgangen werden
</list>

<p>Die <tt>noexec</tt> Option, die verhindert, dass Binaries
ausgeführt werden können, lässt sich leicht umgehen:
<example>
alex@joker:/tmp# mount | grep tmp
/dev/hda7 on /tmp type ext2 (rw,noexec,nosuid,nodev)
alex@joker:/tmp# ./date
bash: ./date: Permission denied
alex@joker:/tmp# /lib/ld-linux.so.2 ./date
Sun Dec  3 17:49:23 CET 2000
</example>

<p>
Wie auch immer, viele Skript-Kiddies haben Exploits, die versuchen eine
ausführbare Datei in <file>/tmp</file> zu erstellen. Wenn sie keine
Ahnung haben, werden sie in dieser Grube hängen bleiben. Mit anderen
Worten: Ein Benutzer kann nicht dazu getrickst werden, einen
ausführbaren Trojaner in <file>/tmp</file> auszuführen, zum
Beispiel indem er zufällig <file>/tmp</file> in seinen Such-Pfad
aufnimmt.

<p>Seien Sie auch gewarnt, dass manche Skripts darauf aufbauen, dass
<file>/tmp</file> ausführbare Rechte hat. Bemerkenswerterweise
hatte (oder hat?) Debconf Probleme bei dieser Sache, weitere
Informationen enthält Bug <url id="http://bugs.debian.org/116448"
name="116448">.

<p>
Nachfolgend ist ein gründlichereres Beispiel. Dazu:
<file>/var</file> könnte auch noexec enthalten, aber manche
Software, wie zum Beispiel Smartlist, behält seine Programme
unterhalb von /var. Das selbe gilt für die nosuid Option.

<example>
/dev/sda6       /usr            ext2    defaults,ro,nodev       0       2
/dev/sda12      /usr/share      ext2    defaults,ro,nodev,nosuid        0       2
/dev/sda7       /var            ext2    defaults,nodev,usrquota,grpquota          0       2
/dev/sda8       /tmp            ext2    defaults,nodev,nosuid,noexec,usrquota,grpquota    0       2
/dev/sda9       /var/tmp        ext2    defaults,nodev,nosuid,noexec,usrquota,grpquota    0       2
/dev/sda10      /var/log        ext2    defaults,nodev,nosuid,noexec    0       2
/dev/sda11      /var/account    ext2    defaults,nodev,nosuid,noexec    0       2
/dev/sda13      /home           ext2    rw,nosuid,nodev,exec,auto,nouser,async,usrquota,grpquota                0       2
/dev/fd0        /mnt/fd0        ext2    defaults,users,nodev,nosuid,noexec      0       0
/dev/fd0        /mnt/floppy     vfat    defaults,users,nodev.nosuid,noexec      0       0
/dev/hda        /mnt/cdrom      iso9660 ro,users,nodev.nosuid,noexec            0       0
</example>

<sect1>/tmp noexec setzen
<p>
Seien Sie vorsichtig, wenn Sie <file>/tmp</file> noexec setzen und neue
Software installieren wollen, da manche Software es während der
Installation benutzt. Apt ist ein solches Programm (siehe <url
id="http://bugs.debian.org/116448">), wenn nicht
<tt>APT::ExtractTemplates::TempDir</tt> (siehe <manref
name="apt-extracttemplates" section="1">) passend konfiguriert wurde. Sie
können diese Variable in <file>/etc/apt/apt.conf</file> auf ein
anderes Verzeichnis als <file>/tmp</file> mit exec Privilegien setzen.

<p>Was noexec betrifft, seien Sie sich bitte bewusst, dass es Ihnen nicht
sehr viel Sicherheit bietet. 
Beachten Sie folgendes:
<example>
$ cp /bin/date /tmp
$ /tmp/date
(wird aufgrund des noexec nicht ausgeführt)
$/lib/ld-linux.so.2 /tmp/date
(funktioniert, da date nicht direkt ausgeführt wird)
</example>

<sect1>Setzen von /usr auf nur-lesen
<p>
Wenn Sie auf <file>/usr</file> nur lesenden Zugriff erlauben, werden Sie
nicht in der Lage sein, neue Pakete auf Ihrem Debian GNU/Linux System
installieren können. Sie werden es erst wieder mit Schreibzugriff
erneut mounten müssen, die Pakete installieren, und dann wieder
read-only mounten. Die neuste Version von apt (in Debian 3.0 'woody')
kann konfiguriert werden, Befehle vor und nach dem Installieren von Paketen
auszuführen, also möchten Sie es vielleicht passend
konfigurieren.

<p>Um dies zu machen öffnen Sie <file>/etc/apt/apt.conf</file> und fügen Sie ein:
<example>
  DPkg
  {
      Pre-Invoke  { "mount /usr -o remount,rw" };
      Post-Invoke { "mount /usr -o remount,ro" };
  };
</example>

<p>Beachten Sie, dass das Post-Invoke mit einer "/usr busy"
Fehlermeldung scheitern wird. Dies passiert vorwiegend, wenn Sie eine
Datei während des Updates benutzen. Ärgerlich, aber kein
grosses Problem. Gehen Sie einfach sicher, dass sie nicht länger
benutzt werden, und führen Sie das Post-Invoke manuell aus.

<sect id="update">Ausführen von Sicherheitsupdates

<p>Sobald neue Sicherheitslöcher in einem Paket entdeckt wurden,
reparieren sie Debian Paket-Betreuer und ursprüngliche Autoren im
allgemein innerhalb von Tagen oder sogar Stunden. Nachdem das Loch
gestopft wurde, werden neue Pakete unter <url
name="http://security.debian.org" id="http://security.debian.org"> bereit
gestellt.

<p>Wenn Sie eine Debian Release installieren, müssen Sie
berücksichtigen, dass es seitdem der Releas gemacht wurde,
Sicherheitsupdates geben könnte, nachdem entdeckt wurde, dass ein
bestimmtes Paket verwundbar ist. Ebenso könnte es kleinere Releases
gegeben haben (es gab acht kleinere Releases von Debian 2.2
<em>potato</em>), die Paket-Updates enthalten.

<p>Sie müssen sich das Erstellungsdatum Ihres CD Sets (wenn Sie ein solches benutzen) notieren,
und auf der Sicherheitsseite prüfen, ob es Sicherheits-Updates
gegeben hat. Wenn es solche gibt, und Sie die Pakete nicht von der
Sicherheits-Seite herunterladen können (Ihr System ist noch nicht
mit dem Internet verbunden, oder?), könnten Sie es in Erwähgung
ziehen (falls Sie nicht, beispielsweise durch eine Firewall,
geschützt sind), Firewall-Regeln zu aktivieren, so dass Ihr System
ausschließlich mit security.debian.org Verbindung aufnehmen kann und
dann ein Update Ausführen. Eine Beispiel-Konfiguration finden sie
unter <ref id="fw-security-update">.

<p>Um Ihr System upzudaten, fügen Sie die folgende Zeile in Ihre
<file>/etc/apt/sources.list</file>, und Sie werden Sicherheits-Updates
automatisch erhalten, wann immer Sie Ihr System updaten.

<example>
deb http://security.debian.org/debian-security stable/updates main contrib non-free
</example>

<p>Die meisten Leute, die nicht in einem Land leben, das den Import oder
die Nutzung starker Kryptographie verbietet, sollten auch diese Zeile
hinzufügen:

<example>
deb http://security.debian.org/debian-non-US stable/non-US main contrib non-free
</example>

<p>Wenn Sie möchten, können Sie ebenfalls eine deb-src Zeile
hinzufügen. Weitere Details finden Sie unter <manref name="apt"
section="8">.

<p>Sie sollten regelmässig Sicherheits-Updates durchführen; die
meisten Sicherheitsprobleme resultieren aus bekannten
Sicherheitslücken, die nicht rechtzeitig gestopft wurden, wie
auch <url id="http://www.cs.umd.edu/~waa/vulnerability.html"> name="paper
by Bill Arbaugh"> (vorgetrafen auf dem 2001 IEEE Symposium on Security
and Privacy) erklärt.

<p>FIXME: Add info on how the signature of packages is done so that this
can be done automatically through a cron job (big warning: DNS spoofing).

<sect>Den Benutzern einen Sicheren Zugang bereitstellen

<sect1 id="auth-pam">User Authentifizierung: PAM

<p>PAM (Pluggable Authentication Modules) erlauben dem Systemadministrator
auszuwählen, wie eine Anwendung Benutzer
authentifiziert. Beachten Sie, dass PAM nichts machen kann, solange die
Anwendung nicht mit Unterstützung für PAM kompiliert wurde. Die
meisten Anwendungen, die mit Debian 2.2 geliefert werden, haben diese
Unterstützung eingebaut. Weiterhin hatte Debian keine
Unterstützung für PAM vor Version 2.2. Die derzeitige
Standard-Konfiguration für jedweden PAM benutzenden Dienst ist es, 
UNIX Authentifizierung zu emulieren (lessen sie
<file>/usr/share/doc/libpam0g/Debian-PAM-MiniPolicy.gz</file> um mehr
darüber zu erfahren, wie PAM-Dienste unter Debian arbeiten
<em>sollten</em>).


<p>Jede Anwendung mit PAM Unterstützung bietet eine Konfigurationsdatei
unter <file>/etc/pam.d/</file> in welcher Sie ihr Verhalten
einstellen können:

<list>
<item>welches Verfahren zur Authentifizierung benutzt wird.
<item>welches Verfahren innerhalb einer Sitzung benutzt wird.
<item>wie Passwörter überprüft werden.
</list>

<p>
Die folgende Beschreibung ist weit davon entfernt komplett zu sein,
für weitere Informationen möchten Sie vielleicht <url
id="http://www.kernel.org/pub/linux/libs/pam/Linux-PAM-html/pam.html"
name="The Linux-PAM System Administrator's Guide"> (auf der <url
id="http://www.kernel.org/pub/linux/libs/pam/" name="PAM Hauptseite">),
diese Dokumentation ist auch in dem Paket <package>libpam-doc</package>
enthalten.

<p>PAM bieten Ihnen die Möglichkeit, durch mehrere Authentifizierungsschritte
auf einmal zu gehen, ohne das der Benutzer es weiß. Sie
können gegen eine Berkeley Datenbank und gegen die normale passwd
Datei authentifizieren, und der Benutzer kann sich nur einloggen, wenn er
beide Male korrekt authentifiziert wurde. Sie können viel
einschränken mit PAM, genauso wie Sie Ihr System weit öffnen
können. Seien Sie also vorsichtig. Eine typische Konfigurationszeile
hat ein Kontrollfeld als zweites Element.
<!-- Second in mine (old Debian v2.0 though), check this! (FIXME) (era) -->
Generell sollte es auch "requisite" gesetzt werden, so wird ein Loginfehler
erzeugt, wenn eines der Module versagt.
<!-- Lots of fields in mine are "required", please elaborate? (FIXME) (era) -->

<p>Die erste Sache, die ich gerne mache ist, MD5 Unterstützung
zu den PAM Anwendungen hinzuzufügen, da dies gegen lexikalische
Attacken hilft (da Passwörter länger sein können, wenn sie
MD5 benutzen). Die folgenden zwei Zeilen sollten Sie in allen Dateien
unterhalb von <file>/etc/pam.d/</file> hinzufügen, die Zugriff auf Ihre
Maschine gewähren, wie zum Beispiel <tt>login</tt> und <tt>ssh</tt>.

<example>
# Gehen Sie sicher, dass Sie libpam-cracklib zuerst installiert haben,
# sonst werden Sie sich nicht einloggen koennen
password   required     pam_cracklib.so retry=3 minlen=12 difok=3
password   required     pam_unix.so use_authtok nullok md5
</example>

<p>Also, was macht diese Beschwörungsformel nun genau? Die erste
Zeile lädt das cracklib PAM Modul, welches einen
Passwort-Sicherheits-check bereitstellt; es fragt nach einem neuen
Passwort mit einem Minimum von 12 Zeichen, einer Differenz von mindestens
3 Zeichen zum alten Passwort, und erlaubt 3 Versuche. Die zweite Zeile
führt das Standardauthentifizierungsmodul mit MD5 Passwörtern
aus und erlaubt Passwörter mit einer Länge von Null. Die
use_authtok Direktive ist notwendig, um das Passwort von dem vorherigen
Modul übergeben zu bekommen.

<p>Um sicher zu stellen, dass sich der Benutzer root nur von lokalen
Terminals einloggen kann, sollten Sie die folgende Zeile in
<file>/etc/pam.d/login</file> eingefügt werden:

<example>
auth     requisite  pam_securetty.so
</example>

<p>Nun sollten Sie alle Terminals, von denen sich der Benutzer Root
einloggen können sollte, in <file>/etc/security/access.conf</file>
eintragen. Nicht zuletzt sollten Sie die folgende Zeile aktivieren, wenn
Sie Ihren Benutzern Limits setzen wollen:
<!-- FIXME: This is pam.d/login you're talking about, still? Elaborate? era -->
<example>
session  required   pam_limits.so
</example>

<p>Dies schränkt die System die ein User nutzen darf ein (siehe
unter in <ref id="user-limits">). Sie können zum Beispiel die Anzahl
der Logins, die man haben kann, einschränken (für eine Gruppe
von Nutzern oder System weit), die Anzahl der Prozesse, den belegten
Speicher...

<p>Editieren Sie nun <file>/etc/pam.d/passwd</file> und ändern Sie
die erste Zeile. Sie sollten die Option "md5" zufügen, um
MD5-Passwörter zu benutzen, ändern Sie die minimale
Passwort-Länge von 4 auf 6 (oder mehr) und setzen Sie eine
Maximallänge, wenn Sie möchten. Die resultierende Zeile wird in
etwa so aussehen:

<example>
password   required   pam_unix.so nullok obscure min=6 max=11 md5
</example>

<p>Wenn Sie su schützen möchten, so dass nur manche Leute es
benutzen können, um root auf Ihrem System zu werden, müssen sie
eine neue Gruppe "wheel" zu Ihrem System hinzufügen (das ist der
sauberste Weg, da keine Datei solche Gruppenrechte bisher benutzt).
Fügen Sie root und die anderen Benutzer, die zu root
<prgn>su</prgn>en können sollen, zu dieser Gruppe. Fügen Sie
anschließend die folgende Zeile zu <file>/etc/pam.d/su/</file> hinzu:

<example>
auth        requisite   pam_wheel.so group=wheel debug
</example>

<p>Dies stellt sicher, dass nur Personen aus der Gruppe wheel
<prgn>su</prgn> benutzen können, um root zu werden. Andere Benutzer
wird es nicht möglich sein, root zu werden. Tatsächlich werden
Sie eine ablehnende Nachricht bekommen, wenn Sie versuchen root zu
werden.

<p>Wenn Sie es nur bestimmten Nutzern erlauben wollen, sich bei einem
PAM-Dienst zu authentifizieren, ist dies sehr leicht zu erreichen, indem Sie
Dateien benutzen, in denen die Nutzer, denen es erlaubt ist, sich
einzuloggen (oder nicht), gespeichert sind. Stellen Sie sich vor, Sie
möchten lediglich dem Nutzer 'ref' erlauben, sich via ssh
einzuloggen. Sie schreiben in also in eine Datei
<file>/etc/ssh-users-allowed</file> und schreiben das folgende in
<file>/ect/pam.d/ssh</file>:

<example>
auth        required    pam_listfile.so item=user sense=allow file=/etc/sshusers-allowed onerr=fail
</example>

<p>Zuletzt, aber nicht am unwichtigsten, erstellen sie
<file>/etc/pam.d/other</file> mit den folgenden Zeilen:

<example>
auth     required       pam_securetty.so
auth     required       pam_unix_auth.so
auth     required       pam_warn.so
auth     required       pam_deny.so
account  required       pam_unix_acct.so
account  required       pam_warn.so
account  required       pam_deny.so
password required       pam_unix_passwd.so
password required       pam_warn.so
password required       pam_deny.so
session  required       pam_unix_session.so
session  required       pam_warn.so
session  required       pam_deny.so
</example>

<p>Diese Zeilen stellen für alle Anwendungen, die PAM
unterstützen, eine gute Standard-Konfiguration dar (Zugriff wird
standardmäßig verweigert).


<sect1 id="user-limits">Ressourcen-Nutzung limitieren: Die limits.conf
Datei

<p>
Sie sollten sich wirklich ernsthaft mit dieser Datei beschäftigen.
Hier können Sie Ihren Benutzern Ressourcen-Limits definieren. Wenn
Sie PAM benutzen, wird die Datei <file>/etc/limits.conf</file> ignoriert,
und Sie sollten <file>/etc/security/limits.conf</file> stattdessen
benutzen.

<p>Wenn Sie die Ressourcen Nutzung nicht einschränken, kann
<em>jeder</em> Nutzer mit einem einer gültigen Shell auf Ihrem
System (oder sogar ein Einbrecher, der das System durch einen Dienst
kompromittierte) so viel CPU, Speicher, Stack etc. benutzen, wie das System
zur Verfügung stellen kann. Dieses Problem der <em>Ressourcen
Überbeanspruchung</em> kann nur mit der Nutzung von PAM gelöst
werden. Beachten Sie, dass es einen Weg gibt, Ressourcen Limits zu manchen
Shells hinzuzufügen (zum Beispiel hat bash <prgn>ulimit</prgn>,
siehe <manref section="1" name="bash">), aber da nicht alle die gleichen
Limits zur Verfügung stellen, und da der Nutzer seine Shell
ändern kann (siehe <manref section="1" name="chsh">), ist es besser,
die Limits in den PAM Modulen zu platzieren.

<p>Für mehr Informationen hierzu lesen Sie:
<list>

<item><url
id="http://www.samag.com/documents/s=1161/sam0009a/0009a.htm"
name="PAM configuration article">.

<item> <url
id="http://seifried.org/security/os/linux/20020324-securing-linux-step-by-step.html"
name="Seifried's Securing Linux Step by Step"> in dem <em>Limiting
users overview</em> Abschnitt.

<item><url id="http://seifried.org/lasg/users/" name="LASG"> in dem 
<em>Limiting and monitoring users</em> Abschnitt.

</list>

<p>FIXME: Get a good limits.conf up here

<sect1>User Login Aktionen: Editieren von /etc/login.defs
<p>
Der nächste Schritt ist es, die grundlegende Konfiguration und die
Aktionen bei User Login zu editieren.

<example>
FAIL_DELAY          10
</example>

Diese Variable sollte auf einen höheren Wert gesetzt werden, um es
schwerer zu machen, mittels Brute Force (roher Gewalt, stures
Durchprobieren, Anm. d. Übers.) auf einem Terminal einzuloggen. Wenn
ein falsches Passwort eingegeben wird, muss der potentielle Angreifer
(aber auch der normale Benutzer!) 10 Sekunden warten, um einen neuen
login Prompt zu bekommen, was auf die Dauer viel Zeit kostet, wenn sie
Passwörter durch testen. Beachten Sie jedoch die Tatsache, dass diese
Einstellung nutzlos ist, wenn Sie ein anderes Programm als getty
benutzen, wie zum Beispiel mingetty.

<example>
FAILLOG_ENAB        yes
</example>

Wenn Sie diese Variable einschalten, werden fehlgeschlagene Logins
protokolliert. Es ist wichtig, hier auf dem Laufendem zu bleiben, um
jemanden zu fassen, der eine Brute Force Attacke versucht.

<example>
LOG_UNKFAIL_ENAB    yes
</example>

Wenn Sie die Variable "FAILLOG_ENAB" auf yes gesetzt haben, dann sollten
Sie auch diese Variable auf yes setzen. Dies wird auch unbekannte
Nutzernamen protokollieren. Wenn Sie dies tun, gehen Sie auch sicher, dass
die Protokolle sinnvolle Zugriffsrechte haben (Zum Beispiel 640, mit
einer angemessenen Gruppen-ZugehÃ¶rigkeit, wie adm), weil Nutzer oft
versehentlich ihr Passwort als Usernamen eingeben und dies anderen nicht
zugänglich machen wollen.

<example>
SYSLOG_SU_ENAB      yes
</example>

<p>Dies schaltet das Mitprotokollieren von <prgn>su</prgn> Versuchen im
Syslog ein. Sehr wichtig auf ernsthaften Maschinen, aber beachten Sie,
dass dies auch die Privatsphäre verletzen kann.

<example>
SYSLOG_SG_ENAB      yes
</example>

<p>Das gleiche wie bei SYSLOG_SU_ENAB, jedoch für das Programm
<prgn>sg</prgn>.

<example>
MD5_CRYPT_ENAB      yes
</example>

<p>Wie bereits erklärt, reduzieren MD5-Summen-Passwörter
großartig das Problem lexikalischer Attacken, da Sie längere
Passwörter benutzen können. Wenn Sie slink benutzen, lesen Sie
die Dokumentation zu MD5 bevor Sie diese Option einschalten. Ansonsten
wird dies in PAM gesetzt.
<!-- AS 20020909 Was will der Autor mit dem letzten Satz sagen?? -->

<example>
PASS_MAX_LEN        50
</example>

<p>Wenn Sie MD5-Passwörter in Ihrer PAM Konfiguration aktiviert
haben, dann sollten Sie diese Variable auf denselben Wert setzen, den Sie
dort benutzt haben.

<sect1>ftp Einschränken: Editieren von /etc/ftpusers
<p>
Die Datei <file>/etc/ftpusers</file> enthält eine Liste von allen
Nutzern, denen es nicht erlaubt ist, sich auf dem host mit ftp
einzuloggen. Benutzen Sie diese Datei nur, wenn Sie wirklich ftp
erlauben wollen (wozu im allgemeinen nicht geraten wird, da es Klartext
Passwörter benutzt). Wenn Ihr ftp Daemon PAM unterstützt,
können Sie dies ebenfalls benutzen, um Nutzern bestimmte Dienste zu
erlauben oder zu verbieten.

<p>FIXME (BUG): Is it a bug that the default ftpusers in Debian does
<em>not</em> include all the administrative users (in
<package>base-passwd</package>).

<sect1>su benutzen

<p>Wenn es wirklich benötigt wird, dass Nutzer Super User auf Ihrem
System werden, zum Beispiel um Pakete zu installieren oder neue Benutzer
anzulegen, können Sie das Programm <prgn>su</prgn> benutzen, um
Ihre Identität zu wechseln. Sie sollten jeden Login als Nutzer Root
vermeiden und stattdessen das Programm <prgn>su</prgn> benutzen.
Eigentlich ist die beste Lösung, su zu entfernen, und zu
<prgn>sudo</prgn> zu wechseln, da es mehr Möglichkeiten bietet als
<prgn>su</prgn>. Wie auch immer, <prgn>su</prgn> ist allgemeiner und wird
auf vielen Unices benutzt.

<sect1>sudo benutzen

<p>
Das <prgn>sudo</prgn> erlaubt es dem Benutzer, ein definiertes Kommando
unter einer anderen Nutzer-Identität auszuführen, sogar als
Root. Wenn der Nutzer zu <file>/etc/sudoers</file> hinzugefügt ist
und sich korrekt authentifiziert, ist er in der Lage, Kommandos, die in
<file>/etc/sudoers</file> definiert wurden, auszuführen.
Sicherheitsverletzungen, wie
ein inkorrektes Passwort oder der Versuch ein Programm auszuführen,
für das Ihre Rechte nicht ausreichen, werden protokolliert und an
root gemailt.

<sect1>verweigern von administrativen Fernzugriff
<p>Sie sollten <file>/etc/security/access.conf</file> ebenfalls so
modifizieren, dass ein administrativer Login aus der Ferne nicht erlaubt
ist. Auf diese Weise müssen die Nutzer das Programm <prgn>su</prgn>
(oder <prgn>sudo</prgn>) benutzen, so dass es immer eine prüfbare
Spur gibt, wann immer ein Nutzer administrative Möglichkeiten nutzen
möchte.

<p>Sie müssen die folgende Zeile zu Ihrer
<file>/etc/security/access.conf</file> hinzufügen, die
Debians Standard-Konfigurations Datei hat ein Beispiel auskommentiert:
<example>
   -:wheel:ALL EXCEPT LOCAL
</example>


<sect1 id="user-restrict">Nutzer einschränken

<p>Manchmal werden Sie vielleicht denken, dass Sie einen Nutzer auf Ihrem
System erstellen müssen, um einen bestimmten Dienst (pop3 E-Mail
Server oder ftp) anzubieten. Bevor Sie dies tun, erinnern Sie sich zuerst
daran, dass die PAM Implementierung in Debian GNU/Linux Ihnen erlaubt,
Nutzer mit einer breiten Auswahl von externen Verzeichnisdiensten
(radius, ldap, etc.) zu bestätigen. Dies wird vom libpam Paket
bewerkstelligt.

<p>Wenn Sie einen Nutzer anlegen müssen, und auf Ihr System aus der
Ferne zugegriffen werden kann, beachten Sie, dass es Nutzern
möglich sein wird, sich einzuloggen. Sie können dies beheben,
indem Sie diesen Nutzer eine Null (<file>/dev/null</file>) als Shell (sie
müsste in <file>/etc/shells</file> gelistet sein) zuweisen. Wenn Sie
den Nutzern erlauben wollen, auf das System zuzugreifen, aber ihre
Bewegungen einschränken wollen, können Sie
<file>/bin/rbash</file> benutzen, als ob Sie die <tt>-r</tt> Option der
Bash (<em>RESTRICTED SHELL</em>, siehe <manref name="bash"
section="1">) verwendet hätten. Beachten Sie bitte, dass sogar mit
einer restricted Shell ein Nutzer,  der auf ein interaktives
Programm zugreifen kann (das es ihm erlauben würde, eine subshell
auszuführen), diese Limitierung der Shell umgehen kann.

<p>Debian bietet zur Zeit in seiner unstable Release (und wird es
vielleicht der nächste stable Release hinzufügen) das
<file>pam_chroot</file> Modul. Eine Alternative hierzu ist es, den
Dienst, der einen Fern-Login anbietet (ssh, telnet), in einer
chroot-Umgebung laufen zu lassen.

<p>Wenn Sie einschränken wollen, <em>wann</em> ein Nutzer auf das
System zugreifen kann, müssen sie
<file>/etc/security/access.conf</file> an Ihre Bedürfnisse anpassen.

<sect2>SSH für Nutzer einschränken

<p>Debian's sshd wird ihnen nicht erlauben, die Bewegungen eines Nutzer
durch den Server einzuschränken, da er die Chroot
Funktionalität, die das kommerzielle Programm (sshd2) hat (benutzen
Sie 'ChrootGroups' oder 'ChrootUsers', siehe dazu <manref
name="sshd2_config" section="5">). Wie auch immer, es gibt einen Patch,
der ihnen erlaubt dies zu tun, den Patch erhalten Sie von <url
id="http://bugs.debian.org/139047" name="Bug Report 139047"> oder von
<url id="http://www.cag.lcs.mit.edu/~raoul/"> (und er wird wohl in der
Zukunft auf das OpenSSH Paket angewendet werden). Emanuel Lacour hat SSH
Pakete mit diesen Fähigkeiten unter <url
id="http://debian.home-dn.net/woody/ssh/">, allerdings wird empfohlen
durch die Compilierungs-Schritte zu gehen. Eine Beschreibung von den
notwendigen Schritten finden Sie unter <url
id="http://mail.incredimail.com/howto/openssh/"> (so ziemlich alles
trifft dort auch auf Debian zu, auch wenn von RedHat 7.2 die rede ist).
Nachdem Sie den Patch angewendet haben, müssen Sie die
<file>/etc/passwd</file> anpassen, indem Sie das Heimat-Verzeichnis des
Nutzers ändern (in den speziellen <tt>/./</tt> Token).

<example>
joeuser:x:1099:1099:Joe Random User:/home/joe/./:/bin/bash
</example>

<p>Dies wird <em>beides</em> einschränken, sowohl fern Zugriff
auf die Shell als auch Fernkopien   über einen ssh Kanal.

<p>Gehen Sie sicher, dass Sie alle benötigten Binaries in den
Chroot-Pfaden für den Nutzer haben. Diese Dateien sollte Root
besitzen, um Einmischungen durch den Nutzer zu verhindern (zum Beispiel
die chrooted Sandbox zu verlassen).
Ein Beispiel könnte so aussehen:

<example>
./bin:
total 660
drwxr-xr-x    2 root     root         4096 Mar 18 13:36 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
-r-xr-xr-x    1 root     root       531160 Feb  6 22:36 bash
-r-xr-xr-x    1 root     root        43916 Nov 29 13:19 ls
-r-xr-xr-x    1 root     root        16684 Nov 29 13:19 mkdir
-rwxr-xr-x    1 root     root        23960 Mar 18 13:36 more
-r-xr-xr-x    1 root     root         9916 Jul 26  2001 pwd
-r-xr-xr-x    1 root     root        24780 Nov 29 13:19 rm
lrwxrwxrwx    1 root     root            4 Mar 30 16:29 sh -> bash

./etc:
total 24
drwxr-xr-x    2 root     root         4096 Mar 15 16:13 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
-rw-r--r--    1 root     root           54 Mar 15 13:23 group
-rw-r--r--    1 root     root          428 Mar 15 15:56 hosts
-rw-r--r--    1 root     root           44 Mar 15 15:53 passwd
-rw-r--r--    1 root     root           52 Mar 15 13:23 shells

./lib:
total 1848
drwxr-xr-x    2 root     root         4096 Mar 18 13:37 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
-rwxr-xr-x    1 root     root        92511 Mar 15 12:49 ld-linux.so.2
-rwxr-xr-x    1 root     root      1170812 Mar 15 12:49 libc.so.6
-rw-r--r--    1 root     root        20900 Mar 15 13:01 libcrypt.so.1
-rw-r--r--    1 root     root         9436 Mar 15 12:49 libdl.so.2
-rw-r--r--    1 root     root       248132 Mar 15 12:48 libncurses.so.5
-rw-r--r--    1 root     root        71332 Mar 15 13:00 libnsl.so.1
-rw-r--r--    1 root     root        34144 Mar 15 16:10
libnss_files.so.2
-rw-r--r--    1 root     root        29420 Mar 15 12:57 libpam.so.0
-rw-r--r--    1 root     root       105498 Mar 15 12:51 libpthread.so.0
-rw-r--r--    1 root     root        25596 Mar 15 12:51 librt.so.1
-rw-r--r--    1 root     root         7760 Mar 15 12:59 libutil.so.1
-rw-r--r--    1 root     root        24328 Mar 15 12:57 libwrap.so.0

./usr:
total 16
drwxr-xr-x    4 root     root         4096 Mar 15 13:00 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
drwxr-xr-x    2 root     root         4096 Mar 15 15:55 bin
drwxr-xr-x    2 root     root         4096 Mar 15 15:37 lib

./usr/bin:
total 340
drwxr-xr-x    2 root     root         4096 Mar 15 15:55 .
drwxr-xr-x    4 root     root         4096 Mar 15 13:00 ..
-rwxr-xr-x    1 root     root        10332 Mar 15 15:55 env
-rwxr-xr-x    1 root     root        13052 Mar 15 13:13 id
-r-xr-xr-x    1 root     root        25432 Mar 15 12:40 scp
-rwxr-xr-x    1 root     root        43768 Mar 15 15:15 sftp
-r-sr-xr-x    1 root     root       218456 Mar 15 12:40 ssh
-rwxr-xr-x    1 root     root         9692 Mar 15 13:17 tty

./usr/lib:
total 852
drwxr-xr-x    2 root     root         4096 Mar 15 15:37 .
drwxr-xr-x    4 root     root         4096 Mar 15 13:00 ..
-rw-r--r--    1 root     root       771088 Mar 15 13:01
libcrypto.so.0.9.6
-rw-r--r--    1 root     root        54548 Mar 15 13:00 libz.so.1
-rwxr-xr-x    1 root     root        23096 Mar 15 15:37 sftp-server
</example>


<sect1>prüfen der Nutzer von Hand

<p>Wenn Sie paranoid sind, dann möchten Sie den Nutzern vielleicht
eine definierte <file>.profile</file> aufzwingen, das die Environments
so setzt, dass Sie die Überwachungsmöglichkeiten der Shell
nicht entfernen können (Kommandos werden auf <tt>$HISTFILE</tt>
ausgegeben). Die <file>.profile</file> könnte so gesetzt werden:

<example>
HISTFILE=/home/_user_/.bash_history
HISTSIZE=100000000000000000
HISTFILESIZE=10000000000000000
set -o HISTFILE
set -o HISTSIZE
set -o HISTFILESIZE
export HISTFILE HISTSIZE HISTFILESIZE
</example>

<p>Beachten sie: Das <tt>-o</tt>-Attribut erlaubt nur lesenden Zugriff
auf die Variable.

<p>Damit dies funktioniert, darf der Nutzer <file>.profile</file> oder
<file>.bash_history</file> nicht modifizieren, aber er muss ersteres
lesen und letzteres schreiben können. Sie können dies leicht
tun, indem Sie die Dateien und das Verzeichnis, indem sich diese Dateien
befinden, so dass Sie einem anderen Benutzer gehören (root), und 
der Gruppe des Nutzers auf die History-Datei Schreibzugriff
gewähren. Eine andere Möglichkeit ist es, dass Programm
<prgn>chattr</prgn> zu benutzen.
     
<p>Wenn Sie wirklich paranoid sind und jedes Kommando des Nutzers
protokollieren wollen, könnten Sie den Quellcode der Bash so 
ändern, dass sie alles, das der Nutzer eingibt in einer anderen
Datei ausgibt. Oder Sie lassen <package>ttysnoop</package> konstant jedes
neue tty überwachen und die Ausgaben in einer Datei ausgeben. Ein
anderes nützliches Programm ist <url name="Snoopy"
id="http://sourceforge.net/project/?group_id=2091">. Dies ist ein
für den Nutzer transparentes Programm, das sich als eine Bibliothek
dazwischen hängt und eine Hülle um execve() Aufrufe bildet.
Jedes ausgeführte Kommando wird im syslogd aufgezeichnet, indem die
<tt>authpriv</tt>-Möglichkeit benutzt wird (üblicherweise wird
dies unter <file>/var/log/auth.log</file> gespeichert).
<!-- FIXME: Debian package for snoopy??? 
SB 20030905: Yes, in woody.-->

<p>Beachten Sie, dass Sie hierfür nicht das <prgn>script</prgn>
Kommando benutzen können, da dies nicht als Shell funktioniert (auch
nicht, wenn Sie es zu <file>/etc/shells</file> hinzufügen).

<sect1>Komplettieren von Nutzer Überwachung

<p>Die vorherigen Beispiele sind ein einfacher Weg, um Nutzer
Überwachung zu konfigurieren, eignet sich aber nicht unbedingt
für komplexe Systeme. Sollte dies der Fall sein, schauen Sie sich
das Paket <package>acct</package>, die accounting Utilities, an. Diese
werden alle Kommandos, die ein Nutzer oder ein Prozess auf dem System
ausführt, auf die Kosten von Plattenplatz aufzeichnen.

<p>Wenn Sie diese 'Buchführung' aktivieren, werden alle
Informationen über Prozesse und Nutzer unter
<file>/var/account/</file> gehalten. Das Accounting-Paket schließt
Werkzeuge (<prgn>sa</prgn> und <prgn>ac</prgn>) zur Analyse dieser Daten
ein.

<sect1>Nutzer Profil nachprüfen

<p>Wenn Sie <em>sehen</em> wollen, was Nutzer normalerweise tun, wenn
sie sich verbinden, können Sie die <file>wtmp</file> Datenbank
benutzen, die alle Login-Informationen enthält. Diese Datei kann mit
verschiedenen Werkzeugen weiterverarbeitet werden, unter ihnen
<prgn>sac</prgn>, das ein Profil für jeden Nutzer ausgeben kann
und zeigt, in welchem Zeitfenster sie sich für gewöhnlich
auf dem System einloggen.

<p>Für den Fall, dass Sie accounting aktiviert haben, können
Sie auch die mitgelieferten Werkzeuge verwenden, um festzustellen, wann
Nutzer auf das System zugreifen und was sie ausführen.

<sect1>umasks der Nutzer einstellen

<p>Abhängig von Ihren Richtlinien möchten Sie vielleicht
ändern, wie Nutzer Informationen teilen können, was die
Standardrechte von neu erstellten Dateien sind. Dies ändern Sie,
indem Sie eine passende <tt>umask</tt> für alle Nutzer einstellen.
Sie können die UMASK-Einstellung in <file>/etc/limits.conf</file>,
<file>/etc/profile</file>, <file>/etc/csh.cshrc</file>,
<file>/etc/csh.login</file>, <file>/etc/zshrc</file> und wahrscheinlich
auch noch andere (abhängig von den Shells, die Sie auf Ihrem System
installiert haben) ändern. Von all diesen hat die zuletzt geladene 
Vorrang:
PAM's limits.conf, die Standard-System-Konfiguration für die Shell
des Nutzers, die Shell des Nutzers (sein <file>~/.profile</file>),
<file>~/.bash_profile</file>...)

<p>Debians default <tt>umask</tt> Einstellung ist <em>022</em>, d.h.,
dass Dateien (und Verzeichnisse) von Nutzer aus der Gruppe und jedem
anderen Nutzer des Systems lesbar und zugreifbar sind. Wenn dies zu
großzügig für Ihr System ist, müssen Sie die umask
Einstellung für alle Shells (und für PAM) ändern.
Vergessen Sie nicht die Dateien unter <file>/etc/skel/</file>
anzupassen, da dort die Standards für Nutzer werden, wenn sie
mit dem <prgn>adduser</prgn> Kommando erstellt werden.

<p>Beachten sie, dass ein Nutzer immer noch seine umask Einstellung
abändern kann, wenn er es möchten, um sie großzügiger
oder einschränkender zu machen.

<sect1>Nutzer Sicht/Zugriff limitieren

<P>FIXME: Content needed. Tell of consequences of changing packages
permissiones when upgrading (and admin this paranoid should chroot his
users BTW).

<p>Wenn Sie einem Nutzer Zugriff auf das System mit einer Shell
gewähren müssen, sollten Sie vorsichtig sein. Ein Nutzer kann
normalerweise, wenn er nicht in eine streng abgeschirmte Umgebung (wie
<tt>chroot</tt>) gesetzt wird, ziemlich viel Informationen von Ihrem
System sammeln, darunter:

<list>

<item>Ein paar Konfigurationsdateien unter <file>/etc</file>. Jedoch
werden Debians Standard Rechte auf sensitive Dateien (die zum Beispiel
Passwörter enthalten könnten) den Zugriff auf kritische
Informationen verhindern. Um zu sehen, auf welche Dateien nur der root
Nutzer zugreifen kann, führen Sie zum Beispiel <tt>find /etc -type f -a
-perm 600 -a -uid 0</tt> als superuser aus.

<item>Ihre installierten Pakete, entweder durch ansehen der
Paket-Datenbank, des <file>/usr/share/doc</file> Verzeichnisses oder
durch raten, indem man die Binaries und Bibliotheken durch sieht, die auf
Ihrem System installiert sind.

<item>Ein paar Protokolle unter <file>/var/log</file>. Beachten Sie, dass
auf einige Protokolle nur root und die <tt>adm</tt> Gruppe zugreifen kann
(versuchen Sie <tt>find /var/log -type f -a -perm 640</tt>), und manche
sind sogar ausschließlich für root verfügbar (Probieren Sie 
einige Protokolle unter <file>/var/log</file> aus. Sehen Sie sich auch 
<tt>find /var/log -type f -a -perm 600 -a -uid 0</tt>) an.

</list>


<p>Was kann ein Nutzer von Ihrem System sehen? Wahrscheinlich ziemlich
viele Sachen, versuchen Sie mal folgendes (und jetzt tief durch atmen):
<example>
find / -type f -a -perm +006 2>/dev/null  
find / -type d -a -perm +007 2>/dev/null  
</example>

<p>Was Sie sehen ist eine Liste von allen Dateien, die ein Nutzer
<em>einsehen</em> kann, und die Verzeichnisse, auf die er Zugriff hat.

<sect>Die Nutzung von tcpwrappers 

<p>TCP-Wrapper (Schutzumschläge für TCP) wurden entwickelt,
als es noch keine echten Paket-Filter gab, aber Zugangs-Kontrollen
notwendig waren. Ein TCP-Wrapper erlaubt Ihnen, einem Host oder einer
Domain einen Dienst anzubieten oder zu verweigern und
standardmäßig Zugriff zu erlauben oder zu verweigern. Wenn Sie mehr
Informationen haben möchten, sehen Sie sich <manref
name="hosts_access" section="5"> an.

<p>Viele der unter Debian installierten Dienste

<list>
<item>werden entweder durch den TCP-Wrapper Service (<file>tcpd</file>)
aufgerufen
<item>oder wurden mit libwrapper (Bibliothek für TCP-Wrapper)
Unterstützung kompiliert
</list>

<p>Einerseits werde manche Dienste, einschließlich telnet, ftp,
netbios, swat und finger in <file>/etc/inetd.conf</file> konfiguriert.
Sie sehen es daran, dass die Konfigurationsdatei zuerst
<prgn>/usr/sbin/tcpd</prgn> aufruft. Andererseits, selbst wenn ein
Dienst nicht über den <prgn>inetd</prgn>-Superdaemon
ausgeführt wird, kann es in jedem Fall, den TCP-Wrapper-Regeln
unterworfen werden, indem man die Unterstützung dafür
einkompiliert. Dienste, die unter Debian mit TCP-Wrappern compiliert
wurden, schließen ssh, portmap, in.talk, roc.statd, rpc.mountd, gdm, oaf
(der GNOME-Aktivierungs Daemon), nessus und viele andere ein.

<p>Um herauszufinden, welche Pakete TCP-Wrapper benutzen, versuchen sie
folgendes:

<example>
$ apt-cache showpkg libwrap0 | egrep '^[[:space:]]' | sort -u | \
        sed 's/,libwrap0$//;s/^[[:space:]]\+//'
</example>


<p>Beachten Sie bitte folgendes, wenn Sie <prgn>tcpchk</prgn> laufen
lassen: Sie können Dienste, die gegen die Wrapper-Bibliothek
kompiliert wurden, der <file>host.deny</file> oder
<file>host.allow</file> Datei hinzufügen, aber 
<prgn>tcpchk</prgn> wird Sie warnen, dass er sie nicht finden kann, da er
sie in <file>/etc/inetd.conf</file> sucht (die Manual-Seite ist an dieser
Stelle nicht sehr genau).

<p>Jetzt kommt ein kleiner Trick und vielleicht die kleinste Alarmanlage
zur Erkennung von Eindringlingen: Im allgemeinen sollten Sie eine
anständige Firewall als erste und TCP-Wrapper als zweite
Verteidigungslinie haben. Der Trick besteht nun darin ein SPAWN
<footnote>Beachten Sie hier die Schreibweise, da <em>spawn</em> nicht
funktionieren wird.</footnote> Kommando in <file>/etc/hosts.deny</file>
einzutragen, das immer dann eine Mail an root schickt, wenn der Wrapper
eines abgewiesenen Dienstes ausgelöst wurde:

<example>
ALL: ALL: SPAWN ( \
  echo -e "\n\
  TCP Wrappers\: Verbindungsaufbau abgelehnt\n\
  By\: $(uname -n)\n\
  Prozess\: %d (pid %p)\n\
  Nutzer\: %u\n\
  Host\: %c\n\
  Datum\: $(date)\n\
" | /usr/bin/mail -s "Verbindung zu %d blockiert" root) &
</example>

<p><em>Beachten Sie</em>: Das obige Beispiel kann sehr leicht zu DoS
(Denial of Service, Verbindungsaufbau abgelehnt) führen, indem man
versucht, sehr viele Verbindungen in kurzer Zeit aufzubauen. Viele E-Mails
bedeuten viel Datei-Aktivität, die lediglich durch das Senden
von ein paar Paketen erreicht wird.

<!--
# Could this example be more interesting? 
# It also relates to the next section (jfs)
#
# era: cf hosts_access(5) manual page,
# and why are you not using logger(1) here? (FIXME?)
#
#&lt;example&gt;
#ALL: ALL: SPAWN ( \
#  /usr/local/sbin/send_syslog %u %c %d )
#&lt;example&gt;

#  With send_syslog as:
##!/usr/bin/perl -w
#
#use Sys::Syslog qw(:DEFAULT setlogsock);
#
#$user=shift(@ARGV) || 'unkown';
#$host=shift(@ARGV) || 'unkown';
#$service=shift(@ARGV) || 'unkown';
#setlogsock('unix');
#openlog("alert",'', 'user');
#syslog('warning', 'Connection from %s at %s to %s blocked.', ($user, $host, $service) );
#closelog();
#
#exit 0;
-->

<sect id="log-alerts">Die Wichtigkeit von Logs und Alarmen

<p>Wie Logs (Protokolldateien) und Alarme in einem sicheren System
behandelt werden, ist eine wichtige Angelegenheit. Es ist leicht zu
verstehen, dass selbst wenn ein System angeblich perfekt konfiguriert und
zu 99% sicher ist, es immer noch 1% Rest-Risiko gibt, für die keine
Sicherheitsmaßnahmen greifen. Als erstes gilt es, Angriffe auf
dieses 1% zu erkennen und als zweites Alarm auszulösen, oder
das System ist in keinster Weise sicher.

<p>Debian GNU/Linux stellt Tools zur Verfügung, die die Analyse von
Log-Dateien übernehmen. Am beachtenswertesten sind
<package>logcheck</package> oder <package>loganalysis</package> (beide
Pakete werden ein wenig Anpassung benötigen, um unnötige Dinge
aus den Reports zu entfernen). Wenn sich das System in der Nähe
befindet, könnte es nützlich sein, das System-Log auf einer
virtuellen Konsole auszugeben. Die ist nützlich, da Sie so (auch von
weiter weg oder im vorbeigehen) sehen können, ob sich das System
richtig verhält. Debians <file>/etc/syslog.conf</file> kommt mit
einer kommentierten Standard-Konfiguration. Um diese Ausgabe
einzuschalten, unkommentieren <!-- Hoert sich schief an, aber was
besseres faellt mir nicht ein --> Sie die entsprechenden Zeilen und
starten syslog neu (<tt>/etc/init.d/syslogd restart</tt>):

<example>
daemon,mail.*;\
        news.=crit;news.=err;news.=notice;\
        *.=debug;*.=info;\
        *.=notice;*.=warn       /dev/tty8
</example>


<!-- FIXME: Talk about logcolorise? Is it in Debian? -->

<p>Es gibt da noch einiges über Log-Analyse, das hier nicht
behandelt werden kann. Eine gute Quelle für weiter Informationen ist
<url name="Counterpane's Log Analysis Resources"
id="http://www.counterpane.com/log-analysis.html">. In jedem Fall sind
selbst automatische Tools dem besten Tool nicht gewachsen: Ihrem Gehirn.

<!-- FIXME: Check information on SHARP, the 'syslog heuristic analysis
and response program'.  The paper is at
http://www.csis.gvsu.edu/sharp/. Is it free-software? packaged? -->

<sect1 id="custom-logcheck">Nutzen und anpassen von logcheck

<p>Das Programm <prgn>logcheck</prgn> ist in Debian in zwei Pakete
aufgeteilt: <package>logcheck</package> (das Haupt-Programm) und
<package>logcheck-database</package> (eine Datenbank regulärer
Ausdrücke für das Programm). Der Standard unter Debian (unter
<file>/etc/cron.d/logcheck</file>) ist, dass <prgn>logcheck</prgn>
jeweils um 14:00 Uhr und nach jedem Neustart ausgeführt wird.

<p>Dieses Tool kann sehr nützlich sein, wenn es geeignet angepasst
wurde, um den Administrator zu alarmieren, wenn etwas ungewöhnliches
auf dem System passiert. <prgn>Logcheck</prgn> kann vollständig
angepasst werden, so dass es Mails über Ereignisse aus den Logs
sendet, die Ihrer Aufmerksamkeit bedürfen. Die Standard-Installation
umfasst Profile zum ignorieren von Ereignissen und Rechtswidrigkeiten
für drei unterschiedliche Setups (Workstation, Server und paranoid).
Das Debian-Paket umfasst eine Konfigurationsdatei
<file>/etc/logcheck/logcheck.conf</file>, die vom Programm eingelesen
wird, die definiert, an welchen Nutzer die Testergebnisse geschickt
werden sollen. Es stellt außerdem einen Weg für Pakete zur
Verfügung, um neue Regeln in den Verzeichnissen zu realisieren:
<file>/etc/logcheck/hacking.d/_packagename_</file>,
<file>/etc/logcheck/violations.d/_packagename_</file>,
<file>/etc/logcheck/violations.ignore.d/_packagename_</file>,
<file>/etc/logcheck/ignore.d.paranoid/_packagename_</file>,
<file>/etc/logcheck/ignore.d.server/_packagename_</file>, und
<file>/etc/logcheck/ignore.d.workstation/_packagename_</file>.
Leider benutzen das noch nicht viele Pakete. Wenn Sie ein Regelwerk
entwickelt haben, dass für andere Nutzer nützlich sein
könnte, senden Sie bitte einen Bug-Report für das entsprechende
Paket (als ein <em>wishlist</em>-Bug). Mehr Informationen finden Sie
unter <file>/usr/share/doc/logcheck/README.Debian</file>.

<p>Der beste Weg <prgn>logcheck</prgn> zu konfigurieren ist es, es
einfach zu installieren (Sie werden gefragt werden, an welchen Nutzer die
Mail-Reports geschickt werden soll, und ob aus den Einträgen im Syslog
ein <file>/etc/logcheck/logcheck.logfiles</file> generiert werden
soll). Wenn Sie andere Logfiles hinzufügen möchten, ändern
Sie einfach <file>/etc/logcheck/logcheck.logfiles</file> indem Sie sie
hinzufügen. Die Paket-Abhängigkeiten werden dafür sorgen,
dass <package>logcheck-database</package> auch installiert wird.
Während der Installation werden Sie gefragt, welches
Sicherheits-Niveau benötigt wird:  Workstation, Server oder
paranoid. Dadurch wird <file>/etc/logcheck/ignore.d</file> (durch
einen symbolischen Link) auf die richtigen Verzeichnisse zeigen. Um dies
zu ändern, führen Sie <tt>dpkg-reconfigure -plow
logcheck-database</tt> aus. Erstellen Sie dann eine Datei
<file>/etc/ignore.d/local</file>; diese Datei enthält alle Regeln,
Meldungen auszuschließen, die nicht gemeldet werden sollen. Lassen Sie
es für den Anfang leer (ein einfaches <tt>cp /dev/null
/etc/ignore.d/local</tt> sollte reichen).

<p>Wenn Sie dies einmal geschafft haben, sollten Sie die nächsten
Tage/Wochen/Monate die verschickten Mails prüfen, ob Sie Meldungen
geschickt bekommen, die Sie nicht erhalten wollen. Fügen Sie dann
einen entsprechenden regulären Ausdruck (siehe <manref name="regex"
section="7">) zu <file>/etc/ignore.d/local</file>. Die ist ein
andauernder Tuning-Prozess. Wenn nur noch relevante Meldungen verschickt
werden, können Sie davon ausgehen, dass dieser Prozess beendet ist.
Beachten Sie, dass Logcheck Ihnen keine Mail schickt, wenn es nichts
relevantes auf Ihrem System findet, selbst wenn es läuft (so
bekommen Sie höchstens eine Mail pro Woche, wenn Sie Glück
haben).


<sect1>Konfigurieren, wohin Alarmmeldungen geschickt werden sollen

<p>Debian kommt mit einer Standard-Konfiguration für Syslog (in
/etc/syslog.conf), so dass Meldungen je nach System in die passenden
Dateien geschrieben werden.
<!-- Debian comes with a standard syslog configuration (in
/etc/syslog.conf) that logs messages to the appropriate files depending
on the system facility. -->
Das sollte Ihnen bereits bekannt sein, falls nicht, werfen Sie einen 
Blick auf die
Datei <file>syslog.conf</file> und deren Dokumentation. Wenn
Sie ein sicheres System pflegen wollen, sollten Ihnen bekannt sein, wohin
Log-Meldungen geschickt werden, so dass Sie nicht unbeachtet bleiben.

<p>Zum Beispiel ist es für viele produktiv Systeme sinnvoll,
Meldungen auch auf der Konsole auszugeben, aber bei vielen solcher
Systeme ist es sehr wichtig, auch eine neue Maschine zu nehmen, die
für die anderen als ein Loghost fungieren wird (d.h. sie
empfängt die Logs aller anderen Systeme).

<p>Sie sollten auch an Mails für Root denken, da viele
Sicherheits-Kontrollen (wie <package>snort</package>) ihre Alarme an die
Mailbox von root senden. Diese Mailbox zeigt normalerweise an den ersten
Nutzer, der auf dem System erstellt wurde (prüfen Sie dazu
<file>/etc/aliases</file>). Sorgen Sie dafür, dass roots Mails
irgendwo hin geschickt wird, wo sie auch gelesen werden (entweder lokal
oder ferngesteuert).

<p>Es gibt noch andere Accounts mit besonderer Funktion und andere Aliase auf
Ihrem System. Auf einem kleinen System ist es wohl am einfachsten,
sicherzustellen, dass alle Aliase auf den Root-Account zeigen, und dass
Mails an root in das persönliche Postfach des System-Administrator
weiter geleitet werden.

<p>FIXME: it would be interesting to tell how a Debian system can
send/receive SNMP traps related to security problems (jfs). Check:
<package>snmptraglogd</package>, <package>snmp</package> and
<package>snmpd</package>.


<sect1>Nutzen eines loghosts

<p>Ein Loghost ist ein Host der die syslog-Daten über ein Netzwerk
sammelt. Wenn eine Ihrer Maschinen geknackt wird, kann der Eindringling
seine Spuren nicht verwischen, solange er den Loghost nicht ebenfalls
geknackt hat. Demzufolge muss der Loghost also besonders sicher sein.
Aus einer Maschinen einen Loghost zu machen ist relativ einfach: Starten
Sie den syslogd einfach mit 'syslogd -r', und ein neuer Loghost ist
geboren. Um dies unter Debian permanent zu machen, editieren Sie
<file>/etc/init.d/sysklogd</file> und ändern Sie die Zeile

<example>
SYSLOGD=""
</example>
in 
<example>
SYSLOGD="-r"
</example>

Als nächstes konfigurieren Sie die anderen Maschinen, Ihre Daten an
den Loghost zu senden. Fügen Sie einen Eintrag, ähnlich dem
folgenden zu der <file>/etc/syslog.conf</file> hinzu:

<example>
facility.level            @Ihr_Loghost
</example>

Schauen Sie in die Dokumentation um zu erfahren, wodurch Sie
<em>facility</em> und <em>level</em> ersetzen können (Sie sollten
nicht wörtlich übernommen werden). Wenn Sie alles fern
mit loggen wollen, schreiben Sie einfach:

<example>
*.*                       @Ihr_Loghost
</example>

in Ihre <file>syslog.conf</file>. Sowohl lokal als auch entfernt
mit zu loggen ist die beste Lösung (ein Angreifer könnte davon
ausgehen, dass er seine Spuren verwischt hat, nachdem er die lokale
Log-Datei gelöscht hat). Sehen Sie für weitere Informationen die
Handbuch-Seiten <manref name="syslog" section="3">, <manref
name="syslogd" section="8"> und <manref name="syslog.conf" section="5">.


<sect1>Zugriffsrechte auf Log-Dateien

<p>Es ist nicht nur wichtig zu entscheiden, wie Warnungen genutzt werden,
sondern auch, wer hierauf Zugriff hat, d.h. wer Log-Dateien (falls Sie
nicht einen Log-Host verwenden) lesen oder verändern kann.
Sichereheits-Alarme, die ein Angreifer verändern oder abschalten
kann, sind im Falle eines Eindringens nicht viel wert. Außerdem sollten
Sie berücksichtigen, dass Log-Dateien einem Eindringling sehr viel
Informationen über Ihr System enthüllen kann und welche
normalen (und anormalen) Operationen er ausführen kann, wenn er
darauf Zugriff hat.

<!--  It should be explained why after installation this is not
 already done, jfs -->

<p>Ein paar Zugriffsrechte auf Log-Dateien sind nach der Installation
nicht gerade perfekt (aber das hängt natürlich von Ihrer
lokalen Sicherheits-Policy ab). Zuerst einmal müssen
<file>/var/log/lastlog</file> und <file>/var/log/faillog</file> nicht
für normalen Nutzer lesbar sein. In der lastlog-Datei können
Sie sehen, wer sich zuletzt eingeloggt hat, und in faillog eine
Zusammenfassung fehlgeschlagener Logins. Der Autor empfiehlt beides auf
660 zu chmod'en. Werfen Sie einen kurzen Blick auf Ihre Log-Dateien, und
entscheiden Sie sehr vorsichtig, welche Log-Dateien Sie les- oder
schreibbar für einen Nutzer mit einer anderen UID als 0 und einer
anderen Gruppe als 'adm' oder 'root' machen. Sie können dies sehr
leicht auf Ihrem System überprüfen:

<example>
#  find /var/log -type f -exec ls -l {} \; | cut -c 17-35 |sort -u
(zeigt zu welchen Nutzern /var/log gehört)
#  find /var/log -type f -exec ls -l {} \; | cut -c 26-34 |sort -u
(zeigt zu welchen Gruppen /var/log gehört)
# find /var/log -perm +004
(zeigt, welche Dateien von jedem Nutzer gelesen werden können)
#  find /var/log \! -group root \! -group adm -exec ls -ld {} \;
(zeigt, welche Dateien zu anderen Gruppen als root oder adm gehört)
</example>

<p>Um anzupassen, wie neue Log-Dateien erstellt werden, müssen Sie
wahrscheinlich das Programm anpassen, dass Sie erstellt. Wenn die
Log-Dateien rotiert werden, können Sie das Verhalten bei der
Erstellung und Rotation anpassen.

<!-- This is no longer true, check apache's logrotate
<p>
I want to emphasize that the apache logfile permissions are really
screwed due to the fact that the apache user owns the apache log
files. If a user gets a shell with a back door in apache, they can
easily remove the logfiles.
-->

<!--
# This is quite personal, IMHO, since this is due to the fact that 
# root priviledges are dropped on startup. I prefer an attacker to erase
# a service's logfiles than to erase all of my system's logs. Anyhow, this
# can be improved by changing user permissions after rotation
-->


<sect id="chroot">Benutzen von chroot

<p><prgn>chroot</prgn> ist eine der mächtigsten Möglichkeiten
einen Daemon, einen Nutzer oder einen anderen Dienst
einzuschränken. Stellen Sie sich einfach ein Gefängnis um Ihr
Ziel vor, aus dem Ihr Ziel nicht ausbrechen kann (Normalerweise, aber es
gibt immernoch ein paar Bedinungen, unter denen es erlaubt es, aus einem
solchen Gefängnis auszubrechen). Wenn Sie einem Nutzer nicht trauen,
können Sie ihm eine Change-Root-Umgebung erstellen. Dies kann zwar
einiges an Platten-Platz verbrauchen, da Sie alles benötigte
Ausführbare in das Gefängnis kopieren müssen, ebenso
alle Bibliotheken. Sogar wenn der Nutzer etwas boshaftes anstellt, ist
der Schadensrahmen auf das Gefängnis beschränkt.  

<p>Ein gutes Beispiel für diesen Fall ist es, wenn Sie nicht mit
<file>/etc/passwd</file> authentifizieren, sondern stattdessen LDAP oder
MySQL verwenden. So benötigt Ihr ftp-Daemon lediglich ein Binary und
vielleicht ein paar Bibliotheken. Ein ge-chroot-ete Umgebung wäre
eine exzellente Sicherheits-Umgegung; wenn ein neuer Exploit für
diesen ftp-Daemon bekannt wird kann ein Angreifer nur die Nutzer-ID
(User-ID, UID) des internen ftp-Daemon-Nutzers ausnutzen und nichts
anderes. 

<p>Natürlich kann auch die Sicherheit ander Daemonen von einem
solchen Arrangement profitieren.

<p>Seien Sie jedoch vorgewarnt, dass man auch aus einem
<prgn>chroot</prgn>-Gefängnis ausbrechen kann, wenn der Nutzer, der
es laufen lässt, der Superuser ist. Also ist es notwendig, dass Sie
den Dienst als nicht privilegierter Nutzer laufen lassen. Indem Sie die
Umgebung einschränken, schränken Sie die für alle les- /
ausführbaren Dateien, auf die das System Zugriff hat, und so
verkleinern Sie die Möglichkeit einer Ausweitung der
System-Privilegien, indem lokale Verwundbarkeiten der Systemsicherheit
ausgenutzt werden. Aber sogar in dieser Situation können Sie nicht
wirklich sicher sein, dass es für einen cleveren Angreifer keinen
Weg gibt, irgendwie aus dem Gefängnis auszubrechen. Es ist eine
zusätzliche Sicherheitsmaßnahme, nur Server-Programme zu benutzen,
die einen gewisse Reputation in Sachen Sicherheit haben. Sogar die
kleinste Lücke, wie eine offene Behandlung von Dateien, kann von
einem geschickten Angreifer genutzt werden, um in das System
einzubrechen. Schließlich wurde <prgn>chroot</prgn> nicht als
Sicherheits-Werkzeug designed, sondern als Test-Werkzeug.

<!-- FIXME: this information should be checked when woody gets released -->

<p>Eine zusätzliche Anmerkung: BIND (Berkeley Internet Name Domain)
ist standardmässig unter Debian nicht ge-chroot-et. Tatsächlich
ist dies bei keinem Daemon der Fall.
<!-- FIXME: Is this true? This might change in the woody (3.0) release. -->
<!-- jfs: this is still true for woody -->

<p>Es gibt übrigens Software (derzeit nicht unter Debian, aber in
der Zukunft sollte sie paketiert sein), die helfen kann, eine
chroot-Umgebung einzurichten. Zum Beispiel kann <prgn>makejail</prgn>
mit sehr kleinen Konfigurationsdateien chroot-Gefängnisse erstellen
und aktualisieren. Es versucht ausßerdem alle für den Daemon
benötigten Dateien zu erraten und in dem Gefängis zu
installieren. Mehr Informationen finden Sie unter <url
id="http://www.floc.net/makejail/">. <prgn>Jailer</prgn> ist ein
ähnliches Werkzeug, dass Sie unter <url
id="http://www.balabit.hu/downloads/jailer/"> erhalten.

<!-- FIXME: I have packages ready for makejail, update this when they
get accepted -->
<!-- SB20030906: They got accepted. -->

<p>Für das Erstellen von chroots (oder Gefänsnissen) ist
außerdem <package>deb.pl</package>, ein Skript das die
Abhängigkeiten ein oder mehrerer Dateien analysiert.
<sect1>Kernel configuration

<sect1 id="kernel-conf">Konfigurieren der Netzwerk-Fähigkeiten des
Kernels

<p>FIXME: Content missing

<p>Viele Fähigkeiten des Kernels können im laufenden Betrieb
verändert werden, indem man etwas in das
<file>/proc</file>-Datei-System echo-t, oder indem man sysctl benutzt.
Geben Sie <tt>sysctl -A</tt> ein, um zu sehen, was Sie konfigurieren
können und wie die Optionen hierfür sind. Nur in selten
Fällen müssen Sie hier etwas verstellen, aber Sie können
auf diese Art auch die Sicherheit erhöhen.

 
<!-- FIXME: Should the prefix on all of these be /proc/sys/? era -->

<example>
net/ipv4/icmp_echo_ignore_broadcasts = 1
</example>

Dies ist ein «Windows Emulator», weil es sich wie Windows bei Rundrufen
(Broadcast-Ping) verhält, wenn es auf 1 gesetzt wird.
<!-- Which means what exactly? Simply that it ignores broadcasts? FIXME -->
Anderenfalls macht es gar nichts.

<example>
net/ipv4/icmp_echo_ignore_all = 0
</example>

<p>Wenn Sie kein ICMP auf Ihrer Firewall blockieren wollen, schalten Sie
dies ein.
<!--
Does this mean, if you want to block ICMP but not in your firewall? FIXME
-->

<example>
net/ipv4/tcp_syncookies = 1
</example>

<p>Diese Option ist ein zweischneidiges Schwert. Auf der einen Seite
schützt es Ihr System gegen überfluten von syn-Paketen, auf der
anderen Seite verletzt es definierte Standards (RFCs). Diese Option ist
recht dumm <!-- eigentlich dumb=taub, passt aber so nicht -->, da es die
Gegenseite ebenso flutet wie Sie, so dass die Gegenseite auch
beschäfftigt ist. Wenn Sie diese Option ändern wollen,
können Sie es auch in <file>/etc/network/options</file> ändern,
indem Sie <tt>syncookies=yes</tt> setzten.

<example>
/proc/sys/net/ipv4/conf/all/log_martians = 1
</example>

<p>Packete mit unmöglichen Adressen (erzeugt durch falsche Routen)
in Ihrem Netzwerk werden protokolliert.

<p>Hier ist ein Beispiel wie man dies und andere nützliche Sachen
setzen kann. Sie sollten diese Informationen zu einem Skript
<file>/etc/network/interface-secure</file> (der Name kommt aus einem
Beispiel) hinzufügen , und es durch
<file>/etc/network/interfaces</file> wie nachfolgend gezeigt aufrufen
lassen:

<example>
auto eth0
iface eth0 inet static
        address xxx.xxx.xxx.xxx
        netmask 255.255.255.xxx
        broadcast xxx.xxx.xxx.xxx
        gateway xxx.xxx.xxx.xxx
        pre-up /etc/network/interface-secure

</example>

<example>
# Skript-Name: /etc/network/interface-secure
# Modifiziert das normale Verhalten, um uns gegen manche TCP/IP Attacken
# und Manipulationen zu schützen
#
# beigetragen von Dariusz Puchalak  
#
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts 
                                           # Rundruf-Antwort-Schutz
					   # einscahlten
echo 0 > /proc/sys/net/ipv4/ip_forward     # ip-Weiterleutung abschalten
echo 1 > /proc/sys/net/ipv4/tcp_syncookies # TCP-Syn-Cookie Schutz einschalten
echo 1 >/proc/sys/net/ipv4/conf/all/log_martians 
                                           # Packete mit unmöglichen
					   # Adressen logen, seien Sie
					   # hiermit auf ausgelasteten
					   # Webservern vorsichtig
echo 1 > /proc/sys/net/ipv4/ip_always_defrag 
                                           # Defragmentierungs-Schutz
					   # immer einschalten
echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses 
                                           # Schutz vor schlechten
					   # Fehlermeldungen einschalten

# Jetzt kommt Schutz vor ip-Spoofing
for f in /proc/sys/net/ipv4/conf/*/rp_filter; do
        echo 1 > $f
done

# und schließlich noch ein paar andere Sachen:
# Akzeptieren von umgeleiteten ICMP abschalten
for f in /proc/sys/net/ipv4/conf/*/accept_redirects; do
        echo 0 > $f
done

for f in /proc/sys/net/ipv4/conf/*/send_redirects; do
      echo 0 > $f
done

# Abschalten von Source Routed Packets
for f in /proc/sys/net/ipv4/conf/*/accept_source_route; do
        echo 0 > $f
done

# Logen von gespooften Paketen, Source Routed Paketen und Redirect
# Paketen
for f in /proc/sys/net/ipv4/conf/*/log_martians; do
        echo 1 > $f
done
</example>

<sect1 id="kernel-fw">Konfigurieren der Firewall

<p>Um die Möglichkeiten einer Firewall zu haben, um entweder das
lokale System oder andere <em>dahinter</em> zu beschützen, muss der
Kernel mit Firewall-Unterstützung kompiliert worden sein. Der
Debian 2.2 Standard-Kernel (also der Kernel-Version 2.2) stellt die
Paket-Filter-Firewall <prgn>ipchains</prgn> zur Verfügung, der
Debian 3.0 Standard-Kernel (Version 2.4) stellt die <em>stateful</em>
Paket-Filter <prgn>iptables</prgn> (netfilter) Firewall zur
Verfügung. Ältere Debian Distributionen würden einen
passenden Kernel-Patch (Debian 2.1 nutzte Kernel 2.0.34) benötigen.

<p>In jedem Fall ist es recht einfach, einen anderen als den von Debian
installierten Kernel zu benutzen. Sie finden vor-kompilierte Kernel als
Pakete, die Sie leicht auf Ihrem Debian System installieren können.
Sie können auch die Kernel-Quellen downloaden, indem Sie das Paket
<package>kernel-source-X</package> installieren, und Ihren eigens
angepassten Kernel kompilieren, indem Sie <package>make-kpkg</package>
benutzen.

<p>Auf das  Aufsetzen einer Firewall unter Debian wird unter <ref
id="firewall-setup"> ausführlich eingegangen.

<sect id="kernel-patch">Den Kernel patchen
<p>FIXME: More content

<p>Debian GNU/Linux stell verschiedene Patches für den Linux-Kernel,
die die Sicherheit erhöhen, zur Verfügung:

<list>

<item>Linux Eindringling-Erkennung (Linux Intrusion Detection, im Paket
  <package>lids-2.2.19</package>)

<item>Linux Capabilities (im Paket <package>lcap</package>)

<item>Linux Trustees (im Paket <package>trustees</package>)

<item>NSA Enhanced Linux (im Paket <package>selinux</package>, auch
verfügbar von <url id="http://www.coker.com.au/selinux/" name="der
Seite des Paket-Betreuers">)

<item><url name="kernel-patch-2.2.18-openwall"
id="http://packages.debian.org/kernel-patch-2.2.18-openwall">.

<item><package>kernel-patch-2.2.19-harden</package>

<item>Kernel-Unterstützung von IPSEC (im Paket <package>kernel-patch-freeswan</package>)

<item><package>kernel-patch-int</package>

</list>

<p>Wie auch immer, einige Patches werden von Debian noch nicht zur
Verfügung gestellt. Wenn Sie denken, dass manche von ihnen
hinzugefügt werden sollten, fragen Sie auf <url name="Work Needing
and Prospective Packages" id="http://wnpp.debian.org"> nach ihnen. Ein
paar von ihnen sind:


<list>

<item><url id="http://pageexec.virtualave.net/" name="PaX patch">

<item>
<url name="HAP patch" id="http://www.theaimsgroup.com/~hlein/hap-linux/">

<item>
<url name="Stealth patch" id="http://www.energymech.net/madcamel/fm/">

</list>


<sect>Schutz vor Speicher-Überläufen

<p><em>Speicher-Überlauf</em> werde die Attacken über Software
genannt, die unzureichende Überprüfung von Eingabe-Grenzen (ein
häufiger Programmierfehler) ausnutzen, um durch Programm-Eingaben
Befehle auf der Maschine auszuführen. Diese Attacken über
Server, die auf Verbindungen warten, oder über lokal installierte
Software, die einem Nutzer größere Privilegien gewährt (setuid
oder setgid) kann zu einem kompromittierten System führen.

<p>Es gibt hauptsächlich vier Methoden, um sich gegen
Speicher-Überläufe zu schützen:

<list>

<item>patchen des Kernels, um Ausführen des Stapel-Speichers zu
verhindern

<!-- FIXME: add a link to libsafe to the main place -->

<item>Nutzung einer Bibliothek wie libsafe, um verwundbare Funktionen
zu überschreiben und ordentliche Prüfungen einzuführen
(Informationen wie man libsafe installiert finden Sie <url
id="http://www.Linux-Sec.net/harden/libsafe.uhow2.txt" name="hier">).

<item>Neucompilieren des Quellcodes, um vernünftige Prüfungen
einzuführen, um Überläufe zu verhindern, in dem man zum
Beispiel stackguard benutzt.

<item>Nutzen von Werkzeugen um Stellen im Quellcode zu finden, die derart
verwundbar sind, und reparieren derselben.

</list>

<p>Debian GNU/Linux liefert bis einschließlich der Release 3.0 lediglich
Software, um die erste und die letzte dieser Methoden zu implementieren
(Kernel-Patch und Werkzeuge um mögliche Speicher-Überläufe
zu finden). Zur Nutzung dieser Werkzeuge zum Aufspühren von
Speicher-Überläufen benötigen Sie in jedem Fall
Programmier-Erfahrung, um den Quellcode zu reparieren (und neu zu
compilieren). Debian stell beispielsweise <package>bfbtester</package>
(einen Überlauf-Tester, der Programme per brute-force (durch Testen
aller Möglichkeiten) auf Kommando-Zeile und Umgebungs-Variablen
durchtestet) und <package>njamd</package> zur Verfügung.

<p>Was Kernel-Patches (beschrieben im Abschnitt <ref
id="kernel-patch">) betrifft, so stellt der Openwall-Patch Schutz gegen
Speicher-Überläufe in 2.2er Linux-Kerneln zur Verfügung,
während Sie für 2.4er Kernel den Grsecureity-Patch (im Paket <package>
kernel-patch-2.4-grsecurity</package> enthält neben vielen anderen
Sachen (ACLs, Zufälligkeiten im Netzwerk, um es zu erschweren, das
Betriebssystem zu erraten) auch den Openwall-Patch, siehe <url
id="http://www.grsecurity.net/features.htm" name="features">) oder die
Linux-Sicherheits-Module (in den Paketen
<package>kernel-patch-2.4-lsm</package> und
<package>kernel-patch-2.5-lsm</package>) benutzen müssen.

<p>Seien Sie in jedem Fall gewarnt, dass selbst diese Problem-Umgehungen
nicht vor Speicher-Überläufen schützen können, da
es wiederum Möglichkeiten gibt diese zu umgehen, wie es in <url
name="Ausgabe 58"
id="http://packetstorm.linuxsecurity.com/mag/phrack/phrack58.tar.gz"> des
phrack-Magazins beschrieben wurde.


<sect>sichere Datei-Übertragungen

<p>Während der normalen System-Administration müssen Sie immer
mal wieder Dateien auf Ihr System spielen oder von diesem holen. Auf
sichere Art und Weise Dateien von einem Host zu einem anderen zu kopieren, wird
durch die Benutzung des Paketes <package>sshd</package> erreicht. Eine
andere Möglichkeit ist die Nutzung von <package>ftpd-ssl</package>,
einem ftp-Server der <em>Secure Socket Layer</em> benutzt, um
Transmissionen zu verschlüsseln.

<p>Jede dieser Methoden benötigt natürlich einen speziellen
Client. Debian stellt Ihnen solche zur Verfügung, zum Beispiel
enthält das Paket <package>ssh</package> das Programm
<prgn>scp</prgn>. Es arbeitet wie <prgn>rcp</prgn> aber komplett
verschlüsselt, so dass die <em>bösen Jungs</em> noch nicht
einmal herausbekommen können, WAS Sie kopieren. Wie es den Server
gibt, so gibt es natürlich auch ein <package>ftp-ssl</package>
Client-Paket. Sie können Clients für diese Software sogar
für andere (nicht-UNIXoide) Betriebssysteme finden.
<prgn>putty</prgn> und <prgn>winscp</prgn> stellen eine
secure-copy-Implementierung für jede Version von
Microsoft-Betriebssystemen zur Verfügung.

<sect>Dateisystem Einschränken und konrollieren

<sect1>Benutzung von Quotas

<p>Es ist wichtig, eine gute Quota-Regelung zu haben, da es die Nutzer
daran hindert, die Festplatten zu füllen.

<p>Sie können zwei Arten von Quota-Systemen benutzen: Nutzer-Quota
und Gruppen-Quota. Wie Sie sicher denken können, limitiert
User-Quota den Plattenplatz, den ein Nutzer belegen kann, und
Gruppen-Quota macht dasselbe für ganze Gruppen. Beachten Sie dies,
wenn Sie die Größen der Quotas festlegen.

<p>Es ein paar wichtige Punkte, über die Sie nachdenken sollten,
wenn Sie ein Quota-System aufsetzen:

<list>
<item>Halten Sie die Quotas klein genug, so dass die Nutzer Ihre
Festplatte nicht aufzehren können.

<item>Halten Sie die Quotas groß genug, so dass Nutzer sich nicht
beschweren oder dass Ihr Mail-Quota Sie daran hindert nach eine Weile
Mails anzunehmen.

<item>Nutzen Sie Quotas auf allen Bereichen, die Nutzer beschreiben
können, auf <file>/home</file> ebenso wie auf <file>/tmp</file>.

</list>

<p>Auf jeder Partition/jedem Verzeichnis, auf dass Nutzer
Schreibzugriff haben, sollten quotiert sein. Finden Sie diese Partitionen
und Verzeichnisse und schätzen Sie eine sinnvolle Quota-Größe,
die Nutzbarkeit und Sicherheit kombiniert.

<p>So, nun wollen Sie Quotas benutzen. Zuerst müssen Sie
prüfen, ob Ihr Kernel Quota unterstützt. Wenn nicht müssen
Sie ihn neu compilieren. Prüfen Sie anschließen, ob das Paket
<package>quota</package> installiert ist. Wenn nicht, installieren Sie
es.

<!-- FIXME: how to check for quota support? What to tweak when
recompiling? -->

<p>Um Quota für die entsprechenden Dateisysteme einzuschalten
müssen Sie nur die Einstellung <tt>defaults</tt> in Ihrer Datei
<file>/etc/fstab</file> zu <tt>defaults,usrquota</tt> ändern. Wenn
Sie Gruppen-Quotas benötigen, ersetzen Sie <tt>usrquota</tt> durch
<tt>grpquota</tt>. Sie können auch beides verwenden. Erstellen Sie
dann leere Dateien <file>quota.user</file> und <file>quota.group</file> in
den Hauptverzeichnissen der Dateisysteme, auf denen Sie quotas
einführen möchten (d.h. <tt>touch /home/quota.user
/home/quota.group</tt> für das Dateisystem <file>/home</file>).

<p>Starten Sie quota neu, indem Sie ein <tt>/etc/init.d/quota
stop;/etc/init.d/quota start</tt> ausführen. Nun sollte quota
laufen, und die Größen können festgelegt werden.

<p>Bearbeiten der Quotas eines bestimmten Nutzer (sagen wir mal
"ref") wir mit <tt>edquota -u ref</tt> gemacht. Gruppen-Quotas
können mit <tt>edquota -g &lt;group&gt;</tt> geändert werden.
Setzen Sie dann die weiche und die harte Grenze und/oder inode-Quotas,
wenn Sie es benötigen.

<p>Mehr Informationen über Quotas finden Sie in der Manual-Seite von
quota, und dem quota Mini-Howto
(<file>/usr/share/doc/HOWTO/en-html/mini/Quota.html</file>).
<!-- TODO: Link zur deutschen Version -->

<p>Sie könnten auch <package>lshell</package> mögen, oder auch
nicht, da es den FHS verletzt. Beachten Sie außerdem, dass pam_limits.so
die gleiche Funktionalität zur Verfügung stellen kann und das
<package>lshell</package> Paket zur Zeit <url
id="http://bugs.debian.org/93894" name="verwaist"> ist.
<!-- Duplicated section "Logfile permissions" removed (era) -->
<!-- Duplicated section "Setting up setuid check" removed (era) -->

<sect1>chattr/lsattr

<p>Diesen beiden Befehle sind sehr nützlich, aber Sie arbeiten nur
auf ext2 Dateisystemen. Mit 'lsattr' können Sie die Attributen einer
Datei anzeigen lassen und mit 'chattr' können Sie Sie ändern.
Beachten Sie, dass Attribute nicht dasselbe sind, wie Zugriffsrechte. Es
gibt viele Attribute, aber nur die wichtigsten, die die Sicherheit
erhöhen, werden hier erwähnt. Es gibt zwei Kennzeichnungen
(flags), die nur der Superuser setzen kann.

<p>Zunächst gibt es das 'a' Flag. Wenn dieses bei einer Datei
gesetzt ist, dann kann an diese Datei nur angehängt werden. Dieses
Attribut ist für einige Dateien in <file>/var/log/</file>
nützlich, beachten Sie aber, dass durch Log-Rotations-Skripte
Dateien manchmal verschoben werden.

<p>Das zweite Flag ist das 'i'-Flag, kurz für immutable also
unveränderlich. Wenn Sie eine Datei so behandeln, kann Sie weder
modifiziert, noch gelöscht, noch umbenannt werden,  oder verlinkt
werden. Wenn Sie nicht möchten, dass Nutzer einen Blick auf Ihre
Konfigurationsdateien werfen können, setzen Sie dieses Flag, und
entfernen Sie die Lesbarkeit. Zusätzlich bietet es Ihnen etwas mehr
Sicherheit gegen Eindringlinge, da ein Cracker dadurch verwirrt werden
könnte, wenn er eine Datei nicht verschieben kann. Dennoch sollten
Sie nicht davon ausgehen, dass ein Cracker von Blindheit geschlagen ist,
immerhin ist er in Ihr System eingedrungen.

<p>Zusätzlich können Sie die Programme <prgn>chattr</prgn> und
<prgn>lsattr</prgn> von Ihrem System entfernen, so dass ein Eindringling
mit root-Zugang diese Attribute nicht verändern (oder auflisten)
kann. Da Sie Teil von <package>e2fsprogs</package> sind und dieses die
Priorität <em>required</em> hat, können Sie das Paket nicht
einfach entfernen. Sie können jedoch diese beiden Applikationen (und
wahrscheinlich noch andere) einfach löschen. Kopieren Sie Sie vorher
auf einen auswechselbaren Datenträger (Diskette?) zusammen mit Ihrem
md5-Summen.

<p>Ein Eindringling auf Ihrem System müsste so erst eigene Kopien
dieser Programme herunterladen (wahrscheinlich sogar selbst kompilieren),
so dass Sie etwas mehr Zeit bekommen, den Angriff zu erkennen und die
Kompromittierung rückgängig zu machen, bevor das gesamte
System überrannt wird.

<p>FIXME: This is a bug that could be reported, are any of the binaries
provided by the program useful in production systems? If not, and
since the libraries are needed by many packages a new package
<package>e2fsprogs-utils</package> could be included with less than
<em>Required</em> priority.

<p>Vergessen Sie nicht: <prgn>chattr</prgn> und <prgn>lsattr</prgn> sind
nur für das Dateisystem ext verfügbar.

<sect1 id="check-integ">Prüfen der Integrität des Dateisystems

<p>Sind Sie sicher, dass <file>/bin/login</file> auf Ihrer Festplatte
immer noch dasselbe Programm ist, dass Sie vor ein paar Monaten
installiert haben? Was wenn es sich um eine gehackte Version handelt, die
eingegebene Passwörter in einer versteckten Datei ablegt oder sie
als Klartext im ganzen Internet herummailt?

<p>Die einzige Methode einen gewissen Schutz dafür zu haben ist es,
die Dateien jede(n) Stunde/Tag/Monat (ich ziehe täglich vor) zu
prüfen, indem man deren aktuelle und alte md5-Summe vergleicht. Zwei
unterschiedliche Dateien können keine gleichen md5-Summen haben (Die
md5-Summe umfasst 128 Bits, so ist die Wahrscheinlichkeit, dass zwei
unterschiedliche Dateien eine gleiche md5-Summe haben etwa 1 zu 3,4e3803).
So sind Sie sicher, solange niemand den Algorithmus gehackt hat, der die
md5-Summen auf Ihrer Maschine erstellt. Dies ist, nun ja, extrem schwer
und sehr unwahrscheinlich. Sie sollten diese Überprüfung Ihrer
Programme als sehr wichtig ansehen. Weit verbreitete Tools hierfür
sind <package>sXid</package>, <package>AIDE</package> (Advanced Intrusion
Detection Environment, fortgeschrittene Eindringlings Erkennungs
Umgebung), <package>TripWire</package> (non-free; die neue Version wird
GPL lizenziert), <package>integrit</package> und
<package>samhain</package>.

<p>Das installieren von <prgn>debsums</prgn> wird Ihnen helfen, die
Integrität des Dateisystems zu überprüfen, indem Sie die
md5-Summen jeder Datei gegen die md5-Summe aus dem Debian-Archiv-Paket
vergleichen. Seien Sie aber gewarnt, dass diese Dateien sehr leicht
geändert werden können.

<p>Weiterhin können Sie <package>locate</package> durch
<package>slocate</package> ersetzen. slocate ist eine um Sicherheit
erweiterte Version von GNU locate. Wenn Sie slocate benutzen, sieht ein
Benutzer nur Dateien, auf die er auch Zugriff hat, während Sie alle
Dateien und Verzeichnisse des gesamten Systems ausschließen können.

<p>FIXME: put references to the snapshot taken after installation.
<p>FIXME: Add a note regarding packages not providing debsums for all
apps installed (not mandatory).

<sect1>Aufsetzen von setuid-Check

<p>Debian liefert einen täglich ausgeführten Cron-Job
<file>/etc/cron.daily/standard</file>. Dieser Cron-Job führt das
Skript <prgn>/usr/sbin/checksecurity</prgn>, das Informationen über
Änderungen sichert.

<!-- FIXME: What is the defaul for this in cron package? jfs -->

<p>Damit dieser Check ausgeführt wird, müssen Sie in
<file>/etc/checksecurity.conf</file>
<tt>CHECKSECURITY_DISABLE="FALSE"</tt> setzen. Dies ist bereits der
Standardwert, so dass diese Option bereits aktiviert sein sollte, solange
Sie nichts geändert haben.

<p>Das Standard-Verhalten sendet diese Informationen nicht an den
Superuser. Stattdessen erstellt es eine tägliche Kopie dieser
Änderungen unter <file>/var/log/setuid.changes</file>. Sie sollten
CHECKSECURITY_EMAIL (in <file>/etc/checksecurity.conf</file>) auf 'root'
setzen, damit diese Informationen an ihn gemailt werden. Sehen Sie sich auch
<manref name="checksecurity" section="8"> für weitere
Konfigurations-Informationen an.


<sect id="snapshot">Einen Schnappschuss des Systems erstellen

<p>Bevor Sie das System in eine produktive Umgebung stellen, können
Sie einen Schnappschuss des gesamten Systems machen. Diesen
Schnappschuss können Sie im Falle einer Kompromittierung (siehe <ref
id="after-compromise">) benutzen. Sie sollten so einen Schnappschuss
immer dann erneuern, wenn Sie das System aktualisieren, insbesondere wenn Sie
auf eine neue Debian Release upgraden.

<p>Hierfür können Sie beschreibbare, austauschbare
Datenträger benutzen, die Sie schreibschützen können. Dies
kann eine Diskette sein (die nach der Benutzung schreibgeschützt
wird) oder eine CD in einem CD-ROM Laufwerk (Sie können auch wieder
beschreibbare CD-ROMs benutzen, so können Sie sogar alte
Sicherheitskopien Ihrer md5-Summen behalten).

<p>Das folgende Skript erstellt einen solchen Schnappschuss:

<example>
#!/bin/bash
/bin/mount /dev/fd0 /mnt/floppy
/bin/cp /usr/bin/md5sum /mnt/floppy
echo "Erstelle md5 Datenbank"
>/mnt/floppy/md5checksums.txt
for dir in /bin/ /sbin/ /usr/bin/ /usr/sbin/ /lib/ /usr/lib/
do
   find $dir -type f | xargs /usr/bin/md5sum >>/mnt/floppy/md5checksums-lib.txt
done
/bin/umout /dev/fd0
echo "md5 Datenbank (nach der Installation) erstellt"
</example>

<p>Beachten Sie, dass das Programm md5sum auch auf der Diskette gesichert
wird, so dass Sie es später benutzen können, um die anderen
Programme Ihres Systems zu prüfen (gesetz dem Fall das md5sum einen
Trojaner enthält).

<p>Dieser Schnappschuss enthält nicht die Dateien unterhalb von
<file>/var/lib/dpkg/info</file>, wo md5-Summen installierter Pakete
enthalten sind (die Dateien enden mit <file>.md5sums</file>). Sie
können diese Informationen zusätzlich kopieren, aber Sie
sollten folgendes beachten:

<list>
<item>die md5sums der Debian Pakete enthalten alle md5-Summen der
Dateien, die ein Paket enthält, so dass die Datenbank viel
grösser wird (5 MB statt 600 KB auf einem Debian GNU/Linux System
mit graphischen Subsystem und etwa 2.5 GB Software installiert).

<item>nicht alle Debian Pakete stellen md5-Summen der installierten
Dateien zur Verfügung, da es (derzeit) nicht der Policy nicht
verlangt wird.

</list>

<p>Sobald der Schnappschuss erstellt wurde, sollten Sie sicherstellen,
dass das entsprechende Medium schreibgeschützt ist. Sie können
dann eine Sicherheitskopie erstellen oder es jede Nacht benutzen, um die
md5-Summen Ihres Systems gegen Ihren Schnappschuss vergleichen.

<sect>Andere Empfehlungen

<sect1>Benutzen Sie keine Software, die von svgalib abhängt

<p>SVGAlib ist ganz nett für Konsolen-Liebhaber wie mich, aber in
der Vergangenheit wurde mehrfach gezeigt, dass es ziemlich unsicher ist.
Exploits durch <prgn>zgv</prgn> wurden veröffentlicht, und es war
einfach root zu werden. Versuchen Sie die Nutzung von SVGAlib Programmen
wann immer nur möglich zu verhindern.

<!-- FIXME: move this to policy section if there ever is one? -->

<chapt id="sec-services">Absichern von Diensten die auf Ihrem System
laufen

<p>Dienste können auf zwei Arten abgesichert werden:

<list>

<item>sie so einstellen, dass auf sie nur von Zugangspunkten (Interfaces)
zugegriffen werden kann, von denen es nötig ist.

<item>sie so konfigurieren, dass sie nur von legitimierten Nutzer auf
autorisierte Art und Weise benutzt werden können.

</list>

<p>Einschränken der Dienste, so dass auf sie nur von bestimmten
Orten zugegriffen werden kann, kann durch Zugriffs-Beschränkungen
auf Kernel-Ebene (durch eine Firewall) passieren. Konfigurieren Sie sie,
so dass sie nur auf ein bestimmtes Interface horchen (einige Dienste
bieten diese Fähigkeiten vielleicht nicht), oder durch eine andere
Methode. Zum Beispiel kann der Linux vserver Patch (für 2.4.16) dazu
benutzt werden, Prozesse auf ein bestimmtes Interface zu binden.

<p>Was die Dienste angeht, die von <prgn>inetd</prgn> aufgerufen werden
(telnet, ftp, finger, pop3...), so ist es wertlos, dass inetd nicht
so konfiguriert werden kann, dass er nur auf ein bestimmtes Interface
reagiert. Wie auch immer, sein Ersatz, der <prgn>xinetd</prgn>
Meta-Daemon kennt ein <tt>bind</tt> für diesen Zweck. Lesen Sie dazu
bitte <manref name="xinetd.conf" section="5">.

<example>
service nntp
{
        socket_type     = stream
        protocol        = tcp
        wait            = no
        user            = news
        group           = news
        server          = /usr/bin/env
        server_args     = POSTING_OK=1 PATH=/usr/sbin/:/usr/bin:/sbin/:/bin
+/usr/sbin/snntpd logger -p news.info
        bind            = 127.0.0.1
} 
</example>

<p>Die folgenden Abschnitte gehen detaillierter darauf ein, wie bestimmte
Dienste abhängig von der beabsichtigten Benutzung passend
konfiguriert werden.


<sect>Absichern der Secure-Shell (ssh)
<p>Wenn Sie immernoch telnet statt ssh benutzen, sollten Sie dieses
Handbuch kurz beiseite legen, und dies ändern.  Ssh sollte anstelle
von telnet für alle Fern-Logins benutzt werden. In einer Zeit, in
der es leicht ist, Internet-Verkehr mit zu schnüffeln und an
Klartext-Passwörter heranzukommen, sollten Sie lediglich Protokolle
verwenden, die Kryptographie benutzen. Also führen Sie sofort ein
<tt>apt-get install ssh</tt> auf Ihrem System aus.

<p>Ermuntern Sie alle Nutzer Ihres Systems, ssh anstelle von telnet zu
benutzen, oder noch bessern: Deinstallieren Sie telnet/telnetd.
Zusätzlich sollten Sie es vermeiden, sich mit ssh als root
einzuloggen und lieber andere Methoden benutzen, um root zu werden. Wie
zum Beispiel <prgn>su</prgn> oder <prgn>sudo</prgn>. Schließlich sollten
Sie noch die Datei <file>/etc/ssh/sshd_config</file> für mehr
Sicherheit modifizieren:

<list>
<item><tt>ListenAddress 192.168.0.1</tt>
<p>Lassen Sie ssh nur auf ein bestimmtes Interface hören, falls Sie
mehrere Netzwerkkarten haben (und ssh nicht auf allen verfügbar sein
soll) oder Sie in Zukunft eine neue Netzwerkkarte einbauen werden (und
keine ssh-Verbindungen auf Ihr erlauben wollen).

<item><tt>PermitRootLogin No</tt>
<p>Versuchen Sie so wenige Logins als Root wie möglich zu erlauben.
Wenn nun jemand Root werden will, benötigt er zwei Logins. So kann das
Root-Passwort nicht so leicht ausgetestet werden.

<item><tt>Listen 666</tt>
<p>Verändern Sie den Listen-Port, so dass ein Eindringling nicht
wirklich sicher sein kann, ob ein sshd-Daemon läuft (aber beachten
Sie, dass dies lediglich "Sicherheit durch Verschleierung" ist).

<item><tt>PermitEmptyPasswords no</tt>
<p>Nicht gesetzte Passwörter verspotten jegliche System-Sicherheit.

<item><tt>AllowUsers alex ref</tt>
<p>Erlauben Sie nur bestimmten Usern sich via ssh auf der Maschine
einzuloggen.

<item><tt>AllowGroups wheel admin</tt>
<p>Erlauben Sie nur bestimmten Gruppenmitgliedern sich via ssh auf der
Maschine einzuloggen. AllowGroups und AllowUsers haben entsprechende
Direktiven um den Zugang zu der Maschine zu verwehren. Es wird nicht
überraschen, dass es sich hierbei um "DenyUsers" und "DenyGroups"
handelt.

<item><tt>PasswordAuthentication yes</tt>
<p>Es ist Ihre Wahl, was Sie hier eintragen. Es ist sicherer Zugriff nur
Nutzern zu erlauben, die ssh-Schlüssel in der ~/.ssh/authorized_keys
haben. Wenn Sie dies wollen, setzen Sie es auf "no".

<item>Schalten Sie jedwede Art der Authentifizierung ab, die Sie nicht
wirklich benötigen, zum Beispiel <tt>RhostsRSAAuthentication</tt>,
<tt>HostbasedAuthenticatio</tt>, <tt>KerberosAuthentication</tt> oder
<tt>RhostsAuthentication</tt>. Sie sollten sie abschalten, auch wenn sie
es standardmässig bereits sind (Siehe dazu die Handbuch-Seite
<manref name="sshd_config" section="5">).

</list>

<p>Abschließend beachten Sie bitte, dass diese Direktiven von einer
OpenSSH Konfigurationsdatei sind. Derzeit gibt es drei weitverbreitete
ssh-Daemonen: ssh1, ssh2 und OpenSSH von den OpenBSD Leuten. Ssh1 war der
erste verfügbare ssh-Daemon und er ist noch der weit verbreitetste
(Gerüchten zufolge gibt es sogar eine Windows-Version). Ssh2 hat
gegenüber ssh1 Vorteile, abgesehen davon, dass er unter einer
unfreien Lizens veröffentlicht wurde. OpenSSH ist ein wirklich
freier ssh-Daemon, der sowohl ssh1 als auch ssh2 unterstützt.
OpenSSH ist die Version, die installiert wird, wenn Sie auf Debian das
Paket 'ssh' auswählen.

<p>Mehr Informationen, wie Sie SSH mit Unterstützung für PAM
aufsetzen, finden Sie hier: <url
id="http://lists.debian.org/debian-security/2001/debian-security-200111/msg00395.html"
name="security mailing list archives">.

<sect>Absichern von Squid

<p>Squid ist eine der verbreitesten Proxy/Cache Server, und es gibt ein
paar Sicherheitsaspekte, die Sie beachten sollten. Squid's standard
Konfiguration lehnt alle Abfragen von Nutzern ab. Sie sollten Squid so
konfigurieren, dass er Zugriffe von vertrauenswürdigen Nutzern,
Computern oder Netzwerken erlaubt, indem Sie eine Zugriffs-Kontroll-Liste
(ACL, Acces Control List) in <file>/etc/squid.conf</file> definieren. Mehr
Informationen, wie Sie ACLs definieren, finden Sie in der <url
name="Squid User's Guide"
id="http://squid-docs.sourceforge.net/latest/html/book1.htm">.
<!-- Todo: Deutsche Squid Guide raussuchen -->

<p>Ebenso kann bei ungeeigneter Konfiguration vorkommen, dass jemand eine
Mail über Squid weiterleitet, da die Protokolle HTTP und SMTP
ein ähnliches Design haben. Squid's Standard Konfiguration
verweigert Zugriffe auf Port 25. Wenn Sie Verbindungen an Port 25
erlauben wollen, fügen Sie ihn einfach in der Safe_ports-Liste
hinzu. Aber dies ist <em>NICHT</em> empfohlen.

<p>Passendes Aufsetzen und Konfigurieren  des Proxy/Cache-Servers ist nur
ein Teil der Absicherung Ihrer Seite. Eine andere notwendige Aufgabe ist
es, Squid's Log-Dateien zu analysieren, um sicher zu gehen, dass alles so
arbeitet, wie es sollte. Es gibt ein paar Pakete in Debian GNU/Linux, die
einem Administrator hierbei helfen können.
Die folgenden Pakete sind in Woody (Debian 3.0) verfügbar:

<list>
<item><package>calamaris</package> - Log-Datei-Analysator für Squid oder Oops Proxy-Log-Dateien.
<item><package>modlogan</package>  - Ein modularer Log-Datei-Analysator.
<item><package>sarg</package> - Squid Analysis Report Generator.
</list>

<p>FIXME: Add more information about security on Squid Accelerator Mode

<sect>Absichern von FTP

<p>Wenn Sie wirklich FTP benutzen müssen (ohne ihn mit sslwrap zu
umhüllen oder innerhalb eines SSL- oder SSH-Tunnels), sollten Sie
ftp in das Home-Verzeichnis des FTP-Nutzers chrooten, so dass ein Nutzer
nichts anderes sehen kann, als sein eigenes Verzeichnis. Andernfalls können
Sie Ihr Dateisystem durchlaufen, als hätten Sie Shell-Zugriff. Sie
können die folgende Zeile in Ihre <file>proftpd.conf</file> im
globalen Abschnitt hinzufügen, um die chroot-Fähigkeiten zu
nutzen:

<example>
DefaultRoot ~
</example>

<p>Starten Sie proftpd neu, indem Sie <tt>/etc/init.d/proftpd
restart</tt> eingeben, und prüfen Sie, ob Sie noch aus Ihrem
Home-Verzeichnis heraus kommen können.

<p>Um Proftp-DoS Attacken durch ../../../ zu verhindern, fügen Sie
die folgende Zeile Ihrer <file>/etc/proftpd.conf</file> hinzu:

<tt>DenyFilter \*.*/</tt>

<p>Vergessen Sie nicht, dass FTP Logind und Authentifizierung Passwort
als Klartext sendet (dies ist kein Problem, wenn Sie einen anonymen,
öffentlichen Dienst anbieten) und es gibt bessere Alternativen in
Debian hierzu. Zum Beispiel <prgn>sftp</prgn> (aus dem Paket
<package>ssh</package>). Es gibt natürlich auch freue
Implementierungen von SSH für andere Betriebssysteme, zum Beispiel
<url id="http://www.chiark.greenend.org.uk/~sgtatham/putty/"
name="putty"> oder <url id="http://www.cygwin.com" name="cygwin">.

<!-- contributed by Jesus Climent -->
<p>Wenn Sie dennoch einen FTP Server verwalten wollen, während Sie
den Nutzern Zugriff via SSH gewähren, könnten Sie auf ein
typisches Problem stoßen. Nutzer die innerhalb eines mit SSH
abgesicherten Systems auf einen anonymen FTP-Server zugreifen wollen,
können versuchen Sich auf dem <em>FTP Server</em> einzuloggen.
Während der Zugriff verweigert werden wird, wird das Passwort
trotzdem als Klartext über das Netz gesendet. Um dies zu verhindern
hat der ProFTPd Entwickler TJ Saunders einen Patch erstellt, der
verhindert, dass Nutzer den anonymen FTP-Server mit gültigen
SSH-Zugangsdaten füttern. Mehr Informationen und den Patch finden
Sie unter; <url id="http://www.castaglia.org/proftpd/#Patches"
name="ProFTPD Patches">.

<sect>Zugriff auf das X-Window-System absichern

<p>Heutzutage werden X-Terminals bei mehr und mehr Firmen benutzt, so
dass ein Server für viele Arbeitsplätze zuständig ist.
Dies kann gefährlich sein, weil Sie dem Datei-Server erlauben
müssen, sich mit den X-Clients zu verbinden (X Server aus Sicht von
X. X vertauscht die Definition von Client und Server). Wenn Sie dem (sehr
schlechten) Vorschlag von vielen Dokumentationen folgen, geben Sie auf
Ihrer Maschine <tt>xhost +</tt> ein. Dies erlaubt jedem X-Client sich mit
Ihrem System zu verbinden. Für etwas bessere Sicherheit, sollten Sie
stattdessen das Kommando <tt>xhost +Rechnername</tt> verwenden, um den
Zugriff auf bestimmte Rechner zu begrenzen.

<p>Allerdings ist es eine viel sicherere Lösung, ssh zu benutzen, um
X zu tunneln und die gesamte Sitzung zu verschlüsseln. Dies
kann automatisch geschehen, wenn Sie sich auf eine andere Maschine
via ssh einloggen. Sie müssen es nur in der <file>/etc/ssh/ssh_config</file>
einschalten, indem Sie <tt>X11Forwarding</tt> auf <tt>yes</tt> setzen. In
den Zeiten von SSH sollten Sie die xhost-basierte Zugriffskontrolle
komplett über Bord werfen. <!-- FIXME: check. The text said "has to
be disabled" [sic] -->

<p>Zur besten Sicherheit, wenn Sie keinen X-Zugriff von anderen Maschinen
benötigen, ist es, die Bindung auf Port 6000 abzuschalten, indem Sie
einfach folgendes eingeben:

<example>$ startx -- -nolisten tcp</example>


<p>Dies ist das Standard-Verhalten unter XFree 4.1.0 (der Xserver aus
Debian 3.0). Wenn Sie XFree 3.3.6 laufen lassen (d.h. wenn Sie Debian 2.2
benutzen) können Sie <file>/etc/X11/xinit/xserverrcc</file>
editieren, damit Sie etwas erhalten wie:

<example>
#!/bin/sh
exec /usr/bin/X11/X -dpi 100 -nolisten tcp
</example>

<p>Wenn Sie XDM benutzen, setzen Sie in
<file>/etc/X11/xdm/Xservers</file> auf <tt>:0 local /usr/bin/X11/X vt7
-dpi 100 -nolisten tcp</tt>. Wenn Sie GDM benutzen, stellen Sie sicher,
dass die Option <tt>-nolisten tcp</tt> in der
<file>/etc/gdm/gdm.conf</file> gesetzt ist (was standardmäßig 
unter Debian der Fall ist), wie hier:

<example>
[server-Standard]
name=Standard Server
command=/usr/bin/X11/X -nolisten tcp
</example>

<p>Sie können außerdem die standardmäßige Zeitgrenze für
die <prgn>xscreensaver</prgn> Bildschirmsperre setzen. Auch wenn der Nutzern sie
aufheben kann, sollten Sie Konfigurationsdatei
<file>/etc/X11/app-defaults/XScreenSaver</file> editieren, und die
lock-Zeile von
<example>
*lock:                  False
</example>
<p>(das ist der Standardwert unter Debian) auf
<example>
*lock:                  True
</example>
<p>ändern.

<p>FIXME: add information on how to disable the screensavers which
show the user desktop (which might have sensitive information).

<p>Lesen Sie mehr zur Sicherheit von X Window in <url
name="XWindow-User-HOWTO"
id="http://www.linuxdoc.org/HOWTO/XWindow-User-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/XWindow-User-HOWTO.txt.gz</file>).
<!-- TODO: Link zur deutschen Uebersetzung -->


<p>FIXME: Add info on thread of debian-security on how to change config files
of XFree 3.3.6 to do this.  

<sect1>Überprüfen Ihres Display-Managers

<p>Wenn Sie einen Display-Manager lediglich zur lokalen Nutzung
(um einen schönen graphischen Login zu haben) haben wollen, gehen
Sie sicher, dass der XDMCP (X Display Manager Control Protocol) Krempel
abgeschaltet ist. Unter XDM können Sie dies mit der folgenden Zeile
in <tt>/etc/X11/xdm/xdm-config</tt>:

<example>
DisplayManager.requestPort:     0
</example>

<p>Normalerweise sind unter Debian alle Display-Manager so konfiguriert,
dass sie standardmäßig keine XDMCP-Dienste starten.

<sect>Absichern des Drucker-Zugriffs (Die lpd und lprng Problematik)

<p>Stellen Sie sich vor, Sie kommen zur Arbeit, und der Drucker spuckt
endlose Mengen von Papier aus, weil jemand eine DoS-Attacke gegen Ihren Drucker-Daemon 
durchführt. Unangenehm, oder?

<!-- Info based on Dale Southard's post to debian-security april 11th 2002-->
<p>In jeder Unix Druck-Architektur muss es einen Weg geben, um die Daten
des Client auf den Druck-Server zu bekommen. Traditionell machen dies
<prgn>lpr</prgn> und <prgn>lp</prgn> so, dass das Client-Kommando die
Daten in das Spool-Verzeichnis kopiert oder symbolisch verlinkt (weshalb diese
Programme normalerweise SUID oder SGID sind).

<p>Um jede Gefahr zu vermeiden, sollen Sie Ihren Druck-Server besonders
sicher halten. Dies heißt, dass Sie Ihren Druck-Dienst so konfigurieren
müssen, dass er nur Aufträge von vertrauenswürdigen
Rechnern annimmt. Hierzu müssen Sie die Rechner, von denen Sie
Druckaufträge entgegennehmen möchten in die Datei
<file>/etc/hosts.lpd</file> eintragen.

<p>Allerdings akzeptiert der <prgn>lpr</prgn>-Daemon auch wenn Sie dies
getan haben Verbindungen auf Port 515 auf jeder Schnittstelle. Sie
sollten sich überlegen, ob Sie Verbindungen von Netzwerken/Rechner,
die nicht drucken dürfen, mittels Firewall abblocken wollen (Der
<prgn>lpr</prgn>-Daemon kann nicht so konfiguriert werden, dass er nur
auf eine bestimmte IP-Adresse hört.)

<!-- FIXME
<p>Of course, you could also take the lpr/lprng sources
and change them so that the connect function is only done to "127.0.0.1".
apt-get source lpr
and patch the bind (finet) call
-->

<p>Sie sollten <prgn>Lprng</prgn>  gegenüber <prgn>lpr</prgn>
vorziehen, da er so konfiguriert werden kann, dass er Zugang-Kontrolle
über IP kann. Und Sie können spezifizieren, auf welche
Schnittstelle er sich binden soll (wenn auch etwas sonderbar).

<!-- FIXME: ask Craig Small about his post in debian-private 19th october 2001 -->

<p>Wenn Sie Ihren Drucker nur lokal auf Ihrem System benutzen, werden Sie
diesen Dienst nicht über ein Netzwerk teilen wollen. Sie sollten dann
überlegen ein anderes Druck-System, wie zum Beispiel das aus dem
Paket <package>cups</package> oder <url name="PDQ"
id="http://pdq.sourceforge.net/">, das auf den Zugriffsrechten des
Gerätes <file>/dev/lp0</file> beruht, einzusetzen.

<p>Bei <package>cups</package> werden die Druckaufträge mit dem
http-Protokoll zum Server übertragen. Dadurch muss der Client nicht
über spezielle Privilegien verfügen, aber der Server muss auf
irgendeinem Port hören.

<p>Wie auch immer: Wenn Sie <prgn>cups</prgn> nur lokal benutzen
möchten, können Sie es so konfigurieren, dass er nur auf die
lokale Schleife (loopback interface) hört, indem Sie folgendes in
Ihrer <file>/etc/cups/cupsd.conf</file> ändern:

<example>
Listen 127.0.0.1:631
</example>

<p>Es gibt noch andere Sicherheits-Optionen in diese
Konfigurations-Datei, wie zum Beispiel das Erlauben oder Verweigern von
Netzwerken oder Rechnern. Wenn Sie sie allerdings nicht benötigen,
belassen Sie es am besten dabei, einfach nur den Port, auf den
gehört wird, einzuschränken. <prgn>Cups</prgn> liefert auch
Dokumentation über den HTTP-Port. Wenn Sie diese potentiell
nützlichen Informationen einem Angreifer von außerhalb nicht
enthüllen wollen (und der Port offen ist), fügen Sie
außerdem folgendes hinzu:

<example>
&lt;Location /&gt;
  Order Deny,Allow
   Deny From All
    Allow From 127.0.0.1
&lt;/Locationi&gt;
</example>

<p>Die Konfigurationsdatei kann auch so angepasst werden, dass
zusätzliche Fähigkeiten einschließlich SSL- und
TLS-Zertifikate oder Verschlüsselung möglich werden. Die
Handbücher finden Sie unter http://localhost:631/ oder
http://cups.org.

<P>FIXME: Add more content (the article on <url name="Amateur Fortress
Building" id="http://www.rootprompt.org"> provides some very
interesting views).  

<p>FIXME: Check if PDG is available in Debian, and if so,
suggest this as the preferred printing system.

<p>FIXME: Check if Farmer/Wietse has a replacement for printer daemon
and if it's available in Debian.

<sect>Absichern des Mail-Daemon

<p>Wenn Ihr Server kein Mail-System ist, müssen Sie wirklich keinen
Mail-Daemon haben, der auf eingehende Verbindungen reagiert. Aber Sie
wollen lokale Mails ausliefern, um beispielsweise Mails an den
Root-User von irgendwelchen Alarm-System zu erhalten.

<p>Um dies auf einem Debian-System zu erreichen, entfernen Sie den
SMTP-Daemon auf dem inetd:

<example>
$ update-inetd --disable smtp
</example>
<p>und konfigurieren Sie den Mailer-Daemon so, dass er nur auf die lokale
Schleife achtet. In exim (dem Standard Mail Transport Agent (MTA) unter
Debian) tun Sie dies, indem Sie die in der Datei
<file>/etc/exim.conf</file> die Zeile

<example>
local_interfaces = "127.0.0.1"
</example>

<p> hinzufügen.

<p>Starten Sie beide Daemonen neu (inetd und exim) und exim wird
lediglich auf den Socket 127.0.0.1:25 reagieren. Seien Sie vorsichtig und
deaktivieren Sie erst inetd, oder exim wird nicht neu starten, da der
inetd bereits eingehende Verbindungen behandelt.

<p>Bei <prgn>postfix</prgn> editieren Sie <file>/etc/postfix/main.conf</file>:

<example>
inet_interfaces = localhost
</example>


<p>Wenn Sie Mails lediglich lokal entgegennehmen wollen ist dieses Herangehen
besser als den Mailer-Daemon in einen tcp-Wrapper zu hüllen oder
Firewall-Regeln einzufügen, die den Zugang für alle limitieren
sollen. Wenn Sie jedoch auch auf andere Schnittstellen reagieren
müssen, sollten Sie überlegen, ihn vom inetd aufrufen zu lassen
und einen tcp-Wrapper einzusetzen, so dass eingehende Verbindungen gegen 
<file>/etc/hosts.allow</file> und <file>/etc/hosts.deny</file>
geprüft werden. Außerdem werden Sie von unautorisierte
Zugriffsversuche gegen Ihren Mail-Daemon durch angemessenes
Protokollieren gewarnt werden wollen.

<p>In jedem Fall können Sie Mail-Relais-Versuche auf dem SMTP-Level
ablehnen, indem Sie die <file>/etc/exim/exim.conf</file> abändern,
damit Sie folgendes enthält:

<example>
receiver_verify = true
</example>

<p>Auch wenn Ihr Mail-Server keine Mails relayen wird ist diese
Konfiguration für den Relay-Test auf <url
id="http://www.abuse.net/relay.html"> nötig, um festzustellen, dass
Ihr Server <em>nicht</em> relaisfähig ist.

<sect>Sicherer Empfang von Mails
<p>
Das Lesen und Empfangen von Mails ist das gebräuchlichste
Klartext-Protokoll. Wenn Sie POP3 oder IMAP benutzen, um Ihre Mails zu
erhalten, senden Sie ein Klartext-Passwort über das gesamte Netz, so
dass ziemlich jeder Ihre Mails von nun an lesen kann. Benutzen Sie
statt-
dessen SSL (Secure Sockets Layer) um Ihre Mails zu empfangen. Wenn Sie
einen Shell-Account auf dem Rechner, der als POP oder IMAP-Server agiert,
haben, ist die andere Alternative ssh. Hier ist eine beispielhafte
fetchmailrc um dies zu zeigen:

<example>
poll mein-imap-mailserver.org via "localhost"
  with proto IMAP port 1236
      user "ref" there with password "hackmich" is alex here warnings 3600
    folders
      .Mail/debian
    preconnect 'ssh -f -P -C -L 1236:my-imap-mailserver.org:143 -l ref
     mein-imap-mailserver.org sleep 15 &lt;/dev/null &gt; /dev/null'
</example>

<p>Die wichtige Zeile ist die preconnect-Zeile. Sie startet eine
ssh-Verbindung und erstellt den notwendigen Tunnel, durch den automatisch
alle Verbindungen zum lokalen Port 1236 verschlüsselt an den
IMAP-Mail-Server weitergeleitet werden. Eine andere Möglichkeit
wäre es, fetchmail mit SSL-Unterstützung zu benutzen.

<p>Wenn Sie verschlüsselte Mail-Dienste wie POP oder IMAP anbieten
möchten, <tt>apt-get install stunnel</tt> und starten Sie Ihren
Daemon auf diese Weise:

<example>
stunnel -p /etc/ssl/certs/stunnel.pem -d pop3s -l /usr/sbin/popd
</example>


<p>Dieses Kommando umhüllt den angegeben Daemon (-l) an den Port
(-d) und nutzt ein bestimmtes Zertifikat (-p).



<sect id="sec-bind">Sichern von BIND

<p>Es gibt verschiedene Dinge mit denen Sie sich auseinander setzen
sollten, um einen Domain-Server-Daemon abzusichern, die ähnlich zu
den Überlegungen sind, wie man einen anderen Dienst absichert:

<list>

<item>Konfigurieren Sie den Daemon selbst so dass er von außen nicht
missbraucht werden kann. Dies schließt das einschränken von
Abfragen durch Clients ein: Zonen-Transfers und rekursive Abfragen.

<item>Einschränken des Zugriffs des Daemon auf den Server
selbst, so dass dem Schaden für das System im Falle eines Einbruchs
Grenzen gesetzt sind. Hierzu gehört auch, den Daemon als
nicht-privilegierten User laufen zu lassen und ihn zu chrooten.

</list>

<p>Sie sollten einige Informationen, die von außen abgefragt werden
können, zurückhalten, so dass man nicht wertvolle Informationen
über Ihre Organisation, die Sie nicht herausgeben wollen, abfragen
kann. Dies schließt die folgenden Optionen mit ein:
<em>allow-transfer</em>, <em>allow-query</em>, <em>allow-recursive</em>
und <em>Version</em>. Sie können dies in dem global Abschnitt tun
(so wird es auf alle Zonen angewandt) oder jeweils pro Zone. Dies ist im
Paket <package>bind-doc</package> dokumentiert, sobald das Paket
installiert ist können Sie hierzu mehr in
<file>/usr/share/doc/bind/html/index.html</file> lesen.

<p>Stellen Sie sich vor, Ihr Server ist mit dem Internet und Ihrem
internen Netzwerk (Ihre interne IP ist 192.168.1.2) verbunden - ein
einfacher Server im heimischen Netzwerk. Sie möchten keinen Dienst
im Internet anbieten und DNS-Abfragen lediglich Ihrem internen Host
erlauben. Sie sollten dies einschränken, indem Sie folgendes in Ihre
<file>/etc/bind/named.conf</file> aufnehmen:

<example>
options {
	    allow-query { 192.168.1/24; } ;
	    allow-transfer { none; } ; 
	    allow-recursive { 192.168.1/24; } ;
	    listen-on { 192.168.1.2; } ;
	    forward { only; } ;
	    forwarders { A.B.C.D; } ;
};
</example>

<p>Die <em>listen-on</em> Option bewirkt, dass sich DNS nur auf die
Schnittstelle bindet, die die interne Adresse hat, aber sogar wenn diese
Schnittstelle Verbindung zum Internet hat (zum Beispiel weil Sie NAT
benutzen), werden Abfragen nur akzeptiert, wenn sie von internen Hosts
kommen. Wenn das System mehrere Schnittstellen hat und Sie kein
<em>listen-on</em> gesetzt haben, könnten zwar nur interne Nutzer
Abfragen starten, aber, da der Port für Angreifer von außen
ansprechbar ist, könnten Sie versuchen den DNS abzustürzen
(oder durch Speicher-Überlauf-Attacken auszunutzen). Sie
könnten ihn sogar dazu bringen, lediglich auf 127.0.0.1 zu
hören, wenn Sie den DNS-Service nicht für ein anderes System
anbieten wollen.
</p>

<p>Der version.bind Eintrag in der chaos class enthält die Version
des derzeit laufenden Bind-Prozesses. Diese Information wird oft von
automatischen Scannern und bösartigen Individuen dazu verwendet,
heraus zu finden, ob ein Bind für eine bestimmt Attacke verwundbar
ist. Indem Sie falsche oder gar keine Informationen im version.bind
Eintrag zur Verfügung stellen, minimieren Sie die
Wahrscheinlichkeit, dass jemand Ihren Server aufgrund der publizierten
Version attackieren wird. Um Ihre eigene Version anzugeben, benutzen Sie
die <em>Version</em> Direktive in der folgenden Art:
<example>
options {
	... verschiedene andere Optionen ...
	version "Nicht verfuegbar.";
};
</example>

<p>Das Ändern des version.bind Eintrags schützt eigentlich
nicht gegen Attacken, aber Sie können es als sinnvolle
Schutzvorrichtung ansehen.
</p>

<p>Eine beispielhafte <file>named.conf</file> Konfigurationsdatei
könnte so aussehen:

<example>
acl internal {
        127.0.0.1/32;           // localhost
        10.0.0.0/8;             // intern
        aa.bb.cc.dd;            // eth0 IP
};

acl friendly {
        ee.ff.gg.hh;            // slave DNS
        aa.bb.cc.dd;            // eth0 IP
        127.0.0.1/32;           // localhost
        10.0.0.0/8;             // intern
};

options {
        directory "/var/cache/bind";
        allow-query { internal; };
        allow-recursive { internal; };
        allow-transfer { none; };
};
// Ab hier bis zur meineseite.bogus Zone 
// ist alles im Grunde die unveränderte Debian Standard Einstellung
logging {
        category lame-servers { null; };
        category cname { null; };   
};

zone "." {
        type hint;
        file "/etc/bind/db.root";
};

zone "localhost" {
        type master;
        file "/etc/bind/db.local";
};

zone "127.in-addr.arpa" {
        type master;
        file "/etc/bind/db.127";
};

zone "0.in-addr.arpa" {
        type master;
        file "/etc/bind/db.0";
};

zone "255.in-addr.arpa" {
        type master;
        file "/etc/bind/db.255";
};

// Zone, die ich selbst hinzugefuegt habe
zone "meineseite.bogus" {
        type master;
        file "/etc/bind/named.meineseite";
        allow-query { any; };
        allow-transfer { friendly; };
};
</example>

<P>Bitte prüfen Sie (erneut) die Debian-Fehler-Datenbank (BTS)
bezüglich Bind, insbesondere <url name="Bug #94760 (regarding ACLs
on zone transfers)" id="http://bugs.debian.org/94760">.  Fühlen Sie
sich ruhig dazu ermutigt zu diesem Bugreport beizutragen, wenn Sie glauben, 
nützliche Informationen hinzufügen zu können.

<sect1 id="user-bind">Ändern des BIND Users

<p>Bezüglich der Beschränkung von BINDs Privilegien müssen
Sie beachten, dass wenn Sie BIND als nicht-root User laufen lassen, BIND
neue Netzwerk-Schnittstellen nicht automatisch entdecken kann. Zum Beispiel,
wenn Sie eine PCMCIA-Karte in Ihr Notebook stecken. Lesen Sie README.Debian in Ihrer
Dokumentation (<file>/usr/share/doc/bind/README.Debian</file>) für
mehr Informationen hierzu. Es gab in letzter Zeit Sicherheitsprobleme
mit BIND, so dass es nützlich ist, den User zu wechseln, wenn es
möglich ist. Wir werden die Schritte, die dazu nötig sind,
detailliert aufführen. Wenn Sie dies automatisch machen lassen wollen,
probieren Sie das Skript in <ref id="bind-chuser"> aus.

<p>Um BIND unter einem anderen User laufen zu lassen müssen Sie
zunächst einen separaten User und eine separate Gruppe dafür
erstellen (es ist <em>keine</em> gute Idee für alle Dienste, die
Sie nicht als root laufen lassen, den User nobody und die Gruppe nogroup
zu benutzen). In diesem Beispiel wird der User und die Gruppe
<tt>named</tt> benutzt. Sie können diese anlegen, indem Sie die
folgenden Kommandos eingeben:
<example>
addgroup named
adduser --system --home /home/named --no-create-home --ingroup named \
      --disabled-password --disabled-login named
</example>

<p>Beachten Sie, dass der User <tt>named</tt> sehr eingeschränkt
ist. Wenn Sie - aus welchen Gründen auch immer - ein weniger
eingeschränktes Setup haben möchten, benutzen Sie:
<example>
adduser --system --ingroup named named
</example>

<p>Editieren Sie nun <tt>/etc/init.d/bind</tt> mit Ihrem Lieblings-Editor
und ändern Sie die Zeile, die mit 
<example>
start-stop-daemon --start
</example>

anfängt zu:
<example>
start-stop-daemon --start --quiet --exec /usr/sbin/named -- -g named -u named
</example>

<p>Außerdem müssen Sie, um zu verhindern, dass irgendetwas als root
läuft, die <tt>reload</tt>-Zeile auskommentieren:

<example>
reload)
       /usr/sbin/ndc reload
</example>

<p>und in folgendes ändern:
<example>
reload)
        $0 stop
        sleep 1
        $0 start
</example>

<p>Beachten Sie: Abhängig von Ihrer Debian-Version, müssen Sie
vielleicht auch die <tt>restart</tt>-Zeile ändern. Dies wurde in der
Version <tt>1:8.3.1-2</tt> von Debians BIND-Paket repariert.

<p>Alles was Sie jetzt noch tun müssen, ist bind durch
'/etc/init.d/bind restart' neu zu starten, und dann Ihr Syslog auf zwei
Einträge. wie die folgenden, prüfen:
<p>
<example>
Sep  4 15:11:08 nexus named[13439]: group = named
Sep  4 15:11:08 nexus named[13439]: user = named
</example>


<p>Voilà! Ihr named läuft <em>nicht mehr</em> als root. Wenn Sie mehr
Informationen darüber lesen wollen, warum BIND normalerweise nicht
als nicht-root User auf Debian Systemen läuft, sehen Sie bitte in
der Fehlerdatenbank zu Bind nach, insbesondere <url name="Bug #50013:
bind should not run as root" id="http://bugs.debian.org/50013"> und
<url name="Bug #132582: Default install is potentially insecure"
id="http://bugs.debian.org/132582">,
<url name="Bug #53550" id="http://bugs.debian.org/53550">, 
<url name="Bug #128120" id="http://bugs.debian.org/52745">, und
<url name="Bug #128120" id="http://bugs.debian.org/128129">. 
Fühlen Sie sich ruhig dazu ermuntert, etwas zu den Fehlermeldungen
beizutragen, wenn Sie denken, nützliche Informationen beitragen zu 
können.


<sect1 id="chroot-bind">Chrooten des Name-Servers

<p>Um die größtmögliche BIND Sicherheit zu erreichen,
müssen Sie nun ein Chroot-Gefängnis (siehe <ref id="chroot">)
um Ihren Daemon herum bauen. Es gibt da einen sehr einfachen Weg dies zu
erreichen: Die <tt>-t</tt> Option (siehe die Handbuchseite <manref
name="named" section="8">). Dies wird Bind selbst in ein bestimmtes
Verzeichnis chrooten lassen, ohne dass Sie einen eigenes
Chroot-Gefängnis aufsetzen müssen, oder sich Sorgen um dynamische
Bibliotheken machen müssen. Die einzigen Dateien, die Sie in diesem
Chroot-Gefängnis benötigen, sind:

<example>
dev/null
etc/bind/       - sollte die named.conf und alle Server-Zonen enthalten
sbin/named-xfer - wenn Sie Namen transferieren
var/run/named/  - sollte die pid und den Cache des Name-Server (falls es
                  ihn gibt) enthalten. Dieses Verzeichniss muss für
		  den named-User schreibbar sein.
var/log/named   - Wenn Sie in einer Datei protokollieren, muss dies
                  für den named-User schreibbar sein.
dev/log         - syslogd sollte hierauf hören, wenn named so
                  konfiguriert ist, dass er darüber protokolliert.
</example>


<p>Damit Ihr Bind Daemon vernünftig läuft, braucht er bestimmt
Zugriffsrechte auch die named-Dateien. Dies ist eine einfache
Angelegenheit, da die Konfigurations-Dateien immer in <tt>/etc/named/</tt>
liegen. Beachten Sie, dass er lediglich lese-Zugriff benötigt, es
sei denn, es handelt sich um einen sekundären oder
zwischen speichernden Name-Server. Wenn dies der Fall ist, müssen Sie
ihm lese- und Schreibzugriff auf die notwendigen Zonen gewähren (so
dass Zonen-Transfers vom primären Server funktionieren).

<p>Mehr Informationen über das Chrooten von Bind finden Sie unter
<url name="Chroot-BIND-HOWTO"
id="http://www.linuxdoc.org/HOWTO/Chroot-BIND-HOWTO.html"> (betrifft Bind
9) und <url name="Chroot-BIND8-HOWTO"
id="http://www.linuxdoc.org/HOWTO/Chroot-BIND8-HOWTO.html"> (betrifft
Bind 8).  Diese Dokumente sollten auch nach der Installation des Paketes 
<package>doc-linux-text</package> (Text-Version) oder
<package>doc-linux-html</package> (HTML-Version) verfügbar sein. Ein
anderes nützliches Dokument ist <url
id="http://www.psionic.com/papers/dns/dns-linux">.

<p>Wenn Sie für Bind 8.2.3 (aus Debian potato) ein komplettes
Chroot-Gefängnis aufsetzen (d.h. Sie benutzen nicht nur <tt>-t</tt>) ,
stellen Sie sicher, dass Sie die folgenden Dateien darin haben:

<example>
dev/log -  syslogd sollte hierauf hören
dev/null
etc/bind/named.conf 
etc/localtime
etc/group - mit einer einzigen Zeile: "named:x:GID:"
etc/ld.so.cache - mit ldconfig erstellt   
lib/ld-2.1.3.so
lib/libc-2.1.3.so
lib/ld-linux.so.2 - symbolischer Link auf ld-2.1.3.so
lib/libc.so.6 - symbolischer Link auf libc-2.1.3.so
sbin/ldconfig - kann gelöscht werden, nachdem Chroot aufgesetzt wurde
sbin/named-xfer - wenn Sie Namen transferieren
var/run/
</example>

<p>Sorgen Sie auch dafür, dass <prgn>syslogd</prgn> auf
$CHROOT/dev/log achtet, so dass der Name-Server seine
syslog-Einträge in das lokale System-Protokoll schreiben lassen
kann.

<p>Wenn Sie Probleme mit dynamischen Bibliotheken vermeiden wollen,
können Sie Bind statisch compilieren. Sie können hierzu
<prgn>apt-get</prgn> mit der <tt>source</tt> Option benutzen. Es kann
sogar die Pakete herunterladen, die Sie zum Compilieren benötigen.
Sie müssten etwas ähnliches wie das hier tun:

<!-- FIXME: Does bind use autoconf? -->
<example>
$ apt-get --download-only source bind build-dep bind
$ cd bind-8.2.5-2
(ändern Sie das Makefile.in , so dass CFLAGS die Option '-static'
beinhaltet bevor die @CFLOAGS@ Definition von autoconf verwendet wird)
$ dpkg-buildpackage -rfakeroot
$ cd ..
$ dpkg  -i bind-8.2.5-2*deb
</example>

<p>Nach der Installation werden Sie die Dateien in das Chroot-Gefängnis
verschieben müssen <footnote>es sei denn, Sie benutzen die
<tt>instdir</tt> Option, wenn Sie <prgn>dpkg</prgn> aufrufen, aber dann
wird das chroot-Gefängnis etwas komplizierter </footnote>. Sie
können die <tt>init.d</tt> Skripten in <file>/etc/init.d</file>
lassen, so dass das System automatisch den Name-Server starten wird, aber
editieren Sie sie in dem Sie bei den <prgn>start-stop-daemon</prgn>
Aufrufen in diesen Skripten <tt>--chroot /location_of_chroot</tt>
hinzufügen.

<p>FIXME, merge info from
<url id="http://people.debian.org/~pzn/howto/chroot-bind.sh.txt">,
<url id="http://people.pdxlinux.org/~karlheg/"> (Bind9 in Debian),
<url id="http://www.cryptio.net/~ferlatte/config/"> (Debian-spezifisch),
<url id="http://www.psionic.com/papers/whitep01.html">, 
<url id="http://csrc.nist.gov/fasp/FASPDocs/NISTSecuringDNS.htm">
und
<url id="http://www.acmebw.com/papers/securing.pdf">.

<sect>Absichern von Apache

<p>FIXME: Add content.

<p>Sie können den Zugriff auf Ihren Apache Server einschränken,
wenn Sie ihn nur intern benutzen wollen (zum Beispiel zu Testzwecken,
oder um auf die <package>doc-central</package> Archive zuzugreifen, etc.)
und nicht wollen, dass von Außen auf ihn zugegriffen werden kann. Um
dies zu tun benutzen Sie die <tt>Listen</tt> oder <tt>BindAddress</tt>
Direktiven in der Datei <file>/etc/apache/http.conf</file>.

<p>Benutzen von Listen:
<example>
Listen 127.0.0.1:80
</example>
<p>Benutzen von BindAddress:
<example>
BindAddress 127.0.0.1
</example>

<p>Starten Sie anschließend den Apache mit <tt>/etc/init.d/apache
restart</tt> neu, und Sie werden sehen, dass er nur auf die lokale
Schleife achtet.

<p>In jedem Fall sollten Sie, wenn Sie nicht die ganze Funktionalität
die Apache zur Verfügung stellt benutzen wollen, mal einen Blick auf
die anderen Web-Server aus Debian werfen, zum Beispiel
<package>dhttpd</package>.

<p>Die <url name="Apache Documentation"
id="http://httpd.apache.org/docs/misc/security_tips.html"> stellt viele
Informationen zu Sicherheitsmaßnahmen, die Sie auf einem Apache
Web-Server anwenden können, bereit (die gleichen Informationen
erhalten Sie unter Debian auch durch das Paket
<package>apache-doc</package>).

<sect>Absichern von finger

<p>Wenn Sie einen finger-Dienst laufen lassen wollen, fragen Sie sich
bitte zuerst, ob Sie das auch tun müssen. Wenn Sie müssen,
werden Sie feststellen, dass Debian viele finger-Daemonen zur
Verfügung stellt (hier die Ausgabe von <prgn>apt-cache search
fingerd</prgn>):

<list>
<item>cfingerd - Konfigurierbarer finger-Daemon
<item>efingerd - Ein weiterer Unix-finger-Dämon mit anpassbarer Ausgabe
<item>ffingerd - Ein sicherer finger-Daemon
<item>fingerd - Remote-User Informationsserver
<item>xfingerd - BSD-ähnlicher finger-Daemon mit qmail Unterstützung
</list>
<p><package>ffingerd</package> ist der empfohlene finger-Daemon, wenn Sie
vorhaben, einen öffentlichen Dienst anzubieten. In jedem Fall sind
Sie dazu angespornt, ihn über inetd, xinetd oder tcpserver laufend
aufzusetzen: Schränken Sie die Anzahl der Prozesse die gleichzeitig
laufen dürfen ein. Schränken Sie den Zugriff auf den
Finger-Daemon von bestimmten Hosts ein (indem Sie tcp-wrapper benutzen)
und lassen Sie ihn nur auf die Schnittstellen achten, auf die er achten
muss.


<sect>Allgemeine chroot und suid Paranoia

<p>Wahrscheinlich ist es nur fair zu sagen, dass die Komplexität von
BIND der Grund dafür ist, warum er in den letzten Jahren so oft
für Attacken verwundbar war.

<p>Dies trifft auch auf andere Programme mit komplexen Funktionen und
größerer Nutzergemeinde zu, einschließlich sendmail und einige
ftp-Daemonen (z.B. wu-ftpd). (Natürlich kann auch ein Programm ohne
viele Funktionen, das seine Nutzer nicht zufrieden stellt, unsicher sein,
abgesehen davon, dass es nutzlos ist.)

<p>In jedem Fall sollten Sie, wenn Sie diese laufen lassen, ähnliche
Arrangements für sie in Erwägung ziehen &mdash; entziehen von
root-Privilegien, einsperren in ein chroot-Gefängnis &mdash; oder
ersetzen durch ein sichereres Äquivalent.


<sect>Allgemeine Klartextpasswort Paranoia
<p>
Sie sollten versuchen, jeden Netzwerk-Dienst, der seine Passworte als
Klartext über das Netz sendet oder empfängt, wie zum Beispiel
FTP/Telnet/NIS/RPC, vermeiden. Der Autor empfiehlt jedem ssh anstelle von
telnet und ftp zu verwenden.

<p>Vergessen Sie jedoch nicht, dass die Migration von telnet zu ssh die
Sicherheit in keinster Weise erhöht, wenn Sie weiterhin Klartext-
Protokolle verwenden. Am besten wäre es ftp, telnet, pop, imap und
http zu entfernen und durch ihre entsprechenden verschlüsselten
Dienste zu ersetzen. Sie sollten in Erwägung ziehen von diesen
Diensten zu deren SSL-Versionen zu wechseln: ftp-ssl, telnet-ssl,
pop-ssl, https ...

<p>Die meisten der oben aufgelisteten Tipps gelten für jedes
unixoide System (Sie werden sie in jedem anderen sicherheitsrelevanten
Dokument, das Sie jemals lesen, wiederfinden, wenn es sich auf Linux und
andere Unices bezieht).

<sect>NIS deaktivieren

<p>Sie sollten, wenn möglich, nicht NIS, den Network Information
Service, benutzen, da er das gemeinsame Nutzen von Passworten erlaubt. Dies kann
sehr unsicher sein, wenn Ihr Setup kaputt geht.

<p>Wenn Sie Passwörter zwischen verschiedenen Maschinen teilen
müssen, sollten Sie andere alternativen in Erwägung ziehen. Zum
Beispiel können Sie einen LDAP Server aufsetzen, und PAM auf Ihren
System so konfigurieren, dass es den LDAP Server zur User
Authentifizierung kontaktiert. Sie finden ein detailliertes Setup in dem
<url name="LDAP-HOWTO"
id="http://www.linuxdoc.org/HOWTO/LDAP-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/LDAP-HOWTO.txt.gz</file>).

<p>Lesen Sie mehr zu Sicherheit und NIS in dem 
<url name="NIS-HOWTO" id="http://www.linuxdoc.org/HOWTO/NIS-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/NIS-HOWTO.txt.gz</file>).


<p>FIXME (jfs): Add info on how to setup this in Debian

<sect id="rpc">Abschalten von RPC-Diensten

<p>Sie sollten RPC wann immer nur möglich abschalten, dass ist dann
der Fall, wenn Sie ihn nicht benötigen.
<footnote>
Sie werden es wahrscheinlich brauchen, wenn Sie NFS (Network FileSystem)
oder NIS (Network Information System) oder andere RPC-basierende Dienste
benutzen.
</footnote>
Es sind viele Sicherheitslöcher sowohl für den
Portmapper, als auch für RPC-basierende Dienste bekannt und
könnten sehr leicht ausgenutzt werden. Andererseits können
NFS-Dienste in manchen Netzwerken sehr wichtig sein, also versuchen Sie
in Ihrem Netzwerk die Balance zwischen Sicherheit und Nutzbarkeit zu
wahren. Einige DDoS (distributed denial of service) Angriffe benutzen
RPC-Löcher, um in das System einzudringen und als so genannter
Agent/Handler zu fungieren. Lesen Sie mehr zu Sicherheit in NFS im <url
name="NFS-HOWTO" id="http://www.linuxdoc.org/HOWTO/NFS-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/NFS-HOWTO.txt.gz</file>).

<p>Das Abschalten von portmap ist relativ einfach. Es gibt aber
verschiedene Methoden. Die einfachste ist es auf einem Debian 3.0 System
einfach das Paket <package>portmap</package> zu deinstallieren. Wenn Sie
eine andere Version laufen haben, werden Sie den Dienst, wie in
<ref id="disableserv"> beschrieben, abschalten müssen, dies liegt
daran, dass das Programm Teil des Pakets <package>net-base</package> (das
nicht deinstalliert werden kann, ohne das System kaputt zu machen) ist.

<p>Dies entfernt in der Tat jeden symbolischen Link der etwas mit portmap
zu tun hat unterhalb von <tt>/etc/rc${runlevel}.d/</tt>, was Sie auch
manuell erledigen können. Eine andere Möglichkeit ist <tt>chmod
644 /etc/init.d/portmap</tt>, das erzeugt aber eine Fehlermeldung
während des Bootvorgang. Sie können auch den
<tt>start-stop-daemon</tt> Teil im <file>/etc/init.d/portmap</file>
Shell-Skript auskommentieren.

<sect id="firewall-setup">Hinzufügen von Firewall-Fähigkeiten

<p>Das Debian GNU/Linux Betriebssystem hat die eingebauten
Fähigkeiten des Linux Kernels. Dies heißt, dass Sie, wenn Sie ein
Potato (Debian 2.2) System installiert haben (mit dem standardmäßigen Kernel 2.2)
werden Sie <prgn>ipchains</prgn> Firewall-Unterstützung im Kernel
haben. Sie müssen dann das Paket <package>ipchains</package>
installieren, was (durch seine Priorität) sicherlich bereits der
Fall ist. Wenn Sie ein Woody-System (Debian 3.0) installiert haben (mit
dem standardmäßigen 2.4er Kernel) unterstützt der Kernel Ihr
<prgn>iptables</prgn> (neftfilter). Der Hauptunterschied zwischen
<prgn>ipchains</prgn> und <prgn>iptables</prgn> ist, dass letzteres auf
<em>stateful packet inspection</em> (zustandsbehaftete Paket-
untersuchung), so dass Ihnen sicherere (und einfacher zu erstellende)
Filterkonfigurationen zur Verfügung stehen.

<sect1>Firewallen des lokalen Systems

<p>Sie können eine Firewall dazu benutzen, den Zugriff auf Ihr
lokales System und sogar die Kommunikation von ihm nach Außen absichern.
Firewall-Regeln können dazu benutzt werden, Prozesse, die nicht
vernünftig konfiguriert werden können, zu schützen, aber
<em>nicht</em>, um Dienste für Netzwerke, IP-Adressen, etc. zur
Verfügung zu stellen.

<p>Dieser Schritt ist aber hauptsächlich deshalb als letztes in
dieser Anleitung, weil es <em>viel</em> besser ist, sich nicht alleine
auf die Fähigkeiten der Firewall zu verlassen, um ein System zu
schützen. Die Sicherheit eines Systems setzt sich aus mehreren
Ebenen zusammen; eine Firewall sollte die letzte sein, wenn alle Dienste
abgehärtet worden sind. Sie können sich sicherlich leicht eine
Konfiguration vorstellen, bei der ein System lediglich von einer
eingebauten Firewall geschützt, und der Administrator glückselig
die Firewall-Regeln aus irgendwelchen Gründen
(Probleme mit dem Setup, Verdruss, Denkfehler) entfernt. Dieses System
wäre weit geöffnet für Angriffe, wenn es keine andere
Schutzmaßnahmen auf dem System gibt.

<p>Andererseits können Firewall-Regeln auf dem lokalen System
dafür sorgen, dass böse Dinge nicht passieren. Sogar wenn die
bereitgestellten Dienste sicher konfiguriert sind, kann eine Firewall
vor Mißkonfigurationen oder frisch installierten Diensten, die noch
nicht passend konfiguriert sind, schützen. Außerdem wird eine enge
Konfiguration <em>nach Hause telefonierende</em> Trojaner am
Funktionieren hindern, es sei denn, der Firewall-Code wurde entfernt.
Beachten Sie, dass ein Eindringling <em>keinen</em> Superuser-Zugriff
benötigt, um ferngesteuerte Trojaner zu installieren (da es
erlaubt ist, sich an Ports zu binden, wenn es sich nicht um einen
privilegierten Port handelt und die Fähigkeiten noch vorhanden
sind).

<p>Demzufolge wäre ein passendes Firewall-Setup, eines mit einer
standardmäßigen deny policy (also alles ablehnt, dass nicht ausdrücklich
erlaubt ist), und weiterhin:

<list>

<item>eingehende Verbindungen werden nur zu lokalen Diensten von
erlaubten Maschinen gestatten

<item>ausgehende Verbindungen werden nur von Diensten erlaubt, die auf
Ihrem System benutzt werden (DNS, Web-Surfen, pop, email, ...)
<footnote>Im Gegensatz zu anderen persönlichen Firewalls für
andere Betriebssysteme, stellt Debian GNU/Linux (noch) nicht eine
Firewall-Erstellungs-Schnittstelle zur Verfügung, die Regeln
erstellen können, die einzelne Prozesse oder User einschränken.
Jedoch kann der iptables-Code so konfiguriert werden, dass er dies kann
(siehe dazu das "owner" Modul in der Manual-Seite <manref name="iptables"
section="8"> manpage)</footnote>

<item>die forward-Regel verbietet alles (es sei denn, Sie beschützen
andere System, siehe unten)

<item>alle anderen eingehenden und ausgehenden Verbindungen werden
abgelehnt.

</list>

<sect1>Schützen anderer Systeme durch eine Firewall

<p>Eine Debian-Firewall kann auch so installiert werden, dass Sie, mit
Firewall-Regeln, Systeme <em>hinter</em> ihr beschützt, indem es die
Angriffsfläche zum Internet hin einschränkt. Die Firewall kann
so konfiguriert werden, dass Sie verhindert dass System von Außerhalb
des lokalen Netzwerks Zugriff auf nicht öffentliche Dienste (Ports)
bekommen. Zum Beispiel muss auf einem Mail-Server lediglich Port 25
(auf den der Mail-Dienst aufsetzt) von Außen zugänglich sein. Eine
Firewall kann so konfiguriert werden, dass sogar wenn es neben den öffentlich
zugänglichen noch andere Dienste gibt, direkt an diese gesendete Pakete verwirft (dies
nennt man <em>filtern</em>).

<p>Sie können eine Debian GNU/Linux Maschine sogar so konfigurieren,
dass sie als Bridge-Firewall (überbrückender Schutzwall)
fungiert, d.h. eine filternde Firewall, die komplett transparent zum
gesamten Netzwerk erscheint, ohne IP-Adresse auskommt, und daher
nicht direkt attackiert werden kann. Abhängig von dem installierten
Kernel müssen Sie vielleicht den Bridge-Firewall Patch installieren,
und dann <em>802.1d Ethernet Bridging</em> in der Kernel Konfiguration
und der neuen Option <em>netfilter ( firewalling ) Support</em>
auswählen. Sehen Sie dazu <ref id="bridge-fw">, um zu erfahren, wie
man dies auf einem Debian GNU/Linux System aufsetzt.

<sect1>Konfigurieren der Firewall

<p>Natürlich ist die Konfiguration einer Firewall immer vom
System und dem Netzwerk abhängig. Ein Administrator muss vorher
das Netzwerklayout und die Systeme, die er beschützen will, kennen,
und ob andere netzwerkspezifischen Erwägungen (wie NAT oder Routing)
berücksichtigt werden müssen. Seien Sie vorsichtig, wenn Sie Ihre
Firewall konfigurieren. Wie Laurence J. Lane im
<package>iptables</package> Paket sagt:

<p><em>Die Werkzeuge können leicht falsch verwendet werden und eine
Menge Ärger verursachen, indem sie den gesamten Zugang zu einem 
Computernetzwerk stilllegen. Es ist nicht völlig ungewöhnlich, 
dass sich ein Systemadministrator, der ein System verwaltet, das Hunderte 
von Kilometer entfernt ist, irrtümlicherweise selbst davon ausgeschlossen 
hat. Man kann es sogar schaffen, sich von dem Computer aus zu sperren, dessen
Tastatur unter seinen Fingern liegt. Lassen Sie daher die gebotene Vorsicht
walten.</em> 


<p>Vergessen Sie nicht: Das einfache Installieren von
<package>iptables</package> (oder dem älterem Firewallcode) gibt Ihnen
keine Sicherheit, es stellt lediglich die Software zur Verfügung. Um
eine Firewall zu haben, müssen Sie sie konfigurieren.

<p>Wenn Sie nicht viel über Firewalls wissen, lesen Sie das
Firewalling-HOWTO, das Sie im Paket <package>doc-linux-text</package>
finden (andere Formate gibt es auch). Sehen Sie auch <ref
id="references"> für weitere (allgemeinere) Verweise.

<sect2>Machen Sie es auf die Debian Art

<p>Wenn Sie Debian 3.0 benutzen, werden Sie feststellen, dass Sie bereits
das Paket <package>iptables</package> installiert haben. Dies ist die
Unterstützung für die Netfilter-Implementation in 2.4.4+
Kerneln. Da das System nach der Installation aber keine Firewall-Regeln
kennen kann (Firewall-Regeln sind zu systemspezifisch), müssen Sie
iptables einschalten. Wie auch immer: Die Skripten wurden so
konfiguriert, dass der Administrator Firewall-Regeln aufsetzen kann und
die init-Skripte sie dann <em>lernen</em> können und so immer als
das Setup der Firewall fungieren.

<p>Hierzu müssen Sie folgendes tun:

<list>

<item>Konfigurieren Sie das Paket so, dass es mit dem System gestartet
wird. Bei neueren Versionen (seit 1.2.6a-1) werden Sie während der
Installation hiernach gefragt. Sie können es hinterher wieder mit
<tt>dpkg-reconfigure -plow iptables</tt> ändern. <em>Wichtig</em>:
Bei älteren Versionen geschah dies noch durch Editieren von
<file>/etc/default/iptables</file>, so dass die Variable
<tt>enable_iptables_initd</tt> auf <em>true</em> gesetzt wurde.

<item>Erstellen Sie Ihr Firewall-Setup mit iptables, benutzen Sie
dazu die Kommandozeile (siehe <manref name="iptables" section="8">) oder
andere der Tools aus Debians Firewall-Paketen (siehe <ref
id="firewall-pack">). Sie müssen einen Satz von Firewall-Regeln
erstellen, die benutzt werden sollen wenn die Firewall <em>aktiv</em> ist,
und einen anderen wenn die Firewall <em>inaktiv</em> (dies können
auch nur leere Regeln sein) ist.

<item>Sichern Sie die erstellten Regeln mit den Skripten
<tt>/etc/init.d/iptables save_active</tt> und <tt>/etc/init.d/iptables
save_inactive</tt>.

</list>

<p>Sobald dies geschehen ist, ist Ihr Firewall-Setup im Verzeichnis
<file>/var/lib/iptables/</file> gespeichert und wird beim System-Boot
ausgeführt (oder wenn das initd Skript mit <em>start</em> und
<em>stop</em> gestartet wird). Beachten Sie, dass die standardmäßigen
Einstellungen unter Debian vorsehen, den Firewall-Code in den Multiuser-Runleveln 
(2 bis 5) sehr früh (10) zu starten. Außerdem wird er im singleuser-
Runlevel (1) gestoppt. Ändern Sie dies, wenn es nicht Ihren lokalen
Richtlinien entspricht.

<p>Wenn Sie keine Ahnung haben, wie Sie Ihre Firewall-Regeln manuell
aufsetzen sollen, sehen Sie in dem <em>Packet Filtering HOWTO</em> und
<em>NAT HOWTO</em> aus dem Paket <package>iptables</package>, zu finden
unter  <file>/usr/share/doc/iptables/html/</file> nach. Zudem stellt die
Konfigurationsdatei <file>/etc/default/iptables</file> noch weitere
Informationen zu diesem Paket zur Verfügung.


<sect2 id="firewall-pack">Nutzen von Firewall-Paketen

<p>Das manuelle Aufsetzen einer Firewall kann für neue (und
manchmal auch für erfahrene) Administratoren kompliziert sein.
Hierfür hat die Freie-Software Gemeinschaft eine große Zahl von
Tools erstellt, die zur einfachen Konfiguration einer Lokalen Firewall
benutzt werden können. Seien Sie vor gewarnt, dass einige dieser
Tools sich mehr auf lokalen Schutz konzentrieren (auch <em>personal
firewall</em> genannt), während andere vielseitiger sind, und dazu 
benutzt werden können, komplexere Regelwerke zum Schutz ganzer Netzwerke zu
erstellen.

<p>Einige Programme, die unter Debian zum Aufsetzen von Firewall-Regeln
benutzt werden können, sind:

<list>
<item><package>firestarter</package>
<item><package>knetfilter</package>
<item><package>fwbuilder</package>
<item><package>shorewall</package>
<item><package>mason</package>, das basierend auf dem Netzwerkverkehr,
denn Ihr System "sieht", Firewall-Regeln vorschlagen kann
<item><package>bastille</package> (unter anderem besitzt diese neue Version
von bastille unter den Abhärtungsstufen die Möglichkeit,
Firewall-Regeln während des Starts auszuführen)
<item><package>ferm</package>
<item><package>fwctl</package>
<item><package>easyfw</package>
<item><package>firewall-easy</package>
<item><package>ipac-ng</package>
<item><package>gfcc</package>
<item><package>lokkit</package> oder <package>gnome-lokkit</package>
</list>

<p>Die Pakete gfcc, firestarter und knetfilter sind graphische
Administrations-Schnittstellen, die entweder GNOME (die ersten beiden)
oder KDE (das letzte) benutzen und die eher benutzerorientiert sind (z.B.
für Heimanwender) als die anderen Pakete in der Liste, die sich eher
an Administratoren richten.

<p>Seien Sie vor gewarnt, dass manche der zuvor skizzierten Pakete eigene
Firewall-Skripten einführen, die beim Systemstart ausgeführt
werden sollen, dies wird zweifellos mit dem allgemeinen Setup (wenn 
konfiguriert) kollidieren und dürfte zu unerwünschten Nebeneffekten führen. 
Das Firewall-Skript, das zuletzt ausgeführt wird, wird das System
konfigurieren (was Sie so vielleicht nicht vorhatten). Sehen Sie hierzu
in der Paket-Dokumentation nach und benutzen Sie nur eines dieser Setups.
Allgemeiner: Andere Programme, die helfen die Firewall-Regeln
aufzusetzen, können in den Konfigurationsdateien anderer
rum pfuschen.

<p>FIXME: Add more info regarding this packages

<p>FIXME: Check Information on Debian firewalling and what/how does it
change from other distributions.

<p>FIXME: Where should the custom firewalling code be enabled (common
FAQ in debian-firewall?)

<chapt>Automatisches Abhärten eines Debian Systems

<p>Nachdem Sie nun all die Informationen aus den vorherigen Kapiteln
gelesen haben, fragen Sie sich vielleicht: "Ich habe sehr viele Dinge zu
erledigen, um mein System abzusichern. Könnte man das nicht
automatisieren?" Die Antwort ist: "Ja, aber seien Sie vorsichtig mit
automatischen Tools."  Manche Leute denken, dass ein Absicherungstool
nicht die Notwendigkeit für gute System-Administration abschafft.
Legen Sie sich also nicht selbst herein, indem Sie denken, dass Sie all
die Prozesse automatisieren könnten, und sich alle betreffenden
Angelegenheiten von selbst erledigen würden. Sicherheit ist ein
andauernder Prozess, an dem der Administrator teilnehmen muss und nicht
wegbleiben kann, damit irgendwelche Tools die Arbeit erledigen, weil kein
einzelnes Tool mit den möglichen Regel-konformen
Sicherheits-Implementierungen, all den Attacken und all den Umgebungen
bewältigen kann.

<p>Seit Woody (Debian 3.0) gibt es zwei unterschiedliche Pakete, die
nützlich für die Erhöhung der Sicherheit sind. Das Paket
<package>harden</package> versucht auf Basis der
Paket-Abhängigkeiten schnell wertvolle Sicherheits-Pakete zu
installieren und Pakete mit Mängeln zu entfernen. Die Konfiguration
der Pakete muss der Administrator erledigen. Das Paket
<package>bastille</package> implementiert gegebene Sicherheits-Regeln
für das lokale System basierend auf einer vorhergehenden
Konfiguration durch den Administrator (Sie können auch mit einfache
Ja/Nein Fragen durch die Konfiguration geführt werden).

<sect>Harden

<p>Das Paket <package>harden</package> versucht es einfacher zu machen,
Rechner, die gute Sicherheit benötigen, zu installieren und zu
administrieren. Dieses Paket sollte von Leuten benutzt werden, die eine
schnelle Hilfe zur Erhöhung der System-Sicherheit haben wollen. Hierzu
entfernt es Pakete mit bekannten Mängeln, einschließlich (aber
nicht beschränkt auf); Pakete mit bekannten Sicherheits-Fehlern (zum
Beispiel Speicher-Überläufe), Pakete die
Klartext-Passwörter verwenden, fehlende Zugangs-Kontrolle, usw. Es
installiert außerdem automatisch einige Tools, die die Sicherheit auf
unterschiedliche Art und Weise erhöhen: Werkzeuge zur
Eindringlings-Erkennung, Tools zur Sicherheits-Analyse, und mehr. harden
installiert die folgenden <em>virtuellen</em> Pakete (d.H. Sie enthalten
nichts, hängen aber von anderen Paketen ab).

<list>

<item><package>harden-tools</package>: Tools, die die System-Sicherheit
erhöhen (Integritäts-Überprüfer,
Eindringlings-Erkennung, Kernel-Patches...)

<item><package>harden-doc</package>: Stellt diese und andere
Sicherheits-relevanten Dokumente zur Verfügung

<item><package>harden-environment</package>: Hilft eine abgesicherte
Umgebung zu konfigurieren (derzeit leer)

<item><package>harden-servers</package>: entfernt Server, die aus
irgendeinem Grund als unsicher gelten

<item><package>harden-clients</package>: entfernt Clients, die aus
irgendeinem Grund als unsicher gelten

<item><package>harden-remoteflaws</package>: Entfernt Pakete mit
bekannten Sicherheits-Lücken, die von einem entfernten Angreifer
genutzt werden können, um das System zu kompromittierten (benutzt
versionierte <em>Conflicts:</em>)

<item><package>harden-localflaws</package>: Entfernt Pakete mit
bekannten Sicherheits-Lücken, die von einem lokalen Angreifer
genutzt werden können, um das System zu kompromittierten (benutzt
versionierte <em>Conflicts:</em>)

<item><package>harden-remoteaudit</package>: Tools um Systeme aus der
Ferne zu überprüfen

</list>

<p>Seien Sie wachsam, wenn Sie Software installiert haben, die Sie
brauchen (und aus bestimmten Gründen nicht deinstalliert haben
wollen), und die aufgrund eines Konflikts mit einem der oben
aufgeführten Pakete nicht installiert werden kann. In diesem Fall
können Sie <package>harden</package> nicht vollständig nutzen.

<p>Die harden Pakete machen eigentlich gar nichts. Zumindest nicht
direkt. Sie haben jedoch absichtliche Paket-Konflikte mit bekannten,
unsicheren Paketen. Auf diese Art wird die Paket-Verwaltung von Debian
die Installation von diesen Paketen nicht erlauben. Wenn Sie zum Beispiel
bei installiertem <package>harden-servers</package> versuchen, mit apt
einen telnet-Daemon zu installieren, werden Sie folgendes sehen:

<example>
# apt-get install telnetd 
The following packages will be REMOVED:
	harden-servers
The following NEW packages will be installed:
telnetd 
Do you want to continue (Y/n)
</example>

<p>Dies sollte im Kopf des Administrators eine Alarm-Sirene auslösen,
so dass er seine Aktion überdenken kann.

<sect>Bastille Linux

<p><url name="Bastille Linux" id="http://www.bastille-linux.org"> ist ein
automatisches Abhärtungs Tools, das ursprünglich für die
RedHat und Mandrake Linux Distributionen gedacht war. Wie auch immer: Das
Paket <package>bastille</package> aus Debian (seit Woody) ist
angepasst, um dieselbe Funktionalität unter Debian GNU/Linux
Systemen zur Verfügung zu stellen.

<p>Bastille kann mit verschiedenen Oberflächen bedient werden (Alle
sind in Ihrer eigenen Handbuch-Seite dokumentiert), die dem Administrator
erlauben:

<list>

<item>Schritt für Schritt Fragen zur erwünschten Sicherheit
Ihres Systems beantworten (siehe <manref name="InteractiveBastille"
section="8">)

<item>standard Einstellungen zur Sicherheit (zwischen lau, moderat und
paranoid) in einem bestimmten Setup (Server oder Arbeitsplatz-Rechner) zu
benutzen, und Bastille entscheiden zu lassen, welche
Sicherheits-Regelungen eingeführt werden sollen (siehe <manref
name="BastilleChooser" section="8">)

<item>eine vorgefertigte Konfigurations Datei (von Bastille oder von
einem Administrator geliefert) zu nehmen und eine vorgegeben
Sicherheits-Regelung zu benutzen (siehe <manref name="AutomatedBastille"
section="8">)

</list>

<chapt>Paket Signierung unter Debian

<p>Dieses Kapitel könnte auch mit "Wie man sein Debian GNU/Linux
System sicher upgraded/updated" überschrieben werden. Es
verdient hauptsächlich deshalb ein eigenes Kapitel, weil es in kein
anderes passt.

<p>Derzeit (Stand Dezember 2001) stellt Debian keine signierten Pakete
für die Distribution zur Verfügung, und der Woody Release (3.0)
wird diese Fähigkeiten nicht integrieren. Es gibt eine Lösung
für signierte Pakete, die - hoffentlich - in der nächsten
Release (sarge) integriert wird.

<sect>Der vorgeschlagene Plan zur Prüfung von Paket Signierungen

<p>Der derzeitige (unimplementierte) Plan zur Prüfung von Paket
Signaturen mit apt ist:

<list>
<item>Die Release-Datei enthält die md5-Summe von Packages.gz (die
die md5-Summen der Pakete enthält) und wird signiert. Die Signatur
stammt aus einer vertrauenswürdigen Quelle.

<item>Diese signierte Release-Datei wird beim "apt-get update" herunter
geladen und auf der Festplatte mit Packages.gz gespeichert.

<item>Wenn ein Paket installiert werden soll, wird es zuerst herunter
geladen, und dann wird die md5-Summe erstellt.

<item>Die signierte Release-Datei wird überprüft (ob die
Signatur okay ist) und die md5-Summe der Packages.gz Datei extrahiert.
Die md5-Summe der Packages.gz-Datei wird erstellt und geprüft, und -
wenn sie übereinstimmt - wird die md5-Summe des heruntergeladenen
Paketes aus ihr extrahiert.

<item>Wenn die md5-Summe des heruntergeladenen Paketes die gleiche ist
wie in der Packages.gz-Datei, wird das Paket installiert. Andernfalls
wird der Administrator alarmiert, und das Paket wird im Zwischenspeicher
gehalten (so dass der Administrator entscheiden kann, ob es installiert
werden soll oder nicht). Wenn das Paket nicht in Packages.gz enthalten
ist, und der Administrator das System so konfiguriert hat, dass nur
geprüfte Pakete installiert werden können, wird das Paket
ebenfalls nicht installiert.
</list>

<p>Durch diese Kette von md5-Summen ist <prgn>apt</prgn> in der Lage, zu
verifizieren, dass ein Paket aus einer bestimmten Release stammt. Dies
ist zwar unflexibler als jedes Paket einzeln zu signieren, kann aber auch
mit den unten aufgeführten Plänen kombiniert werden.

<p>Die Signierung von Paketen wurde innerhalb des Debian Projektes
ausführlich diskutiert. Mehr Informationen hierzu finden Sie unter 
<url id="http://www.debian.org/News/weekly/2001/8/"> und
<url id="http://www.debian.org/News/weekly/2000/11/">.

<sect>Alternative Einzel-Paket-Signierungs Schemata

<p>Dieses zusätzliche Schemata, jedes Paket einzeln zu signieren,
erlaubt es, Pakete zu prüfen, selbst wenn sie nicht mehr in
irgendeiner Packages-Datei erwähnt werden. Und so können auch 
Pakete von Dritten, für die es keine Packages-Datei gibt, unter Debian 
installiert werden.

<p>Dieses Paket-Signierungs Schemata kann durch
<package>debsig-verify</package> und <package>debsigs</package>
implementiert werden. Diese beiden Pakete können in der .deb-Datei
selbst eingebettete Signaturen erstellen und prüfen. Debian hat
bereits jetzt die Möglichkeiten dies zu tun, aber das Regelwerk und
die Werkzeuge hierfür werden erst nach dem Woody Release
eingeführt (um den Release-Zyklus nicht zu verlangsamen).

<p>Beachten Sie: Derzeit wird enthält
<file>/etc/dpkg/dpkg.cfg</file> derzeit standardmäßig die Option
"no-debsig".

<sect>Prüfen veröffentlichter Pakete

<p>Für den Fall, dass Sie nun zusätzliche Sicherheits
Prüfungen einführen wollen, können Sie das folgende Skript
von Anthony Towns benutzen. Dieses Skript kann automatisch neue
Sicherheits Checks durchführen, damit ein Nutzer sicher gehen kann,
dass die Software, die er/sie herunterlädt, die gleiche ist, wie
die, die von Debian bereitgestellt wird. 

<!-- This stops Debian developers from hacking into someone's
system without the accountability provided by uploading to the main archive, or
mirrors mirroring something almost, but not quite like Debian, or mirrors
providing out of date copies of unstable with known security problems.
SB20030907: accountability=Rechenschaftspflichten? Kann auch sowas meinen wie, dass
durch das Hochladen und der damit verbundenen Kontrolle zusaetzliche Sicherheit 
garantiert wird. -->

Das verhindert, dass sich ein Debian-Entwickler, der die Rechenschaftspflichten, die
durch ein Hochladen des Pakets auf das Hauptarchive entstehen, umgeht, in ein
fremdes System einhacken kann. Es kann auch verhindern, dass ein Mirror etwas fast
genau abbildet, das aber eben doch nicht ganz wie Debian ist, oder dass veraltete
Versionen von instabilen Paketen mit bekannten Sicherheitslücken zur
Verfügung gestellt werden.


<p>Dieser Beispiel-Code, umbenannt nach <prgn>apt-release-check</prgn>,
sollte auf die folgende Art benutzt werden:
<example>
# apt-get update
# apt-release-check
(... Ergebnisse ...)
# apt-get dist-upgrade
</example>

<p>Zuerst müssen Sie jedoch folgendes tun:

<list>

<item>Holen Sie sich den Schlüssel, den die Archiv-Software
verwendet, um Release-Dateien zu signieren, <url
id="http://ftp-master.debian.org/ziyi_key_2002.asc"> und fügen Sie
ihn <file>~/.gnupg/trustedkeys.gpg</file> hinzu (was standardmäßig
von von <prgn>gpgv</prgn> benutzt wird).

<item>Entfernen Sie alle Zeilen aus <file>/etc/apt/sources.list</file>,
die nicht die "dists"-Struktur benutzen, oder ändern Sie das Skript,
so dass es mit denen auch funktioniert.

<item>Ignorieren Sie die Tatsache, dass Sicherheits-Updates von Debian
keine signierten Release-Dateien haben, und das Sources-Dateien (noch)
keine richtigen Prüfsummen in der Release-Datei anbieten.

<item>Bereiten Sie sich darauf vor, zu prüfen, dass die richtigen
sources durch den richtigen Schlüssel signiert wurden.

</list>


<example>
#!/bin/bash
# This script is copyright (c) 2001, Anthony Towns
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

rm -rf /tmp/apt-release-check
mkdir /tmp/apt-release-check || exit 1
cd /tmp/apt-release-check

>OK
>MISSING
>NOCHECK
>BAD

arch=`dpkg --print-installation-architecture`

am_root () {
        [ `id -u` -eq 0 ]
}

get_md5sumsize () {
        cat "$1" | awk '/^MD5Sum:/,/^SHA1:/' | 
          MYARG="$2" perl -ne '@f = split /\s+/; if ($f[3] eq $ENV{"MYARG"}) { print "$f[1] $f[2]\n"; exit(0); }'
}
checkit () {
        local FILE="$1"
        local LOOKUP="$2"

        Y="`get_md5sumsize Release "$LOOKUP"`"
        Y="`echo "$Y" | sed 's/^ *//;s/  */ /g'`"

        if [ ! -e "/var/lib/apt/lists/$FILE" ]; then
                if [ "$Y" = "" ]; then
                        # No file, but not needed anyway
                        echo "OK"
                        return
                fi
                echo "$FILE" >>MISSING
                echo "MISSING $Y"
                return
        fi
        if [ "$Y" = "" ]; then
                echo "$FILE" >>NOCHECK
                echo "NOCHECK"
                return
        fi
        X="`md5sum < /var/lib/apt/lists/$FILE` `wc -c < /var/lib/apt/lists/$FILE`"
        X="`echo "$X" | sed 's/^ *//;s/  */ /g'`"
        if [ "$X" != "$Y" ]; then
                echo "$FILE" >>BAD
                echo "BAD"
                return
        fi
        echo "$FILE" >>OK
        echo "OK"
}

echo
echo "Checking sources in /etc/apt/sources.list:"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo
(echo "You should take care to ensure that the distributions you're downloading"
echo "are the ones you think you are downloading, and that they are as up to"
echo "date as you would expect (testing and unstable should be no more than"
echo "two or three days out of date, stable-updates no more than a few weeks"
echo "or a month)."
) | fmt
echo

cat /etc/apt/sources.list | 
  sed 's/^ *//' | grep '^[^#]' |
  while read ty url dist comps; do
        if [ "${url%%:*}" = "http" -o "${url%%:*}" = "ftp" ]; then
                baseurl="${url#*://}"
        else
                continue
        fi
        echo "Source: ${ty} ${url} ${dist} ${comps}"
        
        rm -f Release Release.gpg
        wget -q -O Release "${url}/dists/${dist}/Release"

        if ! grep -q '^' Release; then
                echo "  * NO TOP-LEVEL Release FILE"
        else
                origline=`sed -n 's/^Origin: *//p' Release | head -1`
                lablline=`sed -n 's/^Label: *//p' Release | head -1`
                suitline=`sed -n 's/^Suite: *//p' Release | head -1`
                codeline=`sed -n 's/^Codename: *//p' Release | head -1`
                dateline=`grep "^Date:" Release | head -1`
                dscrline=`grep "^Description:" Release | head -1`
                echo "  o Origin: $origline/$lablline"
                echo "  o Suite: $suitline/$codeline"
                echo "  o $dateline"
                echo "  o $dscrline"

                if [ "${dist%%/*}" != "$suitline" -a "${dist%%/*}" != "$codeline" ]; then
                        echo "  * WARNING: asked for $dist, got $suitline/$codeline"
                fi

                wget -q -O Release.gpg "${url}/dists/${dist}/Release.gpg"
                sigline="`gpgv --status-fd 3 Release.gpg Release 3>&1 >/dev/null 2>&1 | sed -n "s/^\[GNUPG:\] GOODSIG [0-9A-Fa-f]* //p"`"
                if [ "$sigline" ]; then
                        echo "  o Signed by: $sigline"
                else
                        echo "  * NO VALID SIGNATURE"
                        >Release
                fi
        fi
        okaycomps=""
        for comp in $comps; do
                if [ "$ty" = "deb" ]; then
                        X=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/binary-${arch}/Release" | sed 's,//*,_,g'`" "${comp}/binary-${arch}/Release")
                        Y=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/binary-${arch}/Packages" | sed 's,//*,_,g'`" "${comp}/binary-${arch}/Packages")
                        if [ "$X $Y" = "OK OK" ]; then
                                okaycomps="$okaycomps $comp"
                        else
                                echo "  * PROBLEMS WITH $comp ($X, $Y)"
                        fi
                elif [ "$ty" = "deb-src" ]; then
                        X=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/source/Release" | sed 's,//*,_,g'`" "${comp}/source/Release")
                        Y=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/source/Sources" | sed 's,//*,_,g'`" "${comp}/source/Sources")
                        if [ "$X $Y" = "OK OK" ]; then
                                okaycomps="$okaycomps $comp"
                        else
                                echo "  * PROBLEMS WITH component $comp ($X, $Y)"
                        fi
                fi
        done
        [ "$okaycomps" = "" ] || echo "  o Okay:$okaycomps"
        echo
  done

echo "Results"
echo "~~~~~~~"
echo

allokay=true

cd /tmp/apt-release-check
diff <(cat BAD MISSING NOCHECK OK | sort) <(cd /var/lib/apt/lists && find . -type f -maxdepth 1 | sed 's,^\./,,g' | grep '_' | sort) | sed -n 's/^> //p' >UNVALIDATED

cd /tmp/apt-release-check
if grep -q ^ UNVALIDATED; then
    allokay=false
    (echo "The following files in /var/lib/apt/lists have not been validated."
    echo "This could turn out to be a harmless indication that this script"
    echo "is buggy or out of date, or it could let trojaned packages get onto"
    echo "your system."
    ) | fmt
    echo
    sed 's/^/    /' < UNVALIDATED
    echo
fi

if grep -q ^ BAD; then
    allokay=false
    (echo "The contents of the following files in /var/lib/apt/lists does not"
    echo "match what was expected. This may mean these sources are out of date,"
    echo "that the archive is having problems, or that someone is actively"
    echo "using your mirror to distribute trojans."
    if am_root; then 
        echo "The files have been renamed to have the extension .FAILED and"
        echo "will be ignored by apt."
        cat BAD | while read a; do
            mv /var/lib/apt/lists/$a /var/lib/apt/lists/${a}.FAILED
        done
    fi) | fmt
    echo
    sed 's/^/    /' < BAD
    echo
fi

if grep -q ^ MISSING; then
    allokay=false
    (echo "The following files from /var/lib/apt/lists were missing. This"
    echo "may cause you to miss out on updates to some vulnerable packages."
    ) | fmt
    echo
    sed 's/^/    /' < MISSING
    echo
fi

if grep -q ^ NOCHECK; then
    allokay=false
    (echo "The contents of the following files in /var/lib/apt/lists could not"
    echo "be validated due to the lack of a signed Release file, or the lack"
    echo "of an appropriate entry in a signed Release file. This probably"
    echo "means that the maintainers of these sources are slack, but may mean"
    echo "these sources are being actively used to distribute trojans."
    if am_root; then 
        echo "The files have been renamed to have the extension .FAILED and"
        echo "will be ignored by apt."
        cat NOCHECK | while read a; do
            mv /var/lib/apt/lists/$a /var/lib/apt/lists/${a}.FAILED
        done
    fi) | fmt
    echo
    sed 's/^/    /' < NOCHECK
    echo
fi

if $allokay; then
    echo 'Everything seems okay!'
    echo
fi

rm -rf /tmp/apt-release-check
</example>

<chapt>Sicherheits-Tools in Debian

<p>FIXME: More content needed.
<p>Debian stellt außerdem einige Sicherheits-Tools zur Verfügung,
die eine Debian-Maschine passend zu Test-Zwecken erweitern. Manche von
ihnen sind erhältlich, wenn Sie das Paket <package>harden-remoteaudit</package>
installieren.

<sect id="vuln-asses">Tools zur Fern-Prüfung der Verwundbarkeit

<p>Die Werkzeuge, um Fern-Prüfungen der Verwundbarkeit
durchzuführen, sind unter Debian:
<list>
<item>nessus
<item>raccess
<item>whisker 
<item>nikto (whisker Ersatz)
<item>bass (non-free)
<item>satan (non-free)
<!-- currently uploaded but not included
<item>saint (non-free)
-->
</list>

<p>Das weitaus verständigste und aktuellste Tool ist
<package>nessus</package>, welches aus einem Client
(<package>nessus</package>) mit graphischer Benutzungsschnittstelle und
einem Server (<package>nessusd</package>), der die programmierten
Attacken startet, besteht. Nessus kennt verschiedene
Fern-Verwundbarkeiten für einige Systeme, einschließlich Netzwerkanwendungen,
FTP-Servern, WWW-Servern, usw. Die letzten Releases sind
sogar in der Lage, eine Web-Seite zu analysieren und zu versuchen,
interaktive Inhalte, die zu einem Angriff genutzt werden können, zu
entdecken. Es existieren auch Java und Win32 Clients, die benutzt werden können,
um den Nessus-Server zu kontaktieren. Diese sind jedoch in Debian nicht enthalten.

<p><package>Whisker</package> ist ein Scanner zur Aufdeckung von Schwachstellen
bei Webservern und kennt auch einige anti-IDS Taktiken (die meisten davon
sind keine <em>Anti-IDS</em> Taktiken mehr). Es ist einer der besten
verfügbaren CGI-Scanner zur Erkennung von WWW-Servern und kann nur
bestimmte Angriffe gegen ihn starten. Die Datenbank, die zum Scannen benutzt wird,
kann sehr leicht geändert werden, um neue Informationen einzufügen.

<p><package>Bass</package> (Bulk Auditing Security Scanner) 
und <package>Satan</package> (Security Auditing Tool for Analysing Networks)
müssen mehr als "Beweis des Konzeptes"-Programme angesehen werden
statt als Tools, die Sie während einer Prüfung nutzen sollten.
Beide sind eher veraltet und werden nicht auf dem aktuellsten Stand
gehalten. Wie auch immer: SATAN war das erste Tool, das eine
Gefahrenabschätzung auf eine einfache Art (GUI) zur Verfügung
stellte, und Bass ist immer noch ein hochperformantes
Prüfwerkzeug.

<sect>Tools zum Scannen von Netzwerken

<p>Debian bietet Ihnen einige Tools zum Scannen von Hosts (aber nicht zur
Gefahrenabschätzung). Diese Tools werden in manchen Fällen
von Gefahrenabschätzungs-Scannern zu einem ersten "Angriff" gegen
entfernte Rechner genutzt, um festzustellen, welche Dienste angeboten
werden. Unter Debian sind verfügbar:
<list>
<item>nmap
<item>xprobe
<item>queso
<item>knocker
<item>hping2
<item>isic
<item>icmpush
<item>nbtscan
</list>

<p>Während <package>queso</package> und <package>xprobe</package>
lediglich aus der Ferne das Betriebssystem erkennen können (indem
sie TCP/IP Fingerabdrücke benutzen), machen <package>nmap</package>
und <package>knocker</package> beides: Das Betriebssystem erkennen und
die Ports eines entfernt stehenden Rechners scannen. Andererseits
können <package>hping2</package> und <package>icmpush</package>
für ICMP-Angriffs-Techniken benutzt werden.

<p>Speziell für Netbios-Netzwerke entworfen, kann
<package>nbtscan</package> benutzt werden, um IP-Netzwerke zu scannen und
diverse Informationen von SMB-Servern zu ermitteln, einschließlich:
Usernamen, Netzwerknamen, MAC-Adressen...

<sect>Interne Prüfungen

<p>Derzeit kann lediglich das <package>tiger</package> Tool benutzt
werden, um interne Prüfungen (auch "white box" genannt) eines
Rechners vorzunehmen. Dabei wird festgestellt, ob das Dateisystem richtig
aufgesetzt ist, welche Prozesse auf dem Rechner horchen, usw.

<sect>Testen von Quellcode

<p>Debian bietet zwei Pakete an, die C/C++ Quellcode prüfen und
Programmierfehler, die zu möglichen Sicherheitsmängeln
führen können, finden:
<list>
<item>flawfinder
<item>rats
</list>

<sect>Virtual Private Networks (virtuelle, private Netzwerke)

<p>FIXME: Content needed

<p>Debian enthält einige Pakete, die zum Aufsetzen von
verschlüsselten, virtuellen, privaten Netzwerken verwendet werden
können:

<list>

<item><package>vtun</package>
<item><package>tunnelv</package>
<item><package>cipe</package>
<item><package>vpnd</package>
<item><package>tinc</package>
<item><package>secvpn</package>
<item><package>pptp</package>
<item><package>freeswan</package>

</list>

<p>Das FreeSWAN Paket ist wahrscheinlich die beste Wahl, da es nahezu
mit allem zusammenarbeiten kann, das das IP Security Protokoll
(IPsec RFC 2411) benutzt, aber die anderen Pakete können Ihnen
helfen, möglichst schnell einen Tunnel aufzusetzen. PPTP ist ein eigenes
Protokoll von Microsoft für VPN. PPTP wird unter Linux unterstützt, aber
es sind dafür einige schwere Sicherheitsprobleme bekannt.

<p>Für mehr Informationen über IPsec und PPTP lesen Sie bitte das <url
id="http://www.linuxdoc.org/HOWTO/VPN-Masquerade-HOWTO.html"name="VPN-Masquerade
HOWTO">, über PPP über SSH das <url
id="http://www.linuxdoc.org/HOWTO/VPN-HOWTO.html"name="VPN HOWTO">, das
 <url
id="http://www.linuxdoc.org/HOWTO/mini/Cipe+Masq.html" name="Cipe
mini-HOWTO"> und das <url
id="http://www.linuxdoc.org/HOWTO/mini/ppp-ssh/index.html"name="PPP and
SSH mini-HOWTO">.


<sect>Öffentliche Schlüssel Infrastrukturen (Public Key
Infrastructure, PKI)

<p>Wenn Sie über die Einrichtung einer PKI nachdenken, sehen Sie sich mit
einer breiten Palette von Tools konfrontiert:

<list>
<item>Eine Zertifizierungsstelle (Certification Authority, CA), die Zertifikate ausgeben und
unter einer bestimmten Hierarchie arbeiten kann

<item>Ein Verzeichnis, das die öffentlichen Zertifikate
enthält

<item>Eine Datenbank, um die Widerrufe von Zertifikaten zu verwalten

<item>Geräte, die mit der CA zusammenarbeiten, um Smartcards/USB
Token/wasauchimmer zu erzeugen und die Zertifikate sicher zu speichern

<item>Applikationen, die die von einer CA ausgegebenen Zertifikate benutzen
können, um verschlüsselte Kommunikation zu etablieren und
bestimmte Zertifikate gegen Widerruf-Listen zu prüfen (zur
Authentifizierung und so gennante "full Single Sign On solutions")

<item>Eine Zeitstempel-Autorität, um Dokumente digital zu signieren

<item>Eine Verwaltungskonsole, von der aus dies alles vernünftig
benutzt werden kann (Erstellung von Zertifikaten, Kontrollieren von
Widerruflisten, usw...)

</list>

<p>Sie können einige Software aus Debian GNU/Linux hierfür
benutzen, einschließlich OpenSSL (zur Zertifikaterstellung), OpenLDAP
(für ein Verzeichnis, um die Zertifikate zu speichern), GnuPG und
FreeSWAN (mit X.509 Unterstützung). Jedoch stellt dieses
Betriebssystem (zur Woody Release 3.0) keine der frei verfügbaren
Certificate Authorities wie zum Beispiel pyCA <url
id="http://www.openca.org" name="OpenCA"> oder die CA Beispiele von
OpenSSL zur Verfügung. Für weitere Informationen lesen Sie bitte das <url
id="http://ospkibook.sourceforge.net/" name="Open PKI Buch">.

<sect>SSL Infrastruktur

<p>Debian stellt einige SSL-Zertifikate innerhalb der Distribution zur
Verfügung, so dass Sie sie lokal installieren können. SSL-Zertifikate
werden in <package>ca-certificates</package> weiter verteilt.
Dieses Paket stellt eine zentrale Sammelstelle für Zertifikate dar,
die an Debian übermittelt und vom Paketverwalter gebilligt (das
heißt, verifiziert) wurden.

<p>FIXME: read debian-devel to see if there was something added to this.


<sect>Anti-Viren Tools
<p>Es gibt nicht sehr viele Anti-Viren Tools in Debian, wahrscheinlich
weil GNU/Linux User zur Zeit nicht so sehr von Viren belästigt
werden. Es existieren dennoch Würmer und Viren für GNU/Linux, auch
wenn es (bisher) keinen Virus gab, der sich im Freien weit über
irgendeine Debian Distribution verbreitet hat. Wie dem auch sei, Administratoren
sollten vielleicht Anti-Viren Gateways aufbauen, um mehr verwundbare Systeme in
ihrem Netzwerk gegen Viren schützen.

<p>Debian bietet derzeit die folgenden Tools zum Erstellen von Anti-Viren
Umgebungen an:

<list>
<item><url id="http://packages.debian.org/sanitizer" name="sanitizer">,
ein Tool, das dazu benutzt werden kann, um E-Mails von Procmail zu filtern und
Viren zu entfernen

<item><url id="http://packages.debian.org/amavis-postfix"
name="amavis-postfix">, ein Skript, das eine Schnittstelle vom
Mail-Transport-Agent zu einem oder mehreren Viren-Scannern anbietet
(dieses Paket ist lediglich für den MTA <package>postfix</package> bestimmt).
</list>

<p>Wie Sie sehen, enthält Debian selbst derzeit keine Anti-Viren Software.
Es gibt jedoch freie Anti-Viren Projekte, die (in der Zukunft)
in Debian einfließen könnten:
<url id="http://sourceforge.net/projects/openantivirus/" name="openantivirus">
und 
<url id="http://sourceforge.net/projects/jvirus/" name="jvirus"> (dies
ist weniger wahrscheinlich, da es komplett auf Java basiert).
Außerdem wird Debian nie kommerzielle Anti-Viren Software enthalten, wie
die folgende:
<url id="http://www.pandasoftware.com/com/linux/linux.asp" name="Panda Antivirus">,
<url id="http://www.nai.com/naicommon/buy-try/try/products-evals.asp" name="NAI Netshield (uvscan)">,
<url id="http://www.sophos.com/" name="Sophos Sweep">,
<url id="http://www.antivirus.com/products/" name="TrendMicro Interscan">,
<url id="http://www.ravantivirus.com" name="RAV">....

Weitere Links finden Sie unter der <url
id="http://www.computer-networking.de/~link/security/av-linux_e.txt"
name="Linux anti-virus software mini-FAQ">.

<p>Zusätzliche Informationen über das Aufsetzen eines Virenerkennungs-
Systems erhalten Sie in dem Artikel
<url id="http://www.linuxjournal.com/article.php?sid=4882"
name="Building an E-mail Virus Detection System for Your Network"> von Dave Jones.

<chapt>Vor einer Kompromittierung

<sect id="intrusion-detect">Aufsetzen einer Eindringlings-Erkennung

<p>Debian enthält verschiedene Tools zur Erkennung von
Eindringlingen, die Sie vielleicht dazu benutzen wollen, Ihr lokales
System zu verteidigen (wenn Sie wirklich paranoid sind oder Ihr System
wirklich kritische ist) oder um andere Systeme im gleichen Netzwerk zu
verteidigen.

<p>Beachten Sie immer, dass Sie, um Ihre System-Sicherheit mit einer
dieser Tools wirklich zu verbessern, einen Alarm-und-Antwort-Mechanismus
brauchen Benutzen Sie also keinen Eindringlings-Erkennung, wenn sie
niemanden alarmieren werden (d.h. verschwenden Sie nicht Ihre Zeit damit,
Dinge zu konfigurieren, die Sie später nicht benutzen werden).

<p>Die meisten Eindringlings Erkennungs Tools werden entweder auf Syslog
protokollieren oder E-Mails, über einen bestimmten erkannten Angriff,
an den Root-User senden (die meisten können umkonfiguriert werden,
um stattdessen einem anderen User E-Mails zu schicken). Ein Administrator
muss sie passend konfigurieren, so dass falsche Positivmeldungen keinen
Alarme auslösen, und so diesen Alarmen die notwendige Aufmerksamkeit
geschenkt wird. Alarme können auf einen laufenden Angriff hindeuten
und wären - sagen wir mal einen Tag - später nicht mehr
nützlich, da der Angriff dann bereits erfolgreich beendet worden
sein kann. Stellen Sie also sicher, dass es eine passende Regelung
über die Behandlung von Alarmen gibt, und das technische Maßnahmen
zur Handhabung statt finden.

<p>Eine Interessante Quelle für Information ist
<url id="http://www.cert.org/tech_tips/intruder_detection_checklist.html"
name="CERT's Intrusion Detection Checklist">

<sect1>Netzwerk basierende Eindringlings Erkennung

<p><package>Snort</package> ist ein flexibler Packet Schnüffler oder
logger, der Angriffe durch Nutzen einer Angriffs-Signatur-Bibliothek
erkennt. Es erkennt eine breite Palette von Angriffen und Tests, wie zum
Beispiel Speicher-Überläufe, stealth Port scans, CGI Angriffe,
SMB Tests und vieles mehr. Dies ist in Tool, das auf jedem Router
installiert werden sollte, um ein Auge auf Ihrem Netzwerk zu haben.
Installieren Sie es einfach mit <tt>apt-get install snort</tt>, folgen
Sie den Fragen und beobachten Sie die logs.

<p>Debians Snort kommt mit vielen eingeschalteten Sicherheits Checks, die
Sie vielleicht haben möchten, jedoch sollten Sie das Setup anpassen,
um bestimmte Dienste auf Ihrem System zu berücksichtigen. Sie
möchten vielleicht auch zusätzliche Tests speziell für
Ihre Dienste nutzen.

<p>Sie können <prgn>snort</prgn> sowohl dazu benutzen, eine
Netzwerk-Eindringlings-Erkennung für viele Hosts in Ihrem Netzwerk
zu etablieren, als auch um Angriffe gegen Ihren eigenen Host zu erkennen.

<p>Es gibt noch andere Tools, die dazu benutzt werden können,
Netzwerk Angriffe zu erkennen (sogar einfacherere).
<package>Portsentry</package> ist ein anderes interessantes Paket, dass
Sie warnen kann, wenn jemand Ihre Seite scannt. Andere Tools, wie
<package>ippl</package> oder <package>iplogger</package> erkennen
außerdem bestimmte IP (TCP und ICMP) Angriffe, auch wenn Sie keine
fortgeschrittenen Techniken zur Erkennung von Netzwerk Angriffen haben
(was snort kann).

<p>Sie können jedes dieser Tools mit dem <prgn>idswakeup</prgn>
Programm testen. Hierbei handelt es sich um einen Falsch-Positiv
Generator, der NIDS mit einer Auswahl der üblichen unter Debian
verfügbaren Angriffs-Signaturen alarmiert.

<sect1>Host basierende Erkennung 

<p><package>Tiger</package> ist ein bewährtes Eindringlings
Erkennungs Tools, dass seit der Woody Distribution auf Debian portiert
wurde. Tiger bietet Tests von allgemein üblichen Dingen, in Bezug
auf Einbrüche, Tests der Passwort-Stärke, Dateisystem Probleme,
kommunizierende Prozesse.... Die Debian Version umfasst neue, Debian
spezifische Tests: md5-Summen von vorhandenen binaries, und Test auf
installierte und verwundbare Pakete. Die standard Installation lässt
<prgn>tiger</prgn> jeden Tag einmal laufen und einen Report erstellen,
der an den Superuser geschickt wird. Die erstellten Reports können
Informationen zu einer geglückten Kompromittierung geben.

<p>Protokoll-Analyse Tools, wie zum Beispiel <package>logcheck</package>
können zusätzliche benutzt werden, wenn Sie angepasst wurden,
um Eindring-Versuche zu erkennen. Siehe <ref id="custom-logcheck">.

<p>Außerdem kann jeder der Dateisystem-Integritäts-Checker (siehe
<ref id="check-integ">) können sehr nützlich sein, um Anomalien
in einer abgesicherten Umgebung zu erkennen. Ein erfolgreicher
Eindringling wird mit höchster Sicherheit Dateien auf dem lokalen
Dateisystem verändern, um die lokalen Sicherheits Regelungen zu
umgehen, Trojaner zu installieren, eigene User zu erstellen... solche
Sachen können mit ihnen erkannt werden.


<sect id="kernel-patches">nützliche Kernel-Patches

<p>FIXME: This section needs to cover how these specific patches
can be installed in Debian using the kernel-2.x.x-patch-XXX packages.
</p>

<p>Es gibt einige Kernel-Patches, die die System-Sicherheit signifikant
erhöhen. Hier sind einige davon aufgezählt:

<list>

<item>OpenWall Patch von Solar Designer. Sinnvoll für
Einschränkungen auf Kernel-Ebene, zum Beispiel bei Links, FIFOs in
<file>/tmp</file>, Einschränkungen von <file>/proc</file>, die
Behandlung spezieller Datei Deskriptoren, nicht-ausführbarer
Teil des User-Stack und noch mehr.

Homepage: <url name="http://www.openwall.com/linux/" id="http://www.openwall.com/linux/">

<item><em>LIDS &mdash; Linux intrusion detection system von Huagang Xie &amp;
Philippe Biondi</em>.  Dieser Patch macht es einfacher, ein sicheres
Linux System zu erstellen. Sie können jeden Prozess
einschränken, ihm bestimmte Rechte zum lesen und Schreiben von
Dateien gewähren, oder die Fähigkeit Dateien zu lesen ganz
entfernen. Weiterhin können Sie bestimmte einem Prozess auf
Ressourcen beschränken. Auch wenn er sich noch in der Beta-Phase
befindet, ist er fast schon ein Muss für den paranoiden
System-Administrator.

Homepage: <url name="http://www.lids.org" id="http://www.lids.org">

<item><em>POSIX Access Control Lists (ACLs) for Linux</em> Dieser Patch
führt Listen zur Zugangs Kontrolle (Access Control Lists (ACLs)),
eine fortgeschrittene Methoden die Zugriffe auf Dateien zu
beschränken, in den Linux Kernel ein.

Homepage: <url name="http://acl.bestbits.at/" id="http://acl.bestbits.at/">

<item><em>Linux trustees</em> Dieser Patch bringt ein anständig
erweitertes Rechte-System für Ihrem Linux Kernel. All die Objekte
werden im Kernel-Speicher abgelegt, was eine schnelles nachschlagen aller
Zugriffsrechte erlaubt.

Homepage:  <url name="http://trustees.sourceforge.net/" id="http://trustees.sourceforge.net/">

<item><em>International kernel patch</em>  Dies ist ein
Kryptographie-Patch für den Kernel, demzufolge müssen Sie die
jeweiligen Richtlinien des Landes über Verschlüsselung
beachten. Er stellt die grundlegenden Funktionen für
verschlüsselte Dateisysteme zur Verfügung.

Homepage: <url name="http://www.kerneli.org" id="http://www.kerneli.org">

<item><em>SubDomain</em> Eine Kernel Erweiterung um sicherere und
einfacher bedienbare Chroot-Umgebungen aufzusetzen. Sie können alle
Dateien, die ein Dienst in einer chroot-Umgebung benötigt, manuell angeben,
und müssen so die Dienste nicht statisch compilieren.

Homepage: <url name="http://www.immunix.org/subdomain.html" id="http://www.immunix.org/subdomain.html">

<item><em>UserIPAcct</em> Eigentlich nicht wirklich Sicherheits relevant
erlaubt dieser Patch es Ihnen, Quotas für den Traffic auf Ihrem
Server pro User einzuführen. Zusätzlich können Sie
Statistiken über den Traffic eines Users erstellen.

Homepage: <url id="http://ramses.smeyers.be/useripacct">.

<item><em>FreeS/WAN</em> Wenn Sie unter Linux IPSec benutzen wollen,
benötigen Sie diesen Patch. Sie können dann leicht VPNs
erstellen, sogar zu Windows-Maschinen, da IPSec ein gemeinsamer Standard
ist.

Homepage: <url id="http://www.freeswan.org">

</list>

<sect>Vermeiden von Root-Kits
<p>

<sect1 id="LKM">LKM - Ladbare Kernel-Module

<p>LKM (Loadable Kernel Modules) sind Dateien, die nachladbare Teile des
Kernels enthalten. Sie werden dynamisch in den Kernel geladen und
führen bestimmte Aufgaben aus. Unter GNU/Linux werden sie dazu
benutzt, die Funktionalität des Kernels zu erweitern. Wenn Sie LKMs
benutzen, genießen Sie einige Vorteile. Wie wir gesehen haben, können
Sie dynamisch nachgeladen werden, ohne dass der Kernel neu kompiliert
werden muss. Sie können bestimmte Geräte-Treiber (oder
Dateisysteme) und Treiber für andere Hardware, wie Sound- oder
Netzwerk-Karten, enthalten. Aber manche Cracker können LKMs für
Root-Kits (knark oder adore) benutzen, um auf GNU/Linux Systemen
Hinter-Türen zu installieren.

<p>LKM Root-Kits können Prozesse, Dateien, Verzeichnisse und sogar
Verbindungen verstecken, ohne den Quellcode irgendeines Binaries
verändern zu müssen. Zum Beispiel kann <prgn>ps</prgn> Prozess
Informationen aus <file>/proc</file> beziehen, ein bösartiges LKW
kann den Kernel untergraben, so dass er einen bestimmten Prozess vor dem
procfs verheimlicht. So kann noch nicht einmal eine selbst erstellte,
unangetastete Kopie des <prgn>ps</prgn> Binary alle Prozess Informationen
korrekt auflisten.

<sect1>Erkennen von Root-Kits

<p>Die Sucharbeit kann einfach und schmerzlos sein, oder schwierig und
ermüdend, ganz abhängig von der Maßnahme, die Sie benutzen. Es
gibt zwei Verteidigungs-Maßnahme zur Sicherheit bei LKMs, die pro-aktive,
und die reaktive.

<sect2>Pro-aktive Verteidigung

<p>Der Vorteil dieser Verteidigung ist, dass hier verhindert wird, dass
einige LKM Root-Kits dem System schaden. Die meist genutzte pro-aktive
Verteidigung ist es, <em>das Ziel zuerst zu erreichen</em>, also ein LKM
zu laden, das dazu da ist, das System vor Schaden durch ein
böswilliges LKM zu schützen. Eine andere Maßnahme ist es, dem
Kernel Fähigkeiten zu entziehen, und so das System sicherer zu
machen. Zum Beispiel können Sie dem Kernel die Fähigkeit
entziehen, Kernel-Module zu laden oder zu entfernen.

<p>Sie können auf Debian Systeme einige Pakete finden, die
Pro-aktive-Tools enthalten:

<list>
<item> <package>kernel-patch-2.4-lsm</package> - LSM ist das Linux Security
Modules framework

<item> <package>lcap</package> - Eine benutzerfreundliche Schnittstelle,
um dem Kernel <em>Fähigkeiten</em> zu entziehen (Kernel-basierte
Zugriffs-Kontrolle), um das System sicherer zu machen. Führen Sie
<tt>lcap CAP_SYS_MODULE</tt> 
<footnote>
Es gibt über 28 Fähigkeiten einschließlich:
<tt>CAP_BSET</tt>,
<tt>CAP_CHOWN</tt>,
<tt>CAP_FOWNER</tt>,
<tt>CAP_FSETID</tt>,
<tt>CAP_FS_MASK</tt>,
<tt>CAP_FULL_SET</tt>,
<tt>CAP_INIT_EFF_SET</tt>,
<tt>CAP_INIT_INH_SET</tt>,
<tt>CAP_IPC_LOCK</tt>,
<tt>CAP_IPC_OWNER</tt>,
<tt>CAP_KILL</tt>,
<tt>CAP_LEASE</tt>,
<tt>CAP_LINUX_IMMUTABLE</tt>,
<tt>CAP_MKNOD</tt>,
<tt>CAP_NET_ADMIN</tt>,
<tt>CAP_NET_BIND_SERVICE</tt>,
<tt>CAP_NET_RAW</tt>,
<tt>CAP_SETGID</tt>, 
<tt>CAP_SETPCAP</tt>,
<tt>CAP_SETUID</tt>,
<tt>CAP_SYS_ADMIN</tt>,
<tt>CAP_SYS_BOOT</tt>,
<tt>CAP_SYS_CHROOT</tt>,
<tt>CAP_SYS_MODULE</tt>,
<tt>CAP_SYS_NICE</tt>,
<tt>CAP_SYS_PACCT</tt>,
<tt>CAP_SYS_PTRACE</tt>,
<tt>CAP_SYS_RAWIO</tt>,
<tt>CAP_SYS_RESOURCE</tt>,
<tt>CAP_SYS_TIME</tt>, and
<tt>CAP_SYS_TTY_CONFIG</tt>. Alle können aktiviert oder deaktiviert
werden, um Ihren Kernel abzusichern.
</footnote>
aus, um sogar als Root-User keine Module mehr laden zu können.
<footnote>
Um dies tun zu können, müssen Sie nicht <package>lcap</package>
installieren, aber es ist so einfacher, als mit der Hand
<file>/proc/sys/kernel/cap-bound</file> anzupassen.
</footnote>
</list>

<p>Wenn Sie diese vielen Möglichkeiten auf Ihrem GNU/Linux System
nicht brauchen, möchten Sie vielleicht die Unterstützung
für ladbare Module während der Kernel Konfiguration abschalten.
So werden LKM Root-Kits vermieden, aber Sie können keinen
modulare Kernel benutzen. Beachten Sie auch, dass durch das Abschalten
der nachladbaren Module der Kernel überladen werden kann. Manchmal
ist dies nicht notwendig.

<p>Um die Unterstützung für nachladbare Module abzuschalten,
setzen Sie einfach CONFIG_MODULES=n in <file>.config</file>.

<sect2>Reaktive Verteidigung

<p>Der Vorteil reaktiver Verteidigung ist, dass das die System Ressourcen
weniger überlädt. Sie funktioniert durch das Vergleichen von einer Tabelle
für System-Aufrufe mit einer bekanntermaßen sauberen Kopie 
(System.map). Der augenscheinliche Nachteil ist, dass der
Systemadministrator erst davon erfährt, wenn das System bereits
kompromittiert wurde.

<p>Die Entdeckung von Root-Kits vollbringt unter Debian
<package>chkrootkit</package>. Das Programm <url name="Chkrootkit"
id="http://www.chkrootkit.org"> prüft Anzeichen von Root-Kits auf
dem lokalen System und stellt fest, ob der Computer mit einem Root-Kit
infiziert ist.

<p>Sie können auch <url name="KSTAT"
id="http://www.s0ftpj.org/en/site.html"> (Kernel Security Therapy Anti
Trolls) von S0ftproject group benutzen. KSTAT prüft den Bereich des
Kernel-Speichers (<file>/dev/kmem</file>) auf Informationen über den
Ziel Host, einschließlich der Installation von ladbaren
Kernel-Modulen.

<P>FIXME: Add info on how to compile the kernel w/o lkm support?


<sect>geniale/paranoide Ideen &mdash; was Sie tun können

<p>Dies ist wahrscheinlich der instabilste und lustigste Abschnitt, da
ich hoffe, dass manche der "Wow, das klingt verrückt" Ideen
realisiert werden. Nachfolgend einer Liste von ein paar Ideen &mdash;
abhängig von Ihrem Standpunkt aus können Sie sie für
genial, paranoid, verrückt oder sicher halten &mdash; um Ihre
Sicherheit schnell zu erhöhen. Unbeschädigt werden Sie sie aber
nicht überstehen.

<list>
<item>Mit PAM herum spielen. Wie in einem phrack 56 Artikel geschrieben:
Das schöne an PAM ist, dass "Ihrer Fantasie keine Grenzen
gesetzt sind." Das stimmt. Stellen Sie sich vor, Root kann sich nur mit
einen Fingerabdruck, oder Augen-Scan oder einer Kryptocard einloggen
(Warum habe ich hier nur "oder" und nicht "und" gesagt?).

<item>Faschistisches Logging. Ich würde sagen, dass alles, was wir
bisher über Logging besprochen haben, unter "weiches Loggen"
fällt. Wenn Sie echtes Logging betreiben wollen, besorgen Sie sich
einen Drucker mit Endlos-Papier, und loggen Sie alles dauerhaft, indem
Sie es drucken. Hört sich lustig an, ist aber zuverlässig und
kann nicht entfernt werden.

<item>CD Distribution. Diese Idee ist sehr leicht zu realisieren und
bewirkt ganz gute Sicherheit. Erstellen Sie eine abgesicherte Debian
Distribution, mit passenden Firewall-Regeln, erstellen Sie ein ISO-Image
und brennen Sie es auf CD. Machen Sie die CD bootbar. Dies ist eine nur
lesbare Distribution mit etwa 600 MB Platz für Dienste, und es ist
unmöglich für einen Eindringling Schreibzugriff auf dieses
System zu erhalten. Stellen Sie lediglich sicher, dass alle Daten, die
geschrieben werden sollen, über Netz gesichert werden. So kann der
Eindringling jedenfalls nicht die Firewall-Regeln oder
Routing-Einträge ändern, oder eigene Daemonen starten
(natürlich kann er es, aber wenn Sie neu booten, muss er sich erneut
in Ihr System hacken, um die Änderungen vorzunehmen).

<item>Schalten Sie die Modul-Fähigkeiten des Kernels ab. Wenn Sie
die Nutzung von Kernel-Modulen während der Kernel-Kompilierung
abschalten, werden viele Kernel basierende Hinter-Türen nicht
einsetzbar, da die meisten von ihnen darauf basieren, ein modifiziertes
Kernel Modul zu installieren.

<item>Loggen über ein serielles Kabel (von Gaby Schilders). So lange
Server immer noch serielle Schnittstellen haben: Stellen Sie sich vor, Sie
hätten eine Maschine als Log-Maschine, vom Netz abgeschnitten. In
der Mitte einen Multiplexer für serielle Schnittstellen (zyklisch
oder so). Jetzt sollen alle Ihre Server über Ihre seriellen
Schnittstellen loggen. Einfach nur hinschreiben. Die Log-Maschine
akzeptiert nur einfachen Text als Eingabe auf seiner seriellen
Schnittstelle und schreibt es lediglich in eine Log-Datei. Schließen Sie
einen CD- oder DVD-Brenner an. Wenn die Log-Datei 600MB erreicht wird sie
auf CD-ROM geschrieben. Wenn es jetzt nur noch CD-Brenner mit
automatischem Medien-Wechsel gäbe... Nicht so dauerhaft gespeichert
wie ein Ausdruck, aber man kann größere Mengen handhaben, und die
CDs nehmen nicht so viel Platz weg.

<item>Setzen Sie den ganzen Kram auf "immutable" (dem Tips-HOWTO von Jim
Dennis entnommen). Gerade nachdem Sie Ihr System installiert und
konfiguriert haben, gehen Sie durch <file>/bin</file>, <file>/sbin/</file>,
<file>/usr/bin</file>, <file>/usr/sbin</file> und <file>/usr/lib</file>
(und ein paar andere von den üblichen Verdächtigen) und gehen
Sie freizügig mit <prgn>chattr +i command</prgn> um. Machen Sie dies
auch mit den Kernel Dateien. Nun <prgn>mkdir /etc/.dist/</prgn>, und
kopieren Sie alles von <file>/etc/</file> an abwärts dort hinein
(ich mach das in zwei Schritten, indem ich ein
<file>/tmp/etcdist.tar</file> benutze, um Rekursionen zu vermeiden).
(Optional können Sie auch einfach nur ein
<file>/etc/.dist.tar.gz</file> erstellen) -- und markieren Sie alles als
"immutable".

<p>Der Grund für all dies ist, den Schaden zu begrenzen, den Sie
anrichten können, wenn Sie als root eingeloggt sind. Sie können
keine Dateien mit einer fehlgeleiteten Umleitung überschreiben, und
Sie werden Ihr System nicht durch ein fehl-platziertes Leerzeichen im
<prgn>rm -fr</prgn> Kommando unbenutzbar machen (Sie können aber
Ihren Daten immer noch einigen Schaden zufügen &mdash; aber Ihre
Bibliotheken und Programme sind sicherer).

<p>Dies macht auch verschiedene Sicherheits- und Denial-of-Service
Exploits entweder unmöglich oder weitaus schwieriger (da viele von
ihnen darauf beruhen, Dateien durch die Aktionen von SUID Programmen, die
<em>isn't providing an arbitrary shell command</em><!--todo:
uebersetzen-->, zu überschreiben).

<p>Die einzige Unbequemlichkeit dabei ist es, wenn Sie irgendetwas bauen
und ein <prgn>make install</prgn> auf verschiedene System-Binaries
machen. Auf der anderen Seite verhindert dies auch, dass <prgn>make
install</prgn> Dateien überschreibt. Wenn Sie vergessen, das
Makefile zu lesen und die Dateien, die überschrieben werden sollen
mit chattr -i zu behandeln (und die Verzeichnisse, in denen Sie neue
Dateien erstellen wollen) &dash; schlägt das make fehl, Sie
müssen nur das chattr Kommando ausführen und make neu aufrufen.
Sie können diese Gelegenheit gleich dazu benutzen, Ihre alten bin's,
libs oder was-auch-immer in ein .old-Verzeichnis zu sichern, oder
umzubenennen, oder sie zu tarnen, oder sowas.

<p>Beachten Sie, dass dies Sie auch daran hindert, die Pakete Ihres
Systems zu aktualisieren, da die Dateien aus den Paketen nicht
überschrieben werden können. Also möchten Sie vielleicht
einen Mechanismus, der das immutable-Flag auf allen Dateien deaktiviert,
bevor Sie ein <prgn>apt-get update</prgn> ausführen.


</list>


<sect1>Aufstellen eines Honigtopfes (honeypot)

<p>FIXME: More Content specific to Debian needed.

<p>Wenn Sie wollen (und es implementieren können und ihm Zeit widmen
können), können Sie einen vollen Honeypot mit einem Debian
GNU/Linux System aufsetzen. Sie haben alle benötigten Werkzeuge, um
einen allumfassendes Honeynet aufzubauen (d.h. das Netzwerk, der Honeypot
ist lediglich ein falsche Server): Die Firewall, das Netzwerk
Eindringlings-Erkennungs-System, und den falschen Server. Seien Sie aber
vorsichtig, Sie müssen ziemlich sicher sein, dass Sie rechtzeitig
alarmiert werden (siehe <ref id="log-alerts">), so dass Sie geeignete
Maßnahmen einleiten können und die Kompromittierung, sobald Sie
genug gesehen haben, beenden können.

<list>

<item>Die Notwendige Firewall-Technologie (durch den Linux-Kernel
verfügbar)

<item><package>syslog-ng</package> um die Logs des Honeypot zu dem
fern-Syslog einer Server-Maschine zu schicken.

<item><package>snort</package> um allen eingehenden Netzwerk Verkehr auf
den Honeypot mit zuschneiden und Angriffe zu erkennen

<item><package>osh</package> das Sie dazu benutzen können, um eine
eingeschränkte Shell mit Protokoll zu bauen (siehe den Artikel von
Lance Spitzner weiter unten)

<item>Natürlich alle Server, die Ihnen einfallen für die
falschen Server des Honeypots (aber sichern Sie <em>nicht</em> den
Honeypot).

<item>und falsche Dienste, verfügbar durch <package>dtk</package>,
wenn Sie das Honeynet auch als Eindringlings-Erkennungs-Dienst benutzen
wollen.

<item>Integritäts Prüfer (siehe <ref id="check-integ">) und The
Coroner's Toolkit (<package>tct</package>), um nach dem Angriff eine
Analyse durchzuführen.

</list>

<p>Sie können mehr über das Aufstellen von Honeypots in Lanze
Spitzners exzellentem Artikel <url
id="http://www.net-security.org/text/articles/spitzner/honeypot.shtml"
name="To Build a Honeypot"> (aus der Know your Enemy Serie) oder
David Raikow's <url
id="http://www.zdnetindia.com/techzone/resources/security/stories/7601.htm"
name="Building your own honeypot"> lesen.
Außerdem ist das <url id="http://project.honeynet.org/" name="Honeynet
Project"> dem Aufstellen von Honeypots und der Analyse von Angriffen auf
sie gewidmet. Dort gibt es wertvolle Informationen über das
aufsetzen von Honeypots und die Analyse der Resultate eines Angriffs
(sehen Sie sich den Contest an).

<chapt id="after-compromise">Nach einer Kompromittierung

<sect>Allgemeines Verhalten

<p>Wenn Sie während eines Angriffs physisch präsent sind, wird es
sich nicht dauerhaft nachteilig auf Ihre Geschäfte auswirken, wenn
Sie einfach das Kabel aus der Netzwerk-Karte ziehen, bis Sie
herausbekommen, was der Eindringling tat und die Kiste gesichert wurde.
Das Netzwerk auf der untersten Ebenen abzuschalten ist der einzig sichere
Weg, um den Angreifer daran zu hindern, den Rechner zu kompromittieren
(Phillip Hofmeisters weiser Ratschlag).

<p>Wenn Sie eine Kompromittierung wirklich schnell reparieren wollen,
sollten Sie den kompromittierten Rechner aus dem Netzwerk entfernen, und
das Betriebssystem von Grund auf neu installieren. Dies könnte
natürlich gar nichts bewirken, wenn Sie nicht wissen, wie der
Eindringling root-Rechte bekommen hat. In diesem Fall müssen Sie
alles prüfen: firewall, Datei Integrität, Log-Dateien des
Loghost und so weiter. Weitere Informationen was Sie nach einem Einbruch
tun sollten, finden Sie unter <url name="Sans' Incident Handling Guide"
id="http://www.sans.org/y2k/DDoS.htm"> oder <url
id="http://www.cert.org/tech_tips/root_compromise.html"
name="CERT's Steps for Recovering from a UNIX or NT System Compromise">.

<sect>Anlegen von Sicherheitskopien Ihres Systems

<p>Vergessen Sie nicht, dass wenn Sie sicher sind, dass das System
kompromittiert wurde, Sie weder der installierten Software noch
irgendwelchen Informationen, die es an Sie liefert, vertrauen
können. Applikationen könnten von einem Trojaner befallen sein,
Kernel Module könnten installiert worden sein, usw.

<p>Das beste, das Sie machen können, ist eine komplette
Sicherheitskopie Ihres Dateisystems (durch <prgn>dd</prgn>) nachdem Sie
von einem sicheren Medium gebootet haben. Debian GNU/Linux CDs
können hierzu benutzt werden, da Sie auf Konsole zwei eine Shell
anbieten, nachdem die Installation gestartet ist (mit Alt+2 und Enter
aktivieren Sie sie). Die Shell kann zum anlegen der Sicherheitskopie
woanders hin (vielleicht über einen Netzwerk File-Server über
NFS/FTP)   benutzt werden, zur Analyse während das System offline
ist (oder zu Reinstallation).

<p>Wenn Sie sicher sind, dass es sich lediglich um ein trojanisiertes
Kernel-Modul handelt, versuchen Sie das Kernel-Image von der CD im
<em>rescue</em> Modus zu laden. Stellen Sie außerdem sicher, dass Sie im
<em>single</em> Modus starten, so dass auch nach dem Kernel keine
weiteren trojanisierten Prozesse gestartet werden.

<sect>Forensische Analyse
<p>Wenn Sie mehr Informationen sammeln wollen, enthält das Paket
<package>tct</package> (The Coroner's Toolkit von Dan Farmer und Wietse
Venema) Werkzeuge für eine "post mortem" Analyse des Systems.
<package>tct</package> erlaubt es dem Benutzer Informationen über
gelöschte Dateien, laufende Prozesse und mehr zu sammeln. Sehen Sie
bitte für weiter Informationen in die mitgelieferte Dokumentation.

<p>Forensische Analysen sollten immer auf eine Sicherheitskopie der Daten
angewendet werden, <em>niemals</em> auf die Daten selbst, da Sie durch
diese Analyse beeinflusst werden können.

<p>FIXME: This paragraph will hopefully provide
more information about forensics in a Debian system in the coming future.

<p>FIXME: talk on how to do a debsums on a stable system with the
md5sums on CD and with the recovered filesystem restored on a separate
partition.

<chapt>Häufig gestellte Fragen / Frequently asked Questions (FAQ)

<p>Dieses Kapitel führt Sie in ein paar der am häufigsten
gestellten Fragen in der Security-Mailing-Liste ein. Sie sollten sie
lesen, bevor Sie dort etwas posten, oder die Leute werden Ihnen lediglich
"RTFM!" sagen.

<sect>Sicherheit im Debian Betriebssystem

<sect1>Ist Debian sicherer als X?
<p>Ein System ist so sicher, wie der Administrator fähig ist, es
sicher zu machen. Debian versucht, Dienste auf eine
<em>standardmäßig sichere</em> Art zu installieren, und wird nicht
versuchen, so paranoid wie andere Betriebssysteme zu sein, die Dienste
<em>standardmäßig abgeschaltet</em>-Art installieren. In
jedem Fall muss der System-Administrator die Sicherheit des System den
lokalen Sicherheits-Regeln anpassen.

<sect1>In bugtraq gibt es viele Debian-Fehler. Heißt das, es ist sehr
gefährdet?

<p>Debian enthält wirklich viele Pakete und unterschiedliche
Software, wahrscheinlich sogar mehr, als mit manch einem proprietären
Betriebssystem geliefert wird. Die heißt, dass es mehr potentielle
Sicherheits-Angelegenheiten geben kann, als bei einem System mit weniger
Software.

<p>Wie auch immer: Es gibt viele Sicherheits-Gutachten in Zusammenhang
mit Quell-Code Überprüfungen von größeren
Software-Komponenten, die Debian enthält. Wann immer eine solche
Überprüfung eine größere Lücke findet, wird er
repariert und ein Sicherheits-Gutachten wird an Listen wie bugtraq
geschickt.

<p>Fehler, die in der Debian Distribution vorhanden sind, betreffen
normalerweise auch andere Lieferanten und andere Distributionen.
Prüfen Sie einfach einfach den "Debian specific: yes/no" Eintrag am
Anfang jedes Sicherheits-Gutachten (DSA, Debian Security Advisory). Wenn
dort "yes" steht, betrifft es nur Debian, wenn dort "no" steht, betrifft
es wahrscheinlich auch andere Distributionen.

<p>Debian enthält wirklich viele Pakete, und heutzutage gibt es
viele Gruppen die nach Sicherheits-Problemen in Software suchen (warum
auch immer).

<sect1>Hat Debian irgendein Zertifikat für Sicherheit?

<p>Kurze Antwort: Nein. 

<p>Lange Antwort: Zertifikate kosten Geld und niemand hat Ressourcen dazu
bestimmt, die Debian GNU/Linux Distributionen auf irgendeiner Stufe,
beispielsweise der Common Criteria, zu zertifizieren. Wenn Sie daran
interessiert sind, eine zertifizierte GNU/Linux Distribution zu haben,
stellen Sie uns die Ressourcen zur Verfügung, um dies Möglich zu
machen.

<sect1>Gibt es irgendein Absicherungs-Programm für Debian?

<p>Ja. <url name="Bastille Linux" id="http://www.bastille-linux.org">,
ursprünglich an anderen Linux Distributionen (RedHat und Mandrake)
orientiert, funktioniert derzeit auch mit Debian. Es sind Maßnahmen
eingeleitet, um die entsprechenden Änderungen auch der
ursprünglichen Version zugute kommen zu lassen. In jedem Fall heisst
das Debian-Paket natürlich <package>bastille</package>.

<p>Manche Leute glauben jedoch, dass ein Absicherungs-Programm nicht die
Notwendigkeit einer guten Administration eliminiert.

<sect1>Ich möchte eine XYZ-Dienst laufen lassen. Welchen sollte ich
benutzen?

<p>Einer der Vorteile von Debian, der die meisten neuen Administratoren
verwirren könnte, ist, dass es eine große Zahl von Software, die
den gleichen Dienst anbietet (DNS-Server, Mail-Server, FTP-Server,
Web-Server...) enthält. Wenn Sie wissen wollen, welchen Server Sie
installieren sollten, gibt es keine allgemein gültige Antwort. Es
hängt wirklich von den benötigten Fähigkeiten und der
benötigten Sicherheit (was eventuell ausbalanciert werden muss) ab.

<p>Dinge, die Sie prüfen sollten:

<list>
<item>Wird es noch vom ursprünglichen Autor gepflegt? (Wann war die
letzte Release?)
<item>Ist er ausgereift? (Die Versions-Nummer sagt <em>nichts</em> aus,
versuchen Sie seine Geschichte nachzuvollziehen)
<item>Ist er von Fehler durchsetzt? Gab es Sicherheits-Gutachten über
ihn?
<item>Stellt er die ganze Funktionalität, die Sie benötigen,
zur Verfügung? Stellt er mehr zur Verfügung, als Sie wirklich
brauchen?
</list>


<sect1>Wie mach ich den Diemst XYZ unter Debian sicherer?
<!-- Changed to XYZ in order to avoid confusion :) jfs -->

<p>Sie werden in diesem Dokument Informationen über das Absichern
von einigen Diensten (FTP, Bind) unter Debian GNU/Linux finden. Für
Dienste die hier nicht abgedeckt werden, prüfen Sie die Programm
Dokumentation, oder allgemeine Linux Informationen. Die meisten
Sicherheits-Hinweise für Unix-Systeme sind auch auf Debian
anwendbar. So ist das Absichern vom Dienst X unter Debian meistens wie
das absichern dieses Dienstes unter einer anderen Linux-Distribution (oder
Unix, was das betrifft).

<sect1>Sind alle Debian Pakete sicher?

<p>Das Sicherheits-Team von Debian kann nicht alle Pakete aus Debian auf
potentielle Sicherheits-Lücken hin analysieren, da es einfach nicht
genug Ressourcen gibt, um allen Quellcode zu prüfen. Dennoch
profitiert Debian von den Quellcode-Prüfungen durch den
ursprünglichen Entwickler oder durch andere Projekte, wie das <url
name="Linux Kernel Security Audit Project"
id="http://kernel-audit.sourceforge.net/"> oder das <url name="Linux
Security-Audit Project" id="http://www.lsap.org/">.

<p>Tatsächlich könnte ein Debian Developer in einem Paket einen
Trojaner verbreiten, und es gibt keine Möglichkeit das
nachzuprüfen. Sogar wenn diese in Debian eingeführt würden,
wäre es unmöglich alle möglichen Situationen, in der der
Trojaner ausgeführt werden würde, abzudecken.

<p>Dies fällt unter die <em>no guarantees</em>
Lizenz-Klausel. Allerdings können Debian-Benutzer insofern
Vertrauen fassen, dass der stabile Quellcode eine breite Prüfung
hinter sich hat. Die meisten Probleme würden dabei durch
Benutzung entdeckt. Keinesfalls ist es zu empfehlen, ungetestete
Software auf wichtigen Systemen zu installieren, wenn Sie nicht die
notwendige Code-Prüfung vornehmen können. In jedem Fall
gewährleistet der Aufnahmeprozess in die Distribution (mit
digitalen Signaturen), dass im Falle von in die Distribution
eingeschleusten Sicherheits-Problemen das Problem letztendlich zum
Entwickler zurückgeführt werden kann. Das Debian Project hat
diese Angelegenheiten nie auf die leichte Schulter genommen.

<sect1>Betriebssystem Benutzer und Gruppen

<sect2>Sind alle System User notwendig?

<p>Ja und nein. Debian kommt mit einigen für bestimmte Dienste
vordefinierten Usern (ids &lt; 99, beschrieben in der <url name="Debian
Policy" id="http://www.debian.org/doc/debian-policy/">). So ist das
Installation eines neuen Dienstes einfach (da dieser dann bereits als ein
passender User läuft). Wenn Sie nicht vorhaben, neue Dienste zu
installieren, können Sie die User, denen keine Dateien gehören
und die keine Dienste auf Ihrem System laufen lassen, entfernen.

<p>User, denen keine Dateien gehören, finden Sie mit
dem folgenden Kommando (stellen Sie sicher, dass
Sie es als root ausführen, da ein normaler User nicht genug
Zugriffsrechte hat, um einige sensible Verzeichnisse zu
durchsuchen):

<!-- Took the liberty to make this script more secure ... >:^) // era -->
<example>
cut -f 1 -d : /etc/passwd |
while read i; do find / -user "$i" | grep -q . && echo "$i"; done
</example>

<p>Diese User kommen aus dem Paket <package>base-passwd</package>. Sie
finden Informationen über die Behandlung dieser User unter Debian in
der Dokumentation des Pakets.

<p>Hier folgt nun eine Liste der Standard User (mit Ihren entsprechenden
Gruppen):

<list>

<item>root:
	Root ist (typischerweise) der Superuser.

<item>daemon:
	Einige unprivilegierte Daemonen, die ein paar Dateien auf
	die Festplatte schreiben müssen, laufen als daemon.daemon
	(portmap, atd, wahrscheinlich noch andere). Daemonen, die keine
	eigenen Dateien besitzen müssen, können stattdessen
	als nobody.nogroup laufen, und komplexere oder
	Sicherheits-bewusste Daemonen laufen als eigenständige User.
	Der daemon User ist wahrscheinlich auch praktisch für lokale
	installierte Daemons.

<item>bin: 
	   aus historischen Gründen beibehalten.

<item>sys:
	   das gleiche wie bei bin.
              Jedoch gehören /dev/vcs* und
	      <file>/var/spool/cups</file> der Gruppe sys.

<item>sync:
	Die Shell des User sync ist <file>/bin/sync</file>.
	Wenn das Passwort auf etwas leicht zu ratendes gesetzt wurde (zum
	Beispiel ""), kann so jeder das System von der Konsole aus
	synchronisieren lassen, auch wenn er keinen Account auf dem
	System hat.

<item>games:
	Viele Spiele sind sgid games, so dass sie ihre Highscores-Dateien
	schreiben können. Dies wird in der Policy erklärt.

<item>man:
	Das Programm man läuft (manchmal) als User man, damit es
	Cat-Pages nach <file>/var/cache/man</file> schreiben kann.

<item>lp:
	Wird von Druck-Daemonen benutzt.

<item>mail:
	Mailboxen unter <file>/var/mail</file> gehören der Gruppe
	mail, wie in der Policy erklärt wird. Der User und die
	Gruppe werden zu verschiedenen anderen Zwecken benutzt und
	für verschiedene MTAs.

<item>news:
	Verschiedene News-Server und ähnliche Programme (zum
	Beispiel suck) benutzen den User und die Gruppe news auf
	unterschiedliche Weise. Dateien im news-Spool gehören
	häufig dem User und der Gruppe news. Programme wie inews,
	die man benutzen kann, um news zu posten, sind
	normalerweise sgid news.

<item>uucp:
	Der uucp User und die uucp Gruppe werden vom UUCP Subsystem
	benutzt. Ihnen gehören Spool- und Konfigurationsdateien.
	User in der uucp-Gruppe können uucico aufrufen.

<item>proxy:
	Wie Daemon wird dieser User und diese Gruppe von manchen Daemonen
	(insbesondere Proxy-Daemonen) die keinen spezielle User-ID haben
	und eigene Dateien besitzen müssen. Zum Beispiel wird die
	Gruppe proxy von pdnsd benutzt, und squid läuft als User
	proxy.

<item>majordom:
	Majordomo hat auf Debian Systemen aus historischen Gründen
	eine statisch zugewiesene User-ID.Sie wird auf neuen Systemen
	nicht installiert.

<item>postgres:
	Postgresql Datenbanken gehören diesem User und dieser
	Gruppe. Alle Dateien in <file>/var/lib/postgresql</file>
	gehören diesem User, um anständige Sicherheit zu
	gewährleisten.

<item>www-data:
	Ein paar Web-Server laufen als www-data.
<!-- changed "web-browser into web-server, possible mistake in the
	english version? -->
        Web-Inhalte sollten
	*nicht* diesem User gehören, andernfalls wäre ein kompromittierter
	Web-Server in der Lage, eine Web-Seite zu
	überschreiben. Daten, die der Web-Server schreibt,
	einschließlich Log-Dateien, gehören www-data.

<item>backup:
	So können Backup/Wiederherstellungs Zuständigkeiten
	lokal an irgendjemanden ohne volle Root-Zugriffe delegiert
	werden.

<item>operator:
	operator ist historisch (und praktisch) der einzige 'user'
	Account, der sich remote einloggen kann, und nicht von NIS/NFS
	abhängt.

<item>list:
	Mailing-Listen-Archive und Daten gehören diesem User und
	dieser Gruppe. Manche Mailing-Listen-Programme laufen auch unter
	diesem User.

<item>irc:
	Wird von irc-Daemonen benutzt. Ein statisch zugewiesener User
	wird nur wegen eines Bugs in ircd benötigt -- es setuid sich
	selbst auf eine bestimmte User-ID beim start.

<item>gnats:

<item>nobody, nogroup:
	Daemonen die keine eigenen Dateien haben laufen als User nobody
	und Gruppe nogroup. Demzufolge sollten keine Dateien auf dem
	gesamten System diesem User oder zu dieser Gruppe gehören.

</list>

<p>Andere Gruppe, die keinen assoziierten User haben:

<list>

<item>adm:
	Die Gruppe adm wird zu Monitor-Zwecken benutzt. Mitglieder dieser
	Gruppe können viele Dateien in <file>/var/log</file> lesen
	und die xconsole benutzen.
	<file>/var/log</file> war früher einmal
	<file>/usr/adm</file> (und später <file>/var/adm</file>),
	daher der Name dieser Gruppe.

<item>tty:
	tty-Geräte gehören dieser Gruppe. Die Befehle write und wall
	benutzen dies, um auf die ttys anderer Leute zu schreiben.

<item>disk:
	Roh-Zugriff auf Festplatten. Meistens äquivalent zu
	Root-Zugriff.

<item>kmem:
	/dev/kmem und ähnliche Dateien sind von dieser Gruppe
	lesbar. Dies ist größtenteils ein BSD-Relikt, aber jedes
	Programm, dass Lese-Zugriff auf den System-Speicher braucht, kann
	so sgid kmem gemacht werden.

<item>dialout:
	Voller und direkter Zugriff auf serielle Schnittstellen.
	Mitglieder dieser Gruppen können Modems rekonfigurieren,
	sich irgendwo einwählen, usw.

<item>dip:
	Der Gruppenname steht für "Dialup IP". In der Gruppe dip zu
	sein erlaubt Ihnen Tools wie <prgn>ppp</prgn>,
	<prgn>dip</prgn>, <prgn>wvdial</prgn> usw. zu benutzen. Die User
	dieser Gruppe können das Modem nicht konfigurieren, Sie
	können lediglich Programme aufrufen, die Sie benutzen.

<item>fax:
	Erlaubt es den Mitgliedern, Fax-Software zu benutzen, um Faxe zu
	senden und zu empfangen.

<item>voice:
	Voicemail, nützlich für Systeme, die Modems als
	Anrufbeantworter benutzen.

<item>cdrom:
	Diese Gruppe kann dazu benutzt werden, einer bestimmen Gruppe
	Usern Zugriff auf CDROM-Laufwerke zu geben.

<item>floppy:
	Diese Gruppe kann dazu benutzt werden, einer bestimmen Gruppe
	Usern Zugriff auf Disketten-Laufwerke zu geben.

<item>tape:
	Diese Gruppe kann dazu benutzt werden, einer bestimmen Gruppe
	Usern Zugriff auf Band-Laufwerke zu geben.

<item>sudo:
	Mitglieder dieser Gruppe müssen Ihr Passwort eingeben, wenn
	Sie sudo benutzen. Siehe <file>/usr/share/doc/sudo/OPTIONS</file>.

<item>audio:
	Diese Gruppe kann dazu benutzt werden, einer bestimmen Gruppe
	Usern Zugriff auf jedes Audio-Gerät zu geben.

<item>src:
	Dieser Gruppe gehören die Quell-Codes, einschließlich der
	Dateien in <file>/usr/src</file>. Sie kann benutzt werden, um
	einem bestimmten User die Möglichkeit zu bieten, Quell-Code
	des Systems zu verwalten.

<item>shadow:
	<file>/etc/shadow</file> ist von dieser Gruppe lesbar. Einige
	Programme, die auf diese Datei zugreifen müssen, sind sgid
	shadow.

<item>utmp:
	Diese Gruppe kann nach <file>/var/run/utmp</file> und
	ähnlichen Dateien schreiben. Programme, die darin schreiben
	können müssen, sind sgid utmp.

<item>video:
	Diese Gruppe kann dazu benutzt werden, einer bestimmen Menge von
	User Zugriff auf ein Video-Gerät zu geben.

<item>staff:
	Erlaubt Usern lokale Modifikationen zu dem System
	hinzuzufügen (<file>/usr/local</file>, <file>/home</file>),
	ohne dass Sie Root-Privilegien bräuchten. Vergleichen Sie
	mit "adm", die sich mehr auf beobachten/absichern bezieht.

<item>users:
	Während Debian Systeme standardmäßig das
	User-Gruppen-System (jeder User hat seine eigene Gruppe)
	benutzen, ziehen es manche vor, ein traditionelleres Gruppen
	System zu benutzen. In diesem System ist jeder User Mitglied der
	Gruppe "users".

</list>

<sect2>Was ist der Unterschied zwischen der adm und der staff Gruppe?
<p>

<p>'adm' sind Administratoren und ist meistens nützlich, um ihnen zu
erlauben, Log-Dateien zu lesen, ohne <prgn>su</prgn> benutzen zu
müssen. 'staff' ist mehr bei den Helpdesk/junior Sysadmin Leuten
nützlich, und gibt ihnen die Möglichkeit, Dinge in
<file>/usr/local</file> zu erledigen und Verzeichnisse in
<file>/home</file> anzulegen.


<sect1>Fragen über Dienste und offene Ports

<sect2>Warum werden Dienste während der Installation aktiviert?

<p>Das ist der Annäherung an das Problem, auf der einen Seite
sicherheitsbewusst und auf der anderen Seite benutzerfreundlich zu sein.
Anders als OpenBSD, das alle Dienste abschaltet, bis sie vom
Administrator aktiviert werden, aktiviert Debian GNU/Linux alle
installierten Dienste, bis sie abgeschaltet werden (siehe dazu <ref
id="disableserv">). Immerhin haben Sie den Dienst installiert, oder?

<p>Es gab einige Diskussionen auf Debian Mailing-Listen
(sowohl auf debian-devel als auch auf debian-security) darüber,
was das standard Setup sein sollte. Jedoch gab es bisher (10. März
2002) keinen Konsens, wie dies behandelt werden sollte.

<sect2>Kann ich inetd entfernen?

<p>Inetd ist nich leicht zu entfernen, da <package>netbase</package> von
dem Paket abhängt, das Inetd enthält
(<package>netkit-inetd</package>). Wenn Sie es entfernen wollen,
können Sie es entweder abschalten (siehe <ref id="disableserv">)
oder das Paket entfernen, indem Sie das Paket <package>equivs</package>
benutzen.

<sect2>Warum muss ich Port 111 offen haben?

<p>Port 111 ist sunrpcs Portmapper und wird standardmäßig bei allen
Basis-Installationen eines Debian Systems, da es keine Möglichkeit
gibt, herauszubekommen, wann das Programm eines Users RPC gebrauchen
könnte, um korrekt zu arbeiten. In jedem Fall wird es meistens von
NFS benutzt. Wenn Sie kein NFS benutzen, entfernen Sie es, wie in <ref
id="rpc"> erklärt.

<sect2>Wozu ist der identd (Port 113) da?

<p>Identd wird von Administratoren benutzt, um anderen Systemen, die
wissen wollen, wer für eine bestimmte Verbindung verantwortlich ist,
zusätzliche Informationen zu einer Userid zur Verfügung zu
stellen. Beachtenswert schließt dies mail, FTP und IRC Server ein,
jedoch kann es auch dazu benutzt werden, um den User Ihrer Systeme
zurück zu verfolgen, der einen Angriff gestartet hat.

<p>Es gab ausführliche Diskussionen hierüber (siehe in den <url
id="http://lists.debian.org/debian-security/2001/debian-security-200108/msg00297.html"
name="Mailing List Archiven">. Grundsätzlich gilt: Wenn Sie nicht
wissen, was und wozu es ist, aktivieren Sie es nicht. Aber wenn Sie es
firewallen, <em>bitte</em>: Nehmen Sie eine reject-Regel und keine
deny-Regel, oder Kommunikation könnte bis zu einer
Zeitüberschreitung hängen (siehe <url
id="http://logi.cc/linux/reject_or_deny.php3" name="reject or deny
issues">).

<sect2>Ich habe festgestellt, dass ich den folgenden Port (XYZ) offen
habe. Kann ich ihn schließen?

<p>Natürlich können Sie. Die Ports, die Sie offen lassen,
hängen von Ihrem Regelwerk bezüglich öffentlich
zugänglichen Diensten ab. Prüfen Sie, ob inetd (siehe <ref
id="inetd">) oder ein anderes installiertes Paket sie öffnet und
leiten Sie passende Maßnahmen ein (Konfigurieren von inetd,
Entfernen des Pakets, Vermeiden dass der Dienst beim Booten gestartet
wird...)

<sect2>Ich habe einen Dienst aus <file>/etc/services</file> entfernt,
funktioniert das?

<p><em>Nein</em>, <file>/etc/services</file> zieht einfach nur eine
Verbindung zwischen einem virtuellen Namen und einer Port Nummer. Das
Entfernen eines Namens verhindert üblicherweise nicht, dass ein Dienst
gestartet wird. Manche Daemonen starten vielleicht nicht, wenn Sie
<file>/etc/services</file> ändern, aber das ist nicht die Norm, und
es ist nicht der empfohlene Weg einen Dienst abzuschalten, siehe <ref
id="disableserv">.

<sect1>Allgemeine Sicherheitsfragen

<sect2>Ich habe mein Passwort vergessen und kann auf das System nicht
mehr zugreifen!

<p>Die nötigen Schritte, um wieder Zugriff erhalten,
hängen davon ab, ob Sie die vorgeschlagene Prozedur zum Absichern
von Lilo und BIOS durchgeführt haben oder nicht.

<p>Wenn Sie beides eingeschränkt haben, müssen Sie im BIOS
erlauben, von anderen Medien als der Festplatte zu booten, bevor Sie
weitermachen können. Wenn Sie auch Ihr BIOS-Passwort vergessen
haben,  öffnen Sie das PC-Gehäuse, und entfernen die BIOS-Batterie.

<p>Wenn Sie nun von CD-ROM oder Diskette booten können:
<list>

<item>booten Sie von eine Rescue-Disk und starten den Kernel

<item>wechseln Sie mit Alt+F2 auf eine virtuelle Konsole

<item>mounten Sie die Partition, auf der sich Ihr / befindet

<item>editieren Sie (die Debian 2.2 Rescue-Disk kommt mit
<prgn>ae</prgn>, Debian 3.0 kommt mit <prgn>nano-tiny</prgn>, der
<prgn>vi</prgn> etwas ähnelt) die Datei <file>/etc/shadow</file> und
ändern Sie die Zeile:

<example>
root:asdfjl290341274075:XXXX:X:XXXX:X::: (X=irgendeine Ziffer)
</example>

<p>in:

<example>
root::XXXX:X:XXXX:X:::
</example>

</list>

<p>Dies entfernt das Root-Passwort. Sie können das System starten
und sich am Login-Prompt als Root mit einem leeren Passwort einloggen.
Dies funktioniert, es sei denn, Sie haben Ihr System etwas sicherer
eingestellt, d.h. User mit leeren Passwort dürfen sich nicht
einloggen und Root kann sich nicht auf einer Konsole einloggen.

<p>Falls Sie derartige Maßnahmen getroffen haben, müssen Sie im
Single-User-Modus starten. Wenn Sie LILO eingeschränkt haben, müssen
LILO erneut ausführen, nachdem Sie das Root-Passwort
zurückgesetzt haben. Das ist trickreich, da Ihre
<file>/etc/lilo.conf</file> nicht gefunden wird, und Ihr /-Dateisystem
eine RAM-Disk und keine echte Festplatte ist.

<p>Sobald LILO nicht mehr eingeschränkt ist:

<list>

<item>Drücken Sie Alt, Shift oder Control, kurz bevor das BIOS
seine Arbeit beendet hat, Sie sollten nun einen LILO-Prompt erhalten.

<item>Geben Sie am Prompt 'linux single', 'linux init=/bin/sh' oder 'linux 1' ein.

<item>Sie erhalten einen Shell-Prompt im Single-User-Modus (Sie
werden nach dem Passwort gefragt, aber das kennen Sie jetzt ja)

<item>Binden Sie die /-Partition im schreib/lese Modus neu ein:
<example>
mount -o remount,rw /
</example>

<item>Ändern Sie das Superuser Passwort mit <prgn>passwd</prgn> (da
Sie der Superuser sind, werden Sie nicht nach Ihrem alten Passwort
gefragt).

</list>

<sect1>Ich möchte meinen Usern einen Dienst anbieten, Ihnen aber
keinen Shell-Account geben.

<p>Wenn Sie zum Beispiel einen POP-Dienst anbieten wollen,
müssen Sie nicht für jeden zugreifenden User einen Account
anlegen. Am besten setzen Sie hierzu eine Verzeichnis-basierte
Authentifizierung durch einen externen Dienst (wie Radius, LDAP oder
eine SQL-Datenbank) auf. Installieren Sie einfach die gewünschte
PAM-Bibliothek (<package>libpam-radius-auth</package>,
<package>libpam-ldap</package>, <package>libpam-pgsql</package> oder
<package>libpam-mysql</package>), lesen Sie die Dokumentation (Einsteiger
sehen bitte unter <ref id="auth-pam"> nach), und konfigurieren Sie den
PAM-nutzenden Dienst, so dass er Ihr Backend benutzt. Bearbeiten Sie dazu
die dem Dienst entsprechende Datei unter
<file>/etc/pam.d/</file> und ändern die folgenden Zeile von
<example>
auth    required        pam_unix_auth.so shadow nullok use_first_pass
</example>
beispielsweise für ldap folgendermaßen: 
<example>
auth    required        pam_ldap.so
</example>

<!-- FIXME: check if this i right (jfs) -->

<p>Im Fall von LDAP-Verzeichnissen liefern manche Dienste LDAP-Schemata
mit, die Sie Ihrem Verzeichnis hinzufügen können, um
eine LDAP-Authentifizierung zu benutzen. Wenn Sie relationale
Datenbanken benutzen, gibt es einen nützlichen Trick: Benutzen Sie
die <em>where</em> Klausel, wenn Sie die PAM-Module konfigurieren. Wenn
Sie beispielsweise eine Datenbank mit der folgenden Tabelle haben:

<example>
(user_id,user_name,realname,shell,password,uid,gid,homedir,sys,pop,imap,ftp)
</example>

<p>können Sie die letzten (bool'schen) Werte dazu benutzen, den
Zugriff auf die verschiedenen Dienste entweder zu erlauben oder zu
verbieten, indem Sie einfach die folgenden Zeilen in die Dateien
einfügen:

<list>
<item><file>/etc/pam.d/imap</file>:<tt>where=imap=1</tt>.

<item><file>/etc/pam.d/qpopper</file>:<tt>where=pop=1</tt>.

<item><file>/etc/nss-mysql*.conf</file>:<tt>users.where_clause = user.sys = 1;</tt>.

<item><file>/etc/proftpd.conf</file>:<tt> SQLWhereClause "ftp=1"
</tt>.

</list>

<sect>Mein System ist angreifbar! (sicher?)

<sect1>Ich habe in meinen Logfiles einen Angriff gesehen: Ist mein System
kompromittiert?

<p>Ein Hinweis auf einen Angriff heißt nicht notwendigerweise,
dass Ihr System gehackt wurde. Leiten Sie die üblichen Schritte
ein, um festzustellen, ob das System kompromittiert wurde (siehe <ref
id="after-compromise">). Beachten Sie auch, dass Angriffsspuren in den
Logs mitunter bedeuten, dass sie hierfür bereits angreifbar sind
(ein entschlossener Angreifer könnte übrigens auch andere
Angriffe, als die von Ihnen beobachteten durchgeführt haben).

<!-- Angriffsspuren, die "manchmal" auf Verwundbarkeiten hinweisen? -->
<!-- Irgendwie eine Trivialität --> 

<sect1>Ich habe in meinen Logs merkwürdige "MARK"-Einträge
gefunden, bin ich kompromittiert?

<p>Wenn Ihr System keine hohe Last (und kaum laufende Dienste) hat,
finden Sie vielleicht die folgenden Zeilen in Ihren System-Logs:

<example>
Dec 30 07:33:36 debian -- MARK --
Dec 30 07:53:36 debian -- MARK --
Dec 30 08:13:36 debian -- MARK --
</example>

<p>Dies ist keine Kompromittierung, obwohl User, die von einer
Debian-Release wechseln, es vielleicht merkwürdig
finden. Tatsächlich ist es ein Indiz dafür, dass
<prgn>syslogd</prgn> vernünftig läuft. Aus <manref
section="8" name="syslogd">:

<example>
       -m interval
              The syslogd logs a mark timestamp  regularly.   The
              default interval between two -- MARK -- lines is 20
              minutes.  This can be  changed  with  this  option.
              Setting the interval to zero turns it off entirely.
</example>

<example>
       -m interval
	      Der Syslogd protokolliert regelmäßig einen
	      Zeitstempel. Der voreingestellte Abstand zwischen zwei --
	      MARK -- Zeilen ist 20 Minuten. Er kann mit dieser Option
	      geändert werden. Setzen Sie den Abstand auf null, um
	      die Zeitstempel komplett abzuschalten.
</example>

<sect1>Ich habe User gefunden, die laut meinen Logfiles su benutzen: Bin ich
kompromittiert?

<p>Sie könnten in Ihren Logs Zeilen wie die folgenden finden:

<example>
 Apr  1 09:25:01 server su[30315]: + ??? root-nobody
 Apr  1 09:25:01 server PAM_unix[30315]: (su) session opened for user nobody by (uid=0)
</example>

<p>Seien Sie nicht besorgt, und prüfen Sie, ob dies durch einen Cron-Job
entsteht (normalerweise <file>/etc/cron.daily/find</file> oder
<prgn>logrotate</prgn>):

<example>
$ grep 25 /etc/crontab
25 6    * * *   root    test -e /usr/sbin/anacron || run-parts --report
/etc/cron.daily
$ grep nobody /etc/cron.daily/*
find:cd / && updatedb --localuser=nobody 2>/dev/null
</example>

<sect1>Ich bin Opfer eines Einbruchs - was soll ich jetzt tun?

<p>Lesen Sie dieses Dokument und leiten Sie passenden, hier dargestellten
Maßnahmen ein. Wenn Sie Hilfe benötigen, wenden Sie sich an die
Debian-Security-Mailingliste (debian-security@lists.debian.org) um Rat, wie Sie Ihr System
wiederherstellen/patchen.

<sect1>Wie spüre ich Angriffe auf?

<p>Durch Durchgehen der Logs (wenn Sie nicht geändert wurden), Benutzung
eines Intrusion-Detection-Systems (siehe <ref
id="intrusion-detect">), <prgn>traceroute</prgn>, <prgn>whois</prgn> und
ähnliche Tools (einschließlich forensischer Analyse) können
einen Angriff zu seinem Ursprung zurückverfolgen. Wie Sie auf diese
Informationen reagieren hängt ausschließlich von Ihren
Sicherheits-Regeln ab, und was <em>Sie</em> als Angriff betrachten. Ist
ein einfacher Scan ein Angriff? Ist die Prüfung auf eine
Verwundbarkeit ein Angriff?

<sect1>Das Programm X ist in Debian angreifbar - was soll ich machen?

<p>Nehmen Sie sich einen Augenblick Zeit, um zu schauen, ob die
Angriffs-Möglichkeit in öffentlichen Sicherheits-Mailinglisten
(wie Bugtraq) oder anderen Foren bekannt gemacht wurde. Das
Debian-Sicherheits-Team hält sich bei diesen Listen auf dem
Laufenden, also könnten ihnen dieses Problem bereits bekannt sein.
Leiten Sie keine weiteren Maßnahmen ein, wenn Sie schon ein
Sicherheits-Gutachten auf <url id="http://security.debian.org"> sehen.

<p>Wenn Sie nichts finden, senden Sie bitte eine Mail mit einer
möglichst detaillierten Beschreibung des Angriffs-Punktes (Code, der
dies bestätigt, ist auch okay) an security@debian.org. Dort
erreichen Sie das Sicherheits-Team.

<sect1>Laut der Versions-Nummer eines Paketes läuft bei mir
immer noch eine angreifbare Version!

<p>Statt auf neue Releases zu aktualisieren, nehmen wir
Sicherheits-Korrekturen an der Version vor, die in der stabilen
Version enthalten ist. Der Grund dafür ist, dass wir sicher gehen
wollen, dass eine stabile Release so wenig wie möglich
verändert wird. So werden sich Dinge als Resultat einer
Sicherheits-Korrektur nicht unerwartet ändern
oder kaputt gehen. Ob Sie eine sichere Version eines Paketes
benutzen, prüfen Sie, indem Sie das Changelog des Paketes durchsehen, oder indem Sie
die exakte Versions Nummer (Ursprüngliche Version -slash- Debian
Release) mit der Nummer aus dem Debian Sicherheits-Gutachten vergleichen.

<sect1>Spezielle Software

<sect2>Proftpd ist für einen "Denial of Service"-Angriff
anfällig.

<p>Fügen Sie  Ihrer Konfigurationsdatei <tt>DenyFilter \*.*/</tt>
hinzu. Mehr Informationen entnehmen Sie <url id="http://www.proftpd.org/critbugs.html">.

<sect>Fragen über das Debian-Sicherheitsteam

<!-- FIXME: update from web page -->

<sect1>Was ist ein Debian-Sicherheitsgutachten (Debian Security Advisory, DSA) 

<p>Das Debian-Sicherheitsteam (siehe unten) informiert in diesen
Gutachten über die Verfügbarkeit und Bezugsquellen von
Security-Fixes für das Debian-Betriebssystem.  Digital
unterschriebene DSAs werden an eine öffentliche Mailing-Liste
gesendet und auf der Debian-Website veröffentlicht (sowohl auf der
Hauptseite als auch unter <url id="http://www.debian.org/security/"
name="Sicherheits-Informationen">).

<p>DSAs enthalten Informationen über beeinträchtigte Pakete,
den entdeckten Fehler und wie man aktualisierte Pakete bekommt (und Ihre
md5-Summen).

<sect1>Die digitale Signatur eines Debian-Gutachtens wird nicht korrekt verifiziert!

<p>Dies ist wahrscheinlich ein Problem an Ihrem Ende. Der der
   debian-security-announce-Liste vorgeschaltete Filter lässt nur
   Nachrichten durch, die eine korrekte Signatur von einem Mitglied
   des Sicherheitsteams enthalten.

<p>Wahrscheinlich verändert irgendeine Mail-Software an Ihrem
   Ende die E-Mail ein wenig und ruiniert damit die Unterschrift. Stellen Sie
   sicher, dass Ihre Software keine MIME-Kodierung oder -Dekodierung
   oder Tabulator/Leerzeichen-Konvertierung durchführt.

<p>Bekannte Schuldige sind fetchmail (mit eingeschalteter
   mimedecode-Option) und formail (lediglich von procmail 3.14)

<sect1>Wie werden Sicherheitsvorfälle in Debian behandelt?

<p>Sobald dem Sicherheitsteam ein Vorfall gemeldet wird, prüfen
ihn ein oder mehrere Mitglieder nach, und erwägen, ob
Debian/stable angreifbar ist oder nicht. Wenn unser System angreifbar
ist, wird an einer Korrektur des Problems gearbeitet. Der
Paket-Verwalter wird ebenfalls kontaktiert, wenn er nicht bereits
selbst das Sicherheits-Team kontaktiert hat. Schliesslich wird die
Korrektur getestet und ein neues Paket vorbereitet, das dann auf allen
stabilen Architekturen kompiliert und anschließend hoch geladen
wird. Nachdem all dies getan ist, wird ein Debian-Sicherheitsgutachten
(DSA) an die öffentliche Mailing-Liste geschickt.

<sect1>Wie lange braucht Debian, um die Angriffs-Möglichkeit
XXXX zu reparieren?

<p>Wie eine Analyse der Zeitspanne, in der das Debian-Sicherheitsteam
nach Bekanntwerden einer Angriffsmöglichkeit ein Gutachten
veröffentlicht und reparierte Pakete produziert, zeigt, dauert es
nicht besonders lange, Angriffmöglichkeiten in Debian/stable zu
reparieren.

<p>Nach einem Report
<url
id="http://lists.debian.org/debian-security/2001/debian-security-200112/msg00257.html"
name="in der debian-security Mail-Liste"> vom Jahr 2001
benötigte das Debian-Sicherheitsteam durchschnittlich 35 Tage, um eine
sicherheitsrelevante Angriffmöglichkeit zu reparieren. Über 50%
der Angriffs-Punkte wurden jedoch innerhalb eines Zeitrahmens von 10 Tagen
beseitigt, und über 15% von ihnen noch am <em>gleichen
Tag</em> repariert.

<p>Oft vergessen Leute, die diese Frage stellen, dass:
<list>
  <item>DSAs nicht verschickt werden bis:
  <list>
    <item>Pakete für <em>alle</em> von Debian unterstützten
    Architekturen verfügbar sind (dies braucht etwas Zeit, wenn es
    sich um Pakete handelt, die Teil des System-Kerns sind, besonders
    wenn man die Anzahl der in der stabilen Release unterstützten
    Architekturen berücksichtigt).
    <item>Neue Pakete gründlich getestet wurden, um sicher zu
    stellen, dass sich keine neuen Fehler eingeschlichen haben
  </list>
  <item>Pakete möglicherweise schon verfügbar sind, bevor das DSA verschickt
  wird (in der Incoming-Warteschlange oder auf den Mirror-Servern).
  <item>Debian ein Projekt auf freiwilligen Basis ist.
  <item>Es eine "keine Garantie" Klausel gibt, die Teil der Lizenz ist,
  der Debian unterliegt.
</list>

<sect1>Wie wird Sicherheit für <tt>testing</tt> und
<tt>unstable</tt> gehandhabt?

<p>Die kurze Antwort ist: Gar nicht. Testing und unstable unterliegen
stetigen Veränderungen, und das Sicherheits-Team hat nicht die
benötigten Ressourcen, um diese richtig zu
betreuen. Wenn Sie einen sicheren (und stabilen) Server haben
möchten, sollten Sie bei stable bleiben.

<p>Tatsächlich wird unstable normalerweise relativ
schnell repariert, da Sicherheits-Updates für die aktuelle Version
vom Programmautor schnell verfügbar sind
(während auml;ltere Versionen wie die in stable normalerweise
zurück portiert werden müssen).


<sect1>Warum gibt es keinen offiziellen Mirror von
security.debian.org?

<p>Der Zweck von security.debian.org ist es, Sicherheits-Updates
möglichst schnell und einfach zur Verfügung zu stellen.
Mirrors machen dies unnötig komplizierten und erzeugen nur
Frustration, wenn sie nicht aktuell gehalten werden.

<sect1>Ich habe DSA 100 und DSA 102 gesehen, doch wo ist DSA 101?

<p>Verschiedene Distributoren (zumeist von GNU/Linux, aber auch von
BSD-Derivaten) koordinieren Sicherheits-Gutachten für verschiedene
Vorfälle und haben vereinbart, einen bestimmten Zeitplan
einzuhalten, so dass alle Distributoren in der Lage sind, richtig
zu prüfen, ob Sie betroffen sind (oder nicht) und entsprechende
Updates erstellen können.

<p>Das Sicherheits-Team von Debian behält in solchen Fällen die
Nummer, bevor das Gutachten freigegeben wird, und so kann es zeitweise
passieren, dass die ein andere Nummer fehlt.


<sect1>Wie kann ich das Sicherheits-Team erreichen?

<p>Sicherheits Informationen können an security@debian.org geschickt
werden, damit es von allen Debian Entwicklern gelesen wird. Wenn Sie
sensitive Informationen haben, benutzen Sie bitte
team@security.debian.org, damit es nur vom Security-Team gelesen wird.
Wenn Sie es wünschen, kann die E-Mail auch mit dem Debian Security
Contact Key (Key-Id 363CCD95) verschlüsselt werden.

<sect1>Was ist der Unterschied zwischen security@debian.org und
debian-security@lists.debian.org?

<p>Wenn Sie eine Nachricht an security@debian.org schicken, wird diese an
die Developer Mailingliste geschickte (debian-private), die alle Debian
Entwickler abonniert haben. Nachrichten an diese Liste werden vertraulich
behandelt (d.h. nicht auf einer öffentlichen Web-Seite archiviert).
debian-security@lists.debian.org ist eine öffentliche Mail-Liste,
offen für jeden, der Sie abonnieren möchte, und es gibt ein
auf den Web-Seiten ein durchsuchbares Archiv.


<sect1>Wie kann ich das Debian-Sicherheitsteam unterstützen?

<p>
<list>
<item>Indem Sie zu diesem Dokument beitragen, FIXMEs bearbeiten oder
neuen Inhalt beisteuern. Dokumentation ist wichtig und reduziert die
Überlast durch Beantworten allgemeiner Fragen. Übersetzen
dieses Dokuments in andere Sprachen ist auch ein großartiger Beitrag
(Anm.d. Übersetzers: Fehler bereinigen in der Übersetzung auch).

<item>Indem Sie Programme paketieren, mit denen sich die Sicherheit
eines Debian-Systems erhöhen oder prüfen läßt.
Wenn Sie kein Entwickler sind, reichen Sie einen <url name="WNPP bug"
id="http://www.debian.org/devel/wnpp/"> ein, und fragen nach
Software, die Sie für nützlich halten, die
aber noch nicht zur Verfügung steht.

<item>Testen Sie Applikationen in Debian oder helfen Sie
Sicherheitslücken zu schließen. Teilen Sie Probleme
security@debian.org mit. Anderer Projekte Arbeit, wie das <url
name="Linux Kernel Security Audit Project"
id="http://kernel-audit.sourceforge.net/"> oder das <url name="Linux
Security Audit Project" id="http://www.lsap.org/"> erhöhen auch die
Sicherheit von Debian GNU/Linux, da Beiträge dort letzten Endes
auch hier helfen.

</list>

<p>Prüfen Sie bitte in jedem Fall nach, bevor Sie etwas an
security@debian.org melden. Wenn Sie Patches beifügen,
beschleunigt das den Prozess natürlich. Leiten Sie nicht
einfach Mails von Bugtraq weiter, da diese bereits empfangen werden. Es ist
aber eine gute Idee, zusätzliche Informationen zu schicken.

<sect1>Aus wem setzt sich das Sicherheitsteam zusammen?

<p>Das Debian-Sicherheitsteam besteht derzeit aus fünf Mitgliedern und
zwei Sekretären. Das Sicherheitsteam lädt selbst Personen
zum Beitritt ein.

<sect1>Prüft das Debian-Sicherheitsteam jedes Paket in Debian?

<p>Nein, weder prüft das Sicherheitsteam jedes neue Paket noch
gibt es einen automatischen (lintian) Test, um neue Pakete mit
bösartigem Inhalt zu entdecken, da solche Dinge praktisch
unmöglich automatisch zu erkennen sind. Paket-Verwalter sind
jedoch voll und ganz verantwortlich für die Software, die in
Debian eingeführt wird. Keine Software wird eingeführt,
die nicht zuerst von einem autorisierten Entwickler signiert
wurde. Sie sind selbst dafür verantwortlich, die Software, die Sie
einsetzen, zu analysieren und auf Sicherheit zu achten.

<sect1>Ich habe eine ältere Version von Debian. Wird Sie in Bezug
auf Sicherheit noch unterstützt?

<p>Leider nein. Das Debian-Sicherheitsteam kann leider nicht sowohl
die stabile Release (inoffiziell also auch unstable) als auch
ältere Releases unterstützen. Für einen begrenzten
Zeitraum (normalerweise mehrere Monate) nach der Veröffentlichung
einer neuen Debian Distribution können Sie jedoch
Sicherheits-Updates erwarten.

<appendix id="harden-step">Der Abhärtungs-Prozess Schritt für
Schritt

<!--
# I took the liberty to change this from "checklist" to
# "process step by step" because this doesn't really have the
# form of a checklist, and I had added a different sort of
# checklist. The renaming is more to avoid confusion than
# anything else. // era
-->

<p>Eine Prozedur ist immer nützlich, da Sie Ihnen erlaubt, den
gesamten Prozess des Abhärtens eines Systems zu betrachten und Ihnen
erlaubt Entscheidungen zu treffen. Ein möglicher Versuch für
eine solche Prozedur für Debian 2.2 GNU/Linux ist unten
aufgeführt. Es ist eine Nach-Installations Prozedur. Eine
Checkliste von Maßnahmen, die Sie schritt für Schritt während
der Konfiguration durchführen finden Sie unter <ref id="checklist">.
Außerdem ist diese Prozedur (im Augenblick) eher am Absichern von
Netzwerk-Diensten orientiert.

<list>

<item>Führen Sie eine Installation auf dem System durch (beachten
Sie dabei die Informationen dieser HowTo bezügliche
Partitionierung). Nach der Basis-Installation nehmen Sie eine angepasste
Installation vor, wählen Sie keine Task-Pakete aus, aber aktivieren
Sie shadow passwords.

<item>Gehen Sie durch <prgn>dselect</prgn> und entfernen Sie alle nicht
benötigten aber ausgewählten Pakete bevor Sie [I]nstallation
wählen. Lassen Sie nur absolut notwendige Software auf dem Server.

<item>Aktualisieren Sie alle Software von den aktuellen Paketen auf
security.debian.org wie bereits unter <ref id="update"> beschrieben.

<item>Implementieren Sie die in dieser Anleitung vorgeschlagenen
Maßnahmen über User Quota, Login Definitionen und Lilo.

<item>Um das Abhärten aller Dienste vorzubereiten, machen Sie eine
Liste von allen Diensten, die derzeit auf Ihrem System arbeiten.
<example>
$ ps -aux
$ netstat -pn -l -A inet 
# /usr/sbin/lsof -i | grep LISTEN
</example>

Damit das dritte Kommando funktioniert werden Sie
<package>lsof-2.2</package> installieren müssen (uns es als root
laufen lassen). Beachten Sie, dass lsof das Wort LISTEN passend zu Ihrer
Lokalisation übersetzen kann.

<item>Um unnötige Dienste zu entfernen, stellen Sie zunächst
fest, wie er gestartet wird, und welches Paket ihn zur Verfügung
stellt. Sie können dies ganz einfach machen, indem Sie das Programm
prüfen, dass auf einen Socket achtet. Das nachfolgende Beispiel wird
Ihnen zeigen, wie man diese Tools und <prgn>dpkg</prgn> dazu benutzt:

<example>
#!/bin/sh
# FIXME: Dies ist nur auf die Schnelle und einfach zusammen gehackt, und
# sollte durch einen robusteren Skript-Schnippel ersetzt werden
for i in `sudo lsof -i | grep LISTEN | cut -d " " -f 1 |sort -u` ; do
        pack=`dpkg -S $i |grep bin |cut -f 1 -d : | uniq`
        echo "Dienst $i ist durch $pack installiert";
        init=`dpkg -L $pack |grep init.d/ `
        if [ ! -z "$init" ]; then
                 echo "und wird durch $init gestartet"
        fi
done
</example>

<item>Wenn Sie ungewünschte Dienste finden, entfernen Sie das Paket
(mit <prgn>dpkg --purge</prgn>) oder, wenn er nützlich ist aber
nicht beim Starten aktiviert werden soll, benutzen Sie
<prgn>update-rc.d</prgn> (siehe <ref id="disableserv">), um ihn aus
dem Start-Prozess zu entfernen.

<item>Bei inetd Dienste (durch den Superdaemon gestartet)
können Sie einfach die aktivierten Dienste prüfen, zum
Beispiel mit:

<example>
$ grep -v "^#" /etc/inetd.conf | sort -u
</example>

und deaktivieren Sie diejenigen, die Sie nicht benötigen, indem Sie
die Zeile auskommentieren, das Paket entfernen, oder indem Sie
<prgn>update-inetd</prgn> benutzen.

<item>Wenn Sie Dienste eingehüllt haben (und
<prgn>/usr/sbin/tcpd</prgn> benutzen) prüfen Sie, ob
<file>/etc/hosts.allow</file> und <file>/etc/hosts.deny</file> passend zu
Ihrer Dienste-Regelung konfiguriert sind.

<item>Wenn möglich, und abhängig von jedem Dienst,
möchten Sie vielleicht die Dienste limitieren, wenn Sie mehrere
externe Schnittstellen benutzen, damit Sie nur auf eines davon achten.
Wenn Sie zum Beispiel internen FTP-Zugriff erlauben, lassen Sie den
FTP-Daemon nur auf diese Schnittstelle achten, nicht auf alle (d.h.
0.0.0.0:21).

<item>Booten Sie die Maschine neu, oder wechseln Sie in den Single-User
Modus und zurück in den Multi-User Modus mit:
<example>
$ init 1
(....)
$ init 2
</example>

<item>Prüfen Sie die nun angebotenen Dienste und wiederholen Sie
die letzten Schritte falls nötig.

<item>Installieren Sie jetzt die benötigten Dienste, falls es noch
nicht geschehen ist, und konfigurieren Sie Sie passend.

<item>Prüfen Sie, welche User benutzt werden, um angebotenen
Dienste zu starten, zum Biespiel mit:

<example>
$ for i in `/usr/sbin/lsof -i |grep LISTEN |cut -d " " -f 1 |sort -u`; do
user=`ps -ef |grep $i |grep -v grep |cut -f 1 -d " "` ; echo "Dienst $i
laeuft als Benutzer $user"; done
</example>

und überlegen Sie, ob Sie diese Dienst zu einem bestimmten User /
einer bestimmten Gruppe ändern wollen und Sie vielleicht auch in
eine chroot-Umgebung packer wollen, um die Sicherheit zu erhöhen.
Sie können dies tun, indem Sie die <file>/etc/init.d</file> Skripte
ändern, die den Dienst starten. Die meisten Dienste benutzen unter
Debian <prgn>start-stop-daemon</prgn>, so dass Sie einfach die
--change-uid und --chroot Optionen benutzen können, um diese
Dienst aufzusetzen. Das einpacken eines Dienstes in eine
Chroot-Umgebung würde den Rahmen dieses Dokumentes sprengen, aber
ein paar warnende Worte sind nötig: Sie werden wahrscheinlich alle
Dateien, die durch das Paket des Dienstes installiert wurden, unter
Benutzung von dpkg -L und der Pakete, von denen es abhängt, in die
Chroot-Umgebung legen müssen.

<item>Wiederholen Sie die oberen Schritte, um zu prüfen, ob nur die
gewünschten Dienste laufen und ob Sie unter der gewünschten
User/Gruppen Kombination laufen.

<item>Testen Sie die installieren Dienste, um zu festzustellen, ob Sie
wie erwartet arbeiten.

<item>Checken Sie das System, indem Sie einen
Verwundbarkeits-Abschätzungs-Scanner (zum Beispiel
<package>nessus</package>) benutzen, um Angriffmöglichkeiten
(Fehlkonfigurationen, alte oder nicht benötigte Dienste) zu finden.

<item>Installieren Sie Netzwerk-Eindringlings-Massnahmen und
Host-Eindringlings-Massnahmen (wie <package>snort</package> und
<package>logsentry</package>).

<item>Wiederholen Sie den Netzwerk-Scan und prüfen Sie, ob das
Eindringslings-Erkennungs-System funktioniert.

</list>

Dir richtig Paranoiden überlegen sich auch das folgende:

<list>

<item>fügen Sie dem Systen Firewall Fähigkeiten hinzu, die
eingehende Verbindungen nur zu angebotenen Diensten erlauben und
ausgehende Verbindungen auf authorisierte beschränkt.

<item>Überprüfen Sie erneut die Installation auf Angriffspunkte
mit einem Netzwerk Scanner.

<item>Prüfen Sie ausgehende Verbindungen vom System zu Hosts
außerhalb mit einem Netzwerk-Scanner, um sicherzustellen, dass
ungewollte Verbindungen keinen Weg nach draußen finden.

</list>

<p>FIXME: this procedure considers service hardening but not system
hardening at the user level, include information regarding checking
user permissions, setuid files and freezing changes in the system
using the ext2 filesystem.

<appendix id="checklist">Konfigurations Checkliste

<p>Dieser Anhang Anhang wiederholt kurz Punkte aus anderen Abschnitten
dieser Anleitung in einem verdichteten Checklisten Format. Er ist als
schnelle Zusammenfassung für Leute gedacht, die bereits diese
Anleitung gelesen haben. Es gibt auch andere Checklisten, Kurt Seifried
hat eine basierend auf dem Kurs <url
id="http://seifried.org/security/os/linux/20020324-securing-linux-step-by-step.html"
name="Securing Linux Step by Step"> aufgesetzt.


<!-- FIXME: Add pointer to Unix Security Checklist (CERT) -->

<!-- Order is slightly different from body text. Consider changing text? -->
<!-- (FIXME) -->

<p>FIXME: This is based on v1.4 of the manual and might need to be updated.

<list>
	  <item>Schränkgen Sie physischen Zugriff und
	  Boot-Fähigkeiten ein.
	      <list>
		<item>Setzen Sie ein BIOS-Passwort
		<item>Schalten Sie das Booten von Diskette, CD-ROM, ...
		ab
		<item>Setzen Sie ein LILO bzw. GRUB Passwort
		(<file>/etc/lilo.conf</file> bzw.
		<file>/boot/grub/menu.lst</file>); prüfen Sie, dass
		die LILO oder GRUB Konfigurationen nicht einsehbar ist
		<item>Verhindern Sie die Hintertür des Bootens von
		Diskette durch den MBR, indem Sie den MBR
		überschreiben (vielleicht nicht?)
		<!-- TODO: Ich kenne diese back door nicht, und habe das
		vielleicht falsch uebersetzt:
		Disallow MBR floppy booting back door by
		    overwriting the MBR (maybe not?) -->

	      </list>
	      
	  <item>Parttionierung
	      <list>
		<item>Separieren Sie User-schreibbare Daten, nicht-System
		Daten und sich ständig ändernde Laufzeit Daten
		auf Ihre eigenen Partitionen
		<item>Setzen Sie <tt>nosuid,noexec,nodev</tt>
		Mount-Optionen in die <file>/etc/fstab</file> bei
		ext2-Partitionen, wie zum Beispiel <file>/tmp</file>.
	      </list>
	      
	  <item>Passwort-Hygiene und Login-Sicherheit
	      <list>
		<item>Setzen Sie ein gutes Root-Passwort
		<item>Benutzen Sie Shadow- und MD5-Passwords
		<item>Installieren und benutzen Sie PAM
		    <list>
		      <item>Fügen Sie PAM MD5 Support hinzu, und
		      stellen Sie sicher (allgemein gesprochen) dass die
		      Einträge in den <file>/etc/pam.d/</file>
		      Dateien, die Zugriff auf die Maschine
		      gewähren, das zweite Feld <!-- or is it third?
		      (FIXME: check) --> in der pam.d-Datei auf
		      "requisite" oder "required" gesetzt haben.
		      <item>Ändern Sie
		      <file>/etc/pam.d/login</file>, so dass es nur
		      lokale Root-Logins erlaubt.
		      <item>Markieren Sie ausßerdem authorisierte ttys in
		      <file>/etc/security/access.conf</file> und setzen
		      Sie diese Datei überhaupt so auf, dass
		      Root-Logins so weit wie möglich
		      eingeschränkt werden.
		      <item>Fügen Sie pam_limits.sp hinzu, wenn Sie
		      pro User Einschränkungen vornehmen wollen.
		      <item>Ändern Sie
		      <file>/etc/pam.d/passwd</file>: Setzen Sie die
		      minimum Länge von Passworten hoch (vielleicht
		      sechs Zeichen) und schalten Sie md5 ein.
		      <item>Wenn Sie es wünschen, fügen Sie
		      <file>/etc/group</file> die Gruppe wheel hinzu;
		      fügen Sie <file>/etc/pam.d/su</file>
		      pam_whell.so group=wheel hinzu.
		      <item>For angepasste pro-User Kontrollen, benutzen
		      Sie pam_listfile.so Einträge, wo es passt.
		      <item>Erstellen Sie eine Datei
		      <file>/etc/pam.d/other</file> und setzen Sie sie
		      mit strenger Sicherheit auf.
		    </list>
		<item>Setzen Sie in
		<file>/etc/security/limits.conf</file> Schranken
		(beachten Sie, dass <file>/etc/limits</file> nicht
		benutzt wird, wenn Sie PAM benutzen).
		<item>Festigen Sie <file>/etc/login.defs</file>; wenn Sie
		MD5 und/oder PAM einschalten machen Sie auch hier
		ebenfalls die gleichbedeutenden Änderungen.
		<item>Schalten Sie root FTP-Zugriff in
		<file>/etc/ftpusers</file> ab.
		<item>Schalten Sie Root-Login übers Netzwerk ab;
		benutzen Sie <manref name="su" section="1"> oder <manref
		name="sudo" section="1"> (überlegen Sie die
		Installation von <package>sudo</package>).
		<item>Benutzen Sie PAM, um zusätzliche Auflagen auf
		Logins zu ermöglichen.
	      </list>

	  <item>Andere Lokale Sicherheits Sachen:
	      <list>
		<item>Kernel Tweaks
		    (siehe <ref id="kernel-conf">)
		    
		<item>Kernel Patches
		    (siehe <ref id="kernel-patches">)
		    
		<item>Festigen der Zugriffsrechte auf Log-Dateien
		    (<file>/var/log/{last,fail}log</file>, Apache Logs)
		    
		<item>Verifizieren Sie, dass in
		<file>/etc/checksecurity.conf</file> setuid Checks
		eingeschaltet sind.
		<item>Überlegen Sie sich, an Log-Dateien nur
		anhängen zu lassen (append-only) und
		Konfigurationsdateien unveränderbar (immutable) zu
		machen, indem Sie chattr benutzen (nur ext2 Dateisystem)
		<item>Setzen Sie Datei-Integritäts-Test aus (siehe <ref
		id="check-integ">). Installieren Sie
		<package>debsums</package>.
		<item>Überlegen Sie, locate durch slocate zu
		ersetzen.
		<item>Alles auf einem lokalen Drucker mitloggen?
		<item>Brennen Ihrer Konfiguration auf eine bootbare CD und
		hier von booten?
		<item>Abschalten von Kernel-Modulen?
	      </list>
	      
	  <item>Beschränken von Netzwerk Zugriff
	      <list>
		<item>Installieren und konfigurieren Sie <prgn>ssh</prgn>
		    (Vorschlag: PermitRootLogin No in <file>/etc/ssh/sshd_config</file>,
		    PermitEmptyPasswords No; beachten Sie auch die
		    anderen Vorschläge im Text).
		<item>Überlegen Sie, ob Sie telnetd abschalten (in
		<file>/etc/inetd.conf</file>, benutzen Sie <tt>update-inetd
		      --disable</tt> (oder schalten Sie inetd ganz ab,
		      oder benutzen Sie einen Ersatz wie xinetd oder
		      rlinetd)) oder entfernen.
		<item>Schalten Sie andere überflüssig Netzwerk
		Dienste ab; mail, ftp, DNS, www usw. sollten nicht
		laufen, wenm Sie Sie nicht brauchen und nicht
		regelmässig überwachen.
		<item>Installieren Sie von den Diensten die Sie brauchen
		nicht einfach die weitverbreitesten Programme, sondern
		schauen Sie für sicherere Versionen, die Debian
		liefert (oder aus anderen Quellen). Was auch immer Sie
		schließlich benutzen: Gehen Sie sicher, dass Sie die
		Risiken verstanden haben.
		<item>Setzen Sie Chroot-Umgebungen für
		äusswärtige User und Daemonen auf
		<item>Konfigurieren Sie Firewall und tcp-Wrapper (d.h.
		<manref name="hosts_access" section="5">); beachten Sie
		den Trick für <file>/etc/hosts.deny</file> im Text.
		<item>Wenn Sie FTP laufen lassen, setzen Sie den
		ftpd-Server so auf, dass er immer als chroot im
		Heimat-Verzeichnis des Users läuft.
		<item>Wenn Sie X laufen lasen, schalten Sie xhost
		authentifizierung ab und benutzen Sie stattdessen ssh;
		oder noch besser. Ignorieren Sie weitergeleitete X
		komplett, wenn Sie können (hinzufügen von
		-nolisten tcp zu der X Kommando-Zeile und schalten Sie
		XDMCP in <file>/etc/X11/xdm/xdm-config</file> ab, indem
		Sie den requestPort auf 0 setzen)
		<item>Schalten Sie Zugriff von Außerhalb auf den Drucker
		ab
		<item>Tunneln Sie alle IMAP Oder POP Sitzungen durch SSL
		oder SSH; installieren Sie stunnel, wenn Sie diesen
		Dienst anderen Mail-Usern anbieten wollen
		<item>Setzen Sie einen Log-Host auf, und konfigurieren
		Sie andere Maschinen, ihre Logs an diesen Host zu senden
		(<file>/etc/syslog.conf</file>)
		<item>Sichern Sie BIND, Sendmail und andere komplexe
		Daemonen (starten in einer chroot-Umgebung; starten als
		nicht-Root pseudo-User)
		<item>Installieren Sie snort oder ein ähnliches
		Überwachungs Tools)
		<item>Verzichten Sie, falls möglich, auf NIS Und RPC
		(abschalten von portmap).
	      </list>

	  <item>Policy Angelegenheiten
	      <list>
		<item>Klären Sie die User über das Warum und
		Wie Ihrer Regelungen auf. Wenn Sie etwas verboten haben,
		dass auf anderen Systemen normalerweise verfügbar
		ist, stellen Sie Dokumentation bereit, die erklärt,
		wie man gleiche Resultate erreicht, indem man andere,
		sichere Mittel anwendet.
		<item>Verbieten Sie die Nutzung von Protokollen, die
		Klartext Passwörtet benutzen (telnet, rsh und
		Freunde, ftp, imap, pop, http, ...).
		<item>Verbieten Sie Programme, die SVGAlib benutzen.
		<item>Benutzen Sie Disk-Quotas.
	      </list>
	      
	  <item>Bleiben Sie über Sicherheits Angelegenheiten
	  informiert
	      <list>
		<item>Abonieren Sie sicherheits relevante Mailing-Listen
		<item>Abonieren Sie sicherheits Updates -- fügen Sie
		<file>/etc/apt/sources.list</file> einen Eintrag (oder
		Einträge) für
		http://security.debian.org/debian-security
		<item>Erinnern Sie sich auch regelmässig
		<prgn>apt-get update ; apt-get upgrade</prgn> (vielleicht
		per Cron-Job?) wie unter <ref id="update"> beschrieben
		laufen zu lassen.
	      </list>
	</list>

<appendix id="snort-box">Aufsetzen eines autonomen IDS

<p>Sie können sehr leicht eine Debian-Box als eigenständiges
Eindringlings-Erkennungs-System (Intrusion Detection System, IDS)
aufsetzen, wen Sie <package>snort</package> benutzen.

<p>Ein paar Richtlinien:

<list>
<item>Installieren Sie ein Debian Basis-System ohne zusätzliche
Pakete.

<item>Laden Sie notwendige Pakete (siehe die Liste der installierten
Pakete weiter unten) manuell herunter und installieren Sie
Sie (mit dpkg)

<item>Laden Sie ACID (Analysis Console for Intrusion Databases, Analyse
Konsole für Eindringling Datenbanken) herunter und installieren Sie
es
</list>

<p>ACID wird derzeit mit <package>acidlab</package> für Debian
paketiert, und stellt eine graphische WWW Schnittstelle zur Ausgabe von
Snort zur verfügung.
Es kann von <url id="http://www.cert.org/kb/acid/">, <url
id="http://acidlab.sourceforge.net"> oder <url
id="http://www.andrew.cmu.edu/~rdanyliw/snort/"> heruntergeladen werden.
Sie möchten vielleicht die <url
id="http://www.linuxdoc.org/HOWTO/Snort-Statistics-HOWTO/index.html"
name="Snort Statistics HOWTO"> lesen.

<p>Dieses System sollte mit wenigstens Zwei Netzwerk-Schnittstellen
ausgestatten sein: Eine mit dem Verwaltungs-LAN verbunden (um die
Resultate abzufragen und das System zu verwalten), und eines ohne
ip-Adresse, das an mit dem zu beobachtenden  Netzwerk-Segment verbunden
ist.

<p>Sie können normalerweise nicht die standard Debian Datei
<file>/etc/network/interfaces</file> benutzen, um die Netzwerk-Karten zu
konfigurieren, da <prgn>ifup</prgn> und <prgn>ifdown</prgn> mehr
Informationen erwarten, als benötigt werden. Benutzen Sie einfach
<tt>ifconfig ethX up</tt>.

<p>Abgesehen von der standard Debian installation benötigen Sie
Apache, MySQL und PHP4 damit ACID funktioniert. Laden Sie die Pakete
herunter (Beachten Sie: Die Versionen können abhängig von der
verwendeten Debian Distribution variieren, diese sind von Debian
<em>Woody</em> September 2001):

<example>
ACID-0.9.5b9.tar.gz
adduser_3.39_all.deb
apache-common_1.3.20-1_i386.deb
apache_1.3.20-1_i386.deb
debconf_0.9.77_all.deb
dialog_0.9a-20010527-1_i386.deb
fileutils_4.1-2_i386.deb
klogd_1.4.1-2_i386.deb
libbz2-1.0_1.0.1-10_i386.deb
libc6_2.2.3-6_i386.deb
libdb2_2.7.7-8_i386.deb
libdbd-mysql-perl_1.2216-2_i386.deb
libdbi-perl_1.18-1_i386.deb
libexpat1_1.95.1-5_i386.deb
libgdbmg1_1.7.3-27_i386.deb
libmm11_1.1.3-4_i386.deb
libmysqlclient10_3.23.39-3_i386.deb
libncurses5_5.2.20010318-2_i386.deb
libpcap0_0.6.2-1_i386.deb
libpcre3_3.4-1_i386.deb
libreadline4_4.2-3_i386.deb 
libstdc++2.10-glibc2.2_2.95.4-0.010703_i386.deb
logrotate_3.5.4-2_i386.deb
mime-support_3.11-1_all.deb
mysql-client_3.23.39-3_i386.deb
mysql-common_3.23.39-3.1_all.deb
mysql-server_3.23.39-3_i386.deb
perl-base_5.6.1-5_i386.deb
perl-modules_5.6.1-5_all.deb
perl_5.6.1-5_i386.deb
php4-mysql_4.0.6-4_i386.deb
php4_4.0.6-1_i386.deb
php4_4.0.6-4_i386.deb
snort_1.7-9_i386.deb
sysklogd_1.4.1-2_i386.deb
zlib1g_1.1.3-15_i386.deb
</example>

<p>Installierte Pakete (dpkg -l):
<example>
ii  adduser        3.39
ii  ae             962-26
ii  apache         1.3.20-1
ii  apache-common  1.3.20-1
ii  apt            0.3.19
ii  base-config    0.33.2
ii  base-files     2.2.0
ii  base-passwd    3.1.10
ii  bash           2.03-6
ii  bsdutils       2.10f-5.1
ii  console-data   1999.08.29-11.
ii  console-tools  0.2.3-10.3
ii  console-tools- 0.2.3-10.3
ii  cron           3.0pl1-57.2
ii  debconf        0.9.77
ii  debianutils    1.13.3
ii  dialog         0.9a-20010527-
ii  diff           2.7-21
ii  dpkg           1.6.15
ii  e2fsprogs      1.18-3.0
ii  elvis-tiny     1.4-11
ii  fbset          2.1-6
ii  fdflush        1.0.1-5
ii  fdutils        5.3-3   
ii  fileutils      4.1-2   
ii  findutils      4.1-40
ii  ftp            0.10-3.1
ii  gettext-base   0.10.35-13
ii  grep           2.4.2-1
ii  gzip           1.2.4-33
ii  hostname       2.07
ii  isapnptools    1.21-2
ii  joe            2.8-15.2  
ii  klogd          1.4.1-2   
ii  ldso           1.9.11-9   
ii  libbz2-1.0     1.0.1-10
ii  libc6          2.2.3-6
ii  libdb2         2.7.7-8
ii  libdbd-mysql-p 1.2216-2
ii  libdbi-perl    1.18-1
ii  libexpat1      1.95.1-5
ii  libgdbmg1      1.7.3-27
ii  libmm11        1.1.3-4
ii  libmysqlclient 3.23.39-3
ii  libncurses5    5.2.20010318-2
ii  libnewt0       0.50-7  
ii  libpam-modules 0.72-9
ii  libpam-runtime 0.72-9  
ii  libpam0g       0.72-9
ii  libpcap0       0.6.2-1
ii  libpcre3       3.4-1   
ii  libpopt0       1.4-1.1
ii  libreadline4   4.2-3 
ii  libssl09       0.9.4-5   
ii  libstdc++2.10  2.95.2-13 
ii  libstdc++2.10- 2.95.4-0.01070
ii  libwrap0       7.6-4   
ii  lilo           21.4.3-2
ii  locales        2.1.3-18
ii  login          19990827-20
ii  makedev        2.3.1-46.2
ii  mawk           1.3.3-5
ii  mbr            1.1.2-1 
ii  mime-support   3.11-1 
ii  modutils       2.3.11-13.1
ii  mount          2.10f-5.1
ii  mysql-client   3.23.39-3
ii  mysql-common   3.23.39-3.1
ii  mysql-server   3.23.39-3
ii  ncurses-base   5.0-6.0potato1
ii  ncurses-bin    5.0-6.0potato1
ii  netbase        3.18-4  
ii  passwd         19990827-20
ii  pciutils       2.1.2-2
ii  perl           5.6.1-5   
ii  perl-base      5.6.1-5   
ii  perl-modules   5.6.1-5
ii  php4           4.0.6-4   
ii  php4-mysql     4.0.6-4 
ii  ppp            2.3.11-1.4
ii  pppconfig      2.0.5
ii  procps         2.0.6-5   
ii  psmisc         19-2   
ii  pump           0.7.3-2 
ii  sed            3.02-5 
ii  setserial      2.17-16
ii  shellutils     2.0-7
ii  slang1         1.3.9-1  
ii  snort          1.7-9
ii  ssh            1.2.3-9.3
ii  sysklogd       1.4.1-2
ii  syslinux       1.48-2
ii  sysvinit       2.78-4  
ii  tar            1.13.17-2  
ii  tasksel        1.0-10 
ii  tcpd           7.6-4     
ii  telnet         0.16-4potato.1
ii  textutils      2.0-2  
ii  update         2.11-1    
ii  util-linux     2.10f-5.1
ii  zlib1g         1.1.3-15  
</example>

<appendix id="bridge-fw">Aufsetzen einer Überbrückenden <!--
AUA! Wie waers mit weiterleitend? --> Firewall (bridge Firewall)

<p>Diese Informationen trug Francois Bayart bei, um User zu helfen, eine
Linux Bridge / Firewall mit 2.4.x Kernel und <package>iptables</package>
aufzusetzen. Es wird lediglich noch der Bridge-Firewall-Patch
benötigt, den Sie auf der <url name="sourceforge download page"
id="http://bridge.sourceforge.net/download.html"> finden.

<p>Wenn Sie zum Beispiel einen 2.4.18er Kernel benutzen, müsen Sie
den entsprechenden <url name="patch"
id="http://bridge.sourceforge.net/devel/bridge-nf/bridge-nf-0.0.6-against-2.4.18.diff">
herunterladen und anschliessend auf die installierten Kernel-Quellen
anwenden:

<example>
Zipowz:/usr/src# apt-get install kernel-source-2.4.18
Zipowz:/usr/src# cd kernel-source-2.4.18
Zipowz:/usr/src/kernel-source-2.4.18# patch -p1 < ../bridge-nf-0.0.6-against-2.4.18.diff 
patching file include/linux/netfilter.h
patching file include/linux/netfilter_ipv4.h
patching file include/linux/skbuff.h
patching file net/bridge/br.c
patching file net/bridge/br_forward.c
patching file net/bridge/br_input.c
patching file net/bridge/br_netfilter.c
patching file net/bridge/br_private.h
patching file net/bridge/Makefile
patching file net/Config.in
patching file net/core/netfilter.c
patching file net/core/skbuff.c
patching file net/ipv4/ip_output.c
patching file net/ipv4/netfilter/ip_tables.c
patching file net/ipv4/netfilter/ipt_LOG.c
</example>

<p>Jetzt rufen Sie die Kernel-Konfiguration auf (mit Ihrer lieblings
Methode: make menuconfig, make xconfig, ...). Aktivieren Sie diese
Optionen unter <em>Networking option</em>:

<example>
[*] Network packet filtering (replaces ipchains)
[ ]   Network packet filtering debugging (NEW)
<*> 802.1d Ethernet Bridging
[*]   netfilter (firewalling) support (NEW)
</example>

<p>Passen Sie auf, dass Sie dieses hier deaktiviert haben, wenn Sie
Firewall-Regeln anwenden wollen, oder iptables funktioniert nicht.

<example>
[ ]   Network packet filtering debugging (NEW)
</example>

<p>Anschliessend müssen Sie die korrekten Optionen im Abschnitt
<em>IP: Netfilter Configuration</em>setzen. Dann kompilieren und
installieren Sie den Kernel. Wenn Sie dies auf die <em>Debian Art</em>
machen wollen, installieren Sie <package>kernel-package</package> und
benutzen Sie <prgn>make-kpkg</prgn> um ein neues Debian Paket zu
erstellen, das Sie auf Ihrem Server installieren können (oder auf
einem anderen System benutzen können). Sobald der neue Kernel
kompiliert und installiert ist, müssen Sie die
<package>bridge-utils</package> installieren.

<p>Jetzt können Sie zwei verschiedene Konfigurationen betrachten,
die Ihnen zeigen, wie Sie das konfigurieren können, sobald diese
Schritte erledigt sind. Beide Konfigurationen sind mit einer
Netzwerk-Karte und den notwendigen Kommandos zur konfiguration der Bridge
aufgeführt.

<sect>Eine Bridge mit NAT- und Firewall-Fähigkeiten

<p>Die erste benutzt eine Bridge als Firewall mit Network Address
Translation (NAT),  die einen Server und interne LAN-Clienten
schützt.

<example>
Internet ----- router ( 62.3.3.25 ) ----- bridge ( 62.3.3.26 gw 62.3.3.25 / 192.168.0.1 )
                                            |
                                            |
                                            |---- WWW-Server ( 62.3.3.27 gw 62.3.3.25 )
                                            |
                                            |
                                           LAN --- Zipowz ( 192.168.0.2 gw 192.168.0.1 )
</example>

<p>Diese Kommandos zeigen, wie die Bridge konfiguriert werden kann:
<example>
# So wird die Schnittstelle br0 erstellt:
/usr/sbin/brctl addbr br0

# Hinzufügen der Ethernet-Schnittstellen, die die Bridge benutzen
# soll
/usr/sbin/brctl addif br0 eth0
/usr/sbin/brctl addif br0 eth1

# Die Schnittstellen einfach starten
/sbin/ifconfig eth0 0.0.0.0
/sbin/ifconfig eth1 0.0.0.0

# Konfigurieren der Ethernet-Bridge
# Die Bridge wird korrekt und unsichtbar (transparente Firewall) sein.
# In einem traceroute ist Sie versteckt, und Sie behalten Ihr echtes
# Gateway auf Ihren anderen Computern. Jetzt können Sie ein Gateway
# auf Ihrer Bridge konfigurieren und es auf Ihren anderen Computern als
# neues Gateway einsetzen

/sbin/ifconfig br0 62.3.3.26 netmask 255.255.255.248 broadcast 62.3.3.32

# Ich habe benutze diese internen IPs für mein NAT
ip addr add 192.168.0.1/24 dev br0
/sbin/route add default gw 62.3.3.25
</example>

<sect>Eine Bridge mit Firewall Fähigkeiten

<p>Dieses System ist als transparente Firewall für ein LAN mit
öffentlichen IP-Addressen aufgesetzt.

<example>
Internet ----- router ( 62.3.3.25 ) ----- bridge ( 62.3.3.26 )
                                            |
                                            |
                                            |---- WWW Server ( 62.3.3.28 gw 62.3.3.25 )
                                            |
                                            |
                                            |---- Mail Server ( 62.3.3.27 gw 62.3.3.25 )
</example>

<p>Diese Kommandos zeigen, wie die Bridge konfiguriert werden kann:
<example>
# So wird die Schnittstelle br0 erstellt:
/usr/sbin/brctl addbr br0

# Hinzufügen der Ethernet-Schnittstellen, die die Bridge benutzen
# soll
/usr/sbin/brctl addif br0 eth0
/usr/sbin/brctl addif br0 eth1

# Die Schnittstellen einfach starten
/sbin/ifconfig eth0 0.0.0.0
/sbin/ifconfig eth1 0.0.0.0

# Konfigurieren der Ethernet-Bridge
# Die Bridge wird korrekt und unsichtbar (transparente Firewall) sein.
# In einem traceroute ist Sie versteckt, und Sie behalten Ihr echtes
# Gateway auf Ihren anderen Computern. Jetzt können Sie ein Gateway
# auf Ihrer Bridge konfigurieren und es auf Ihren anderen Computern als
# neues Gateway einsetzen

/sbin/ifconfig br0 62.3.3.26 netmask 255.255.255.248 broadcast 62.3.3.32
</example>

<p>Wenn Sie traceroute auf den Linux-Mail-Server schicken, sehen Sie die
Bridge nicht, wenn Sie mit ssh auf die Bridge zugreifen wollen,
müssen Sie ein Gateway haben, oder erst auf einen anderen Server,
wie den "Mail Server", zugreifen um dann über die interne
Netzwerkkarte auf die Bridge zuzugreifen.

<sect>grundlegende Iptables-Regeln

<p>Dies ist ein Beispiel für grundlegende Regeln, die für beide
Beispiele benutzt werden könnten:

<example>
iptables -F FORWARD
iptables -P FORWARD DROP
iptables -A FORWARD -s 0.0.0.0/0.0.0.0 -d 0.0.0.0/0.0.0.0 -m state --state INVALID -j DROP
iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

# Zwei lustige Regeln, aber nicht bei klassischen Iptables. Sorry ...
# Limit ICMP 
# iptables -A FORWARD -p icmp -m limit --limit 4/s -j ACCEPT
# Uebereinstimmende Strings, eine gute, einfache Methode, um Viren sehr
# schnell abzublocken
# iptables -I FORWARD -j DROP -p tcp -s 0.0.0.0/0 -m string --string "cmd.exe"

# Abblocken aller MySQL Verbindingen, nur um ganz sicher zu gehen
iptables -A FORWARD -p tcp -s 0/0 -d 62.3.3.0/24 --dport 3306 -j DROP

# Regeln für den Linux Mail Server
#

# Erlaube FTP-DATA ( 20 ) , FTP ( 21 ) , SSH ( 22 ) 
iptables -A FORWARD -p tcp -s 0.0.0.0/0 -d 62.3.3.27/32 --dport 20:22 -j ACCEPT

# Dem Mail-Server erlauben, sich mit der Außenwelt zu verbinden
# Beachten Sie: Dies ist *nicht* fuer die vorherigen Verbindungen
# notwendig (Erinnern Sie sich: stateful filtering) und koennte entfernt
# werden:
iptables -A FORWARD -p tcp -s 62.3.3.27/32 -d 0/0 -j ACCEPT

# Regeln fuer den WWW-Server
#

# Erlaube HTTP ( 80 ) Verbindungen mit dem WWW-server
iptables -A FORWARD -p tcp -s 0.0.0.0/0 -d 62.3.3.28/32 --dport 80 -j ACCEPT

# Erlaube HTTPS ( 443 ) Verbindungen mit dem WWW-server
iptables -A FORWARD -p tcp -s 0.0.0.0/0 -d 62.3.3.28/32 --dport 443 -j ACCEPT

# Dem WWW-Server erlauben, sich mit der Außenwelt zu verbinden
# Beachten Sie: Dies ist *nicht* fuer die vorherigen Verbindungen
# notwendig (Erinnern Sie sich: stateful filtering) und koennte entfernt
# werden:
iptables -A FORWARD -p tcp -s 62.3.3.28/32 -d 0/0 -j ACCEPT
</example>

<appendix id="bind-chuser">Beispiel Skript, um die standard Installation
von Bind zu ändern

<p>Dieses Skript automatisiert die Prozedur, die standard Installation
des Name-Server zu ändern, so dass er <em>nicht</em> als Superuser
läuft. Benutzen Sie es vorsichtig, da es nicht ausreichend getestet
wurde. Dieses Skript wird auch den User und die Gruppe für den
Name-Server erstellen.

<example>
#!/bin/sh
# Change the default Debian bind configuration to have it run
# with a non-root user and group.
#
# WARN: This script has not been tested throughly, please
# verify the changes made to the INITD script

# (c) 2002 Javier Fernandez-Sanguino Peña
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 1, or (at your option)
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#     Please see the file `COPYING' for the complete copyright notice.
#

restore() {
# Just in case, restore the system if the changes fail
	echo "WARN: Restoring to the previous setup since I'm unable to properly change it."
	echo "WARN: Please check the $INITDERR script."
	mv $INITD $INITDERR
	cp $INITDBAK $INITD
}


USER=named
GROUP=named
INITD=/etc/init.d/bind
INITDBAK=$INITD.preuserchange
INITDERR=$INITD.changeerror
START="start-stop-daemon --start --quiet --exec /usr/sbin/named -- -g $GROUP -u $USER"
AWKS="awk ' /start-stop-daemon --start/ { print \"$START\"; noprint = 1; }; /\/usr\/sbin\/ndc reload/ { print \"stop; sleep 2; start;\"; noprint = 1; } /\\\\$/ { if ( noprint != 0 ) { noprint = noprint + 1;} } /^.*$/ { if ( noprint != 0 ) { noprint = noprint - 1; } else { print \$0; } } '"

[ `id -u` -ne 0 ] && {
	echo "This program must be run by the root user"
	exit 1
}

RUNUSER=`ps -eo user,fname |grep named |cut -f 1 -d " "`

if [ "$RUNUSER" = "$USER" ] 
then
	echo "WARN: The name server running daemon is already running as $USER"
	echo "ERR:  This script will not many any changes to your setup."
	exit 1
fi
if [ ! -f $INITD ]
then
        echo "ERR:  This system does not have $INITD (which this script tries to change)"
        RUNNING=`ps -eo fname |grep named`
         [ -z "$RUNNING" ] && \
	    echo "ERR:  In fact the name server daemon is not even running (is it installed?)"
         echo "ERR:  No changes will be made to your system"
	exit 1
fi

# Check if named group exists
if [ -z "`grep $GROUP /etc/group`" ] 
then
	echo "Creating group $GROUP:"
	addgroup $GROUP
else
	echo "WARN: Group $GROUP already exists. Will not create it"
fi
# Same for the user
if [ -z "`grep $USER /etc/passwd`" ] 
then
	echo "Creating user $USER:"
	adduser --system --home /home/$USER \
	--no-create-home --ingroup $GROUP \
	--disabled-password --disabled-login $USER
else
	echo "WARN: The user $USER already exists. Will not create it"
fi

# Change the init.d script

# First make a backup (check that there is not already
# one there first)
if [ ! -f $INITDBAK ] 
then
	cp $INITD $INITDBAK
fi

# Then use it to change it
cat $INITDBAK |
eval $AWKS > $INITD

echo "WARN: The script $INITD has been changed, trying to test the changes."
echo "Restarting the named daemon (check for errors here)."

$INITD restart
if [ $? -ne 0 ] 
then
	echo "ERR:  Failed to restart the daemon."
	restore
	exit 1
fi

RUNNING=`ps -eo fname |grep named`
if [ -z "$RUNNING" ] 
then
	echo "ERR:  Named is not running, probably due to a problem with the changes."
	restore
	exit 1
fi

# Check if it's running as expected
RUNUSER=`ps -eo user,fname |grep named |cut -f 1 -d " "`

if [ "$RUNUSER" = "$USER" ] 
then
	echo "All has gone well, named seems to be running now as $USER."
else
	echo "ERR:  The script failed to automatically change the system."
	echo "ERR:  Named is currently running as $RUNUSER."
	restore
	exit 1
fi

exit 0
</example>

<p>Dieses Skript, angesetzt auf Woodys (Debian 3.0) angepassten Bind
wird die folgende initd-Datei erstellen, nachdem der User und die Gruppe
"named" erstellt wurde:

<example>
#!/bin/sh

PATH=/sbin:/bin:/usr/sbin:/usr/bin

test -x /usr/sbin/named || exit 0

start () {
	echo -n "Starting domain name service: named"
	start-stop-daemon --start --quiet \
	    --pidfile /var/run/named.pid --exec /usr/sbin/named 
	echo "."	
}

stop () {
	echo -n "Stopping domain name service: named"
	# --exec doesn't catch daemons running deleted instances of named,
	# as in an upgrade.  Fortunately, --pidfile is only going to hit
	# things from the pidfile.
	start-stop-daemon --stop --quiet  \
	    --pidfile /var/run/named.pid --name named
	echo "."	
}

case "$1" in
    start)
	start
    ;;

    stop)
	stop
    ;;

    restart|force-reload)
	stop
	sleep 2
	start
    ;;
    
    reload)
	/usr/sbin/ndc reload
    ;;

    *)
	echo "Usage: /etc/init.d/bind {start|stop|reload|restart|force-reload}" >&2
	exit 1
    ;;
esac

exit 0
</example>

<appendix id="fw-security-update">Sicherheits-Update geschützt durch
eine Firewall

<p>Nachdem Sie eine standard Installation auf ein System gebracht haben,
könnten immer noch Sicherheits-Lücken vorhanden sein, falls dem
so ist könnte es Updates von Debian für die Release geben.
Jedoch können Sie die Pakete jedoch nicht auf einem anderen System
herunterladen können (oder security.debian.org zu lokalen Zwecken
spiegeln können), müssen Sie es mit dem Internet verbinden, um
ein Sicherheits Update zu durchzuführen.

<p>Wenn Sie sich jedoch mit dem Internet verbinden, setzen Sie sich
selbst Gefahr aus. Wenn einer Ihrer lokalen Diensten angreifbar ist,
könnten Sie kompromittiert werden, noch bevor das Update beendet ist!
Sie mögen dies paranoid finden, aber eine Analyse vom <url
id="http://www.honeynet.org" name="Honeynet Project"> zeigt
tatsächlich, dass ein System in weniger als drei Tagen kompromittiert
werden sogar, sogar wenn das System gar nicht der Öffentlichkeit
bekannt ist (d.h. nicht in DNS-Einträgen auftaucht).

<p>Wenn Sie ein update auf dem System durchführen, das nicht von
einem externen System (einer Firewall) geschützt ist, können
Sie trotzdem eine lokale Firewall so konfigurieren, dass Sie nur das
Sicherheits-Update selbst erlaubt. Schauen Sie sich das Beispiel unter
an, um zu sehen, wie die lokalen Firewall Fähigkeiten aufgesetzt
werden, um ein eingeschränktes Setup zu erreichen, in dem nur
Verbindungen zu security.debian.org erlaubt werden, während der Rest
geloggt wird.


<p>FIXME: add IP address for security.debian.org (since otherwise you
need DNS up to work) on /etc/hosts.

<p>FIXME: test this setup to see if it works properly

<p>FIXME: this will only work with http urls since ftp might need 
the ip_conntrack_ftp module, or use passive mode.

<!-- FIXME: this is probably not needed, after all it is a 
packet inspection fw:
# iptables -A INPUT -s security.debian.org -p 80 -j ACCEPT
-->

<example>
# iptables -F
# iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination
# iptables -P INPUT DROP
# iptables -P FORWARD DROP
# iptables -P OUTPUT DROP
# iptables -A OUTPUT -d security.debian.org -p 80 -j ACCEPT
# iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
# iptables -A INPUT -p icmp -j ACCEPT
# iptables -A INPUT -j LOG
# iptables -A OUTPUT -j LOG
# iptables -L
Chain INPUT (policy DROP)
target     prot opt source               destination
ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0          state RELATED,ESTABLISHED
ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0
LOG        all  --  anywhere             anywhere           LOG level warning

Chain FORWARD (policy DROP)
target     prot opt source               destination

Chain OUTPUT (policy DROP)
target     prot opt source               destination
ACCEPT     80   --  anywhere             security.debian.org
LOG        all  --  anywhere             anywhere           LOG level warning
</example>


</book>
