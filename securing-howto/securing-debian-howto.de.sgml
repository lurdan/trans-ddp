<!doctype debiandoc system>
<!--
# TODO list:
# - There was a 'useful software section' why was it removed? jfs
# - Shorten overlong lines - there are lots of sections (by jfs?) where
#   lines are routinely longer than 80 characters. Actually it makes sense
#   to author SGML with much shorter lines, because it makes editing simpler
#   (while the internal line length of the SGML source is obviously not
#   visible in any way to the end user).
#   (occur (make-string 80 ?.))   ;  C-x C-e here
# - Remove gratuitous trailing whitespace; M-x occur " +$"
# - Consider changing order of subsections so as to match the order in
#   the checklist appendix
-->

<book>

<titlepag>
<!-- Title information -->
<title>Anleitung zum Absichern von Debian
<author>
<name>Javier Fernández-Sanguino Peña</name>
<email>jfs@computer.org</email>
</author>
<version>2.5 (beta)
<date>Sat, 17 Aug 2002 12:23:36 +0200

<abstract>
Dieses Dokument berscheibt den Prozess eine Debian-Standard-Installation
abzusichern und abzuh&auml;rten. Es deckt die allt&auml;gliche Arbeit,
ein sichere Netz-Umgebung mit Debian GNU/Linux zu schaffen ab, und gibt
zus&auml;tzlich Informationen &uuml;ber verf&uuml;gbare Sicherheits-Tools
und die Arbeit des Debian Sicherheit-Teams.
</abstract>

<copyright> 
<copyrightsummary>Copyright &copy;  2002 Javier Fernández-Sanguino Peña
<p>Copyright &copy;  2001  Alexander Reelsen, Javier Fernández-Sanguino Peña
<p>Copyright &copy;  2000  Alexander Reelsen

<p>Dieses Dokument unterliegt der GNU Free Documentation License. Es wird
in der Hofnung, dass es sich als n&uuml;tzlich erweisen k&ouml;nnte, aber
OHNE JEDE GEW&Auml;HRLEISTUNG.
</copyright>

</titlepag>

<!-- Table of contents -->
<toc>

<!-- Begin the document -->

<chapt>Introduction
<p>
Wenn etwas &uuml;ber Sicherheit schreibt, ist es eines der schwierigsten
Dinge, dass jeder Fall einzigartig ist. Sie m&uuml;ssen zwei Dinge
beachten: Die Gefahr aus der Umgebung und das Bed&uuml;rfniss an
Sicherheit ihrer Seite, ihres Hosts oder ihres Netzwerkes. So
unterscheiden sich zum Beispiel die Sicherheitsbed&uuml;rfnisse eines
Heimanwenders kompltett von denen Sicherheitsbed&uuml;rfnisses des
Netzwerkes einer Bank. W&auml;hrend die Hauptgefahr eines Heimanwender
von "Scipt-Kiddies"  ausgeht, muss sich das Netzwerk einer Bank um
direkte Angriffe sorgen. Zus&auml;tzlich muss eine Bank die Daten ihrer
Kunden mit mathematischer Pr&auml;zission besch&uuml;tzen. Um es kurz zu
machen: Jeder Nutzer muss selbst zwischen Benutzerfreundlichkeit und
Sicherheit/Paranoia abw&auml;gen.

<!-- Is this metaphor really appropriate? Sounds like rounding errors to me, era -->
<p>Beachten sie bitte, dass diese Anleitung nur Software-Themen
behandelt. Die beste Software der Welt kann sie nicht sch&uuml;tzen, wenn
jemand direkten Zugang zu ihrem Rechner hat. Sie k&ouml;nnen ihn unter
ihren Schreibtisch stellen, oder sie k&ouml;nnen ihn in einem starken
Bunker mit einer ganzen Armee davor stellen. Trotzdem kann der Rechner
unter ihrem Schreibtisch weitaus sicherer sein - von der Software-Seite
aus gesehen - als der eingebunkerte, wenn ihr Schreibtischrechner richtig
konfiguriert ist und die Software des eingebunkerten Rechners voller
Sicherheitsl&ouml;cher ist. Sie m&uuml;ssen beide M&ouml;glichkeiten
betrachten.

<p>Dieses Dokument gibt ihne lediglich eine kleine &Uuml;berblick, was
sie tun k&ouml;nnen, um die Sicherheit ihres Debian GNU/Linux Systems zu
erg&ouml;hen. Wenn sie bereits andere Dokumente &uuml;ber Sicherheit
unter Linux gelesen haben, werden sie feststellen, dass es einige
&Uuml;berscheidungen geben wird. Wie auch immer: Dieses Dokument versucht
nicht die ultimative Informationsquelle zu sein, es versucht nur die
gleichen Informationen so zu adaptieren, dass sie gut auf ein Debian
GNU/Linux System passen. Unterschiedliche Distributionen erledigen manche
Dinge auf unterschiedliche Art (zum Beispiel der Aufruf von Daemons);
hier finden sie Material, dass zu Debians Prozeduren und Tools passt.
<!-- 
# Does this approximate the intent of the original author? (FIXME: check)
# Original text said: "you will find here [sic] a different approach,
# using Debian's tools, regarding security." era
-->
<!-- IMHO yes, jfs -->

<p>Wenn sie Kommentare, Erg&auml;nzungen oder andere Anregunden haben,
mailen sie sie bitte an <!-- <url name="Alexander Reelsen" id="mailto:ar@rhwd.de"> and  -->
<url name="Javier Fernández-Sanguino" id="mailto:jfs@computer.org">
(oder jfs@debian.org) und sie werden in diese Anleitung eingearbeitet
werden.
<p>Bei Fehlern in dieser &Uuml;bersetzung wenden sie sich bitte <url
name="Alexander Schmehl" id="mailto:schmehl@cs.uni-frankfurt.de">

<sect>Herunterladen dieser Anleitung
<p>
Sie k&ouml;nnen sich die neuste Version der &quot;Anleitung zum Absichern
von Debian&quot; beim <url name="Debian Documentation Project"
id="http://www.debian.org/doc/manuals/securing-debian-howto/">
herunterladen oder anschauen. Sie k&ouml;nnen auch gerne die
unterschiedlichen Versionen im <url name="CVS server"
id="http://cvs.debian.org/ddp/manuals.sgml/securing-howto/?cvsroot=debian-doc">
durchforsten.

<p>Sie k&ouml;nnen ausserdem eine reine <url id="http://www.debian.org/doc/manuals/securing-debian-howto/securing-debian-howto.txt"
name="Text-Version"> von der Seite des Debian Dokumentations Projektes
bekommen. Andere Formate, wie zum Beispiel PDF, stehen (noch) nicht zur
Verf&uuml;gung, sie k&ouml;nnen aber das Paket <url
id="http://packages.debian.org/harden-doc" name="harden-doc">, in welchem
das gleiche Dokument in den Formaten HTML, txt und PDF enthalten ist,
herunterladen und installieren.

<!-- 
<p>
Previous (out of date) versions of this HOWTO can be found here:

<list>
<item><url name="Text-only"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.txt">
<item><url name="HTML"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.html">
<item><url name="HTML, tarred and gzipped"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.tar.gz">
<item><url name="SGML"
id="http://joker.rhwd.de/doc/Securing-Debian-HOWTO/Securing-Debian-HOWTO.sgml">
</list>
-->
<!-- TODO: remove these stale links rather than leave references to -->
<!-- the old versions hanging around? era -->


<sect>Organisatorisches / Feedback
<p>
Nun kommt der offizielle Teil. Derzeit sind die meisten Teile dieser
Anleitung noch von mir (Alexander Reelsen) geschrieben, aber meiner
Meinung nach sollte dies nicht so bleiben. Ich wuchs mit Freier Software
auf und lebe mit ihr, sie ist ein Teil meiner allt&auml;glichen Arbeiten
und ich denke auch von ihrer. Ich ermutige jedermann mir Feedback, Tips
f&uuml;r Erg&auml;nzungen oder andere Vorschl&auml;ge, die sie haben
k&ouml;nnten, zuzuschicken.

<p>
Wenn sie denken, dass sie eine bestimmte Sektion oder Abschnitt besser
pflegen k&ouml;nnen, dann schreiben sie dem Dokumenten-Betreuer, und sie
d&uuml;rfen es gerne erledigen. Insbesondere, wenn sie eine Stellen
finden, die mit &quot;FIXME&quot; markiert wurde - was bedeutet, dass der
Autor noch nicht die Zeit hatte oder sich noch Wissen &uuml;ber das Thema
aneignen muss - schicken sie ihm sofort eine Mail.

<p>
F&uuml;r diese Anleitung ist es nat&uuml;rlich &auml;usserts wichtig,
dass sie weiter gepflegt und auf dem neusten Stand gehalten wird. Auch
sie k&ouml;nnen ihren Teil dazu beitragen. Bitte unterst&uuml;tzen sie
uns.

<sect>Vorwissen
<p>
Die Installation von Debian GNU/Linux ist nicht wirklich schwer, und sie
sollten in der Lage gewesen sein, es zu installieren. Wenn sie ihnen
andere Linux Distributionen, Unixe oder die grunds&auml;tzlichen
Sicherheitskonzepte ein wenig vertraut sind, wird ihnen leichter fallen,
diese Anleitung zu verstehen, da nicht auf jedes winzige Detail
eingegangen werden kann (oder dies w&auml;re ein Buch geworden, und keine
Anleitung). Wenn sie jedoch mit diesen Dingen noch nicht so vertraut
sind, sollten sie vielleicht einen Blick in die <ref id="references">
f&uuml;r tiefer gehende Informationen werfen.


<sect>Dinge, die noch geschrieben werden m&uuml;ssen (FIXME/TODO)
<p>
<list>

<item>Informationen, wie man unter Debian GNU/Linux eine Firewall
aufsetzt. Der Firewalls betreffende Abschnitt orientiert sich derzeit an
Einzelplatz-Systemem (die keine anderen System sch&uuml;tzen
m&uuml;ssen); auch auf das Testen des Setups eingehen

<item>Wie man eine Proxy-Firewall unter Debian GNU/Linux aufsetzt, unter
angabe, welche Pakete Proxy-Services anbieten (zum Beispiel <package>xfwp</package>,
<package>xproxy</package>, <package>ftp-proxy</package>,
<package>redir</package>, <package>smtpd</package>,
<package>nntp-cache</package>, <package>dnrd</package>,
<package>jftpgw</package>,<package>oops</package>,<package>pnsd</package>,
<package>perdition</package>,<package>transproxy</package>,
<package>tsocks</package>). Sollte zu einer Anleitung mit weiteren
Informations verweisen. Erw&auml;hnenswert dass zorp (noch) nicht Teil
von Debian ist, aber es <em>ist</em> eine Proxy-Firewall (und der
Programmautor stellt Debian-Pakete zur Verf&uuml;gung)

<item>Informationen &uuml;ber die Service-Konfiguration mit file-rc

<item>Alle Referenzen und URLs pr&uuml;fen und die nicht mehr Vorhanden
aktualisieren oder entfernen

<item>Informationen &uuml;ber vorhandenen Ersatz (unter Debian) f&uuml;r
h&auml;ufig eingesetzte Server, die bei eingeschr&auml;nktem
Funktionsumfang, n&uuml;tzlich sind. Beispiele:

	<list>
	<item>lokaler lpr mit cups (Paket)?

	<item>remote lrp mit lpr

	<item>bind mit dnrd/maradns

	<item>apache mit dhttpd/thttpd/wn (tux?)

	<item>exim/sendmail mit ssmtpd/smtpd/postfix

	<item>squid mit tinyproxy

	<item>ftpd mit oftpd/vsftp

	<item>...

	</list>


<item>Mehr Informationen &uuml;ber die Sicherheits relevanten Patches des
Kernels unter Debian, einschliesslich den unten aufgef&uuml;hrten und
insbesondere wie man diese Patches unter einem Debian System benutzt.

<list>

<item>Eindringlings Erkennung (Linux Intrusion Detection <package>lids-2.2.19</package>)

<item>Linux Trustees (im Paket <package>trustees</package>)

<item><url name="NSA Enhanced Linux" id="http://www.coker.com.au/selinux/">

<item><url name="kernel-patch-2.2.18-openwall" id="http://packages.debian.org/kernel-patch-2.2.18-openwall">

<item><package>kernel-patch-2.2.19-harden</package>

<item>Linux capabilities (im Paket <package>lcap</package>

<item><package>kernel-patch-freeswan,kernel-patch-int</package>

</list>

<item>Details, wie man unn&ouml;tige Services &uuml;bers Netzwerk
deaktiviert (abgesehen von inetd), dies ist teilweise Teil des
abh&auml;rtungs Prozesses, k&ouml;nnte aber etwas ausgeweitet werden.

<item>Informationen &uuml;ber Passwort-Rotation, was sehr nah an
grunds&auml;tzliche Regeln (Policies) herankommt

<item>Policies,  und die Aufkl&auml;rung der Nutzer &uuml;ber die Policy

<item>Mehr &uuml;ber tcpwrapper, und wrapper im allgemeinen?

<item><file>hosts.equiv</file> und andere wichtige Sicherheitsl&ouml;cher

<item>Angelegenheiten von Datei Freigabe, wie Samva und NFS? 

<item>suidmanager/dpkg-statoverrides.

<item>lpr und lprng.

<item>Abschalten der gnome IP-Dinge.

<item>Erw&auml;hnen von pam_chroot (siehe <url
id="http://http://lists.debian.org/debian-security/2002/debian-security-200205/msg00011.html">)
und seine N&uuml;tzlichkeit um Nutzer einzuschr&auml;nlen. Einfphrende
Informationen in Verbindung mit <url
id="http://online.securityfocus.com/infocus/1575">.
<package>Pdmenu</package> ist zum Beispiel bereits unter Debian
verf&uuml;gbar (while as flash is not).

<item>Dar&uuml;ber reden, Services zu chroot'en, mehr Informationen dazu
unter <url id="http://www.linuxfocus.org/English/January2002/aritcle225.shtml">,
<url id="http://www.networkdweebs.com/chroot.html"> und
<url id="http://www.linuxsecurity.com/feature_stories/feature_story-99.html">

<item>Programme erw&auml;hnen die Chroot Einbettungen (chroot jails)
machen. <package>Compartment</package> und <package>chrootuid</package>
warten noch in incoming. Einige andere (makejail, jailer) k&ouml;nnten
ebenfalls eingef&uuml;hrt werden.

<item>Die Informationen von Karl Hegbloom regarding &uuml;ber das
einbetten (chrooting) von Bind 9 (siehe <url
id="http://people.pdxlinux.org/~karlheg/Secure_Bind9_uHOWTO/Secure_Bind_9_uHOWTO.xhtml">)
hinzuf&uuml;gen.

<item>Die Informationen von Pedro Zornenon &uuml;ber das chrooten von
Bind 8, aber leider nur f&uuml;r potato :(, see <url id="http://people.debian.org/~pzn/howto/chroot-bind.sh.txt"> (include the whole script?).

<item>Mehr Informationen &uuml;ber Software zur Analyse von
Protokoll-Dateien (log-Dateien, logs; zum Beispiel
<package>logcheck</package> und logcolorise)
and logcolorise).

<item>&quot;fortgeschrittenes&quot; Routing (Traffic-Regelungen sind
Sicherheitsrelevant)

<item>Zugang &uuml;ber ssh so einschr&auml;nken, dass man nur bestimmte
Kommandos ausf&uuml;hren kann

<item>Die Benutzung von dpkg-statoverride.

<item>sichere Wege, mehreren Nutzern den Zugriff auf CD-Brenner zu
erlauben

<item>sichere Wege, um Sound zusammen mit einem Displey &uuml;ber ein
Netzwerk zu leiten (so dass die Sounds einen X Clients &uuml;ber die
Hardware eines X Servers abgespielt werden)

<item>Abscihern von Web-Browsern

<item>Aufsetzen von ftp &uuml;ber ssh

<item>Die Benutzung von verschl&uuml;sselten Loopback-Dateisystemen

<item>Verschl&uuml;sselung eines ganzen Dateisystems

<item>Steganographie-Tools

<item>Aufsetzen eines PKA f&uuml;r eine Organisation
<!-- Was ist ein PKA? Sollte man das &Uuml;bersetzen? -->

<item>LDAP benutzen zur Verwaltung der User. Es gibt eine HOWTO zu
ldap+kerberos f&uuml;r Debian auf www.bayour.com von Turbo Fredrikson.


</list>

<sect id="changelog">Changelog/History
 <p>
<sect1>Version 2.5 (august 2002)

<p>Changes by Javier Fernández-Sanguino Peña (me). There were many
things waiting on my inbox (as far back as february) to be included,
so I'm going to tag this the <em>back from honeymoon</em> release :)

<list>

<item>Added some information on how to setup the Xscreensaver to lock
automatically the screen after the configured timeout.

<item>Add a note related to the utilities you should not install in
the system. Including a note regarding Perl and why it cannot be
easily removed in Debian. The idea came after reading Intersect's
documents regarding Linux hardening.

<item>Added information on lvm and journaling filesystems, ext3
recommended. The information there might be too generic, however. 

<item>Added a link to the online text version (check).

<item>Added some more stuff to the information on firewalling the
local system triggered by a comment made by Hubert Chan in the mailing list.

<item>Added more information on PAM limits and pointers to Kurt
Seifried's documents (related to a post by him to bugtraq on April 4th
2002 answering a person that had ``discovered'' a vulnerability in
Debian GNU/Linux related to resource starvation)

<item>As suggested by Julián Muñoz, provided more information on the
default Debian umask and what a user can access if he has been given a
shell in the system (scary, huh?)

<item>Included a note in the BIOS password section due to a comment
from from Andreas Wohlfeld.

<item>Included patches provided by Alfred E. Heggestad fixing many of
the typos still present in the document.

<item>Added a pointer to the changelog in the Credits section since
most people who contribute are listed here (and not there)

<item>Added a few more notes to the chattr section and a new section
after installation talking about system snapshots. Both ideas were
contributed by Kurt Pomeroy.

<item>Added a new section after installation just to remember users to
change the boot-up sequence.

<item>Added some more TODO items provided by Korn Andras.

<item>Added a pointer to the NIST's guidelines on how to secure DNS
provided by Daniel Quinlan.

<item>Added a small paragraph regarding Debian's SSL certificates
infraestructure.

<item>Added Daniel Quinlan's suggestions regarding ssh authentication
and exim's relay configuration.

<item>Added more information regarding securing bind including changes
suggested by Daniel Quinlan and an appendix with a scrip to make some of the
changes commented on that section.

<item>Added a pointer to another item regarding Bind chrooting (needs to be merged)

<item>Added a one liner contributed by Cristian Ionescu-Idbohrn to
retrieve packages with tcpwrappers support.

<item>Added a little bit more info on Debian's default PAM setup.

<item>Included a FAQ question about using PAM to give services w/o
shell accounts.

<item>Moved two FAQ items to another section and added a new FAQ
regarding attack detection (and compromised systems).

<item>Included information on how to setup a bridge firewall
(including a sample Appendix). Thanks go to Francois Bayar who sent
me this on march.

<item>Added a FAQ regarding the syslogd's <em>MARK</em>
<em>heartbeat</em> from a question answered by Noah Meyerhans and
Alain Tesio on December 2001.

<item>Included information on buffer overflow protection as well as
some information on kernel patches.

<item>Added more information (and reorganised) the firewall
section. Updated the information regarding the iptables package and
the firewall generators available.

<item>Reorganized the information regarding logchecking, moved
logcheck information from host intrusion detection to that section.

<item>Added some information on how to prepare a static package for
bind for chrooting (untested).

<item>Added a FAQ item (could be expanded with some of the
recomendations from the debian-security list regarding some specific servers/services).

<item>Added some information on RPC services (and when it's necessary).

<item>Added some more information on capabilities (and what lcap does). Is there any
good documentation on this? I haven't found any on my 2.4 kernel.

<item>Fixed some typos.

</list>

<sect1>Version 2.4
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Rewritten part of the BIOS section.
</list>

<sect1>Version 2.3
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Wrapped most file locations with the file tag.
<item>Fixed typo noticed by Edi Stojicevi.
<item>Slightly changed the remote audit tools section.
<item>Added some todo items.
<item>Added more information regarding printers and cups config file
(taken from a thread on debian-security).
<item>Added a patch submitted by Jesus Climent regarding access of
valid system users to Proftpd when configured as anonymous server.
<item>Small change on partition schemes for the special case of mail
servers.
<item>Added Hacking Linux Exposed to the books section.
<item>Fixed directory typo noticed by Eduardo Pérez Ureta.
<item>Fixed /etc/ssh typo in checklist noticed by Edi Stojicevi.
</list>

<sect1>Version 2.3
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Fixed location of dpkg conffile.
<item>Remove Alexander from contact information.
<item>Added alternate mail address.
<item>Fixed Alexander mail address (even if commented out).
<item>Fixed location of release keys (thanks to Pedro Zorzenon for pointing this out).
</list>
<sect1>Version 2.2
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Fixed typos, thanks to Jamin W. Collins.
<item>Added a reference to apt-extracttemplate manpage
(documents the APT::ExtractTemplate config).
<item>Added section about restricted SSH. Information based on that
posted by  Mark Janssen, Christian G. Warden and Emmanuel Lacour on
the debian-security mailing list.
<item>Added information on anti-virus software.
<item>Added a FAQ: su logs due to the cron running as root.
</list>
<sect1>Version 2.1
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Changed FIXME from lshell thanks to Oohara Yuuma.
<item>Added package to sXid and removed comment since it *is* available.
<item>Fixed a number of typos discovered by Oohara Yuuma.
<item>ACID is now available in Debian (in the acidlab package)
 thanks to Oohara Yuuma for noticing.
<item>Fixed LinuxSecurity links (thanks to Dave Wreski for telling).
</list>
<sect1>Version 2.0
<p>Changes by Javier Fernández-Sanguino Peña. I wanted to 
change to 2.0 when all the FIXMEs were, er, fixed but I run out
of 1.9X numbers :(
<list>
<item>Converted the HOWTO into a Manual (now I can properly say RTFM)

<item>Added more information regarding tcp wrappers and Debian (now
many services are compiled with support for them so it's no longer
an inetd issue).

<item>Clarified the information on disabling services to make it more
consistent (rpc info still referred to update-rc.d)

<item>Added small note on lprng.

<item>Added some more info on compromised servers (still very rough)

<item>Fixed typos reported by Mark Bucciarelli.

<item>Added some more steps in password recovery to cover the cases
when the admin has set paranoid-mode=on.

<item>Added some information to set paranoid-mode=on when login in
console.

<item>New paragraph to introduce service configuration.

<item>Reorganised the <em>After installation</em> section so it is
more broken up into several issues and it's easier to read.

<item>Written information on howto setup firewalls with the standard
Debian 3.0 setup (iptables package).

<item>Small paragraph explaining why installing connected to the
Internet is not a good idea and how to avoid this using Debian tools.

<item>Small paragraph on timely patching referencing to IEEE paper.

<item>Appendix on how to setup a Debian snort box, based on what Vladimir
sent to the debian-security mailing list (September 3rd 2001)

<item>Information on how logcheck is setup in Debian and how it can be
used to setup HIDS.

<item>Information on user accounting and profile analysis.

<item>Included apt.conf configuration for read-only /usr copied from Olaf
Meeuwissen's post to the debian-security mailing list

<item>New section on VPN with some pointers and the packages available
in Debian (needs content on how to setup the VPNs and Debian-specific
issues), based on Jaroslaw Tabor's and Samuli Suonpaa's post to
debian-security.

<item>Small note regarding some programs to automatically build chroot jails

<item>New FAQ item regarding identd based on a discussion in the
debian-security mailing list (February 2002, started by Johannes Weiss).

<item>New FAQ item regarding inetd based on a discussion in the
debian-security mailing list (February 2002).

<item>Introduced note on rcconf in the "disabling services" section.

<item>Varied the approach regarding LKM, thanks to Philipe Gaspar 

<item>Added pointers to CERT documents and Counterpane resources
</list>

<sect1>Version 1.99
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Added a new FAQ item regarding time to fix security vulnerabilities.
<item>Reorganised FAQ sections.
<item>Started writing a section regarding firewalling in Debian GNU/Linux
(could be broadened a bit)
<item>Fixed typos sent by Matt Kraai
<item>Fixed DNS information
<item>Added information on whisker and nbtscan to the auditing section.
<item>Fixed some wrong URLs
</list>
<sect1>Version 1.98
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Added a new section regarding auditing using Debian GNU/Linux.
<item>Added info regarding finger daemon taken from the security mailing list.
</list>
<sect1>Version 1.97
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Fixed link for Linux Trustees
<item>Fixed typos (patches from Oohara Yuuma and Pedro Zorzenon)
</list>

<sect1>Version 1.96
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Reorganized service installation and removal and added some new notes.

<item>Added some notes regarding using integrity checkers as intrusion
detection tools.

<item>Added a chapter regarding package signatures.

</list>

<sect1>Version 1.95
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added notes regarding Squid security sent by Philipe Gaspar.

<item>Fixed rootkit links thanks to Philipe Gaspar.

</list>

<sect1>Version 1.94
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added some notes regarding Apache and Lpr/lpng.

<item>Added some information regarding noexec and read-only partitions.

<item>Rewritten how can users help in Debian security issues (FAQ item).
</list>

<sect1>Version 1.93
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Fixed location of mail program.

<item>Added some new items to the FAQ.
</list>

<sect1>Version 1.92
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added a small section on how Debian handles security

<item>Clarified MD5 passwords (thanks to `rocky')

<item>Added some more information regarding harden-X from Stephen van Egmond

<item>Added some new items to the FAQ

</list>

<sect1>Version 1.91
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added some forensics information sent by Yotam Rubin.

<item>Added information on how to build a honeynet using Debian GNU/Linux.

<item>Added some more TODOS.

<item>Fixed more typos (thanks Yotam!)

</list>

<sect1>Version 1.9
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added patch to fix misspellings and some new information (contributed
by Yotam Rubin)

<item>Added references to other online (and offline) documentation both in a section (see <ref id="references">) by itself and inline in some sections.

<item>Added some information on configuring Bind options to restrict
access to the DNS server.

<item>Added information on how to automatically harden a Debian system
(regarding the harden package and bastille).

<item>Removed some done TODOs and added some new ones.

</list>

<sect1>Version 1.8
<p>Changes by Javier Fernández-Sanguino Peña.
<list>

<item>Added the default user/group list provided by Joey Hess to the
debian-security mailing list.

<item>Added information on  LKM  root-kits (<ref id="LKM">)
 contributed by Philipe Gaspar.

<item>Added information on Proftp contributed by Emmanuel Lacour. 

<item>Recovered the checklist Appendix from Era Eriksson.

<item>Added some new TODO items and removed other fixed ones.

<item>Manually included Era's patches since they were not all included in 
the previous version.

</list>
<sect1>Version 1.7
<p>Changes by Era Eriksson.
<list>
<item>Typo fixes and wording changes <!-- FIXME: new checklist has not
been included yet, era, please send it back -->
</list>
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Minor changes to tags in order to keep on removing the tt tags
and substitute them for prgn/package tags.
</list>

<sect1>Version 1.6 
<p>Changes by Javier Fernández-Sanguino Peña.
<list>
<item>Added pointer to document as published in the DDP (should
supersede the original in the near future) 
<item>Started a mini-FAQ
(should be expanded) with some questions recovered from my mailbox.
<item>Added general information to consider while securing.
<item>Added a paragraph regarding local (incoming) mail delivery.
<item>Added some pointers to more information.  
<item>Added information regarding the printing service.  
<item>Added a security hardening checklist.  
<item>Reorganized NIS and RPC information.
<item>Added some notes taken while reading this document on my new
Visor :) 
<item>Fixed some badly formatted lines.  
<item>Fixed some typos.  
<item>Added a Genius/Paranoia idea contributed by Gaby
Schilders.
</list>
<sect1>Version 1.5 

<p>Changes by Josip Rodin and Javier Fernández-Sanguino Peña.

<list>
<item>Added paragraphs related to BIND and some FIXMEs.  <!-- Removed
this because I found no evidence for it in the diffs. // era Rewrote
style in order to make it more formal.  -->
</list>
<sect1>Version 1.4
    <p>
    <list>
    <item>Small setuid check paragraph <item>Various minor cleanups
    <item>Found out how to use <tt>sgml2txt -f</tt> for the txt
    version</item>
    </list>
<sect1>Version 1.3
    <p>
    <list>
    <item>Added a security update after installation paragraph
    <item>Added a proftpd paragraph <item>This time really wrote
    something about XDM, sorry for last time
    </list>
<sect1>Version 1.2
    <p>
    <list>
    <item>Lots of grammar corrections by James Treacy, new XDM
    paragraph
    </list>
<sect1>Version 1.1
    <p>
    <list>
    <item>Typo fixes, miscellaneous additions
    </list>
<sect1>Version 1.0
    <p>
    <list>
    <item>Initial release
    </list>



<sect>Danksagung
<p>
<list>
<item>Alexander Reelsen schrieb die urspr&uuml;ngliche Version.

<item>Javier Fernández-Sanguino f&uuml;gte der orginal Version einiges an
Informationen hinzu.

<item>Robert van der Meulen stellte den Abschnitt &uuml;ber Quota und
viele seiner guten Ideen zur Verf&uuml;gung.

<item>Ethan Benson korrigierte den PAM-Abschnitt und hatte einige gute
Ideen.

<item>Dariusz Puchalak trug Information zu verschiedenen Kapiteln bei.

<item>Gaby Schilders trug eine nette Genius/Paranoia Idee bei.

<item>Era Eriksson gab dem ganzen an vielen Stellen den sprachlichen
Feinschliff und trug zur Checkliste im Anhang bei.

<item>Philipe Gaspar schrieb die LKM-Informationen.

<item>Yotam Rubin trug sowohl Korrekturen f&uuml;r viele Tippfehler bei
als auch Informationen &uuml;ber die Versionen von Bind und
md5-Passw&ouml;rter.

<item>All den Leuten, die Verbesserungen Vorschlugen, die (letzten Endes)
eingeflossen sind (siege <ref id="changelog">).

<item>(Alexander) All den Leuten, die mich ermutigten diese HOWTO zu
schreiben (die sp&auml;ter zu einer ganzen Anleitung wurde).

<item>Dem ganzen Debian Projekt.
</list>



<chapt>Bevor Sie beginnen ...


<sect>F&uuml;r was m&ouml;chten Sie dieses System benutzen?

<p>Das Absichern von Debian ist nicht viel anders, als das Absichern von
irgendeinem anderen System; um es richtig zu machen, m&uuml;ssen Sie
zun&auml;chst entscheiden, was Sie damit machen m&ouml;chten.
Anschliessend m&uuml;ssen Sie sich klarmachen, dass die folgenden
Schritte sorgf&auml;lltig ausf&uuml;hren m&uuml:ssen, um ein wirklich
sicheres System zu bekommen.

<p>Sie werden feststellen, dass diese Anleitung von der Pike auf
geschrieben ist - Sie werden die Informationen zu einer Aufgabe die sie
vor w&auml;hrend und nach der Debian Installation ausf&uuml;hren sollten
in der entsprechenden Reihenfolge lesen. Die einzelnen einzelnen Aufgaben
k&ouml;nnen wie folgt beschrieben werden:

<list>

<item>Entscheiden Sie, welche Services sie ben&ouml;tigen, und
beschr&auml;nken Sie Ihr System auf selbige. Dies schliesst das
Deaktivieren / Deinstallieren von nicht ben&ouml;tigten Servicen und das
installieren von Firewall-&auml;hnlichen Filtern oder TCP-Wrapper ein.

<item>Einschr&auml;nken der Nutzer und Zugriffsrechte auf Ihrem System.

<item>Abh&auml;rten der angeboteten Services derart, dass der Einfluss
auf Ihr System im Falle einer Komprimitierung m&ouml;glichst gerung ist.

<item>Benutzen Sie die passenden Tools, um Sicher zu stellen, dass ein
unautorisierter Zugriff auf Ihr System entdeckt wird, so dass Sie
geeignete Massnahmen ergreifen k&ouml;nnen.

</list>

<sect id="references">Seien Sie Wachsam gegen&uuml;ber generellen
Sicherheitsproblemen!

<p>Diese Anleitung geht (normalerweise) nicht auf Details ein, warum
bestimmte Sache als Sicherheitsrisiko betrachtet werden. Vielleicht
m&ouml;chten Sie aber ein mehr Hintergrundwissen &uuml;ber generelle
Unix- und (bestimmte) Linux-Sicherheit. Nehmen Sie sich dei Zeit, um
Sicherheits relevante Dokumente zu lesen, um Entscheidungen informiert
treffen zu k&ouml;nnen, wenn Sie eine Auswahl treffen m&uuml;ssen. Debian
GNU/Linux basiert auf dem Linux-Kernel, so dass viele Informationen
&uuml;ber Linux, und sogar &uuml;ber andere Distributionen und allgemeine
UNIX-Sicherehit, auch hierauf zutreffen (sogar wenn sich die benutzten
Werkzeuge oder die verf&uuml;gbaren PRogramme unterscheiden).

<p>Ein Paar n&uuml;tzliche Dokumente sind:

<-- TODO: Gibt es davon Uebersetzungen? -->
<list>

<item>Die <url name="Linux Security HOWTO"
id="http://www.linuxdoc.org/HOWTO/Security-HOWTO.html">
(auch unter<url
id="http://www.linuxsecurity.com/docs/LDP/Security-HOWTO.html"
name="LinuxSecurity"> verf&uuml;gbar) ist eine der besten Referenzen
&uuml;ber allgemeine Linux-Sicherheit.


<!-- FIXME: change this poiner to the LDP -->
<item>Die <url name="Security Quick-Start HOWTO for Linux" 
id="http://www.linuxsecurity.com/docs/LDP/Security-Quickstart-HOWTO/">
ist ein sehr guter Anfang, f&uuml;r unerfahrene Nutzer (sowohl von Linux
als auch zum Theme Sicherheit)

<!-- FIXME verify seifried's links -->

<item>
Die <url id="http://seifried.org/lasg/" name="Linux Security
  Administrator's Guide"> (wird unter Debian durch das Paket
  <package>lasg</package> zur Verf&uuml;gung gestellt) ist eine komplette
  Anleitung, die alle Sicherheitsangelegenheiten zu Linux behandelt, von
  Sicherehit im Kernel bis hin zu VPNs. Es ist ein wenig veraltet (seit
  1999 nicht mehr aktualisiert) und wurde durch die <url id="http://seifried.org/lskb" name="Linux
  Security Knowledge Base "> ersetzt.  Dieses Dokument stellt Debian
  Ihnen mit dem Paket <package>lskb</package> zur Verf&uuml;gung.

<item> Kurt Seifried's <url
id="http://seifried.org/security/os/linux/20020324-securing-linux-step-by-step.html"
name="Securing Linux Step by Step">.

<item>In <url name="Securing and Optimizing Linux: RedHat Edition"
id="http://www.linuxdoc.org/links/p_books.html#securing_linux"> finden
Sie eine Dokumentation &auml;hnlich zu dieser bezogen auf RedHat. Manche
behandelten Sachen sind nicht Distributions spezifisch, passen also auch
auf Debian.

<item>IntersectAlliance hat einige Dokumente ver&ouml;ffentlicht, die als
Referenz benutzt werden k&ouml;nnen, wie man einen Linux-Server (und
seine Services) abh&auml;rtet. Diese Dokumente sind auf <url
id="http://www.intersectalliance.com/projects/index.html" name="ihrer
Seite"> verf&uuml;gbar.

<item>F&uuml;r Netzwerk-Administratoren ist die <url name="Securing your
Domain HOWTO"
id="http://www.linuxsecurity.com/docs/LDP/Securing-Domain-HOWTO/"> eine
gutes Handbuch, wie man sein Netzwerk absichert.

<item>Wenn Sie die Programme, die Sie benutzen m&ouml;chten (oder die Sie
neu schreiben wollen), bez&uuml;glich Sicherheit auswerten wollen,
sollten Sie die <url name="Secure Programs HOWTO"
id="http://www.linuxdoc.org/HOWTO/Secure-Programs-HOWTO.html">
durchlesen.

<!-- FIXME: check URLs --> 

<item>Wenn Sie es in Betracht ziehen, eien Firewall zu installieren,
sollten Sie die <url name="Firewall HOWTO"
id="http://www.linuxdoc.org/HOWTO/Firewall-HOWTO.html"> und die <url
name="IPCHAINS HOWTO"
id="http://www.linuxdoc.org/HOWTO/IPCHAINS-HOWTO.html"> (bei Kerneln vor
Version 2.4) lesen.

<item>Schliesslich ist die <url name="Linux Security RefenceCard"
id="http://www.linuxsecurity.com/docs/QuickRefCard.pdf"> eine gute
Kartei, um in Sachen Sicherheit auf dem aktuellen Stand zu bleiben.

</list>

<p>In jedem Fall gibt es mehr Informationen &uuml;ber die Services (NFS,
NIS, SMB...) in den vielen HOWTOs, die sie beim <url name="Linuxdoc
Project" id="http://www.linuxdoc.org/"> finden. Manche dieser Dokumente
gehen auf die Sicherheitsaspekte von bestimmten Services ein. Gehen Sie
Sicher, dass auch hierrauf einen Blick werfen.

<!-- FIXME: URL des deutschen HOWTO Projekts raussuchen -->

<p>Die HOWTO-Dokumente des Linux Dokomentation Projektes sind unter
Debian GNU/Linux duch Installation des Paketes
<package>doc-linux-text</package> (Text-Version) oder
<package>doc-linux-html</package> (HTML-Version) verf&uuml;gbar. Nach der
Installation sind diese Dokumente in den Verezichnissen
<file>/usr/share/doc/HOWTO/en-txt</file> beziehungsweise
<file>/usr/share/doc/HOWTO/en-html</file> vorhanden. 

<p>Andere empfohlene Linux B&uuml;cher:

<list>

<item>Maximum Linux Security : A Hacker's Guide to Protecting Your Linux
  Server and Network.  Anonymous. Paperback - 829 pages. Sams Publishing.
  ISBN: 0672313413. July 1999.

<item>Linux Security By John S. Flowers. New Riders; ISBN: 0735700354.
March 1999

<item><url id="http://www.linux.org/books/ISBN_0072127732.html" name="Hacking Linux Exposed"> By Brian Hatch. McGraw-Hill Higher Education.
ISBN 0072127732. April, 2001

<!-- TODO: Irgendwelche deutschen Buecher? -->

</list>

<p>Andere B&uuml;cher (auch &uuml;ber allgemeine Aspekte von Sicherheit
unter Unix, nicht nur Linux spezifisch):

<list>

<item><url id="http://www.ora.com/catalog/puis/noframes.html"
        name="Practical Unix and Internet Security (2nd Edition)">
        Garfinkel, Simpson, and Spafford, Gene; O'Reilly Associates;
        ISBN 0-56592-148-8; 1004pp; 1996.

<item>Firewalls and Internet Security Cheswick, William R. and Bellovin,
        Steven M.; Addison-Wesley; 1994; ISBN 0-201-63357-4; 320pp.

</list>

<p>Some useful Web sites to keep uptodate regarding security:

<list>

<item><url name="NIST Security Guidelines"
id="http://csrc.nist.gov/fasp/index.html">.

<item><url name="Security Focus" id="http://www.securityfocus.com">
	the server that hosts the Bugtraq vulnerability database and
	list, and provides general security information, news and
	reports.

<item> <url name="Linux Security"
	id="http://www.linuxsecurity.com/">. General information
	regarding Linux security (tools, news...). Most useful is the
	<url name="main documentation"
	id="http://www.linuxsecurity.com/resources/documentation-1.html">
	page.

<item> <url name="Linux firewall and security site" id="
	http://www.linux-firewall-tools.com/linux/">. General
	information regarding Linux firewalls and tools to control and
	administrate them.

</list>

<!-- Deutsche Buecher? -->


<sect>Wie geht Debian mit der Sicherheit um?
<p>Um einen allgemeinen &Uuml;berblick &uuml;ber die Sicherheit unter
Debian GNU/Linux sollten Sie zur Kenntnis nehmen, was Debian tut, um
ein sicheres System zu gew&auml;hrleisten.

<list>

<item>Debians Probleme werden immer &ouml;ffentlich behandelt, sogar wenn
sie die Sicherheit betreffen. Wie der <url name="Debian Gesellschafter
Vertrag" id="http://www.debian.org/social_contract"> sagt:
<em>
Wir werden Probleme nicht verbergen

Wir werden unsere Fehlerdatenbank für alle Zeiten öffentlich betreiben.
Fehlermeldungen, die von Anwendern online abgeschickt werden, werden
augenblicklich für andere sichtbar.
</em>

Aspekte der Sicherheit werden &ouml;ggentlich auf der debian-security
Mailing-Liste diskutiert. Debians Sicherheit Gutachten werden &uuml;ber
eine &ouml;ffentliche Mailing-Liste gesendet (sowohl innerhalb als auch
ausserhalb) und auf einem &ouml;fentlichen Server ver&ouml;ffentlicht.

<item>Debian verfolgt Sicherheitsangelegenheiten sehr aufmerksam. Das
Sicherheits-Team pr&uuml;ft viele Sicherheits relevante Quellen, die
wichtigste davon <url name="Bugtraq"
id="http://www.securityfocus.com/cgi-bin/vulns.pl">, w&auml;hrend sie
Pakete mit Sicherheits-Problemen suchen, die ein Teil von Debian sein
k&ouml;nnen.

<item>Sicherheits-Updates geniessen h&ouml;chste Priorit&auml;t. Wenn ein
Sicherheits Problem in einem Debian Paket erscheint,  wird ein
Sicherheits-Update so schnell wie m&ouml;glich vorbereotet und
f&uuml;r die stabile und instabile Release, einschliesslich aller
Architecturen, ver&ouml;ffentlicht.

<item>Alle Informationen &uuml;ber Sicherheit sind an einer zentralen
Stelle zu finden: <url id="http://security.debian.org/">.

<item>Debian versucht immer die gesamte Sicherheit seiner Distribution zu
verbessern, beispielsweise durch eine automatische Paket Signierungs- und
Verifikations-Mechanismen.

<item>Debian versucht eine n&uuml;tzliche Zahl von Sicherheits relevanten
Werkzeugen f&uuml;r System-Administratoren und zur &Uuml;berwachung zur
verf&uuml;gung zu stellen. Entwickler versuchen diese Werkzeuge fest mit
der Distribution zu verbinden, um sie angepasster f&uuml;r zur Durchsetzung
lokaler Sicherheits-Regelungen zu machen. Diese Werkzeuge schliessen
folgendes mit ein: Pr&uuml;fer der Integrit&auml;t, allgemeine
Pr&uuml;fungs Werkzeuge, Werkzeuge zum abh&auml;rten, Werkzeuge f&uuml;r
Firewalls, Eindringling-Erkennungs-Tools, und vieles andere.

<item>Paket-Betreuer sind sich der Sicherheits-Probleme bewusst. Dies
f&uuml;hrt oft zu EINER "voreingestellt sicheren" Installation von
Servicen, die Sie manchmal in ihrer normalen Benutzung etwas
einschr&auml;nken. Dennoch versucht Debian Sicherheitsaspekte und
einfache Administration abzuw&auml;gen, zum Beispiel werden Services
nicht deaktiviert installiert, wie es bei den Distributionen der
BSD-Familie &uuml;blich ist. Auf jedem Fall sind spezielle
Sicherheits-Aspekte, wie zum Beispiele setuid-Programme, sind Teil der
<url id="http://www.debian.org/doc/debian-policy/" name="Debian Policy">.

</list>

<p><!-- TODO: Es ist jetzt vier Uhr morgens, dieser Satz ist mir um diese
Uhrzeit zu kompliziert -->This same document tries to enforce, as well a better 
distribution security-wise, by publishing 
security information specific to Debian which complements other 
information-security documents related to the tools used by Debian
or the operating system itself (see <ref id="references">.


<chapt>Vor und w&auml;hrend der Installation


<sect id="bios-passwd">Setzen Sie ein Passwort im BIOS
<p>
Bevor Sie irgendein Betriebssystem auf Ihrem Computer installieren,
setzen Sie ein Passwort im BIOS. Nach der Installation (sobald Sie von
der Festplatte booten k&ouml;nnen) sollten Sie zur&uuml;ck ins BIOS
gehen, und die Boot-Reihenfolge &auml;ndern, so dass sie nicht von
Diskette, CDROM oder sonstigen Ger&auml;ten booten k&ouml;nnen, von denen
dies nicht gehen sollte. Andernfalls ben&ouml;tigt ein Cracker nur
physischen Zugang und eien Bootdiskete um Zugriff auf Ihr ganzes System
zugreifen zu k&ouml;nnen.

<p>Das Abschalten von booten ohne Passwort ist sogar noch besser! Dies
kann sehr effektiv sein, wenn Sie einen Server laufen lassen, da er nicht
sehr oft neu gebootet werden wird. Der Nachteil dieser Taktik ist, dass
das Neustarten einen menschlichen Eingriff ben&ouml;tigt, was zu
Problemen f&uuml;hren kann, wenn die Maschinen nicht leicht
zug&auml;nglich ist.

<p>Beachten Sie: Viele BIOSe haben wohl bekannte Master-Passw&ouml;rter,
und es gibt sogar Applikationen, um Passw&ouml;rter aus dem BIOS
wieder zu gewinnen. Folglich k&ouml;nnen Sie sich nicht auf diese
Massnahme verlassen, um den Zugriff auf das Systems abzusichern.

<sect>Partitionieren des Systems

<sect1>W&auml;hlen Sie ein intelligentes Partitions-Schemata
<p>Was ein Inteligentes Partiotions-Schemata ist, h&auml;ngt davon ab,
wie die Maschine benutzt wird. Eine gute Faustregel ist, mit Ihren
Partitionen eher grossz&uuml;gig zu sein und die folgenden Faktoren zu
ber&uuml;cksichtigen:

<list>
<item>Jeder Verzeichnissbaum, auf den ein Nutzer Schreibzugriff hat, wie
zum Beispiel <file>/home</file> und <file>/tmp</file> sollte auf einer
separaten Partition liegen. Dies reduziert das Risiko eines DoS durch
einen Nutzer, indem er Ihren "/"-Mountpoint auff&uuml;llt und so das
gesamte System unbenutzbar macht. (Eigentlich ist das so nicht ganz
richtig, da immer etwas Platz f&uuml;r den Superuser root reserviert
wird, den ein normaler Nutzer nicht belegen kann.)

<item>Auch sollte jeder Verzeichnisbaum, der schwanken kann, zum Beispiel
<file>/var</file> (insbesondere <file>/var/log</file>) eine seperate
Partition bekommen. Auf einem Debian System sollten Sie <file>/var</file>
ein wenig gr&ouml;sser als normal erstellen, da herunter geladene Pakete
(der Zwischenspeicher von apt) unter <file>/var/cache/apt/archives</file>
gespeichert wird.

<item>Jeder Teil, in dem Sie nicht-Distributions-Software installieren
wolle, soltle eine separate Partition sein. Nach dem File Hierarchy
Standard w&auml;ren dies <file>/opt</file> oder <file>/usr/local</file>.
Wenn diese separate Partitionen sind, werden Sie nicht gel&ouml;scht,
wenn Sie einmal Ihr Debian neu installieren (m&uuml;ssen).

<item>Vom Standpunkt der Sicherheit aus ist es sinnvoll zu versuchen,
statische Daten auf seine eigene Daten zu verschieben, und diese
Partition dann ohne Schreibzugriff einzuh&auml;ngen (mounten). Oder noch
besser: Legen Sie diese Daten auf ein nicht beschreibbares Medium ab.
Lesen Sie weiter unten f&uuml;r weitere Details.
</list>

<p>Im Falle eines Mailservers ist es wichtig eine seperate Partition
f&uuml;r den Mail-Pool. Nicht-Lokale Nutzer k&ouml;nnen (wissentlich oder
unwissentlich) den Mail-Pool (<file>/var/mail</file> oder
<file>/var/spool/mail</file> &uuml;berf&uuml;llen. Wenn der Poll eine
separate Partition ist, wird diese Situation das System nicht in einen
unnutzbaren Zustand f&uuml;hren. Anderenfalls (wenn das Pool-Verezichniss
denselben Platz belegt, wie <file>/var</file>) hat das System ein
schwerwiegendes Problem: Protokoll-Eintr&auml;ge (log's) k&ouml;nnen
nicht erstellt werden, Pakete k&ouml;nnen nicht installiert werden, und
es k&ouml;nnten sogar ein paar Programme Probleme mit dem Starten haben
(wenn sie <file>/var/run</file> benutzen).

<p>Ausserdem sollten Sie f&uuml;r Partitionen, deren Platzbedarf Sie noch
nicht absch&auml;tzen k&ouml;nnen, Logical Volume Manager
(<package>lvm-common</package> und die ben&ouml;tigten ausf&uuml;hrbaren
Programme (binaries), entweder <package>lvm10</package>,
<package>lvm6</package>, oder <package>lvm5</package>) installieren.
Durch benutzen von <tt>lvm</tt> k&ouml;nnen Sie Datentr&auml;ger-Gruppen
erstellen, die mehrere physische Datentr&auml;ger erweitern.

<sect2>Auswahl eines passenden Dateisystems

<p>W&auml;hrend der Partitionierung des Systems m&uuml;ssen Sie sich
ebenfalls entscheiden, welche Dateisysteme Sie benutzen m&ouml;chten.
Als standard Dateisystem wird w&auml;hrend der Debian Installation
f&uuml;r Linux Partitionen <tt>ext2</tt> ausgew&auml;hlt. Dennoch ist es
ratsam, auf ein "journaling filesystem" (ein Dateisystem, dass
&Auml;nderungen mitprotokolliert) zu wechseln, wie zum Beispiel
<tt>ext3</tt>, <tt>reiserfs</tt>, <tt>jfs</tt> oder <tt>xfs</tt>. Dadurch
verkleinern Sie Probleme, die durch einen Absturz des Systems

<list>

<item>Auf Laptops auf allen Dateisystemen. Auf diese Art reduzieren Sie
die Wahrscheinlichkeit eines Datenverlustes, wenn beispielsweise
unerwartet Ihr Akku leer wird oder das System aufgrund einer
Hardware-Sache neu booten (eine irgendwie komische X-Konfiguration zum Beispiel)
mussten.

<item>Auf Produktiv-Systemen, die grosse Mengen von Daten Speichern (zum
Beispiel Mail-Server, FTP-Server, Netzwerk Dateisystemen...) ist es
empfohlen, ein journaling Filesystem auf diesen Partitionen einzusetzen.
Wenn ein System-Crash auftritt, ben&ouml;tigt der Server so weniger Zeit,
um das Dateisystem wieder herzustellen und durchzu pr&uuml;fen, und Sie
verringern die Wahrscheinlichkeit eines Datenverlustes.

</list>

<p>Lassen wir mal die Betrachtung der Leistung von journaling
Filesystemen beiseite (da sich dies oft zu quasi religio&ouml;sen
Glaubenskriegen ausartet). Im Regelfall ist es besser, das <tt>ext3</tt>
Dateisystem zu benutzen. Der Grund daf&uuml;r ist die
Abw&auml;rtskompatibilit&auml;t zu <tt>ext2</tt>, so k&ouml;nnen Sie,
wenn es Probleme mit dem Journal gibt, dieses einfach abschalten, und
haben immernoch ein funktionierendes Dateisystem. Ausserdem k&ouml;nnen
Sie, wenn Sie das System mal mit einer Boot-Diskette (oder CDROM)
wiederherstellen m&uuml;ssen, keinen speziellen Kernel benutzen. Wenn es
sich um einen 2.4er Kernel handelt, ist Unterst&uuml;tzung f&uuml;r
<tt>etx3</tt> bereits vorhanden, wenn es sich um einen 2.2er Kernel
handelt, k&ouml;nnen Sie trotzdem Ihr Dateisystem booten, auch wenn Sie
die journaling-F&auml;higkeiten einb&uuml;ssen. Wenn Sie ein anderes
journaling Filesystem benutzen werden Sie feststellen, dass Ihnen eine
Widerherstellung nicht m&ouml;glich ist, bis Sie einen 2.4er Kernel, mit
den ben&ouml;tigten Modulen einkompiliert, haben. Wenn Sie mit einem
2.2er Kernel der Rettungs-Diskette festh&auml;ngen, kann es sich als
ziemlich schwer erweisen, auf <tt>reiserfs</tt> pder <tt>xfs</tt>
zuzugreifen.

<p>In jedem Fall k&ouml;nnten mit  <tt>ext3</tt> weniger Daten-Verluste
auftreten, da es auch Datei-Daten protokolliert, w&auml;hrend lediglich
Meta-Daten protokollieren, siehe auch <url
id="http://lwn.net/2001/0802/a/ext3-modes.php3">.


<sect>Gehen Sie nicht ins Nezt, bevor Sie nicht bereit sind

<p>Das Sytem, das Sie installieren wollen, sollten Sie nicht sofort
w&auml;hren der Installation mit dem Internet verbinden. Dies h&ouml;rrt
sich vielleicht doof an, wird aber gew&ouml;hnlich so getan. Da das
System Services installieren und sofort installieren wird, k&ouml;nnen
Sie, wenn das System mit dem Internet verbunden ist und sie nicht
geeignet konfiguriert sind, Ihr System f&uuml;r Angriffe &ouml;ffnen.

<p>Ausserdem sollten Sie beachten, dass Services neuere
Sicherheits-L&ouml;cher haben l&ouml;nnte, die noch nicht in den Paketen,
die Sie zur Installation benutzen, korrigiert worden sind. Dies ist
f&uuml;r gew&ouml;hnlich dann der Fall, wenn Sie von &auml;lteren Medien
(wie CD-ROMs) installieren. In diesem Fall w&auml;re Ihr System bereits
kompromitiert, bevor Sie mit der Installation fertig sind!

<p>Da die Debian Installation und Upgrades &uuml;ber das Internet
durchgef&uuml;hrt werden k&ouml;nnen, denken Sie vielleicht, es ist eine
gute Idee, dies gleich w&auml;hrend der Installation zu nutzen. Wenn das
System direct mit dem Internet Verbunden ist (und nicht von einer Firwall
oder NAT besch&uuml;tzt wird), ist es besser ohne Internet Verbindung zu
installieren und Lokale-Paket-Spiegel (Mirror) sowohl von den
Paket-Quellen als auch von den Sicherheits-Updates. Sie k&ouml;nnen
einen Paket-Mirror aufsetzen, indem Sie ein anderes System nutzen, dass
mit dem Internet verbunden ist und Debian-Spezifische Tools (wenn es sich
um ein Debian System handelt) wie <package>apt-move</package> oder
<package>apt-proxy</package> oder andere der &uuml;blichen Werkzeuge zum
spiegel benutzen, um ein Archiv f&uuml;r das zu installierende System zur
Verf&uuml;gung zu stellen. Wenn Sie dies nicht tun k&ouml;nnen, sollten
Sie Firewall-Regeln aufsetzen, die den Zugriff auf Ihr System eingrenzen,
w&auml;hren Sie das Update durchf&uuml;hren (siehe id="fw-security-update">).

<sect>Setzen Sie ein Passwort f&uuml;r root
<p>Das Setzen eines guten Root-Passworts ist die wichtigiste,
grundlegende Anforderung an ein sicheres System.

<sect>Aktivieren sie "shadow passwords" und "MD5 passwords"
<p>
Am Ende der Installation werden Sie gefragt werden, ob "shadow passwords"
eingeschaltet werden sollen. Beantworten Sie diese Frage mit "yes", dann
werden Passw&ouml;rter  in der Datei <file>/etc/shadow</file>. Nur Root
und die Gruppe shadow haben lese Zugriff auf diese Datei, so ist es
keinem Nutzer m&ouml;glich, sich eine Kopie dieser Datei zu erstellen, um
einen Passwort-Cracker auf sie laufen zu lassen. Sie k&ouml;nnen
mit dem Befehl <tt>shadowconfig</tt> jederseit zwischen "shadow
passwords" und normalen Passw&ouml;rtern wechseln. Desweiteren werden Sie
w&auml;hrend der Installation gefragt, ob Sie mit MD5 gehashte
Passw&ouml;rter benutzen m&ouml;chten. Dies ist im allgemeinen eine gute
Idee, da es l&auml;ngere Passw&ouml;rter und bessere Verschl&uuml;sselung
erlaubt.

<p> Mehr &uuml;ber "shadow passwords" lesen Sie unter <url name="Shadow
Password" id="http://www.linuxdoc.org/HOWTO/Shadow-Password-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/Shadow-Password.txt.gz</file>).
<!-- TODO: HOWTO uebersetzt? -->

<sect>lassen Sie so wenig Services wie m&ouml;glich laufen
<p>Service sind Programme wie FTP- und Web-Server. Da sie
eingehende Verbindungen, die den Service anfordernm <em>entgegen nehmen
und ihnen zuh&ouml;ren</em> m&uuml;ssen, k&ouml;nnen sich externe
Computer mit Ihrem verbinden. Services sind manchmal verwundbar (zum
Beispiel durch eine bestimmte Attacke kompromitierbar) und sind dadurch
ein Sicherheits Risiko.

<p>Sie sollten keine Services installieren, die Sie nicht unbedingt auf
der Machine brauchen. Jeder Installierter Service k&ouml;nnte neue,
vielleicht nicht auf der Hand liegende (oder bekannte)
Sicherheits-L&ouml;cher auf Ihrem Computer.

<p>Wie Sie vielleicht schon wissen, ist ein bestimmter Service, den Sie
installieren, ist er standardm&auml;ssig aktiviert. In der der default
Debian Installation, ohne jeden installierten Service, sind die
Fussspuren der laufenden Services sind ziemlich gering und noch geringer,
wenn man nur von Servicen spricht, die zu einem Netzwerk hin angeboten
werden. Die Fussspuren von Debian 2.1 waren nicht so tief wie die von
Debian 2.2 (ein paar inetd-Services wurden standard-m&auml;ssig
eingeschaltet) und in Debian 2.2 sind die rpc-Portmapper nach der
Installation eingeschaltet. Rpc ist standardm&auml;ssig installiert, da
er f&uuml;r vueke Services ben&ouml;tigt wird. Er kann sehr leicht
entfernt werden, sehen sie <ref id="disableserv">, um zu erfahren, wie
man Ihn abschaltet.

<p>Wenn Sie einen neuen Netzwerk nutzenden Service (daemon) auf Ihrem
Debian GNU/Linux System instalieren, kann er auf zwei Arten eingeschaltet
werden: Durch den inetd Superdaemon (was heisst: Eine Zeile wird
<file>/etc/inetd.conf</file> hinzugef&uuml;gt) oder durch ein
alleinstehendes Programm, dass sich selbst an die Netzwerk-Schnittstelle
bindet. Alleinstehende Programme werden durch <file>/etc/init.d</file>
kontrolliert, diese werden beim starten durch den SysV-Mechanismus (oder
einen alternativen= gestartet, indem die symbolischen Verkn&uuml;pfungen
(Links) in <file>/etc/rc?.d/*</file> benutzt werden (Mehr Informationen
wie dies geschieht finden Sie in
<file>/usr/share/doc/sysvinit/README.runlevels.gz</file>).

<p>Wenn Sie trotzdem Services installieren wollen, diese aber selten
benutzen, entfernen Sie sie mittels den update-Befehlen, wie
'update-inetd' und 'update-rc.d'.

<sect1 id="disableserv">Daemon-Services abschalten

<p>Das Abschalten eines Daemon-Service ist sehr einfach. Es gibt
verschiedene Methoden:
<list>

<item>Entferned der Links von <file>/etc/rc${runlevel}.d/</file> oder
umbenennen der Links (so dass sie nicht mit einem 'S' anfangen)

<item>Umbenennen der Skript-Dateien
(<file>/etc/init.d/_service_name_</file>), zum Beispiel in
<file>/etc/init.d/OFF._service_name_</file>

<item>Entfernen des Ausf&uuml;hrbar-Bis (execution bit, x-bit) von der
Datei <file>/etc/init.d/_service_name_</file>

<item>Editieren der Datei <file>/etc/init.d/_service_name_</file>, so
dass sich das Skript sofort beendet.

</list>

<p>Sie k&ouml;nnen die Links manuell aus
<file>/etc/rc${runlevel}.d/</file> entfernen oder Sie benutzen
<tt>update-rc.d</tt> (siehe auch <manref section="8"
name="update-rc.d">). So k&ouml;nnen sie zum Beispiel einen Service in
den multi-User Runleveln abschalten:

<example>
update-rc.d stop XX 2 3 4 5 .
</example>

<p>Bitte beachten Sie, dass wenn Sie <em>nicht</em>
<package>file-rc</package> benutzen, <tt>update-rc.d -f _service_
remove</tt> nicht korrekt arbeiten wird, da <em>alle</em>
Verkn&uuml;pfungen entfernt werden, nach einer re-installation oder einem
Upgrade dieses Paketes werden diese Verkn&uuml;pfungen neu angelegt (was
Sie vermutlich nicht wollen). Wenn Sie denken, dass dies wenig intuitiv
ist, liegen Sie wohl richtig (siehe <url
id="http://bugs.debian.org/67095" name="Bug 67095">). Aus der
Handbuchseite:

<example>
 If any files /etc/rcrunlevel.d/[SK]??name already exist then
  update-rc.d does nothing.  This is so that the system administrator 
  can rearrange the  links,  provided that  they  leave  at  least one
  link remaining, without having their configuration overwritten.
</example>

<p>Wenn Sie <package>file-rc</package> benutzen, werden alle Informatione
&uuml;ber das Starten von Services durch eine gemeinsame
Konfigurations-Datei verarbeitet und werden sogar nach der
Deinstallation eines Services von dem System beibehalten.

<p>Sie k&ouml;nnen das TUI (Text User Interface, textuelle
Benutzeroberfl&auml;che) des Paketes <package>rcconf</package> benutzen,
um all diese &Auml;nderungen einfach zu erledigen
(<package>rcconf</package> arbeitet sohwohl mit file-rc als auch mit
normallen System V Runleveln).

<p>Andere (nicht empfohlene) Methoden zum abschalten eines Services sind:
<tt>chmod 644 /etc/init.d/daemon</tt> (aber das erzeugt eine
Fehlermeldung beim booten) oder das &auml;ndern des
<file>/etc/init.d/daemon</file>-Skriptes (hinzuf&uuml;gen von <prgn>exit
0</prgn> als allererste Zeile oder auskommentieren des
<tt>start-stop-daemon</tt> Teils). Da es sich bei allen init.d-Dateien um
Konfigurations-Dateien handel, werden Sie bei einem Upgrade nicht
&uuml;berschrieben.

<p>Leider k&ouml;nnen Sie, im Gegensatz zu anderen (UNIX)
Betriebssystemen, Services unter Debian nicht abschalten, indem Sie die
Dateien unter <file>/etc/default/_servicename_</file> modifizieren.

<p>FIXME: Add more information on handling daemons using file-rc


<sect1 id="inetd">Abschalten von inetd-Servicen

<p>Abschalten sollten Sie alle nicht ben&ouml;tigten Services, wie zum Beispiel
echo, chargen, discard, daytime, time, talk, ntalk und die r-Services
(rsh, rlogin und rcp), die als SEHR unsicher gelten (benutzen Sie
stattdessen ssh).
Nachdem Sie diese abgeschaltet haben, sollten Sie &uuml;berpr&uuml;fen,
ob Sie &uuml;berhaupt den inetd-Daemon brauchen. Viele Leute ziehen es
vor einzelne Daemonen zu benutzen, anstatt einen Service &uuml;ber inetd
aufzurufen. Wenn Sie dann immernoch einen inetd-Service laufen lassen
wollen, wechseln Sie zu einem konfigurierbarerem inet-Daemon, wie xinietd
oder lrinetd.

<p>Sie k&ouml;nnen Services abschalten, indem Sie direkt
<file>/etc/inetd.conf</file> editieren, aber Debian stellt Ihnen eine
besseren Weg zur Verf&uuml;gung das zu tun: <tt>update-inetd</tt> (was
die Services auf eine Art auskommentiert, so dass sie leicht wieder
eingeschaltet werden k&ouml;nnen). Sie k&ouml;nnen den telnet daemon sehr
leicht mit dem folgenden Kommando abschalten, so dass die
Konfigurations-Dateien angepasst und der Daemon neu gestartet wird:

<example>
/usr/sbin/update-inetd --disable telnet
</example>
<!-- # /etc/init.d/inetd restart Not needed since the manpage says update-inetd
sends a SIGHUP, commented out as suggested by Dariusz Puchalak -->

<p>Wenn Sie Services lauschen lassen wollen, aber Sie nicht auf alle
IP-Adressen Ihres Hosts h&ouml;ren sollen, m&ouml;chten Sie vielleicht
eine undokumentierte F&auml;higkeit von inetd benutzen. <!-- FIXME write
the information sent by Alexander to the debian-security mailing list -->
Oder Sie benutzen einen anderen inetd-Daemon wie <prgn>xinetd</prgn>.

<sect>Installieren Sie m&ouml;glichst wenig Software, nur die
ben&ouml;tigte

<p>Debian kommt mit <em>sehr viel</em> Software, zum Beispiel kommt
die Release Debian 3.0 <em>woody</em> auf 7 CD-ROMs, mit tausenden von
Software Paketen. Bei so viel Software, und sogar wenn Sie die
Installation auf das Basis-System reduzieren
<footnote>
Unter Debian Woody ist das Basis-System etwa 40MB gross. Probieren Sie
folgendes:
<example>
$ size=0
$ for i in `grep -A 1 -B 1 "^Section: base" /var/lib/dpkg/available |
grep -A 2 "^Priority: required" |grep "^Installed-Size" |cut -d : -f 2
`; do size=$(($size+$i)); done
$ echo $size
34234
</example>
</footnote>
k&ouml;nnten Sie auf Abwege geraten und mehr installieren als Sie
wirklich ben&ouml;tigen.
<footnote>
Unter Debian Woody ist das Basis-System etwa 40MB gross. Probieren Sie
folgendes:
<example>
$ size=0
$ for i in `grep -A 1 -B 1 "^Section: base" /var/lib/dpkg/available |
grep -A 2 "^Priority: required" |grep "^Installed-Size" |cut -d : -f 2
`; do size=$(($size+$i)); done
$ echo $size
34234
</example>
</footnote>

<p>Da Sie you bereits wissen, was Sie mit Ihrem System machen wollen
(oder etwa nicht?) sollten Sie nur Software installieren, die Sie
wirklich zum arbeiten ben&ouml;tigen. Jedes unn&ouml;tige Tool, dass Sie
installieren k&ouml;nnte von einem Nutzer, der Ihr System kompromitieren
will genutzt werden, oder von einem externen Eindringling, der
Shell-Zugriff bekommen hat (oder der Code von ausserhalb durch einen
ausnutzbaren Service ausf&uuml;hren kann).

<p>Zum Beispiel kann das Vorhandensein von Entwickler-Tolls (einem
C-Compiler) oder Interpretern (wie Perl - sehen Sie weter unten -,
python, tcl..) einem Angreifer helfen, dass System weiter zu
kompromitieren:

<list>
<item>dem Angreifer erlauben Privilegien auszuweiten. Es ist zum Beispiel
leichter eine Lokale Sichereheitsl&uuml;cke des Systems
auszunutzen, wenn man einen Debugger und Compiler zur verf&uuml;gung hat,
um den eigenen Exploit (Programm, dass eine Sicherheitsl&uuml;cke
ausnutzt) zu kompilieren und zu testen.

<item>dem Angreifer Tools zur Verf&uuml;gung stellen, die ihm helfen
k&ouml;nnen, das kompromitierte Syste als <em>Basis f&uuml;r
Angriffe</em> auf andere Systeme zu benutzen.
<footnote>
Viele "intrusions" (Eindringen auf fremde Systeme) werden eher gemacht, um
an die Resourcen f&uuml;r illegitime Aktitiv&auml;ten zu kommen (denial
of service Attacken, Spam, geheime FTP-Server <!-- rogue ftp server -->,
dns Verunreinigung...), als nur um irgendwelche vertraulichen Daten auf
dem kompromitierten System zu kommen.
</footnote>

</list>

<p>Nat&uuml;rlich kann ein Eindringling mit lokalem Shell-Zugriff seine
eigenen Tolls herunterladen und ausfphren, und sogar die Shell selbst
kann benutzt werden, um komplexere Programme zu schreiben. Das entfernen
unn&ouml;tiger Programme wird also nicht helfen, das Problem zu
<em>verhindern</em>, aber das Problem wird dadurch ein wenig schwerer
f&uuml;r den Angreifer (und manchmal wird er in dieser Situation aufgeben
und sich ein leichteres Ziel suchen). Wenn Sie also auf einem
produktivem System Tools lassen, die benutzt werden k&ouml;nnen, um
andere Systeme anzugreifen (siehe <ref id="vuln-asses">), m&uuml;ssen Sie
auch davon ausgehen, dass ein Angreifer sie benutzen wird.

<sect1>Entfernen von Perl

<p>Sie m&uuml;ssen Ber&uuml;cksichtigen, dass sich das Entfernen von
<prgn>perl</prgn> von einem Debian-System als nicht so einfach erweisen
k&ouml;nnte (in der Tat kann es ziemlich schwer sein), da es von vielen
Dienstprogeammen des Systems benutzt wird. <package>perl-base</package>
hat ausserdem <em>Priority: required</em> (und dass sagt eigentlich schon
alles). Es ist aber trotzdem machbar, Sie m&uuml;ssen nur bedenken, dass
Sie auf diesem System keine Perl-Anwendung mehr laufen lassen
k&ouml;nnen, und Sie m&uuml;ssen auch das Paket-Managment-System
hereinlegen, damit es weiterhin denkt, dass <package>perl-base</package>
installiert ist, auch wenn es das nicht mehr ist. <footnote>Sie
k&ouml;nnen (auf einem anderen System) eine Paket-Attrappe mit
<package>equivs</package> erstellen.</footnote>

<p>Welche Dienstprogramme benutzen Perl? Sie k&ouml;nnen es selbst
herausfinden:
<example>
$ for i in /bin/* /sbin/* /usr/bin/* /usr/sbin/*; do [ -f $i ] && {
type=`file $i | grep -il perl`; [ -n "$type" ] && echo $i; }; done
</example>

<p>Diese Liste schliesst die Folgenden Dienstprogramme mit der
Priorit&auml;t <em>required</em> oder <em>important</em> mit ein:

<list>
<item><file>/usr/bin/chkdupexe</file> aus dem Paket
<package>util-linux</package>.

<item><file>/usr/bin/replay</file> aus dem Paket
<package>bsdutils</package>.

<item><file>/usr/sbin/cleanup-info</file> aus dem Paket
<package>dpkg</package>.

<item><file>/usr/sbin/dpkg-divert</file> aus dem Paket
<package>dpkg</package>.

<item><file>/usr/sbin/dpkg-statoverride</file> aus dem Paket
<package>dpkg</package>.

<item><file>/usr/sbin/install-info</file> aus dem Paket
<package>dpkg</package>.

<item><file>/usr/sbin/update-alternatives</file> aus dem Paket
<package>dpkg</package>.

<item><file>/usr/sbin/update-rc.d</file> aus dem Paket
<package>sysvinit</package>.

<item><file>/usr/bin/grog</file> aus dem Paket
<package>groff-base</package>.

<item><file>/usr/sbin/adduser</file> aus dem Paket
<package>adduser</package>.

<item><file>/usr/sbin/debconf-show</file> aus dem Paket
<package>debconf</package>.

<item><file>/usr/sbin/deluser</file> aus dem Paket
<package>adduser</package>.

<item><file>/usr/sbin/dpkg-preconfigure</file> aus dem Paket
<package>debconf</package>.

<item><file>/usr/sbin/dpkg-reconfigure</file> aus dem Paket
<package>debconf</package>.

<item><file>/usr/sbin/exigrep</file> aus dem Paket
<package>exim</package>.

<item><file>/usr/sbin/eximconfig</file> aus dem Paket
<package>exim</package>.

<item><file>/usr/sbin/eximstats</file> aus dem Paket
<package>exim</package>.

<item><file>/usr/sbin/exim-upgrade-to-r3</file> aus dem Paket
<package>exim</package>.

<item><file>/usr/sbin/exiqsumm</file> aus dem Paket
<package>exim</package>.

<item><file>/usr/sbin/keytab-lilo</file> aus dem Paket
<package>lilo</package>.

<item><file>/usr/sbin/liloconfig</file> aus dem Paket
<package>lilo</package>.

<item><file>/usr/sbin/lilo_find_mbr</file> aus dem Paket
<package>lilo</package>.

<item><file>/usr/sbin/syslogd-listfiles</file> aus dem Paket
<package>sysklogd</package>.

<item><file>/usr/sbin/syslog-facility</file> aus dem Paket
<package>sysklogd</package>.

<item><file>/usr/sbin/update-inetd</file> aus dem Paket
<package>netbase</package>.

</list>

<p>Also, ohne Perl udn solange Sie diese Dienstprogramme nicht in einem
Shell-Skript neuschreiben, werden Sie wahrscheinlich keine Pakete mehr
verwalten klnnen (und so das System nicht upgraden k&ouml;nnen, und das
ist <em>keine gute Idee</em>).

<p>Wenn Sie sich dazu entschlossen haben, Perl aus dem
Debian-Basis-System zu entfernen und ein wenig Freizeit haben, schicken
Sie uns doch Bug-Reports zu den aufgez&auml;hlten Paketen, die (als ein
Patch) einen Ersatz dieser Dienstprogramme als Shell-Skript enth&auml;lt.

<sect>Lesen Sie Debians Sicherheits-Mailinglisten

<p>Es ist niemals falsch einen Blick entweder in die
debian-security-announce Mailing-Liste, wo Sicherheitsgutachten
und Probleml&ouml;sungen durch das Debian-Team f&uuml;r Sicherheit
bekannt gemacht werden, oder auf die debian-security@lists.debian.org
Liste, wo Sie an den Diskussionen zu allen Sicherheits relevanten Dinge
teilnehmen k&ouml;nen, zu werfen.

<p>Um wichtige Warnungen zu Sicherheits-Update zu erhalten, senden Sie
eine Email an <url
name="debian-security-announce-request@lists.debian.org"
id="mailto:debian-security-announce-request@lists.debian.org"> mit dem
Wort "subscribe" in der Betreff-Zeile. Sie k&ouml;nnen diese moderierte
Email-Liste unter <url name="http://www.debian.org/MailingLists/subscribe"
id="http://www.debian.org/MailingLists/subscribe"> &uuml;ber das Web
abonnieren.

<p>Diese Mailingliste hat ein sehr geringes Aufkommen, und indem Sie sie
abonnieren, werden Sie sofort &uuml;ber Sicherheits-Updates der
Debian-Distribution informiert. Dies erlaubt Ihnen sehr schnell neue
Pakete mit Sicherheits-Fixes herunterzuladen, was sehr wichtig ist, um
ein sicheres System zu verwalten (Siehe <ref id="update"> f&uuml;r
weitere Details, wie Sie dies machen)


<chapt>Nach der Installation

<p>Wenn das System installiert ist, k&ouml;nnen sie es noch weiter absichern,
indem sie einige der in diesem Kapitel beschriebenen Schritte ausf&uuml;hren.
Nat&uuml;rlich h&auml;ngt dies vor allem von ihrem Setup up, aber um
physischen Zugriff zu verhindern. sollten sie <ref id="bios-boot">, 
<ref id="lilo-passwd">, <ref id="kernel-root-prompt">, <ref id="floppy-boot">,
<ref id="restrict-console-login">, und <ref id="restrict-reboots"> lesen.

<p>Bevor sie sich mit einem Netzwerk verbinden, insbesondere wenn es sich um ein
&ouml;ffentliches Netzwerk handelt, sollten sie wenigstens ein securezty update
(siehe <ref id="update">) durchf&uuml;hren. Optional k&ouml;nnen sie sie sich
einen Snapshot ihres Systems machen (siehe <ref id="snapshot">).

<sect id="bios-boot">&Auml;nderungen im BIOS (noch einmal)

<p>Erinnern sie sich an <ref id="bios-passwd">? Nun, jetzt sollten sie, nachdem
sie nicht mehr von austauschbaren Datentr&auml;gern booten m&uuml;ssen, die
standard BIOS Einstellung so um&auml;ndern, dass es <em>auschliesslich</em> von
der Festplatte bootet. Gehen sie sicher, dass sie ihr BIOS Passwort nicht
verlieren, oder sie werden, im Falle eines Festplattenfehlers, nicht mehr ins
BIOS zur&uuml;ckkehren k&ouml;nnen, um die Einstellung wieder zu &auml;ndern, so
dass sie ihr System wiederherstellen k&ouml;nnen, indem sie zum Beispiel eine
CD-ROM benutzen.

<p>Eine andere, weniger sicher, aber bequemere M&ouml;glichkeit ist es, das BIOS
so einzustellen, dass es von von der Festplatte bootet, und nur falls dies
fehlschl&auml;gt versucht von austauschbaren Datentr&auml;gern zu booten.
&Uuml;brigens wird dies oft so gemacht, weil nur wenige ein BIOS Passwort
benutzen, dass oft zu leicht vergessen wird.
<!-- AS 20020803: Ich bin nicht sicher, dass ich den Satz: By the way, this is often
done because since few people use the BIOS password that much often it's
easily forgotten. richtig uebersetzt habe. -->

<sect id="lilo-passwd">Ein Passwort f&uuml;r LILO oder GRUB einstellen
<p>
Jeder kann sehr einfach eine roor Shell auf ihrem System bekommen, indem er
einfach "&lt;Name-ihres-Bootimages&gt; init=/bin/sh" am Bootprompt eingibt.
Nachdem die Passw&ouml;rter ge&auml;ndert und das System neu gestartet
wurde, hat die Person uneingeschr&auml;nkten Root Zugang and kann alles auf
ihrem System machen, das sie will. Nach dieser Prozedur haben sie keinen
Root Zugang mehr zu ihrem System, weil sie das Root Passwort nicht kennen.

<p>
Um sicher zu stellen, dass dies nicht passieren kann, sollten sie den boot
loader mit einem Passwort sch&uuml;tzen. Sie k&ouml;nnen zwischem einem
globalen Passwort und Passw&ouml;rtern f&uuml;r bestimmte Images
w&auml;hlen.
<p>
F&uuml;r LILO m&uuml;ssen sie die Konfigurationsdatei
<file>/etc/lilo.conf</file> editieren und eine "password" und "restricted"
Zeile, wie im folgenden Beispiel, einf&uuml;gen:

<example>
image=/boot/2.2.14-vmlinuz
   label=Linux
   read-only
   password=hackmich
   restricted
</example>

<p>
Haben sie dies getan, rufen sie lilo auf. Wenn sie die "restricted" Zeile
weglassen, wird lilo immmer nach dem Passwort fragen, egal ob LILO
parameter &uuml;bergeben wurden oder nicht. Die vorgabe Zugriffsrechte auf
<file>/etc/lilo.conf</file> erlauben root das lesen und schreiben, und der
Gruppe von lilo.conf, ebenfalls root, das Lesen.

<p>
Wenn sie GRUB anstelle von LILO verwenden, editieren sie
<file>/boot/grub/menu.lst</file> und f&uuml;gen die folgenden zwei Zeilen
am Anfang an (dabei ersetzen sie nat&uuml;rlich 'hackmich' mit dem
vorgesehenen Passwort). Dies verhindert, dass Benutzer die
Booteintr&auml;ge ver&auml;ndern k&ouml;nnen. 'timeout 3' legt eine
Wartedauer von 3 Sekunden fest, bevor grub den Standard Eintrag bootet.

<example>
timeout 3
password hackmich
</example>

Um die Integrit&auml;t ihres Passwortes zus&auml;tzlich abzusichern,
sollten <!-- AS 20020903 : Das eigentliche 'may' = duerfen, passte hier
nicht so gut --> sie ihr Passwort verschl&uuml;sselt ablegen. Das Utility
grub-md5-crypt generierd ein gehashtes Passwort, das kompatibel mit grub's
Verschl&uuml;sselungsalgorithmus (md5) ist.
Um grub mitzuteilen, dass verschl&uuml;sselte Passw&ouml;rter benutzt
werden, benutzen sie die folgende Anweisung:
<example>
timeout 3
password --md5 $1$arPydhOM$bIgEKjMW5kxeEuvE1Rah4/
</example>

Der --md5 Parameter wurde hinzugef&uuml;gt, um bei grub einen md5
Authentifizierungsprozess zu erzwingen. Das angegeben Passwort ist die
md5 verschl&uuml;sselte Version von hackmich. Es ist vorzuziehen md5-
statt Klartextpassw&ouml;rter zu verwenden. Weitere Informationen &uuml;ber
grub Passw&ouml;rter k&ouml;nnen sie im grub-doc Packet finden.

<sect id="kernel-root-prompt">Entfernen des root Promptes aus dem Kernel

<p>
Linux 2.4 Kernel bieten kurz nach dem Laden des cramfs einen Weg Zugriff
auf eine Root Shell zu bekommen, also w&auml;hrend das System bootet. Es
erscheint eine Meldung, die dem Administrator erlaubt, eine
auszuf&uuml;hrende Shell mit Root Privilegien zu betreten, diese Shell kann
dazu benutzt werden, manuell Module zu laden, falls die automatische
Erkennung fehlschl&auml;gt. Dies ist das standard Verhalten bei initrd's
Linuxrc. Die folgende Meldung wird erscheinen:
<example>
Press ENTER to obtain a shell (waits 5 seconds)
</example>

<p>
Um dieses Verhalten zu entfernen, m&uuml;ssen sie
<file>/etc/mkinitrd/mkinitrd.conf</file> editieren und den Eintrag
<example>
# DELAY  Anzahl Sekunden, die das linuxrc Skript warten soll,
# um den Nutzer eingriffe zu erlauben, befor das System hochgefahren 
# wird
DELAY=0
</example>
setzen.

<p>Generieren sie ihr ramdisk image anschliessend neu. Dies k&ouml;nnen sie
zum Beispiel so tun:
<example>
# cd /boot
# mkinitrd -o initrd.img-2.4.18-k7 /lib/modules/2.4.18-k7
</example>
<p>oder machen sie (vorzugsweise):
<example>
# dpkg-reconfigure kernel-image-2.4.x-yz
</example>
<p>Beachten sie, dass Debian 3.0 woody den Benutzern erlaubt 2.4er Kernel
zu installieren (indem sie <em>flavors</em> w&auml;hlen), <em>aber</em> der
standard Kernel ist 2.2 (von einigen Architekturen abgesehen, auf die der
Kenel 2.2 nicht portiert wurde). Wenn sie dies als Bug ansehen, beachten
sie <url id="http://bugs.debian.org/145244" name="Bug 145244"> bevor sie
ihn einsenden.

<sect id="floppy-boot">Booten von Diskette verbieten
<p>
Der standard MBR von Debian vor Version 2.2 verhielt sich nicht wie ein
normaler Master Boot Record und lies eine Methode offen, einfach in ein
System einzubrechen:

<list>
<item>Dr&uuml;cken sie w&auml;hrend des Bootens shift, und der MBR prompt
erscheint

<item>Dr&uuml;cken sie dann F, und ihr System wird von Diskette booten.
Dies kann man ausnutzen, um root Privilegien auf dem System zu erlangen.
</list>

<p>Dieses Verhalten k&ouml;nnen sie &auml;ndern, indem sie
<example>
lilo -b /dev/hda
</example>
eingeben.

<p>Nun ist LILO in den MBR geschoben worden. Dies k&ouml;nnen sie auch
erreichen, indem sie "boot=/dev/hda" zu lilo.conf hinzuf&uuml;gen. Es gibt
noch eine M&ouml;glichkeit, die den MBR komplett abschalten wird:
<example>
install-mbr -i n /dev/hda
</example>

<p>Auf der anderen Seite, k&ouml;nnte diese "Hintert&uuml;r", die viele
Leute nicht kennen, ihnen einmal die Haut retten, wenn sie in grosse
Schwierigkeiten mit ihren Installations aus irgendwelchen Gr&uuml;nden
geraten.

<p>FIXME &uuml;berpr&uuml;fen, ob das f&uuml;r 2.2 wirklich stimmt, oder
war es 2.1?
INFO: Die Boot Disketten von Debian 2.2 installieren KEINEN mbr, sondern
nur LILO

<sect id="restrict-console-login">einschr&auml;nkender Konsolen zugang

<p>Manche Sicherheits Policies k&ouml;nntem Administratoren dazu zwingen,
sich erst als als User mit ihrem Passwort auf dem System einzulogen, und
dann Superuser zu werden (mit <prgn>su</prgn> oder <prgn>sudo</prgn>).
Solche eine Policy ist in Debian in der Datei
<file>/etc/login.defs</file> oder <file>/etc/securetty</file> (falls sie
PAM verwenden) implementiert. In:

<list>

<item><file>login.defs</file>, &auml;ndern sie die CONSOLE Variable,
die eine Datei oder eine Liste von Terminals definiert, an denen sich
root einloggen darf

<item><file>securetty</file> entfernen sie oder f&uuml;gen sie Terminals
hinzu, bei denen Root Zugriff erhalten darf

</list>

<p>Wenn sie PAM benutzen k&ouml;nnen sie auch andere &Auml;nderungen am
Login Prozess, die auch Einschr&auml;nkungen f&uuml;r einzelne Benutzer
oder Gruppen zu bestimmten Zeiten enthalten k&ouml;nnen, durch
konfigurieren der Datei <file>/etc/pam.d/login</file> vornehmen. Eine
interessante Eigenschaft, die man auch abschalten kann, ist die
M&ouml;glichkeit, sich mit einem leeren Passwort (null Passwort)
einzulogen. Diese Eigenschaft kann eingeschr&auml;nkt werden, indem sie
<em>nullok</em> aus der Zeile
<example>
auth       required   pam_unix.so nullok
</example>
entfernen.

<sect id="restrict-reboots">Systemneustart auf der Konsole einschr&auml;nken

<p>Wenn an ihr System eine Tastatur angeschlossen ist, kann jeder (ja
wirklich <em>jeder</em>) ihr System neu starten, ohne sich in ihr System
einlogen zu m&uuml;ssen. Dies k&ouml;nnte oder k&ouml;nnte nicht gegen
ihre Sicherheits Richtlinie versto&szlig;en. Wenn sie dies
einschr&auml;nken wollen, m&uuml;ssen sie in <file>/etc/inittab</file>
pr&uuml;fen, ob die Zeile, die enth&auml;lt, dass <tt>ctrlaltdel</tt>
<prgn>shutdown</prgn> aufruft, den <tt>-a</tt> Schalter enth&auml;lt
(vergessen sie nicht, <tt>init q</tt> auszuf&uuml;hren, nachdem sie
diese Datei irgendwie ver&auml;ndert haben). Der standardm&auml;ssig
enth&auml;lt Debian diesen Schalter:
<example>
ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now
</example>

<p>Jetzt m&uuml;ssen sie, um es <em>manchen</em> Benutzern zu erlauben,
ihr System neu zu starten, eine Datei <file>/etc/shutdown.allow</file>
erstellen, wie es in der Manual Seite <manref section="8"
name="shutdown"> beschreibt. Dort m&uuml;ssen die Namen der Benutzer, die
das System neu booten d&uuml;rfen, aufgef&uuml;hrt sein. Wenn der
<em>drei Finger Salut</em> (auch bekannt als <em>Strg+Alt+Entf</em>)
ausgef&uuml;hrt wird, wird gepr&uuml;ft, ob irgendeiner der Benutzer, die
in der Datei aufgelistet sind, eingeloggt sind. Wenn es keiner von ihnen
ist, wird <prgn>shutdown</prgn> das System <em>nicht</em> neu starten.

<sect>Partitionen auf die richtige Art einbinden
<p>
Wenn sie eine ext2 Partition einbinden, k&ouml;nnen sie verschiedene
Optionen mit dem mount-Befehl oder in <file>/etc/fstab</file> verwenden.
Dies zum Beispiel, ist mein fstab Eintrag f&uuml;r meine
<file>/tmp</file> Partition:
<example>
/dev/hda7    /tmp    ext2    defaults,nosuid,noexec,nodev    0    2
</example>

<p>
Sie sehen den Unterschied in der Spalte mit den Optionen. Die Option
<tt>nosuid</tt> ignoriert alle setuid und setgid Bits komplett,
w&auml;hrend <tt>noexec</tt> das ausf&uuml;hren irgendwelcher Programme
unterhalb des mount Points <!-- AS: Da gibts wohl keine passende
Uebersetzung --> verbietet und <tt>nodev</tt> Ger&auml;te ignoriert. Das
h&ouml;rt sich toll an, aber es
<list>
<item>ist nur auf ext2 Dateisysteme anwendbar
<item>kann leicht umgangen werden
</list>

<p>Die <tt>noexec</tt> option, die verhindert, dass Binaries
ausgef&uuml;hrt werden k&ouml;nnen, l&auml;sste sich leicht umgehen:
<example>
alex@joker:/tmp# mount | grep tmp
/dev/hda7 on /tmp type ext2 (rw,noexec,nosuid,nodev)
alex@joker:/tmp# ./date
bash: ./date: Permission denied
alex@joker:/tmp# /lib/ld-linux.so.2 ./date
Sun Dec  3 17:49:23 CET 2000
</example>

<p>
Wie auch immer, viele Skriptkiddies haben Exploits, die versuchen eine
ausf&uuml;hrbare Datei in <file>/tmp</file> zu erstellen. Wenn sie keine
Ahnung haben, werden sie in dieser Grube h&auml;ngenbleiben. Mit anderen
Worten: Ein Benutzer kann nicht dazu getrickts werden, einen
ausf&uuml;hrbaren Trojaner in <file>/tmp</file> auszuf&uuml;hren, zum
Beispiel indem er zuf&auml;llig <file>/tmp</file> in seine Suchpfad
aufnimmt.

<p>Seien sie auch gewarnt, dass manche Skripts darauf aufbauen, dass
<file>/tmp</file> ausf&uuml;hrbare Rechte hat. Bemerkenswerter weise
hatte (oder hat?) Debconf Probleme bei dieser Sache, weitere
Informationen enth&auml;lt Bug <url id="http://bugs.debian.org/116448"
name="116448">.

<p>
Nachfolgend ist ein gr&uuml;ndlichereres Beispiel. Dazu:
<file>/var</file> k&ouml;nnte auch noexec enthalten, aber manche
Software, wie zum Beispiel Smartlist, beh&auml;lt seine Programme
unterhalb von /var. Das selbe gillt f&uuml;r die nosuid Option.

<example>
/dev/sda6       /usr            ext2    defaults,ro,nodev       0       2
/dev/sda12      /usr/share      ext2    defaults,ro,nodev,nosuid        0       2
/dev/sda7       /var            ext2    defaults,nodev,usrquota,grpquota          0       2
/dev/sda8       /tmp            ext2    defaults,nodev,nosuid,noexec,usrquota,grpquota    0       2
/dev/sda9       /var/tmp        ext2    defaults,nodev,nosuid,noexec,usrquota,grpquota    0       2
/dev/sda10      /var/log        ext2    defaults,nodev,nosuid,noexec    0       2
/dev/sda11      /var/account    ext2    defaults,nodev,nosuid,noexec    0       2
/dev/sda13      /home           ext2    rw,nosuid,nodev,exec,auto,nouser,async,usrquota,grpquota                0       2
/dev/fd0        /mnt/fd0        ext2    defaults,users,nodev,nosuid,noexec      0       0
/dev/fd0        /mnt/floppy     vfat    defaults,users,nodev.nosuid,noexec      0       0
/dev/hda        /mnt/cdrom      iso9660 ro,users,nodev.nosuid,noexec            0       0
</example>

<sect1>/tmp noexec setzen
<p>
Seien sie vorsichtig, wenn sie <file>/tmp</file> noexec setzen und neue
software installieren wollen, da manche Software es w&auml;hrend der
Installation benutzt. Apt ist ein solches Programm (siehe <url
id="http://bugs.debian.org/116448">), wenn nicht
<tt>APT::ExtractTemplates::TempDir</tt> (siehe <manref
name="apt-extracttemplates" section="1">) passend konfiguriert wurde. Sie
k&ouml;nnen diese Variable in <file>/etc/apt/apt.conf</file> auf ein
anderes Verzeichnis als <file>/tmp</file> mit exec Privilegien setzen.

<p>Was noexec betrifft, seien sie sich bitte bewusst, dass es ihnen nicht
sehr viel Sicherheit bietet. 
Regarding noexec, please be aware that it might not offer you that much security. 
Berücksichtigen sie dies:
<example>
$ cp /bin/date /tmp
$ /tmp/date
(wird aufgrund des noexec nicht ausgef&uuml;hrt)
$/lib/ld-linux.so.2 /tmp/date
(funktioniert, da date nicht direkt ausgef&uuml;hrt wird)
</example>

<sect1>Setzen von /usr auf nur-lesen
<p>
Wenn sie auf <file>/usr</file> nur lesenden Zugriff erlauben, werden sie
nicht in der Lage sein, neue Pakete auf ihrem Debian GNU/Linux System
installieren k&ouml;nnen. Sie werden es erst wieder mit Schreibzugriff
neumounten m&uuml;ssen, die Pakete installieren, und dann wieder
read-only mounten. Die neuste Version von apt (in Debian 3.0 'woody')
kann konfiguriert werden Befehle vor und nach dem installiern von Paketen
auszuf&uuml;hren, also m&ouml;chten sie es vielleicht passend
konfigurieren.

<p>To do this modify <file>/etc/apt/apt.conf</file> and add:
<example>
  DPkg
  {
      Pre-Invoke  { "mount /usr -o remount,rw" };
      Post-Invoke { "mount /usr -o remount,ro" };
  };
</example>

<p>Beachten sie sie, dass das Post-Invoke mit einer "/usr busy"
Fehlermeldung scheitern wird. Dies passiert vorwiegend, wenn sie eine
Datei w&auml;hrend des Updates benutzen. &Auml;rgerlich, aber kein
grosses Problem. Gehen sie einfach sicher, dass sie nicht l&auml;nger
benutzt werden, und f&uuml;hren sie das Post-Invoke manuell aus.

<sect id="update">Ausf&uuml;hren von Sicherheitsupdates

<p>Sobald neue Sicherheitsl&ouml;cher in einem Paket entdeckt wurden
reparieren sie Debian Paket-Betreuer und urspr&uuml;ngliche Autoren im
allgemein innerhalb von Tagen oder sogar Stunden. Nachdem das Loch
gestopft wurde, werden neue Pakete unter <url
name="http://security.debian.org" id="http://security.debian.org"> bereit
gestellt.

<p>Wenn sie eine Debian Release installieren m&uuml;ssen sie
ber&uuml;cksichtigen, dass es, seitdem der Releas gemacht wurde,
Sicherheitsupdates geben k&ouml;nnte, nachdem entdeckt wurde, dass ein
bestimmtes Paket verwundbar ist. Ebenso k&ouml;nnte es kleinere Releases
gegeben haben (es gab acht kleinere Releases von Debian 2.2
<em>potato</em>), die diese Paktet-Updates enthalten.

<p>Sie m&uuml;ssen sich das Erstellungsdatum ihres CD Sets <!-- AS
20020906 'removable media'? --> (wenn sie ein solches benutzen) notieren,
und auf der Sicherheitsseite pr&uuml;fen, ob es Sicherheits-Updates
gegeben hat. Wenn es solche gibt, und sie sie die Pakete nicht von der
Sicherheits-Seite herunterladen k&ouml;nnen (Ihr System ist noch nicht
mit dem Internet verbunden, oder?), k&ouml;nnten sie es in erw&auml;hgung
ziehen (falls sie nicht, beispielsweise durch eine Firewall,
gesch&uuml;tzt sind), Firewall-Regeln zu aktivieren, so dass ihr System
ausschliesslich mit securety-debian.org Verbindung aufnehmen kann und
dann ein update Ausf&uuml;hren. Eine Beispiel-Konfiguration finden sie
unter <ref id="fw-security-update">.

<p>Um ihr System upzudaten, f&uuml;gen sie die folgende Zeile in ihre
<file>/etc/apt/sources.list</file>, und sie werden Sicherheits-Updates
automatisch erhalten, wann immer sie ihr System updaten.

<example>
deb http://security.debian.org/debian-security stable/updates main contrib non-free
</example>

<p>Die meisten Leute, die nicht in einem Land leben, das den import oder
die Nutzung starker Kryptographie verbietet, sollte auch diese Zeile
hinzuf&uuml;gen:

<example>
deb http://security.debian.org/debian-non-US stable/non-US main contrib non-free
</example>

<p>Wenn sie m&ouml;chten, k&ouml;nnen sie ebenfalls eine deb-src Zeile
hinzuf&uuml;gen. Weitere Details finden sie unter <manref name="apt"
section="8">.

<p>Sie sollten regelm&auml;ssig Sicherheits-Updates durchf&uuml;hren, die
meisten Sicherheitsprobleme resultieren aus bekannten
Sicherheitsl&uuml;cken heraus, die nicht rechtzeitig gestopft wurden, wie
auch <url id="http://www.cs.umd.edu/~waa/vulnerability.html"> name="paper
by Bill Arbaugh"> (vorgetrafen auf dem 2001 IEEE Symposium on Security
and Privacy) erkl&auml;rt.

<p>FIXME: Add info on how the signature of packages is done so that this
can be done automatically through a cron job (big warning: DNS spoofing).

<sect>Den Benutzern einen Sicheren Zugang bereitstellen

<sect1 id="auth-pam">User Authentifizierung: PAM

<p>PAM (Pluggable Authentication Modules) erlauben dem System
Administrator auszuw&auml;hlen, wie eine Anwendung, Benutzer
authentifiziert. Beachten sie, dass PAM nichts machen kann, solange die
Anwendung nicht mit Unterst&uuml;tzung f&uuml;r PAM kompiliert wurde. Die
meisten Anwendungen, die mit Debian 2.2 geliefert werden, habend diese
Unterst&uuml;tzung eingebaut. Weiterhin hatte Debian keine
Unterst&uuml;tzung f&uuml;r PAM vor Version 2.2. Die derzeitige
Standard-Konfiguration f&uuml;r jedweden PAM benutzenden Service, ist es,
UNIX Authentifizierung zu emulieren (lessen sie
<file>/usr/share/doc/libpam0g/Debian-PAM-MiniPolicy.gz</file> um mehr
dar&uuml;ber zu erfahren, wie PAM Services unter Debian arbeiten
<em>sollten</em>).


<p>Jede Anwendung mit PAM Unterst&uuml;tzung bietet eine Konfiguratiosn
Datei unter <file>/etc/pam.d/</file> in welche sie ihr Verhalten
einstellen k&ouml;nnen:

<list>
<item>welches Verfahren zur Authentifizierung benutzt wird.
<item>welches Verfahren innerhalb einer Sitzung benutzt wird.
<item>wie Passw&ouml;rter &uuml;berpr&uuml;ft werden.
</list>

<p>
Die folgende Beschreibung ist weit davon entfernt komplett zu sein,
f&uuml;r weitere Informationen m&ouml;chten sie vielleicht <url
id="http://www.kernel.org/pub/linux/libs/pam/Linux-PAM-html/pam.html"
name="The Linux-PAM System Administrator's Guide"> (auf der <url
id="http://www.kernel.org/pub/linux/libs/pam/" name="PAM Hauptseite">),
diese Dokumentation ist auch in dem Paket <package>libpam-doc</package>
enthalten.

<p>PAM bieten ihnen die M&ouml;glichkeit durch mehrere Authentifizierungs
Schritte auf einmal zu gehen, ohne das der Benutzer es wei&szlig;. Sie
k&ouml;nnen gegen eine Berkeley Datenbank und gegen die normale passwd
Datei authentifizieren, und der Benutzer kann sich nur einloggen, wenn er
beide Male korrekt authentifiziert wurde. Sie k&ouml;nnen viel
einschr&auml;nken mit PAM, genauso wie sie ihr System weit &ouml;ffnen
k&ouml;nnen. Seien sie also vorsichtig. Eine typische Konfigurationszeile
hat ein Kontrollfeld als sein zweites Element.
<!-- Second in mine (old Debian v2.0 though), check this! (FIXME) (era) -->
Generell sollte es auch "requisite" gesetzt werden, so wird ein login
Feger erzeugt, wenn eines der Module versagt.
<!-- Lots of fields in mine are "required", please elaborate? (FIXME) (era) -->

<p>Die erste Sache, die ich gerne mache, ist es, MD5 Unterst&uuml;tzung
zu den PAM Anwendungen hinzuzuf&uuml;gen, da dies gegen lexikalische
Attacken hilft (da Passw&ouml;rter l&auml;nger sein k&ouml;nnen, wenn sie
MD5 benutzen). Die folgenden zwei Zeilen sollten sie in allen Dateien
unterhalb von <file>/etc/pam.d/</file> zuf&uuml;gen die Zugriff auf ihre
Maschine gew&auml;hren, wie zum Beispiel <tt>login</tt> und <tt>ssh</tt>.

<example>
# Gehen sie sicher, dass sie libpam-cracklib zuerst installiert haben,
# sonst werden sie sich nicht einloggen koennen
password   required     pam_cracklib.so retry=3 minlen=12 difok=3
password   required     pam_unix.so use_authtok nullok md5
</example>

<p>Also, was macht diese Beschw&ouml;rungsformel nun genau? Die erste
Zeile l&auml;dt das cracklib PAM Modul, welches einen
Passwort-Sicherheits-check bereitstellt; es fragt nach einem neuen
Passwort mit einem Minimum von 12 Zeichen, einer Differenz von mindestens
3 Zeichen zum alten Passwort, und erlaubt 3 Versuche. Die zweite Zeile
f&uuml;hrt das standard authentifizierungs Modul mit MD5 Passw&ouml;rtern
ein und erlaubt Passw&ouml;rter mit einer L&auml;nge von Null. Die
use_authtok Direktive ist notwendig, um das Passwort von dem vorherigen
Modul &uuml;bergeben zu bekommen.

<p>Um sicher zu stellen, dass sich der Benutzer root nur von lokalen
Terminals einloggen kann, sollten sie die folgende Zeile in
<file>/etc/pam.d/login</file> eingef&uuml;gt werden:

<example>
auth     requisite  pam_securetty.so
</example>

<p>Nun sollten sie alle Terminals, von denen sich der Benutzer Root
einloggen k&ouml;nnen sollte, in <file>/etc/security/acces.conf</file>
eintragen. Nicht zuletzt sollten sie die folgende Zeile aktivieren, wenn
sie ihrem Benutzern Limits setzen wollen:
<!-- FIXME: This is pam.d/login you're talking about, still? Elaborate? era -->
<example>
session  required   pam_limits.so
</example>

<p>Dies schr&auml;nkt die System die ein User nutzen darf ein (siehe
unter in <ref id="user-limits">). Sie k&ouml;nnen zum beispiel die Anzahl
der Logins, die man haben kann, einsch&auml;nken (f&uuml;r eine Gruppe
von Nutzern oder Systemweit), die Anzahl der Prozesse, den belegten
Speicher...

<p>Editieren sie nun <file>/etc/pam.d/passwd</file> und &auml;ndern sie
die erste Zeile. Si sollten die Option "md5" zuf&uuml;gen, um
MD5-Passw&ouml;rter zu benitzen, &auml;ndern sie die minimale
Passwort-L&auml;nge von 4 auf 6 (oder mehr) und setzen sie eine
Maximall&auml;nge, wenn sie m&ouml;chten. Die resultierende Zeile wird in
etwa so aussehen:

<example>
password   required   pam_unix.so nullok obscure min=6 max=11 md5
</example>

<p>Wenn sie su sch&uuml;tzen m&ouml;chten, so dass nur manche Leute es
benutzen k&ouml;nnen, um root auf ihrem System zu werden, m&uuml;ssen sie
eine neue Gruppe "wheel" zu ihrem System hinzuf&uuml;gen (das ist der
sauberste Weg, da keine Datei solche Gruppenrechte bisher benutzt).
F&uuml;gen sie root und die anderen Benutzer, die zu root
<prgn>su</prgn>en k&ouml;nnen sollen, zu dieser Gruppe. F&uuml;gen sie
anschliessend die folgene Zeile zu <file>/etc/pam.d/su/</file> hinzu:

<example>
auth        requisite   pam_wheel.so group=wheel debug
</example>

<p>Dies stellt sicher, dass nur Personen aus der Gruppe wheel
<prgn>su</prgn> benutzen k&ouml;nnen, um root zu werden. Andere Benutzer
wird es nicht m&ouml;glich sein, root zu werden. Tats&auml;chlich werden
sie eine ablehnende Nachricht bekommen, wenn sie versuchen root zu
werden.

<p>Wenn sie es nur bestimmten Nutzern erlauben wollen, sich bei einem PAM
Service zu authentifizieren, ist dies sehr leicht zu erreichen, indem sie
Dateien benutzen, in denen die Nutzer, denen es erlaubt ist sich
einzulogen (oder nicht), gespeichert sind. Stellen sie sich vor, sie
m&ouml;chten lediglich dem Nutzer 'ref' erlauben, sich via ssh
einzuloggen. Sie schreiben in also in eine Datei
<file>/etc/ssh-users-allowed</file> und schreiben das folgende in
<file>/ect/pam.d/ssh</file>:

<example>
auth        required    pam_listfile.so item=user sense=allow file=/etc/sshusers-allowed onerr=fail
</example>

<p>Zuletzt, aber nicht am unwichtigsten, erstellen sie
<file>/etc/pam.d/other</file> mit den folgenden Zeilen:

<example>
auth     required       pam_securetty.so
auth     required       pam_unix_auth.so
auth     required       pam_warn.so
auth     required       pam_deny.so
account  required       pam_unix_acct.so
account  required       pam_warn.so
account  required       pam_deny.so
password required       pam_unix_passwd.so
password required       pam_warn.so
password required       pam_deny.so
session  required       pam_unix_session.so
session  required       pam_warn.so
session  required       pam_deny.so
</example>

<p>Diese Zeilen stellen f&uuml;r alle Anwendungen, die PAM
unterst&uuml;tzen, eine gute Standard-Konfiguration dar (Zugriff wird
standardm&auml;ssig verweigert).


<sect1 id="user-limits">Resourcen-Nutzung limitieren: Die limits.conf
Datei

<p>
Sie sollten sich wirklich ernsthaft mit dieser Datei besch&auml;fftigen.
Hier k&ouml;nnen sie ihren Benutzern Resourcen-Limits definieren. Wenn
sie PAM benutzen, wird die Date <file>/etc/limits.conf</file> ignoriert
und sie sollten <file>/etc/security/limits.conf</file> stattdessen
benutzen.

<p>Wenn sie die Resourcen Nutzung nicht einschr&auml;nken, kann
<em>jeder</em> Nutzer mit einem einer g&uuml;ltigen Shell auf ihrem
System (or sogar ein Einbrecher, der das System durch einen Service
kompomotierte) so viel CPU, Speicher, Stack etc. benutzen, wie das System
zur verf&uuml;gung stellen kann. Dieses Problem der <em>Resourcen
&Uuml;berbeanspruchung</em> kann nur mit der Nutzung von PAM gel&ouml;st
werden. Beachten sie, dass es einen Weg gibt, Resourcen Limits zu manchen
Shells hinzuzuf&uuml;gen (zum Beispiel hat bash <prgn>ulimit</prgn>,
siehe <manref section="1" name="bash">), aber da nicht alle die gleichen
Limits zur verf&uuml;gung stellen und da der Nutzer seine Shell
&auml;ndern kann (siehe <manref section="1" name="chsh">), ist es besser,
die Limits in den PAM Modulen zu plazieren.

<p>F&uuml;r mehr Informationen hierzu lesen sie:
<list>

<item><url
id="http://www.samag.com/documents/s=1161/sam0009a/0009a.htm"
name="PAM configuration article">.

<item> <url
id="http://seifried.org/security/os/linux/20020324-securing-linux-step-by-step.html"
name="Seifried's Securing Linux Step by Step"> in dem <em>Limiting
users overview</em> Abschnitt.

<item><url id="http://seifried.org/lasg/users/" name="LASG"> in dem 
<em>Limiting and monitoring users</em> Abschnitt.

</list>

<p>FIXME: Get a good limits.conf up here

<sect1>User Login Actionen: Editieren von /etc/login.defs
<p>
Der n&auml;chste Schritt ist es, die grundlegende Konfiguration und die
Actionen bei User Login zu editieren.

<example>
FAIL_DELAY          10
</example>

Diese Variable sollte auf einen h&ouml;heren Wert gesetzt werden, um es
schwerer zu machen, mittels Brute Force (roher Gewalt, sturres
Durchprobieren, Anm. d. &Uuml;bers.) auf einem Terminal einzuloggen. Wenn
ein falsches Passwort eingegeben wird, muss der potentielle Angreifer
(aber auch der normale Benutzer!) 10 Sekunden warten, um einen neuen
login Prompt zu bekommen, was auf die Dauer viel Zeit kostet, wenn sie
Passw&ouml;rter durchtesten. Beachten sie jedoch die Tatsache, dass diese
Einstellung nutzlost ist, wenn sie ein anderes Programm als getty
benutzen, wie zum Beispiel mingetty.

<example>
FAILLOG_ENAB        yes
</example>

Wenn sie diese Variable einschalten werden fehlgeschlagene Logins
protokoliert. Es ist wichtig hier auf dem laufendem zu bleiben, um
jemanden zu fassen, der eine Brute Force Attacke versucht.

<example>
LOG_UNKFAIL_ENAB    yes
</example>

Wenn sie die Varible "FAILLOG_ENAB" auf yes gesetzt haben, dann sollten
sie auch diese Variable auf yes setzen. Dies wird auch unbekannte
Nutzernamen protokolieren. Wenn sie dies tun, gehen sie auch sicher, dass
die Protokolle sinnvolle Zugriffsrechte haben (Zum Beispiel 640, mit
einer angemessenen Gruppenzugeh&ouml;rigkeit, wie adm), weil Nutzer oft
versehentlich ihr Passwort als Usernamen eingeben und dies anderen nicht
zug&auml;nglich machen wollen.

<example>
SYSLOG_SU_ENAB      yes
</example>

<p>Dies schaltet das Mitprotokollieren von <prgn>su</prgn> Versuchen im
Syslog ein. Sehr wichtig auf ernsthaften Maschinen, aber beachten sie,
dass dies auch die Privatsph&auml;hre verletzen kann.

<example>
SYSLOG_SG_ENAB      yes
</example>

<p>Dasgleiche wie bei SYSLOG_SU_ENAB, jedoch f&uuml;r das Programm
<prgn>sg</prgn>.

<example>
MD5_CRYPT_ENAB      yes
</example>

<p>Wie bereits erkl&auml;rt, reduzieren MD5-Summen-Passw&ouml;rter
grossartig das Problem lexikalischer Attacken, da sie l&auml;ngere
Passw&ouml;rter benutzen k&ouml;nnen. Wenn sie slink benutzen, lesen sie
die Dokumentation zu MD5 bevor sie diese Option einschalten. Ansonsten
wird dies in PAM gesetzt.
<!-- AS 20020909 Was will der Autor mit dem letzten Satz sagen?? -->

<example>
PASS_MAX_LEN        50
</example>

<p>Wenn sie MD5-Passw&ouml;rter in ihrer PAM Konfiguration aktiviert
haben, dann sollten sie diese Variable auf denselben Wert setzen, den sie
dort benutzt haben.

<sect1>ftp Einschr&auml;nken: Editieren von /etc/ftpusers
<p>
Die Datei <file>/etc/ftpusers</file> enth&auml;lt eine Liste von allen
Nutzern, denen es nicht erlaubt ist, sich auf dem host mit ftp
einzuloggen. Benutzen sie diese Datei nur, wenn sie wirklicht ftp
erlauben wollen (wozu im allgemmeinen nicht geraten wird, da es Klartext
Passw&ouml;rter benutzt). Wenn ihr ftp Daemon PAM unterst&uuml;tzt,
k&ouml;nnen sie dies ebenfalls benutzen, um Nutzern bestimmte Services zu
erlauben oder zu verbieten.

<p>FIXME (BUG): Is it a bug that the default ftpusers in Debian does
<em>not</em> include all the administrative users (in
<package>base-passwd</package>).

<sect1>su benutzen

<p>Wenn es wirklich ben&ouml;tigt wird, dass Nutzer Super User auf ihrem
System werden, zum Beispiel um Pakete zu installieren oder neue Benutzer
anzulegen, k&ouml;nnen sie das Programm <prgn>su</prgn> benutzen, um
ihre Identit&auml;t zu wechseln. Sie sollten jeden Login als Nutzer Root
vermeiden und stattdessen ddas Programm <prgn>su</prgn> benutzen.
Eigentlich ist es die betste L&ouml;sung su zu entfernen, und zu
<prgn>sudo</prgn> zu wechseln, da es mehr M&ouml;glichkeiten bietet als
<prgn>su</prgn>. Wie auch immer, <prgn>su</prgn> ist allgemeiner und wird
auf vielen Unices benutzt.

<sect1>sudo benutzen

<p>
Das <prgn>sudo</prgn> erlaubt es dem Benutzer, ein definiertes Kommando
unter einer anderen Nutzer-Identit&auml;t auszuf&uuml;hren, sogar als
Root. Wenn der Nutzer zu <file>/etc/sudoers</file> hinzugef&uuml;ft ist
und sich korrekt authentifiziert ist er in der Lage, Kommandos, die in
<file>/etc/sudoers</file> definiert wurde. Sicherheitsverletzungen, wie
ein inkorrektes Passwort oder der Versuch ein Programm auszuf&uuml;hren,
f&uuml;r das ihre Rechte nicht ausreichen, werden protokolliert und an
root gemailt.

<sect1>verweigern von administrativen Fernzugriff
<p>Sie sollten <file>/etc/security/access.conf</file> ebenfalls so
modifizieren, dass ein administrativer Login aus der Ferne nicht erlaubt
ist. Auf diese Weise m&uuml;ssen die Nutzer das Programm <prgn>su</prgn>
(oder <prgn>sudo</prgn>) benutzen, so dass es immer eine pr&uuml;fbare
Spur gibt, wann immer ein Nutzer administrative M&ouml;glichkeiten nutzen
m&ouml;chte.

<p>Sie m&uuml;ssen die folgende Zeile zu ihrer
<file>/etc/security/access.conf</file> hinzuf&uuml;gen, die
Debians Standard-Konfigurations Datei hat ein Beispiel auskommentiert:
<example>
   -:wheel:ALL EXCEPT LOCAL
</example>


<sect1 id="user-restrict">Nutzer einschr&auml;nken

<p>Manchmal werden sie vielleicht denken, dass sie einen Nutzer auf ihrem
System erstellen m&uuml;ssen, um einen bestimmten Service (pop3 Email
Server oder ftp) anzubieten. Bevor sie dies tun, erinnern sie sich zuerst
darad, dass die PAM Implementierung in Debian GNU/Linux ihnen erlaubt,
Nutzer mit einer breiten Auswahl von externen Verzeichnisdiensten
(radius, ldap, etc.) zu best&auml;tigen. Dies wird vom libpam Paket
bewerkstelligt.

<p>Wenn sie einen Nutzer anlegen m&uuml;ssen, und auf ihr System aus der
Ferne zugegeriffen werden kann, beachten sie, dass es Nutzern
m&ouml;glich sein wird, sich einzuloggen. Sie k&ouml;nnen dies behebeben,
indem sie diesen Nutzer eine Null (<file>/dev/null</file>) als Shell (sie
m&uuml;sste in <file>/etc/shells</file> gelistet sein) zuweisen. Wenn sie
den Nutzern erlauben wollen, auf das System zuzugreifen, aber ihre
Bewegungen einschr&auml;nken wollen, k&ouml;nnen sie
<file>/bin/rbash</file> benutzen, als ob sie die <tt>-r</tt> Option der
Bash (<em>RESTRICTED SHELL</em>, siehe <manref name="bash"
section="1">) verwendet h&auml;tten. Beachten sie bitte, dass sogar mit
einer restricted Shell ein Nutzer, ein Nutzer, der auf ein interaktives
Programm zugreifen kann (dass es ihm erlauben w&uuml;rde, eine subshell
auszuf&uuml;hren), diese Limitierung der Shell umgehen kann.

<p>Debian bietet zur Zeit in seiner unstable Release (und wird es
vielleicht der n&auml;chste stable Release hinzuf&uuml;gen) das
<file>pam_chroot</file> Modul. Eine Alternative hierzu ist es, den
Service, der einen Fern-Login anbietet (ssh, telnet), in einer
chroot-Umgebung laufen zu lassen.

<p>Wenn sie einschr&auml;nken wollen, <em>wann</em> ein Nutzer auf das
System zugreifen kann, m&uuml;ssen sie
<file>/etc/security/access.conf</file> an ihre Bed&uuml;rfnisse anpassen.

<sect2>ssh f&uuml;r Nutzer einschr&auml;nken

<p>Debian's sshd wird ihnen nicht erlauben, die Bewegungen eines Nutzer
durch den Server einzuschr&auml;nken, da er die Chroot
Funktionalit&auml;t, die das kommerzielle Programm (sshd2) hat (benutzen
sie 'ChrootGroups' oder 'ChrootUsers', siehe dazu <manref
name="sshd2_config" section="5">). Wie auch immer, es gibt einen Patch,
der ihnen erlaubt dies zu tun, den Patch erhalten sie von <url
id="http://bugs.debian.org/139047" name="Bug Report 139047"> oder von
<url id="http://www.cag.lcs.mit.edu/~raoul/"> (und er wird wohl in der
Zukunft auf das OpenSSH Paket angewendet werden). Emanuel Lacour hat ssh
Paktete mit diesen F&auml;higkeiten unter <url
id="http://debian.home-dn.net/woody/ssh/">, allerdings wird empfohlen
durch die Compilierungs-Schritte zu gehen. Eine Beschreibung von den
notwendigen Schritten finden sie unter <url
id="http://mail.incredimail.com/howto/openssh/"> (so ziemlich alles
trifft dort auch auf Debian zu, auch wenn von RedHat 7.2 die rede ist).
Nachdem sie den Patch angewendet haben, m&uuml;ssen sie die
<file>/etc/passwd</file> anpassen, indem sie das Heimat-Verzeichnis des
Nutzers &auml;ndern (in den speziellen <tt>/./</tt> Token).

<example>
joeuser:x:1099:1099:Joe Random User:/home/joe/./:/bin/bash
</example>

<p>Dies wird <em>beides</em> einschr&auml;nken, sowohl remote Zugriff
auf die Shell als auch remote Copy &uuml;ber einen ssh Kanal.

<p>Gehen sie sicher, dass sie alle ben&ouml;tigten Binaries in den
Chroot-Pfaden f&uuml;r den Nutzer haben. Diese Dateien sollte Root
besiutzen, um Einmischungen durch den Nutzer zu verhinern (zum Beispiel
die chrooted Sandbox zu verlassen).
Ein Beispiel k&ouml;nnte so aussehen:

<example>
./bin:
total 660
drwxr-xr-x    2 root     root         4096 Mar 18 13:36 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
-r-xr-xr-x    1 root     root       531160 Feb  6 22:36 bash
-r-xr-xr-x    1 root     root        43916 Nov 29 13:19 ls
-r-xr-xr-x    1 root     root        16684 Nov 29 13:19 mkdir
-rwxr-xr-x    1 root     root        23960 Mar 18 13:36 more
-r-xr-xr-x    1 root     root         9916 Jul 26  2001 pwd
-r-xr-xr-x    1 root     root        24780 Nov 29 13:19 rm
lrwxrwxrwx    1 root     root            4 Mar 30 16:29 sh -> bash

./etc:
total 24
drwxr-xr-x    2 root     root         4096 Mar 15 16:13 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
-rw-r--r--    1 root     root           54 Mar 15 13:23 group
-rw-r--r--    1 root     root          428 Mar 15 15:56 hosts
-rw-r--r--    1 root     root           44 Mar 15 15:53 passwd
-rw-r--r--    1 root     root           52 Mar 15 13:23 shells

./lib:
total 1848
drwxr-xr-x    2 root     root         4096 Mar 18 13:37 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
-rwxr-xr-x    1 root     root        92511 Mar 15 12:49 ld-linux.so.2
-rwxr-xr-x    1 root     root      1170812 Mar 15 12:49 libc.so.6
-rw-r--r--    1 root     root        20900 Mar 15 13:01 libcrypt.so.1
-rw-r--r--    1 root     root         9436 Mar 15 12:49 libdl.so.2
-rw-r--r--    1 root     root       248132 Mar 15 12:48 libncurses.so.5
-rw-r--r--    1 root     root        71332 Mar 15 13:00 libnsl.so.1
-rw-r--r--    1 root     root        34144 Mar 15 16:10
libnss_files.so.2
-rw-r--r--    1 root     root        29420 Mar 15 12:57 libpam.so.0
-rw-r--r--    1 root     root       105498 Mar 15 12:51 libpthread.so.0
-rw-r--r--    1 root     root        25596 Mar 15 12:51 librt.so.1
-rw-r--r--    1 root     root         7760 Mar 15 12:59 libutil.so.1
-rw-r--r--    1 root     root        24328 Mar 15 12:57 libwrap.so.0

./usr:
total 16
drwxr-xr-x    4 root     root         4096 Mar 15 13:00 .
drwxr-xr-x    8 guest    guest        4096 Mar 15 16:53 ..
drwxr-xr-x    2 root     root         4096 Mar 15 15:55 bin
drwxr-xr-x    2 root     root         4096 Mar 15 15:37 lib

./usr/bin:
total 340
drwxr-xr-x    2 root     root         4096 Mar 15 15:55 .
drwxr-xr-x    4 root     root         4096 Mar 15 13:00 ..
-rwxr-xr-x    1 root     root        10332 Mar 15 15:55 env
-rwxr-xr-x    1 root     root        13052 Mar 15 13:13 id
-r-xr-xr-x    1 root     root        25432 Mar 15 12:40 scp
-rwxr-xr-x    1 root     root        43768 Mar 15 15:15 sftp
-r-sr-xr-x    1 root     root       218456 Mar 15 12:40 ssh
-rwxr-xr-x    1 root     root         9692 Mar 15 13:17 tty

./usr/lib:
total 852
drwxr-xr-x    2 root     root         4096 Mar 15 15:37 .
drwxr-xr-x    4 root     root         4096 Mar 15 13:00 ..
-rw-r--r--    1 root     root       771088 Mar 15 13:01
libcrypto.so.0.9.6
-rw-r--r--    1 root     root        54548 Mar 15 13:00 libz.so.1
-rwxr-xr-x    1 root     root        23096 Mar 15 15:37 sftp-server
</example>


<sect1>pr&uuml;fen der Nutzer von Hand

<p>Wenn sie paranoid sind, dann m&ouml;chten sie den Nutzern vielleicht
eine definierte <file>.profile</file> aufzwingen, das die Environments
so setzt, dass sie die &Uuml;berwachungsm&ouml;glichkeiten der Shell
nicht entfernen k&ouml;nnen (Kommandos werden auf <tt>$HISTFILE</tt>
ausgegeben). Die <file>.profile</file> k&ouml;nnte so gesetzt werden:

<example>
HISTFILE=/home/_user_/.bash_history
HISTSIZE=100000000000000000
HISTFILESIZE=10000000000000000
set -o HISTFILE
set -o HISTSIZE
set -o HISTFILESIZE
export HISTFILE HISTSIZE HISTFILESIZE
</example>

<p>Beachten sie: Das <tt>-o</tt>-Attribut erlaubt nur lesenden Zugriff
auf die Variable.

<p>Damit dies funktioniert darf der Nutzer <file>.profile</file> oder
<file>.bash_history</file> nicht modifizieren, aber er muss ersteres
lesen und letzteres schreiben k&ouml;nnen. Sie k&ouml;nnen dies leicht
tun, indem sie die Dateien und das Verzeichnis, indem sich diese Dateien
befinden, so dass sie einem anderen Benutzer geh&ouml;ren (root), und 
For this to work the user cannot modify the <file>.profile</file>, und
der Gruppe des Nutzers auf die History-Datei Schreibzugriff
gew&auml;hren. Eine andere M&ouml;glichkeit ist es, dass Programm
<prgn>chattr</prgn> zu benutzen.
     
<p>Wenn sie wirklich paranoid sind und jedes Kommando des Nutzers
protokollieren wollen, k&ouml;nnten sie den Quellcode der Bash nehmen,
ihn &auml;ndern und sie alles, das der Nutzer eingibt in einer anderen
Datei ausgibt. Oder sie lassen <package>ttysnoop</package> konstant jedes
neue tty &uuml;berwachen und die Ausgaben in einer Datei ausgeben. Ein
anderes n&uuml;tzliches Programm ist <url name="Snoopy"
id="http://sourceforge.net/project/?group_id=2091">. Dies ist ein
f&uuml;r den Nutzer transparentes Programm, dass sich als eine Bibliothek
zwischen h&auml;ngt, und eine H&uuml;lle um execve() Aufrufe bildet,
jedes ausgef&uuml;hrte Kommando wird im syslogd aufgezeichnet, indem die
<tt>authpriv</tt>-M&ouml;glichkeit benutzt wird (&uuml;blicherweise wird
dies unter <file>/var/log/auth.log</file> gespeichert).
<!-- FIXME: Debian package for snoopy??? --> 

<p>Beachten sie, dass sie hierf&uuml;r nicht das <prgn>script</prgn>
Kommando benutzen k&ouml;nnen, da sies nicht als Shell funktionert (auch
nicht, wenn sie es zu <file>/etc/shells</file> hinzuf&uuml;gen).

<sect1>Komplettieren von Nutzer &Uuml;berwachung

<p>Die vorherigen Beispiele sind ein einfacher Weg, um Nutzer
&Uuml;berwachung zu konfigurieren, eignet sich aber nicht unbedingt
f&uuml;r komplexe Systeme. Sollte dies der Fall sein, schauen sie sich
das Paket <package>acct</package>, die accounting Utilities, an. Diese
werden alle Kommandos, die ein Nutzer oder ein Prozess auf dem System
ausf&uuml;hrt, auf die Kosten von Plattenplatz aufzeichnen.

<p>Wenn sie diese 'Buchf&uuml;hrung' aktivieren, werden alle
Informationen &uuml;ber Prozesse und Nutzer unter
<file>/var/account/</file> gehalten. Das Accounting-Paket schlie&szlig;t
Werkzeuge (<prgn>sa</prgn> und <prgn>ac</prgn>) zur Analyse dieser Daten
ein.

<sect1>Nutzer Profil nachpr&uuml;fen

<p>Wenn sie <em>sehen</em> wollen, was Nutzer normalerweise tun, wenn
sie sich verbinden, k&ouml;nnen sie die <file>wtmp</file> Datenbank
benutzen, die alle Login-Informationen enth&auml;lt. Diese Datei kann mit
verschiedenen Werkzeugen weiterverarbeitet werden, unter ihnen
<prgn>sac</prgn>, das ein Profil f&uuml;r jeden Nutzer ausgeben kann,
dass zeigt, in welchem Zeitfenster sie sich f&uuml;r gew&ouml;hnlich
auf dem System einloggen.

<p>F&uuml;r den Fall, dass sie accounting aktiviert haben, k&ouml;nnen
sie auch die mitgelieferten Werkzeuge verwenden, um festzustellen, wann
Nutzer auf das System zugreifen und was sie ausf&uuml;hren.

<sect1>umasks der Nutzer einstellen

<p>Abh&auml;ngig von ihrer Richtlinien m&ouml;chten sie vielleicht
&auml;ndern, wie Nutzer Informationen teilen k&ouml;nnen, was die
Standardrechte von neu erstellten Dateien sind. Dies &auml;ndern sie,
indem sie eine passende <tt>umask</tt> f&uml;r alle Nutzer einstellen.
Sie k&ouml;nnen sie UMASK-Einstellung in <file>/etc/limits.conf</file>,
<file>/etc/profile</file>, <file>/etc/csh.cshrc</file>,
<file>/etc/csh.login</file>, <file>/etc/zshrc</file> und wahrscheinlich
auch noch andere (abh&auml;ngig von den Shells, die sie auf ihrem System
installiert haben). Von all diesen hat die zuletzt geladene Vorrang:
PAM's limits.conf, die standard System Konfiguration f&uuml;r die Shell
des Nutzers, die Shell des Nutzers (sein <file>~/.profile</file>),
<file>~/.bash_profile</file>...)

<p>Debian's default <tt>umask</tt> Einsztellung is <em>022</em>, d.h.,
dass Dateien (und Verzeichnisse) von Nutzer aus der Gruppe und jedem
anderen Nutzer des Systems lesbar und zugreifbar sind. Wenn dies zu
grossz&uuml;gig f&uuml;r ihr System ist, m&uuml;ssen sie die umask
Einstellung f&uuml;r alle Shells (und f&uuml;r PAM) &auml;ndern.
Vergessen sie nicht die Dateien unter <file>/etc/skel/</file>
anzupassen, da dort die die Standards f&uuml;r Nutzer werden, wenn sie
mit dem <prgn>adduser</prgn> Kommando erstellt werden.

<p>Beachten sie, dass ein Nutzer immernoch seine umask Einstellung
ab&auml;ndern kann, wenn sie es m&ouml;chten, um sie grossz&uuml;giger
oder einschr&auml;nkender zu machen.

<sect1>Nutzer Sicht/Zugriff limitieren

<P>FIXME: Content needed. Tell of consequences of changing packages
permissiones when upgrading (and admin this paranoid should chroot his
users BTW).

<p>Wenn sie einem Nutzer Zugriff auf das System mit einer Shell
gew&auml;hren m&uuml;ssen, bedenken sie es vorsichtig. Ein Nutzer kann
normalerweise, wenn er nicht in eine streng abgeschirmte Umgebung (wie
<tt>chroot</tt>) gesetzt wird, ziemlich viel Informationen von ihrem
System sammeln, darunter:

<list>

<item>Din paar Konfigurationsdateien unter <file>/etc</file>. Jedoch
werden Debian's Standard Rechte auf sensitive Dateien (die zum Beispiel
Passw&ouml;rter enthalten k&ouml;nnten) den Zugriff auf kritische
Informationen verhindern. Um zu sehen, auf welche Dateien nur der root
Nutzer zugreifen kann, f&uuml;hren sie zum Beispiel <tt>find /etc -type f -a
-perm 600 -a -uid 0</tt> als superuser aus.

<item>Ihre installierten Pakete, entweder durch ansehen der
Paket-Datenbank, des <file>/usr/share/doc</file> Verzeichnisses oder
durch raten, indem man die Binaries und Bibliotheken durchsieht, die auf
ihrem System installiert sind.

<item>Ein paar Protokolle unter <file>/var/log</file>. Beachten sie, das
auf einige Protokolle nu root und die <tt>adm</tt> Gruppe zugreifen kann
(versuchen sie <tt>find /var/log -type f -a -perm 640</tt>) und manche
sind sogar ausschliesslich f&uuml;r root verf&uuml;gbar (versuchen sie 
some logfiles at <file>/var/log</file>. Note also that some <tt>find /var/log -type f -a -perm
600 -a -uid 0</tt>).

</list>


<p>Was kann ein Nutzer von ihrem System sehen? Wahrscheinlich ziemlich
viele Sachen, versuchen sie mal folgendes (und jetzt tief durchatmen):
<example>
find / -type f -a -perm +006 2>/dev/null  
find / -type d -a -perm +007 2>/dev/null  
</example>

<p>Was sie sehen ist eine Liste von allen Dateien, die ein Nutzer
<em>einsehen</em>, und die Verzeichnisse, auf die er Zugriff hat.

<sect>Die Nutzung von tcpwrappers 

<p>TCP-Wrapper (Schurtzumschl&auml;ge f&uuml;r TCP) wurden entwickelt,
als es noch keine echten Paket-Filter gab, aber Zugsngskontrollen
notwendig waren. Ein TCP-Wrapper erlaubt ihnen, einem Host oder einer
Domain einen Service zu erlauben oder zu verweigern und
default-m&auml;ssig Zugriff zu erlauben oder zu verweigern. Wenn sie mehr
Informationen haben m&ouml;chten, sehen sie sich <manref
name="hosts_access" section="5"> an.

<p>Viele der unter Debian installierten Services

<list>
<item>werden entweder durch den TCP-Wrapper service (<file>tcpd</file>)
aufgerufen
<item>oder wurden mit libwrapper (Bibltiothek f&uuml;r TCP-Wrapper)
Unterst&uuml;tzung kompiliert
</list>

<p>Einerseits werde manche Services, einschliesslich telnet, ftp,
netbios, swat und finger in <file>/etc/inetd.conf</file> konfiguriert.
Sie sehen es daran, dass die Konfigurations-Datei zuerst
<prgn>/usr/sbin/tcpd</prgn> aufruft. Andererseits, selbst wenn ein
Service nicht &uuml;ber den <prgn>inetd</prgn>-Superdaemon
ausgef&uuml;hrt wird, kann es in jedem Fall, den TCP-Wrapper-Regeln
unterworfen werden, indem man die Unterst&uuml;tzung daf&uuml;r
einkompiliert. Services, die unter Debian mit TCP-Wrappern compiliert
wurden, schliessen ssh, portmap, in.talk, roc.statd, rpc.mountd, gdm, oaf
(der GNOME-Aktivierungs daemon), nessus und viele andere ein.

<p>Um herauszufinden, welche Pakete TCP-Wrapper benutzen, versuchen sie
folgendes:

<example>
$ apt-cache showpkg libwrap0 | egrep '^[[:space:]]' | sort -u | \
        sed 's/,libwrap0$//;s/^[[:space:]]\+//'
</example>


<p>Beachten sie bitte folgendes, wenn sie <prgn>tcpchk</prgn> laufen
lassen: Sie k&ouml;nnen Services, die gegen dei Wrapper-Bibliothek
kompiliert wurden, der <file>host.deny</file> oder
<file>host.allow</file> Datei hinzuf&uuml;gen, aber aber
<prgn>tcpchk</prgn> wird sie warnen, dass er sie nicht finden kann, da er
sie in <file>/etc/inetd.conf</file> sucht (die Manual-Seite ist an dieser
Stelle nicht sehr genau).

<p>Jetzt kommt ein kleiner Trick, und vielleicht die kleinste Alarmanlage
zur Erkennung von Eindringlingen: Im allgemeinen sollten sie eine
anst&auml;ndige Firewall als erste und TCP-Wrapper als zweite
Verteidigungslinie haben. Der Trick besteht nun darin ein SPAWN
<footnote>Vermeiden Sie den Fall hier, da <em>spawn</em> nicht
funktionieren wird</footnote> Kommando in <file>/etc/hosts.deny</file>
einzutragen, das immer dann eine Mail an root schickt, wenn der Wrapper
eines abgewiesenden Services ausgel&ouml;st wurde:

<example>
ALL: ALL: SPAWN ( \
  echo -e "\n\
  TCP Wrappers\: Verbindungsaufbau abgelehnt\n\
  By\: $(uname -n)\n\
  Prozess\: %d (pid %p)\n\
  Nutzer\: %u\n\
  Host\: %c\n\
  Datum\: $(date)\n\
" | /usr/bin/mail -s "Verbinung zu %d blockiert" root) &
</example>

<p><em>Beachten Sie</em>: Das obige Beispiel kann sehr leicht geDoSet
(Denial of Service, Verbindungsaufbau abgelehnt) werden, indem man
versucht, sehr viele Verbindungen in kurzer Zeit aufzubauen. Viele Emails
bedeuten viel Datei-Aktivit&ouml;t, lediglich erreicht durch das Senden
von ein paar Paketen.

<!--
# Could this example be more interesting? 
# It also relates to the next section (jfs)
#
# era: cf hosts_access(5) manual page,
# and why are you not using logger(1) here? (FIXME?)
#
#&lt;example&gt;
#ALL: ALL: SPAWN ( \
#  /usr/local/sbin/send_syslog %u %c %d )
#&lt;example&gt;

#  With send_syslog as:
##!/usr/bin/perl -w
#
#use Sys::Syslog qw(:DEFAULT setlogsock);
#
#$user=shift(@ARGV) || 'unkown';
#$host=shift(@ARGV) || 'unkown';
#$service=shift(@ARGV) || 'unkown';
#setlogsock('unix');
#openlog("alert",'', 'user');
#syslog('warning', 'Connection from %s at %s to %s blocked.', ($user, $host, $service) );
#closelog();
#
#exit 0;
-->

<sect id="log-alerts">Die Wichtigkeit von Logs und Alarmen

<p>Wie Logs (Protokolldateien) und Alarme in einem sicheren System
behandelt werden ist eine wichtige Angelegenheit. Es ist leicht zu
verstehen, dass selbst wenn ein System angeblich perfekt konfiguriert und
zu 99% sicher ist, es immer noch 1% Restrisiko gibt, f&uuml;r die keine
Sichereheitsma&szlig;namen greifen. Als erstes gillt es, Angriffe auf
diese 1% zu erkennen und als zweites Alarm auszu&ouml;l&ouml;sen, oder
das System ist in keinster Weise sicher.

<p>Debian GNU/Linux stellt Tools zur Verf&uuml;gung, die die Analyse von
Log-Dateien &uuml;bernehmen, am beachtenswertesten
<package>logcheck</package> oder <package>loganalysis</package> (beide
Pakete werden ein wenig Anpassung ben&ouml;tigen, um unn&ouml;tige Dinge
aus den Reports zu entfernen). Wenn sich das System in der N&auml;he
befindet, k&ouml;nnte es n&uuml;tzlich sein, das System-Log auf einer
virtuellen Konsole auszugeben. Die ist n&uuml;tzlich, da Sie so (auch von
weiter weg oder im vorbeigehen) sehen k&ouml;nnen, ob sich das System
richtig verh&auml;lt. Debians <file>/etc/syslog.conf</file> kommt mit
einer kommentierten Standard-Konfiguration. Um diese Ausgabe
einzuschalten, unkommentieren <!-- Hoert sich schief an, aber was
besseres faellt mir nicht ein --> Sie die entsprechenden Zeilen und
starten syslog neu (<tt>/etc/init.d/syslogd restart</tt>):

<example>
daemon,mail.*;\
        news.=crit;news.=err;news.=notice;\
        *.=debug;*.=info;\
        *.=notice;*.=warn       /dev/tty8
</example>


<!-- FIXME: Talk about logcolorise? Is it in Debian? -->

<p>Es gibt da noch einiges &uuml;ber Log-Analyse, das hier nicht
behandelt werden kann. Eine gute Quelle f&uuml;r weiter Informationen ist
<url name="Counterpane's Log Analysis Resources"
id="http://www.counterpane.com/log-analysis.html">. In jedem Fall sind
selbst automatische Tools dem besten Tool nicht gewachsen: Ihrem Gehirn.

<!-- FIXME: Check information on SHARP, the 'syslog heuristic analysis
and response program'.  The paper is at
http://www.csis.gvsu.edu/sharp/. Is it free-software? packaged? -->

<sect1 id="custom-logcheck">Nutzen und anpassen von logcheck

<p>Das Programm <prgn>logcheck</prgn> ist in Debian in zwei Pakete
aufgeteilt: <package>logcheck</package> (das Haupt-Programm) und
<package>logcheck-database</package> (eine Datenbank regul&auml;rer
Ausdr&uuml;cke f&uuml;r das Programm). Der Standard unter Debian (unter
<file>/etc/cron.d/logcheck</file>) ist, dass <prgn>logcheck</prgn>
jeweils um 14:00 Uhr und nach jedem Neustart ausgef&uuml;hrt wird.

<p>Dieses Tool kann sehr n&uuml;tzlich sein, wenn es geeignet angepasst
wurde, um den Administrator zu alarmieren, wenn etwas ungew&ouml;hnliches
auf dem System passiert. <prgn>Logcheck</prgn> kann vollst&auml;ndig
angepasst werden, so dass es Mails &uuml;ber Ereignisse aus den Logs
sendet, die Ihrer Aufmerksamkeit bed&uuml;rfen. Die Standard-Installation
umfasst Profile zum ignorieren von Ereignissen und Regelwidrigkeiten
f&uuml;r drei unterschiedliche Setups (Workstation, Server und paranoid).
Das Debian-Paket umfasst eine Konfigurations-Datei
<file>/etc/logcheck/logcheck.conf</file>, die vom Program eingelesen
wird, die definiert, an welchen Nutzer die Testergebnisse geschickt
werden sollen. Es stellt ausserdem einen Weg f&uuml;r Pakete zur
Verf&uuml;gung, um neue Regeln in den Verzeichnissen zu realisieren:
<file>/etc/logcheck/hacking.d/_packagename_</file>,
<file>/etc/logcheck/violations.d/_packagename_</file>,
<file>/etc/logcheck/violations.ignore.d/_packagename_</file>,
<file>/etc/logcheck/ignore.d.paranoid/_packagename_</file>,
<file>/etc/logcheck/ignore.d.server/_packagename_</file>, und
<file>/etc/logcheck/ignore.d.workstation/_packagename_</file>.
Leider benutzen das noch nicht viele Pakete. Wenn Sie ein Regelwerk
entwickelt haben, dass f&uuml;r andere Nutzer n&uuml;tzlich sein
k&ouml;nnte, senden Sie bitte einen Bug-Report f&uuml;r das ensprechende
Paket (als ein <em>wishlist</em>-Bug). Mehr Informationen finden Sie
unter <file>/usr/share/doc/logcheck/README.Debian</file>.

<p>Der beste Weg <prgn>logcheck</prgn> zu konfigurieren ist es, es
einfach zu installieren (Sie werden gefragt werden, an welchen Nutzer die
Mail-Reports geschickt werden soll, und ob aus den Eintr&auml;gen im Syslog
wird ein <file>/etc/logcheck/logcheck.logfiles</file> generiert werden
soll). Wenn Sie andere Logfiles hinzuf&uuml;gen m&ouml;chten, &auml;ndern
Sie einfach <file>/etc/logcheck/logcheck.logfiles</file> indem Sie sie
hinzuf&uuml;gen. Die Paket-Abh&auml;ngigkeiten werden daf&uuml;r sorgen,
dass <package>logcheck-database</package> auch installiert wird.
W&auml;hrend der Installation werden Sie gefragt, welches
Sicherheits-Niveau ben&ouml;tigt wird:  workstation, server oder
paranoid. Dadurch wird <file>/etc/logcheck/ignore.d</file> (durch
einen symbolischen Link) auf die richtigen Verzeichnisse zeigen. Um dies
zu &auml;ndern f&uuml;hren Sie <tt>dpkg-reconfigure -plow
logcheck-database</tt> aus. Erstellen Sie dann eine Datei
<file>/etc/ignore.d/local</file>; diese Datei enth&auml;lt alle Regeln,
Meldungen auszuschliessen, die nicht gemeldet werden sollen. Lassen Sie
es f&uuml;r den Anfang leer (ein einfaches <tt>cp /dev/null
/etc/ignore.d/local</tt> sollte reichen).

<p>Wenn Sie dies einmal geschafft haben, sollten Sie die n&auml;chtsen
Tage/Wochen/Monate die verschickten Mails pr&uuml;fen, ob Sie Meldungen
geschickt bekommen, die Sie nicht erhalten wollen. F&uuml;gen Sie dann
einen entsprechenden regul&auml;ren Ausdruck (siehe <manref name="regex"
section="7">) zu <file>/etc/ignore.d/local</file>. Die ist ein
andauernder Tuning-Pozess. Wenn nur noch relevante Meldungen verschickt
werden, k&ouml;nnen Sie davon ausgehen, dass dieser Prozess beendet ist.
Beachten Sie, dass Logcheck Ihnen keine Mail schickt, wenn es nichts
relevantes auf Ihrem System findet, selbst wenn es l&auml;uft (so
bekommen Sie h&ouml;chstens eine Mail pro Woche, wenn Sie Gl&uuml;ck
haben).


<sect1>Konfigurieren, wohin Alarmmeldungen geschickt werden sollen

<p>Debian kommt mit einer Standard-Konfiguration f&uuml;r Syslog (in
/etc/syslog.conf), so dass Meldungen je nach System in die passenden
Dateien geschrieben werden.
<!-- Debian comes with a standard syslog configuration (in
/etc/syslog.conf) that logs messages to the appropriate files depending
on the system facility. -->
Das sollte Ihnen bereits bekannt sein, werfen Sie einen Blick auf die
Datei <file>syslog.conf</file> und deren Dokumentation, falls nicht. Wenn
Sie ein sicheres System pflegen wollen, sollten Ihnen bekannt sein, wohin
Log-Meldungen geschickt werden, so dass Sie nicht unbeachtet bleiben.

<p>Zum Beispiel ist es f&uuml;r viele produktiv Systeme sinnvoll
Meldungen auch auf der Konsole auszugeben, aber bei vielen solcher
Systeme ist es sehr wichtig, auch eine neue Maschine zu nehmen, die
f&uuml;r die anderen als ein Loghost fungieren wird (d.h. sie
empf&auml;ngt die Logs aller anderen Systeme).

<p>Sie sollten auch an Mails f&uuml;r Root denken, da viele
Sicherheits-Kontrollen (wie <package>snort</package>) ihre Alarme an die
mailbos von root senden. Diese Mailbos zeigt normalerweise an den ersten
Nutzer, der auf dem System erstellt wurde (pr&uuml;fen Sie dazu
<file>/etc/aliases</file>). Sorgen Sie daf&uuml;r, dass roots Mails
irgendwo hin geschickt wird, wo sie auch gelesen werden (entweder lokal
oder ferngesteuert).

<p>Es gibt noch andere Accounts besonderer Funktion und andere Aliase auf
Ihrem System. Auf einem kleinen System ist es wohl am einfachtes,
sicherzustellen, dass alle Alias auf den Root-Account zeigen, und dass
Mails an root in das pers&ouml;nliche Postfach des System-Administrator
weiter geleitet werden.

<p>FIXME: it would be interesting to tell how a Debian system can
send/receive SNMP traps related to security problems (jfs). Check:
<package>snmptraglogd</package>, <package>snmp</package> and
<package>snmpd</package>.


<sect1>Nutzen eines loghosts

<p>Ein Loghost ist ein host der die syslog-Daten &uuml;ber ein Netzwerk
sammelt. Wenn eine Ihrer Maschinen gecracked wird, kann der Eindringling
seine Spuren nicht verwischen, solange er den Loghost nicht ebenfalls
gecracked hat. Demzufolge muss der Loghost also besonders sicher sein.
Aus einer Maschinen einen Loghost zu machen ist relativ einfach: Starten
Sie den syslogd einfach mit 'syslogd -r', und ein neuer Loghost ist
geboren. Um dies unter Debian permanent zu machen, editieren Sie
<file>/etc/init.d/sysklogd</file> und &auml;nder Sie die Zeile

<example>
SYSLOGD=""
</example>
in 
<example>
SYSLOGD="-r"
</example>

Als n&auml;chstes konfigurieren Sie die anderen Machinen, ihre Daten an
den Loghost zu senden. F&uuml;gen Sie einen Eintrag, &auml;hnlich dem
folgenden zu der <file>/etc/syslog.conf</file> hinzu:

<example>
facility.level            @Ihr_Loghost
</example>

Schauen Sie in die Dokumentation um zu erfahren, wodurch Sie
<em>facility</em> und <em>level</em> ersetzen k&ouml;nnen (Sie sollten
nicht w&ouml;rtlich &uuml;bernommen werden). Wenn Sie alles fern
mitloggen wollen, schreiben sie einfach:

<example>
*.*                       @Ihr_Loghost
</example>

in Ihre <file>syslog.conf</file>. Sowohl lokal als auch entfernt
mitzuloggen ist die beste L&ouml;sung (ein Angreifer k&ouml;nnte davon
ausgehen, dass er seine Spuren verwischt hat, nachdem er die lokale
Logdatei gel&ouml;scht hat). Sehen Sie f&uuml;r weitere Informationen die
Handbuch-Seiten <manref name="syslog" section="3">, <manref
name="syslogd" section="8"> und <manref name="syslog.conf" section="5">.


<sect1>Zugriffsrechte auf Log-Dateien

<p>Es ist nicht nur wichtig zu entscheiden, wie Warnungen genutzt werden,
sondern auch, wer hierauf zugriff hat, d.h. wer Log-Dateien (fall Sie
nicht einen Log-Host verwenden) lesen oder ver&auml;ndern kann.
Sichereheits-Alarme, die ein Attacker ver&auml;ndern oder abschalten
kann, sind im Falle eines Eindringens nicht viel wert. Ausserdem sollten
Sie ber&uuml;cksichtigen, dass Log-Dateien einem Eindringling sehr viel
Informationen &uuml;ber Ihr System enth&uuml;llen kann und welche
normalen (und annormalen) Operationen er ausf&uuml;hren kann, wenn er
darauf Zugriff hat.

<!--  It should be explained why after installation this is not
 already done, jfs -->

<p>Ein Paar Zugriffsrechte auf Log-Dateien sind nach der Installation
nicht gerade perfekt (aber das h&auml;ngt nat&uuml;rlich von Ihrer
lokalen Sicherheits-Policy ab). Zuerst einmal m&uuml;ssen
<file>/var/log/lastlog</file> und <file>/var/log/faillog</file> nicht
f&uuml;r normalen Nutzer lesbar sein. In der lastlog-Datei k&ouml;nnen
Sie sehen, wer sich zuletzt eingeloggt hat, und in faillog eine
Zusammenfassung fehlgeschlagener Logins. Der Author empfiehlt beides auf
660 zu chmod'en. Werfen Sie einen kurzen Blick auf Ihre Log-Dateien, und
entscheiden Sie sehr vorsichtig, welche Log-Dateien sie les- oder
schreibbar f&uuml;r einen Nutzer mit einer anderen UID als 0 und einer
anderen Gruppe als 'adm' oder 'root' machen. Sie k&ouml;nnen dies sehr
leicht auf Ihrem System &uuml;berpr&uuml;fen:

<example>
#  find /var/log -type f -exec ls -l {} \; | cut -c 17-35 |sort -u
(zeigt zu welchen Nutzern /var/log geh&ouml;rt)
#  find /var/log -type f -exec ls -l {} \; | cut -c 26-34 |sort -u
(zeigt zu welchen Gruppen /var/log geh&ouml;rt)
# find /var/log -perm +004
(zeigt, welche Dateien von jedem Nutzer gelesen werden k&ouml;nnen)
#  find /var/log \! -group root \! -group adm -exec ls -ld {} \;
(zeigt, welche Dateien zu anderen Gruppen als root oder adm geh&ouml;rt)
</example>

<p>Um anzupassen, wie neue Log-Dateien erstellt werden, m&uuml;ssen Sie
wahrscheinlich das Programm anpassen, dass sie erstellt. Wenn die
Log-Dateien rotiert werden, k&ouml;nnen Sie das Verhalten bei der
Erstellung und Rotation anpassen.

<!-- This is no longer true, check apache's logrotate
<p>
I want to emphasize that the apache logfile permissions are really
screwed due to the fact that the apache user owns the apache log
files. If a user gets a shell with a back door in apache, they can
easily remove the logfiles.
-->

<!--
# This is quite personal, IMHO, since this is due to the fact that 
# root priviledges are dropped on startup. I prefer an attacker to erase
# a service's logfiles than to erase all of my system's logs. Anyhow, this
# can be improved by changing user permissions after rotation
-->


<sect id="chroot">Benutzen von chroot

<p><prgn>chroot</prgn>

<prgn>chroot</prgn> ist eine der m&auml;chtigsten M&ouml;glichkeiten
einen Daemon, einen Nutzer oder einen anderen Service
einzuschr&auml;nken. Stellen Sie sich einfach ein Gef&auml;ngnis um Ihr
Ziel vor, aus dem Ihr Ziel nicht ausbrechen kann (Normalerweise, aber es
gibt immernoch ein paar Bedinungen, unter denen es erlaubt es, aus einem
solchen Gef&auml;ngnis auszubrechen). Wenn Sie einem Nutzer nicht trauen
k&ouml;nnen Sie ihm eine Change-Root-Umgebung erstellen. Dies kann zwar
einiges an Platten-Platz verbrauchen, da Sie alles ben&ouml;tigte
Ausf&uuml;hrbare in das Gef&ouml;ngnis kopieren m&uuml;ssen, ebenso wie
alle Bibliotheken. Sogar wenn der Nutzer etwas boshaftes anstellt, ist
der Schadensrahmen auf das Gef&auml;ngnis beschr&auml;nkt.  

<p>Ein gutes Beispiel f&uuml;r diesen Fall ist es, wenn Sie nicht mit
<file>/etc/passwd</file> authentifizieren, sondern stattdessen LDAP oder
MySQL verwenden. So ben&ouml;tigt Ihr ftp-Daemon lediglich ein Binary und
vielleicht ein paar Bibliotheken. Ein ge-chroot-ete Umgebung w&auml;re
eine exzellente Sicherheits-Umgegung; wenn ein neuer Exploit f&uuml;r
diesen ftp-Daemon bekannt wird kann ein Angreifer nur die Nutzer-ID
(User-ID, UID) des internen ftp-Daemon-Nutzers ausnutzen und nichts
anderes. 

<p>Nat&uuml;rlich kann auch die Sicherheit ander Daemonen von einem
solchen Arrangement profitieren.

<p>Seien Sie jedoch vorgewarnt, dass man auch aus einem
<prgn>chroot</prgn>-Gef&auml;ngnis ausbrechen kann, wenn der Nutzer, der
es laufen l&auml;sst der Superuser ist. Also ist es notwendig, dass Sie
den Service als nicht privilegierter Nutzer laufen lassen. Indem Sie die
Umgebung einschr&auml;nken, schr&auml;nken Sie die f&uuml;r alle les- /
ausf&uuml;hrbaren Dateien, auf die das System Zugriff hat, und so
verkleinern Sie die M&ouml;glichkeit einer Ausweitung der
System-Privilegien indem lokale Verwundbarkeiten der Systemsicherheit
ausgenutzt werden. Aber sogar in dieser Situation k&ouml;nnen Sie nicht
wirklich sicher sein, dass es f&uuml;r einen cleveren Angreifer keinen
Weg gibt, irgendwie aus dem Gef&auml;ngnis auszubrechen. Es ist eine
zus&auml;tzliche Sicherheitsmassnahme nur Server-Programme zu benutzen,
die einen gewisse Reputation in Sachen Sicherheit haben. Sogar die
kleinste L&uuml;cke, wie eine offene Behandlung von Dateien kann von
einem geschickten Angreifer genutzt werden, um in das System
einzubrechen. Schliesslich wurde <prgn>chroot</prgn> nicht als
Sicherheits-Werkzeug designed, sondern als Test-Werkzeug.

<!-- FIXME: this information should be checked when woody gets released -->

<p>Eine zus&auml;tzliche Anmerkung: BIND (Berkeley Internet Name Domain)
ist standardm&auml;ssig unter Debian nicht ge-chroot-et. Tats&auml;chlich
ist dies bei keinem Daemon der Fall.
<!-- FIXME: Is this true? This might change in the woody (3.0) release. -->
<!-- jfs: this is still true for woody -->

<p>Es gibt &uuml;brigens Software (derzeit nicht unter Debian, aber in
der Zukunft sollte sie paketiert sein), die helfen Kann, eine
chroot-Umgebung einzurichten. Zum Beispiel kann <prgn>makejail</prgn>
mit sehr kleinen Konfigurations-Dateien chroot-Gef&auml;ngnisse erstellen
und aktualisieren. Es versucht ausserdem alle f&uuml;r den Daemon
ben&ouml;tigten Dateien zu erraten und in dem Gef&auml;ngis zu
installieren. Mehr Informationen finden Sie unter <url
id="http://www.floc.net/makejail/">. <prgn>Jailer</prgn> ist ein
&auml;hnliches Werkzeug, dass Sie unter <url
id="http://www.balabit.hu/downloads/jailer/"> erhalten.

<!-- FIXME: I have packages ready for makejail, update this when they
get accepted -->

<p>F&uuml;r das erstellen von chroots (oder Gef&auml;nsnissen) ist
ausserden <package>deb.pl</package>, ein Skript das die
Abh&auml;ngigkeiten ein oder mehrerer Dateien analysiert.
<sect1>Kernel configuration

<sect1 id="kernel-conf">Konfigurieren der Netzwerk-F&auml;higkeiten des
Kernels

<p>FIXME: Content missing

<p>Viele F&auml;higkeiten des Kernels k&ouml;nnen im laufenden Betrieb
ver&auml;ndert werden, indem man etwas in das
<file>/proc</file>-Datei-System echo-t oder indem man sysctl benutzt.
Geben Sie <tt>sysctl -A</tt> ein, um zu sehen, was Sie konfigurieren
k&ouml;nnen und wie die Optionen hierf&uuml;r sind. Nur in selten
F&auml;llen m&uuml;ssen Sie hier etwas verstellen, aber Sie k&ouml;nnen
auf diese Art auch die Sicherheit erh&ouml;hen.

 
<!-- FIXME: Should the prefix on all of these be /proc/sys/? era -->

<example>
net/ipv4/icmp_echo_ignore_broadcasts = 1
</example>

Dies ist ein «Windows Emulator», weil es sich wie Windows bei Rundrufen
(Broadcast-Ping) verh&auml;lt, wenn es auf 1 gesetzt wird.
<!-- Which means what exactly? Simply that it ignores broadcasts? FIXME -->
Anderenfalls macht es gar nichts.

<example>
net/ipv4/icmp_echo_ignore_all = 0
</example>

<p>Wenn Sie kein ICMP auf Ihrer Firewall blockieren wollen, schalten Sie
dies ein.
<!--
Does this mean, if you want to block ICMP but not in your firewall? FIXME
-->

<example>
net/ipv4/tcp_syncookies = 1
</example>

<p>Diese Option ist ein zweischneidiges Schwert. Auf der einen Seite
sch&uuml;tzt es Ihr System gegen &uuml;berfluten von syn-Paketen, auf der
anderen Seite verletzt es definierte Standards (RFCs). Diese Option ist
recht dumm <!-- eigentlich dumb=taub, passt aber so nicht -->, da es die
Gegenseite ebenso flutet wie Sie, so dass die Gegenseite auch
besch&auml;fftigt ist. Wenn Sie diese Option &auml;ndern wollen,
k&ouml;nnen Sie es auch in <file>/etc/network/options</file> &auml;ndern,
indem Sie <tt>syncookies=yes</tt> setzten.

<example>
/proc/sys/net/ipv4/conf/all/log_martians = 1
</example>

<p>Packete mit unm&ouml;glichen Adressen (erzeugt durch falsche Routen)
in Ihrem Netzwerk werden protokolliert.

<p>Hier ist ein Beispiel wie man dies und andere n&uuml;tzliche Sachen
setzen kann. Sie sollten diese Informationen zu einem Skript
<file>/etc/network/interface-secure</file> (der Name kommt aus einem
Beispiel) hinzuf&uuml;gen , und es durch
<file>/etc/network/interfaces</file> wie nachfolgend gezeigt aufrufen
lassen:

<example>
auto eth0
iface eth0 inet static
        address xxx.xxx.xxx.xxx
        netmask 255.255.255.xxx
        broadcast xxx.xxx.xxx.xxx
        gateway xxx.xxx.xxx.xxx
        pre-up /etc/network/interface-secure

</example>

<example>
# Skript-Name: /etc/network/interface-secure
# Modifiziert das normale Verhalten um uns gegen manche TCP/IP Attacken
# und Manipulationen zu sch&uuml;tzen
#
# beigetragen von Dariusz Puchalak  
#
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts 
                                           # Rundruf-Antwort-Schutz
					   # einscahlten
echo 0 > /proc/sys/net/ipv4/ip_forward     # ip-Weiterleutung abschalten
echo 1 > /proc/sys/net/ipv4/tcp_syncookies # TCP-Syn-Cookie Schutz einschalten
echo 1 >/proc/sys/net/ipv4/conf/all/log_martians 
                                           # Packete mit unm&ouml;glichen
					   # Adressen logen, seien Sie
					   # hiermit auf ausgelasteten
					   # Webservern vorsichtig
echo 1 > /proc/sys/net/ipv4/ip_always_defrag 
                                           # Defragmentierungs-Schutz
					   # immer einschalten
echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses 
                                           # Schutz vor schlechten
					   # Fehlermeldungen einschalten

# Jetzt kommt Schutz vor ip-Spoofing
for f in /proc/sys/net/ipv4/conf/*/rp_filter; do
        echo 1 > $f
done

# und schliesslich noch ein paar andere Sachen:
# Akzeptieren von umgeleitetet ICMP abschalten
for f in /proc/sys/net/ipv4/conf/*/accept_redirects; do
        echo 0 > $f
done

for f in /proc/sys/net/ipv4/conf/*/send_redirects; do
      echo 0 > $f
done

# Abschalten von Source Routed Packets
for f in /proc/sys/net/ipv4/conf/*/accept_source_route; do
        echo 0 > $f
done

# Logen von gespooften Paketen, Source Routed Paketen und Redirect
# Paketen
for f in /proc/sys/net/ipv4/conf/*/log_martians; do
        echo 1 > $f
done
</example>

<sect1 id="kernel-fw">Konfigurieren der Firewall

<p>Um die M&ouml;glichkeiten einer Firewall zu haben, um entweder das
lokale System oder andere <em>dahinter</em> zu besch&uuml;tzen, muss der
Kernel mit Firewall-Unterst&uuml;tzung compiliert worden sein. Der
standard Debian 2.2 Kernel (also der Kernel-Version 2.2) stellt die
Paket-Filter-Firewall <prgn>ipchains</prgn> zur Verf&uuml;gung, der
Debian 3.0 Standard Kernel (Version 2.4) stellt die <em>stateful</em>
Oaket-Filter <prgn>iptables</prgn> (netfilter) Firewall zur
Verf&uuml;gung. &Auml;ltere Debian Distributionen w&uuml;rden einen
passenden Kernel-Patch (Debian 2.1 nutzte Kernel 2.0.34) ben&ouml;tigen.

<p>In jedem Fall ist es recht einfach einen anderen, als den von Debian
installierten Kernelzu benutzen. Sie finden vor-compilierte Kernel als
Pakete, die Sie leicht auf Ihrem Debian System installieren k&ouml;nnen.
Sie k&ouml;nnen auch die Kernel-Quellen downloaden, indem Sie das Paket
<package>kernel-source-X</package> installieren, und Ihren eigens
angepassten Kernel compilieren, indem Sie <package>make-kpkg</package>
benutzen.

<p>Auf das  Aufsetzen einer Firewall unter Debian wird unter <ref
id="firewall-setup"> ausf&uuml;hrlich eingegangen.

<sect id="kernel-patch">Den Kernel patchen
<p>FIXME: More content

<p>Debian GNU/Linux stell verschiedene Patches f&uuml;r den Linux-Kernel
zur Verg&uuml;gung, die die Sicherheit erh&ouml;hen:

<list>

<item>Linux Eindringling-Erkennung (Linux Intrusion Detection, im Paket
  <package>lids-2.2.19</package>)

<item>Linux Capabilities (im Paket <package>lcap</package>)

<item>Linux Trustees (im Paket <package>trustees</package>)

<item>NSA Enhanced Linux (im Paket <package>selinux</package>, auch
verf&uuml;gbar von <url id="http://www.coker.com.au/selinux/" name="der
Seite des Paket-Betreuers">)

<item><url name="kernel-patch-2.2.18-openwall"
id="http://packages.debian.org/kernel-patch-2.2.18-openwall">.

<item><package>kernel-patch-2.2.19-harden</package>

<item>Kernel-Unterst&uuml;tzung von IPSEC (im Paket <package>kernel-patch-freeswan</package>)

<item><package>kernel-patch-int</package>

</list>

<p>Wie auch immer, einige Patches werden von Debian noch nicht zur
Verf&uuml;gung gestellt. Wenn Sie denken, dass manche von Ihnen
hinzugef&uuml;gt werden sollten, fragen Sie auf <url name="Work Needing
and Prospective Packages" id="http://wnpp.debian.org"> nach ihnen. Ein
paar von Ihnen sind:


<list>

<item><url id="http://pageexec.virtualave.net/" name="PaX patch">

<item>
<url name="HAP patch" id="http://www.theaimsgroup.com/~hlein/hap-linux/">

<item>
<url name="Stealth patch" id="http://www.energymech.net/madcamel/fm/">

</list>


<sect>Schutz vor Speicher-&Uuml;berl&auml;ufen

<p><em>Speicher-&Uuml;berlauf</em> werde die Attacken &uuml;ber Software
genannt, die unzureichende &Uuml;berpr&uuml;fung von Eingabegrenzen (ein
h&auml;ufiger Programmierfehler) ausnutzen, um durch Programm-Eingaben
Befehle auf der Maschine auszuf&uuml;hren. Diese Attacken &uuml;ber
Server, die auf Verbindungen warten, oder &uuml;ber lokal installierte
Software, die einem Nutzer gr&ouml;ssere Privilegien gew&auml;hrt (setuid
oder setgid) kann zu einem kompromitierten System f&uuml;hren.

<p>Es gibt haupts&auml;chlich vier Methoden, um sich gegen
Speicher-&Uuml;berl&auml;ufe zu sch&uuml;tzen:

<list>

<item>patchen des Kernels, um Ausf&uuml;hren des Stapel-Speichers zu
verhindern

<!-- FIXME: add a link to libsafe to the main place -->

<item>Nutzung einer Bibliothek wie libsafe, um verwundbare Funktionen
zu &uuml;berschreiben und ordentliche Pr&uuml;fungen einzuf&uuml;hren
(Informationen wie man libsafe installiert finden Sie <url
id="http://www.Linux-Sec.net/harden/libsafe.uhow2.txt" name="hier">).

<item>Neucompilieren des Quellcodes, um vern&uuml;nftige Pr&uuml;fungen
einzuf&uuml;hren, um &Uuml;berl&auml;ufe zu berhinden, in dem man zum
Beispiel stackguard benutzt.

<item>Nutzen von Werkzeugen um Stellen im Quellcode zu finden, die derart
verwundbar sind, und reparieren derselben.

</list>

<p>Debian GNU/Linux liefert bis einschliesslich der Release 3.0 lediglich
Software um die erste und die letzte dieser Methoden zu implementieren
(Kernel-Patch und Werkzeuge um m&ouml;gliche Speicher-&Uuml;berl&auml;ufe
zu finden). Zur Nutzung dieser Werkzeuge zum aufspr&uuml;hren von
Speicher-&Uuml;berl&auml;ufen ben&ouml;tigen Sie in jedem Fall
Programmier-Erfahrung, um den Quellcode zu reparieren (und neu zu
compilieren). Debian stell beispielsweise <package>bfbtester</package>
(einen &Uuml;berlauf-Tester, der Programe per brute-force (durchtesten
aller M&ouml;glichkeiten) auf Kommado-Zeile und Umgebungs-Variablen
durchtestet) und <package>njamd</package> zur Verf&uuml;gung.

<p>Was Kernel-Patches (beschrieben im Abschnitt <ref
id="kernel-patch">) betrifft, so stellt der Openwall-Patch Schutz gegen
Speicher-&Uuml;berl&auml;ufe in 2.2er Linux-Kerneln zur verf&uuml;gung,
w&auml;hrend Sie f&uuml;r 2.4er Kernel den Grsecureity-Patch (im Paket <package>
kernel-patch-2.4-grsecurity</package> enth&auml;lt neben vielen anderen
Sachen (ACLs, Zuf&auml;lligkeiten im Netzwerk, und es zu erschweren das
Betriebssystem zu erraten) auch den Openwall-Patch, siehe <url
id="http://www.grsecurity.net/features.htm" name="features">) oder die
Linux-Sicherheits-Module (in den Paketen
<package>kernel-patch-2.4-lsm</package> und
<package>kernel-patch-2.5-lsm</package>) benutzen m&uuml;ssen.

<p>Seien Sie in jedem Fall gewarnt, dass selbst diese Problemumgehungen
nicht vor Speicher-&Uuml;berl&auml;ufen sch&uuml;tzen l&auml;nnen, da
es wiederum M&ouml;glichkeiten gibt diese zu umgehen, wie es in <url
name="Ausgabe 58"
id="http://packetstorm.linuxsecurity.com/mag/phrack/phrack58.tar.gz"> des
phrack-Magazins beschrieben wurde.


<sect>sichere Datei-&Uuml;bertragungen

<p>W&auml;hrend der normalen System-Administration m&uuml;ssen Sie immer
mal wieder Dateien auf Ihr System spielen oder von diesem holen. Auf
sichere Art und Weise Dateien von einem Host zu einem anderen zu wird
duch die Benutzung des Paketes <package>sshd</package> erreicht. Eine
andere M&ouml;glichkeit ist die Nutzung von <package>ftpd-ssl</package>,
einem ftp-Server der <em>Secure Socket Layer</em> benutzt, um
transmissionen zu verschl&uuml;sseln.

<p>Jede dieser Methoden ben&ouml;tigt nat&uuml;rlich einen speziellen
Client. Debian stellt Ihnen solche zur Verf&uuml;gung, zum Beispiel
enth&auml;lt das Paket <package>ssh</package> das Programm
<prgn>scp</prgn>. Es arbeitet wie <prgn>rcp</prgn> aber komplett
verschl&uuml;sselt, so dass die <em>b&ouml;sen Jungs</em> nocht nicht
einmal herausbekommen k&ouml;nnen, WAS Sie kopieren. Wie es den Server
gibt, so gibt es nat&uuml;rlich auch ein <package>ftp-ssl</package>
Client-Paket. Sie k&ouml;nnen Clients f&uuml;r diese Software sogar
f&uuml;r andere (nicht-UNIXoide) Betriebssysteme finden.
<prgn>putty</prgn> und <prgn>winscp</prgn> stellen eine
secure-copy-Implementierung f&uuml;r jede Version von
Microsoft-Betriebssystemen zur Verf&uuml;gung.

<sect>Dateisystem Einschr&auml;nken und konrollieren

<sect1>Benutzung von Quotas

<p>Es ist wichtig eine gute Quota-Regelung zu haben, da es die Nutzer
daran hindert, die Festplatten zu f&uuml;llen.

<p>Sie k&ouml;nnen zwei Arten von Quota-Systemen benutzen: Nutzer-Quota
und Gruppen-Quota. Wie Sie sicher denken k&ouml;nnen, limitiert
User-Quota den Plattenplatz, den ein Nutzer belegen kann, und
Gruppen-Quota macht dasselbe f&uuml;r ganze Gruppen. Beachten Sie dies,
wenn Sie die Gr&ouml;ssen der Quotas festlegen.

<p>Es ein paar wichtige Punkte, &uuml;ber die Sie nachdenken sollten,
wenn Sie ein Quota-System aufsetzen:

<list>
<item>Halten Sie die Quotas klein genug, so dass die Nutzer Ihre
Festplatte nicht aufzehren k&ouml;nnen.

<item>Halten Sie die Quotas gross genug, so dass Nutzer sich nicht
beschweren oder dass Ihr Mail-Quota Sie daran hindert nach eine Weile
Mails anzunehmen.

<item>Nutzen Sie Quotas auf allen Bereichen, die Nutzer beschreiben
k&ouml;nnen, auf <file>/home</file> ebenso wie auf <file>/tmp</file>.

</list>

<p>Auf jeder Partition/jedem Verzeichniss, auf dass Nutzer
Schreibzugriff haben, sollten quotiert sein. Finden Sie diese Partitionen
udn Verzeichnisse und sch&auml;tzen Sie eine sinnvolle Quota-Gr&ouml;sse,
die Nutzbarkeit und Sicherheit kombiniert.

<p>So, nun wollen Sie Quotas benutzen. Zuerst m&uuml;ssen Sie
pr&uuml;fen, ob Ihr Kernel Quota unterst&uuml;tzt. Wenn nicht m&uuml;ssen
Sie ihn neu compilieren. Pr&uuml;fen Sie anschliessen, ob das Paket
<package>quota</package> isntalliert ist. Wenn nicht, installieren Sie
es.

<!-- FIXME: how to check for quota support? What to tweak when
recompiling? -->

<p>Um Quota f&uuml;r die entsprechenden Dateisysteme einzuschalten
m&uuml;ssen Sie nur die Einstellung <tt>defaults</tt> in Ihrer Datei
<file>/etc/fstab</file> zu <tt>defaults,usrquota</tt> &auml;ndern. Wenn
Sie Gruppen-Quotas ben&ouml;tigen, ersetzen sie <tt>usrquota</tt> durch
<tt>grpquota</tt>. Sie k&ouml;nnen auch beides verwenden. Erstellen Sie
dann lere Dateien <file>quota.user</file> und <file>quota.group</file> in
den Hauptverzeichnissen der Dateisysteme, auf denen Sie quotas
einf&uuml;hren m&ouml;chten (d.h. <tt>touch /home/quota.user
/home/quota.group</tt> f&uuml;r das Dateisystem <file>/home</file>).

<p>Starten Sie quota neu, indem Sie ein <tt>/etc/init.d/quota
stop;/etc/init.d/quota start</tt> ausf&uuml;hren. Nun sollte quota
laufen, und die Gr&ouml;ssen k&ouml;nnen festgelegt werden.

<p>Bearbeiten der Quotas eines bestimmten Nutzer (sagen wir mal
"ref") wir mit <tt>edquota -u ref</tt> gemacht. Gruppen-Quotas
k&ouml;nnen mit <tt>edquota -g &lt;group&gt;</tt> ge&auml;ndert werden.
Setzen Sie dann die weiche und die harte Grenze und/oder inode-Quotas,
wenn Sie es ben&ouml;tigen.

<p>Mehr Informationen &uuml;ber Quotas finden Sie in der Manual-Seite von
quota, und der quota Mini-Howto
(<file>/usr/share/doc/HOWTO/en-html/mini/Quota.html</file>).
<!-- TODO: Link zur deutschen Version -->

<p>Sie k&ouml;nnten auch <package>lshell</package> m&ouml;gen, oder auch
nicht, da es den FHS verletzt. Beachten Sie ausserdem dass pam_limits.so
diegleiche Funktionalit&auml;t zur Verf&uuml;gung stellen kann und das
<package>lshell</package> Paket zur Zeit <url
id="http://bugs.debian.org/93894" name="verwaist"> ist.
<!-- Duplicated section "Logfile permissions" removed (era) -->
<!-- Duplicated section "Setting up setuid check" removed (era) -->

<sect1>chattr/lsattr

<p>Diesen beiden Befehle sind sehr n&uuml;tzlich, aber Sie arbeiten nur
auf ext2 Dateisystemen. Mit 'lsattr' k&ouml;nnen Sie die Attributen einer
Datei anzeigen lassen und mit 'chattr' k&ouml;nnen Sie sie &auml;ndern.
Beachten Sie, dass Attribute nicht dasselbe sind, wie Zugriffsrechte. Es
gibt viele Attribute, aber nur die wichtigsten, die die Sicherheit
erh&ouml;hen, werden hier erw&auml;hnt. Es gibt zwei Kennzeichnungen
(flags), die nur der Superuser setzen kann.

<p>Zun&auml;chst gibt es das 'a' Flag. Wenn dieses bei einer Datei
gesetzt ist, dann kann an diese Datei nur angeh&auml;ngt werden. Dieses
Attribut ist f&uuml;r einige Dateien in <file>/var/log/</file>
n&uuml;tzlich, beachten Sie aber, dass durch Log-Rotations-Skripte
Dateien manchmal verschoben werden.

<p>Das zweite Flag ist das 'i'-Flag, kurz f&uuml;r immutable also
unver&auml;nderlich. Wenn Sie eine Datei so behandeln, kann Sie weder
modifiziert, noch gel&ouml;scht, noch umbenannt werden,  oder verlinkt
werden. Wenn Sie nicht m&ouml;chten, dass Nutzer einen Blick auf Ihre
Konfigurations-Dateien werfen k&ouml;nnen, setzen Sie dieses Flag, und
entfernen Sie die Lesbarkeit. Zus&auml;tzlich bietet es Ihnen etwas mehr
Sicherheit gegen Eindringlinge, da ein Cracker dadurch verwirrt werden
k&ouml;nnte, wenn er eine Datei nicht verschieben kann. Dennoch sollten
Sie nicht davon ausgehen, dass ein Cracker von Blindheit geschlagen ist,
immerhin ist er in Ihr System eingedrungen.

<p>Zus&auml;tzlich k&ouml;nnen Sie die Programme <prgn>chattr</prgn> und
<prgn>lsattr</prgn> von Ihrem System entfernen, so dass ein Eindringling
mit root-Zugang diese Attribute nicht ver&auml;ndern (oder auflisten)
kann. Da Sie Teil von <package>e2fsprogs</package> sind und dieses die
Priorit&auml;t <em>required</em> hat, k&ouml;nnen Sie das Paket nicht
einfach entfernen. Sie k&ouml;nnen jedoch diese beiden Applikationen (und
wahrscheinlich noch andere) einfach l&auml;schen. Kopieren Sie sie vorher
auf einen auswechselbaren Datentr&auml;ger (Diskette?) zusammen mit ihrem
md5-Summen.

<p>Ein Eindringling auf ihrem System m&uuml;sste so erst eigene Kopien
dieser Programme herunterladen (wahrscheinlich sogar selbst compilieren),
so dass Sie etwas mehr Zeit bekommen, den Angriff zu erkennen und die
Komprimitierungen r&uuml;ckg&auml;ngig zu machen, bevor das gesamte
System &uuml;berrannt wird.

<p>FIXME: This is a bug that could be reported, are any of the binaries
provided by the program useful in production systems? If not, and
since the libraries are needed by many packages a new package
<package>e2fsprogs-utils</package> could be included with less than
<em>Required</em> priority.

<p>Vergessen Sie nicht: <prgn>chattr</prgn> und <prgn>lsattr</prgn> sind
nur f&uuml;r das Dateisystem ext verf&uuml;gbar.

<sect1 id="check-integ">Pr&uuml;fen der Integrit&auml;t des Dateisystems

<p>Sind Sie sicher, dass <file>/bin/login</file> auf Ihrer Festplatte
immernoch dasselbe Programm ist, dass Sie vor ein paar Monaten
installiert haben? Was wenn es sich um eine gehackte Version handelt, die
eingegebene Passw&ouml;rter in einer versteckten Datei ablegt oder Sie
als Klartext im ganzen Internet herummailt?

<p>Die einzige Methode einen gewissen Schutz daf&uuml;r zu haben ist es
die Dateien jede(n) Stunde/Tag/Monat (ich ziehe t&auml;glich vor) zu
pr&uuml;fen, indem man deren aktuelle und alte md5-Summe vergleicht. Zwei
unterschiedliche Dateien k&ouml;nnen keine gleichen md5-Summen haben (Die
md5-Summe umfasst 128 Bits, so ist die Wahrscheinlichkeit, dass zwei
unterschiedliche Dateien eine gleiche md5-Summe haben eta 1 zu 3,4e3803),
so sind Sie sicher, solange niemand den Algorithmus gehackt hat, der die
md5-Summen auf Ihrer Maschine erstellt. Dies ist, nunja, extrem schwer
und sehr unwahrscheinlich. Sie sollten diese &Uuml;berpr&uuml;fung Ihrer
Programme als sehr wichtig ansehen. Weit verbreitete Tools hierf&uuml;r
sind <package>sXid</package>, <package>AIDE</package> (Advanced Intrusion
Detection Environment, fortgeschrittene Eindringlings Erkennungs
Umgebung), <package>TripWire</package> (non-free; die neue Version wird
GPL lizensiert), <package>integrit</package> und
<package>samhain</package>.

<p>Das installieren von <prgn>debsums</prgn> wird Ihnen helfen, die
Integrit&auml;t des Dateisystems zu &uuml;berpr&uuml;fen, indem Sie die
md5-Summen jeder Datei gegen die md5-Summe aus dem Debian-Archiv-Paket
vergleichen. Seien Sie aber gewarnt, dass diese Dateien sehr leicht
ge&auml;ndert werden k&ouml;nnen.

<p>Weiterhin k&ouml;nnen Sie <package>locate</package> durch
<package>slocate</package> ersetzen. slocate ist eine um Sicherheit
erweiterte Version von GNU locate. Wenn Sie slocate benutzen, sieht ein
Benutzer nur Dateien, auf die er auch zugriff hat, w&auml;hrend Sie alle
Dateien und Verzeichnisse des gesamten Systems ausschliessen k&ouml;nnen.

<p>FIXME: put references to the snapshot taken after installation.
<p>FIXME: Add a note regarding packages not providing debsums for all
apps installed (not mandatory).

<sect1>Aufsetzen von setuid-Check

<p>Debian liefert einen t&auml;glich ausgef&uuml;hrten Cron-Job
<file>/etc/cron.daily/standard</file>. Dieser Cron-Job f&uuml;hrt das
Skript <prgn>/usr/sbin/checksecurity</prgn>, das Informationen &uuml;ber
&Auml;nderungen sichert.

<!-- FIXME: What is the defaul for this in cron package? jfs -->

<p>Damit dieser Check ausgef&uuml;hrt wird, m&uuml;ssen Sie in
<file>/etc/checksecurity.conf</file>
<tt>CHECKSECURITY_DISABLE="FALSE"</tt> setzen. Dies ist bereits der
Standardwert, so dass diese Option bereits aktiviert sein sollte, solange
Sie nichts ge&auml;ndert haben.

<p>Das Standard-Verhalten sendet diese Informationen nicht an den
Superuser, stattdessen h&auml;lt es eine t&auml;gliche Kopie dieser
&Auml;nderungen unter <file>/var/log/setuid.changes</file>. Sie sollten
CHECKSECURITY_EMAIL (in <file>/etc/checksecurity.conf</file>) auf 'root'
setzen, damit diese Informationen an ihn gemailt werden. Sehen Sie auch
<manref name="checksecurity" section="8"> f&uuml;r weitere
Konfigurations-Informationen.


<sect id="snapshot">Einen Schnappschuss des Systems erstellen

<p>Bevor Sie das System in eine produktive Umgebung stellen, k&ouml;nnen
Sie einen Schnappschuss des gesamten Systems machen. Diesen
Schnappschuss k&ouml;nnen Sie im Falle einer Kompromitierung (siehe <ref
id="after-compromise">) benutzen. Sie sollten so einen Schnappschuss
immer dann erneuern, wenn Sie das System upgraden, insbesondere wenn Sie
auf eine neue Debian Release upgraden.

<p>Hierf&uuml;r k&ouml;nnen Sie beschreibbare, austauschbare
Datentr&auml;ger benutzen, die Sie schreibsch&uuml;tzen k&ouml;nnen. Dies
kann eine Diskette sein (die nach der Benutzung schreibgesch&uuml;tzt
wird) oder eine CD in einem CD-ROM Laufwerk (sie k&ouml;nnen auch wieder
beschreibbare CD-ROMs benutzen, so k&ouml;nnen Sie sogar alte
Sicherheitskopien Ihrer md5-Summen behalten).

<p>Das folgende Skript erstellt einen solchen Schnappschuss:

<example>
#!/bin/bash
/bin/mount /dev/fd0 /mnt/floppy
/bin/cp /usr/bin/md5sum /mnt/floppy
echo "Erstelle md5 Datenbank"
>/mnt/floppy/md5checksums.txt
for dir in /bin/ /sbin/ /usr/bin/ /usr/sbin/ /lib/ /usr/lib/
do
   find $dir -type f | xargs /usr/bin/md5sum >>/mnt/floppy/md5checksums-lib.txt
done
/bin/umout /dev/fd0
echo "md5 Datenbank (nach der Installation) erstellt"
</example>

<p>Beachten Sie, dass das Programm md5sum auch auf der Diskette gesichert
wird, so dass Sie es sp&auml;ter benutzen k&ouml;nnen, um die anderen
Programme Ihres Systems zu pr&uuml;fen (gesetz dem Fall das md5sum einen
Trojaner enth&auml;lt).

<p>Dieser Schnappschuss enth&auml;lt nicht die Dateien unterhalb von
<file>/var/lib/dpkg/info</file>, wo md5-Summen installierter Pakete
enthalten sind (die Dateien enden mit <file>.md5sums</file>). Sie
k&ouml;nnen diese Informationen zus&auml;tzlich kopieren, aber Sie
sollten folgendes beachten:

<list>
<item>die md5sums der Debian Pakete enthalten alle md5-Summen der
Dateien, die ein Paket enth&auml;lt, so dass die Datenbank viel
gr&ouml;sser wird (5 MB statt 600 KB auf einem Debian GNU/Linux System
mit graphischen Subsystem und etwa 2.5 GB Software installiert).

<item>nicht alle Debian Pakete stellen md5-Summen der installierten
Dateien zur Verf&uuml;gung, da es (derzeit) nicht der Policy nicht
verlangt wird.

</list>

<p>Sobald der Schnappschuss erstellt wurde sollten Sie sicherstellen,
dass das entsprechende Medium schreibgesch&uuml;tzt ist. Sie k&ouml;nnen
dann eine Sicherheitskopie erstellen, oder es jede Nacht benutzen, um die
md5-Summen Ihres Systems gegen Ihren Schnappschuss vergleichen.

<sect>Andere Empfehlungen

<sect1>Benutzen Sie keine Software, die von svgalib abh&auml;ngt

<p>SVGAlib ist ganz nett f&uuml;r Konsolen-Liebhaber wie mich, aber in
der Vergangenheit wurde mehrfach gezeigt, dass es ziemlich unsicher ist.
Exploits durch <prgn>zgv</prgn> wurden ver&ouml;ffentlicht, und es war
einfach root zu werden. Versuchen Sie die Nutzung von SVGAlib Programmen
wann immer nur m&ouml;glich zu verhindern.

<!-- FIXME: move this to policy section if there ever is one? -->

<chapt id="sec-services">Absichern von Servicem die auf Ihrem System
laufen

<p>Services k&ouml;nnen auf zwei Arten abgesichert werden:

<list>

<item>sie so einstellen, dass auf sie nur von Zugangspunkten (Interfaces)
auf sie zugegriffen werden kann, von denen es n&ouml;tig ist.

<item>sie so konfigurieren, dass sie nur von legitimierten Nutzer auf
autorisierte Art und Weise benutzt werden k&ouml;nnen.

</list>

<p>Einschr&auml;nken der Services, so dass auf Sie nur von bestimmten
Orten zugegriffen werden kann, kann durch Zugriffs-Beschr&auml;nkungen
auf Kernel-Ebene (durch eine Firewall) passieren. Konfigurieren Sie sie,
so dass sie nur auf ein bestimmtes Interface horchen (einige Services
bieten diese F&auml;higkeiten vielleicht nicht) oder durch eine andere
Methode, zum Beispiel kann der Linux vserver Patch (f&uuml;r 2.4.16) dazu
benutzt werden, Prozesse auf ein bestimmtes Interface zu binden.

<p>Was die Services angeht, die von <prgn>inetd</prgn> aufgerufen werden
(telnet, ftp, finger, pop3...), so ist es nichts Wert, dass inetd nicht
so konfiguriert werden kann, dass er nur auf ein bestimmtes Interface
reagiert. Wie auch immer, sein Ersatz, der <prgn>xinetd</prgn>
Meta-Daemon kennt ein <tt>bind</tt> f&uuml;r diesen zweck. Lesen Sie dazu
bitte <manref name="xinetd.conf" section="5">.

<example>
service nntp
{
        socket_type     = stream
        protocol        = tcp
        wait            = no
        user            = news
        group           = news
        server          = /usr/bin/env
        server_args     = POSTING_OK=1 PATH=/usr/sbin/:/usr/bin:/sbin/:/bin
+/usr/sbin/snntpd logger -p news.info
        bind            = 127.0.0.1
} 
</example>

<p>Die folgenden Abschnitte gehen detailierter darauf ein, wie bestimmte
Services abh&auml;ngig von der beabsichtigten Benutzung passend
konfiguriert werden.


<sect>Absichern der Secure-Shell (ssh)
<p>Wenn Sie immernoch telnet statt ssh benutzen sollten Sie dieses
Handbuch kurz beiseite legen, und dies &auml;ndern.  Ssh sollte anstelle
von telnet f&uuml;r alle Fern-Logins benutzt werden. In einer Zeit, in
der es leicht ist, Internet-Verkehr mit zu schn&uuml;ffeln und an
klartext Passw&ouml;rter heranzukommen, sollten Sie lediglich Protokolle
verwenden, die Kryptographie benutzen. Also, f&uuml;hren Sie sofort ein
<tt>apt-get install ssh</tt> auf Ihren System aus.

<p>Ermuntern Sie alle Nutzer Ihres Systems ssh anstelle von telnet zu
benutzen, oder noch bessern: Deinstallieren sie telnet/telnetd.
Zus&auml;tzlich sollten Sie es vermeiden, sich mit ssh als root
einzuloggen und lieber andere Methoden benutzen, um root zu werden. Wie
zum Beispiel <prgn>su</prgn> oder <prgn>sudo</prgn>. Schliesslich sollte
Sie noch die Datei <file>/etc/ssh/sshd_config</file> f&uuml;r mehr
Sicherheit modifizieren:

<list>
<item><tt>ListenAddress 192.168.0.1</tt>
<p>Lassen Sie ssh nur auf ein bestimmtes Interface h&ouml;ren, falls Sie
mehrere Netzwerkkarten haben (und ssh nicht auf allen verf&uuml;gbar sein
soll) oder Sie in Zukunft eine neue Netzwerkkarte einbauen werden (und
keine ssh-Verbindungen auf ihr erlauben wollen).

<item><tt>PermitRootLogin No</tt>
<p>Versuchen wo immer m&ouml;glich keinen Login als Root zu erlauben.
Wenn nun jemand Root werden will, ben&ouml;tigt er zwei logins, und dass
Root-Passwort kann nicht so leicht ausgetestet werden.

<item><tt>Listen 666</tt>
<p>Ver&auml;ndern Sie den Listen-Port, so dass ein Eindringling nicht
wirklich sicher sein kann, ob ein sshd-Daemon l&auml;uft (aber beachten
Sie, dass dies lediglich "Sicherheit durch Verschleierung" ist).

<item><tt>PermitEmptyPasswords no</tt>
<p>Leer Passw&ouml;rter verspotten jegliche System-Sicherheit.

<item><tt>AllowUsers alex ref</tt>
<p>Erlauben Sie nur bestimmten Users sich vie ssh auf der Maschine
einzuloggen.

<item><tt>AllowGroups wheel admin</tt>
<p>Erlauben Sie nur bestimmten Gruppen-Mitgliedern sich via ssh auf der
Maschine einzuloggen. AllowGroups und AllowUsers haben entsprechende
Direktiven um den Zugang zu der Maschine zu verwehren. Es wird nicht
&uuml;berraschen, dass es sich hierbei um "DenyUsers" und "DenyGroups"
handelt.

<item><tt>PasswordAuthentication yes</tt>
<p>Es ist Ihre Wahl, was Sie hier eintragen. Es ist sicherer Zugriff nur
Nutzern zu erlauben, die ssh-Schl&uuml;ssel in der ~/.ssh/authorized_keys
haben. Wenn Sie dies wollen, setzen Sie dies auf "no".

<item>Schalten Sie jedwede Art der Authentifizierung ab, die Sie nicht
wirklich ben&ouml;tigen, zum Beispiel <tt>RhostsRSAAuthentication</tt>,
<tt>HostbasedAuthenticatio</tt>, <tt>KerberosAuthentication</tt> oder
<tt>RhostsAuthentication</tt>. Sie sollten sie abschalten, auch wenn sie
es standardm&auml;ssig bereits sind (Siehe dazu die Handbuch-Seite
<manref name="sshd_config" section="5">).

</list>

<p>Abschliessend beachten Sie bitte, dass diese Direktiven von einer
OpenSSH Konfigurations-Datei sind. Derzeit gibt es drei weitverbreitete
SSH-Daemonen: ssh1, ssh2 und OpenSSH von den OpenBSD Leuten. Ssh1 war der
erste verf&uuml;gbare ssh-Daemon und er ist noch der weit verbreiteste
(Ger&uuml;chten zufolge, gibt es sogar eine Windows-Version). Ssh2 hat
gegeb&uuml;ber ssh2 Vorteile, abgesehen davon, dass er unter einen
unfreien Lizens ver&ouml;ffentlicht wurde. OpenSSH ist ein wirklich
freier ssh-Daemon, der sowohl ssh1 als auch ssh2 unterst&uuml;tzt.
OpenSSH ist die Version, die installiert wird, wenn Sie auf Debian das
Paket 'ssh' ausw&auml;hlen.

<p>Mehr Informationen wie Sie SSH mit Unterst&uuml;tzung f&uuml;r PAM
aufsetzen finden sie hier: <url
id="http://lists.debian.org/debian-security/2001/debian-security-200111/msg00395.html"
name="security mailing list archives">.

<sect>Absicher von Squid

<p>Squid ist eine der verbreitesten Proxy/Cache Server, und es gibt ein
paar Sicherheitsaspekte, die Sie beachten sollten. Squid's standard
Konfiguration lehnt alle Abfragen von Nutzern ab.Sie sollten Squid so
konfigurieren, dass er Zugriffe von vertrauensw&uuml;rdigen Nutzern,
Computern oder Netzwerken erlaubt, indem Sie eine Zugriffs-Kontroll-Liste
(ACL, Acces Control List) on <file>/etc/squid.conf</file>. Mehr
Informationen, wie Sie ACLs definieren, finden Sie in der <url
name="Squid User's Guide"
id="http://squid-docs.sourceforge.net/latest/html/book1.htm">.
<!-- Todo: Deutsche Squid Guide raussuchen -->

<p>Ebenso kann bei ungeeigneter Konfiguration vorkommen, dass jemand eine
Mail &uuml;ber Squid weiterleitet, da die Protokolle HTTP und SMTP
ein &auml;hnliches Design habven. Squid's standard Konfiguration
verweigert Zugriffe auf Port 25. Wenn Sie Verbindungen an Port 25
erlauben wollen, f&uuml;gen Sie ihn einfach in der Safe_ports-Liste
hinzu. Aber dies ist <em>NICHT</em> empfohlen.

<p>Passendes Aufsetzen und Konfigurieren  des Proxy/Cache-Servers ist nur
ein Teil des Absichern Ihrer Seite. Eine andere notwendige Aufgabe ist
es, Squid's Log-Dateien zu analysieren, um sicher zu gehen, dass alles so
arbeitet, wie es sollte. Es gibt ein paar Pakete in Debian GNU/Linux, die
einem Administrator hierbei helfen k&ouml;nnen.
Die folgenden Pakete sind in Woody (Debian 3.0) verf&uuml;gbar:

<list>
<item><package>calamaris</package> - Log analyzer for Squid or Oops proxy log files.
<item><package>modlogan</package>  - A modular logfile analyzer.
<item><package>sarg</package> - Squid Analysis Report Generator.
</list>

<p>FIXME: Add more information about security on Squid Accelerator Mode

<sect>Absichern von FTP

<p>Wenn Sie wirklich FTP benutzen m&uuml;ssen (ohne Ihn mit sslwrap zu
umh&uuml;llen oder innerhalb eines SSL- oder SSH-Tunnels), sollten Sie
ftp in das Heimatverzeichnis des FTP-Nutzer chrooten, so dass ein Nutzer
nichts anderes sehen kann, als sein Verzeichniss. Anderfalls k&ouml;nnen
sie Ihr Dateisystem durchlaufen, als h&auml;tten Sie Shell-Zugriff. Sie
k&ouml;nnen die folgende Zeile in Ihre <file>proftpd.conf</file> im
globalen Abschnitt hinzuf&uuml;gen, um die chroot-F&auml;higkeiten zu
nutzen:

<example>
DefaultRoot ~
</example>

<p>Starten Sie proftpd neu, indem Sie <tt>/etc/init.d/proftpd
restart</tt> eingebe, und pr&uuml;fen Sie, ob Sie noch aus ihrem
Heimatverzeichnis heraus kommen k&ouml;nnen.

<p>Um Proftp-DoS Attacken durch ../../../ zu verhinden, f&uuml;gen Sie
die folgende Zeile Ihrer <file>/etc/proftpd.conf</file> hinzu:

<tt>DenyFilter \*.*/</tt>

<p>Vergessen Sie nicht, dass FTP Logind und athentifizierungs Passwort
als Klartext sendet (dies ist kein Problem, wenn Sie einen anonymen,
&ouml;ffentlichen Dienst anbieten) und es gibt bessere Alternativen in
Debian hierzu. Zum Beispiel <prgn>sftp</prgn> (aus dem Paket
<package>ssh</package>). Es gibt nat&uuml;rlich auch freue
Implentierungen von SSH f&uuml;r andere Betriebssysteme, zum Beispiel
<url id="http://www.chiark.greenend.org.uk/~sgtatham/putty/"
name="putty"> oder <url id="http://www.cygwin.com" name="cygwin">.

<!-- contributed by Jesus Climent -->
<p>Wenn Sie dennoch einen FTP Server verwalten wollen, w&auml;hrend Sie
den Nutzern Zugriff via SSH gew&auml;hren, k&ouml;nnten Sie auf ein
typisches Problem tressen. Nutzer die innerhalb eines mit SSH
abesicherten Systems auf einen anonymen FTP-Server zugreifen wollen,
k&ouml;nnen versuchen Sich auf dem <em>FTP server</em> einzuloggen.
W&auml;hrend der Zugriff verweigert werden wird, wird das Passwort
trotzdem als Klartext &uuml;ber das Netz gesendet. Um dies zu verhindern
hat der ProFTPd Entwickler TJ Saunders einen Patch erstellt, der
verhindert, dass Nutzer dem anonymen FTP-Server mit g&uuml;ltigen
SSH-Zugangsdaten schicken. Mehr Informationen und der Patch sind finden
Sie unter; <url id="http://www.castaglia.org/proftpd/#Patches"
name="ProFTPD Patches">.

<sect>Zugriff auf das X-Window-System absichern

<p>Heutzutage werden X-Terminals bei mehr und mehr Firmen benutzt, so
dass ein Server f&uuml;r viele Arbeitspl&auml;tze zust&auml;ndig ist.
Dies kann gef&auml;hrlich sein, weil Sie dem Datei-Server erlauben
m&uuml;ssen sich mit den X-Clients zu verbinden (X Server aus Sicht von
X. X vertauscht die Definition von Client und Server). Wenn Sie dem (sehr
schlechten) Vorschlag von vielen Dokumentationen folgen, geben Sie auf
Ihrer Maschine <tt>xhost +</tt> ein. Dies erlaubt jedem X-Client sich mit
Ihrem System zu verbinden. F&uuml;r etwas bessere Sicherheit, sollten Sie
stattdessen das Kommando <tt>xhost +Rechnername</tt> verwenden, um den
Zugriff auf Bestimmte Rechner zu begrenzen.

<p>Allerdings ist es eine viel sicherere L&ouml;sung, ssh zu benutzen, um
X zu tunneln und die gesamte Sitzung zu verschl&uuml;sseln. Dies
kann automatisch geschehen, wenn Sie sich auf eine andere Maschine
ssh-en. Sie m&uuml;ssen es nur in der <file>/etc/ssh/ssh_config</file>
einschalten, indem Sie <tt>X11Forwarding</tt> auf <tt>yes</tt> setzen. In
den zeiten von SSH sollten Sie die xhost-basierte Zugriffskontrolle
komplett &uuml;ber Bord werfen. <!-- FIXME: check. The text said "has to
be disabled" [sic] -->

<p>Zur besten Sicherheit, wenn Sie keinen X-Zugriff von anderen Maschinen
ben&ouml;tigen, ist es, die Bindung auf Port 6000 abzuschalten, indem Sie
einfach folgendes eingeben:

<example>$ startx -- -nolisten tcp</example>


<p>Dies ist das Standard-Verhalten unter Xfree 4.1.0 (der Xserver aus
Debian 3.0). Wenn Sie Xfree 3.3.6 laufen lassen (d.h. wenn Sie Debian 2.2
benutzen) k&ouml;nnen Sie <file>/etc/X11/xinit/xserverrcc</file>
editieren, damit Sie etwas erhalten wie:

<example>
#!/bin/sh
exec /usr/bin/X11/X -dpi 100 -nolisten tcp
</example>

<p>Wenn Sie XDM benutzen, setzen Sie in
<file>/etc/X11/xdm/Xservers</file> auf <tt>:0 local /usr/bin/X11/X vt7
-dpi 100 -nolisten tcp</tt>. Wenn Sie Gdm benutzen, stellen Sie sicher,
dass die Option <tt>-nolisten tcp</tt> in der
<file>/etc/gdm/gdm.conf</file> gesetzt ist (was in der
standardm&auml;ssig unter Debian der Fall sein sollte), wie hier:

<example>
[server-Standard]
name=Standard Server
command=/usr/bin/X11/X -nolisten tcp
</example>

<p>Sie k&ouml;nnen ausserdem die standard Zeitgrenze f&uuml;r
<prgn>xscreensaver</prgn> Sperrungen setzen. Auch wenn der Nutzern sie
aufheben kann, sollten Sie Konfigurationsdatei
<file>/etc/X11/app-defaults/XScreenSaver</file> editieren, und die
lock-Zeile von
<example>
*lock:                  False
</example>
<p>(das ist der standardwert unter Debian) auf
<example>
*lock:                  True
</example>
<p>&auml;ndern.

<p>FIXME: add information on how to disable the screensavers which
show the user desktop (which might have sensitive information).

<p>Lesen Sie mehr zur Sicherheit von X Window in <url
name="XWindow-User-HOWTO"
id="http://www.linuxdoc.org/HOWTO/XWindow-User-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/XWindow-User-HOWTO.txt.gz</file>).
<!-- TODO: Link zur deutschen Uebersetzung -->


<p>FIXME: Add info on thread of debian-security on how to change config files
of XFree 3.3.6 to do this.  

<sect1>&Uuml;berpr&uuml;fen Ihres Display-Managers

<p>Wenn Sie einen Display-Manager lediglichen zur lokalen Nutzung
(um einen sch&ouml;nen graphischen Login zu haben) haben wollen, gehen
Sie sicher, dass der XDMCP (X Display Manager Control Protocol) Krempel
abgeschaltet ist. Unter XDM k&ouml;nnen Sie dies mit der folgenden Zeile
in <tt>/etc/X11/xdm/xdm-config</tt>:

<example>
DisplayManager.requestPort:     0
</example>

<p>Normalerweise sind unter Debian alle Display-Manager so konfiguriert,
dass sie standardm&auml;ssig keine XDMCP-Services starten.

<sect>Absichern des Drucker-Zugriffs (Die lpd und lprng Sache)

<p>Stellen Sie sich vor, Sie kommen zur Arbeit, und der Drucker spuckt
entlose Mengen von Papier aus, weil jemand Ihren Drucker-Daemon DoS-et.
Unangenehm, oder?

<!-- Info based on Dale Southard's post to debian-security april 11th 2002-->
<p>In jeder Unix Druck-Architektur muss es einen Weg geben, um die Daten
des Client auf den Druck-Server zu bekommen. Traditionell machen dies
<prgn>lpr</prgn> und <prgn>lp</prgn> so, dass das Client-Kommando die
Daten in das Spool-Verzeichnis kopiert oder symlinkt (weshalb diese
Programme normalerweise SUID oder SGID sind).

<p>Um jede Gefahr zu vermeiden sollen Sie Ihren Druck-Server besonders
sicher halten. Dies heisst, dass Sie Ihren Druck-Service so konfigurieren
m&uuml;ssen, dass er nur Auftr&auml;ge von vertauensw&uuml;rdigen
Rechnern annimmt. Hierzu m&uuml;ssen Sie die Rechner, von denen Sie
Druckauftr&auml;ge entgegennehmen m&ouml;chten in die Datei
<file>/etc/hosts.lpd</file> ein.

<p>Allerdings akzeptier der <prgn>lpr</prgn>-Daemon auch wenn Sie dies
getan haben Verbindungen auf Port 515 auf jeder Schnittstelle. Sie
sollten sich &uuml;berlegen, ob Sie Verbindungen von Netzwerken/Rechner,
die nicht drucken d&uuml;rfen, mittels Firewall abblocken wollen (Der
<prgn>lpr</prgn>-Daemon kann nicht so konfiguriert werden, dass er nur
auf eine bestimmte IP-Adresse h&ouml;rt.)

<!-- FIXME
<p>Of course, you could also take the lpr/lprng sources
and change them so that the connect function is only done to "127.0.0.1".
apt-get source lpr
and patch the bind (finet) call
-->

<p>Sie sollten <prgn>Lprng</prgn>  gegen&uuml;ber <prgn>lpr</prgn>
vorziehen, da er so konfiguriert werden kann, dass er Zugangkontrolle
&uuml;ber IP kann. Und Sie k&ouml;nnen spezifizieren, auf welche
Schnittstelle er sich binden soll (wenn auch etwas sonderbar).

<!-- FIXME: ask Craig Small about his post in debian-private 19th october 2001 -->

<p>Wenn Sie Ihren Drucker nur Lokal auf ihrem System benutzen, werden Sie
ihn nicht &uuml;ber Netzwerk teilen wollen. Sie sollten dann
&uuml;berlegen ein anderes Druck-System, wie zum Beispiel das aus dem
Paket <package>cups</package> oder <url name="PDQ"
id="http://pdq.sourceforge.net/">, das auf den Zugriffsrechten des
Ger&auml;tes <file>/dev/lp0</file> beruht, einzusetzen.

<p>Bei <package>cups</package> werden die Druckauftr&auml;ge mit dem
http-Protokoll zum Server &uuml;bertragen. Dadurch muss der Client nicht
&uuml;ber spezielle Privilegien verf&uuml;gen, aber der Server muss auf
irgendeinen Port h&ouml;ren.

<p>Wie auch immer: Wenn Sie <prgn>cups</prgn> nur Lokal benutzen
m&ouml;chten, k&ouml;nnen Sie es So konfigurieren, dass er nur auf die
lokale Schleife (loopback interface) h&ouml;rt, indem Sie folgendes in
Ihrer <file>/etc/cups/cupsd.conf</file> &auml;ndern:

<example>
Listen 127.0.0.1:631
</example>

<p>Es gibt noch andere Sicherheits-Optionen in diese
Konfigurations-Datei, wie zum Beispiel das Erlauben oder Verweigern von
Netzwerken oder Rechnern. Wenn Sie sie allerdings nicht ben&ouml;tigen,
belassen Sie es am besten dabei, einfach nur den Port, auf den
geh&ouml;rt wird, einzuschr&auml;nken. <prgn>Cups</prgn> liefert auch
Dokumentation &uuml;ber den HTTP-Port. Wen Sie diese potentiell
n&uuml;tzlichen Informationen einen Angreifer ausserhalb nicht
enth&uuml;llen wollen (und der Port offen ist), f&uuml;gen Sie
ausserdem folgendes hinzu:

<example>
&lt;Location /&gt;
  Order Deny,Allow
   Deny From All
    Allow From 127.0.0.1
&lt;/Locationi&gt;
</example>

<p>Die Konfigurations-Datei kann auch so angepasset werden, dass
zus&auml;tzliche F&auml;higkeiten, einschliessliche SSL- und
TLS-Zertifikate oder Verschl&uuml;sselung, m&ouml;glich werden. Die
Handb&uuml;cher finden Sie unter http://localhost:631/ oder
http://cups.org.

<P>FIXME: Add more content (the article on <url name="Amateur Fortress
Building" id="http://www.rootprompt.org"> provides some very
interesting views).  

<p>FIXME: Check if PDG is available in Debian, and if so,
suggest this as the preferred printing system.

<p>FIXME: Check if Farmer/Wietse has a replacement for printer daemon
and if it's available in Debian.

<sect>Absichern des Mail-Daemon

<p>Wenn Ihr Server kein Mail-System ist, m&uuml;ssen Sie wirklich keinen
Mail-Daemon haben, der auf eingehende Verbindungen reagiert, aber Sie
wollen lokale Mails ausliefern, damit beispielsweise Mails an den
Root-User von irgendwelchen Alarm-System erhalten.

<p>Um dies auf einem Debian System zu erreichen, entfernen Sie den
smtp-Daemon auf dem inetd:

<example>
$ update-inetd --disable smtp
</example>
<p>und konfigurieren Sie den Mailer-Daemon so, dass er nur auf die Lokale
Schleife achtet. In exim (dem standard Mail Transport Agent (MTA) unter
Debian) tun Sie dies, indem Sie die in der Datei
<file>/etc/exim.conf</file> die Zeile

<example>
local_interfaces = "127.0.0.1"
</example>

<p> Hinzuf&uuml;gen.

<p>Starten Sie beide Daemonen neu (inetd und exim) und exim wird
lediglich auf den Socket 127.0.0.1:25 reagieren. Seien Sie vorsichtig und
deaktivieren Sie erst inetd, oder exim wird nicht neu starten, da ider
inetd bereits eingehende Verbindungen behandelt.

<p>Bei <prgn>postfix</prgn> editeren Sie <file>/etc/postfix/main.conf</file>:

<example>
inet_interfaces = localhost
</example>


<p>Wenn Mails lediglich lokal entgegennehmen wollen ist dieses Herangehen
besser als Mailer-Daemon in einen tcp-Wrapper zu h&uuml;llen oder
Firewall-Regeln einzuf&uuml;gen, die den Zugang f&uuml;r alle limitieren
sollen. Wenn Sie jedoch auch auf andere Schnittstellen reagieren
m&uuml;ssen sollten Sie &uuml;berlegen, ihn vom inetd aufrufen zu lassen
und einen tcp-Wrapper einzusetzen, so dass eingehende Verbindungen gegen 
<file>/etc/hosts.allow</file> und <file>/etc/hosts.deny</file>
gepr&uuml;ft werden. Ausserdem werden Sie von unautorisierte
Zugriffsversuche gegen Ihren Mail-Daemon durch angemessenes
Protokollieren gewarnt werden wollen.

<p>In jedem Fall k&ouml;nnen Sie Mail-Relais-Versuche auf SMTP-Level
ablehnen, indem Sie die <file>/etc/exim/exim.conf</file> ab&auml;ndern,
damit Sie folgendes enth&auml;lt:

<example>
receiver_verify = true
</example>

<p>Auch wenn Ihr Mail-Server keine mails relayen wird ist diese
Konfiguration f&uuml;r den Relay-Test auf <url
id="http://www.abuse.net/relay.html"> n&ouml;tig, um festzustellen, dass
Ihr Server <em>nicht</em> Relais-f&auml;hig ist.

<sect>sicherer Empfang von Mails
<p>
Das lesen und empfangen von Mails ist das gebr&auml;uchlichste
Klartext-Protokoll. Wenn Sie POP3 oder IMAP benutzen, um Ihre Mails zu
erhalten, senden Sie ein Klartext-Passwort &uuml;ber das gesamte Netz, so
dass ziemlich jeder Ihre Mails von nun an lesen kann. Benutzen Sie statt
dessen SSL (Secure Sockets Layer) um Ihre Mails zu empfangen. Wenn Sie
einen Shell-Account auf dem Rechner, der als POP oder IMAP-Server agiert,
haben, ist die andere alternative ssh. Hier ist eine beispielhafte
fetchmailrc um dies zu zeigen:

<example>
poll mein-imap-mailserver.org via "localhost"
  with proto IMAP port 1236
      user "ref" there with password "hackmich" is alex here warnings 3600
    folders
      .Mail/debian
    preconnect 'ssh -f -P -C -L 1236:my-imap-mailserver.org:143 -l ref
     mein-imap-mailserver.org sleep 15 &lt;/dev/null &gt; /dev/null'
</example>

<p>Die wichtige Zeile ist die preconnect-Zeile. Sie startet eine
ssh-Verbindung und erstellt den notwendigen Tunnel, duch den automatisch
alle Verbindungen zum lokalen Port 1236 verschl&uuml;sselt an den
IMAP-Mail-Server weitergeleitet werden. Eine andere M&ouml;glichkeit
w&auml;re es fetchmail mit SSL-Unterst&uuml;tzung zu benutzen.

<p>Wenn Sie verschl&uuml;sselte Mail-Services wie POP oder IMAP anbieten
m&ouml;chten, <tt>apt-get install stunnel</tt> und starten Sie Ihren
Daemon auf diese Weise:

<example>
stunnel -p /etc/ssl/certs/stunnel.pem -d pop3s -l /usr/sbin/popd
</example>


<p>Dieses Kommando umh&uuml;llt den angegeben Daemon (-l) an den Port
(-d) und nutzt ein bestimmtes Zertifikat (-p).



<sect id="sec-bind">Sichern von BIND

<p>Es gibt verschiedene Dinge mit denen Sie sich auseinandersetzen
sollen, um einen Domain-Server-Daemon abzusichern, die &auml;hnlich zu
den &Uuml;berlegungen sind, wie man einen anderen Service absichert:

<list>

<item>Konfigurieren Sie den Daemon selbst so dass er von aussen nicht
missbraucht werden kann. Dies schliesst das einschr&auml;nken von
Abfragen durch Clients ein: Zonen-Transfers und rekursive Abfragen.

<item>Einschr&auml;nken des Zugriffs auf des Daemon auf den Server
selbst, so dass dem Schaden auf das System im Falle eines Einbruchs
Grenzen gesetzt sind. Hierzu geh&ouml;rt auch, den Daemon als
nicht-privilegierten User laufen zu lassen und ihn zu chrooten.

</list>

<p>Sie sollten einige Informationen, die von aussen abgefragt werden
k&ouml;nnen, zur&uuml;ckhalten, so dass man nicht wertvolle Informationen
&uuml;ber Ihre Organisation, die Sie nicht herausgeben wollen, abfragen
kann. Dies schliesst die folgenden Optionen mit ein:
<em>allow-transfer</em>, <em>allow-query</em>, <em>allow-recursive</em>
und <em>version</em>. Sie k&ouml;nnen dies in dem global Abschnitt tun
(so wird es auf alle Zonen angewandt) oder jeweils pro Zone. Dies ist im
Paket <package>bind-doc</package> dokumentiert, sobald das Paket
installiert ist k&ouml;nnen Sie hierzu mehr in
<file>/usr/share/doc/bind/html/index.html</file> lesen.

<p>Stellen Sie sich vor, Ihr Server ist mit dem Internet und ihrem
internen Neztwerk (Ihre interne IP ist 192.168.1.2) verbunden <!-- (a
basic multi-homed server) -->. Sie m&ouml;chten keinen Service im
Internet anbieten und DNS-Abfragen lediglich ihren internen Host
erlauben. Sie sollten dies einschr&auml;nken, indem Sie folgendes in ihre
<file>/etc/bind/named.conf</file> aufnehmen:

<example>
options {
	    allow-query { 192.168.1/24; } ;
	    allow-transfer { none; } ; 
	    allow-recursive { 192.168.1/24; } ;
	    listen-on { 192.168.1.2; } ;
	    forward { only; } ;
	    forwarders { A.B.C.D; } ;
};
</example>

<p>Die <em>liste-on</em> Option bewirkt, dass sich DNS nur auf die
Schnittstelle bindet, die internen Zugang hat, aber, sogar wenn diese
Schnittstelle verbindung zum Internet hat (zum Beispiel weil Sie NAT
benutzen), werden Abfragen nur akzeptiert, wenn Sie von internen Hosts
kommen. Wenn das System mehrere Schnittstellen hat und Sie kein
<em>listen-on</em> gesetzt haben, k&ouml;nnten zwar nur interne Nutzer
Abfragen starten, aber, da der Port f&uuml;r Angreifer von aussen
ansprechbar ist, k&ouml;nnten Sie versuchen den DNS abzust&uuml;rzen
(oder durch Speicher-&Uuml;berlauf-Attacken auszunutzen). Sie
k&ouml;nnten ihn sogar dazu bringen, lediglich auf 127.0.0.1 zu
h&ouml;ren, wenn Sie den DN-Service nicht f&uuml;r ein anderes System
anbieten wollen.
</p>

<p>Der version.bind Eintrag in der chaos class enth&auml;lt die Version
des derzeit laufenden Bind-Prozesses. Diese Information wird oft von
automatischen Scannern und b&ouml;sartigen Individuen dazu verwendet,
heraus zu finden, ob ein Bind f&uuml;r eine bestimmt Atacke verwundbar
ist. Indem Sie falsche oder gar keine Informationen im version.bind
Eintrag zur Verf&uuml;gung stellen, minimieren Sie die
Wahrscheinlichkeit, dass jemand Ihren Server aufgrund der publizierten
Version attackieren wird. Um Ihre eigene Version anzugeben, benutzen Sie
die <em>version</em> Direktive in der folgenden Art:
<example>
options {
	... verschiedene andere Optionen ...
	version "Nicht verfuegbar.";
};
</example>

<p>Das &auml;ndern des version.bind Eintrages sch&uuml;tzt eigentlich
nicht gegen Attacken, aber Sie k&ouml;nntes es als sinnvolle
Schutzvorrichtung ansehen.
</p>

<p>Eine beispielhafte <file>named.conf</file> Konfigurations-Datei
k&ouml;nnte so aussehen:

<example>
acl internal {
        127.0.0.1/32;           // localhost
        10.0.0.0/8;             // intern
        aa.bb.cc.dd;            // eth0 IP
};

acl friendly {
        ee.ff.gg.hh;            // slave DNS
        aa.bb.cc.dd;            // eth0 IP
        127.0.0.1/32;           // localhost
        10.0.0.0/8;             // intern
};

options {
        directory "/var/cache/bind";
        allow-query { internal; };
        allow-recursive { internal; };
        allow-transfer { none; };
};
// Ab hier bis zur meineseite.bogus Zone 
// ist alles im Grunde die unver&auml;nderte Debian Standard Einstellung
logging {
        category lame-servers { null; };
        category cname { null; };   
};

zone "." {
        type hint;
        file "/etc/bind/db.root";
};

zone "localhost" {
        type master;
        file "/etc/bind/db.local";
};

zone "127.in-addr.arpa" {
        type master;
        file "/etc/bind/db.127";
};

zone "0.in-addr.arpa" {
        type master;
        file "/etc/bind/db.0";
};

zone "255.in-addr.arpa" {
        type master;
        file "/etc/bind/db.255";
};

// Zone, die ich selbst hinzugefuegt habe
zone "meineseite.bogus" {
        type master;
        file "/etc/bind/named.meineseite";
        allow-query { any; };
        allow-transfer { friendly; };
};
</example>

<P>Bitte pr&uuml;fen Sie (erneut) die Debian Fehler Datenbank
bez&uuml;glich Bind, insbesondere <url name="Bug #94760 (regarding ACLs
on zone transfers)" id="http://bugs.debian.org/94760">.  F&uuml;hlen Sie
sich ruhig ermutigt zu diesem Bug beizutragen, wenn Sie glauben, Sie
k&ouml;nnen n&uuml;tzliceh Informationen beitragen.

<sect1 id="user-bind">&Auml;ndern von BIND User

<p>Bez&uuml;glich der beschr&auml;nkung von BINDs Privilegien m&uuml;ssen
Sie beachten, dass wenn Sie BIND als nicht-root User laufen lassen, BIND
neue Netzwerk-Schnittstellen entdecken kann. Zum Beispiel, wenn Sie eine
PCMCIA-Karte in ihr Notebook stecken. Lesen Sie README.Debian in Ihrer
Dokumentation (<file>/usr/share/doc/bind/README.Debian</file>) f&uuml;r
mehr Informationen hierzu. Es gab in letzter Zeit Sicherheits-Probleme
mit BIND, so dass es n&uuml;tzlich ist, den User zu wechseln, wenn es
m&ouml;glich ist. Wie werden die Schritte, die dazu n&ouml;tig sind,
detailiert listen, wenn Sie dies automatisch machen lassen wollen,
probieren Sie das Skript in <ref id="bind-chuser"> aus.

<p>Um BIND als ein anderer User laufen zu lassen m&uuml;ssen Sie
zun&auml;chst einen separaten User und eine separate Gruppe daf&uuml;r
erstellen (es ist <em>keine</em> gute Idee f&uuml;r alle Services, die
sie nicht als root laufen lasse, den User nobody und die Gruppe nogroup
zu benutezn). In diesem Beispiel wird der User und die Gruppe
<tt>named</tt> benutzt. Sie k&ouml;nnen diese anlegen, indem Sie die
folgenden Kommandos eingeben:
<example>
addgroup named
adduser --system --home /home/named --no-create-home --ingroup named \
      --disabled-password --disabled-login named
</example>

<p>Beachten Sie, dass der User <tt>named</tt> sehr eingeschr&auml;nlt
ist. Wenn Sie - aus welchen Gr&uuml;nden auch immer - ein weniger
eingeschr&auml;nktes Setup haben m&ouml;chten, benutzen Sie:
<example>
adduser --system --ingroup named named
</example>

<p>Editieren Sie nun <tt>/etc/init.d/bind</tt> mit Ihrem Lieblings-Editor
und &auml;nder Sie die Zeile, die mit 
<example>
start-stop-daemon --start
</example>

anf&auml;ngt zu:
<example>
start-stop-daemon --start --quiet --exec /usr/sbin/named -- -g named -u named
</example>

<p>Ausserdem m&uuml;ssen Sie, um zu verhindern, dass irgendetwas als root
l&auml;uft, die <tt>reload</tt>-Zeile auskommentieren:

<example>
reload)
       /usr/sbin/ndc reload
</example>

<p>und in folgendes &auml;ndern:
<example>
reload)
        $0 stop
        sleep 1
        $0 start
</example>

<p>Beachten Sie: Abh&auml;ngig von Ihrer Debian Version, m&uuml;ssen Sie
vielleicht auch die <tt>restart</tt>-Zeile &auml;ndern. Dies wurde in der
Version <tt>1:8.3.1-2</tt> von Debians BIND-Paket repariert.

<p>Alles was Sie jetzt noch tun m&uuml;ssen, ist bind durch
'/etc/init.d/bind restart' neu zu starten, und dann Ihr Syslog auf zwei
Eintr&auml;ge. wie die folgenden, pr&uuml;fen:
<p>
<example>
Sep  4 15:11:08 nexus named[13439]: group = named
Sep  4 15:11:08 nexus named[13439]: user = named
</example>


<p>Voilá! Ihr named l&auml;ft <em>nicht mehr</em> als root. Wenn Sie mehr
Informationen dar&uuml;ber lesen wollen, warum BIND normalerweise nicht
als nicht-root User auf Debian Systemen l&auml;uft, sehen Sie bitte in
der Fehlerdatenbank zu Bind nach, insbesondere <url name="Bug #50013:
bind should not run as root" id="http://bugs.debian.org/50013"> und
<url name="Bug #132582: Default install is potentially insecure"
id="http://bugs.debian.org/132582">,
<url name="Bug #53550" id="http://bugs.debian.org/53550">, 
<url name="Bug #128120" id="http://bugs.debian.org/52745">, und
<url name="Bug #128120" id="http://bugs.debian.org/128129">. 
F&uuml;hlen sie sich ruhig dazu ermuntert, etwas zu den Fehlermeldungen
beizutragen, wenn Sie denken, Sie k&ouml;nnen n&uuml;tzliche
Informationen beitragen.


<sect1 id="chroot-bind">Chrooten des Name-Server

<p>Um die gr&ouml;sstm&ouml;gliche BIND Sicherheit zu erreichen,
m&uuml;ssen Sie nun ein Chroot-K&auml;fig (siehe <ref id="chroot">)
um Ihren Daemon herum bauen. Es gibt da einen sehr einfachen Weg dies zu
erreichen: Die <tt>-t</tt> Option (siehe die Handbuchseite <manref
name="named" section="8">). Dies wird Bind selbst in ein bestimmtes
Verzeichniss chrooten lassen, ohne dass Sie einen eigenen
Chroot-K&auml;fig aussetzen m&uuml;ssen, oder sich sorgen um dynamische
Bibliotheken machen m&uuml;ssen. Die einzigen Dateien, die Sie in diesem
Chroot-K&auml;fig ben&ouml;tigen, sind:

<example>
dev/null
etc/bind/       - sollte die named.conf und alle Server-Zonen enthalten
sbin/named-xfer - wenn Sie Namen transferieren
var/run/named/  - sollte die pid und den Cache des Name-server (falls es
                  ihn gibt) enthalten. Dieses Verzeichniss muss f&uuml;r
		  den named-User schreibbar sein.
var/log/named   - Wenn Sie in einer Datei protokollieren, muss dies
                  f&uuml;r den names User schreibbar sein.
dev/log         - syslogd sollte hierrauf h&ouml;ren, wenn named so
                  konfiguriert ist, dass er hierr&uuml;ber protokolliert.
</example>


<p>Damit Ihr Bind Daemon vern&uuml;nftig l&auml;uft, braucht er bestimmt
Zugriffsrechte auch die named-Dateien. Dies ist eine einfache
Angelegenheit, da die Konfigurations-Dateie immer in <tt>/etc/named/</tt>
liegen. Beachten Sie, dass er lediglich lese-Zugriff ben&ouml;tigt, es
sei denn, es handelt sich um einen sekund&auml;ren oder
zwischenspeichernden Name-Server. Wenn dies der fall ist, m&uuml;ssen Sie
ihm lese- und schreibzugriff auf die notwendigen Zonen gew&auml;hren (so
dass Zonen-Transfers vom prim&auml;ren Server funktionieren).

<p>Mehr Informationen &uuml;ber das Chrooten von Bind finden Sie unter
<url name="Chroot-BIND-HOWTO"
id="http://www.linuxdoc.org/HOWTO/Chroot-BIND-HOWTO.html"> (betrifft Bind
9) und <url name="Chroot-BIND8-HOWTO"
id="http://www.linuxdoc.org/HOWTO/Chroot-BIND8-HOWTO.html"> (betrifft
Bind 8).  Diese Dokumente sollten auch nach der Installations des Paketes 
<package>doc-linux-text</package> (Text-Version) oder
<package>doc-linux-html</package> (HTML-Version) verf&uuml;gbar sein. Ein
anderes n&uuml;tzliches Dokument ist <url
id="http://www.psionic.com/papers/dns/dns-linux">.

<p>Wenn Sie f&uuml;r Bind 8.2.3 (aus Debian potato) einen kompletten
Chroot-K&auml;fig ausetzen (d.h. Sie benutzen nicht nur <tt>-t</tt>) ,
stellen Sie sicher, dass Sie die folgenden Zeilen benutzen:

<example>
dev/log -  syslogd sollte hierrauf h&ouml;ren
dev/null
etc/bind/named.conf 
etc/localtime
etc/group - mit einer einzigen Zeile: "named:x:GID:"
etc/ld.so.cache - mit ldconfig erstellt   
lib/ld-2.1.3.so
lib/libc-2.1.3.so
lib/ld-linux.so.2 - symbolischer Lin auf ld-2.1.3.so
lib/libc.so.6 - symbolischer Lin auf libc-2.1.3.so
sbin/ldconfig - kann gel&ouml;scht werden, nachdem Chroot aufgesetzt wurde
sbin/named-xfer - wenn Sie Namen transferieren
var/run/
</example>

<p>Sorgen Sie auch daf&uuml;r, dass <prgn>syslogd</prgn> auf
$CHROOT/dev/log achtet, so dass der Name-Server seine
syslog-Eintr&auml;ge in das lokale System Protokoll schreiben lassen
kann.

<p>Wenn Sie Probleme mit dynamischen Bibliotheken vermeiden wollen,
k&ouml;nnen Sie Bind statisch compilieren. Sie k&ouml;nnen hierzu
<prgn>apt-get</prgn> mit der <tt>source</tt> Option benutzen. Es kann
sogar die Pakete herunterladen, die Sie zum Compilieren ben&ouml;tigen.
Sie m&uuml;ssten etwas &auml;hnlich wie das hier tun:

<!-- FIXME: Does bind use autoconf? -->
<example>
$ apt-get --download-only source bind build-dep bind
$ cd bind-8.2.5-2
(&auml;ndern Sie das Makefile.in , so dass CFLAGS die Option '-static'
beinhaltet befor die @CFLOAGS@ Definition von autoconf verwendet wird)
$ dpkg-buildpackage -rfakeroot
$ cd ..
$ dpkg  -i bind-8.2.5-2*deb
</example>

<p>Nach der Installation werden Sie die Dateien im chroot-Gef&auml;ngniss
verschieben m&uuml;ssen <footnote>es sei denn, Sie benutzen die
<tt>instdir</tt> Option, wenn Sie <prgn>dpkg</prgn> aufrufen, aber dann
wird das chroot-Gef&auml;ngniss etwas komplizierter </footnote>. Sie
k&ouml;nnen die <tt>init.d</tt> Skripte in <file>/etc/init.d</file>
lassen, so dass das System automatisch den Name Server starten wird, aber
editieren Sie sie in dem Sie bei den <prgn>start-stop-daemon</prgn>
Aufrufen in diesen Skripts <tt>--chroot /location_of_chroot</tt>
hinzuf&uuml;gen.

<p>FIXME, merge info from
<url id="http://people.debian.org/~pzn/howto/chroot-bind.sh.txt">,
<url id="http://people.pdxlinux.org/~karlheg/"> (Bind9 on Debian),
<url id="http://www.cryptio.net/~ferlatte/config/"> (Debian-specific),
<url id="http://www.psionic.com/papers/whitep01.html">, 
<url id="http://csrc.nist.gov/fasp/FASPDocs/NISTSecuringDNS.htm">
and
<url id="http://www.acmebw.com/papers/securing.pdf">.

<sect>Absichern von Apache

<p>FIXME: Add content.

<p>Sie k&ouml;nnen den Zugriff auf Ihren Apache Server einschr&auml;nken,
wenn Sie ihn nur intern benutzen wollen (zum Beispiel zu Test Zwecken,
oder um auf die <package>doc-central</package> Archive zuzugreifen, etc.)
und nicht wollen, dass von aussen auf ihn zugegriffen werden kann. Um
dies zu tun benutzen Sie die <tt>Listen</tt> oder <tt>BindAddress</tt>
Direktiven in der Datei <file>/etc/apache/http.conf</file>.

<p>Benutzen von Listen:
<example>
Listen 127.0.0.1:80
</example>
<p>Benutzen von BindAddress:
<example>
BindAddress 127.0.0.1
</example>

<p>Starten Sie anschliessen den Apache mit <tt>/etc/init.d/apache
restart</tt> neu, und Sie werden sehen, dass er nur auf die lokale
Schleife achtet.

<p>In jedem Fall solten Sie, wenn Sie nicht die ganze Funktionalit&auml;t
die Apache zur Verf&uuml;gung stellt benutzen wollen, mal einen Blick auf
die anderen Web-Server aus Debian werfen, zum Beispiel
<package>dhttpd</package>.

<p>Die <url name="Apache Documentation"
id="http://httpd.apache.org/docs/misc/security_tips.html"> stellt viele
Informationen zu Sicherheitsmassnahmen, die Sie auf einem Apache
Webserver anwenden k&ouml;nnen, bereit (die gleichen Informationen
erhalten Sie unter Debian auch durch das Paket
<package>apache-doc</package>).

<sect>Absichern von finger

<p>Wenn Sie einen Finger-Service laufen lassen wollen, fragen Sie sich
bitte zuerst, ob Sie ihn das auch tun m&uuml;ssen. Wenn Sie m&uuml;ssen,
werden Sie feststellen, dass Debian viele Finger-Daemonen zur
Verf&uuml;gung stellt (hier die Ausgabe von <prgn>apt-cache search
fingerd</prgn>):

<list>
<item>cfingerd - Configurable finger daemon
<item>efingerd - Ein weiterer Unix-finger-Dämon mit anpassbarer Ausgabe
<item>ffingerd - Ein sicherer finger Daemon
<item>fingerd - Remote-User Informationsserver
<item>xfingerd - BSD-ähnlicher finger daemon mit qmail Unterstützung
</list>
<p><package>ffingerd</package> ist der empfohlene finger Daemon, wenn Sie
vorhaben, einen &ouml;ffentlichen Service anzubieten. In jedem Fall sind
Sie dazu angespornt, ihn &uuml;ber inetd, xinetd oder tcpserver laufend
aufzusetzen: Schr&auml;nken Sie die Anzahl der Prozesse die gleichzeitig
laufen d&uuml;rfen ein, schr&auml;nken Sie den Zugriff auf den
Finger-Daemon von bestimmten Hosts ein (indem sie tcp-wrapper benutzen)
und lassen Sei ihn nur auf die Schnittstellen achten, auf die er achten
muss.


<sect>Allgemeine chroot und suid Paranoia

<p>Wahrscheinlich ist es nur fair zu sagen, dass die Kompexit&auml;t von
BIND der Grund daf&uuml;r ist, warum er in den letzten Jahren so oft
f&uuml;r Attacken verwundbar war.

<p>Dies trifft auch auf andere Programme mit Komplexen Funktionen und
gr&ouml;sserer Nutzergemeinde zu, einschliesslich sendmail und einige
ftp-Daemonen (z.B. WUftpd). (Nat&uuml;rlich kann auch ein Programm ohne
viele Funktionen, das seine Nutzer nicht zufriedenstellt, unsicher sein,
abgesehen dass es nutzlos ist.)

<p>In jedem Fall sollten Sie, wenn Sie diese laufen lassen, &auml;hnliche
Arragements f&uuml;r Sie in Erw&auml;gung ziehen &mdash; entziehen von
root-Privilegien, einsperren in ein chroot-Gef&auml;ngniss &mdash; oder
ersetzen durch ein sichereres &Auml;quivalent.


<sect>Allgemeine Klartextpasswort Paranoia
<p>
Sie sollten versuchen, jeden Netzwerk Service, der seine Passworte als
Klartext &uuml;ber das Netz sendet oder empf&auml;ngt, wie zum Beispiel
FTP/Telnet/NIS/RPC, vermeiden. Der empfiehlt jedem ssh anstelle von
telnet und ftp zu verwenden.

<p>Vergessen Sie jedoch nicht, dass die Migration von telnet zu ssh die
Sicherheit in keinster Weise erh&ouml;t, wenn Sie weiterhin klartext
Protokolle verwenden. Am besten w&auml;re es ftp, telnet, pop, imap und
http zu entfernen und durch Ihre entsprechenden verschl&uuml;sselten
Services zu ersetzen. Sie sollten in Erw&auml;gung ziehen von diesen
Services zu Ihren SSL-Versionen zu wechseln: ftp-ssl, telnet-ssl,
pop-ssl, https ...

<p>Die meisten der oben aufgelisteten Tips gelten f&uuml;r jedes
Unixoide-System (Sie werden sie in jedem anderen Sicherheits-Relevanten
Dokument, das sie jemals lesen, wiederfinden, wenn es sich auf Linux und
andere Unices bezieht).

<sect>NIS deaktivieren

<p>Sie sollten, wenn m&ouml;glich, nicht NIS, den Network Information
Service, benutzen, da er das teilen von Passworten erlaubt. Dies kann
sehr unsicher sein, wenn Ihr Setup kaputt geht.

<p>Wenn Sie Passw&ouml;rter zwischen verschiedenen Maschinen teilen
m&uuml;ssen, sollten Sie andere alternativen in Erw&auml;gung ziehen. Zum
Beispiel k&ouml;nnen Sie einen LDAP Server aufsetzen, und PAM auf Ihren
System so konfigurieren, dass es den LDAP Server zur User
Authentifizierung kontaktiert. Sie finden ein detailiertes Setup in der
<url name="LDAP-HOWTO"
id="http://www.linuxdoc.org/HOWTO/LDAP-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/LDAP-HOWTO.txt.gz</file>).

<p>Lesen Sie mehr zu Sicherheit und NIS in der 
<url name="NIS-HOWTO" id="http://www.linuxdoc.org/HOWTO/NIS-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/NIS-HOWTO.txt.gz</file>).


<p>FIXME (jfs): Add info on how to setup this in Debian

<sect id="rpc">Abschalten von RPC-Servicen

<p>Sie sollten RPC wannimmer nur m&ouml;glich abschalten, dass ist dann
der Fall, wenn Sie ihn nicht ben&ouml;tigen.
<footnote>
Sie werden es wahrscheinlich brauchen, wenn Sie NFS (Network FileSystem)
oder NIS (Network Information System) oder andere RPC-basierende Services
benutzen.
</footnote>
Es sind viele Sicherheits-L&ouml;cher sowohl f&uuml;r den
Portmapper-Service als auch f&uuml;r RPC-basierende Services bekannt und
k&ouml;nnten sehr leicht ausgenutzt werden. Andererseits k&ouml;nnen
NFS-Service in manchen netzwerken sehr wichtig sein, also versuchen Sie
in Ihrem Netzwerk die Balance zwischen Sicherheit und Nutzbarkeit zu
waren. Einige DDoS (distributed denial of service) Angriffe benutzen
rpc-L&ouml;cher, um in das System einzudringen und als sogennanter
Agent/Handler zu fungieren. Lesen Sie mehr zu Sicherheit in NFS in <url
name="NFS-HOWTO" id="http://www.linuxdoc.org/HOWTO/NFS-HOWTO.html">
(<file>/usr/share/doc/HOWTO/en-txt/NFS-HOWTO.txt.gz</file>).

<p>Das Abschalten von Portmap ist relativ einfach. Es gibt aber
verschiedene Methoden. Die einfachste is es auf einem Debian 3.0 System
einfach das Paket <package>portmap</package> zu deinstallieren. Wenn Sie
eine eine andere Version laufen haben, werden Sie den Service, wie in
<ref id="disableserv"> beschrieben, abschalten m&uuml;ssen, dies liegt
daran, dass das Programm Teil des Pakets <package>net-base</package> (das
nicht deinstalliert werden kann, ohne das System kaputt zu machen) sein
kann.

<p>Dies entfernt in der Tat jeden symbolischen Link der etwas mit Portmap
zu tun hat unterhalb von <tt>/etc/rc${runlevel}.d/</tt>, was Sie auch
manuell erledigen k&ouml;nnen. Eine andere M&ouml;glichkeit ist <tt>chmod
644 /etc/init.d/portmap</tt>, das erzeugt aber eine Fehlermeldung
w&auml;hrend des Bootens. Sie k&ouml;nnen auch den
<tt>start-stop-daemon</tt> Teil im <file>/etc/init.d/portmap</file>
Shell-Skript auskommentieren.

<sect id="firewall-setup">Hinzuf&uuml;gen von Firewall F&auml;higkeiten

<p>Das Debian GNU/Linux Betriebssystem hat die eingebauten
F&auml;higkeiten des Linux Kernels. Dies heisst, dass Sie, wenn Sie ein
Potato (Debian 2.2) System installiert haben (mit dem default Kernel 2.2)
werden Sie <prgn>ipchains</prgn> Firewall-Unterst&uuml;tzung im Kernel
haben. Sie m&uuml;ssen dann das Paket <package>ipchains</package>
installieren, was (durch seine Priorit&auml;t) sicherlich bereits der
Fall ist. Wenn Sie ein Woody-System (Debian 3.0) installiert haben (mit
dem standard 2.4er Kernel) unterst&uuml;tzt der Kernel Ihr
<prgn>iptables</prgn> (neftfilter). Der Hauptunterschied zwischen
<prgn>ipchains</prgn> und <prgn>iptables</prgn> ist, dass letzeres auf
<em>stateful packet inspection</em> (zustandsbehaftete Paket
Untersuchung), so dass Ihnen sicherere (und einfacher zu wartende)
Filter-Konfigurationen zur Verf&uuml;gung stehen.

<sect1>Firewallen des lokalen Systems

<p>Sie k&ouml;nnen eine Firewall dazu benutzen, den Zugriff auf Ihr
lokales System und sogar die Kommunikation von ihm nach aus absicher.
Firewall-Regeln l&ouml;nnen dazu benutzt werden, Prozesse, die nicht
vern&uuml;nftigt konfiguriert werden k&ouml;nnen, zu sch&uuml;tzen, aber
<em>nicht</em> um Services f&uuml;r Netzwerke, IP-Adressen, etc. zur
Verf&uuml;gung zu stellen.

<p>Dieser Schritt ist aber haupts&auml;chlich deshalb als letztes in
dieser Anleitung, weil es <em>viel</em> besser ist, sich nicht alleine
auf die F&auml;higkeiten der Firewall zu verlassen, um ein System zu
sch&uuml;tzen. Die Sicherheit eines Systems setzt sich auf mehreren
Ebenen zusammen; eine Firewall sollte die letzte sein, wenn alle Services
abgeh&auml;rtet worden sind. Sie k&ouml;nnen sich sicherleich leicht eine
Konfiguration vorstellen, bei der ein System lediglich von einere
ingebauten Firewall gesch&uuml;tzt, und der Admistrator gl&uuml;ckseelige
Administrator die Firewall-Regeln aus irgendwelchen Gr&uuml;nden
(Probleme mit dem Setup, Verdruss, Denkfehler) entfernt. Dieses System
w&auml;re weit ge&ouml;ffnet f&uuml;r Angriffe, wenn es keine andere
Schutzmassnahmen auf dem System gibt.

<p>Andererseits k&ouml;nnen Firewall-Regeln auf dem lokalem System
daf&uuml;r sorgen, dass b&ouml;se Dinge nicht passieren. Sogar wenn die
bereitgestellten Services sicher konfiguriert sind, kann eine Firewall
vor Misskonfigurationen oder frisch installierten Services, die noch
nicht passend konfiguriert sind, sch&uuml;tzen. Ausserdem wird eine enge
Konfiguration <em>nach Hause telefonierende</em> Trojaner am
Funktionieren hindern, es sei denn, der Firewall-Code wurde entfernt.
Beachten Sie, dass ein Eindringling <em>keinen</em> Superuser-Zugriff
ben&ouml;tigt, um fernkontrollierbaren Trojaner zu installieren (da das
erlaubt ist, sich an Ports zu binden, wenn es sich nicht um einen
privilegierten Port handelt und die F&auml;higkeiten noch vorhanden
sind).

<p>Demzufolge w&auml;re ein passendes Firewall-Setup, eines mit einer
default deny policy (also alles ablehnt, dass nicht ausdr&uuml;cklich
erlaubt ist), und weiterhin:

<list>

<item>eingehende Verbindungen werden nur zu lokalen Servicen von
erlaubten Maschinen gestatten

<item>ausgehende Verbindungen werden nur von Servicen erlaubt, die auf
Ihrem System benutzt werden (DNS, Web-Surfen, pop, email, ...)
<footnote>Im Gegensatz zu anderen pers&ouml;nlichen Firewalls f&uuml;r
andere Betriebssysteme, stellt Debian GNU/Linux (noch) nicht eine
Firewall-Erstellungs-Schnittstele zur Verf&uuml;gung, die Regeln
erstellen k&ouml;nnen, die einzelne Prozesse oder User einschr&auml;nken.
Jedoch kann der iptables-Code so konfiguriert werden, dass er dies kann
(siehe dazu das "owner" Modul in der Manualseite <manref name="iptables"
section="8"> manpage)</footnote>

<item>die forward-Regel verbietet alles (es sei denn, Sie besch&uuml;tzen
andere System, siehe unten)

<item>alle anderen eingehenden und ausgehenden Verbindungen werden
abgelehnt.

</list>

<sect1>Sch&uuml;tzen andere Systeme durch eine Firewall

<p>Eine Debian Firewall kann auch so installiert werden, dass Sie, mit
Firewall-Regeln, Systeme <em>hinter</em> ihr besch&uuml;tzt, indem es die
Angriffsfl&auml;che zum Internet hin einschr&auml;nkt. Die Firewall kann
so konfiguriert werden, dass sie verhindert dass System von ausserhalb
des lokalen Netzwerks Zugriff auf nicht &ouml;ffentliche Services (Ports)
verhindert. Zum Beispiel muss auf einem Mail-Server lediglich Port 25
(auf den der Mail-Service aufsetzt) von aussen zug&auml;nglich sein. Eine
Firewall kann so konfiguriert werden, dass sogar wenn es &ouml;ffentlich
zug&auml;ngliche Services gibt, direkt gesendete Pakete verwirft (dies
nennt man <em>filtern</em>).

<p>Sie k&ouml;nnen eine Debian GNU/Linux Maschine sogar so konfigurieren,
dass er als Bridge-Firewall (&uuml;berbr&uuml;ckender Schutzwall)
fungiert, d.h. eine filternde Firewall, die komplett transparent zum
gesamten Netzwerk erscheint, und ohne IP-Adresse auskommt, und daher
nicht direkt attackiert werden kann. Abh&auml;ngig von dem installierten
Kernel m&uuml;ssen Sie vielleicht den bridge-Firewall Patch installieren,
und dann <em>802.1d Ethernet Bridging</em> in der Kernel Konfiguration
und der neuen Option <em>netfilter ( firewalling ) suport</em>
ausw&auml;hlen. Sehen Sie dazu <ref id="bridge-fw">, um zu erfahren, wie
man dies auf einem Debian GNU/Linux System aufsetzt.

<sect1>Konfigurieren der Firewall

<p>Nat&uuml;rlich h&auml;ngt die Konfiguration einer Firewall immer vom
System und dem Netzwerk abh&auml;ngig. Ein Administrator muss vorher
das Netzwerk Layout und die Systeme, die er besch&uuml;tzen will, kennen,
und ob andere netzwerkspezifischen Erw&auml;gungen (wie NAT oder Routing)
ber&uuml;cksichtigt werden m&uuml;ssen. Seien vorsichtig, wenn Sie Ihre
Firewall konfigurieren. Wie Laurence J. Lane im
<package>iptables</package> Paket sagt:

<p><em>The tools can easily be misused, causing enormous amounts of
grief by completely cripple network access to a computer system. It is
not terribly uncommon for a remote system administrator to
accidentally lock himself out of a system hundreds or thousands of
miles away. One can even manage to lock himself out of a computer
who's keyboard is under his fingers. Please, use due caution.</em>
<!-- TODO: Zitat Ueberstezen -->


<p>Vergessen Sie nicht: Das einfache installieren von
<package>iptables</package> (oder &auml;lterem Firewall Coe) gibt Ihnen
keine Sicherehit, es stellt lediglich die Software zur Verf&uuml;gung. Um
eine Firewall zu haben, m&uuml;ssen Sie sie konfigurieren.

<p>Wenn Sie nicht viel &uuml;ber Firewalls wissen, lesen Sie die
Firewalling-HOWTO, die Sie im Paket <package>doc-linux-text</package>
finden (andere Formate gibt es auch). Sehen Sie auch <ref
id="references"> f&uuml;r weitere (allgemeinere) Verweise.

<sect2>Machen Sie's auf die Debian Art

<p>Wenn Sie Debian 3.0 benutzen, werden Sie feststellen, dass Sie bereits
das Paket <package>iptables</package> installiert haben. Dies ist die
Unterst&uuml;tzung f&uuml;r die Netfilter-Implementation in 2.4.4+
Keneln. Da das System nach der Installation aber keine Firewall-Regeln
kennen kann (Firewall-Regeln sind zu System spezifisch), m&uuml;ssen Sie
die iptables einschalten. Wie auch immer: Die Skripte wurden so
konfiguriert, dass der Administrator Firewall-Regeln aufsetzen kann und
die init-Skripte Sie dann <em>lernen</em> k&ouml;nnen und so immer als
das Setup der Firewall fungieren.

<p>Hierzu m&uuml;ssen Sie folgendes tun:

<list>

<item>Konfigurieren Sie das Paket so, dass es mit dem System gestartet
wird. Bei neueren Versionen (sei 1.2.6a-1) werden Sie w&auml;hrend der
Installation hiernach gefragt. Sie k&ouml;nnen es hinterher wieder mit
<tt>dpkg-reconfigure -plow iptables</tt> &auml;ndern. <em>Wichtig</em>:
Bei &auml;lteren Versionen geschah dies noch durch editieren von
<file>/etc/default/iptables</file>, so dass die Variable
<tt>enable_iptables_initd</tt> auf <em>true</em> gesetzt wird.

<item>Erstellen Sie Ihr ein Firewall-Setup mit iptables, benutzen Sie
dazu die Kommandozeile (siehe <manref name="iptables" section="8">) oder
ander der Tolls aus Debians Firewall-Paket (siehe <ref
id="firewall-pack">). Sie m&uuml;ssen einen Satz von Firewall-Regeln
erstellen die benutzt werden sollen, wenn die Firewall <em>aktiv</em> ist
und einen anderen, wenn die Firewall <em>inaktiv</em> (dies k&ouml;nnen
auch nur leere Regeln sein) ist.

<item>Sicher Sie die erstellten Regeln mit den Skripts
<tt>/etc/init.d/iptables save_active</tt> und <tt>/etc/init.d/iptables
save_inactive</tt>.

</list>

<p>Sobald dies geschehen ist, ist Ihr Firewall-Setup im Verezichnis
<file>/var/lib/iptables/</file> gespeichert und wird beim System-Boot
ausgef&uuml;hrt (oder wenn das initd Skript mit <em>start</em> und
<em>stop</em> gestartet wird). Beachten Sie, dass standard Einstellung
unter Debian vorsehen, den Firewall-Code in den Multiuser Runleveln (2
bis 5) sehr fr&uuml;h (10) zu starten. Ausserdem wird er im singleuser
Runlevel (1) gestoppt. &Auml;ndern Sie dies, wenn es nicht Ihren lokalen
Richtlinien entspricht.

<p>Wenn Sie keine Ahnung haben, wie Sie Ihre Firewall-Rules manuell
aufsetzen sollen, sehen Sie in der <em>Packet Filtering HOWTO</em> und
<em>NAT HOWTO</em> aus dem Paket <package>iptables</package>, zu browsen
unter  <file>/usr/share/doc/iptables/html/</file>. Zudem stellt die
Konfigurationsdatei <file>/etc/default/iptables</file> noch weitere
Informationen zu diesem Paket zur Verf&uuml;gung.


<sect2 id="firewall-pack">Nutzen von Firewall-Paketen

<p>Das manuelle Aufsetzen einer Firewall kann f&uuml;r neue (und
manchmal auch f&uuml;r erfahrene) Administratoren kompliziert sein.
Hierf&uuml;r hat die Freie-Software Gemeinschaft eine grosse Zahl von
Tools erstellt, die zur einfachen Konfiguration einer Lokalen Firewall
benutzt werden k&ouml;nnen. Seien Sie vorgewarnt, dass einige Dieser
Tools sich mehr auf lokalen Schutz konzentrieren (auch <em>personal
firewall</em> genannt), w&auml;hrend andere vielseitiger, und l&ouml;nnen
dazu benutzt werden, komplexere Regelwerke zum Schutz ganzer Netzwerke zu
erstellen.

<p>Einige Programme, die unter Debian zum aufsetzen von Firewall-Regeln
benutzt werden k&ouml;nnen, sind:

<list>
<item><package>firestarter</package>
<item><package>knetfilter</package>
<item><package>fwbuilder</package>
<item><package>shorewall</package>
<item><package>mason</package>, das basierend auf dem Netzwerk-Verkehr,
denn Ihr System "sieht", Firewall-Regeln vorschlagen kann
<item><package>bastille</package> (among the hardening steps that can make
new versions of bastille is the possibility of adding firewall rules to
the system to be executed on startup) <!-- TODO: Ueberstzen wenn ich nen
Kaffee gedrunken habe -->
<item><package>ferm</package>
<item><package>fwctl</package>
<item><package>easyfw</package>
<item><package>firewall-easy</package>
<item><package>ipac-ng</package>
<item><package>gfcc</package>
<item><package>lokkit</package> oder <package>gnome-lokkit</package>
</list>

<p>Die Pakete gfcc,firestarter und knetfilter sind graphische
Administrations-Schnittstellen die entweder GNOME (die ersten beiden)
oder KDE (das letzte) benutzen, die eher Nutzer orientiert sind (z.B.
f&uuml;r Heimanwender) als die andere Pakete in der Liste, die sich eher
an Administratioren richten.

<p>Seien Sie vorgewarnt, dass manche der zuvor skizzierten Pakete eigene
Firewall-Skripte einf&uuml;hren, die beim System-Start ausgef&uuml;hrt
werden sollen, die zweifelsohne mit dem allgemeinen Setup (wenn es
erfolgte) mit unerw&uuml;nschten Nebeneffekten kollidieren wird. Das
Firewall-Skript, das zuletzt ausgef&uuml;hrt wird, wird das das System
konfigueren (was Sie so vielleicht nicht vorhatten). Sehen Sie hierzu
in der Paket-Dokumentation nach und benutzen Sie nur eines dieser Setups.
Allgemeiner: Andere Programme, die helfen die Firewall-Regeln
aufzusetzen, k&ouml;nnen anderen Konfigurations-Dateien beissen.

<p>FIXME: Add more info regarding this packages

<p>FIXME: Check Information on Debian firewalling and what/how does it
change from other distributions.

<p>FIXME: Where should the custom firewalling code be enabled (common
FAQ in debian-firewall?)


<chapt>Automatishen Abh&auml;rten eines Debian Systems

<p>Nachdem Sie nun all die Informationen aus den vorherigen Kapiteln
gelesen haben, fragen Sie sich vielleicht: "Ich habe sehr Ding zu
erledigen um mein System abzusichen; k&ouml;nnte man das nicht
automatisieren?" Die Antwort ist: "Ja, aber seien Sie vorsichtig mit
automatischen Tools."  Manche Leute denken, dass ein Absicherungstool
nicht die Notwendigkeit f&uuml;r gute Systemadministration abschafft.
Legen Sie sich also nicht selbst herein, indem Sie denken, dass Sie all
die Prozesse automatisieren k&ouml;nnten, und sich alle betreffenden
Angelegenheiten von selbst erledigen w&uuml;rden. Sicherheit ist ein
andauernder Prozess, an dem der Administrator teilnehmem muss und nicht
wegbleiben kann, damit irgendwelche Tools die Arbeit erledigen, weil kein
einzelnes Tool mit den m&ouml;glichen regelkonformen
Sicherheits-Implementierungen, all den Attacken und all den Umgebungen
bew&auml;ltigen kann.

<p>Seit Woody (Debian 3.0) gibt es zwei unterschiedliche Pakete, die
n&uuml;tzlich f&uuml;r die Erh&ouml;hung der Sicherheit sind. Das Paket
<package>harden</package> versucht auf Basis der
Paket-Abh&auml;ngigkeiten schnell wertvolle Sicherheits-Pakete zu
installieren und Pakete mit M&auml;ngeln zu entfernen. Die Konfiguration
der Pakete muss der Administrator erledigen. Das Paket
<package>bastille</package> implementiert gegebene Sicherheits-Regeln
f&uuml;r das lokale System bassierend auf einer vorhergehenden
Konfiguration durch den Administrator (Sie k&ouml;nnen auch mit einfache
Ja/Nein Fragen durch die Konfiguration gef&uuml;hrt werden).

<sect>Harden

<p>Das Paket <package>harden</package> versucht es einfacher zu machen
Rechner, die gute Sicherehit ben&ouml;tigen, zu installieren und zu
administrieren. Dieses Paket sollte von Leuten benutzt werden, die eine
schnelle Hilfe zur Erh&ouml;hing System-Sicherheit haben wollen. Hierzu
entfernt es Pakete mit bekannten M&auml;ngeln, einschliesslich (aber
nicht beschr&auml;nkt auf); Pakete mit bekannten Sicherheits-Fehlern (zum
Beispiel Speicher-&Uuml;berl&auml;ufe), Pakete die
Klartext-Passw&ouml;rter verwenden, fehlende Zuganskontrolle, usw. Es
installiert ausserdem automatisch einige Tools, die die Sicherheit auf
unterschiedliche Art und Weise erh&ouml;hen: Werkzeuge zur
Eindringlingserkennung, Tools zur Sicherheits-Analyse, und mehr. harden
installiert die folgenden <em>virtuellen</em> Pakete (d.H. sie enthalten
nichts, h&auml;ngen aber von anderen Paketen ab).

<list>

<item><package>harden-tools</package>: Tools, die die System-Sicherheit
erh&ouml;hen (Integrit&auml;ts-&Uuml;berpr&uuml;fer,
Eindringlingserkennung, Kernel-Patches...)

<item><package>harden-doc</package>: Stellt diese und andere
Sicherheits-relevanten Dokumente zur Verf&uuml;gung

<item><package>harden-environment</package>: Hilft eine abgesicherte
Umgebung zu konfigurieren (derzeit leer)

<item><package>harden-servers</package>: entfernt Server, die aus
irgendeinem Grund als unsicher gelten

<item><package>harden-clients</package>: entfernt Clients, die aus
irgendeinem Grund als unsicher gelten

<item><package>harden-remoteflaws</package>: Entfernt Pakete mit
bekannten Sicherheits-L&uuml;cken, die von einem entfernten Angreifer
genutzt werden k&ouml;nnen, um das System zu komprimitieren (benutzt
versionierte <em>Conflicts:</em>)

<item><package>harden-localflaws</package>: Entfernt Pakete mit
bekannten Sicherheits-L&uuml;cken, die von einem lokalen Angreifer
genutzt werden k&ouml;nnen, um das System zu komprimitieren (benutzt
versionierte <em>Conflicts:</em>)

<item><package>harden-remoteaudit</package>: Tools um Systeme aus der
ferne zu &uuml;berpr&uuml;fen

</list>

<p>Seien Sie wachsam, wenn Sie Software installiert haben, die Sie
brauchen (und aus bestimmten Gr&uuml;nden nicht deinstalliert haben
wollen) und Sie Aufgrund des Conflicts nicht mit einem der oben
aufgef&uuml;hrten Pakete installiert werden kann. In diesem Fall
k&ouml;nnen Sie <package>harden</package> nicht vollst&auml;ndig nutzen.

<p>Die harden Pakete machen eigentlich gar nichts. Zumindest nicht
direkt. Sie haben jedoch absichtliche Paket-Konflikte mit bekannten,
unsicheren Paketen. Auf diese Art wird die Paket-Verwaltung von Debian
die Installation von diesen Paketen nicht erlauben. Wenn Sie zum Beispiel
bei installiertem <package>harden-servers</package> versuchen, mit apt
einen telnet-Daemon zu installieren, werden Sie folgendes sehen:

<example>
# apt-get install telnetd 
The following packages will be REMOVED:
	harden-servers
The following NEW packages will be installed:
telnetd 
Do you want to continue (Y/n)
</example>

<p>Dies sollte im Kopf des Administrators eine Alarmsirene ausl&ouml;sen,
so dass er seine Aktion &uuml;berdenken kann.

<sect>Bastille Linux

<p><url name="Bastille Linux" id="http://www.bastille-linux.org"> ist ein
automatisches Abh&auml;rtungs Tools, das urspr&uuml;nglich f&uuml;r die
RedHat und Mandrake Linux Distributionen gedacht war. Wie auch immer: Das
Paket <package>bastille</package> aus Debian (seit Woody) ist
angepasst, um dieselbe Funktionalit&auml;t unter Debian GNU/Linux
Systemen zur Verf&uuml;gung zu stellen.

<p>Bastille kann mit verschiedenen Oberfl&auml;chen bedient werden (Alle
sind in ihrer eigenen Handbuch-Seite dokumentiert), die dem Administrator
erlauben:

<list>

<item>Schritt f&uuml;r Schritt Fragen zur erw&uuml;nschten Sicherheit
Ihres Systems beantworten (siehe <manref name="InteractiveBastille"
section="8">)

<item>standard Einstellungen zur Sicherheit (zwischen Lau, moderat und
paranoid) in einem bestimmten Setup (Server oder Arbeitsplatzrechner) zu
benutzen, und Bastille entscheiden zu lassen, welche
Sicherheits-Regelungen eingef&uuml;hrt werden sollen (siehe <manref
name="BastilleChooser" section="8">)

<item>eine vorgefertigte Konfigurations Datei (von Bastille oder von
einem Administator geliefert) zu nehmen und eine vorgegeben
Sicherheits-Regelung zu benutzen (siehe <manref name="AutomatedBastille"
section="8">)

</list>

<chapt>Paket signierung unter Debian

<p>Dieses Kapitel k&ouml;nnte auch mit "Wie man sein Debian GNU/Linux
System sicher upgraded/updated" &uuml;berschrieben werden, und es
verdient haupts&auml;chlich deshalb ein eigenes Kapitel, weil es in kein
anderes passt.

<p>Derzeit (Stand Dezember 2001) stellt Debian keine signierten Pakete
f&uuml;r die Distribution zur Verf&uuml;gung und der Woody Release (3.0)
wird diese F&auml;higkeiten nicht integrieren. Es gibt eine L&ouml;sung
f&uuml;r signierte Pakete, die - hoffentlich - in der n&auml;chsten
release (sarge) integriert wird.

<sect>Der vorgeschlagene Plan zur Pr&uuml;fung von Paket Signierungen

<p>Der derzeitige (unimplementierte) Plan zur Pr&uuml;fung von Paket
Signaturen mit apt ist:

<list>
<item>Die Release-Datei enth&auml;lt die md5-Summe von Packages.gz (die
die md5-Sumemn der Pakete enth&auml;lt) und wird signiert. Die Signatur
stammt aus einer vertrauensw&uuml;rdigen Quelle.

<item>Diese signierte Release-Datei wird beim "apt-get update" herunter
geladen und auf der Festplatte mit Packages.gz gespeichert.

<item>Wenn ein Paket installiert werden soll, wird es zuerst herunter
geladen, und dann wird die md5-Summe erstellt.

<item>Die signierte Release-Datei wird &uuml;berpr&uuml;ft (ob die
Signature okay ist) und doe md5-Sumem der Packages.gz Datei extraiert.
Die md5-Summe der Pakcages.gz-Datei wird erstellt und gepr&uuml;ft, und -
wenn Sie &uuml;bereinstimmt - wird die md5-Summe des herunter geladenen
Paketes aus ihr extraiert.#

<item>Wenn die md5-Summe des heruntergeladenen Paketes die gleiche ist,
wie in der Packages.gz-Datei, wird das Paket installiert, andernfalls
wird der Administrator alarmiert, und das Paket wird im Zwischenspeicher
gehalten (so dass der Administrator entscheiden kann, ob es installiert
werden soll, oder nicht). Wenn das Paket nicht in Packages.gz enthalten
ist und der Administrator das System so konfiguriert hat, dass nur
gepr&uuml;fte Pakete installiert werden k&ouml;nnen, wird das Paket
ebenfalls nicht installiert.
</list>

<p>Durch diese Kette von md5-Summen ist <prgn>apt</prgn> in der Lage, zu
verifizieren, dass ein Paket aus einer bestimmten Release stammt. Dies
ist zwar unflexibler als jedes Paket einzeln zu signieren, kann aber auch
mit den unten aufgef&uuml;hrten Pl&auml;nen kombiniert werden.

<p>Die Signierung von Paketen wurde innerhalb des Debian Projektes
ausf&uuml;hrlich diskutiert. Mehr Informationen hierzu finden Sie unter 
<url id="http://www.debian.org/News/weekly/2001/8/"> und
<url id="http://www.debian.org/News/weekly/2000/11/">.

<sect>Alternative Einzel-Paket-Signierungs Schemata

<p>Dieses zus&auml;tzliche Schemata jedes paket einzeln zu signieren
erlaubt es, Pakete zu pr&uuml;fen, selbst wenn sie nicht mehr in
irgendeiner Packages-Datei erw&auml;hnt werden, und auch Pakete von
Dritten, f&uuml;r die es keine Packages-Datei gibt, k&ouml;nnen unter
Debian installiert werden.

<p>Dieses Paket-Signierungs Schemata kann durch
<package>debsig-verify</package> und <package>debsigs</package>
implementiert werden. Diese beiden Pakete k&ouml;nnen in der .deb-Datei
selbst eingebettete Signaturen erstellen und pr&uuml;fen. Debian hat
bereits jetzt die M&ouml;glichkeiten dies zu tun, aber das Regelwerk und
die Werkzeuge hierf&uuml;r werden erst nach dem Woody Release
eingef&uuml;hrt (um den Release-Zyklus nicht zu verlangsamen).

<p>Beachten Sie: Derzeit wird enth&auml;lt
<file>/etc/dpkg/dpkg.cfg</file> derzeit standardm&auml;ssig die Option
"no-debsig".

<sect>Pr&uuml;fen ver&ouml;ffentlichter Pakaete

<p>F&uuml;r den Fall, dass Sie nun zus&auml;tzliche Sicherheits
Pr&uuml;fungen einf&uuml;hren wollen, k&ouml;nnen Sie das folgende Skript
von Anthony Towns benutzen. Dieses Skript kann automatisch neue
Sicherheits Checks durchf&uuml;hren, damit ein Nutzer sicher gehen kann,
dass die Software, die er/sie herunterl&auml;dt, die gleiche ist, wie
die, die von Debian bereitgestellt wird. 
<!-- TODO: Den nachfolgenden Satz kann ich einfach nicht richtig parsen.
-->
This stops Debian developers from hacking into someone's
system without the accountability provided by uploading to the main archive, or
mirrors mirroring something almost, but not quite like Debian, or mirrors
providing out of date copies of unstable with known security problems.   

<p>Dieser Beispiel-Code, umbenannt nach <prgn>apt-release-check</prgn>,
sollte auf die folgende Art benutzt werden:
used in the following way:
<example>
# apt-get update
# apt-release-check
(... Ergebnisse ...)
# apt-get dist-upgrade
</example>

<p>Zuerst m&uuml;ssen Sie jedoch:

<list>

<item>Holen Sie sich den Schl&uuml;ssel, den die Archiv-Software
verwendet, um Release-Dateien zu signieren, <url
id="http://ftp-master.debian.org/ziyi_key_2002.asc"> und f&uuml;gen Sie
ihn <file>~/.gnupg/trustedkeys.gpg</file> hinzu (was standardm&auml;ssig
von von <prgn>gpgv</prgn> benutzt wird)

<item>Entfernen Sie alle Zeilen aus <file>/etc/apt/sources.list</file>,
die nicht die "dists"-Struktur benutezn, oder &auml;ndern Sie das Skript,
so dass es mit denen auch funktioniert

<item>Ignorieren Sie die Tatsache, dass Sicherheits-Updates von Debian
keine signierten Release-Dateien haben, und das Sources-Dateien (noch)
keine richtigen Pr&uuml;fsummen in der Release-Datei anbieten.

<item>Bereiten Sie sich darauf vor, zu pr&uuml;fen, dass die richtigen
sources durch den richtigen Schl&uuml;ssel signiert wurden.

</list>


<example>
#!/bin/bash
# This script is copyright (c) 2001, Anthony Towns
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

rm -rf /tmp/apt-release-check
mkdir /tmp/apt-release-check || exit 1
cd /tmp/apt-release-check

>OK
>MISSING
>NOCHECK
>BAD

arch=`dpkg --print-installation-architecture`

am_root () {
        [ `id -u` -eq 0 ]
}

get_md5sumsize () {
        cat "$1" | awk '/^MD5Sum:/,/^SHA1:/' | 
          MYARG="$2" perl -ne '@f = split /\s+/; if ($f[3] eq $ENV{"MYARG"}) { print "$f[1] $f[2]\n"; exit(0); }'
}
checkit () {
        local FILE="$1"
        local LOOKUP="$2"

        Y="`get_md5sumsize Release "$LOOKUP"`"
        Y="`echo "$Y" | sed 's/^ *//;s/  */ /g'`"

        if [ ! -e "/var/lib/apt/lists/$FILE" ]; then
                if [ "$Y" = "" ]; then
                        # No file, but not needed anyway
                        echo "OK"
                        return
                fi
                echo "$FILE" >>MISSING
                echo "MISSING $Y"
                return
        fi
        if [ "$Y" = "" ]; then
                echo "$FILE" >>NOCHECK
                echo "NOCHECK"
                return
        fi
        X="`md5sum < /var/lib/apt/lists/$FILE` `wc -c < /var/lib/apt/lists/$FILE`"
        X="`echo "$X" | sed 's/^ *//;s/  */ /g'`"
        if [ "$X" != "$Y" ]; then
                echo "$FILE" >>BAD
                echo "BAD"
                return
        fi
        echo "$FILE" >>OK
        echo "OK"
}

echo
echo "Checking sources in /etc/apt/sources.list:"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo
(echo "You should take care to ensure that the distributions you're downloading"
echo "are the ones you think you are downloading, and that they are as up to"
echo "date as you would expect (testing and unstable should be no more than"
echo "two or three days out of date, stable-updates no more than a few weeks"
echo "or a month)."
) | fmt
echo

cat /etc/apt/sources.list | 
  sed 's/^ *//' | grep '^[^#]' |
  while read ty url dist comps; do
        if [ "${url%%:*}" = "http" -o "${url%%:*}" = "ftp" ]; then
                baseurl="${url#*://}"
        else
                continue
        fi
        echo "Source: ${ty} ${url} ${dist} ${comps}"
        
        rm -f Release Release.gpg
        wget -q -O Release "${url}/dists/${dist}/Release"

        if ! grep -q '^' Release; then
                echo "  * NO TOP-LEVEL Release FILE"
        else
                origline=`sed -n 's/^Origin: *//p' Release | head -1`
                lablline=`sed -n 's/^Label: *//p' Release | head -1`
                suitline=`sed -n 's/^Suite: *//p' Release | head -1`
                codeline=`sed -n 's/^Codename: *//p' Release | head -1`
                dateline=`grep "^Date:" Release | head -1`
                dscrline=`grep "^Description:" Release | head -1`
                echo "  o Origin: $origline/$lablline"
                echo "  o Suite: $suitline/$codeline"
                echo "  o $dateline"
                echo "  o $dscrline"

                if [ "${dist%%/*}" != "$suitline" -a "${dist%%/*}" != "$codeline" ]; then
                        echo "  * WARNING: asked for $dist, got $suitline/$codeline"
                fi

                wget -q -O Release.gpg "${url}/dists/${dist}/Release.gpg"
                sigline="`gpgv --status-fd 3 Release.gpg Release 3>&1 >/dev/null 2>&1 | sed -n "s/^\[GNUPG:\] GOODSIG [0-9A-Fa-f]* //p"`"
                if [ "$sigline" ]; then
                        echo "  o Signed by: $sigline"
                else
                        echo "  * NO VALID SIGNATURE"
                        >Release
                fi
        fi
        okaycomps=""
        for comp in $comps; do
                if [ "$ty" = "deb" ]; then
                        X=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/binary-${arch}/Release" | sed 's,//*,_,g'`" "${comp}/binary-${arch}/Release")
                        Y=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/binary-${arch}/Packages" | sed 's,//*,_,g'`" "${comp}/binary-${arch}/Packages")
                        if [ "$X $Y" = "OK OK" ]; then
                                okaycomps="$okaycomps $comp"
                        else
                                echo "  * PROBLEMS WITH $comp ($X, $Y)"
                        fi
                elif [ "$ty" = "deb-src" ]; then
                        X=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/source/Release" | sed 's,//*,_,g'`" "${comp}/source/Release")
                        Y=$(checkit "`echo "${baseurl}/dists/${dist}/${comp}/source/Sources" | sed 's,//*,_,g'`" "${comp}/source/Sources")
                        if [ "$X $Y" = "OK OK" ]; then
                                okaycomps="$okaycomps $comp"
                        else
                                echo "  * PROBLEMS WITH component $comp ($X, $Y)"
                        fi
                fi
        done
        [ "$okaycomps" = "" ] || echo "  o Okay:$okaycomps"
        echo
  done

echo "Results"
echo "~~~~~~~"
echo

allokay=true

cd /tmp/apt-release-check
diff <(cat BAD MISSING NOCHECK OK | sort) <(cd /var/lib/apt/lists && find . -type f -maxdepth 1 | sed 's,^\./,,g' | grep '_' | sort) | sed -n 's/^> //p' >UNVALIDATED

cd /tmp/apt-release-check
if grep -q ^ UNVALIDATED; then
    allokay=false
    (echo "The following files in /var/lib/apt/lists have not been validated."
    echo "This could turn out to be a harmless indication that this script"
    echo "is buggy or out of date, or it could let trojaned packages get onto"
    echo "your system."
    ) | fmt
    echo
    sed 's/^/    /' < UNVALIDATED
    echo
fi

if grep -q ^ BAD; then
    allokay=false
    (echo "The contents of the following files in /var/lib/apt/lists does not"
    echo "match what was expected. This may mean these sources are out of date,"
    echo "that the archive is having problems, or that someone is actively"
    echo "using your mirror to distribute trojans."
    if am_root; then 
        echo "The files have been renamed to have the extension .FAILED and"
        echo "will be ignored by apt."
        cat BAD | while read a; do
            mv /var/lib/apt/lists/$a /var/lib/apt/lists/${a}.FAILED
        done
    fi) | fmt
    echo
    sed 's/^/    /' < BAD
    echo
fi

if grep -q ^ MISSING; then
    allokay=false
    (echo "The following files from /var/lib/apt/lists were missing. This"
    echo "may cause you to miss out on updates to some vulnerable packages."
    ) | fmt
    echo
    sed 's/^/    /' < MISSING
    echo
fi

if grep -q ^ NOCHECK; then
    allokay=false
    (echo "The contents of the following files in /var/lib/apt/lists could not"
    echo "be validated due to the lack of a signed Release file, or the lack"
    echo "of an appropriate entry in a signed Release file. This probably"
    echo "means that the maintainers of these sources are slack, but may mean"
    echo "these sources are being actively used to distribute trojans."
    if am_root; then 
        echo "The files have been renamed to have the extension .FAILED and"
        echo "will be ignored by apt."
        cat NOCHECK | while read a; do
            mv /var/lib/apt/lists/$a /var/lib/apt/lists/${a}.FAILED
        done
    fi) | fmt
    echo
    sed 's/^/    /' < NOCHECK
    echo
fi

if $allokay; then
    echo 'Everything seems okay!'
    echo
fi

rm -rf /tmp/apt-release-check
</example>

<chapt>Sicherheits Tools in Debian

<p>FIXME: More content needed.
<p>Debian stellt ausserdem einige Sicherheits Tools zur Verf&uuml;gung,
die eine Debian Maschine passend zu Test-Zwecken erweitern. Manche von
Ihnen werden zur Verf&uuml;gung gestellt, wenn Sie das Paket
<package>harden-remoteaudit</package> installieren.

<sect id="vuln-asses">Tools zur Fern-Pr&uuml;fung der Verwundbarkeit

<p>Die Werkzeuge um Fern-Pr&uuml;fungen der Verwundbarkeit
durchzuf&uuml;hren unter Debian sind:
<list>
<item>nessus
<item>raccess
<item>whisker 
<item>nikto (whisker Ersatz)
<item>bass (non-free)
<item>satan (non-free)
<!-- currently uploaded but not included
<item>saint (non-free)
-->
</list>

<p>Das weitaus vollst&auml;ndigste und aktuellste Tool ist
<package>nessus</package>, welcehs aus einem Client
(<package>nessus</package>), als graphische Benutzungsschnittstelle, und
einem Server (<package>nessusd</package>), der die programmierten
Attacken startet, besteht. Nessus kennt verschiedene
Fern-Verwundbarkeiten f&uuml;r einige Systeme, einschliesslich Netzwerk
Ger&auml;ten, FTP-Servern, WWW-Server, usw. Die letzte Releases sind
sogar in der Lage, eine Web-Seite zu analysieren und zu versuchen,
interaktive Inhalte, die zu einem Angriff genutzt werden k&ouml;nnen, zu
entdecken. Es gibt auch Java und Win32 Clients (die nicht in Debian
enthalten sind), die benutzt werden k&ouml;nnen, den Server zu
kontrollieren.

<p><package>Whisker</package> ist ein Web-Basierender
Gef&auml;hrungs-Absch&auml;tzungs Scanner, der auch einige anti-IDS
Taktiken kennt (die meisten davon sind keine <em>Anti-IDS</em> Taktiken
mehr). Es ist einer der besten cgi-Scanner verf&uuml;gbar, der WWW-Server
erkennen und nur bestimmte Angriffe gegen Ihn starten kann. Die Datenbank
die zum scannen benutzt wird, kann sehr leicht ge&auml;ndert werden, um
neue Informationen einzuf&uuml;gen.

<p><package>Bass</package> (Bulk Auditing Security Scanner) 
und <package>Satan</package> (Security Auditing Tool for Analysing Networks)
m&uuml;ssen eher als "Beweis des Konzeptes" Programme gesehen werden,
statt als Tools, die Sie w&auml;hrend einer Pr&uuml;fung nutzen sollten.
Beide sind eher veraltet und werden nicht auf dem aktuellen Stand
gehalten. Wie auch immer: SATAN war das erste Tool, dass eine
Gefahrenabsch&auml;tzung auf eine einfache Art (GUI) zur Verf&uuml;gung
stellte, und Bass ist immer noch ein hoch performantes
Pr&uuml;f-Werkzeug.

<sect>Netzwerk-Scan Tools

<p>Debian bietet Ihnen einige Tools zum scannen von Hosts (aber nicht zur
Gefahrenabsch&auml;tzung). Diese Tools sind werden in manchen F&auml;llen
von Gefahrenabsch&auml;tzungs-Scanner zu einem ersten "Angriff" gegen
entfernte Rechner genutzt, um festzustellen, welche Services angeboten
werden. Debian bietet derzeit:
<list>
<item>nmap
<item>xprobe
<item>queso
<item>knocker
<item>hping2
<item>isic
<item>icmpush
<item>nbtscan
</list>

<p>W&auml;hrend <package>queso</package> und <package>xprobe</package>
lediglich aus der Ferne das Betriebssystem erkennen k&ouml;nnen (indem
Sie TCP/IP Fingerabdr&uuml;cke benutzen), machen <package>nmap</package>
und <package>knocker</package> beides: Das Betriebssystem erkennen und
die Ports eines entfernt stehenden Rechners scannen. Andererseits
k&ouml;nnen <package>hping2</package> und <package>icmpush</package>
f&uuml;r ICMP Angriffs Techniken benutzt werden.

<p>Speziell f&uuml;r Netbios Netzwerke entworfen kann
<package>nbtscan</package> benutzt werden, um IP-Netzwerke zu scannen und
diverse Informationen von SMB Servern zu ermitteln, einschliesslich:
Usernamen, Netzwerknamen, MAC-Adressen...

<sect>Interne Pr&uuml;fungen

<p>Derzeit kann man lediglich das <package>tiger</package> Tool benutzt
werden, um interne Pr&uuml;fungen (auch "white box" genannt) eines
Rechners vorzunehmen, um festzustellen, ob das Dateisystem richtig
aufgesetzt ist, welche Prozesse auf dem Rechner horchen, usw.

<sect>Testen von Quellcode

<p>Debian bietet zwei Pakete, die C/C++ Quellcode pr&uuml;fen und
Programmierfehler, die zu m&ouml;glichen Sicherheits-M&auml;ngeln
f&uuml;hren k&ouml;nnen, findet:
<list>
<item>flawfinder
<item>rats
</list>

<sect>Virtual Private Networks (virtuelle, private Netzwerke)

<p>FIXME: Content needed

<p>Debian bietet einige Pakete, die zum aufsetzen von
verschl&uuml;sselten, virtuellen, privaten Netzwerken benutzt werden
k&ouml;nnen:

<list>

<item><package>vtun</package>
<item><package>tunnelv</package>
<item><package>cipe</package>
<item><package>vpnd</package>
<item><package>tinc</package>
<item><package>secvpn</package>
<item><package>pptp</package>
<item><package>freeswan</package>

</list>

<p>Das FreeSWAN Paket ist wahrscheinlich die beste Wahl, da es mit so
ziemlich allen zusammenarbeiten kann, dass das IP security protocol
(IPsec RFC 2411) benutzt, aber die anderen Pakete k&ouml;nnen Ihnen
helfen, auf die Schnelle einen Tunnel aufzusetzen. PPTP iste in Microsoft
Protokoll f&uuml;r VPN. Es wird unter Linux unterst&uuml;tzt, aber es
einige schwere Sicherheits Probleme sind bekannt.

<p>F&uuml;r mehr Informationen lesen Sie <url
id="http://www.linuxdoc.org/HOWTO/VPN-Masquerade-HOWTO.html"name="VPN-Masquerade
HOWTO"> (&uuml;ber IPsec und PPTP) <url
id="http://www.linuxdoc.org/HOWTO/VPN-HOWTO.html"name="VPN HOWTO">
(&uuml;ber PPP &uuml;ber SSH), und <url
id="http://www.linuxdoc.org/HOWTO/mini/Cipe+Masq.html" name="Cipe
mini-HOWTO">, <url
id="http://www.linuxdoc.org/HOWTO/mini/ppp-ssh/index.html"name="PPP and
SSH mini-HOWTO">.


<sect>&Ouml;ffentliche Schl&uuml;ssel Infrastrukturen (Public Key
Infraestructure (PKI))

<p>Wenn Sie &uuml;ber eine PKI nachdenken, sehen Sie sich mit einer
breiten Pallete von Tools konfrontiert:

<list>
<item>Eine Zertifikat Autorit&auml;t (CA), die Zertifikate ausgeben und
unter einer bestimmten Hierarchie arbeiten kann

<item>Ein Verzeichnis. dass die &ouml;ffentlichen Zertifikate
enth&auml;lt

<item>Eine Datenbank, um die Zertifikat Widerrufe zu verwalten

<item>Ger&auml;te, die mit der CA zusammenarbeiten, um smarcards/usb
Token/wasauchimmer zu erzeugen, um Zertifikate sicher zu speichern

<item>Applikationen, die von einer CA ausgegeben Zertifikate benutzen
k&ouml;nnen, um verschl&uuml;sselte Kommikation zu etablieren, und
bestimmte Zertifikate gegen Widerruflisten pr&uuml;fen k&ouml;nnen (zur
authentifikation und full Single Sign On solutions)

<item>Eine Zeitstempel Autorit&auml;t, um Dokumente digital zu signieren

<item>Eine Verwaltungs-Konsole, von der aus dies alles vern&uuml;nftig
benutzt werden kann (Erstellung von Zertifikaten, Kontrollieren von
Widerruflisten, usw...)

</list>

<p>Sie k&ouml;nnen einige Software aus Debian GNU/Linux hierf&uuml;r
benutzen, einschliesslich openSSL (zur Zertifikat Erstellung), OpenLDAP
(f&uuml;r ein Verzeichnis um die Zertifikate zu speichern), gnupg und
freeswan (mit X.509 Unterst&uuml;tzung). Jedoch stellt dieses
Betriebssystem (zur Woody Release 3.0) keine der frei verf&uuml;gbaren
Certificate Authorities wie zum Beispiel pyCA <url
id="http://www.openca.org" name="OpenCA"> oder die CA Beispiele von
OpenSSL zur Verf&uuml;gung. F&uuml;r mehr Informationen lesen Sie <url
id="http://ospkibook.sourceforge.net/" name="Open PKI book">.

<sect>SSL Infrastruktur

<p>Debian stellt einige SSL-Zertifikate innerhalb der Distribution zur
Verf&uuml;gung, so dass Sie sie lokal installieren k&ouml;nnen. SSL
Zertifikate werden in <package>ca-certificates</package> weiter verteilt.
Diese Paket stellt eine zentrale Sammelstelle f&uuml;r Zertifikate dar,
die an Debian &uuml;bermittelt und vom Paket Verwalter gebilligt (das
heisst, verifiziert) wurden.

<p>FIXME: read debian-devel to see if there was something added to this.


<sect>Anti-Viren Tools
<p>Es gibt nicht sehr viele Anti-Viren Tools in Debian, wahrscheinlich
weil GNU/Linux User zur Zeit nicht so sehr von Viren bel&auml;stigt
werden. Es gab dennoch W&uuml;rmer und Viren f&uuml;r GNU/Linux, auch
wenn es (bisher) keinen Virus gab, der sich im freien weit &uuml;ber
irgendeine Debian Distribution verbreitet hat. In jedem Fall m&ouml;chten
Administratoren vielleich Anti-Viren Gateways aufbauen, oder sich selbst
gegen Viren sch&uuml;tzen.

<p>Debian bietet derzeit die folgenden Tools zum erstellen von Anti-Viren
Umgebungen:

<list>
<item><url id="http://packages.debian.org/sanitizer" name="sanitizer">,
ein Tool, das dazu benutzt werden Emails von Procmail zu filtern und
Viren zu entfernen

<item><url id="http://packages.debian.org/amavis-postfix"
name="amavis-postfix">, ein Skript, das eine Schnittstelle vom
Mail-Transport-Agent zu einem oder mehreren Viren-Scannern anbieten
(dieses Paket enth&auml;lt die Postfix Version).
</list>

<p>Wie Sie sehen enth&auml;lt Debian selbst derzeit keine Anti-Viren
Software. Es gibt jedoch freie Anti-Viren Projekte, die (in der Zukunft)
in Debian einfliessen k&ouml;nnten:
<url id="http://sourceforge.net/projects/openantivirus/" name="openantivirus">
und 
<url id="http://sourceforge.net/projects/jvirus/" name="jvirus"> (dies
ist weniger Wahrscheinlich, da es komplett auf Java basiert)
Ausserdem wird Debian nie kommerzielle Anti-Viren Software enthalten, wie
die folgende:
<url id="http://www.pandasoftware.com/com/linux/linux.asp" name="Panda Antivirus">,
<url id="http://www.nai.com/naicommon/buy-try/try/products-evals.asp" name="NAI Netshield (uvscan)">,
<url id="http://www.sophos.com/" name="Sophos Sweep">,
<url id="http://www.antivirus.com/products/" name="TrendMicro Interscan">,
<url id="http://www.ravantivirus.com" name="RAV">....

Mehr Links finden Sie unter <url
id="http://www.computer-networking.de/~link/security/av-linux_e.txt"
name="Linux anti-virus software mini-FAQ">.

<p>Mehr Informationen &uuml;ber das Ausetzen eines Viren Erkennungs
Systems finden Sie in dem Artikel von Dave Jones
<url id="http://www.linuxjournal.com/article.php?sid=4882"
name="Building an E-mail Virus Detection System for Your Network">.

<chapt>Vor einer Komprimitierung

<sect id="intrusion-detect">Aufsetzen einer Eindringlingserkennung

<p>Debian enth&auml;lt verschiedene Tools zur Erkennung von
Eindringlingen, die Sie vielleicht dazu benutzen wollen, Ihr lokales
System zu verteidigen (wenn Sie wirklich paranoid sind oder Ihr System
wirklich kritische ist) or um andere Systeme im gleichen Netzwerk zu
verteidigen.

<p>Beachten Sie immer, dass Sie, um Ihre System-Sicherheit mit einerm
dieser Tools wirklich zu verbessern, einen Alarm-und-Antwort-Mechanismus
brauchen, also benutzen Sie keinen Eindringlings-Erkennung, wenn Sie
niemanden akarmieren werden (d.H. verschwenden Sie nicht Ihre Zeit damit,
Dinge zu konfigurieren, die Sie sp&auml;ter nicht benutzen werden).

<p>Die meisten Eindringlings Erkennungs Tolls werden entweder auf Syslog
protokollieren oder Emails, &uuml;ber einen bestimmten erkannten Angriff,
an den Root-User senden (die meisten k&ouml;nnen umkonfiguriert werden,
um stattdessen einem anderen User Emails zu schicken). Ein Administrator
muss sie passend konfigurieren, so dass falsche Positivmeldungen keinen
Alarme ausl&ouml;sen, und so diesen Alarmen die notwendige Aufmerksamkeit
geschenkt wird. Alarme k&ouml;nnen auf einen laufenden Angriff hindeuten
und w&auml;ren - sagen wir mal einen Tag - sp&auml;ter nicht mehr
n&uuml;tzlich, da der Angriff dann bereits erfolgreich beendet worden
sein kann. Stellen Sie also sicher, dass es eine passende Regelung
&uuml;ber die Behandlung von Alarmen gibt, und das technische Masnahmen
zur Handhabung statt finden.

<p>Eine Interessante Quelle f&uuml;r Information ist
<url id="http://www.cert.org/tech_tips/intruder_detection_checklist.html"
name="CERT's Intrusion Detection Checklist">

<sect1>Netzwerk basierende Eindringlings Erkennung

<p><package>Snort</package> ist ein flexibler Packet Schn&uuml;ffler oder
logger, der Angriffe durch nutzen einer Angriffs-Signatur-Bibliothek
erkennt. Es erkennt eine breite Pallete von Angriffen und Tests, wie zum
Beispiel Speicher-&Uuml;berl&auml;ufe, stealth Port scans, CGI Angriffe,
SMB Tests und vieles mehr. Dies iste in Tool, das auf jedem Router
installiert werden sollte, um ein Auge auf Ihrem Netzwerk zu haben.
Installieren Sie es einfach mit <tt>apt-get install snort</tt>, folgen
Sie den Fragen und beobachten Sie die logs.

<p>Debians Snort kommt mit vielen eingeschalteten Sicherheits Checks, die
Sie vielleicht haben m&ouml;chten, jedoch sollten Sie das Setup anpassen,
um bestimmte Services auf Ihrem System zu ber&uuml;cksichten. Sie
m&ouml;chten vielleicht auch zus&auml;tzliche Teste speziell f&uuml;r
Ihre Services nutzen.

<p>Sie k&ouml;nnen <prgn>snort</prgn> sowohl dazu benutzen, eine
Netzwerk-Eindringlings-Erkennung f&uuml;r viele Hosts in Ihrem Netzwerk
zu etablieren, als auch um Angriffe gegen Ihren eigenen Host zu erkennen.

<p>Es gibt noch andere Tools, die dazu benutzt werden k&ouml;nnen,
Netzwerk Angriffe zu erkennen (sogar einfacherere).
<package>Portsentry</package> ist ein anderes interessantes Paket, dass
Sie warnen kann, wenn jemand Ihre Seite scannt. Andere Tools, wie
<package>ippl</package> oder <package>iplogger</package> erkennen
ausserdem bestimmte IP (TCP und ICMP) Angriffe, auch wenn sie keine
fortgeschrittenen Techniken zur Erkennung von Netzwerk Angriffen haben
(was snort kann).

<p>Sie k&ouml;nnen jedes dieser Tools mit dem <prgn>idswakeup</prgn>
Programm testen. Hierbei handelt es sich um einen Falsch-Positv
Generator, der NIDS mit einer Auswahl der &uuml;blichen unter Debian
verf&uuml;gbaren Angriffs-Signaturen alarmiert.

<sect1>Host basierende Erkennung 

<p><package>Tiger</package> ist ein bew&auml;hrtes Eindringlings
Erkennungs Toools, dass seit der Woody Distribution auf Debian portiert
wurde. Tiger bietet Tests von allgemein &uuml;blichen Dingen, in bezug
auf Einbr&uuml;che, Tests der Passwort-St&auml;rje, Dateisystem Probleme,
kommunizierende Prozesse.... Die Debian Version umfasst neue, Debian
spezifische Tests: md5-Summen von vorhandenen binaries, und Test auf
installierte und verwundbare Pakete. Die standard Installation l&auml;sst
<prgn>tiger</prgn> jeden Tag einmal laufen und einen Report erstellen,
der an den Superuser geschickt wird. Die erstellten Reports k&ouml;nnen
Informationen zu einer gegl&uuml;ckten Komprimitierung geben.

<p>Protokoll-Analyse Tools, wie zum Beispiel <package>logcheck</package>
k&ouml;nnen zus&auml;tzliche benutzt werden, wenn sie angepasst wurden,
um Eindring-Versuche zu erkennen. Siehe <ref id="custom-logcheck">.

<p>Ausserdem kann jeder der Dateisystem-Integrit&auml;ts-Checker (siehe
<ref id="check-integ">) k&ouml;nnen sehr n&uuml;tzlich sein, um Anomalien
in einer abgesicherten Umgebung zu erkennen. Ein erfolgreicher
Eindringling wird mit h&ouml;chster Sicherheit Dateien auf dem lokalen
Dateisystem ver&ouml;ndern, um die lokalen Sicherheits Regelungen zu
umgehen, Trojaner zu installieren, eigene User zu erstellen... solche
Sachen k&ouml;nnen mit ihnen erkannt werden.


<sect id="kernel-patches">n&uuml;tzliche Kernel-Patches

<p>FIXME: This section needs to cover how these specific patches
can be installed in Debian using the kernel-2.x.x-patch-XXX packages.
</p>

<p>Es gibt einige Kernel-Patches, die die System-Sicherheit signifikant
erh&ouml;hen. Hier sind einige davon aufgez&auml;hlt:

<list>

<item>OpenWall Patch von Solar Designer. Sinnvoll f&uuml;r
Einschr&auml;nkungen auf Kernel-Ebene, zum Beispiel bei Links, FIFOs in
<file>/tmp</file>, Einschr&auml;nkungen von <file>/proc</file>, die
Behandlung spezieller Datei Deskriptoren, nicht-ausf&uuml;hrbarer
Teil des User-Stack und noch mehr.

Homepage: <url name="http://www.openwall.com/linux/" id="http://www.openwall.com/linux/">

<item><em>LIDS &mdash; Linux intrusion detection system von Huagang Xie &amp;
Philippe Biondi</em>.  Dieser Patch macht es einfacher, ein sicheres
Linux System zu erstellen. Sie k&ouml;nnen jeden Prozess
einschr&auml;nken, ihm bestimmte Rechte zum lesen und Schreiben von
Dateien gew&auml;gren, oder die F&auml;higkeit Dateien zu lesen ganz
entfernen. Weiterhin k&ouml;nnen Sie bestimmte einem Prozess auf
Ressourcen beschr&auml;nken. Auch wenn er sich noch in der Beta-Phase
befindet, ist er fast schon ein Muss f&uuml;r den paranoiden
System-Administrator.

Homepage: <url name="http://www.lids.org" id="http://www.lids.org">

<item><em>POSIX Access Control Lists (ACLs) for Linux</em> Dieser Patch
f&uuml;hrt Listen zur Zugangs Konrtolle (Access Control Lists (ACLs)),
eine fortgeschrittene Methoden die Zugriffe auf Dateien zu
beschr&auml;nken, in den Linux Kernel ein.

Homepage: <url name="http://acl.bestbits.at/" id="http://acl.bestbits.at/">

<item><em>Linux trustees</em> Dieser Patch bringt ein anst&auml;ndig
erweitertes Rechte-System f&uuml;r Ihrem Linux Kernel. All die Objekte
werden im Kernel-Speicher abgelegt, was eine schnelles nachschlagen aller
Zugriffsrechte erlaubt.

Homepage:  <url name="http://trustees.sourceforge.net/" id="http://trustees.sourceforge.net/">

<item><em>International kernel patch</em>  Dies ist ein
Kryptographie-Patch f&uuml;r den Kernel, demzufolge m&uuml;ssen Sie die
jeweiligen Richtlinien des Landes &uuml;ber Verschl&uuml;sselung
beachten. Er stellt die grundlegenden Funktionen f&uuml;r
verschl&uuml;sselte Dateisysteme zur Verf&uuml;gung.

Homepage: <url name="http://www.kerneli.org" id="http://www.kerneli.org">

<item><em>SubDomain</em> Eine Kernel Erweiterung um sicherere und
einfacher bedienbare Chroot-Umgebungen aufzusetzen. Sie k&ouml;nnen alle
Dateien, die ein gechrooteter Service benl&ouml;tigt, manuell angeben,
und m&uuml;ssen so die Services nicht statisch compilieren.

Homepage: <url name="http://www.immunix.org/subdomain.html" id="http://www.immunix.org/subdomain.html">

<item><em>UserIPAcct</em> Eigentlich nicht wirklich Sicherheits relevant
erlaubt dieser Patch es Ihnen, Quotas f&uuml;r den Traffic auf Ihrem
Server pro User einzuf&uuml;hren. Zus&auml;tzlich k&ouml;nnen Sie
Statistiken &uuml;ber den Traffic eines Users erstellen.

Homepage: <url id="http://ramses.smeyers.be/useripacct">.

<item><em>FreeS/WAN</em> Wenn Sie unter Linux IPSec benutzen wollen,
ben&ouml;tigen Sie diesen Patch. Sie k&ouml;nnen dann leicht VPNs
erstellen, sogar zu Windows-Machinen, da IPSec ein gemeinsamer Standard
ist.

Homepage: <url id="http://www.freeswan.org">

</list>

<sect>Vermeiden von Root-Kits
<p>

<sect1 id="LKM">LKM - Ladbare Kernel-Module

<p>LKM (Loadable Kernel Modules) sind Dateien, die nachladbare Teile des
Kernels enthalten. Sie werden dynamisch in den Kernel geladen und
f&uuml;hren bestimmte Aufgaben aus. Unter GNU/Linux werden sie dazu
benutzt, die funktionalit&auml;t des Kernels zu erweitern. Wenn Sie LKMs
benutzen, geniesen Sie einige Vorteile. Wie wir gesehen haben k&ouml;nnen
Sie dynamisch nachgeladen werden, ohne dass der Kernel neu compiliert
werden muss, Sie k&ouml;nnen bestimmte Ger&auml;te-Treiber (oder
Dateisysteme) und Treiber f&uuml;r andere Hardware, wie Sound- oder
Netzwerkkarten, enthalten. Aber manche Cracker k&ouml;nnen LKMs f&uuml;r
Root-Kits (knark oder adore) benutzen, um auf GNU/Linux Systemen
Hintert&uuml;ren zu installieren.

<p>LKM Root-Kits k&ouml;nnen Prozesse, Dateien, Verzeichnisse und sogar
Verbindungen verstecken, ohne den Quellcode irgendeines Binaries
ver&auml;ndern zu m&uuml;ssen. Zum Beispiel kann <prgn>ps</prgn> Prozess
Informationen aus <file>/proc</file> beziehen, ein b&ouml;sartiges LKW
kann den Kernel untergraben, so dass er einen bestimmten Prozess vor dem
procfs veheimlicht. So kann noch nicht einmal eine selbsterstellte,
unangetastete Kopie des <prgn>ps</prgn> Binary alle Prozess Informationen
korrekt auflisten.

<sect1>Erkennen von Root-Kits

<p>Die Sucharbeit kann einfach und schmerzloss sein, oder schwierig und
erm&uuml;dend, ganz abh&auml;ngig von der Massnahme, die Sie benutzen. Es
gibt zwei Verteidigungsmassnahmen zur Sicherheit bei LKMs, die proaktive,
und die reaktive.

<sect2>Proaktive Verteidigung

<p>Der Vorteil dieser Verteidigung ist, dass hier verhindert wird, dass
einige LKM Root-Kits dem System schaden. Die meist genutzte proaktive
Verteidigung ist es, <em>das Ziel zuerst zu erreichen</em>, also ein LKM
zu laden, das dazu da ist, das System vor Schaden durch ein
b&ouml;sswilliges LKM zu sch&uuml;tzen. Eine andere Massnahme ist es, dem
Kernel F&auml;higkeiten zu entziehen, und so das System sicherer zu
machen. Zum Beispiel k&ouml;nnen Sie dem Kernel die F&auml;higkeit
entziehen, Kernel-Module zu laden oder zu entfernen.

<p>Sie k&ouml;nnen auf Debian Systeme einige Pakete finden, die
Proaktive-Tools entha&ouml;lten:

<list>
<item> <package>kernel-patch-2.4-lsm</package> - LSM ist das Linux Security
Modules framework

<item> <package>lcap</package> - Eine Benutzerfreundliche Schnittstelle,
um dem Kernel <em>F&auml;higkeiten</em> zu entziehen (Kernel-basierte
Zugriffs-Kontrolle), um das System sicherer zu machen. F&uuml;hren Sie
<tt>lcap CAP_SYS_MODULE</tt> 
<footnote>
Es gibt &uuml;ber 28 F&auml;higkeiten einschliesslich:
<tt>CAP_BSET</tt>,
<tt>CAP_CHOWN</tt>,
<tt>CAP_FOWNER</tt>,
<tt>CAP_FSETID</tt>,
<tt>CAP_FS_MASK</tt>,
<tt>CAP_FULL_SET</tt>,
<tt>CAP_INIT_EFF_SET</tt>,
<tt>CAP_INIT_INH_SET</tt>,
<tt>CAP_IPC_LOCK</tt>,
<tt>CAP_IPC_OWNER</tt>,
<tt>CAP_KILL</tt>,
<tt>CAP_LEASE</tt>,
<tt>CAP_LINUX_IMMUTABLE</tt>,
<tt>CAP_MKNOD</tt>,
<tt>CAP_NET_ADMIN</tt>,
<tt>CAP_NET_BIND_SERVICE</tt>,
<tt>CAP_NET_RAW</tt>,
<tt>CAP_SETGID</tt>, 
<tt>CAP_SETPCAP</tt>,
<tt>CAP_SETUID</tt>,
<tt>CAP_SYS_ADMIN</tt>,
<tt>CAP_SYS_BOOT</tt>,
<tt>CAP_SYS_CHROOT</tt>,
<tt>CAP_SYS_MODULE</tt>,
<tt>CAP_SYS_NICE</tt>,
<tt>CAP_SYS_PACCT</tt>,
<tt>CAP_SYS_PTRACE</tt>,
<tt>CAP_SYS_RAWIO</tt>,
<tt>CAP_SYS_RESOURCE</tt>,
<tt>CAP_SYS_TIME</tt>, and
<tt>CAP_SYS_TTY_CONFIG</tt>. Alle k&ouml;nnen aktiviert oder deaktiviert
werden, um Ihren Kernel abzusichern.
</footnote>
aus, um sogar als Root-User keine Module mehr laden zu k&ouml;nnen.
<footnote>
Um dies tun zu k&ouml;nnen, m&uuml;ssen Sie nicht <package>lcap</package>
installieren, aber es ist so einfacher, als mit der Hand
<file>/proc/sys/kernel/cap-bound</file> anzupassen.
</footnote>
</list>

<p>Wenn Sie diese vielen M&ouml;glichkeiten auf Ihrem GNU/Linux System
nicht brauche, m&ouml;chten Sie vielleicht die Unterst&uuml;tzung
f&uuml;r ladbare Module w&auml;hrend der Kernel Konfiguration abschalten.
So werden LKM Root-Kits vermieden, aber Sie k&ouml;nnen nicht mehr
modulare Kernel benutzen. Beachten Sie auch, dass durchd as abschalten
der nachladbaren Module der Kernel &uuml;berladen werden kann. Manchmal
ist dies nicht notwendig.

<p>Um die Unterst&uuml;tzung f&uuml;r nachladbare Module abzuschalten,
setzen Sie einfach CONFIG_MODULES=n in <file>.config</file>.

<sect2>Reaktive Verteidigung

<p>Der Vorteil reaktiver Verteidigung ist, dass is die System Resourcen
weniger &uuml;berl&auml;dt. Sie funktioniert durch vergleichen Tabelle
f&uuml;r System-Aufrufe mit einer bekanntermassen sauberen Kopie in einer
Date (System.map). Der augenscheinliche Nachteil ist, dass der
Systemadministrator erst davon erf&auml;hrt, wenn das System bereits
kompromitiert wurde.

<p>Die Entdeckung von Root-Kits vollbringt unter Debian
<package>chkrootkit</package>. Das Programm <url name="Chkrootkit"
id="http://www.chkrootkit.org"> pr&uuml;ft Anzeichen von Root-Kits auf
dem lokalen System, und stellt fest ob der Computer mit einem Root-Kit
infiziert ist.

<p>Sie k&ouml;nnen auch <url name="KSTAT"
id="http://www.s0ftpj.org/en/site.html"> (Kernel Security Therapy Anti
Trolls) von S0ftproject group benutzen. KSTAT pr&uuml;ft den Bereich des
Kernel-Speichers (<file>/dev/kmem</file>) auf Informationen &uuml;ber den
Ziel Host, einschliesslich der Installation von ladbaren
Kernel-Modulen.

<P>FIXME: Add info on how to compile the kernel w/o lkm support?


<sect>geniale/paranoide Ideen &mdash; was Sie tun k&ouml;nnen

<p>Dies ist wahrscheinlich der instabilste und lustigste Abschnitt, da
ich hoffe, dass manche der "Wow, das klingt verr&uuml;ckt" Ideen
realisiert werden. Nachfolgend einer Liste von ein paar Ideen &mdash;
abh&auml;ngig von Ihrem Standpunkt aus k&ouml;nnen Sie sie f&uuml;r
genial, paranoid, verr&uuml;ckt oder sicher halten &mdash; um Ihre
Sicherheit schnell zu erh&ouml;hen. Unbesch&auml;digt werden Sie sie aber
nicht &uuml;berstehen.

<list>
<item>Mit PAM herumspielen. Wie in einem phrack 56 Artikel geschrieben:
Das sch&ouml;ne an PAM ist, dass "Ihrer Fantasie keine Grenzen
gesetzt sind." Das stimmt. Stellen Sie sich vor, Root kann sich nur mit
einen Fingerabdruck, oder Augenscan oder einer Kryptocard einloggen
(Warum habe ich hier nur "oder" und nicht "und" gesagt?)
and not AND here?).

<item>Faschistisches Logging. Ich w&uuml;rde sagen, dass alles, was wir
bisher &uuml;ber Logging besprochen haben, unter "weiches Loggen"
f&auml;llt. Wenn Sie echtes Logging betreiben wollen, besorgen Sie sich
einen Drucker mit Endlos-Papier, und loggen Sie alles dauerhaft, indem
Sie es drucken. H&ouml;rt sich lustig an, ist aber zuverl&auml;ssig und
kann nicht entfernt werden.

<item>CD Distribution. Diese Idee ist sehr leicht zu realisieren und
bewirkt ganz gute Sicherheit. Erstellen Sie eine abgesicherte Debian
Distribution, mit passenden Firewall-Regeln, erstellen Sie ein ISO-Image
und brennen Sie es auf CD. Machen Sie die CD bootbar. Dies ist eine nur
lesbare Distribution mit etwa 600 MB Platz f&uuml;r Services, und es ist
unm&ouml;glich f&uuml;r einen Eindringling Schreibzugriff auf dieses
System zu erhalten. Stellen Sie lediglich Sicher, dass alle Daten, die
geschrieben werden sollen, &uuml;ber Netz gesichert werden. So kann der
Eindringling jedenfalls nicht die Firewall-Regeln oder
Routing-Eintr&auml;ge &auml;ndern, oder eigene Daemonen starten
(nat&uuml;rlich kann er es, aber booten Sie neu, und er muss sich erneut
in Ihr System hacken, um die &Auml;nderungen vorzunehmen).

<item>Schalten Sie die Modul-F&auml;higkeiten des Kernels ab. Wenn Sie
die Nutzung von Kernel-Modulen w&auml;hrend der Kernel-Kompilierung
abschalten, werden viele Kernel basierende Hintert&uuml;ren nicht
einsetzbar, da die meisten von ihnen darauf basieren, ein modifiziertes
Kernel Modul zu installieren.

<item>Loggen &uuml;ber ein serielles Kabel (von Gaby Schilders). So lange
Server immernoch serielle Schnittstellen haben: Stellen Sie sich vor, Sie
h&auml;tten eien Maschine als Log-Maschine, vom Netz abgeschnitten. In
der Mitte einen Multiplexer f&uuml;r serielle Schnittstellen (zyklisch
oder so). Jetzt sollen alle Ihre Server &uuml;ber ihre seriellen
Schnittstellen loggen. Einfach nur hinschreiben. Die Log-Maschine
akzeptiert nur einfachen Text als Eingabe auf seiner seriellen
Schnittstelle und schreibt es lediglich in eine Log-Datei. Schliessen Sie
einen CD- oder DVD-Brenner an. Wenn die Log-Datei 600MB erreicht wird sie
auf CD-ROM geschrieben. Wenn es jetzt nur noch CD-Brenner mit
automatischem Medien-Wechsel g&auml;be... Nicht so dauerhaft gespeichert
wie ein Ausdruck, aber man kann gr&ouml;ssere Mengen hanghaben, und die
CDs nehmen nicht so viel Platz weg.

<item>Setzen Sie den ganzen Kram auf "immutable" (der Tips-HOWTO von Jim
Dennis entnommen). Gerade nachdem Sie Ihr System installiert und
konfiguriert haben, gehen Sie durch <file>/bin</file>, <file>/sbin/</file>,
<file>/usr/bin</file>, <file>/usr/sbin</file> und <file>/usr/lib</file>
(und ein paar andere von den &uuml;blichen Verd&auml;chtigen) und gehen
Sie freiz&uuml;gig mit <prgn>chattr +i command</prgn> um. Machen Sie dies
auch mit den Kernel Dateien. Nun <prgn>mkdir /etc/.dist/</prgn>, und
kopieren Sie alles von <file>/etc/</file> an abw&auml;rts dort hinein
(ich mach das in zwei Schitten, indem ich ein
<file>/tmp/etcdist.tar</file> benutze um Rekursionen zu verweiden).
(Optional k&ouml;nnen Sie auch einfach nur ein
<file>/etc/.dist.tar.gz</file> erstellen) -- und markieren sie alles als
"immutable".

<p>Der Grund f&uuml;r all dies ist den Schaden zu begrenzen, den Sie
anrichten k&ouml;nnen, wenn Sie als root eingeloggt sind. Sie k&ouml;nnen
keine Dateien mit einer fehlgeleiteten Umleitung &uuml;berschreiben, und
Sie werden Ihr System nicht durch ein fehlplaziertes Leerzeichen im
<prgn>rm -fr</prgn> Kommando unbenutzbar machen (Sie k&ouml;nnen aber
Ihren Daten immernoch einigen Schaden zuf&uuml;gen &mdash; aber Ihre
Bibliotheken und Programme sind sicherer).

<p>Dies macht auch verschiedene Sicherheits- und Denial-of-Service
Exploits entweder unm&ouml;glich oder weitaus schwieriger (da viele von
Ihnen darauf beruhen, Dateien durch die Aktionen von SUID Programmen, die
<em>isn't providing an arbitrary shell command</em><!--todo:
uebersetzen-->, zu &uuml;berschreiben).

<p>Die einzige Unbequemlichkeit dabei ist es, wenn sie irgendetwas bauen
und ein <prgn>make install</prgn> auf verschiedene System-Binaries
machen. Auf der anderen Seite verhindert dies auch das <prgn>make
install</prgn> Dateien &uuml;berschreibt. Wenn Sie vergessen, das
Makefile zu lesen und die Datein, die &uuml;berschrieben werden sollen
mit chattr -i zu behandeln (und die Verezichnisse, in denen Sie neue
Dateien erstellen wollen) &dash; schl&auml;gt das make fehl, Sie
m&uuml;ssen nur das chattr Kommando ausf&uuml;hren und make neu aufrufen.
Sie k&ouml;nnen diese Gelegenheit gleich dazu benutzen, Ihre alten bin's,
libs oder was-auch-immer in ein .old-Verzeichniss zu sichern, oder
unzubennenen, oder sie zu taren, oder sowas.

<p>Beachten Sie, dass dies Sie auch daran hindert, die Pakete Ihres
Systems upzugraden. Da die Dateien aus den Paketen nicht
&uuml;berschrieben werden k&ouml;nnen. Also m&ouml;chten Sie veilleicht
einen Mechanismus, der das immutable-Flag auf allen Dateien deaktiviert,
bevor Sie ein <prgn>apt-get update</prgn> ausf&uuml;hren.


</list>


<sect1>Aufstellen eines Honigtopfes (honeypot)

<p>FIXME: More Content specific to Debian needed.

<p>Wenn Sie wollen (und es implementieren k&ouml;nnen und ihm Zeit widmen
k&ouml;nnen) k&ouml;nnen Sie einen vollen Honeypot mit einem Debian
GNU/Linux System aufsetzen. Sie haben alle ben&ouml;tigten Werkzeuge, um
einen allumfassendes Honeynet aufzubauen (d.h. das Netzwerk, der Honeypot
ist lediglich ein falsche Server): Die Firewall, das Netzwerk
Eindringlings-Erkennungssystem, und den falschen Server. Seien Sie aber
vorsichtig, Sie m&uuml;ssen ziemlich sicher sein, dass Sie rechtzeitig
alarmiert werden (siehe <ref id="log-alerts">), so dass sie geeignete
Massnahmen einleiten k&ouml;nnen und die Komprimitierung sobald Sie genug
gesehen haben beenden k&ouml;nnen.

<list>

<item>Die Notwendige Firewall-Technologie (durch den Linux-Kernel
verf&uuml;gbar)

<item><package>syslog-ng</package> um die Logs des Honeypot zu dem
fern-Syslog einer Server-Maschine zu schicken.

<item><package>snort</package> um allen eingehenden Netzwerk Verkehr auf
den Honeypot mitzuscheiden und Angriffe zu erkennen

<item><package>osh</package> das Sie dazu benutzen k&ouml;nnen, um eine
eingeschr&auml;nkte Shell mit Protokoll zu bauen (siehe den Artikel von
Lance Spitzner weiter unten)

<item>Nat&uuml;rlich alle Server die Ihnen einfallen f&uuml;r die
falschen Server des Honeypots (aber sichern Sie <em>nicht</em> den
Honeypot).

<item>und falsche Services, verf&uuml;gbar duch <package>dtk</package>,
wenn Sie das Honeynet auch als Eindringlings-Erkennungs-Service benutzen
wollen.

<item>Integrit&auml;ts Pr&uuml;fer (siehe <ref id="check-integ">) und The
Coroner's Toolkit (<package>tct</package>) um nach dem Angriff eine
Analyse durchzuf&uuml;hren.

</list>

<p>Sie k&ouml;nnen mehr &uuml;ber das aufstellen von Honeypots in Lanze
Spitzners exzellentem Artikel <url
id="http://www.net-security.org/text/articles/spitzner/honeypot.shtml"
name="To Build a Honeypot"> (aus der Know your Enemy Serie) oder
David Raikow's <url
id="http://www.zdnetindia.com/techzone/resources/security/stories/7601.htm"
name="Building your own honeypot"> lesen.
Ausserdem ist das <url id="http://project.honeynet.org/" name="Honeynet
Project"> dem Aufstellen von Honeypots und der Analyse von Angriffen auf
Sie gewidmet. Dort gibt es wertvolle Informationen &uuml;ber das
aufsetzen von Honeypots und die Analyse der Resultate eines Angriffs
(sehen Sie sich den Contest an).

<chapt id="after-compromise">Nach einer Komprimitierung

<sect>Allgemeines Verhalten

<p>Wenn Sie w&auml;hrend eines Angriffs physisch present sind, wird es
sich nicht dauerhaft nachteilig auf Ihre Gesch&auml;ffte auswirken, wenn
Sie einfach das Kabel aus der Netzwerkkarte ziehen, bis Sie
herausbekommen, was der Eindringling tat und die Kiste gesichert wurde.
Das Netzwerk auf der untersten Ebenen abzuschalten ist der einzig sichere
Weg, um den Angreifer daran zu hindern, den Rechner zu komprimitieren
(Phillip Hofmeisters weiser Ratschlag).

<p>Wenn Sie eine Komprimitierung wirklich schnell reparieren wollen,
sollten Sie den komprimitierten Rechner aus dem Netzwerk entfernen, und
das Betriebssystem von Grund auf neu Installieren. Dies k&ouml;nnte
nat&uuml;rlich gar nichts bewirken, wenn Sie nicht wissen, wie der
Eindringling root-Rechte bekommen hat. In diesem Fall m&uuml;ssen Sie
alles pr&uuml;fen: firewall, Datei Integrit&auml;t, Logdateien des
Loghost und so weiter. Weitere Informationen was Sie nach einem Einbruch
tun sollten, finden Sie unteer <url name="Sans' Incident Handling Guide"
id="http://www.sans.org/y2k/DDoS.htm"> oder <url
id="http://www.cert.org/tech_tips/root_compromise.html"
name="CERT's Steps for Recovering from a UNIX or NT System Compromise">.

<sect>Anlegen von Sicherheitskopien Ihres Systems

<p>Vergessen Sie nicht, dass wenn Sie sicher sind, dass das System
komprimitiert wurde, Sie weder der installierten Software noch
irgendwelchen Informationen, die es an Sie liefert, vertrauen
k&ouml;nnen. Applikationen k&ouml;nnten von einem Trojaner befallen sein,
Kernel Module k&ouml;nnten installiert worden sein, usw.

<p>Das beste das Sie machen k&ouml;nnen ist eine komplette
Sicherheitskopie Ihres Dateisystems (durch <prgn>dd</prgn>) nachdem Sie
von einem sicheren Medium gebootet haben. Debian GNU/Linux CDs
k&ouml;nnen hierzu benutzt werden, da Sie auf Konsole zwei eine Shell
anbieten, nachdem die Installation gestartet ist (mit Alt+2 und Enter
aktivieren Sie sie). Die Shell kann zum anlegen der Sicherheitskopie
woanders hin (vielleicht &uuml;ber einen Netzwerk File-Server &uuml;ber
NFS/FTP)   benutzt werden, zur Analyse w&auml;hrend das System offline
ist (oder zu Reinstallation).

<p>Wenn Sie sicher sind, dass es sich lediglich um ein trojanisiertes
Kernel-Modul handelt, versuchen Sie das Kernel-Image von der CD im
<em>rescue</em> Modus zu laden. Stellen Sie ausserdem sicher, dass Sie im
<em>single</em> Modus starten, so dass auch nach dem Kernel keine
weiteren trojanisierten Prozesse gestartet werden.

<sect>forensische Analyse
<p>Wenn Sie mehr Informationen sammeln wollen, enth&auml;lt das Paket
<package>tct</package> (The Coroner's Toolkit von Dan Farmer und Wietse
Venema) Werkzeuge f&uuml;r eine "post mortem" Analyse des Systems.
<package>tct</package> erlaubt es dem Benutzer Informationen &uuml;ber
gel&ouml;schte Dateien, laufende Prozesse und mehr zu sammeln. Sehen Sie
bitte f&uuml;r weiter Informationen in die mitgelieferte Dokumentation.

<p>Forensische Analysen sollten immer auf eine Sicherheitskopie der Daten
angewendet werden, <em>niemals</em> auf die Daten selbst, da Sie durch
diese Analyse beeinflusst werden k&ouml;nnen.

<p>FIXME: This paragraph will hopefully provide
more information about forensics in a Debian system in the coming future.

<p>FIXME: talk on how to do a debsums on a stable system with the
md5sums on CD and with the recovered filesystem restored on a separate
partition.

<chapt>Frequently asked Questions (FAQ)

<p>Dieses Kapitel f&uuml;hrt Sie in ein paar der am h&auml;ufigsten
gestellten Fragen in der Security-Mailing-Liste ein. Sie sollten sie
lesen, bevor Sie dort etwas posten, oder die Leute werden Ihnen lediglich
"RTFM!" sagen.

<sect>Sicherheit im Debian Betriebssystem

<sect1>Ist Debian sicherer als X?
<p>Ein System ist so sicher, wie der Administrator f&auml;hig ist, es
sicher zu machen. Debian versucht Services auf eine
<em>standardm&auml;ssig sicher</em>-Art zu installieren, und wird nicht
versuchen so paranoid wie andere Betriebssysteme zu sein, die Services
auf eine <em>standardm&auml;ssig abgeschaltet</em>-Art installieren. In
jedem Fall muss der System-Administrator die Sicherheit des System den
lokalen Sicherheits-Regeln anpassen.

<sect1>In bugtray gibt es viele Debian-Fehler. Heisst das, es ist sehr
gef&auml;hrdet?

<p>Debian enth&auml;lt wirklich viele Pakete und unterschiedliche
Software, wahrscheinlich sogar mehr, als mit manch einem propiet&auml;ren
Betriebssystem geliefert wird. Die heisst, dass es mehr potentielle
Sicherheits-Angelegenheiten geben kann, als bei einem System mit weniger
Software.

<p>Wie auch immer: Es gibt viele Sicherheits-Gutachten in Zusammenhang
mit Quell-Code &Uuml;berpr&uuml;fungen von gr&ouml;sseren
Software-Komponenten, die Debian enth&auml;lt. Wann immer eine solche
&Uuml;berpr&uuml;fung eine gr&ouml;ssere L&uuml;cke findet, wird er
repariert und ein Sicherheitsgutachten wird al Listen wie bugtraq
geschickt.

<p>Fehler, die in der Debian Distribution vorhanden sind, betreffen
normalerweise auch andere Lieferanten und andere Distributionen.
Pr&uuml;fen Sie einfach einfach den "Debian specific: yes/no" Eintrag am
Anfang jedes Sicherheitsgutachten (DSA, Debian Security Advisory). Wenn
dort "yes" steht, betrifft es nur Debian, wenn dort "no" steht, betrifft
es wahrscheinlich auch andere Distributionen.

<p>Debian enth&auml;lt wirklich viele Pakete, und heutzutage gibt es
viele Gruppen die nach Sicherheits-Problemen in Software suchen (warum
auch immer).

<sect1>Hat Debian irgendein Zertifikat f&uuml;r Sicherheit?

<p>Kurze Antwort: Nein. 

<p>Lange Antwort: Zertifikate kosten Geld und niemand hat Resourcen dazu
bestimmt, die Debian GNU/Linux Distributionen auf irgendeiner Stufe,
beispielsweise der Common Criteria, zu zertifizieren. Wenn Sie daran
interessiert sind, eine zertifizierte GNU/Linux Distribution zu haben,
stellen Sie uns die Resourcen zur Verf&uuml;gung, um dies M&ouml;glich zu
machen.

<sect1>Gibt es irgendein Absicherungsprogramm f&uuml;r Debian?

<p>Ja. <url name="Bastille Linux" id="http://www.bastille-linux.org">,
urspr&uuml;nglich an anderen Linux Distributionen (RedHat und Mandrake)
orientiert funktioniert es derzeit auch mit Debian. Es sind Massnahmen
eingeleitet, um die entsprechenden &Auml;nderungen auch der
urspr&uuml;nglichen Version zugute kommen zu lassen. In jedem Fall heisst
das Debian-Paket nat&uuml;rlich <package>bastille</package>.

<p>Manche Leute glauben jedoch, dass ein Absicherungsprogramm nicht die
Notwendigkeit einer guten Administration eliminiert.

<sect1>Ich m&ouml;chte eine XYZ-Service laufen lassen. Welchen sollte ich
benutzen?

<p>Einer der Vorteile von Debian, der die meisten neuen Administratoren
verwirren k&ouml;nnte, ist, dass es eine grosse Zahl von Software, die
den gleichen Service anbietet (DNS-Server, Mail-Server, FTP-Server,
Web-Server...) enth&auml;lt. Wenn Sie wissen wollen, welchen Server Sie
installieren sollten, gibt es keine allgemeing&uuml;ltige Antwort. Es
h&auml;ngt wirklich von den ben&ouml;tigten F&auml;higkeiten und der
ben&ouml;tigten Sicherheit (was eventuell ausbalanciert werden muss) ab.

<p>Dinge, die Sie pr&uuml;fen sollten:

<list>
<item>Wird es noch vom urspr&uuml;nglichen Autor gepflegt? (Wann war die
letzte Release?)
<item>Ist er ausgereift? (Die Versions-Nummer sagt <em>nichts</em> aus,
versuchen Sie seine Geschichte nachzuvollziehen)
<item>Ist er von Fehler durchsetzt? Gab es Sicherheitsgutachten &uuml;ber
ihn?
<item>Stellt er die ganze Funktionalit&auml;t, die Sie ben&ouml;tigen,
zur verf&uuml;gung? Stellt er mehr zur Verf&uuml;gung, als Sie wirklich
brauchen?
more than you really need?
</list>


<sect1>Wie mach ich den Service XYZ unter Debian sicherer?
<!-- Changed to XYZ in order to avoid confusion :) jfs -->

<p>Sie werden in diesem Dokument Informationen &uuml;ber das Absichern
von einigen Servicen (FTP, Bind) unter Debian GNU/Linux finden. F&uuml;r
Services die hier nicht abgedeckt werden, pr&uuml;fen Sie die Programm
Dokumentation, oder allgemeine Linux Informationen. Die meisten
Sicherheits-Hinweise f&uuml;r Unix-Systeme sind auch auf Debian
anwendbar. So ist das Absichern von Service X unter Debian meistens wie
das absichern des Service unter einer anderen Linux-Distribution (oder
Unix, was das betrifft).

<sect1>Sind alle Debian Pakete sicher?

<p>Das Sicherheits-Team von Debian kann nicht alle Pakete aus Debian auf
potentielle Sicherheits-L&uuml;cken hin analysieren, da es einfach nicht
genug Resourcen gibt, um allen Quellcode zu pr&uuml;fen. Dennoch
profitiert Debian von den Quellcode-Pr&uuml;fungen durch den
urspr&uuml;nglichen Entwickler oder durch ander Projekte, wie das <url
name="Linux Kernel Security Audit Project"
id="http://kernel-audit.sourceforge.net/"> oder das <url name="Linux
Security-Audit Project" id="http://www.lsap.org/">.

<p>Tats&auml;chlich k&ouml;nnte ein Debian Developer in einem Paket einen
Trojaner verbreiten, und es gibt keine M&ouml;glichkeit das
nachzupr&uuml;fen. Sogar wenn sie in Debian eingef&uuml;hrt w&uuml;rden,
w&auml;re es unm&ouml;glich alle m&ouml;glichen Situationen, in der der
Trojaner ausgef&uuml;hrt werden w&uuml;rde, abzudecken.

<p>Dies f&auml;llt unter die <em>no guarantees</em> Lizens-Klausel. In
jedem Fall k&ouml;nnen Debian User insofern Vertrauen fassen, dass der
stabile Quellcode eine breite Pr&uuml;fung hinter sich hat und die
meisten Probleme durch Benutzung endeckt worden w&auml;ren. Es ist in
jedem Fall nicht empfohlen ungetestete Software auf einem wertvollen
System zu installeren (wenn Sie nicht die notwendige Code-Pr&uuml;fung
vornehmen k&ouml;nnen). Und in jedem Fall kann, wenn es zu in die
Distribution eingef&uuml;hrten Sicherheits-Problemen k&auml;me,
k&ouml;nnte der Prozess zu ihrer Aufnahme (der digitale Unterschriften
benutzt) sicherstelen, dass das Problem letzendlich zu dem Developer
zur&uuml;ckgef&uuml;hrt werden kann. Und das Debian Project hat diese
Angelegenheiten nie auf die leichte Schulter genommen.

<sect1>Betriebssystem User und Gruppen

<sect2>Sind alle System User notwendig?

<p>Ja und nein. Debian kommt mit einigen f&uuml;r bestimmte Services
vordefinierten Usern (ids &lt; 99, beschrieben in der <url name="Debian
Policy" id="http://www.debian.org/doc/debian-policy/">). So wird das
installieren eines neuen Service einfach (das sie dann bereits als ein
passender User laufen). Wenn Sie nicht vorhaben neue Services zu
installieren, k&ouml;nnen Sie die User, denen keine Dateien geh&ouml;ren
und die keine Services auf Ihrem System laufen lassen, entfernen.

<p>Sie k&ouml;nnen leicht User finden, denen keine Dateien geh&ouml;ren,
indem Sie das folgenen Kommando ausf&uuml;hren (stellen Sie sicher, dass
Sie es als root ausf&uuml;hren, da ein gemeiner User nicht genug
Zugriffsrechte haben k&ouml;nnte, um ein paar sensitive Verezichnisse zu
durchsuchen):

<!-- Took the liberty to make this script more secure ... >:^) // era -->
<example>
cut -f 1 -d : /etc/passwd |
while read i; do find / -user "$i" | grep -q . && echo "$i"; done
</example>

<p>Diese User kommen aus dem Paket <package>base-passwd</package>. Sie
finden Informationen &uuml;ber die Behandlung dieser User unter Debian in
der Dokumentation des Pakets.

<p>Hier folgt nun eine Liste der standard User (mit ihren entsprechenden
Gruppen):

<list>

<item>root:
	Root ist (typischerweise) der Superuser.

<item>daemon:
	Ein paar unpriviligierte Daemonen, die ein ein paar Dateien auf
	die Festplatte schreiben m&uuml;ssen, laufen als daemon.daemon
	(portmatp, atd, wahrscheinlich noch andere). Daemonen, die keine
	eigenen Dateien besitzen mp&uuml;ssen, k&ouml;nnen stattdessen
	als nobody.nogroup laufen, und komplexere oder
	Sicherheits-bewusste Daemonen laufen als eigenst&auml;ndige User.
	Der daemon User ist wahrscheinlich auch praktisch f&uuml;r lokale
	installierte Daemons.

<item>bin: 
	   aus historischen Gr&uuml;nden beibehalten.

<item>sys:
	   das gleiche wie bei bin.
              Jedoch geh&ouml;ren /dev/vcs* und
	      <file>/var/spool/cups</file> der Gruppe sys.

<item>sync:
	Die Shell des User syns ist <file>/bin/sync</file>.
	Wenn das Passwort auf etwas leicht zu ratendes gesetzt wurde (sum
	Beispiel ""), kann so jeder das System von der Konsole aus
	syncen, auch wenn er keinen Account auf dem System hat.

<item>games:
	Viele Spiele sind sgid games, so dass sie ihre Highscores-Dateien
	schreiben k&ouml;nnen. Dies wird in der Policy erkl&auml;rt.

<item>man:
	Das Programm man l&auml;uft (manchmal) als User man, damit es
	Cat-Pages nach <file>/var/cache/man</file> schreiben kann.

<item>lp:
	Wird von Druck-Daemonen benutzt.

<item>mail:
	Mailboxen unter <file>/var/mail</file> geh&ouml;ren der Gruppe
	mail, wie in der Policy erkl&auml;rt wird. Der User und die
	Gruppe werden zu verschiedenen anderen Zwecken benutzt und
	f&uuml;r verschiedenen MTAs.

<item>news:
	Verschiedene News-Server und andere &auml;hnliche Programme (zum
	Beispiel suck) benutzen den User und die Gruppe news auf
	unterschiedliche Weise. Dateien im news-Spool geh&ouml;ren
	h&auml;ufig dem User und der Gruppe news. Programme wie inews,
	die benutzt werden k&ouml;nnen, um news zu posten, sind
	normalerweise sgid news.

<item>uucp:
	Der uucp User und die uucp Gruppe werdem vom UUCP Subsystem
	benutzt. Ihnen geh&ouml;ren Spool- und Konfigurations-Dateien.
	User in der uucp-Gruppe k&ouml;nnen uucico aufrufen.

<item>proxy:
	Wie Daemon wird dieser User und diese Gruppe von manchen Daemonen
	(insbesondere Proxy-Daemonen) die keinen spezielle User-ID haben
	und eigene Dateien besitzen m&uuml;ssen. Zum Beispiel wird die
	Gruppe proxy von pdnsd benutzt, und squid l&auml;uft als User
	proxy.

<item>majordom:
	Majordomo hat auf Debian Systemen aus historischen Gr&uuml;nden
	eine statisch zugewiesene User-ID.Sie wird auf neuen Systemen
	nicht installiert.

<item>postgres:
	Postgresql Datenbanken geh&ouml;ren diesem User und dieser
	Gruppe. Alle Dateien in <file>/var/lib/postgresql</file>
	geh&ouml;ren diesem User, um anst&auml;ndige Sicherheit zu
	gew&auml;hrleisten.

<item>www-data:
	Ein paar Web-Browser laufen als www-data. Web-Inhalte sollten
	*nicht* diesem user geh&ouml;ren, oder ein kompromitierter
	Web-Server w&auml;re in der Lage eine Web-Seite zu
	&uuml;berschreiben. Daten, die der Web-Server schreibt,
	einschliesslich Log-Dateien, geh&ouml;ren www-data.

<item>backup:
	So k&ouml;nnen Backup/Wiederherstellungs Zust&auml;ndigkeiten
	lokal an irgendjemanden ohne volle Root-Zugriffe delegiert
	werden.

<item>operator:
	operator ist historisch (und praktisch) der einzige 'user'
	Account, der sich fern-einloggen kann, und nicht von NIS/NFS
	abh&auml;ngt.

<item>list:
	Mailing-Listen-Archive und Daten geh&ouml;ren diesem User und
	dieser Gruppe. Manche Mailing-Listen-Programme laufen auch unter
	diesem User.

<item>irc:
	Wird von irc-Daemonen benutzt. Ein statisch zugewiesener User
	wird nur wegen eines bugs in ircd ben&ouml;tigt -- es setuid sich
	selbst auf eine bestimmte User-ID beim start.

<item>gnats.

<item>nobody, nogroup:
	Daemonen die keine eigenen Dateien haben laufen als User nobody
	und Gruppe nogroup. Demzufolge sollten keine Dateien auf dem
	gesammten System diesem User oder zu dieser Gruppe geh&ouml;ren.

</list>

<p>Andere Gruppe, die keinen assozierten User haben:

<list>

<item>adm:
	Die Gruppe adm wird zu Monitor-Zwecken benutzt. Mitglieder dieser
	Gruppe k&ouml;nnen viele Dateien in <file>/var/log</file> lesen
	und die xconsole benutzen.
	<file>/var/log</file> war fr&uuml;her einmal
	<file>/usr/adm</file> (und sp&auml;ter <file>/var/adm</file>),
	daher der Name dieser Gruppe.

<item>tty:
	tty-Ger&auml;te geh&auml;ren dieser Gruppe. write und wall
	benutzen dies, damit sie auf die ttys anderer Leute schreiben
	k&ouml;nnen.

<item>disk:
	Roh-Zugriff auf Festplatten. Meistens &auml;quivalent zu
	Root-Zugriff.

<item>kmem:
	/dev/kmem und &auml;hnliche Dateien sind von dieser Gruppe
	lesbar. Dies ist gr&ouml;sstenteils ein BSD-Relikt, aber jedes
	Programm, dass lese Zugriff auf den System-Speicher braucht, kann
	so sgid kmem gemacht werden.

<item>dialout:
	Voller und direkter Zugriff auf serielle Schnittstellen.
	Mitglieder dieser Gruppen k&ouml;nnen Modems rekonfigurieren,
	sich irgendwo einw&auml;hlen, usw.

<item>dip:
	Der Gruppenname steht f&uuml;r "Dialup IP". In der Gruppe dip zu
	sein erlaubt Ihnen Tools wie <prgn>ppp</prgn>,
	<prgn>dip</prgn>, <prgn>wvdial</prgn> usw. zu benutzen. Die User
	dieser Gruppe k&ouml;nnen das Madem nicht konfigurieren, Sie
	k&ouml;nnen lediglich Programme aufrufen, die sie benutzen.

<item>fax:
	Erlaubt es den Mitgliedern Fax-Software zu benutzen um Faxe zu
	senden und zu empfangen.

<item>voice:
	Voicemail, n&uuml;tzlich f&uuml;r Systeme, die Modems als
	Anrufbeantworter benutzen.

<item>cdrom:
	Diese Gruppe kann dazu benutzt werden, einer bestimmen Menge von
	User Zugriff auf CDROM-Laufwerke zu geben.

<item>floppy:
	Diese Gruppe kann dazu benutzt werden, einer bestimmen Menge von
	User Zugriff auf Disketten-Laufwerke zu geben.

<item>tape:
	Diese Gruppe kann dazu benutzt werden, einer bestimmen Menge von
	User Zugriff auf Band-Laufwerke zu geben.

<item>sudo:
	Mitglieder dieser Gruppe m&uuml;ssen ihr Passwort eingeben, wenn
	sie sudo benutzen. Siehe <file>/usr/share/doc/sudo/OPTIONS</file>.

<item>audio:
	Diese Gruppe kann dazu benutzt werden, einer bestimmen Menge von
	User Zugriff auf jedes Audio-Ger&auml;t zu geben.

<item>src:
	Dieser Gruppe geh&ouml;ren die Quell-Code, einschliesslich der
	Dateien in <file>/usr/src</file>. Sie kann benutzt werden, um
	einem bestimmten User die M&ouml;glichkeit zu bieten, Quell-Code
	des Systems zu verwalten.

<item>shadow:
	<file>/etc/shadow</file> ist von dieser Gruppe lesbar. Einige
	Programme, die auf diese Datei zugreifen m&uuml;ssen, sind sgid
	shadow.

<item>utmp:
	Diese Gruppe kann nach <file>/var/run/utmp</file> und
	&auml;hnlichen Dateien schreiben. Programme, die darin schreiben
	k&ouml;nnen m&uuml;ssen, sind sgid utmp.

<item>video:
	Diese Gruppe kann dazu benutzt werden, einer bestimmen Menge von
	User Zugriff auf ein Vidio-Ger&auml;t zu geben.

<item>staff:
	Erlaubt Usern lokale Modifikationen zu dem System
	hinzuzuf&uuml;gen (<file>/usr/local</file>, <file>/home</file>),
	ohne dass sie Root-Privilegien br&auml;uchten. Vergleichen Sie
	mit "adm", die sich mehr auf beobachten/absichern bezieht.

<item>users:
	W&auml;hrend Debian Systeme standardm&auml;ssig das
	User-Gruppen-System (jeder User hat seine eigene Gruppe)
	benutzen, ziehen es manche vor, ein traditionelleres Gruppen
	System zu benutzen. In diesem System ist jeder User Mitglied der
	Gruppe "users".

</list>

<sect2>Was ist der Unterschied zwischen der adm und der staff Gruppe?
<p>

<p>'adm' sind Administratoren und ist meistens n&uuml;tzlich, um ihne zu
erlauben, Log-Dateien zu lesen, ohne <prgn>su</prgn> benutzen zu
m&uuml;ssen. 'staff' ist mehr bei den Helpdesk/junior Sysadmins Leuten
n&uuml;tzlich, und gibt ihnen die M&ouml;glichkeit, Dinge in
<file>/usr/local</file> zu erledigen und Verzeichnisse in
<file>/home</file> anzulegen.


<sect1>Fragen &uuml;ber Services und offene Ports

<sect2>Warum werden Services w&auml;hrend der Installation aktiviert?

<p>Das ist der Ann&auml;herung an das Problem auf der einen Seite
Sicherheits-Bewusst und auf der anderen Seite benutzerfreundlich zu sein.
Anders als OpenBSD, dass alle Services abschaltet, bis sie vom
administrator aktiviert werden, aktiviert Debian GNU/Linux alle
installierten Services, bis sie abgeschaltet werden (siehe dazu <ref
id="disableserv">). Immerhin haben Sie den Service installiert, oder?

<p>Es gab einige Diskussionen auf Debian Mailing-Listen
(sowohl auf debian-devel als auch auf debian-security), dar&uuml;ber
was das standard Setup sein sollte. Jedoch gab es bisher (10. M&auml;rz
2002) keinen Konsens, wie dies behandelt werden sollte.

<sect2>Kann ich inetd entfernen?

<p>Inetd ist nich leicht zu entfernen, da <package>netbase</package> von
dem Paket abh&auml;ngt, das Inetd enth&auml;lt
(<package>netkit-inetd</package>). Wenn Sie es entfernen wollen,
k&ouml;nnen Sie es entwerder abschalten (siehe <ref id="disableserv">)
oder das Paket entfernen, indem Sie das Paket <package>equivs</package>
benutzen.

<sect2>Warum muss ich Port 111 offen haben?

<p>Port 111 ist sunrpcs Portmapper und wird standardm&auml;ssig bei allen
Basis-Installationen eines Debian Systems, da es keine M&ouml;glichkeit
gibt, herauszubekommen, wann das Programm eines Users RPC gebrauchen
k&ouml;nnte, um korrekt zu arbeiten. In jedem Fall wird es meistens von
NFS benutzt. Wenn Sie kein NFS benutzen, entfernen Sie es, wie in <ref
id="rpc"> erkl&auml;rt.

<sect2>Wozu ist der identd (Port 113) da?

<p>Identd wird von Administratoren benutzt, um anderen Systemen, die
wissen wollen, wer f&uuml;r eine bestimmte Verbindung verantwortlich ist,
zus&auml;tzliche Informationen zu einer Userid zur Verf&uuml;gung zu
stellen. Beachtenswert schliesst dies mail, FTP und IRC Server ein,
jedoch kann es auch dazu benutzt werden, um den User ihrer Systeme
zur&uuml;ckzuverfolgen, der einen Angriff gestartet hat.

<p>Es gab ausf&uuml;hrliche Diskussionen hierr&uuml;ber (siehe in den <url
id="http://lists.debian.org/debian-security/2001/debian-security-200108/msg00297.html"
name="Mailing List Archiven">. Grunds&auml;tzlich gillt: Wenn Sie nicht
wissen, was und wozu es ist, aktivieren Sie es nicht. Aber wenn Sie es
firewallen, <em>bitte</em>: Nehmen Sie eine reject-Regel und keine
deny-Regel, oder Kommunikation k&ouml;nnte bis zu einer
Zeit&uuml;berschreitung h&auml;ngen (siehe <url
id="http://logi.cc/linux/reject_or_deny.php3" name="reject or deny
issues">).

<sect2>Ich habe festgestellt, dass ich den folgenden Port (XYZ) offen
habe. Kann ich ihn schliessen?

<p>Nat&uuml;rlich k&ouml;nnen Sie. Die Ports die Sie offen lassen
h&auml;ngen von Ihrem Regelwerk bez&uuml;glich &ouml;ffentlich
zug&auml;nglichen Services ab. Pr&uuml;fen Sie, ob Sie durch inetd (siehe
<ref id="inetd">) ge&ouml;ffnet sind, oder durch ein anderes
installiertes Paket und leiten Sie passende Massnahmen ein (konfigurieren
von inetd, entfernen des Pakets, vermeiden dass der Service beim booten
gestartet wird...)


<sect2>Ich habe einen Service von <file>/etc/services</file> entfernt,
funktioniert das?

<p><em>Nein</em>, <file>/etc/services</file> zieht einfach nur eine
Verbindung zwischen einem virtuellen Namen und einer Port Nummer. Das
Entfernen eines Namens wird (meistens) nicht verhindern, dass ein Service
gestartet wird. Manche Daemonen starten vielleicht nicht, wenn Sie
<file>/etc/services</file> &auml;ndern, aber das ist nicht die Norm, und
es ist nicht der empfohlene Weg einen Service abzuschalten, siehe <ref
id="disableserv">.


<sect1>Allgemeine Sicherheits Fragen

<sect2>Ich habe meine Passwort vergessen und kann auf das System nicht
mehr zugreifen!!

<p>Die Schritte, die n&ouml;tig sind, damit Sie wider Zugriff erhalten,
h&auml;ngen davon ab, ob Sie die vorgeschlagene Prozedur zum Absichern
von Lilo und dem Bios durchgef&uuml;hrt haben oder nicht.

<p>Wenn Sie beides eingeschr&auml;nkt haben, m&uuml;ssen Sie im BIOS
erlauben, von anderen Medien als der Festplatte zu booten, bevor Sie
weitermachen k&ouml;nnen. Wenn Sie auch Ihr BIOS-Passwort vergessen
haben, m&uuml;ssen Sie Ihr Geh&auml;use &ouml;fnen, und die Batterie des
Bios entfernen.

<p>Wenn Sie von CD-ROM oder Diskette booten k&ouml;nnen, k&ouml;nnen Sie:
<list>

<item>von eine Rescue-Disk booten und den Kernel starten

<item>auf eine virtuelle Konsole wechseln (Alt+F2)

<item>Die Partition mounten, auf der sich Ihr / befindet

<item>editieren Sie (die Debian 2.2 Rescue-Disk kommt mit
<prgn>ae</prgn>, Debian 3.0 kommt mit <prgn>nano-tiny</prgn>, der
<prgn>vi</prgn> etwas &auml;hnelt) die Datei <file>/etc/shadow</file> und
&auml;ndern Sie die Zeile:

<example>
root:asdfjl290341274075:XXXX:X:XXXX:X::: (X=irgendeien Ziffer)
</example>

<p>nach:

<example>
root::XXXX:X:XXXX:X:::
</example>

</list>

<p>Dies entfernt das Root-Passwort. Sie k&ouml;nnen das System starten
und sich beim login: Prompt als Root mit einem leeren Passwort einloggen.
Dies funktioniert, es sei denn, Sie haben Ihr System etwas sicherer
eingestellt, d.h. User mit leeren Passwort d&uuml;rfen sich nicht
einloggen und Root kann sich nicht auf einer Konsole einloggen.

<p>Wenn Sie diese Massnahmen getroffen haben, m&uuml;ssen Sie im
singe-Modus starten. Wenn Sie LILO eingeschr&auml;nkt haben, m&uuml;ssen
LILO erneut ausfr&uuml;hren, nachdem Sie das Root-Passwort
zur&uuml;ckgesetzt haben. Das ist trickreich, da Ihre
<file>/etc/lilo.conf</file> nicht gefunden iwrd, und Ihr /-Dateisystem
eine ramdisk und keine echte Festplatte ist.

<p>Sobald LILO nicht mehr eingeschr&auml;nkt ist, k&ouml;nnen Sie:

<list>

<item>Dr&uuml;cken Sie Alt, Shift oder Control, gerade befor das BIOS
fertig wird, Sie sollten einen LILO-Prompt erhalten.

<item>Geben Sie 'linux single', 'linux init=/bin/sh' oder 'linux 1' am
Prompt ein.

<item>Sie werden einen Shell-Prompt im Single-User-Modus bekommen (Sie
werden nach dem Passwort gefragt werden, aber das kennen Sie jetzt ja)

<item>Binden Sie die /-Partition im schreib/lese Modus neu ein:
<example>
mount -o remount,rw /
</example>

<item>&Auml;ndern Sie das Superuser Password mit <prgn>passwd</prgn> (da
Sie der Superuser sind, werden Sie nicht nach Ihrem alten Passwort
gefragt werden).

</list>

<sect1>Ich m&ouml;chte meinen Usern einen Service anbieten, Ihnen aber
keinen Shell-Account geben.

<p>Wenn Sie einen zum Beispiel einen POP-Service anbieten wollen,
m&uuml;ssen Sie nicht f&uuml;r jeden zugreifenden User einen Account
anlegen. Am besten setzen Sie hierzu eine Verezichnis-basierte
Authentifizierung durch einen externen Service (wie Radius, LDAP oder
eine SQL-Datenbank) auf. Installieren Sie einfach die gew&uuml;nschte
PAM-Bibliothek (<package>libpam-radius-auth</package>,
<package>libpam-ldap</package>, <package>libpam-pgsql</package> oder
<package>libpam-mysql</package>), lesen Sie die Dokumentation (Einsteiger
sehen bitte unter <ref id="auth-pam"> nach), und konfigurieren Sie den
PAM-nutzenden Service, so dass er Ihr Backend benutzt. Dies tun Sie,
indem Sie die dem Service entsprechedne Datei unter
<file>/etc/pam.d/</file> editieren, und die folgendende Zeile von
<example>
auth    required        pam_unix_auth.so shadow nullok use_first_pass
</example>
beispielsweise nach ldap &auml;ndern: 
<example>
auth    required        pam_ldap.so
</example>

<!-- FIXME: check if this i right (jfs) -->

<p>Im Fall von LDAP-Verzeichnissen, liefern manche Services LDAP-Schemata
mit, die Sie ihrem Verzeichnis hinzuf&uuml;gen k&ouml;nnen, um
LDAP-Authentifizierung  mit Ihnen zu benutzen. Wenn Sie relationale
Datenbanken benutzen, gibt es einen n&uuml;tzlichen Trick: Benutzen Sie
die <em>where</em> Klausel, wenn Sie die PAM-Module konfigurieren. Wenn
Sie beispielsweise eine Datenbank mit der folgenden Tabelle haben:

<example>
(user_id,user_name,realname,shell,password,uid,gid,homedir,sys,pop,imap,ftp)
</example>

<p>K&ouml;nnen Sie die letzen (bool'schen) Werte dazu benutzen, denn
Zugriff auf die verschiedenen Services entweder zu erlauben oder zu
verbieten, indem Sie einfach die folgenden Zeilen in die Dateien
hinzuf&uuml;gen:

<list>
<item><file>/etc/pam.d/imap</file>:<tt>where=imap=1</tt>.

<item><file>/etc/pam.d/qpopper</file>:<tt>where=pop=1</tt>.

<item><file>/etc/nss-mysql*.conf</file>:<tt>users.where_clause = user.sys = 1;</tt>.

<item><file>/etc/proftpd.conf</file>:<tt> SQLWhereClause "ftp=1"
</tt>.

</list>


<sect>Mein System ist angreifbar (sicher?)

<sect1>Ich habe in meinen Logs einen Angriff gesen: Bin ich
kompromitiert?

<p>Ein Hinweis auf einen Angriff heistt nicht notwendigerweise, dass Sie
gehackt worden sind. Sie sollten die &uuml;blichen Schritte einleiten, um
festzustellen, ob das System kompromitiert wurde (siehe <ref
id="after-compromise">). Beachten Sie auch, dass manchmal die Tatsache,
dass Sie einen Angriff in den Logs sehen, heissen kann, dass sie
hierf&uuml;r angreifbar sind (ein bestimmter Angreifer k&ouml;nnte
&uuml;brigens auch andere Angriffe, als die, die Sie gesehen haben,
durchgef&uuml;hrt haben).

<sect1>Ich habe in meinen Logs merkw&uuml;rdige "MARK"-Eintr&auml;ge
gefunden, bin ich kompromitiert?

<p>Wenn Ihr System keine hohe Last (und Services) hat, finden Sie
vielleicht die folgenden Zeilen in Ihren System-Logs:

<example>
Dec 30 07:33:36 debian -- MARK --
Dec 30 07:53:36 debian -- MARK --
Dec 30 08:13:36 debian -- MARK --
</example>

<p>Dies zeigt keine Art der Komprimitierung, und User, die von einer
Debian release wechseln, werden es merkw&uuml;rdig finden. Es ist in der
Tat ein ein Indiz daf&uuml;r, dass <prgn>syslogd</prgn> vern&uuml;nftig
l&auml;uft. Aus <manref section="8" name="syslogd">:

<example>
       -m interval
              The syslogd logs a mark timestamp  regularly.   The
              default interval between two -- MARK -- lines is 20
              minutes.  This can be  changed  with  this  option.
              Setting the interval to zero turns it off entirely.
</example>

<example>
       -m interval
	      Der Syslogd protokolliert regelm&auml;ssig einen
	      Zeitstempel. Der voreingestellte Abstand zwischen zwei --
	      MARK -- Zeilen ist 20 Minuten. Er kann mit dieser Option
	      ge&auml;ndert werden. Setzen Sie den Abstand auf null, um
	      die Zeitstempel komplett abzuschalten.
</example>

<sect1>Ich habe User gefunden, die laut meinen Logs su benutzen: Bin ich
kompromitiert?

<p>Sie k&ouml;nnten in Ihren Logs Zeilen wie die folgenden finden:

<example>
 Apr  1 09:25:01 server su[30315]: + ??? root-nobody
 Apr  1 09:25:01 server PAM_unix[30315]: (su) session opened for user nobody by (uid=0)
</example>

<p>Seien Sie nicht besorgt, und pr&uuml;fen Sie, ob dies durch eine Job
durch Cron entsteht (normalerweise <file>/etc/cron.daily/find</file> oder
<prgn>logrotate</prgn>):

<example>
$ grep 25 /etc/crontab
25 6    * * *   root    test -e /usr/sbin/anacron || run-parts --report
/etc/cron.daily
$ grep nobody /etc/cron.daily/*
find:cd / && updatedb --localuser=nobody 2>/dev/null
</example>

<sect1>Ich bin Opfer eines Einbruchs - was soll ich jetzt tun?

<p>Lesen Sie dieses Dokument und leiten Sie passenden, hier dargestellten
massnahmen ein. Wenn Sie Hilfe ben&ouml;tigen, k&ouml;nnen Sie auf der
debian-security@lists.debian.org Liste Rat suche, wie Sie Ihr System
wiederherstellen/patchen.

<sect1>Wie kann ich Angriffe aufspr&uuml;ren?

<p>Durch durchgehen der Logs (wenn Sie nicht ge&auml;ndert wurden), benutzen
eines Eindringling-Erkennungs-Systems (siehe <ref
id="intrusion-detect">), <prgn>traceroute</prgn>, <prgn>whois</prgn> und
&auml;hnliche Tools (einschliesslich forensiche Analyse) k&ouml;nnen
einen Angriff zu seiner Ursprung zur&uuml;ckverfolgen. Wie Sie auf diese
Informationen reagieren h&auml;ngt ausschliesslich von Ihren
Sicherheits-Regeln ab, und was <em>Sie</em> als Angriff betrachten. Ist
ein einfacher Scan ein Angriff? Ist das Pr&uuml;fen auf eine
Verwundbarkeit ein Angriff?

<sect1>Das Programm X ist in Debian angreifbar - was soll ich machen?

<p>Nehmen Sie sich einen Augenblick Zeit, um zu schauen, ob die
Angriffsm&ouml;glichkeit in &ouml;ffentlichen Sicherheits-Mailinglisten
(wie Bugtraq) oder anderen Foren bekannt gemacht wurde. Das
Debian-Sicherheits-Team h&auml;lt sich bei diesen Listen auf dem
laufenden, also k&ouml;nnten ihnen dieses Problem bereits bekannt sein.
Leiten Sie keine weiteren Massnahmen ein, wenn Sie schon ein
Sicherheits-Gutachten auf <url id="http://security.debian.org"> sehen.

<p>Wenn Sie nichts finden, senden Sie bitte eine Mail mit einer
m&ouml;glichst detailierten Beschreibung des Angriffspunktes (Code, der
dies best&auml;tigt ist auch okay) adn security@debian.org. Dadurch
erreichen Sie das Sicherheits-Team.

<sect1>Laut der Versions-Nummer eines Paketes, l&auml;uft bei mir
immernoch eine angreifbare Version!

<p>Anstatt auf neue Releases zu aktualisieren, f&uuml;hren wir
Sicherheits-Korrekturen auf die Version zur&uuml;ck, die in der stabilen
Version enthalten war. Der Grund daf&uuml;r ist, dass wir sicher gehen
wollen, dass eine stabile Release so wenig wie m&ouml;glich
ver&auml;ndert wird. So werden sich Dinge nicht unerwartet &auml;ndern
oder kaputt gehen, als Resultat einer Sicherheits-Korrektur. Sie
k&ouml;nnen pr&uuml;fen, ob Sie eine sichere Version eines Paketes
benutzen, indem Sie das Changelog des Paketes durchsehen, oder indem Sie
die exakte Versions Nummer (Urspr&uuml;ngliche Version -slash- Debian
Release) mit der Nummer aus dem Debian Sicherheits-Gutachten vergleichen.

<sect1>spezielle Software

<sect2>Proftpd ist f&uuml;r einen "Denial of Service"-Angriff
anf&auml;llig.

<p>F&uuml;gen Sie <tt>DenyFilter \*.*/</tt> Ihrer Konfigurations Datei
hinzu. Mehr Informationen entnehmen Sie <url id="http://www.proftpd.org/critbugs.html">.


<sect>Fragen &uuml;ber Debians Sicherheitsteam

<!-- FIXME: update from web page -->

<sect1>Was ist ein Debian Sicherheitsgutachten (Debian Security Advisory, DSA) 

<p>Dies sind von Debians Sicherheits Team (siehe Unten) gesendete
Informationen &uuml;ber die Verf&uuml;gbarkeit der Korrektur einer
sicherheitsrelevanten Verwundbarkeit f&uuml;r das Debian Betriebs System.
Digital unterschriebene DSAs werden auf eine &ouml;ffentliche
Mailing-Liste gesendet und auf Debians Web-Seite ver&ouml;ffentlicht
(sowohl auf der Hauptseite als auch unter <url
id="http://www.debian.org/security/" name="Sicherheitsinformationen">).

<p>DSAs enthalten Informationen &uuml;ber beeintr&auml;chtigte Pakete,
den entdeckten Fehler und wie man aktualisierte Pakete bekommt (und ihre
md5-Summen).

<sect1>Die digitale Signatur eines Debian Gutachtens kann nicht korrekt
verifiziert werden!

<p>Dies ist wahrscheinlich ein Problem an Ihrem Ende. Die
   debian-security-announce Liste hat einen Filter vorgeschaltet, der nur
   Nachrichten durchl&auml;sst, die eine korrekte Signatur von einem
   Mitglied des Sicherheits Teams enth&auml;lt.

<p>Wahrscheinlich ver&auml;ndert irgendeine Mail-Software an Ihrem
   Ende ein wenig und ruiniert damit die Unterschrift. Stellen Sie
   sicher, dass Ihre Software keine MIME-Codierung oder -Decodierung,
   oder Tabulatur/Leerzeichen konvertierung durchf&uuml;hrt.

<p>Bekannte Schuldige sind fetchmal (mit eingeschalteter mimedecode
   Option) und formail (lediglich von procmail 3.14)

<sect1>Wie werden Sicherheits-Ereignisse in Debian behandelt?

<p>Sobald das Sicherheits-Team eine Notiz &uuml;ber einen Vorfall
erh&auml;lt, pr&uuml;fen ihn ein oder mehrere Mitglieder nach, und
erw&auml;gen, ob Debian/stable angreifbar ist, oder nicht. Wenn unser
System angreifbar ist, wird an einer Korrektur f&uuml;r das Problem
gearbeitet. Der Paket-Verwalter wird ebenfalls kontaktiert, wenn er nicht
bereits selbst das Sicherheits-Team kontaktiert hat. Schliesslich wird
die Korrektur getestet und ein neues Paket vorbereitet, die dann auf
allen stabilen Architekturen compiliert wird, die dann anschliessend hoch
geladen werden. Nachdem all dies getan ist, wird ein Debian Sicherheits
Gutachten (DSA) an die &ouml;ffentliche Mailing Liste geschickt.

<sect1>Wieviel Zeit wird Debian brauchen, um die Angriffsm&ouml;glichkeit
XXXX zu reparieren?

<p>Eine Analyse der Zeiten, die Debians Sicherheits-Team ben&ouml;tigt,
um ein Gutachten zu ver&ouml;ffentlichen und reparierte Pakete zu
produzieren nachdem eine Angriffsm&ouml;glichkeit bekannt wird, zeigt,
dass es nicht so lange dauert, die Angriffm&ouml;glichkeiten in der
stabilen Distribution zu reparieren.

<p>Ein Report
<url
id="http://lists.debian.org/debian-security/2001/debian-security-200112/msg00257.html"
name="in der debian-security Mail-Liste"> zeigt, dass im Jahr 2001
Debians Sicherheitsteam durchschnittlich 35 Tage ben&ouml;tigte, um eine
sicherheitsrelevante Angriffm&ouml;glichkeit zu reparieren. &Uuml;ber 50%
der Angriffspunkte wurden jedoch innerhalb eines Zeitrahmens von 10 Tagen
beseitigt, und &uuml;ber 15% von ihnen wirden noch am <em>gleichen
Tag</em> repariert.

<p>Dennoch tendieren Leute, die diese Frage stellen, zu vergessen, dass:
<list>
  <item>DSAs nicht verschickt werden bis:
  <list>
    <item>Pakete f&uuml;r <em>alle</em> von Debian unterst&uuml;tzten
    Architekturen verf&uuml;gbar sind (dies braucht etwas Zeit, wenn es
    Sich um Pakete handelt, die Teil des System-Kerns sind, besonders
    wenn man die Anzahl der in der stabilen Release unterst&uuml;tzten
    Architekturen ber&uuml;ksichtigt).
    <item>Neue Pakete gr&uuml;ndlich getestet wurden, um sicher zu
    stellen, dass keine neuen Fehler eingef&uuml;hrt werden
  </list>
  <item>Pakete verf&uuml;gbar sein k&ouml;nnen, bevor das DSA verschickt
  wird (in der incoming-Warteschlange oder auf den Spiegeln).
  <item>Debian ein Projekt auf freiwilligen Basis ist.
  <item>Es eine "keine Garantie" Klausel gibt, die Teil der Lizens ist,
  der Debian unterliegt.
</list>

<sect1>Wie wird Sicherheit f&uuml;r <tt>testing</tt> und
<tt>unstable</tt> gehandhabt?

<p>Die kurze Antwort ist: Gar nicht. Testing und unstable unterliegem
einem rapoden Fluss, und das Sicherheits-Team hat nicht die
ben&ouml;tigten Resourcen, die notwendig w&auml;ren, um diese richtig zu
betreuen. Wenn Sie einen sicheren (und stabilen) Server haben
m&ouml;chten, sind Sie stark dazu ermutigt, bei stable zu bleiben.

<p><em>Aber</em> tats&auml;chlich wird unstable normalerweise relativ
schnell repariert, da Sicherheitsupdates f&uuml;r die aktuelle Version
durch den urspr&uuml;nglichen Autor schnell verf&uuml;gbar sind
(w&auml;hrend andere Versionen, wie die in stable, normalerweise einen
zur&uuml;ck portiert werden m&uuml;ssen).


<sect1>Warum gibt es keine offiziellen Spiegel f&uuml;r
security.debian.org?

<p>Der Zweck von security.debian.org ist es, Sicherheits-Updates
m&ouml;glichst schnell und einfach zur Verf&uuml;gung zu stellen.
Spiegel w&uuml;rden zus&auml;tzliche Komplexit&auml;t einf&uuml;hren, die
nicht ben&ouml;tigt ist, und nur Frustration erzeugt, wenn Sie nicht
aktuell gehalten werden.

<sect1>Ich habe DSA 100 und DSA 102 gesehen, wo ist aber DSA 101?

<p>Verschiedene Distributoren (zumeist von GNU/Linux, aber auch von
BSD-Derivaten) koordinieren Sicherheits-Gutachten f&uuml;r verschiedene
Vorf&auml;lle und haben vereinbart, einen bestimmten Zeitplan
einzuhalten, so dass alle Distributoren in der Lage sind, richtig
zu pr&uuml;fen, ob Sie betroffen sind (oder nicht) und entsprechende
Updates erstellen k&ouml;nnen.

<p>Das Sicherheits-Team von Debian beh&auml;lt in solchen F&auml;llen die
Nummer, bevor das Gutachten freigegeben wird, und so kann es zeitweise
passieren, dass die ein andere Nummer fehlt.


<sect1>Wie kann ich das Sicherheits-Team erreichen?

<p>Sicherheits Informationen k&ouml;nnen an security@debian.org geschickt
werden, damit es von allen Debian Entwicklern gelesen wird. Wenn Sie
sensitive Informationen haben, benutzen sie bitte
team@security.debian.org, damit es nur vom Security-Team gelesen wird.
Wenn Sie es w&uuml;nschen, kann die Email auch mit dem Debian Security
Contact Key (Key-Id 363CCD95) verschl&uuml;sselt werden.

<sect1>Was ist der Unterschied zwischen security@debian.org und
debian-security@lists.debian.org?

<p>Wenn Sie eine Nachricht an security@debian.org schicken, wird diese an
die Developer Mailingliste geschickte (debian-private), die alle Debian
Entwickler aboniert haben. Nachrichten an diese Liste werden vertraulich
behandelt (d.h. nicht auf einer &ouml;ffentlichen Webseite archiviert).
debian-security@lists.debian.org ist eine &ouml;ffentliche Mail-Liste,
offen f&uuml;r jeden, der sie abonieren m&ouml;chte, und es gibt ein
auf den Web-Seiten ein durchsuchbares Archiv.


<sect1>Wie kann ich Debians Sicherheit-Team unterst&uuml;tzen?

<p>
<list>
<item>Indem Sie zu diesem Dokument beitragen, FIXMEs bearbeiten oder
neuen Inhalt beisteuern. Dokumentation ist wichtig und reduziert die
&Uuml;berlast durch beantworten allgemeiner Fragen. &Uuml;bersetzen
dieses Dokuments in andere Sprachen ist auch ein grossartiger Beitrag
(Anm.d. &Uuml;bersetzers: Fehlerbereinigen in der &Uuml;bersetzung auch).

<item>Indem Sie Apllikationen paketieren, die n&uuml;tzlich ist, um
dir Sicherheit eines Debian Systems zu erh&ouml;hen / zu pr&uuml;fen.
Wenn Sie kein Entwickler sind, reichen Sie einen <url name="WNPP bug"
id="http://www.debian.org/devel/wnpp/"> ein, und fragen Sie nach
Software, von der Sie glauben, dass Sie n&uuml;tzlich w&auml;re, die aber
noch nicht zur Verf&uuml;gung steht.

<item>Testen Sie Applikationen in Debian oder helfen Sie
Sicherheits-L&uuml;cken zu schliessen und teilen Sie Probleme
security@debian.org mit. Anderer Projekte Arbeit, wie das <url
name="Linux Kernel Security Audit Project"
id="http://kernel-audit.sourceforge.net/"> oder das <url name="Linux
Security-Audit Project" id="http://www.lsap.org/"> erh&ouml;hen auch die
Sicherheits von Debian GNU/Linux, da Beitra&auml;ge dort, letzten Endes
auch hier helfen.

</list>

<p>Pr&uuml;fen Sie bitte in jedem Fall nach, bevor Sie etwas an
security@debian.org melden. Wenn Sie Patches beif&uuml;gen k&ouml;nnen,
w&uuml;rde das den Prozess nat&uuml;rlich beschleunigen. Leiten Sie nicht
einfach bugtraq Mails weiter, da Sie bereits empfangen werden. Es ist
aber eine gute Idee, zus&auml;tzliche Informationen zu schicken.

<sect1>Aus wem setzt sich das Sicherheits-Team zusammen?

<p>Debians Sicherheit Team besteht derzeit aus f&uuml;nf Mitgliedern und
zwei Sekret&auml;ren. Das Sicherheits Team l&auml;dt Personen selbst ein,
beizutreten.

<sect1>Pr&uuml;ft Debians Sicherheit Team jedes Paket in Debian?

<p>Nein, weder pr&uuml;ft Debians Sicherheit Team jedes neue Paket noch
gibt es einen automatischen (lintian) Test, um b&ouml;shafte neue Pakete
zu entdecken, da solche Dinge praktisch unm&ouml;glich automatisch
zu erkennen sind. Paket-Verwalter sind jedoch voll und ganz
verantwortlich f&uuml;r die Software, die in Debian eingef&uuml;hrt wird,
und keine Software wird eingef&uuml;hrt, die nicht zuerst von einem
autorisierten Entwickler signiert worden sind. Sie sind daf&uuml;r
verantwortlich die Software, die sie verwalten, zu analysieren und auf
Sicherheit zu achten.

<sect1>Ich habe eine &auml;ltere Version von Debian. Wird sie in Bezug
auf Sicherheit noch unterst&uuml;tzt?

<p>Leider nein. Debians Sicherheit-Team kann nicht leider nicht sowohl
die stabile Release (inoffiziell also auch unstable) als auch &auml;ltere
Releases unterst&uuml;tzen. Sie k&ouml;nnen jedoch Sicherheits-Updates
f&uuml;r einen begrenzten Zeitraum (normalerweise mehrere Monate), nachdem
eine neue Debian Distribution ver&ouml;ffentlicht wurde, erwarten.

<appendix id="harden-step">Der Abh&auml;rtungsprozess Schritt f&uuml;r
Schritt

<!--
# I took the liberty to change this from "checklist" to
# "process step by step" because this doesn't really have the
# form of a checklist, and I had added a different sort of
# checklist. The renaming is more to avoid confusion than
# anything else. // era
-->

<p>Eine Prozedur ist immer n&uuml;tzlich, da Sie Ihnen erlaubt, den
gesamten Prozess des Abh&auml;rtens eines Systems zu betrachten und Ihnen
erlaubt Entscheidungen zu treffen. Ein m&ouml;glicher Versuch f&uuml;r
eine solche Prozedur f&uuml;r Debian 2.2 GNU/Linux ist unten
aufgef&uuml;hrt. Es ist eine Nach-Installations Prozedur. Eine
Checkliste von Massnahmen, die sie schritt f&uuml;r Schritt w&auml;hrend
der Konfiguration durchf&uuml;hren finden Sie unter <ref id="checklist">.
Ausserdem ist diese Prozedur (im Augenblick) eher am Absichern von
Netzwerk Servicen orientiert.

<list>

<item>F&uuml;hren Sie eine Installation auf dem System durch (beachten
Sie dabei die Informationen dieser HowTo bez&uuml;gliche
Partitionierung). Nach der Basis-Installation nehmen Sie eine angepasste
Installation vor, w&auml;hlen Sie keine Task-Pakete aus, aber aktivieren
Sie shadow passwords.

<item>Gehen Sie durch <prgn>dselect</prgn> und entfernen Sie alle nicht
ben&ouml;tigten aber ausgew&auml;hlten Pakete bevor sie [I]nstallation
w&auml;hlen. Lassen Sie nur absolut notwendige Software auf dem Server.

<item>Aktualisieren Sie alle Software von den aktuellen Paketen auf
security.debian.org wie bereits unter <ref id="update"> beschrieben.

<item>Implementieren Sie die in dieser Anleitung vorgeschlagenen
Massnahmen &uuml;ber User Quota, Login Definitionen und Lilo.

<item>Um das abh&auml;rten aller Services vorzubereiten, machen Sie eine
Liste von allen Servicen, die derzeit auf Ihrem System arbeiten.
<example>
$ ps -aux
$ netstat -pn -l -A inet 
# /usr/sbin/lsof -i | grep LISTEN
</example>

Damit das dritte Kommando funktionier werden Sie
<package>lsof-2.2</package> installieren m&uuml;ssen (uns es als root
laufen lassen). Beachten Sie, dass lsof das Wort LISTEN passend zu Ihrer
Lokalisation &uuml;bersetzen kann.

<item>Um unn&ouml;tige Services zu entfernen, stellen Sie zun&auml;chst
fest, wie er gestartet wird, und welches Paket ihn zur Verf&uuml;gung
stellt. Sie k&ouml;nnen dies ganz einfach machen, indem Sie das Programm
pr&uuml;fen, dass auf einen Socket achtet. Das nachfolgende Beispiel wird
Ihnen zeigen, wie man diese Tolls und <prgn>dpkg</prgn> dazu benutzt:

<example>
#!/bin/sh
# FIXME: Dies ist nur schnelle und einfache zusammengehackt, und sollte
# durch einen robusteren Skript-Schnipsel ersetzt werden
for i in `sudo lsof -i | grep LISTEN | cut -d " " -f 1 |sort -u` ; do
        pack=`dpkg -S $i |grep bin |cut -f 1 -d : | uniq`
        echo "Service $i ist durch $pack installiert";
        init=`dpkg -L $pack |grep init.d/ `
        if [ ! -z "$init" ]; then
                 echo "und wird durch $init gestartet"
        fi
done
</example>

<item>Wenn Sie ungew&uuml;nschte Services finden, entfernen Sie das Paket
(mit <prgn>dpkg --purge</prgn>) oder, wenn er n&uuml;tzlich ist aber
nicht beim Starten aktiviert werden soll, benutzen Sie
<prgn>update-rc.d</prgn> (siehe <ref id="disableserv">), um den ihn aus
dem Start-Prozess zu entfernen.

<item>F&uuml;r inetd Services (durch den Superdaemon gestartet)
k&ouml;nnen Sie einfach dei aktivierten Services pr&uuml;fen, zum
Beispiel mit:

<example>
$ grep -v "^#" /etc/inetd.conf | sort -u
</example>

und deaktivieren Sie diejenigen, die Sie nicht ben&ouml;tigen, indem Sie
die Zeile auskommentieren, das Paket entfernen, oder indem Sie
<prgn>update-inetd</prgn> benutzen.

<item>Wenn Sie Services eingeh&uuml;llt haben (und
<prgn>/usr/sbin/tcpd</prgn> benutzen) pr&uuml;fen Sie, ob
<file>/etc/hosts.allow</file> und <file>/etc/hosts.deny</file> passend zu
Ihrer Service-Regelung konfiguriert sind.

<item>Wenn m&ouml;glich, und abh&auml;ngig von jedem Service,
m&ouml;chten Sie vielleicht die Services limitieren, wenn Sie mehrere
externe Schnittstellen benutzen, damit sie nur auf eines davon achten.
Wenn Sie zum Beispiel internen FTP-Zugriff erlauben, lassen Sie den
FTP-Daemon nur auf diese Schnittstelle achten, nicht auf alle (d.h.
0.0.0.0:21).

<item>Booten Sie die Maschine neu, oder wechseln Sie in den Single-User
Modus und zur&uuml;ck in den Multi-User Modus mit:
<example>
$ init 1
(....)
$ init 2
</example>

<item>Pr&uuml;fen Sie die nun angebotenen Services und wiederholen Sie
die letzten Schritte falls n&ouml;tig.

<item>Installieren Sie jetzt die ben&ouml;tigten Services, falls es noch
nicht geschehen ist, und konfigurieren Sie sie passend.

<item>Pr&uuml;fen Sie, welche User benutzt werden, um angebotenen
Services zu starten, zum Biespiel mit:

<example>
$ for i in `/usr/sbin/lsof -i |grep LISTEN |cut -d " " -f 1 |sort -u`; do
user=`ps -ef |grep $i |grep -v grep |cut -f 1 -d " "` ; echo "Service $i
laeuft als Benutzer $user"; done
</example>

und &uuml;berlegen Sie, ob Sie diese Services zu einem bestimmten User /
einer bestimmten Gruppe &auml;ndern wollen und Sie vielleicht auch in
eine chroot-Umgebung packer wollen, um die Sicherheit zu erh&ouml;hen.
Sie k&ouml;nnen dies tun, indem Sie die <file>/etc/init.d</file> Skripte
&auml;ndern, die den Service starten. Die meisten Services benutzen unter
Debian <prgn>start-stop-daemon</prgn>, so dass Sie einfach die
--change-uid und --chroot Optionen benutzen k&ouml;nnen, um diese
Services aufzusetzen. Das einpacken eines Services in eine
Chroot-Umgebung w&uuml;rde den Rahmen dieses Dokumentes sprengen, aber
ein paar warnende Worte sind n&ouml;tig: Sie werden wahrscheinlich alle
Dateien, die durch das Paket des Services installiert wurden, unter
Benutzung von dpkg -L und der Pakete, von denen es abh&auml;ngt, in die
Chroot-Umgebung legen m&uuml;ssen.

<item>Wiederholen Sie die oberen Schritte, um zu pr&uuml;fen, ob nur die
gew&uuml;nschten Services laufen und ob sie unter der gew&uuml;nschten
User/Gruppen Kombination laufen.

<item>Testen Sie die installieren Services, um zu festzustellen, ob Sie
wie erwartet arbeiten.

<item>Checken Sie das System, indem Sie einen
Verwundbarkeits-Absch&auml;tzungs-Scanner (zum Beispiel
<package>nessus</package>) benutzen, um Angriffm&ouml;glichkeiten
(Fehlkonfigurationen, alte oder nicht ben&ouml;tigte Services) zu finden.

<item>Installieren Sie Netzwerk-Eindringlings-Massnahmen und
Host-Eindringlings-Massnahmen (wie <package>snort</package> und
<package>logsentry</package>).

<item>Wiederholen Sie den Netzwerk-Scan und pr&uuml;fen Sie, ob das
Eindringslings-Erkennungs-System funktioniert.

</list>

Dir richtig Paranoiden &uuml;berlegen sich auch das folgende:

<list>

<item>f&uuml;gen Sie dem Systen Firewall F&auml;higkeiten hinzu, die
eingehende Verbindungen nur zu angebotenen Services erlauben und
ausgehende Verbindungen auf authorisierte beschr&auml;nkt.

<item>&Uuml;berpr&uuml;fen Sie erneut die Installation auf Angriffspunkte
mit einem Netzwerk Scanner.

<item>Pr&uuml;fen Sie ausgehende Verbindungen vom System zu Hosts
ausserhalb mit einem Netzwerk-Scanner, um sicherzustellen, dass
ungewollte Verbindungen keinen Weg nach draussen finden.

</list>

<p>FIXME: this procedure considers service hardening but not system
hardening at the user level, include information regarding checking
user permissions, setuid files and freezing changes in the system
using the ext2 filesystem.

<appendix id="checklist">Konfigurations Checkliste

<p>Dieser Anhang Anhang wiederholt kurz Punkte aus anderen Abschnitten
dieser Anleitung in einem verdichteten Checklisten Format. Er ist als
schnelle Zusammenfassung f&uuml;r Leute gedacht, die bereits diese
Anleitung gelesen haben. Es gibt auch andere Checklisten, Kurt Seifried
hat eine basierend auf dem Kurs <url
id="http://seifried.org/security/os/linux/20020324-securing-linux-step-by-step.html"
name="Securing Linux Step by Step"> aufgesetzt.


<!-- FIXME: Add pointer to Unix Security Checklist (CERT) -->

<!-- Order is slightly different from body text. Consider changing text? -->
<!-- (FIXME) -->

<p>FIXME: This is based on v1.4 of the manual and might need to be updated.

<list>
	  <item>Schr&auml;nkgen Sie physischen Zugriff und
	  Boot-F&auml;higkeiten ein.
	      <list>
		<item>Setzen Sie ein BIOS-Passwort
		<item>Schalten Sie das Booten von Diskette, CD-ROM, ...
		ab
		<item>Setzen Sie ein LILO bzw. GRUB Passwort
		(<file>/etc/lilo.conf</file> bzw.
		<file>/boot/grub/menu.lst</file>); pr&uuml;fen Sie, dass
		die LILO oder GRUB Konfigurationen nicht einsehbar ist
		<item>Verhindern Sie die Hintert&uuml;r des Bootens von
		Diskette durch den MBR, indem Sie den MBR
		&uuml;berschreiben (vielleicht nicht?)
		<!-- TODO: Ich kenne diese back door nicht, und habe das
		vielleicht falsch uebersetzt:
		Disallow MBR floppy booting back door by
		    overwriting the MBR (maybe not?) -->

	      </list>
	      
	  <item>Parttionierung
	      <list>
		<item>Separieren Sie User-schreibbare Daten, nicht-System
		Daten und sich st&auml;ndig &auml;ndernde Laufzeit Daten
		auf ihre eigenen Partitionen
		<item>Setzen Sie <tt>nosuid,noexec,nodev</tt>
		Mount-Optionen in die <file>/etc/fstab</file> bei
		ext2-Partitionen, wie zum Beispiel <file>/tmp</file>.
	      </list>
	      
	  <item>Passwort-Hygiene und Login-Sicherheit
	      <list>
		<item>Setzen Sie ein gutes Root-Passwort
		<item>Benutzen Sie Shadow- und MD5-Passwords
		<item>Installieren und benutzen Sie PAM
		    <list>
		      <item>F&uuml;gen Sie PAM MD5 Support hinzu, und
		      stellen Sie sicher (allgemein gesprochen) dass die
		      Eintr&auml;ge in den <file>/etc/pam.d/</file>
		      Dateien, die Zugriff auf die Maschine
		      gew&auml;hren, das zweite Feld <!-- or is it third?
		      (FIXME: check) --> in der pam.d-Datei auf
		      "requisite" oder "required" gesetzt haben.
		      <item>&Auml;ndern Sie
		      <file>/etc/pam.d/login</file>, so dass es nur
		      lokale Root-Logins erlaubt.
		      <item>Markieren Sie ausserdem authorisierte ttys in
		      <file>/etc/security/access.conf</file> und setzen
		      Sie diese Datei &uuml;berhaupt so auf, dass
		      Root-Logins so weit wie m&ouml;glich
		      eingeschr&auml;nkt werden.
		      <item>F&uuml;gen Sie pam_limits.sp hinzu, wenn Sie
		      pro User Einschr&auml;nkungen vornehmen wollen.
		      <item>&Auml;ndern Sie
		      <file>/etc/pam.d/passwd</file>: Setzen Sie die
		      minimum L&auml;nge von Passworten hoch (vielleicht
		      sechs Zeichen) und schalten Sie md5 ein.
		      <item>Wenn Sie es w&uuml;nschen, f&uuml;gen Sie
		      <file>/etc/group</file> die Gruppe wheel hinzu;
		      f&uuml;gen Sie <file>/etc/pam.d/su</file>
		      pam_whell.so group=wheel hinzu.
		      <item>For angepasste pro-User Kontrollen, benutzen
		      Sie pam_listfile.so Eintr&auml;ge, wo es passt.
		      <item>Erstellen Sie eine Datei
		      <file>/etc/pam.d/other</file> und setzen Sie sie
		      mit strenger Sicherheit auf.
		    </list>
		<item>Setzen Sie in
		<file>/etc/security/limits.conf</file> Schranken
		(beachten Sie, dass <file>/etc/limits</file> nicht
		benutzt wird, wenn Sie PAM benutzen).
		<item>Festigen Sie <file>/etc/login.defs</file>; wenn Sie
		MD5 und/oder PAM einschalten machen Sie auch hier
		ebenfalls die gleichbedeutenden &Auml;nderungen.
		<item>Schalten Sie root FTP-Zugriff in
		<file>/etc/ftpusers</file> ab.
		<item>Schalten Sie Root-Login &uuml;bers Netzwerk ab;
		benutzen Sie <manref name="su" section="1"> oder <manref
		name="sudo" section="1"> (&uuml;berlegen Sie die
		Installation von <package>sudo</package>).
		<item>Benutzen Sie PAM, um zus&auml;tzliche Auflagen auf
		Logins zu erm&ouml;glichen.
	      </list>

	  <item>Andere Lokale Sicherheits Sachen:
	      <list>
		<item>Kernel Tweaks
		    (siehe <ref id="kernel-conf">)
		    
		<item>Kernel Patches
		    (siehe <ref id="kernel-patches">)
		    
		<item>Festigen der Zugriffsrechte auf Log-Dateien
		    (<file>/var/log/{last,fail}log</file>, Apache Logs)
		    
		<item>Verifizieren Sie, dass in
		<file>/etc/checksecurity.conf</file> setuid Checks
		eingeschaltet sind.
		<item>&Uuml;berlegen Sie sich, an Log-Dateien nur
		anh&auml;ngen zu lassen (append-only) und
		Konfigurations-Dateien unver&auml;nderbar (immutable) zu
		machen, indem Sie chattr benutzen (nur ext2 Dateisystem)
		<item>Setzen Sie Datei-Integrit&auml;ts-Test aus (siehe <ref
		id="check-integ">). Installieren Sie
		<package>debsums</package>.
		<item>&Uuml;berlegen Sie, locate durch slocate zu
		ersetzen.
		<item>Alles auf einem lokalen Drucker mitloggen?
		<item>Brennen Ihrer Konfiguration auf eine bootbare CD und
		hier von booten?
		<item>Abschalten von Kernel-Modulen?
	      </list>
	      
	  <item>Beschr&auml;nken von Netzwerk Zugriff
	      <list>
		<item>Installieren und konfigurieren Sie <prgn>ssh</prgn>
		    (Vorschlag: PermitRootLogin No in <file>/etc/ssh/sshd_config</file>,
		    PermitEmptyPasswords No; beachten Sie auch die
		    anderen Vorschl&auml;ge im Text).
		<item>&Uuml;berlegen Sie, ob Sie telnetd abschalten (in
		<file>/etc/inetd.conf</file>, benutzen Sie <tt>update-inetd
		      --disable</tt> (oder schalten Sie inetd ganz ab,
		      oder benutzen Sie einen Ersatz wie xinetd oder
		      rlinetd)) oder entfernen.
		<item>Schalten Sie andere überflüssig Netzwerk Services
		ab; mail, ftp, DNS, www usw. sollten nicht laufen, wenn
		Sie sie nicht brauchen und nicht regelm&auml;ssig
		&uuml;berwachen.
		<item>Bei den Servicen, die Sie brauchen, installieren
		Sie nicht die weitverbreitesten Programme, sondern
		schauen Sie f&uuml;r sicherere Versionen, die Debian
		liefert (oder aus anderen Quellen). Was auch immer Sie
		schliesslich benutzen: Gehen Sie sicher, dass Sie die
		Risiken verstanden haben.
		<item>Setzen Sie Chroot-Umgebungen f&uuml;r
		&auml;ussw&auml;rtige User und Daemonen auf
		<item>Konfigurieren Sie Firewall und tcp-Wrapper (d.h.
		<manref name="hosts_access" section="5">); beachten Sie
		den Trick f&uuml;r <file>/etc/hosts.deny</file> im Text.
		<item>Wenn Sie FTP laufen lassen, setzen Sie den
		ftpd-Server so auf, dass er immer als chroot im
		Heimat-Verzeichnis des Users l&auml;uft.
		<item>Wenn Sie X laufen lasen, schalten Sie xhost
		authentifizierung ab und benutzen Sie stattdessen ssh;
		oder noch besser. Ignorieren Sie weitergeleitete X
		komplett, wenn Sie k&ouml;nnen (hinzuf&uuml;gen von
		-nolisten tcp zu der X Kommando-Zeile und schalten Sie
		XDMCP in <file>/etc/X11/xdm/xdm-config</file> ab, indem
		Sie den requestPort auf 0 setzen)
		<item>Schalten Sie Zugriff von Ausserhalb auf den Drucker
		ab
		<item>Tunneln Sie alle IMAP Oder POP Sitzungen durch SSL
		oder SSH; installieren Sie stunnel, wenn Sie diesen
		Service anderen Mail-Usern anbieten wollen
		<item>Setzen Sie einen Log-Host auf, und konfigurieren
		Sie andere Maschinen, ihre Logs an diesen Host zu senden
		(<file>/etc/syslog.conf</file>)
		<item>Sichern Sie BIND, Sendmail und andere komplexe
		Daemonen (starten in einer chroot-Umgebung; starten als
		nicht-Root pseudo-User)
		<item>Installieren Sie snort oder ein &auml;hnliches
		&Uuml;berwachungs Tools)
		<item>Verzichten Sie, falls m&ouml;glich, auf NIS Und RPC
		(abschalten von portmap).
	      </list>

	  <item>Policy Angelegenheiten
	      <list>
		<item>Kl&auml;ren Sie die User &uuml;ber das Warum und
		Wie Ihrer Regelungen auf. Wenn Sie etwas verboten haben,
		dass auf anderen Systemen normalerweise verf&uuml;gbar
		ist, stellen Sie Dokumentation bereit, die erkl&auml;rt,
		wie man gleiche Resultate erreicht, indem man andere,
		sichere Mittel anwendet.
		<item>Verbieten Sie die Nutzung von Protokollen, die
		Klartext Passw&ouml;rtet benutzen (telnet, rsh und
		Freunde, ftp, imap, pop, http, ...).
		<item>Verbieten Sie Programme, die SVGAlib benutzen.
		<item>Benutzen Sie Disk-Quotas.
	      </list>
	      
	  <item>Bleiben Sie &uuml;ber Sicherheits Angelegenheiten
	  informiert
	      <list>
		<item>Abonieren Sie sicherheits relevante Mailing-Listen
		<item>Abonieren Sie sicherheits Updates -- f&uuml;gen Sie
		<file>/etc/apt/sources.list</file> einen Eintrag (oder
		Eintr&auml;ge) f&uuml;r
		http://security.debian.org/debian-security
		<item>Erinnern Sie sich auch regelm&auml;ssig
		<prgn>apt-get update ; apt-get upgrade</prgn> (vielleicht
		per Cron-Job?) wie unter <ref id="update"> beschrieben
		laufen zu lassen.
	      </list>
	</list>

<appendix id="snort-box">Aufsetzen eines autonomen IDS

<p>Sie k&ouml;nnen sehr leicht eine Debian-Box als eigenst&auml;ndiges
Eindringlings-Erkennungs-System (Intrusion Detection System, IDS)
aufsetzen, wen Sie <package>snort</package> benutzen.

<p>Ein paar Richtlinien:

<list>
<item>Installieren Sie ein Debian Basis-System ohne zus&auml;tzliche
Pakete.

<item>Laden Sie notwendige Pakete (siehe die Liste der installierten
Pakete weiter unten) manuell herunter und installieren Sie
sie (mit dpkg)

<item>Laden Sie ACID (Analysis Console for Intrusion Databases, Analyse
Konsole f&uuml;r Eindringling Datenbanken) herunter und installieren Sie
es
</list>

<p>ACID wird derzeit mit <package>acidlab</package> f&uuml;r Debian
paketiert, und stellt eine graphische WWW Schnittstelle zur Ausgabe von
Snort zur verf&uuml;gung.
Es kann von <url id="http://www.cert.org/kb/acid/">, <url
id="http://acidlab.sourceforge.net"> oder <url
id="http://www.andrew.cmu.edu/~rdanyliw/snort/"> heruntergeladen werden.
Sie m&ouml;chten vielleicht die <url
id="http://www.linuxdoc.org/HOWTO/Snort-Statistics-HOWTO/index.html"
name="Snort Statistics HOWTO"> lesen.

<p>Dieses System sollte mit wenigstens Zwei Netzwerk-Schnittstellen
ausgestatten sein: Eine mit dem Verwaltungs-LAN verbunden (um die
Resultate abzufragen und das System zu verwalten), und eines ohne
ip-Adresse, das an mit dem zu beobachtenden  Netzwerk-Segment verbunden
ist.

<p>Sie k&ouml;nnen normalerweise nicht die standard Debian Datei
<file>/etc/network/interfaces</file> benutzen, um die Netzwerk-Karten zu
konfigurieren, da <prgn>ifup</prgn> und <prgn>ifdown</prgn> mehr
Informationen erwarten, als ben&ouml;tigt werden. Benutzen Sie einfach
<tt>ifconfig ethX up</tt>.

<p>Abgesehen von der standard Debian installation ben&ouml;tigen Sie
Apache, MySQL und PHP4 damit ACID funktioniert. Laden Sie die Pakete
herunter (Beachten Sie: Die Versionen k&ouml;nnen abh&auml;ngig von der
verwendeten Debian Distribution variieren, diese sind von Debian
<em>Woody</em> September 2001):

<example>
ACID-0.9.5b9.tar.gz
adduser_3.39_all.deb
apache-common_1.3.20-1_i386.deb
apache_1.3.20-1_i386.deb
debconf_0.9.77_all.deb
dialog_0.9a-20010527-1_i386.deb
fileutils_4.1-2_i386.deb
klogd_1.4.1-2_i386.deb
libbz2-1.0_1.0.1-10_i386.deb
libc6_2.2.3-6_i386.deb
libdb2_2.7.7-8_i386.deb
libdbd-mysql-perl_1.2216-2_i386.deb
libdbi-perl_1.18-1_i386.deb
libexpat1_1.95.1-5_i386.deb
libgdbmg1_1.7.3-27_i386.deb
libmm11_1.1.3-4_i386.deb
libmysqlclient10_3.23.39-3_i386.deb
libncurses5_5.2.20010318-2_i386.deb
libpcap0_0.6.2-1_i386.deb
libpcre3_3.4-1_i386.deb
libreadline4_4.2-3_i386.deb 
libstdc++2.10-glibc2.2_2.95.4-0.010703_i386.deb
logrotate_3.5.4-2_i386.deb
mime-support_3.11-1_all.deb
mysql-client_3.23.39-3_i386.deb
mysql-common_3.23.39-3.1_all.deb
mysql-server_3.23.39-3_i386.deb
perl-base_5.6.1-5_i386.deb
perl-modules_5.6.1-5_all.deb
perl_5.6.1-5_i386.deb
php4-mysql_4.0.6-4_i386.deb
php4_4.0.6-1_i386.deb
php4_4.0.6-4_i386.deb
snort_1.7-9_i386.deb
sysklogd_1.4.1-2_i386.deb
zlib1g_1.1.3-15_i386.deb
</example>

<p>Installierte Pakete (dpkg -l):
<example>
ii  adduser        3.39
ii  ae             962-26
ii  apache         1.3.20-1
ii  apache-common  1.3.20-1
ii  apt            0.3.19
ii  base-config    0.33.2
ii  base-files     2.2.0
ii  base-passwd    3.1.10
ii  bash           2.03-6
ii  bsdutils       2.10f-5.1
ii  console-data   1999.08.29-11.
ii  console-tools  0.2.3-10.3
ii  console-tools- 0.2.3-10.3
ii  cron           3.0pl1-57.2
ii  debconf        0.9.77
ii  debianutils    1.13.3
ii  dialog         0.9a-20010527-
ii  diff           2.7-21
ii  dpkg           1.6.15
ii  e2fsprogs      1.18-3.0
ii  elvis-tiny     1.4-11
ii  fbset          2.1-6
ii  fdflush        1.0.1-5
ii  fdutils        5.3-3   
ii  fileutils      4.1-2   
ii  findutils      4.1-40
ii  ftp            0.10-3.1
ii  gettext-base   0.10.35-13
ii  grep           2.4.2-1
ii  gzip           1.2.4-33
ii  hostname       2.07
ii  isapnptools    1.21-2
ii  joe            2.8-15.2  
ii  klogd          1.4.1-2   
ii  ldso           1.9.11-9   
ii  libbz2-1.0     1.0.1-10
ii  libc6          2.2.3-6
ii  libdb2         2.7.7-8
ii  libdbd-mysql-p 1.2216-2
ii  libdbi-perl    1.18-1
ii  libexpat1      1.95.1-5
ii  libgdbmg1      1.7.3-27
ii  libmm11        1.1.3-4
ii  libmysqlclient 3.23.39-3
ii  libncurses5    5.2.20010318-2
ii  libnewt0       0.50-7  
ii  libpam-modules 0.72-9
ii  libpam-runtime 0.72-9  
ii  libpam0g       0.72-9
ii  libpcap0       0.6.2-1
ii  libpcre3       3.4-1   
ii  libpopt0       1.4-1.1
ii  libreadline4   4.2-3 
ii  libssl09       0.9.4-5   
ii  libstdc++2.10  2.95.2-13 
ii  libstdc++2.10- 2.95.4-0.01070
ii  libwrap0       7.6-4   
ii  lilo           21.4.3-2
ii  locales        2.1.3-18
ii  login          19990827-20
ii  makedev        2.3.1-46.2
ii  mawk           1.3.3-5
ii  mbr            1.1.2-1 
ii  mime-support   3.11-1 
ii  modutils       2.3.11-13.1
ii  mount          2.10f-5.1
ii  mysql-client   3.23.39-3
ii  mysql-common   3.23.39-3.1
ii  mysql-server   3.23.39-3
ii  ncurses-base   5.0-6.0potato1
ii  ncurses-bin    5.0-6.0potato1
ii  netbase        3.18-4  
ii  passwd         19990827-20
ii  pciutils       2.1.2-2
ii  perl           5.6.1-5   
ii  perl-base      5.6.1-5   
ii  perl-modules   5.6.1-5
ii  php4           4.0.6-4   
ii  php4-mysql     4.0.6-4 
ii  ppp            2.3.11-1.4
ii  pppconfig      2.0.5
ii  procps         2.0.6-5   
ii  psmisc         19-2   
ii  pump           0.7.3-2 
ii  sed            3.02-5 
ii  setserial      2.17-16
ii  shellutils     2.0-7
ii  slang1         1.3.9-1  
ii  snort          1.7-9
ii  ssh            1.2.3-9.3
ii  sysklogd       1.4.1-2
ii  syslinux       1.48-2
ii  sysvinit       2.78-4  
ii  tar            1.13.17-2  
ii  tasksel        1.0-10 
ii  tcpd           7.6-4     
ii  telnet         0.16-4potato.1
ii  textutils      2.0-2  
ii  update         2.11-1    
ii  util-linux     2.10f-5.1
ii  zlib1g         1.1.3-15  
</example>

<appendix id="bridge-fw">Aufsetzen einer &Uuml;berbr&uuml;ckenden <!--
AUA! --> Firewall (bridge Firewall)

<p>Diese Informationen trug Francois Bayart bei, um User zu helfen, eine
Linux Bridge / Firewall mit 2.4.x Kernel und <package>iptables</package>
aufzusetzen. Es wird lediglich noch der Bridge-Firewall-Patch
ben&ouml;tigt, den Sie auf der <url name="sourceforge download page"
id="http://bridge.sourceforge.net/download.html"> finden.

<p>Wenn Sie zum Beispiel einen 2.4.18er Kernel benutzen, m&uuml;sen Sie
den entsprechenden <url name="patch"
id="http://bridge.sourceforge.net/devel/bridge-nf/bridge-nf-0.0.6-against-2.4.18.diff">
herunterladen und anschliessend auf die installierten Kernel-Quellen
anwenden:

<example>
Zipowz:/usr/src# apt-get install kernel-source-2.4.18
Zipowz:/usr/src# cd kernel-source-2.4.18
Zipowz:/usr/src/kernel-source-2.4.18# patch -p1 < ../bridge-nf-0.0.6-against-2.4.18.diff 
patching file include/linux/netfilter.h
patching file include/linux/netfilter_ipv4.h
patching file include/linux/skbuff.h
patching file net/bridge/br.c
patching file net/bridge/br_forward.c
patching file net/bridge/br_input.c
patching file net/bridge/br_netfilter.c
patching file net/bridge/br_private.h
patching file net/bridge/Makefile
patching file net/Config.in
patching file net/core/netfilter.c
patching file net/core/skbuff.c
patching file net/ipv4/ip_output.c
patching file net/ipv4/netfilter/ip_tables.c
patching file net/ipv4/netfilter/ipt_LOG.c
</example>

<p>Jetzt rufen Sie die Kernel-Konfiguration auf (mit Ihrer lieblings
Methode: make menuconfig, make xconfig, ...). Aktivieren Sie diese
Optionen unter <em>Networking option</em>:

<example>
[*] Network packet filtering (replaces ipchains)
[ ]   Network packet filtering debugging (NEW)
<*> 802.1d Ethernet Bridging
[*]   netfilter (firewalling) support (NEW)
</example>

<p>Passen Sie auf, dass Sie dieses hier deaktiviert haben, wenn Sie
Firewall-Regeln anwenden wollen, oder iptables funktioniert nicht.

<example>
[ ]   Network packet filtering debugging (NEW)
</example>

<p>Anschliessend m&uuml;ssen Sie die korrekten Optionen im Abschnitt
<em>IP: Netfilter Configuration</em>setzen. Dann kompilieren und
installieren Sie den Kernel. Wenn Sie dies auf die <em>Debian Art</em>
machen wollen, installieren Sie <package>kernel-package</package> und
benutzen Sie <prgn>make-kpkg</prgn> um ein neues Debian Paket zu
erstellen, das Sie auf Ihrem Server installieren k&ouml;nnen (oder auf
einem anderen System benutzen k&ouml;nnen). Sobald der neue Kernel
kompiliert und installiert ist, m&uuml;ssen Sie die
<package>bridge-utils</package> installieren.

<p>Jetzt k&ouml;nnen Sie zwei verschiedene Konfigurationen betrachten,
die Ihnen zeigen, wie sie das konfigurieren k&ouml;nnen, sobald diese
Schritte erledigt sind. Beide Konfigurationen sind mit einer
Netzwerk-Karte und den notwendigen Kommandos zur konfiguration der Bridge
aufgef&uuml;hrt.

<sect>Eine Bridge mit NAT- und Firewall-F&auml;higkeiten

<p>Die erste benutzt eine Bridge als Firewall mit Network Address
Translation (NAT),  die einen Server und interne LAN-Clienten
sch&uuml;tzt.

<example>
Internet ----- router ( 62.3.3.25 ) ----- bridge ( 62.3.3.26 gw 62.3.3.25 / 192.168.0.1 )
                                            |
                                            |
                                            |---- WWW-Server ( 62.3.3.27 gw 62.3.3.25 )
                                            |
                                            |
                                           LAN --- Zipowz ( 192.168.0.2 gw 192.168.0.1 )
</example>

<p>Diese Kommandos zeigen, wie die Bridge konfiguriert werden kann:
<example>
# So wird die Schnittstelle br0 erstellt:
/usr/sbin/brctl addbr br0

# Hinzuf&uuml;gen der Ethernet-Schnittstellen, die die Bridge benutzen
# soll
/usr/sbin/brctl addif br0 eth0
/usr/sbin/brctl addif br0 eth1

# Die Schnittstellen einfach starten
/sbin/ifconfig eth0 0.0.0.0
/sbin/ifconfig eth1 0.0.0.0

# Konfigurieren der Ethernet-Bridge
# Die Bridge wird korrekt und unsichtbar (transparente Firewall) sein.
# In einem traceroute ist Sie versteckt, und Sie behalten Ihr echtes
# Gateway auf Ihren anderen Computern. Jetzt k&ouml;nnen Sie ein Gateway
# auf Ihrer Bridge konfigurieren und es auf Ihren anderen Computern als
# neues Gateway einsetzen

/sbin/ifconfig br0 62.3.3.26 netmask 255.255.255.248 broadcast 62.3.3.32

# Ich habe benutze diese internen IPs f&uuml;r mein NAT
ip addr add 192.168.0.1/24 dev br0
/sbin/route add default gw 62.3.3.25
</example>

<sect>Eine Bridge mit Firewall F&auml;higkeiten

<p>Dieses System ist als transparente Firewall f&uuml;r ein LAN mit
&ouml;ffentlichen IP-Addressen aufgesetzt.

<example>
Internet ----- router ( 62.3.3.25 ) ----- bridge ( 62.3.3.26 )
                                            |
                                            |
                                            |---- WWW Server ( 62.3.3.28 gw 62.3.3.25 )
                                            |
                                            |
                                            |---- Mail Server ( 62.3.3.27 gw 62.3.3.25 )
</example>

<p>Diese Kommandos zeigen, wie die Bridge konfiguriert werden kann:
<example>
# So wird die Schnittstelle br0 erstellt:
/usr/sbin/brctl addbr br0

# Hinzuf&uuml;gen der Ethernet-Schnittstellen, die die Bridge benutzen
# soll
/usr/sbin/brctl addif br0 eth0
/usr/sbin/brctl addif br0 eth1

# Die Schnittstellen einfach starten
/sbin/ifconfig eth0 0.0.0.0
/sbin/ifconfig eth1 0.0.0.0

# Konfigurieren der Ethernet-Bridge
# Die Bridge wird korrekt und unsichtbar (transparente Firewall) sein.
# In einem traceroute ist Sie versteckt, und Sie behalten Ihr echtes
# Gateway auf Ihren anderen Computern. Jetzt k&ouml;nnen Sie ein Gateway
# auf Ihrer Bridge konfigurieren und es auf Ihren anderen Computern als
# neues Gateway einsetzen

/sbin/ifconfig br0 62.3.3.26 netmask 255.255.255.248 broadcast 62.3.3.32
</example>

<p>Wenn Sie traceroute auf den Linux-Mail-Server schicken, sehen Sie die
Bridge nicht, wenn Sie mit ssh auf die Bridge zugreifen wollen,
m&uuml;ssen Sie ein Gateway haben, oder erst auf einen anderen Server,
wie den "Mail Server", zugreifen um dann &uuml;ber die interne
Netzwerkkarte auf die Bridge zuzugreifen.

<sect>grundlegende Iptables-Regeln

<p>Dies ist ein Beispiel f&uuml;r grundlegende Regeln, die f&uuml;r beide
Beispiele benutzt werden k&ouml;nnten:

<example>
iptables -F FORWARD
iptables -P FORWARD DROP
iptables -A FORWARD -s 0.0.0.0/0.0.0.0 -d 0.0.0.0/0.0.0.0 -m state --state INVALID -j DROP
iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

# Zwei lustige Regeln, aber nicht bei klassischen Iptables. Sorry ...
# Limit ICMP 
# iptables -A FORWARD -p icmp -m limit --limit 4/s -j ACCEPT
# Uebereinstimmende Strings, eine gute, einfache Methode, um Viren sehr
# schnell abzublocken
# iptables -I FORWARD -j DROP -p tcp -s 0.0.0.0/0 -m string --string "cmd.exe"

# Abblocken aller MySQL Verbindingen, nur um ganz sicher zu gehen
iptables -A FORWARD -p tcp -s 0/0 -d 62.3.3.0/24 --dport 3306 -j DROP

# Regeln f&uuml;r den Linux Mail Server
#

# Erlaube FTP-DATA ( 20 ) , FTP ( 21 ) , SSH ( 22 ) 
iptables -A FORWARD -p tcp -s 0.0.0.0/0 -d 62.3.3.27/32 --dport 20:22 -j ACCEPT

# Dem Mail-Server erlauben, sich mit der Aussenwelt zu verbinden
# Beachten Sie: Dies ist *nicht* fuer die vorherigen Verbindungen
# notwendig (Erinnern Sie sich: stateful filtering) und koennte entfernt
# werden:
iptables -A FORWARD -p tcp -s 62.3.3.27/32 -d 0/0 -j ACCEPT

# Regeln fuer den WWW-Server
#

# Erlaube HTTP ( 80 ) Verbindungen mit dem WWW-server
iptables -A FORWARD -p tcp -s 0.0.0.0/0 -d 62.3.3.28/32 --dport 80 -j ACCEPT

# Erlaube HTTPS ( 443 ) Verbindungen mit dem WWW-server
iptables -A FORWARD -p tcp -s 0.0.0.0/0 -d 62.3.3.28/32 --dport 443 -j ACCEPT

# Dem WWW-Server erlauben, sich mit der Aussenwelt zu verbinden
# Beachten Sie: Dies ist *nicht* fuer die vorherigen Verbindungen
# notwendig (Erinnern Sie sich: stateful filtering) und koennte entfernt
# werden:
iptables -A FORWARD -p tcp -s 62.3.3.28/32 -d 0/0 -j ACCEPT
</example>

<appendix id="bind-chuser">Beispiel Skript, um die standard Installation
von Bind zu &auml;ndern

<p>Dieses Skript automatisiert die Prozedur, die standard Installation
des Name-Server zu &auml;ndern, so dass er <em>nicht</em> als Superuser
l&auml;uft. Benutzen Sie es vorsichtig, da es nicht ausreichend getestet
wurde. Dieses Skript wird auch den User und die Gruppe f&uuml;r den
Name-Server erstellen.

<example>
#!/bin/sh
# Change the default Debian bind configuration to have it run
# with a non-root user and group.
#
# WARN: This script has not been tested throughly, please
# verify the changes made to the INITD script

# (c) 2002 Javier Fernandez-Sanguino Peña
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 1, or (at your option)
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#     Please see the file `COPYING' for the complete copyright notice.
#

restore() {
# Just in case, restore the system if the changes fail
	echo "WARN: Restoring to the previous setup since I'm unable to properly change it."
	echo "WARN: Please check the $INITDERR script."
	mv $INITD $INITDERR
	cp $INITDBAK $INITD
}


USER=named
GROUP=named
INITD=/etc/init.d/bind
INITDBAK=$INITD.preuserchange
INITDERR=$INITD.changeerror
START="start-stop-daemon --start --quiet --exec /usr/sbin/named -- -g $GROUP -u $USER"
AWKS="awk ' /start-stop-daemon --start/ { print \"$START\"; noprint = 1; }; /\/usr\/sbin\/ndc reload/ { print \"stop; sleep 2; start;\"; noprint = 1; } /\\\\$/ { if ( noprint != 0 ) { noprint = noprint + 1;} } /^.*$/ { if ( noprint != 0 ) { noprint = noprint - 1; } else { print \$0; } } '"

[ `id -u` -ne 0 ] && {
	echo "This program must be run by the root user"
	exit 1
}

RUNUSER=`ps -eo user,fname |grep named |cut -f 1 -d " "`

if [ "$RUNUSER" = "$USER" ] 
then
	echo "WARN: The name server running daemon is already running as $USER"
	echo "ERR:  This script will not many any changes to your setup."
	exit 1
fi
if [ ! -f $INITD ]
then
        echo "ERR:  This system does not have $INITD (which this script tries to change)"
        RUNNING=`ps -eo fname |grep named`
         [ -z "$RUNNING" ] && \
	    echo "ERR:  In fact the name server daemon is not even running (is it installed?)"
         echo "ERR:  No changes will be made to your system"
	exit 1
fi

# Check if named group exists
if [ -z "`grep $GROUP /etc/group`" ] 
then
	echo "Creating group $GROUP:"
	addgroup $GROUP
else
	echo "WARN: Group $GROUP already exists. Will not create it"
fi
# Same for the user
if [ -z "`grep $USER /etc/passwd`" ] 
then
	echo "Creating user $USER:"
	adduser --system --home /home/$USER \
	--no-create-home --ingroup $GROUP \
	--disabled-password --disabled-login $USER
else
	echo "WARN: The user $USER already exists. Will not create it"
fi

# Change the init.d script

# First make a backup (check that there is not already
# one there first)
if [ ! -f $INITDBAK ] 
then
	cp $INITD $INITDBAK
fi

# Then use it to change it
cat $INITDBAK |
eval $AWKS > $INITD

echo "WARN: The script $INITD has been changed, trying to test the changes."
echo "Restarting the named daemon (check for errors here)."

$INITD restart
if [ $? -ne 0 ] 
then
	echo "ERR:  Failed to restart the daemon."
	restore
	exit 1
fi

RUNNING=`ps -eo fname |grep named`
if [ -z "$RUNNING" ] 
then
	echo "ERR:  Named is not running, probably due to a problem with the changes."
	restore
	exit 1
fi

# Check if it's running as expected
RUNUSER=`ps -eo user,fname |grep named |cut -f 1 -d " "`

if [ "$RUNUSER" = "$USER" ] 
then
	echo "All has gone well, named seems to be running now as $USER."
else
	echo "ERR:  The script failed to automatically change the system."
	echo "ERR:  Named is currently running as $RUNUSER."
	restore
	exit 1
fi

exit 0
</example>

<p>Dieses Skript, angesetzt auf Woodys (Degbian 3.0) angepassten Bind
wird die folgenede initd-Datei erstellen, nachdem der User und die Gruppe
"named" erstellt wurde:

<example>
#!/bin/sh

PATH=/sbin:/bin:/usr/sbin:/usr/bin

test -x /usr/sbin/named || exit 0

start () {
	echo -n "Starting domain name service: named"
	start-stop-daemon --start --quiet \
	    --pidfile /var/run/named.pid --exec /usr/sbin/named 
	echo "."	
}

stop () {
	echo -n "Stopping domain name service: named"
	# --exec doesn't catch daemons running deleted instances of named,
	# as in an upgrade.  Fortunately, --pidfile is only going to hit
	# things from the pidfile.
	start-stop-daemon --stop --quiet  \
	    --pidfile /var/run/named.pid --name named
	echo "."	
}

case "$1" in
    start)
	start
    ;;

    stop)
	stop
    ;;

    restart|force-reload)
	stop
	sleep 2
	start
    ;;
    
    reload)
	/usr/sbin/ndc reload
    ;;

    *)
	echo "Usage: /etc/init.d/bind {start|stop|reload|restart|force-reload}" >&2
	exit 1
    ;;
esac

exit 0
</example>

<appendix id="fw-security-update">Sicherheits-Update gesch&uuml;tzt durch
eine Firewall

<p>Nachdem Sie eine standard Installation auf ein System gebracht haben,
k&ouml;nnten immernoch Sicherheits-L&uuml;cken vorhanden sein, falls dem
so ist k&ouml;nnte es Updates von Debian f&uuml;r die Release geben.
Jedoch k&ouml;nnen Sie die Pakete jedoch nicht auf einem anderen System
herunterladen k&ouml;nnen (oder security.debian.org zu lokalen Zwecken
spiegeln k&ouml;nnen), m&uuml;ssen Sie es mit dem Internet verbinden, um
ein Sicherheits Update zu durchzuf&uuml;hren.

<p>Wenn Sie sich jedoch mit dem Internet verbinden, setzen Sie sich
selbst aus. Wenn einer Ihrer lokalen Services angreifbar ist,
k&ouml;nnten Sie kompromitiert werden, noch bevor das Update beendet ist!
Sie m&ouml;gen dies paranoid finden, aber eine Analyse vom <url
id="http://www.honeynet.org" name="Honeynet Project"> zeigt
tats&auml;chlich, dass ein System in weniger als drei Tagen kompromitiert
werden sogar, sogar wenn das System gar nicht der &Ouml;ffentlichkeit
bekannt ist (d.h. nicht in DNS-Eintr&auml;gen auftaucht).

<p>Wenn Sie ein update auf dem System durchf&uuml;hren, das nicht von
einem externen System (einer Firewall) gesch&uuml;tzt ist, k&ouml;nnen
Sie trotzdem eine lokale Firewall so konfigurieren, dass Sie nur das
Sicherheits-Update selbst erlaubt. Schauen Sie sich das Beispiel untern
an, um zu sehen, wie die lokalen Firewall F&auml;higkeiten aufgesetzt
werden, um ein eingeschr&auml;nktes Setup zu erreichen, in dem nur
Verbindungen zu security.debian.org erlaubt werden, w&auml;hrend der Rest
geloggt wird.


<p>FIXME: add IP address for security.debian.org (since otherwise you
need DNS up to work) on /etc/hosts.

<p>FIXME: test this setup to see if it works properly

<p>FIXME: this will only work with http urls since ftp might need 
the ip_conntrack_ftp module, or use passive mode.

<!-- FIXME: this is probably not needed, after all it is a 
packet inspection fw:
# iptables -A INPUT -s security.debian.org -p 80 -j ACCEPT
-->

<example>
# iptables -F
# iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination
# iptables -P INPUT DROP
# iptables -P FORWARD DROP
# iptables -P OUTPUT DROP
# iptables -A OUTPUT -d security.debian.org -p 80 -j ACCEPT
# iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
# iptables -A INPUT -p icmp -j ACCEPT
# iptables -A INPUT -j LOG
# iptables -A OUTPUT -j LOG
# iptables -L
Chain INPUT (policy DROP)
target     prot opt source               destination
ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0          state RELATED,ESTABLISHED
ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0
LOG        all  --  anywhere             anywhere           LOG level warning

Chain FORWARD (policy DROP)
target     prot opt source               destination

Chain OUTPUT (policy DROP)
target     prot opt source               destination
ACCEPT     80   --  anywhere             security.debian.org
LOG        all  --  anywhere             anywhere           LOG level warning
</example>


</book>
