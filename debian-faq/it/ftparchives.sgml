<!-- retain these comments for translator revision tracking -->
<!-- Original version: $Revision: 1.49 $ -->
<chapt id="ftparchives">Gli archivi FTP Debian

<sect id="dists">Quante distribuzioni Debian ci sono?

<p>Esistono tre distribuzioni principali: la distribuzione "stable"
(stabile), la distribuzione "testing" (in test) e la distribuzione "unstable"
(instabile). La distribuzione "testing" &egrave; a volte congelata, "frozen"
  (si veda <ref id="frozen">). Oltre a queste c'&egrave; la distribuzione
    "oldstable" (che &egrave; semplicemente quella che ha preceduto "stable") e
    quella "experimental".

<p>Experimental &egrave; usata per i pacchetti che sono ancora in fase di
sviluppo e con un alto rischio di danneggiamento del
sistema. Viene usata da sviluppatori che vogliono studiare e testare
software recentissimo. Gli utenti non dovrebbero usare pacchetti
provienienti da l&igrave; perch&eacute; questi possono essere pericolosi e creare danni
anche per le persone pi&ugrave; esperte.

<p>Si veda <ref id="choosing"> per un aiuto riguardante la scelta di una
    distribuzione Debian.

<sect id="codenames">Cosa sono tutti quei nomi come etch, lenny, ecc.?

<p>Sono solo "nomi in codice". Quando una distribuzione Debian
&egrave; in fase di sviluppo non ha un numero di versione ma un nome
in codice. Lo scopo di questi nomi in codice &egrave; di rendere pi&ugrave; semplice
la creazione di mirror delle distribuzioni Debian (se una directory reale
come <tt>unstable</tt> cambiasse improvvisamente il nome in <tt>stable</tt>,
moltissima roba dovrebbe essere inutilmente scaricata di nuovo).

<p>Attualmente, <tt>stable</tt> &egrave; un collegamento simbolico
a <tt>&releasename;</tt> (ovvero &debian; &release;) e <tt>testing</tt>
&egrave; un collegamento simbolico a <tt>&testingreleasename;</tt>.
Questo significa che <tt>&releasename;</tt> &egrave; la distribuzione stable
attuale e che <tt>&testingreleasename;</tt> &egrave; la distribuzione testing
attuale.

<p><tt>unstable</tt> &egrave; un collegamento simbolico permanente a <tt>sid</tt>, dato che
<tt>sid</tt> &egrave; sempre la distribuzione unstable (si veda <ref id="sid">).

<sect1 id="oldcodenames">Quali altri nomi in codice sono stati usati in passato?

<p>Altri nomi in codice che sono gi&agrave; stati usati sono: <tt>buzz</tt> per
  il rilascio 1.1, <tt>rex</tt> per il rilascio 1.2, <tt>bo</tt> per il
  rilascio 1.3.x, <tt>hamm</tt> per il rilascio 2.0, <tt>slink</tt> per
  il rilascio 2.1, <tt>potato</tt> per il rilascio 2.2, <tt>woody</tt>
  per il rilascio 3.0, <tt>sarge</tt> per il rilascio 3.1
  ed <tt>etch</tt> per il rilascio 4.0.

<sect1 id="sourceforcodenames">Da dove derivano questi nomi in codice?

<p>Finora sono stati presi dai nomi dei personaggi del film "Toy Story" della Pixar.
<list>
  <item><em>buzz</em> (Buzz Lightyear) era l'astronauta,
  <item><em>rex</em> era il tirannosauro,
  <item><em>bo</em> (Bo Peep) era la bambina che si prese cura della pecora,
  <item><em>hamm</em> era il salvadanaio a porcellino,
  <item><em>slink</em> (Slinky Dog (R)) era il cane giocattolo,
  <item><em>potato</em> era, ovviamente, Mr. Potato (R),
  <item><em>woody</em> era il cowboy.
  <item><em>sarge</em> era il sergente dell'Armata Verde,
  <item><em>etch</em> era la lavagna giocattolo (Etch-a-Sketch (R)),
  <item><em>lenny</em> era il binocolo giocattolo,
  <item><em>squeeze</em> erano gli alieni con tre occhi,

<!-- SID should be the last line always -->
  <item><em>sid</em> era il bambino della casa accanto casa che distruggeva i giocattoli.
</list>

<!-- Q: Should we add the trademark info here? Maybe as a footnote
 Mr. Potato is a Registered Trademark of Playskool, Inc.,
 Pawtucket, R.I., a division of Hasbro Inc.
 Slinky Dog is a trademark of Poof Products of Plymouth, Mich.,
 Etch-a-Sketch is a trademark of The Ohio Art Company,
 other characters might also be registered trademarks...
 (jfs)
-->

<!--
  more info in http://www.pixar.com/featurefilms/ts/
  and  http://www.pixar.com/featurefilms/ts2/
  or better yet http://us.imdb.com/M/title-exact?Toy%20Story%20(1995)
  or actually:
    http://us.imdb.com/Title?0114709 for TS1
    http://us.imdb.com/Title?0120363 for TS2
  we shouldn't put the links in, Pixar needs no additional propaganda
-->
<!--
  characters not used from Toy Story (yet):
    - Andy (the kid)
    - Snake
    - Robot
    - Scud (Sid's dog)
    - Lenny the Binoculars
    - Three Eyed Alien
    - Rocky (the wrestling figure)
    - Roller Bob (the remote control car)
    - Legs (one of sid's mutant toys)
    - Hand-in-the-box (one of sid's mutant toys)
    - Duckie (one of sid's mutant toys)
  and additional characters from Toy Story 2, also not yet used:
    - Al (the propietor of Al's Toy Farm)
    - Jessie (the Yodelling Cowgirl)
    - Bullseye (Woody's toy horse)
    - Zurg (the Evil Emperor)
    - Wheezy (the penguin)
    - Hannah (owner of Jessie)
    - Stinky Pete the Prospector (the old fat guy)
    - Mrs. Davis (Andy's Mom)
    - Barbie (the Tour Guide, probably under (c))
    - Mrs. Potato Head
    - Heimlich the Caterpillar
-->
<!-- (jfs) Just in case somebody misses the "What do we do when we finish
with Toy Story characters" thread see:
http://lists.debian.org/debian-devel/2002/debian-devel-200207/msg01133.html
I, suggested we followed with either Monster's Inc or "A Bug's life" :)
-->

<sect id="sid">Cosa dire a proposito di "sid"?

<p><em>sid</em> o <em>unstable</em> &egrave; il posto in cui la maggior parte dei pacchetti
viene inizialmente caricata. Non sar&agrave; mai direttamente rilasciata, perch&eacute; i pacchetti
che devono essere rilasciati devono prima essere inclusi in <em>testing</em>,
per poter essere rilasciati in <em>stable</em> pi&ugrave; tardi. sid contiene pacchetti
sia per architetture rilasciate che non.

<p>Anche il nome "sid" proviene dal film d'animazione "Toy Story": Sid
era il bambino della porta accanto che distruggeva i giocattoli :-)

<p><footnote>
<p>Quando l'attuale sid non esisteva, l'organizzazione del sito FTP
aveva un grande difetto: c'era l'assunto che quando un'architettura veniva
creata nell'attuale unstable, sarebbe stata rilasciata quando quella distribuzione
diventava la nuova stable. Per molte architetture questo non &egrave; vero,
con il risultato che quelle directory dovevano essere spostate al momento del
rilascio. Ci&ograve; era poco pratico, poich&eacute; lo spostamento avrebbe divorato grosse
quantit&agrave; di banda.

<p>Gli amministratori dell'archivio hanno aggirato questo problema per diversi
anni collocando i binari delle architetture non rilasciate in una directory
speciale chiamata "sid". Per quelle architetture non ancora rilasciate, al primo
rilascio c'era un collegamento da stable a sid e da quel momento in poi
venivano create all'interno dell'albero unstable come di norma. Tutto ci&ograve;
era motivo di confusione per gli utenti.

<p>Con l'avvento dei pool di pacchetti (si veda <ref id="pools">),
i pacchetti binari cominciarono ad essere immagazzinati in una posizione canonica
nel pool, indipendentemente dalla distribuzione, cos&igrave; il rilascio di una
distribuzione non determina pi&ugrave; grande dispendio di banda sui mirror (c'&egrave;,
ovviamente, un notevole graduale consumo di banda durante la fase di sviluppo).
</footnote>

<sect id="stable">Cosa contiene la directory stable?

<p><list>
  <item>stable/main/:
  questa directory contiene i pacchetti che costituiscono formalmente il
  rilascio pi&ugrave; recente del sistema &debian;.

  <p>Tutti questi pacchetti sono conformi alle <url name="DFSG - Linee
  guida Debian per il software libero"
  id="http://www.debian.org/social_contract#guidelines"> e sono tutti liberamente utilizzabili e distribuibili.

  <item>stable/non-free/: questa directory contiene i pacchetti la cui distribuzione
  &egrave; limitata in modo tale da richiedere che i distributori prendano
  attentamente in considerazione i loro requisiti specifici relativi al copyright.

  <p>Per esempio, alcuni pacchetti hanno licenze che ne vietano la distribuzione
  commerciale. Altri possono essere redistribuiti, ma sono di fatto shareware
  e non software libero. Le licenze di ognuno di questi pacchetti devono essere studiate e
  possibilmente negoziate prima che tali pacchetti possano essere inclusi in qualsiasi
  redistribuzione (per esempio, in un CD-ROM).

  <item>stable/contrib/: questa directory contiene i pacchetti che sono
  di per s&eacute; liberi in base alle DFSG e <em>liberamente
  distribuibili</em>, ma dipendono in qualche modo da un pacchetto che
  <em/non/ &egrave; liberamente distribuibile ed &egrave; quindi disponibile solo
  nella sezione non-free.
</list>

<sect id="testing">Cosa contiene la distribuzione testing?

<p>I pacchetti vengono inseriti nella directory "testing" dopo aver subito
un periodo di test in <qref id="unstable">unstable</qref>. 

<p>Devono essere sincronizzati
in tutte le architetture per le quali sono stati compilati e non devono
avere dipendenze tali da renderli non installabili; devono inoltre avere
meno bachi critici per il rilascio delle versioni attualmente in
testing. In questo modo, si auspica che "testing" sia sempre vicina ad
essere una candidata al rilascio.

<p>Maggiori informazioni sullo stato di "testing" in generale e dei singoli
pacchetti sono disponibili su <url id="http://www.debian.org/devel/testing">.

<sect id="frozen">Cosa dire di "testing"? Come viene "congelata"?

<p>Quando la distribuzione "testing" &egrave; abbastanza matura, il
  responsabile del rilascio inizia a "congelarla". I normali ritardi di
  diffusione vengono aumentati per assicurare che entri da "unstable" in
  "testing" il minor numero di bachi possibile.

<p>Dopo un po', la distribuzione "testing" diventa realmente "congelata"
  (frozen). Ci&ograve; significa che tutti i nuovi pacchetti da mettere in
  "testing" sono trattenuti, a meno che non contengano le soluzioni a
  bachi critici per il rilascio. La distribuzione "testing"
pu&ograve; anche rimanere in questo stato di "surgelamento" durante i cosiddetti
"cicli di test", quando il rilascio &egrave; imminente.

<p>Viene tenuto un registro dei bachi nella distribuzione "testing" che possono
impedire ad un pacchetto di essere rilasciato, o dei bachi che possono impedire
l'intero rilascio. Per i dettagli si vedano le <url name="informazioni
sull'attuale rilascio testing"
id="http://www.debian.org/releases/testing/">.

<p>Una volta che il numero dei bachi si abbassa sotto i valori massimi
  accettabili, la distribuzione "congelata" viene dichiarata "stable" e
  rilasciata con un proprio numero di versione.

<p>Ad ogni nuovo rilascio, la precedente distribuzione "stable" diventa obsoleta
e viene spostata in archivio. Per maggiori informazioni si veda
l'<url name="archivio Debian" id="http://www.debian.org/distrib/archive">.

<sect id="unstable">Cosa contiene la directory unstable?

<p>La directory "unstable" contiene un'istantanea del sistema attualmente
in via di sviluppo. Gli utenti sono i benvenuti ad usare e testare questi
pacchetti, ma sono avvisati riguardo il loro stato di preparazione. Il
vantaggio di usare la distribuzione "unstable" &egrave; che si &egrave; sempre aggiornati
con la pi&ugrave; recente industria di software in GNU/Linux, ma se si rompe, i
cocci sono vostri :-)

<p>Anche in "unstable" ci sono le sottodirectory main, contrib e non-free,
separate con lo stesso criterio adottato in "stable".

<sect id="dirtree">Cosa sono tutte quelle directory negli archivi FTP Debian?

<p>Il software che &egrave; stato impacchettato per &debian; &egrave; disponibile in
uno dei diversi alberi di directory in ogni sito mirror Debian.

<p>La directory <tt>dists</tt> &egrave; l'abbreviazione di "distribuzioni" ed
&egrave; il percorso canonico per accedere ai rilasci (e pre-rilasci) Debian
  attualmente disponibili.

<p>La directory <tt>pool</tt> contiene i pacchetti effettivi, si veda <ref id="pools">.

<p>Ci sono queste directory aggiuntive:
<taglist>
  <tag><em>/tools/</em>:
    <item>utilit&agrave; DOS per creare dischi di avvio, partizionare il proprio
    disco, comprimere/decomprimere file e avviare Linux.
  <tag><em>/doc/</em>:
    <item>la documentazione di base di Debian, come queste FAQ, le istruzioni del
          sistema di segnalazione dei bachi, ecc.
  <tag><em>/indices/</em>:
    <item>vari indici del sito (il file dei manutentori e i file override).
  <tag><em>/project/</em>:>
    <item>per la maggior parte materiale solo per gli sviluppatori e
    file vari.
</taglist>


<sect id="archsections">Cosa sono tutte quelle directory dentro a <tt>dists/stable/main</tt>?

<p>All'interno di ciascuno degli alberi di directory
  principali<footnote> <tt>dists/stable/main</tt>,
<tt>dists/stable/contrib</tt>, <tt>dists/stable/non-free</tt> e
<tt>dists/unstable/main/</tt>, ecc.</footnote>, ci sono tre insiemi di
  sottodirectory contenenti file indice.

<p>C'&egrave; un gruppo di sottodirectory <tt>binary-<var>qualcosa</var></tt>
che contengono i file indice per i pacchetti binari di ciascuna
architettura disponibile, per esempio <tt/binary-i386/ per i
pacchetti che si possono eseguire su macchine PC Intel x86 o
<tt/binary-sparc/ per i pacchetti da eseguire su SPARCStation Sun.

<p>L'elenco completo delle architetture disponibili per ciascun rilascio
  &egrave; disponibile alla <url name="pagina web dei rilasci" id="http://www.debian.org/releases/">.
Per il rilascio attuale, si veda <ref id="arches">.

<p>I file indice in binary-* si chiamano Packages(.gz, .bz2) e
contengono un riassunto di ciascun pacchetto binario che &egrave; incluso in
quella distribuzione. I pacchetti binari effettivi risiedono nella directory
di livello pi&ugrave; alto <qref id="pools"><tt/pool/ </qref>.

<p>Inoltre esiste una sottodirectory chiamata source/ che contiene i
file indice dei pacchetti sorgenti inclusi nella distribuzione. Il file
indice si chiama Sources(.gz, .bz2).

<p>Da ultimo, ma non per importanza, c'&egrave; un gruppo di sottodirectory
pensate per i file indice del sistema di installazione: sono in
<tt>debian-installer/binary-<var>architettura</var></tt>.

<sect id="source">Dov'&egrave; il codice sorgente?

<p>Viene fornito il codice sorgente per tutto ci&ograve; che &egrave; nel sistema
Debian. Inoltre, i termini di licenza della maggior parte dei programmi
<em>richiedono</em> che il codice venga distribuito insieme ai programmi o che
un'offerta di fornire il codice sorgente li accompagni.

<p>Il codice sorgente viene distribuito nella directory <tt>pool</tt>
  (si veda <ref id="pools">) insieme con tutte le directory dei binari
  specifiche per le architetture.
Per ottenere il codice sorgente senza la necessit&agrave; di avere familiarit&agrave; con la
struttura dell'archivio FTP Debian, si provi un comando come
<tt>apt-get source nomedelmiopacchetto</tt>.

<p>Alcuni pacchetti sono distribuiti solo come codice sorgente a causa di restrizioni
nelle loro licenze. In particolare, uno di questi pacchetti &egrave; <tt>pine</tt>, si veda
<ref id="pine"> per maggiori informazioni.

<p>Per i pacchetti nelle directory "contrib" e "non-free", che non sono
  formalmente parte del sistema Debian, il codice sorgente pu&ograve; essere
  disponibile o no.

<sect id="pools">Cosa c'&egrave; nella directory <tt>pool</tt>?

<p>I pacchetti vengono tenuti in un grosso "pool", strutturato in base ai
nomi dei pacchetti sorgente. Per rendere il tutto usabile,
il pool &egrave; suddiviso in sezioni ("main", "contrib" e "non-free") e in
  base alla prima lettera del nome dei pacchetti sorgente. Queste
  directory contengono diversi file: i pacchetti binari per ciascuna
  architettura e i pacchetti sorgente da cui sono stati generati i
  pacchetti binari.

<p>Si pu&ograve; scoprire dove ciascun pacchetto &egrave; situato eseguendo un
comando come <tt>apt-cache showsrc nomedelmiopacchetto</tt> e guardando
la riga "Directory:". Per esempio, i pacchetti <tt>apache</tt> sono immagazzinati
in <tt>pool/main/a/apache/</tt>.

<p>Inoltre, poich&eacute; ci sono cos&igrave; tanti pacchetti <tt>lib*</tt>,
questi vengono trattati in maniera particolare: per esempio, i pacchetti
libpaper sono immagazzinati in <tt>pool/main/libp/libpaper/</tt>.

<p><footnote>
<p>Storicamente, i pacchetti erano tenuti nella sottodirectory di <tt>dists</tt>
corrispondente alla distribuzione di cui facevano parte. Questo si &egrave;
  rivelato fonte di
vari problemi, come un grosso consumo di banda dei mirror
ogni volta che venivano fatti dei cambiamenti di grossa portata; la cosa
  &egrave; stata risolta con l'introduzione dei pool di pacchetti.

<p>Le directory <tt>dists</tt> vengono ancora utilizzate per i file indice usati da
programmi come <tt>apt</tt>.
</footnote>


<!-- joeyh doesn't want to maintain it so it's dead; need to integrate it
Se si desiderano maggiori informazioni, si veda la
<url id="http://people.debian.org/~joeyh/poolfaq" name="Debian Package Pools FAQ">.
-->

<sect id="incoming">Cos'&egrave; "incoming"?

<p>Dopo che uno sviluppatore carica un pacchetto, questo resta per un po' nella directory
"incoming" prima che ne venga controllata la genuinit&agrave; e che venga accettato nell'archivio.

<p>Normalmente nessuno dovrebbe installare cose da questo posto. Comunque, per alcuni
rari casi di emergenza, la directory incoming &egrave; disponibile su
<url id="http://incoming.debian.org/">. Si possono scaricare i pacchetti manualmente,
controllare la firma GPG e i codici di controllo MD5 nei file .changes e .dsc,
e poi installarli.

<sect id="ownrepository">Come impostare un proprio repository usabile
con apt?

<p>Se si sono compilati alcuni pacchetti Debian privati che si
desiderano installare usando gli strumenti standard per la gestione dei
pacchetti Debian, si pu&ograve; impostare un proprio archivio di pacchetti
usabile con apt. Questo &egrave; utile anche se si desiderano condividere i
propri pacchetti Debian quando questi non sono distribuiti dal progetto
Debian. Le istruzioni per farlo sono contenute nel <url name="Debian Repository
HOWTO"
id="http://www.debian.org/doc/manuals/repository-howto/repository-howto">.


