<chapt id="manuals">Debian Manuals

<p>The DDP considers a <em>Debian Manual</em> to be any piece of 
documentation created to address the needs of users of Debian system 
or developers in the Debian project. </p>

<p><em>Fixme:</em>The documentation which comes with application 
software packages and installed in such places as 
<file>/usr/share/doc/<var>packagename</var>*.txt.gz</file> or
<file>/usr/share/doc/<var>packagename</var>/html/*</file> 
are not the focus of this chapter at this moment.
<p>
Debian Manuals are moving targets in the sense that they should
be constantly be updated to include relevant information related to
the object that is being documented. Some of the manuals the DDP
currently holds are:

<!-- List taken from www.debian.oer/doc page -->

<list>
<item>Users' manuals
<list>
<item>Debian GNU/Linux FAQ
<item>Debian Installation Manual (*)
<item>Debian Release Notes (*)
<item>Debian Rererence
<item>APT HOWTO
<item>dselect Documentation for Beginners (*)
<item>User's Guide
<item>Debian Guide
<item>The Debian Linux User's Guide
<item>Euro support in Debian GNU/Linux
<item>Debian GNU/Linux and Java FAQ
<item>Securing Debian Manual
</list>
<item>Developers' manuals
<list>
<item>Debian Policy Manual (**)
<item>Debian Developer's Reference
<item>Debian New Maintainers' Guide
<item>dpkg Internals Manual (***)
<item>Debian Menu System (**)
<item>Introduction to i18n
</list>
<item>Miscellaneous manuals
<list>
<item>Debian Project History
<item>Linux Magazines (***)
<item>Debiandoc-SGML Markup Manual (***)
<item>Debian SGML/XML HOWTO
</list>
</list>
<p>
Here, some documents are not directly under DDP:
<list>
<item>(*) are provided by the boot-floppies team.
<item>(**) are provided by the Debian Policy List 
  <email>debian-policy@lists.debian.org</email>.
<item>(***) are provided by the corresponding package.
</list>

<p>Manuals are usually of interest to a wide variety of people across
all countries and as such should be translated. This helps avoid
problems with language barriers and manages to make Debian more useful
to people all over the world.

<p>The DDP provides resources for Debian manual writers, translators
and reviewers. These resources help co-operation between all the
different people responsible to making a document available to those
that wish to read it. Thus, the framework provides:

<list>
<item>A common area for holding the sources of documentation.
<item>An automatic method for publishing documentation in the web
server (and mirrors) in different formats.
<item>An automatic method for publishing documentation in the FTP
server (and mirrors) <em>[under development]</em>.
<item>An automatic method for creating packages for the documentation
<em>[under development]</em>.
<item>An automatic method to keep track of changes between revisions
and help translators update the translated sources 
<em>[under development]</em>.
<item>A way to track requests and bug reports through the use of the
Bug Tracking System (sending bugs to the associated packages).
</list>

<p>The placeholder for the DDP manuals section in the CVS server is
the <file>manuals.sgml</file> directory. Documents under that 
directory must follow the following policies

<sect>Source file format
<p>
SGML is used as the source format for all manuals. 
Currently, SGML format compatible
with the <package>debiandoc-sgml</package> tool chain is chosen as the
document format.
<footnote>This source file format is expected to move toward
DocBook-XML in the future when infrastructures are ready.
See <ref id="&debiandoc2xml;">.</footnote>
</p>

<p>The use of <em>debiandoc-sgml</em> is mainly historical. When the
DDP started producing documentation for Debian there was no SGML
DTD that fit the needs of the documentation team. 
<package>Linuxdoc-sgml</package>, the DTD used by the Linux Documentation
Project at the time, lacked some features, and the documentation team
decided to create it's own DTD.</p>

<p>The other options for the source file format were: 
LaTeX, HTML, texinfo, groff and several other 
minor formats. Even if some of these were used at some point by DDP
documents their use is not supported. <em>All</em> DDP manuals must
be provided in <em>debiandoc-sgml</em> format
(this rule does not necessarily apply to other documentation that is
handled by the DDP)</p>

<p>However, the <em>debiandoc-sgml</em> DTD does have some drawbacks
including:

<list>
<item>it is not possible to include images
(see <url id="http://bugs.debian.org/140684" name="Bug #140684">.
<item>it is not internationalised completely
(see <url id="http://bugs.debian.org/31266" name="Bug #31266">.
<item>there are some layout issues when generating some formats.
</list>

<p>In the near future the DDP will probably move to using Docbook
instead of Debiandoc-SGML.

<p><em>FIXME:</em> Add links to relevant discussion on the mailing
list.

<sect>How to start a manual
<p><em>FIXME:</em> Write the procedure down.
<list>
<item>contact DDP
<item>read this policy
<item>see if there is a manual that it might be integrated to
(a new chapter?). Is a similar one orphaned?
<item>ask for CVS access (are you a developer?)
<item>provide pserver account if he/she is not a developer
<item>ask for publishing when document is finished (and compiled)
<item>ask for link from http://www.debian.org/doc etc.
<item>provide packages using <package>cvs-buildpackage</package>
<item>keep track of translators
<item>attend to bugs either sent directly or through the BTS
</list>

<sect>How are documents published?

<p>Documents under the <file>manuals.sgml</file> are compiled 
and published through a chain of <file>Makefile</file>s. The Makefile
under the root dir includes a definition of which subdirectories
will be handled in the chain. This makes the Makefile go through
each of the subdirs and compile the documents. 

<p>All documents must hold a <file>Makefile</file> in the main
directory. Contents of this Makefile <strong>must</strong> be derived
from the ones included in the <file>Makefile.common</file>, this file
includes common definitions (such as <em>publish</em>) which will
be used when compiling and common variables (such as the place where
to install the compiled documentation) that should not be modified.

<p>Following make target are used:
<list>
<item>all: build all formats within the source directory
<item>publish: publish all web contents to the PUBLISHDIR
<item>publish-ftp: publish all FTP contents to the PUBLISHDIR (proposed)
<item>clean: clean files which all target created
<item>distclean: clean files which all, publish, and publish-ftp
 target created
</list>

<p>Following make variables are used:
<list>
<item>PUBLISHDIR: root of the directory where files are installed.
 The value provided by the higher level Makefile shall override 
 one defined in the Makefile.
</list>

<sect>Published file formats

<p>In order to provide readers for different methods to access
documentation, we strive to publish contents in all the following 
formats:

<list>
 <item>HTML. This format is required and necessary for publishing 
 documents in different media. This format allows users to browse
 the web server's documentation, the CD documentation, etc. using
 any web browser of their choice. For long documents it is preferred
 to divide into multiple files (this is done automatically by 
 <em>debiandoc-sgml</em>) in order to browse more easily through
 different chapters (allows for faster downloads).</p>

 <item>Plain text. This format is also required since it's the most
 portable across any environment. It is also best used for using
 simple (a.k.a <em>grep</em>) and complex (documentation
 databases) methods to find information on documentation. Manuals
 provided in plain text must be compiled into a single file.

 <item>Postscript (PS). This is an optional format, it allows 
 <em>pretty printing</em> of documents in Postcript-enabled printers
 and is sometimes better for reading under some environments. Postcript
 is sometimes associated with Unix-like environments (but there are also
 Postcript tools for others). It has been currently displaced, however, by
 the PDF format. Documents in Postcript format are provided in a single
 file.

 <item>Adobe's PDF format. This is also an optional format, however,
 the PDF format has received widespread use in unix and non-unix environments.
 Documents in PDF format are used to print the document or to read the
 document on-screen, since it's usually possible to provide better formatting
 within this environment. It's also a single file format.

</list>

<sect>File names and their locations
<p>
In the following section, the choice of the file names and their 
locations are explained.  Here following conventions are used:

<list>
<item><tt>&manualname;</tt> is the generic name of the manual without 
language specification (it is most likely the source package name).

<item><tt>&langname;</tt> is the language specification and uses
the same convention as the apache auto-language selection 
(<tt>en, fr, it, de, pt-br, ...</tt>).

<item><tt>&localename;</tt> is the locale specification and uses
the same convention as the <package>glibc</package>.
<p>
<em>FIXME:</em>I can not find short version of 
locale "en" or "fr" anyway:
<tt>en, fr, it, de, pt_BR, ...</tt> or should be like full description
such as en_US.UTF8.
</list>

<sect1>Upstream SGML source
<p>
DDP run CVS server and keep upstream SGML source (or its copy).
<example>
  CVSROOT=:pserver:anonymous@cvs.debian.org:/cvs/debian-doc 
  Repository: ddp/manuals.sgml/&manualname;/
</example>
<p>
After obtaining concensus in <email>debian-doc@lists.debian.org</email>
one can start new directory as follows:
<example>
$ cd <var>someplace</var>
$ CVSROOT=:pserver:anonymous@cvs.debian.org:/cvs/debian-doc
$ export CVSROOT
$ cvs co ddp/manuals.sgml/
$ cd ddp/manuals.sgml/
$ mkdir <var>new-ddp-manual-name</var>
$ cvs add <var>new-ddp-manual-name</var>
$ cvs ci
...
</example>
</p>

<sect1>Debian package
<p><em>FIXME:</em> write about why you need to make Debian
packages. And also how to make them easily.
<list>
<item>Source package: (contains SGML source only)
<list>
<item>&packagename;_<var>version</var>_all.tar.gz
<item>&packagename;_<var>version</var>_all.dsc
</list>
or,
<list>
<item>&packagename;_<var>version</var>_all.tar.gz
<item>&packagename;_<var>version-buildversion</var>_all.diff.gz
<item>&packagename;_<var>version-buildversion</var>_all.dsc
</list>
<p>The latter format is preferred even if you are the upstream.</p>
<p>
If the source consists of multiple files, it is
encouraged to keep them in a language specific subdirectory.
</p>

<item>Binary package: (contains generated formats)
<p>
Binary package should be split into each language when packaged.

<list>
<item>&packagename;_<var>version</var>_all.deb
<p>This is a virtual package which installs packages of 
all languages. (<em>FIXME:</em> this is debatable. Currently
many package like this just install the English original.)
</p>
<p>
Use of this name for the English package,
&packagename;-en_<var>version</var>_all.deb is discouraged.</p>
<item>&packagename;-&langname;_<var>version</var>_all.deb
<p>This is the actual package which installs each language.</p>
</list>

</list>

<sect1>Files installed by the Debian package (Option1)
<p>
In order to make DDP documents easy to find, use of
<tt>&filehome;/</tt> has been adopted as the central location.
Currently this file location is under discussion.

<list>
<item>Index page (optional, auto generated):
<list>
<item><tt>&filehome;/&manualname;/index.html</tt> or
<item><tt>&filehome;/&manualname;/index.&langname;.html</tt>
</list>

<item>HTML: 
<list>
<item><tt>&filehome;/&manualname;/&manualname;.&langname;.html</tt>
<item><tt>&filehome;/&manualname;/<var>ch-1</var>.&langname;.html</tt>
<item> ... (all other chapters of the document in html forms.)
</list>

<item>plain text: 
<list>
<item><tt>&filehome;/&manualname;/&manualname;.&langname;.txt.gz</tt>
<p>Compressed file to comply with the policy</p>
</list>

<item>Postscript (PS): 
<list>
<item><tt>&filehome;/&manualname;/&manualname;.&langname;.ps.gz</tt>
<p>Compressed file to comply with the policy</p>
</list>

<item>PDF: 
<list>
<item><tt>&filehome;/&manualname;/&manualname;.&langname;.pdf.gz</tt>
<p>Compressed file to comply with the policy</p>
</list>
</list>

<sect1>Files installed by the Debian package (Option2)
<p>
In order to make DDP documents easy to find, use of
<tt>&filehome;/</tt> has been adopted as the central location.
Currently this file location is under discussion.

<list>
<item>Index page (optional, auto generated): ???? === XXX FIXME XXX ===
<list>
<item><tt>&filehome;/&manualname;/index.html</tt> or
<item><tt>&filehome;/&manualname;/index.&langname;.html</tt>
</list>

<item>HTML: 
<list>
<item><tt>&filehome;/&manualname;/&langname;/html/&manualname;.html</tt>
<item><tt>&filehome;/&manualname;/&langname;/html/<var>ch-1</var>.html</tt>
<item> ... (all other chapters of the document in html forms.)
<item><tt>&dochome;/&packagename;-&langname;/html</tt> should point 
to <tt>&filehome;/&manualname;/&langname;/html/</tt> (as a symlink).
This is because we need to have (per policy) the 
<tt>&packagename;-&langname;</tt> directory if we are going to make 
packages per language. (<em>FIXME:</em> Policy 13.4-5 does not say 
this so explicitly. Osamu)
</list>
<p>

<item>plain text: 
<list>
<item><tt>&filehome;/&manualname;/&langname;/&manualname;.txt.gz</tt>
<p>Compressed file to comply with the policy</p>
<item>Any policy required symlink ??? === XXX FIXME XXX ===
</list>

<item>Postscript (PS): 
<list>
<item><tt>&filehome;/&manualname;/&langname;/&manualname;.ps.gz</tt>
<p>Compressed file to comply with the policy</p>
<item>Any policy required symlink ??? === XXX FIXME XXX ===
</list>

<item>PDF: 
<list>
<item><tt>&filehome;/&manualname;/&langname;/&manualname;.pdf.gz</tt>
<p>Compressed file to comply with the policy</p>
<item>Any policy required symlink ??? === XXX FIXME XXX ===
</list>
</list>
<p>
Note: having <tt>&dochome;/&packagename;-&langname;/</tt> also
helps if we want to help people use locale-purge for documentation too.
(javi)
<p>
If so, we need symlink in <tt>&filehome;/</tt> while 
<tt>&dochome;/&packagename;-&langname;/</tt> should contain real files.
(osamu)
</sect1>


<sect1>Files on WWW server (DDP, CVS generated)
<p>
These are created with <tt>publish</tt> target. <tt>PUBLISHDIR</tt>
is used to locate directory to install documentation where
<tt>&httphome;/</tt> is pointing.

<list>
<item>Index page (optional, auto generated):
<list>
<item><tt>&httphome;/&manualname;/index.html</tt> or
<item><tt>&httphome;/&manualname;/index.&langname;.html</tt>
</list>

<item>HTML: 
<list>
<item><tt>&httphome;/&manualname;/&manualname;.&langname;.html</tt>
<item><tt>&httphome;/&manualname;/<var>ch-1</var>.&langname;.html</tt>
<item> ... (all other chapters of the document in html forms.)
</list>

<item>plain text: 
<list>
<item><tt>&httphome;/&manualname;/&manualname;.&langname;.txt</tt>
<p>Not-compressed file for better browser interaction</p>
</list>

<item>Postscript (PS): 
<list>
<item><tt>&httphome;/&manualname;/&manualname;.&langname;.ps</tt>
<p>Not-compressed file for better browser interaction</p>
</list>

<item>PDF: 
<list>
<item><tt>&httphome;/&manualname;/&manualname;.&langname;.pdf</tt>
<p>Not-compressed file for better browser interaction</p>
</list>
</list>

<sect1>Files on WWW server (stable version)
<p>
Stable version of documents are installed from released package 
to DDP web page with a script un-compressing files.  
</p>

<P><em>FIXME:</em> How is thist install automated? Explain the
process. We might need ftp-masters to allow access without an
upload.


<list>
<item>Index page (optional, auto generated):
<list>
<item><tt>&httphome2;/&manualname;/index.html</tt> or
<item><tt>&httphome2;/&manualname;/index.&langname;.html</tt>
</list>

<item>HTML: 
<list>
<item><tt>&httphome2;/&manualname;/&manualname;.&langname;.html</tt>
<item><tt>&httphome2;/&manualname;/<var>ch-1</var>.&langname;.html</tt>
<item> ... (all other chapters of the document in html forms.)
</list>

<item>plain text: 
<list>
<item><tt>&httphome2;/&manualname;/&manualname;.&langname;.txt</tt>
<p>Not-compressed file for better browser interaction</p>
</list>

<item>Postscript (PS): 
<list>
<item><tt>&httphome2;/&manualname;/&manualname;.&langname;.ps</tt>
<p>Not-compressed file for better browser interaction</p>
</list>

<item>PDF: 
<list>
<item><tt>&httphome;/&manualname;/&manualname;.&langname;.pdf</tt>
<p>Not-compressed file for better browser interaction</p>
</list>
</list>

<sect1>Files on FTP server

<p>DDP documents need to be published in Debian's ftp servers
(and mirrors) in order to provide another mean for retrieval to 
users. The placeholder for this documentation is
<url id="ftp://ftp.debian.org/doc/">
</p>

<p><em>FIXME:</em> Determine how this is going to be automated
(contact ftp-masters). The <file>/doc</file> should be handled
exclusively by the DDP team.

<p><em>FIXME:</em> this is an idea (Osamu). Permissions, etc. need
to be fixed too.

<p>FTP files are created with <tt>publish-ftp</tt> target in top most
<file>Makefile</file> which uses <tt>publish</tt> target in 
the subdirectories to create file in FTP area by using
proper <tt>PUBLISHDIR</tt>.

<list>
<item>Index page (optional, auto generated): ???? === XXX FIXME XXX ===
<list>
<item><tt>&ftphome;/&manualname;/index.html</tt> or
<item><tt>&ftphome;/&manualname;/index.&langname;.html</tt>
</list>

<item>HTML: 
<list>
<item><tt>&ftphome;/&manualname;/&langname;/html/&manualname;.html</tt>
<item><tt>&ftphome;/&manualname;/&langname;/html/<var>ch-1</var>.html</tt>
<item> ... (all other chapters of the document in html forms.)
</list>
<p>

<item>plain text: 
<list>
<item><tt>&ftphome;/&manualname;/&langname;/&manualname;.txt.gz</tt>
<p>Compressed file to comply with the policy</p>
</list>

<item>Postscript (PS): 
<list>
<item><tt>&ftphome;/&manualname;/&langname;/&manualname;.ps.gz</tt>
<p>Compressed file to comply with the policy</p>
</list>

<item>PDF: 
<list>
<item><tt>&ftphome;/&manualname;/&langname;/&manualname;.pdf.gz</tt>
<p>Compressed file to comply with the policy</p>
</list>
</list>

</sect1>
</sect>

<sect>Files on CD-ROM ISO images

<p><em>FIXME:</em> This needs to be more homogeneous.

<p>The current <package>debian-cd</package> program is used to build
the ISO images for official Debian CD-ROMs. This program extracts 
documentation to be placed in the CD-ROMs so that users can access
this documentation without needing to install Debian at all (even
if later on they could install the same documentation just by
installing the appropiate packages).

<p>Not all DDP documents are placed on the CD-ROMs since once of the
issues on these ISO images is how to distibute the available size
so that all the necessary software is available in the first CD-ROMs
(so that users do not need to download all the CD-ROMs in order
to have a functioning Debian installation). Thus, only important
documentation (usually oriented towards users) is placed there.
This usually includes documents such as: The Debian FAQ, 
The Installation Manual, etc.

<p><em>FIXME:</em> Check if this is true.  Also for text, 
directory are better to use full locale such as en_US.UTF-8/
which is not the case in Debian.</p>

<p><package>Debian-cd</package> takes the available documentation from
different sources: the primary FTP server and some documentation 
packages installed in the system where the script is run. 

<p>Note: Providing a sensible location of documentation in the 
packages as well as translations makes it possible to have 
<package>debian-cd</package> make localised CD-ROMs that not only
include the installation in a given language but provide the documentation
in that language too!

</sect>

<sect>Best practices

<p>This section describes few recommended practices but these are not an
enforced part of the DDP policy.</p>

<sect1>index.html
<p>
Currently, many generated HTML files still create index.html or 
index.&langname;.html as the starting page but these are discouraged 
practices since they hide other files. (<em>FIXME:</em> This is 
debatable.  It is implimented for the Debian Reference but makefile 
is a mess.)
</p>
</sect1>

<sect1>Debian web page entry style
<p>
<file>user-manuals.wml</file> entry shall be:
<example>
&lt;dl&gt;
   &lt;dt&gt;English&lt;/dt&gt;
   &lt;dd&gt;&lt;a href="..."&gt;HTML&lt;/a&gt;, 
       &lt;a href="..."&gt;plain text&lt;/a&gt;,
       &lt;a href="..."&gt;PS&lt;/a&gt;, 
       &lt;a href="..."&gt;PDF&lt;/a&gt;
   ...
&lt;/dl&gt;
</example>
</sect1>

<sect1>TEX
<p>
In order to reliably produce PS and PDF files, it is recommended to
include a <file>texmf/texmf.cnf</file> file which <strong>only</strong>
lists those key parameters (i.e., things like pool_size) which you need
to have them large enough for the proper building environment.
</p>
<p>
Then Makefile has to use it through the environment variable:
<example>
TEXMFCNF=texmf:
export TEXMFCNF
</example>
Here tailing colon is critical. This will ensure rest of parameters to
be taken from the system's current default value and avoids TEX version
dependencies for the SGML source and prevents FTBFS bug problems.
</p>
<p>
If you are running specifically latex, then you may want to have:
<example>
pool_size.latex = <var>whatever</var>
</example>
to specify that you want it to apply to latex; otherwise a specific
one in the <file>/etc/texmf/texmf.cnf</file> file might override yours.
</p>
<p>
Alternatively, you can also specify pool_size etc. as environment
variables, which will override the texmf.cnf settings.
</p>
</sect1>

</sect>

<sect>TODO
<p>
<list>
<item>sample Makefile for publishing
<item>test if docbook can be compiled in debian's www machine
<item>sample Makefile for publishing using docbook-xml
</list>
</sect>


