<!DOCTYPE debiandoc PUBLIC "-//DebianDoc//DTD DebianDoc//EN">

<!-- TODO
Check www.gulic.org/doc/ (euro-howto, in Spanish)
Talk on chedit program? There is an article on Linux Journal april 2000
regarding its use to have the fonts euro-ready
-->

<debiandoc>
<book>
<titlepag>
<title>Debian Euro HOWTO</title>
<author>
  <name>Javier Fernández-Sanguino Peña</name>
  <email>jfs@computer.org</email>
</author>
<version>version 0.91, 25 February, 2002.</version>
<copyright>
<copyrightsummary>Copyright &copy; 2001, 2002 Javier Fernández-Sanguino Peña.</copyrightsummary>
<p>This document
is distributed under the terms of the GNU Free Documentation
License, available at <url id="http://www.gnu.org/copyleft/fdl.html">
</copyright>
</titlepag>


<toc detail="sect1">


<chapt id="intro">Introduction

<sect>Why euro support?

<p>As of January 1st 2002, twelve European Union countries, and several
others, are starting to use the <strong>euro</strong> as the only official
currency. Thus, all the prices will be shown in euros and all the monetary
transactions will use it. Euro is expected to become a common currency
throughout Europe and even some other continents.

<p>Computers, of course, need to correctly represent the euro in order for
users to make their own documents (invoices, spreadsheets or whatever) using
this currency, and read others' documents that use it. As the
<url id="http://europa.eu.int/euro/" name="European Comission guidelines">
state, operating systems need to be ready to represent this character.

<p>The euro is a currency but also the name of a symbol. Since the Unicode
Standard 2.1 version (dated 1998) the EURO SIGN is added, so it's also an
Unicode character that can be represented (interpreted) with different
glyphs (different fonts can change height or width).

<sect>What is the euro symbol?

<p>The euro symbol resembles the letter "e" -- it looks like a 'c' with two
parallel horizontal lines that go through the middle of it. Some of the
people will understand it better if we say it looks like the Quake symbol
rotated 90 degrees clockwise :-)

<p>The symbol is inspired by the Greek letter epsilon and also denotes the
first letter of the word "Europe". The two parallel lines are meant to refer
to the stability inside the euro area.
<!-- see http://www.deltha.cec.eu.int/en/euro/ -->

<p>The official (ISO-compliant) abbreviature for the euro is EUR and can be
used as representation for the currency.

<sect>Why all this fuss for just one character?
<p>The problem is that changing the character involves a change
in the font map used by the user. The font map is the list of
character representations used by the system. Currently, most
users in the euro-zone use the latin1 font map. The font map,
however, is limited to 256 characters. The euro character is introduced by
removing another character from the font map and calling this
replacement a new font map.
Latin9 (ISO-8859-15 or codepage 924 for IBM, usually shortened to latin0)
replaces Latin1 (ISO-8859-1), and Latin10 (ISO-8859-16) replaces Latin2 
(however Czech is not fully covered in Latin10 so it's not a full replacement,
and it does cover Romanian which Latin2 didn't). Keep in mind that
the font map is limited to 256 characters 
(see <manref name="charsets" section="7">)

<p>Latin9 differs from Latin1 in eight positions:
<list>
<item>0xA4 (U+20AC): EURO SIGN,
<item>0xA6 (U+0160): LATIN CAPITAL LETTER S WITH CARON,
<item>0xA8 (U+0161): LATIN SMALL LETTER S WITH CARON,
<item>0xB4 (U+017D): LATIN CAPITAL LETTER Z WITH CARON,
<item>0xB8 (U+017E): LATIN SMALL LETTER Z WITH CARON,
<item>0xBC (U+0152): LATIN CAPITAL LIGATURE OE,
<item>0xBD (U+0153): LATIN SMALL LIGATURE OE
<item>0xBE (U+0178): LATIN CAPITAL LETTER Y WITH DIAERESIS.
</list>

<p>Of course, users already using UTF-8 fonts are not affected
by this problem since unicode is a superset of all ISO 8859 sets plus
the characters required to represent practically all known languages
(see <manref name="unicode" section="7">).
However, Unicode support is currently far from complete.
For more information read
<url id="ftp://ftp.ilog.fr/pub/Users/haible/utf8/Unicode-HOWTO.html"
name="The Unicode HOWTO">
and/or <url id="http://www.cs.usyd.edu.au/~matty/"
name="Unicode in X-Windows">.


<sect>Standards

<p>The euro definition is part of some <url id="http://www.isoc.org/"
name="ISO"> standards:
<list>
<item>The EUR currency code (numeric code 978) is a part of the
ISO-4217 standard.  

<item>For 8-bit systems, the ISO/IEC defines the new charset 8859-15
(also known as latin 9) and 8859-16 (also known as latin 10) where the
euro symbol replaces the international currency symbol in the position 164
(hex A4).

<item>The <url id="http://www.unicode.org/" name="Unicode"> system uses
 a 16 bit symbol, the euro has been assigned 8364 (hex 20AC) as part
 of ISO/IEC-10646-1

<item>The screen representation (font) for the euro is part of the
ISO/IEC-10036 standard. The glyph is the real representation (bit
pattern) of the character. The euro is assigned the 8059 glyph.

<item>The World Wide Web Consortium uses &amp;euro; as the representation
for the symbol in HTML 4.0 (See <url id="http://www.w3.org/TR/html4/sgml/entities.html#h-24.4.1">)
</list>

<p>The European Comission has published in its 
<url id="http://europa.eu.int/euro/" name="official
recommendations"> both short term and long term fixes for the euro character.
The short term solution is fixed by having keyboards input the euro character
through the AltGr+E combination
(AltGr is the 'Alt' key to the right of the spacebar), 
the long term solution considers using
a new key for the euro character. Most keyboard manufacturers have only 
implemented the short-term solution by including a euro representation under
the 'E' key. The operating system must take this input and convert it into
the euro symbol internally. However:

<list>
<item>The international US keyboard and the greek latin use AltGr+5 and
Ctrl+Alt+5 for euro representation.
<item>The greek keyboard uses AltGr+? for euro representation.
<item>The english and irish keyboards use the combinations AltGr+4 and
Ctrl+Alt+4
<item>The hungarian and polish keyboards use the AltGr+U combination.
</list>

<p>In this document, however, most examples will assume that the euro symbol
will be generated by typing AltGr+E (the <tt>euro-test</tt> program
assumes this too).

<sect>Is Debian euro-ready?

<p>The Debian operating system can be properly configured to 
show the euro character, both in console and in the X windowing
system since the 2000 release Debian 2.2 (aka 'potato'). However,
many users have not properly configured that support since then,
and there are some caveats in configuration that have not been
completely fixed until Debian woody (future 3.0).

<p>In any case, some problems might arise from programs defaulting to
ISO-8859-1 or even ASCII-US, and some even can't be configured
properly to use ISO-8859-15 (bug reports through the
<url id="http://bugs.debian.org/" name="Bug Tracking System">
should/will be filed against them).


<chapt id="auto-config">Automatic configuration 

<sect>The language-env package

<p>This package is an attempt to setup the user's environment locale
properly by changing the user's <file>~/.bash_profile</file>,
<file>~/.Xresources</file> and other user's configuration files. The
included program guides the user in the definition of the locale by
asking for his country and wether he desires (or not) euro
support. Those tasks that need to be taken aside (since the program
runs as an ordinary user it cannot change system-wide settings) are
presented to the user so he can (as superuser) make the appropiate
changes.

<sect>The euro-support package 

<p>The euro-support package is an attempt to provide appropiate
<em>system-wide</em> configuration to represent the euro character
easily in the Debian GNU/Linux operating system. This package provides
this configuration in two ways:

<list>
<item>Depending on the appropiate packages needed in order to have
euro support.
<item>Configuring the system upon installation in order to provide
euro support.
</list>

<p>NOTE: The second part is not yet built-in <package>euro-support</package>.

<p>There are currently three packages:

<taglist>
  <tag>euro-support
<item>includes this document as well as the <prgn>euro-test</prgn> program
<tag>euro-support-console
  <item>includes the dependencies for providing euro icon in console environment
<tag>euro-support-X
  <item>includes the dependencies for the X windows environment
</taglist>

<sect1>The euro-test program

<p>There is a test program called <prgn/euro-test/ in the
<package>euro-support</package> package program provided in order for
the user to see if the euro symbol
is properly represented in his system. This program has been
written in order to test if the system configuration is appropiate
and works both for the text console and the X graphic environment.
Although developed for the Debian GNU/Linux system it can be 
used in other GNU/Linux operating systems in order to test for the
euro support.
<p>The goal of the program is to determine if/why the user's system
provides the euro symbol. The information gathered could be used
to manually configure the system properly together with this document.

<sect>The user-euro-XXX packages
<p>There are also some packages (currently there is only a spanish version:
the <package>user-euro-es</package> package) that will fully customize
the system's (not the user's) enviroment in order to provide euro support.
This packages will (through the execution of a given command) modify
the system's configuration files (as explained below) and take the necessary 
steps to configure the environment.
<p>Administrators in a haste are encouraged to use this packages and run
the aforementioned scripts (<prgn/eurocastellanizar/ for <package>user-euro-es</package>). However, users are encouraged to read through this document
in order to be forewarned of all the issues (some of which cannot be 
tackled automatically).

<p>This package is an attempt to setup the user's environment locale

<chapt id="configure">Configuring euro support

<sect>Initial considerations
<p>Configuring euro support in a system involves two steps, which
should be pretty simple:

<list>
<item>tell the system you want to use euros (aka. localisation)
<item>have a font available that represents euros.
<item>provide a mechanism for the keyboard to send the euro character.
</list>

<p>The <url id="http://europa.eu.int/euro/html/dossiers/00124/00124-en.pdf"
name="recommended mechanism"> in the euro zone for the euro symbol generation
on modern keyboards is the
AltGr+e combination for the euro currency and AltGr+c for the cent.
Note: Laptop users might not have AltGr.

<p>This document will approach the euro configuration in Debian taking
a look, first, towards localisation issues, and how localisation can
be properly configured in Debian. Afterwards, it will go into how to
configure the console (virtual terminals) available in all Debian
GNU/Linux systems. Many users might want to skip this section and go
directly to the next section, which discusses the proper configuration
of the graphic environment (X windows) for euro support.

<p>Even if it might sometimes confuse the reader, the different
configuration issues are discussed both for the latest Debian release
(as of this writing Debian 2.2 codename 'potato') and the next Debian
release (Debian 3.0 codename 'woody'). Future versions of this
document might separate the information regarding different Debian
versions (when it really gets messy :)

<sect id="localisation">Localisation issues
<p>Programs use the localisation environment in order to know both
the language and the charset being used. Currently there is no separation, 
unless you are using UTF-8
from locale and representation. Environment locales use both the 
language for example:
<example>
es_ES.ISO-8859-1
en_US.utf
....
</example>

<P>Locale definitions are stored in Debian at <file>/etc/locale.alias</file>
for the libc library and 
<file>/usr/X11R6/lib/X11/locale/locale.alias</file>. In order to indicate
which charset you are using, you need to set your LANG environment
variable. One of the ways of doing this is changing <file>/etc/enviroment</file> or
<file>/etc/profile</file>.

<p>However, there is a problem due to the different representation of locales
in XFree86 (Xlib) and glibc (one uses ISO8859 and the other ISO-8859, note the
dash). Thus,
setting the locale to XX_XX.ISO-8859-15 in <file>/etc/environment</file>
is doomed to cause problems in the X environment (might not be recognised
or generate errors in applications).
<p>Since Debian woody, the XX_XX@euro alias is provided in the
<file>/usr/X11R6/lib/X11/locale/locale.alias</file>
and in the <file>/etc/locale.alias</file>, users that wish to setup
their locale environment should use this abbreviation instead of the
previous XX_XX@ISO-...

<p>You can see your current environment running <tt>locale</tt>,
and your current map character using <tt>locale charmap</tt>. 
In order to change your locale edit <file>/etc/environment</file> or
<file>/etc/profile</file> and add (the example is for Spanish, 
change as needed):
<example>
export LANG=es_ES@euro
export LC_ALL=es_ES@euro
</example>

<p>Note: You <em>must</em> use the @euro part. Otherwise, if you
just use <tt>es_ES</tt> the locale definition will be that of 
the ISO-8859-1 charset.

<p>Please, note that the LANG and LC_ALL definitions should be similar
(or even better the same). Otherwise libraries might warn against
incompatible locale. You will see warnings if, for example, you set:
<example>
export LANG=spanish
export LC_ALL=es_ES@euro
</example>
<p>since 'spanish' is aliased to es_ES.ISO-8859-1 and es_ES@euro is
alised to es_ES.ISO-8859-15. Be careful with this issue since some
programs do not check the <file>locale.aliases</file> file and use
hardcoded value for them. It is not recommended to change the
<file>locale.alias</file> to have, for example, 'spanish' aliased to
es_ES.ISO-8859-15 since programs that use these method will not
properly work. If your favorite software does not work with the
'XX_XX@euro' please file abug against it.

<p>You can check all the available locales by running <tt>locale -a</tt>

<p>For programs that give too many warnings much because of 
localisation/representation issues with stuff similar to 
<example>
Gdk-WARNING **: locale not supported by C library
</example>
or
<example>
Warning: locale not supported by C library, locale unchanged
</example>
use <tt>LANG=XX_XX.ISO-8859-1 program&</tt> 
to run them and avoid the errors/warnings.
In any case, check that you have properly set your locale and, if so,
file a bug against the offending package.

<p>In order for your X environment to work there should be a 
definition of the iso8859-15 definition at
<file>/usr/X11R6/lib/X11/locale</file>. If you do not have properly configured
locales, X might warn about this (before it runs any program).
Please check your <file>~/.xsession-errors</file> file
since this might be happening without the user noticing in 
modern desktop enviroments (all errors are directed there 
and not to the screen). A sample warning would be:
<example>
Warning: locale not supported by Xlib, locale set to C
</example>


<sect1>Locales in Debian woody
<p>In order for your locales to work in woody (candidate for
Debian 3.0) the administrator has to configure properly the system's
localization.  The easiest way to make
this modifications is to call <tt>dpkg-reconfigure -plow locales</tt>,
and choose your locale in the version with an @euro appended.  

<p>You can also edit <file>/etc/locale.gen</file> directly, inserting
there the euro locales definitions and run <tt>locale-gen</tt>. If
your locales are already defined there but appended with a '#' sign,
uncomment (remove that sign) the lines needed for the users'
locale. Mainly the XX_XX.ISO-8859-15 lines and the XX_XX@euro lines
and run <tt>locale-gen</tt>. This should create
<file>/usr/lib/locale/XX_XX@euro</file>.

<sect1>Locales in Debian 2.2

<p>You cannot edit <file>/etc/locale.gen</file> if you are using
Debian 2.2 since it does not exist. 
But, in any case, you do not need to do it since 
all the locales are included in Debian as default.
However, Debian 2.2 <package>locales</package> (version 2.1.3-13) does not
provide the euro definition. If an upgrade to woody locale is not
possible (this upgrade will most probably change the libc version),
you will need to make the changes manually.

<p>In Debian 2.2, users need to change some files (these changes are
unnecessary in woody since they already have been made).
Supposing an Spanish environment (es_ES locale), the change
for <file>/etc/locale.alias</file> is:
<example>
es_ES@euro	es_ES.ISO-8859-15
</example>

and for <file>/usr/X11R6/lib/X11/locale/locale.alias</file> is:
<example>
es_ES@euro	es_ES.ISO8859-15
</example>

<p>After doing this you have to <em>generate</em> your locales
You can do so running <prgn>localedef</prgn> manually.
Charmapfiles are found in <file>/usr/share/i18n/charmaps</file>, inputfiles
can be found in <file>/usr/share/i18n/locales</file>.  In order to create, for
instance, a en_US.ISO-8859-15 locale, you'd do this:

<example>
$ localedef --force -i /usr/share/i18n/locales/en_US \
           -f /usr/share/i18n/charmaps/ISO-8859-15 \
            en_US.ISO-8859-15
</example>

<p>You can usually also use a simplified version since <prgn>localedef</prgn>
should be able to find the charpmaps and locales on its own:
<example>
$ localedef --force -v -i en_US -f ISO-8859-15 en_US.ISO-8859-15
</example>

<p>The directory created is named 
<file>/usr/share/locale/en_US.iso885915</file>. You also have to create 
the en_US.ISO-8859-15 directory, do so by symlinking it to the previous one.
<example>
$ cd /usr/share/locale
$ ln -s en_US.ISO-8859-15 en_US.iso885915
</example>


<sect>Configuring the Console


<p>
Configuring the text console in order to have the euro symbol ready
is simple. 
The following will work in a Debian GNU/Linux system:
<example>
$ loadkeys euro.inc
$ consolechars -f lat0-16.psf
</example>

<p>However, this changes are lost after reboot. In order to make them
permanent, some changes need to be done to the configuration files
of Debian packages.

<sect1>Configuring the console keyboard

<p>Changing the key mappings involves changing 
<file>/etc/console-tools/default.map.gz</file> or 
<file>/etc/kbd/default.map.gz</file>. Usually, this keymap is
changed by using <tt>kbdconfig</tt> (if you are not using console-tools see
below for the different console keyboard schemes in Debian), 
since it is loaded before any 
network filesystem is mounted, you cannot change it directly 
(for example by adding 
<tt>include euro</tt> there) as it might not be able to load extensions 
(since they are located at <file>/usr/share/keymaps</file>). 
In order to have euro support,
if your keymap currently does not have one you will have to modify an
existing one. Here is an example on how to change the Spanish keymap
to support euro characters (kbdconfig will ask some questions,
only the answers are shown below):

<example>
$ cd /usr/share/keymaps/i386/qwerty
$ cp es.kmap.gz es-euro.kmap.gz
$ gzip -d es-euro.kmap.gz
$ echo "include \"euro\"" >>es-euro.kmap
$ echo "altgr keycode  46 = cent" >>es-euro.kmap
$ gzip es-euro.kmap
$ kbdconfig
-----ANSWERS:
n
i386
qwerty
es-euro
y
y
$ zgrep "keycode  18" /etc/console-tools/default.kmap.gz
keycode  18 = +e                +E                currency         Control_e
    Control_e        Meta_e           Meta_E           Meta_Control_e
</example>

<p>FIXME: A bug should be opened against console-data in order to include
this by default in all the euro-zone language maps.

<sect1>How the keyboard is loaded in Debian
<p>The <package>console-common</package> in Debian woody installs
<file>/etc/init.d/keymap.sh</file> which runs <tt>loadkeys</tt>
of console-tools (using <file>/etc/console-tools/default.map.gz</file>) or 
kbd (using <file>/etc/console/boottime.kmap.gz</file>. This file
has been generated using <tt>/usr/sbin/install-keymap</tt>.

<p>When a system boots up it runs
<file>/etc/rcS.d/S05keymap.sh</file>  (for kbd)
or <file>/etc/rcS.d/S05keymap-lct.sh</file>  (for console-tools)
which installs the appropiate keymap. Both scripts will make either
<file>/etc/init.d/keymap.sh</file> 
or <file>/etc/init.d/S05keymap-lct.sh</file> 
being called with the 'start' option.

<sect1>Configuring the console fonts 

<p>The easy way to configure a console in a Debian system is to
install the <package>fonty</package> provided since Debian 2.2 and
tell it to use iso15 fonts (fonty currently does not support
iso-8859-16 yet, however). These fonts will include the euro character
and the package will configure properly the configuration files
needed.  You will need, however, to configure the keyboard mappings,
as describe previously.

<p>If you do not want (or like) the <package>fonty</package> font, you
can configure the console fonts yourself.  In order for the fonts to
be loaded automatically when the system is started, you (as superuser)
have to change some of the configuration files. 

<p>If the system is using the <package>console-tools</package>
package, then the <file>/etc/console-tools/config</file> file will be
present. In order to load the appropiate font you need to include the
line:
<example>
SCREEN_FONT=lat0-16
APP_CHARSET_MAP=iso15
</example>

<p>If you are using the <package>kbd</package> package you will need
to edit the <file>/etc/kbd/config</file> adding, for example:
<example>
CONSOLE_FONT=lat0-16.psfu.gz
# CONSOLE_MAP=iso15
CONSOLE_MAP=8859-15_to_uni
</example>

<P>Of course, the <tt>lat0-16</tt> font is not the only one available,
since the console-data package version 1999.08.29-11.1, there are quite
a number of latin9 (aka. latin0) fonts available at 
<file>/usr/share/consolefonts</file>. Some other people prefer the
<tt>lat0-sun16</tt> font, it's just a matter of taste.

<p>If you are using the <package>svgatextmode</package> package
(obsoleted by the framebuffer) you might configure the console font
also by changing the <file>/etc/TextConfig</file> file.

<P>NOTE: If you are using the framebuffer device for console text,
read the note regarding console-tools configuration in the 
<file>/etc/console-tools/config</file> file. Basically, the global
definition will only work for the first virtual terminal, you need
to explicitly state the font for the other terminals like this:

<example>
SCREEN_FONT_vc1=lat0-16
SCREEN_FONT_vc2=lat0-16
SCREEN_FONT_vc3=lat0-16
....
</example>


<sect>Configuring the X environment

<p>For the graphic environment to represent euros you also need to have:

<list>
<item>fonts which include the euro symbol
<item>proper configuration of the keyboard
</list>

<P>XFree86 includes euro-ready fonts since version 3.3.3.1, like, for
example 7x13euro.bdf or 7x13euroB.bdf. However, the user might not
have them installed since ISO-8859-15 fonts are not part of the default 
(basic) XFree86 installation.

<sect1>Keyboard configuration

<p>The keyboard configuration here is easier that in console.
If you are using the Xkb extensions in the X server (the default since 
3.3.5) you can change it using the 
<tt>XkbLayout</tt> option in the <tt>InputDevice</tt> section  of the
X configuration file. That file is located in <file>/etc/X11/XF86Config</file> 
for XFree86 3.3.6 and <file>/etc/X11/XF86Config-4</file> for XFree86 4.1.

<p>There are several ways you can 
add support for the euro definition:
<list>
<item>by changing the xkb extensions included in the X server.
<item>by loading a new modmap (using <prgn/xmodmap/)
</list>
<p>If you change the modmap with <prgn/xmodmap/ and it works, it's a temporary 
fix, after restarting the server
the changes will get lost. In order to have this definition loaded on startup
you have to add the following definition to your <file>Xmodmap</file> by doing:
<example>
$ xmodmap -pke > ~/.xmodmap
</example>

<p>NOTE: Xmodmap is obsolete, please use the Xkb extensions. Future releases
of XFree86 might not even support user's defined xmodmaps.

<p> NOTE: the locales setting must be done before Xsession starts, 
so make sure that your configuration is loaded properly before 
executing <tt>startx</tt> (if you are using an XDM application such
as <tt>gdm</tt> you can choose the settings from it).

<p>NOTE: The symbol used for the Euro sign varies from Xfree 3.3.6 
(standard X server in Debian 2.2) to Xfree 4.1 (standard X server
in Debian 3.0). In Xfree 3.3.6 you will have to use "currency" instead of "EuroSign" 
as the symbol definition. This has changed in Xfree 4.1 which has built-in support
for the EuroSign character. If you use currency that same symbol 
in Xfree 4.1, due to UTF support, it might not represent properly the 
Euro character.

<sect2>Xfree in Debian 3.0

<p>If you are using Debian woody (3.0), which includes XFree86 4.1,
you only need to have it properly configured to a language in the euro zone,
this is done in the configuration file <file>/etc/X11/XF86Config-4</file>.
Inputting the euro symbol should work correctly 
(if not, please file a bug). 

<p>You can also make some changes to provide euro support if
your system does not work properly. You can change the Xkb extensions
(at the files in <file>/usr/X11R6/lib/X11/xkb/symbols</file>) 
to include Euro support with something along the lines of:
<example>
  key &lt;AD03&gt; {        [                 e,    E               ],
                      [        EuroSign,      cent        ]       };
</example>
<p>This, however, should already be provided in all the files of languages
from the Euro zone (es, de...)
<p>Or, you can change your Xmodmap definition with:
<example>
$ echo "keycode 0x1A = e  E EuroSign cent" | xmodmap -
</example>

<p>If you are not using Xkb extensions you will have to change
the  definitions available at the <file>/usr/share/xmodmap/</file>
directory (the file name is xmodmap.XXX with XXX the one 
appropiate to your language).
<p>Since Xkb extensions is the default behavior the Xmodmap files provided
by Xfree86 4.1 might not be updated properly. Check that the line 
related to the <tt>keycode 26</tt> (E character)
looks like the following line:
<example>
keycode  26 = e E EuroSign cent
</example>

<sect2>Xfree in Debian 2.2
<p>
If you are using versions equal to, or  prior to Debian potato (2.2),
the language definition might not be properly defined. If an upgrade 
to a newer version of XFree86 is not possible, you can use any of the
previous approaches to add support for the euro definition:

<p>You can change the Xkb extensions
(<file>/usr/X11R6/lib/X11/xkb/symbols</file>) to include currency support
with something along the lines of 
<example>
  key &lt;AD03&gt; {        [                 e,    E               ],
                      [        currency,      cent        ]       };
</example>

<p>Or, you can change your Xmodmap definition with:
<example>
$ echo "keycode 0x1A = e  E currency cent" | xmodmap -
</example>

<p>You can also use the  definitions available at the 
<file>/usr/share/xmodmap/</file>
directory (change the file appropiate to your language) if you are
not using Xkb extensions. Check that the line 
related to the <tt>keycode 26</tt> (E character)
looks like the following line:
<example>
keycode  26 = e E currency cent
</example>

<p>Debian 2.2 Xmodmap definitions of the languages in the euro zone contain
the euro character (using the currency symbol), so you can use the following 
<tt>xmodmap /usr/share/xmodmap/xmodmap.XX</tt> (XX is the language you
want to use).


<sect1 id="xfree86-fonts">Font configuration
<p>In order to represent the euro symbol in X you need to have 
appropiate fonts to represent the ISO-8859-15 encoding (if not using
UTF-8). You can see which fonts could be used for this by doing:
<example>
$ xlsfonts | grep 'iso8859-15$'
</example>

<p>In a default Debian installation, the only font that provides
this encoding is the fixed (misc) font, which might be proper
for an xterm but might not show up nice in many other applications.
However, Debian 3.0 (woody) provides the transcoded package fonts
which include other ISO-8859-15 fonts. The packages are
<package>xfonts-base-transcoded</package>,
<package>xfonts-75dpi-transcoded</package>,
<package>xfonts-100dpi-transcoded</package>, and you can install them by
running <tt>apt-get install 'xfonts.*transcoded'</tt>. 

<p>Some people might not want to install these packages because they are
quite large, around 15 Mb. There is a hacked version available,
with all non-15 fonts removed which is less than 3Mb in size.
You can find it at <url id="http://sites.inka.de/W1752/reduced-xfonts/">.
Note that this is not part of the standard Debian distribution.

<p>(FIXME if users really need this the transcoded packages should
be broken in two.)

<sect2 id="potato">Potato, XFree86 3.X

<p>Please note that if you are using Debian 2.2 you cannot install
these packages without a system upgrade since they depend on XFree86 4.

<p>The following packages also provide ISO-8859-15 fonts:
xfonts-jmk, xfonts-arphic-bsmi00lp, xfonts-arphic-gbsn00lp,
xfonts-arphic-bkai00mp and xfonts-arphic-gkai00mp.

<p>The <package>xfonts-cyrillic</package> package provides also
(in the XFree86 3.3.6) some ISO-8859-15 fonts. 
<p>FIXME: Verify this last statement (seems to due to the 
data sent to me from users of the euro-test program)

<p>NOTE: Be sure you do not have a default definition for another
font in your <file>.Xdefaults</file> file. For example with
<example>
*VT100.font: -misc-fixed-medium-r-semicondensed--13-120-75-75-c-60-iso8859-16
</example>

<p>If you cannot find any suitable fonts, you can use the ISO10646-1 fonts which
are a superset of the different ISO8859-X fonts and are also provided
in Debian. Markus Kuhn provides a script called <tt>ucs2any.pl</tt>
which states:

<example>
        This Perl script allows you to generate from an ISO10646-1 encoded
        BDF font other BDF fonts in any possible encoding. This way, you can
        derive from a single ISO10646-1 master font a whole set of 8-bit
        fonts in all ISO 8859 and various other encodings.
</example>

<p>There are Unicode fonts for X-windows available
at <url id="http://www.cl.cam.ac.uk/~mgk25/ucs-fonts.html">.
In ucs-fonts.tar.gz and ucs-fonts-75dpi100dpi.tar.gz there are Times,
Helvetica, Lucida, Utopia, New Century, Schoolbook, Courier... fonts that can 
be used. You can also use the <tt>yudit</tt> program to change these 
fonts.

<P>There are Debian packages available to install the Kuhn's unicode fonts.
FIXME: What are the names for them?

<p>There are other useful XFree86 3.3.6 ISO-8859-15 fonts at <url
id="http://linux.ee/~ville/vh-fonts-0.99.2.tar.gz">, even if provided
mostly for Estonian users they are correct fonts and include modified
helvetica, times, courier and one font for terminal, and at
<url id="http://httpd.chello.nl/fonturi/index-en.html"> (FIXME: not tested).

<chapt id="applications">Euro support in applications

<p>FIXME: Text needed

<sect>Why talk about applications?
<p>Even if you have the euro symbol working correctly (you can input
it from the keyboard and see it on your screen) you still need to
see if your applications work properly. 

<p>Some problems here arise
in graphic applications which might use their own fonts and might,
therefore, be unable to represent the euro symbol (even if you input
it correctly) because they do not have an internal representation for it.
<p>Hint: you could make your life easier if you run a font selector program
like <tt>gtkfontsel</tt> (<package>gtkfontsel</package> package) 
and you set the mask of visible fonts to ISO-8859-15.

<p>However, the encoding made by the program for texts and data that
it uses is also an important issue. If it's unable to represent 
internally the charset used (be it ISO-8859-15 or Unicode) support
for euro might not fully work. So, one thing is using ISO-8859-15
for menubars, program messages et al, and a different one is using 
ISO-8859-15 for data used by the program (text, information on
databases...).

<sect>Applications with known euro support

<p>The following applications are known to have support for the euro character:

<list>
<item>Terminals: XTerm, Rxvt and their derivatives, GNOME Terminal, Eterm.

<item>Editors: gVim, Emacs, XEmacs, Kword, Mcedit, kedit, kwite, kwrite.
Note: Emacs21 (in woody) does support latin9 documents.

<item>Programs using GTK+/GLib

<item>Desktop environments: GNOME and KDE.

<item>Konqueror, Mozilla

<item>Mutt

<item>Apache

<item>LaTeX

<item>groff (nroff, troff, grotty)

<item>a2ps

<item>Staroffice 5.0 (not provided in Debian but a FAQ) it seems to
use it own fonts, so you cannot use the locally installed fonts,
however it seems the 'Conga' font does include the euro-character.

<item>LyX (1.1.6fix4 and above)

</list>

<sect1>XTerm and its derivatives

<p>If the euro character is not represented in your X terminal emulator, you
can change the default font by changing either the users' configuration
files (<file>.Xdefaults</file> or <file>.Xresources</file>) or the
system-wide configuration at <file>/etc/X11/app-defaults/XTerm</file>:

<example>
*font:     -misc-fixed-medium-r-normal-*-*-120-*-*-c-*-iso8859-15
*VT100*font2:           -misc-fixed-medium-r-normal-*-*-70-*-*-c-*-iso8859-15
*VT100*font3:           -misc-fixed-medium-r-normal-*-*-100-*-*-c-*-iso8859-15
*VT100*font4:           -misc-fixed-medium-r-normal-*-*-120-*-*-c-*-iso8859-15
*VT100*font5:           -misc-fixed-medium-r-normal-*-*-140-*-*-c-*-iso8859-15
*VT100*font6:           -misc-fixed-medium-r-normal-*-*-200-*-*-c-*-iso8859-15
</example>

<p>In <file>/etc/X11/app-defaults/XTerm</file>, make sure you replace old
lines with these options.

<p>After editing a <file>.Xdefaults</file> file, reload it with
<tt>xrdb -merge ~/.Xdefaults</tt>. (Similarly for <file>.Xresources</file>.)

<p>Note that the derivative programs also use the <tt>font</tt> resource to
set the default font, so the procedure is analogous.

<sect1>GNOME Terminal

<p>You can configure the Gnome terminal to use a euro-ready font
by changing the font in the Configuration->Preferences menu.

<sect1>RXVT and its derivatives

<p>Rxvt and the programs derived from it (e.g. Aterm, Wterm) also use the
<tt>font</tt> resource from <file>~/.Xresources</file> or
<file>~/.Xdefaults</file>, see above for how it's done in XTerm.

<sect1>Eterm

<p>Change the user configuration (<file>~/.Eterm/user.cfg</file>) with:
<example>
&lt;Eterm-0.9.1&gt;
begin attributes
    scrollbar_type motif
    scrollbar_width 10
    font default 2
    font proportional 0
    font 0 -b&amp;h-lucidatypewriter-medium-r-normal-*-*-80-*-*-m-*-iso8859-15
    font 1 -b&amp;h-lucidatypewriter-medium-r-normal-*-*-100-*-*-m-*-iso8859-15
    font 2 -b&amp;h-lucidatypewriter-medium-r-normal-*-*-120-*-*-m-*-iso8859-15
    font 3 -b&amp;h-lucidatypewriter-medium-r-normal-*-*-140-*-*-m-*-iso8859-15
    font 4 -b&amp;h-lucidatypewriter-medium-r-normal-*-*-180-*-*-m-*-iso8859-15
end attributes
</example>

<sect1>gVim

<p><file>~/.vimrc</file> or (systemwide) <file>/etc/vim/vimrc</file>:

<example>
set guifont=-b&amp;h-lucidatypewriter-medium-r-normal-*-*-140-*-*-m-*-iso8859-15
set encoding=iso-8859-15
</example>

<sect1>Emacs, XEmacs

<p>GNU Emacs 21 and XEmacs 21 provide support for latin9.
However, in versions previous to Emacs21, (Mule)
does not show an option to save documents 
using latin9 (latin0) or ISO-8859-15.

<p>You might need, however, to change the font that Emacs runs with in
order to present the Euro character in X windows.
To do so, run emacs with a euro font with the -fn switch or configure it to
always use a given font by editing <file>~/.Xresources</file>:

<example>
Emacs.default.attributeFont: -*-Lucidatypewriter-Medium-R-*-*-*-110-*-*-*-*-iso
8859-15
</example>


<p>You can also try adding the following lines in <file>.emacs</file>,
or <file>.xemacs/init.el</file> for XEmacs:

<example>
(set-face-font
 'default '"-*-courier-medium-r-*-*-*-120-*-*-*-*-iso8859-15")
</example>

<sect1>GNOME and GTK+

<p>Gnome applications do mostly support another charset without problems.
Depending on your local configuration, you probably would have to change the
default font. Please start (in Gnome) the Control Center and choose a font with
<tt>iso8859-15</tt> encoding. If you don't have gnomecc installed, you could
make this setting manually, creating an customised gtkrc file in your home
directory (<file>~/.gtkrc</file>) and addind the lines show below.

<p>Better yet, change the systemwide GTK+ settings in
<file>/etc/gtk/gtkrc</file>. You can do this in two different ways:

<list>

<item>Linking (or copying) <file>/etc/gtk/gtkrc.iso-8859-15</file> to
<file>/etc/gtk/gtkrc</file> (recommended). In Debian this file
contains:
<example>
style "gtk-default-iso-8859-15" {
       fontset = "-*-helvetica-medium-r-normal--12-*-*-*-*-*-iso8859-1,\
                  -*-arial-medium-r-normal--12-*-*-*-*-*-iso8859-1,\
                  -*-helvetica-medium-r-normal--12-*-*-*-*-*-iso8859-15,\
                  -*-arial-medium-r-normal--12-*-*-*-*-*-iso8859-15,*-r-*"
}
class "GtkWidget" style "gtk-default-iso-8859-15"
</example>

<item>Adding the needed lines to <file>/etc/gtk/gtkrc</file> directly
(discouraged but might be necessary sometimes)

</list>

<p>Here are some sample lines you can add to the configuration file:

<example>
style "user-font"
{
  font="-monotype-arial-medium-r-normal-*-12-*-*-*-p-*-iso8859-15"
}
widget_class "*" style "user-font"
</example>

<sect1>KDE

<p>KDE euro support works as described at <url
id="http://lists.debian.org/debian-kde/2001/debian-kde-200110/msg00423.html">.
You have to set up yor Xfree environment as described above.
Users have reported even to have KDE's euro support working in Potato
using custom XFree86 3.3.6 fonts (as described in <ref id="xfree86-fonts">.

<p>Be careful when setting the locale and use the aliases defined in
the X library since, as described at <url
id="http://bugs.kde.org/db/32/32919-b.html">, setting the charset as
'ISO-8859-15' will not work, it needs to be 'ISO8859-15'. This issue
is further discussed at <ref id="localisation">.

<p>Once this is done, you have to go to KDE's
Control Center::Personalization::Country & Language. And set your
Country name and "Charset: iso8859-15".

<p>I first though, reading <url
id="http://users.pandora.be/sim/euro/112/"> that KDE didn't work
with Euro characters. But you only have to configure it properly.
You can <url id="http://m3d.uib.es/~gallir/ext/tmp/euro.png"
name="see it for yourself">. If it does not work for you
check your charset and the fonts available.

<p>However, there are know bugs due to the <package>localesconf</package>
which does not set the KDE environment properly. You should take
your time and read Bug 
<url id="http://bugs.debian.org/122533" name="122533">.
and Bug
<url id="http://bugs.debian.org/130259" name="130259">.

<sect1>Apache

<sect2>Apache
<p>You should modify your webserver settings if you want to present some
sites with a non-ISO8859-1 charset, unless you want your users to change their
charset manually each time. Following settings for Apache (eg. put into an
<tt>.htaccess</tt> file) tells the browsers the charset they have to use:
<example>
AddType        text/html;charset=ISO-8859-15   html
</example>
<p>You can use the euro character directly in the documents, this information
could be provided also in the HTML documents DTD. In any case you
can use, the HTML 4.0 euro representation and not configure Apache.

<sect1>Mutt

<p>Works flawlessly adding to the muttrc file (user's or global):
<example>
set charset=iso-8859-15
set send_charset="us-ascii:iso-8859-15:iso-8859-1:utf-8"
</example>


<sect1>LaTeX

<p>There are several ways to introduce the euro character in LaTeX:
<list>
<item>With textcomp package and the \texteuro macro (TS1 fonts)
<item>With the marvosym package, using type1 fonts.
<item>With the eurosym package using metafont fonts.
</list>

<p>Thus, you can use the marvosym package that is included in 
<package>tetex-base</package>
(<file>/usr/share/texmf/tex/latex/misc/marvosym.sty</file>).
This package includes some symbols, including the euro symbol, in 
different fonts (Times, Helvetica and Courier). Of course, you do not need
to be able to input the euro character (or see it in X) since the
LaTeX files will be translated into postscript files (no font needed
for their viewing with <tt>xpdf</tt> or other postscript viewers).
The include it in your documents with
<example>
\EUR
</example>

<p>Debian woody has also the <package>tetex-eurosym</package> package
which allows the euro representation too. You can use this package
even if on a pure stable system to reproduce Euro symbols.
<example>
\texteuro
</example>

<p>In order to represent the cent you need to use <file>textcomp.sty</file> which is provided in <package>tetex-base</package>.

<p>A common problem is, however, not having an input encoding in order
to include this characters directly.  You can use, however the files
provided at <ref id="latex-enc">, and place them under
<file>/usr/share/texmf/tex/latex/base/</file> in order to do so.

<p>FIXME: Wishlist bug against tetex-base so they get included.

<sect1>Kword

<p>Kword includes a document in the demos directory called
<file>eurosign.kwd</file> which can be used to determine if fonts
are properly installed. It is available at
<file>/usr/share/doc/kword/examples/eurosign.kwd.gz</file>

<p>Note: This file was available since Kword 1.1.1-5, see <url name="#132627"
id="http://bugs.debian.org/132627">.

<sect1>LyX

<p>As of version 1.1.6fix4-2 LyX adds support for latin3, latin4 and 
latin9 encodings.


<sect1>groff (nroff, troff, grotty)

<p>It provides latin1, ascii8 and utf8 as devices. In order to generate
manpages in latin0 it seems the <tt>ascii8</tt> device needs to be used.

<p>FIXME needs to be checked.

<sect1>Debiandoc-sgml
<p>The package <package>debiandoc-sgml</package> has been fixed as
of April 2002 fixing <url id="http://bugs.debian.org/138437" id="Bug #138437">
and now supports the @euro locales.


<sect>Applications that do not support the euro character

<p>The following applications (and associated versions) have been reported
<em>not</em> to work with the euro character:
<list>
<item>LyX 1.1.6fix3. ISO-8859-15 is not included in 
<file>/usr/share/lyx/encodings</file> and <file>/usr/share/lyx/languages</file>
shows ISO8859-1 for euro-zone languages (for example, for Spanish). Problems
with LyX are similar to LaTeX, there is a need for a new <tt>inputenc</tt>. Check, however <ref id="latex-enc">, you will need, in any case type1 fonts
for LaTeX to be able to print the character properly (currently not provided).
<item>Xfig 3.2.3
<item>GnuPG, supports only ISO-8859-1, ISO-8859-2, koi8-r and utf-8
(see the --charset option in <manref section="1" name="gpg">)
<item>SGML tools (<package>nsgml</package>,
<package>sgml-tools</package>. 
Most tools will currently warn if
you are using any @euro locale, the <package>nsgmls</package> has
currently no support for the iso-8859-15 encoding.
<item>Perl is not euro friendly, Perl is used by quite a number of
administrative scripts including Debconf.
</list>


<chapt id="FAQ">Frequently Asked Questions

<sect>I see a strange character instead of the euro
<p>If you are seeing a character that seems to be a circle with four 
lines streching out of it (the international symbol for currency) 
and not the euro symbol then the font you are using
does not properly represent euros but your keyboard is sending
it properly. Please check your environment/applications in order to
see that you are using ISO-8859-15 fonts and not ISO-8859-1.

<sect>The euro character gets lost when switching from X to console
<p>FIX: Run (as superuser) <tt>/etc/init.d/console-screen reload</tt>
(if the <package>console-tools</package> is installed), or run
<tt>setfont -u</tt> (if the <package>kbd</package> is installed.
<p>REASON: There are fonts with an unicode map in the .psf file
and others that do not include it. If these last ones are used the
Linux kernel unicode map resets and when you return from an X 
virtual terminal the map is garbled. The 
Keyboard and Console HOWTO (available at 
<file>/usr/share/doc/HOWTO/en-txt/Keyboard-and-Console-HOWTO.txt.gz</file>
if you have the <package>doc-linux</package> package) elaborates
a little bit on this.

<sect>How do I see if my keyboard is properly configured?
<p>(Console terminal) You should see 'currency' when doing: 
<example>
$ dumpkeys  |grep -i currency
</example>
<p>(X graphic environment) You should see 'currency' when doing: 
<example>
$ xmodmap -pke | grep -i EuroSign
</example>

<sect>How do I see if I can represent euros properly?

<p>If using ISO-8859-15:
<example>
$ printf "\xa4\n"
</example>
<p>If using UTF-8:
<example>
$ printf "\xe2\x82\xac\n"
</example>

<p>Of course, you can also see if the characters euro
and cent are represented correctly by taking a look at a document
that includes them. <package>euro-support</package>
includes a representation of these in 
<file>/usr/share/doc/euro-support/examples/characters</file>, just
<tt>cat</tt> the file and see if they get printed to the screen
correctly.


<sect>I'm using framebuffer, can I represent euros on console?
<p>Yes you can, (from the 
<url id="http://www.linuxdoc.org/HOWTO/Framebuffer-HOWTO.html#toc15" name="FrameBuffer-HOWTO">)
you just need to use the kbd package version 0.99 or later.

<sect>What is the longterm solution for this issue?
<p>Move towards UTF-8 encoding and separation of localisation
and representation (no more XX_XX.ISO-8859-X).

<chapt id="about">About this document

<sect>Why this document?

<p>I (Javier) have been thinking for a time on how to provide
automatic configuration of the euro issue on the lines of the
automatic stuff done by <tt>castellanizar</tt> in <package>user-es</package>.
After going through some information on the problem and reading
some threads in debian related mailing lists like
<url id="http://lists.debian.org/debian-i18n/2001/debian-i18n-200109/msg00018.html" name="debian-i18n">,
<url id="http://lists.debian.org/debian-devel/2001/debian-devel-200105/msg00696.html" name="debian-devel">
and
<url id="http://lists.debian.org/debian-user-spanish/2001/debian-user-spanish-200105/msg00488.html" name="debian-user-spanish">, I decided to
post a poll to test how euro support was amongst Spanish speakers
(<url id="http://lists.debian.org/debian-user-spanish/2001/debian-user-spanish-200110/msg01265.html" name="in debian-user-spanish">). The results
indicated that many people have not properly configured their
systems even though Debian 2.2 (released more than a year ago) was ready
for the euro problem.
<p>This document is the first step towards writing an automated tool
to configure the user system for full euro support. Even if this could
be done when Debian users move to UTF-8 there is a need of a short term
solution before that move comes about.

<sect id="references">References

<p>The following documents complement this one and are useful for the
reader to learn more information regarding the euro,
Internationalisation and Unicode:

<list>
<item><url id="http://www.linuxdoc.org/HOWTO/mini/Euro-Char-Support/"
name="Euro-mini-HOWTO">.
<item><url id="http://www.debian.org/doc/devel-manuals#i18n" name="Introduction to I18n">
by Tomohiro Kubota, which introduces basic concepts of internationalization
and is centered on displaying and inputting characters with different
encodings (ASCII, ISO-8859, multybyte characters...)
<item><url id="http://melkor.dnp.fmph.uniba.sk/~garabik/debian-utf8/HOWTO/" name="UTF-8 in Debian">
<!-- This document should be checked and merged with the previous one, and
included in the DDP  (jfs) -->
<item><url id="http://www.rano.org/mutt.html" name="Unicode Mutt">

<item> <url id="http://www.cs.usyd.edu.au/~matty/" name="Unicode in X-Windows">.
</list>

<p>Some other (official) references:
<list>
<item><url id="http://europa.eu.int/euro/html/rubrique-defaut5.html?rubrique=177&lang=5"
name="European Comission guidelines">.
<item><url id="http://europa.eu.int/euro/html/rubrique-defaut5.html?rubrique=177&lang=5" name="Migration to Euro"> document produced by the European Comission.
</list>

<sect>Changelog/History

<p>List of changes done to this document.
<list>

<item>Changes in 0.91
<p>
<list>
<item>Updated debiandocsgml information.
<item>Partially applied patch sent by jrfern (more later).
</list>
<item>Changes in 0.91
<p>
<list>
<item>Updated KDE information including pointers to two bug reports
<item>Updated LyX info (it is not euro-compliant)
<item>Added Perl to the list of software not euro-compliant (but?)
</list>
<item>Changes in 0.9
<p>
<list>
<item>Added emacs 21 note
<item>Removed repeated chapter (Why all this fuss...? and Why this document?)
<item>Added information on user-euro-es
<item>Changed from currency to EuroSign (under discussion)
<item>Major rewritting of Xfree section in order to distinguish xfree versions
properly (currency and EuroSign symbol)
<item>Rewriting of Locale section to separate woody and potato information
</list>

<item>Changes in 0.8
<p>
<list>
<item>added note regarding tetex-eurosym on stable sent by Martin Schulze
<item>fixed HTML representation, suggested by Bernd Eckenfels
<item>added a note regarding the use of kbdconfig, suggested by Bernd Eckenfels
<item>added an acknowledgment to Guylhem Aznar
<item>fixed missing quote, sent by  Cyrille Artho
</list>

<item>Changes in 0.7
<p>
<list>
<item>proofreading and slight reorganization by Josip Rodin
</list>

<item>Changes in 0.6
<p>
<list>
<item>fixed grammar errors with patch sent by Matt Kraai
</list>

<item>Changes in 0.5
<p>
<list>
<item>Added contributions from Juan Rafael Fernández, Miguel Sanjuan,
Aurelien Jano, Phillip Siegert, Tomohiro Kubota, Ionel Mugurel and
Alexander Steinert.

<item>Moved the location of the explanations regarding fonty.

<item>Rewrote the presentacion of supported applications to improve
readability.

<item>Rewrote acknowledgments (I'm getting kind of sentimental :)
</list>

<item>Changes in 0.4
<p>
<list>
<item>Added contributions submitted by Juan Rafael Fernández.
<item>Fixed a few typos spotted by Carlos Valdivia.
<item>Added more information on the euro-support package.
</list>
<item>Changes in 0.3
<p>
<list>
<item>Added information regarding LaTeX provided by Juan Rafael Fernández
<item>Added more information and fixes contributed by Eduard Bloch.
</list>
<item>Changes in 0.2 
<p>
<list>
<item>added more information regarding euro standards
<item>added links to mailing list threads
<item>fixed some typos
</list>
</list>

<sect id="pending">Pending issues

<p>This is a list of pending issues that some readers have sent
and should be looked upon and documented appropiately:

<list>
<item>Modify the section related to TeX, LaTeX and the LyX
frontend. Input/output issues are mixed, and use of latin0 with
euro might not be the same issues (jrfern)

<item>talk about how to change fonts and the <em>prefered</em>
way on howto register a font in woody: defoma (make a howto,
as a user I only execute type1inst and mkfontdir) (jrfern)

<item>It seems that locales *@euro, ispell and all the programs
which call it (emacs, mc..) need -t latin1 to work properly. Check.
(jrfern)

</list>

<sect id="acknowledge">Acknowledgements

<p>I would like to take the opportunity to
thanks all the people have contributed (knowingly or not) to the
information contained in this HOWTO, specifically:

<list>

<item>Juan Rafael Fernández (jrfern), who wrote a first draft of a euro-howto
in Spanish. He has also contributed quiet a number of typos and suggestions
in order to improve this document.

<item>Hue-Bond, who answered himself some FAQs in the
debian-user-spanish mailing list.

<item>Jose Carlos Garcia Sogo, who showed up some very good insights
on May 9th on the debian-users-spanish mailing list regarding this
issue.

<item>Ionel Mugurel who did an extensive explanation on the euro
issues on 14th September 2000 on the debian-i18n mailing list and
provided me with the so-much-needed LaTeX input encodings.

<item>Guylhem Aznar the writer of the
<url id="http://www.ibiblio.org/guylhem/programmes/EURO-2.tgz" name="Euro Pack and the Euro FAQ">.
Presented in a <url id="http://www.linuxjournal.com/article.php?sid=3200" name="Linux Journal"> article in 1998.

<item>Eduard Bloch, the writer of the <url
id="http://channel.debian.de/faq/" name="DE-Debian-HOWTO">.

<item>Tomohiro Kubota who enlightened me on some of the problems of
playing with the locale and its risks.

<item>Pablo de Vicente, from the Spanish KDE translation team who made
efforts to prove me wrong when I said that KDE did not support the euro.

<item>Thomas Roessler, who contributed useful input regarding the locale
section and made me separate it in two.
</list>

<p>And of course, all other people that contributed bits of
typos/corrections/suggestions of which these HOWTO is made of. If you,
reader, have to thank someone is theirs for their effort and
knowledge, I only put it together here.

<appendix id="latex-enc">File definitions for LaTeX

<p>Ionel Mugurel has provided the following input encoding definition
files for latin9 and latin10 (not yet included in Debian).

<sect>Latin9.def
<p>
<example>
%%
%% This is file `latin9.def',
%% 
%% This is a new file.
%% 
%% Copyright 2001
%% 		  Ionel Mugurel Ciobica
%%
%% Permision granted to copy, distribute and redistribute this file.
%% 
%% Because of the euro symbol the tetex-eurosym package has to be
%% installed. Otherwise an alternative is made to "draw" the character
%% on place. Uncomment that line and comment the next one.
%% 
%% Because of \textdegree and many other \text... commands,
%% you might want to use \usepackage{textcomp} in your document.
%% 
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
 \ProvidesFile{latin9.def}
   [2001/10/07 v0.01 Input encoding file
                        (test version: still liable to change)]
\makeatletter
\DeclareInputText{160}{\nobreakspace}
\DeclareInputText{161}{\textexclamdown}
\DeclareInputText{162}{\textcent}
\DeclareInputText{163}{\pounds}
%\DeclareInputText{164}{{\sffamily C\makebox[0pt][l]{\kern-.70em\mbox{--}}\makebox[0pt][l]{\kern-.68em\raisebox{.25ex}{--}}}}
\DeclareInputText{164}{\euro}
\DeclareInputText{165}{\textyen}
\DeclareInputText{166}{\v S}
\DeclareInputText{167}{\S}
\DeclareInputText{168}{\v s}
\DeclareInputText{169}{\copyright}
\DeclareInputText{170}{\textordfeminine}
\DeclareInputText{171}{\guillemotleft}
\DeclareInputMath{172}{\lnot}
\DeclareInputText{173}{\-}
\DeclareInputText{174}{\textregistered}
\DeclareInputText{175}{\@tabacckludge={}}
\DeclareInputText{176}{\textdegree}
\DeclareInputMath{177}{\pm}
\DeclareInputMath{178}{^2}
\DeclareInputMath{179}{^3}
\DeclareInputText{180}{\v Z}
\DeclareInputMath{181}{\mu}
\DeclareInputText{182}{\P}
\DeclareInputText{183}{\textperiodcentered}
\DeclareInputText{184}{\v z}
\DeclareInputMath{185}{^1}
\DeclareInputText{186}{\textordmasculine}
\DeclareInputText{187}{\guillemotright}
\DeclareInputText{188}{\OE}
\DeclareInputText{189}{\oe}
\DeclareInputText{190}{\" Y}
\DeclareInputText{191}{\textquestiondown}
\DeclareInputText{192}{\@tabacckludge`A}
\DeclareInputText{193}{\@tabacckludge'A}
\DeclareInputText{194}{\^A}
\DeclareInputText{195}{\~A}
\DeclareInputText{196}{\"A}
\DeclareInputText{197}{\r A}
\DeclareInputText{198}{\AE}
\DeclareInputText{199}{\c C}
\DeclareInputText{200}{\@tabacckludge`E}
\DeclareInputText{201}{\@tabacckludge'E}
\DeclareInputText{202}{\^E}
\DeclareInputText{203}{\"E}
\DeclareInputText{204}{\@tabacckludge`I}
\DeclareInputText{205}{\@tabacckludge'I}
\DeclareInputText{206}{\^I}
\DeclareInputText{207}{\"I}
\DeclareInputText{208}{\DH}
\DeclareInputText{209}{\~N}
\DeclareInputText{210}{\@tabacckludge`O}
\DeclareInputText{211}{\@tabacckludge'O}
\DeclareInputText{212}{\^O}
\DeclareInputText{213}{\~O}
\DeclareInputText{214}{\"O}
\DeclareInputMath{215}{\times}
\DeclareInputText{216}{\O}
\DeclareInputText{217}{\@tabacckludge`U}
\DeclareInputText{218}{\@tabacckludge'U}
\DeclareInputText{219}{\^U}
\DeclareInputText{220}{\"U}
\DeclareInputText{221}{\@tabacckludge'Y}
\DeclareInputText{222}{\TH}
\DeclareInputText{223}{\ss}
\DeclareInputText{224}{\@tabacckludge`a}
\DeclareInputText{225}{\@tabacckludge'a}
\DeclareInputText{226}{\^a}
\DeclareInputText{227}{\~a}
\DeclareInputText{228}{\"a}
\DeclareInputText{229}{\r a}
\DeclareInputText{230}{\ae}
\DeclareInputText{231}{\c c}
\DeclareInputText{232}{\@tabacckludge`e}
\DeclareInputText{233}{\@tabacckludge'e}
\DeclareInputText{234}{\^e}
\DeclareInputText{235}{\"e}
\DeclareInputText{236}{\@tabacckludge`\i}
\DeclareInputText{237}{\@tabacckludge'\i}
\DeclareInputText{238}{\^\i}
\DeclareInputText{239}{\"\i}
\DeclareInputText{240}{\dh}
\DeclareInputText{241}{\~n}
\DeclareInputText{242}{\@tabacckludge`o}
\DeclareInputText{243}{\@tabacckludge'o}
\DeclareInputText{244}{\^o}
\DeclareInputText{245}{\~o}
\DeclareInputText{246}{\"o}
\DeclareInputMath{247}{\div}
\DeclareInputText{248}{\o}
\DeclareInputText{249}{\@tabacckludge`u}
\DeclareInputText{250}{\@tabacckludge'u}
\DeclareInputText{251}{\^u}
\DeclareInputText{252}{\"u}
\DeclareInputText{253}{\@tabacckludge'y}
\DeclareInputText{254}{\th}
\DeclareInputText{255}{\"y}
\makeatother
\endinput
%%
%% End of file `latin9.def'.
</example>

<sect>latin10.def
<p>
<example>
%%
%% This is file `latin10.def',
%%
%% This is a new file.
%% 
%% Copyright 2001
%% 		  Ionel Mugurel Ciobîcã
%%
%% Permision granted to copy, distribute and redistribute this file.
%%
%% The comma below accent for S, s, T and t doesn't look good
%% for large characters. A solution would be to include internal
%% support for comma below in the same way like for the dot below,
%% so \C{t} to create the t comma below, etc.
%% 
%% Because of the euro symbol the tetex-eurosym package has to be
%% installed. Otherwise an alternative is made to "draw" the character
%% on place. Uncomment that line and comment the next one.
%% 
%% Latin10 is also comming with support for the German double quotations.
%% You have to use babel with a language which support those quotations,
%% German and Romanian come now in my mind...
%%
%% Because of \textdegree you might want to use \usepackage{textcomp} in
%% your document.
%% 
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
 \ProvidesFile{latin10.def}
   [2001/10/07 v0.01 Input encoding file
                        (test version: still liable to change)]
\makeatletter
\DeclareInputText{160}{\nobreakspace}
\DeclareInputText{161}{\k A}
\DeclareInputText{162}{\k a}
\DeclareInputText{163}{\L}
%\DeclareInputText{164}{{\sffamily C\makebox[0pt][l]{\kern-.70em\mbox{--}}\makebox[0pt][l]{\kern-.68em\raisebox{.25ex}{--}}}}
\DeclareInputText{164}{\euro}
\DeclareInputText{165}{\guillemotleft}
\DeclareInputText{166}{\v S}
\DeclareInputText{167}{\S}
\DeclareInputText{168}{\v s}
\DeclareInputText{169}{\copyright}
\DeclareInputText{170}{\ooalign{S\crcr\hidewidth\raise-.31ex\hbox{\scriptsize,}\hidewidth}}
\DeclareInputText{171}{\quotedblbase}
\DeclareInputText{172}{\@tabacckludge'Z}
\DeclareInputText{173}{\-}
\DeclareInputText{174}{\@tabacckludge' Z}
\DeclareInputText{175}{\.Z}
\DeclareInputText{176}{\textdegree}
\DeclareInputMath{177}{\pm}
\DeclareInputText{178}{\v C}
\DeclareInputText{179}{\l}
\DeclareInputText{180}{\v Z}
\DeclareInputText{181}{\textquotedblleft}
\DeclareInputText{182}{\P}
\DeclareInputText{183}{\textperiodcentered}
\DeclareInputText{184}{\v z}
\DeclareInputText{185}{\v c}
\DeclareInputText{186}{\ooalign{s\crcr\hidewidth\raise-.31ex\hbox{\scriptsize,}\hidewidth}}
\DeclareInputText{187}{\guillemotright}
\DeclareInputText{188}{\OE}
\DeclareInputText{189}{\oe}
\DeclareInputText{190}{\" Y}
\DeclareInputText{191}{\.z}
\DeclareInputText{192}{\@tabacckludge`A}
\DeclareInputText{193}{\@tabacckludge'A}
\DeclareInputText{194}{\^A}
\DeclareInputText{195}{\u A}
\DeclareInputText{196}{\"A}
\DeclareInputText{197}{\@tabacckludge'C}
\DeclareInputText{198}{\AE}
\DeclareInputText{199}{\c C}
\DeclareInputText{200}{\@tabacckludge`E}
\DeclareInputText{201}{\@tabacckludge'E}
\DeclareInputText{202}{\^ E}
\DeclareInputText{203}{\" E}
\DeclareInputText{204}{\@tabacckludge`I}
\DeclareInputText{205}{\@tabacckludge'I}
\DeclareInputText{206}{\^I}
\DeclareInputText{207}{\" I}
\DeclareInputText{208}{\D}
\DeclareInputText{209}{\@tabacckludge'N}
\DeclareInputText{210}{\@tabacckludge`O}
\DeclareInputText{211}{\@tabacckludge'O}
\DeclareInputText{212}{\^O}
\DeclareInputText{213}{\H O}
\DeclareInputText{214}{\"O}
\DeclareInputText{215}{\@tabacckludge'S}
\DeclareInputText{216}{\H U}
\DeclareInputText{217}{\@tabacckludge`U}
\DeclareInputText{218}{\@tabacckludge'U}
\DeclareInputText{219}{\^ U}
\DeclareInputText{220}{\"U}
\DeclareInputText{221}{\k E}
\DeclareInputText{222}{\ooalign{T\crcr\hidewidth\raise-.31ex\hbox{\scriptsize,}\hidewidth}}
\DeclareInputText{223}{\ss}
\DeclareInputText{224}{\@tabacckludge`a}
\DeclareInputText{225}{\@tabacckludge'a}
\DeclareInputText{226}{\^a}
\DeclareInputText{227}{\u a}
\DeclareInputText{228}{\"a}
\DeclareInputText{229}{\@tabacckludge'c}
\DeclareInputText{230}{\ae}
\DeclareInputText{231}{\c c}
\DeclareInputText{232}{\@tabacckludge`e}
\DeclareInputText{233}{\@tabacckludge'e}
\DeclareInputText{234}{\^e}
\DeclareInputText{235}{\"e}
\DeclareInputText{236}{\@tabacckludge`\i}
\DeclareInputText{237}{\@tabacckludge'\i}
\DeclareInputText{238}{\^\i}
\DeclareInputText{239}{\"\i}
\DeclareInputText{240}{\d}
\DeclareInputText{241}{\@tabacckludge'n}
\DeclareInputText{242}{\@tabacckludge`o}
\DeclareInputText{243}{\@tabacckludge'o}
\DeclareInputText{244}{\^o}
\DeclareInputText{245}{\H o}
\DeclareInputText{246}{\"o}
\DeclareInputText{247}{\@tabacckludge's}
\DeclareInputText{248}{\H u}
\DeclareInputText{249}{\@tabacckludge`u}
\DeclareInputText{250}{\@tabacckludge'u}
\DeclareInputText{251}{\^u}
\DeclareInputText{252}{\"u}
\DeclareInputText{253}{\k e}
\DeclareInputText{254}{\ooalign{t\crcr\hidewidth\raise-.31ex\hbox{\scriptsize,}\hidewidth}}
\DeclareInputText{255}{\"y}
\makeatother
\endinput
%%
%% End of file `latin10.def'.
</example>

</book>
</debiandoc>
