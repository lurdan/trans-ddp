#
# Makefile for the release notes, language subdirectory
#

manual := release-notes
release := sarge

currentlang := $(notdir $(CURDIR))
currentlangcn := $(subst _,-,$(shell echo $(currentlang) | tr A-Z a-z))

# this can and will be overriden by a higher level makefile
PUBLISHDIR := /org/www.debian.org/www/releases/$(release)

sources := $(manual).$(currentlang).sgml ../$(manual).ent ../dynamic.ent

export LANG=C
# stupid debiandoc stuff uses strings in another language otherwise

all: html text ps pdf

# create SGML from PO file if existent
# see also ../project-history/Makefile for PO->SGML Makefile integration
# No backup PO file
export VERSION_CONTROL:=off

ORIGINAL = ../en/$(manual).en.sgml
POFILE = $(manual).$(currentlang).po

IGNOREDINCLUSIONS = dynamicdata shareddata

$(manual).%.sgml: $(ORIGINAL) $(manual).%.po \
		$(wildcard addenda/*.add) ../dynamic.ent
	-po4a-translate -k 0 -f sgml -m $(ORIGINAL) \
	    -p $(manual).$*.po -l $(manual).$*.sgml

# po4a ignores conditionals so we can use any architecture for ../dynamic.ent
# "update-po: override architecture=i386" does not work
update-po: $(ORIGINAL)
	if ! [ -e ../dynamic.ent ]; then $(MAKE) architecture=i386 ../dynamic.ent; fi
	po4a-updatepo -f sgml -m $(ORIGINAL) -p $(POFILE) \
	    -o ignore-inclusion="$(IGNOREDINCLUSIONS)"; \

stats: ../dynamic.ent
	-@echo -n "$(POFILE): " 1>&2; \
	po4a-gettextize -f sgml -m $(ORIGINAL) \
	    -o ignore-inclusion="$(IGNOREDINCLUSIONS)" \
	    | sed -e "s/charset=CHARSET/charset=ascii/" \
	    | msgmerge -q $(POFILE) - \
	    | msgfmt -o /dev/null --statistics -;

publish: all
	test -d $(PUBLISHDIR)/$(manual) || install -d -m 755 $(PUBLISHDIR)/$(manual)
	rm -f $(PUBLISHDIR)/$(manual)/*.$(currentlangcn).html
	install -p -m 644 $(manual).$(currentlang).html/*.html $(PUBLISHDIR)/$(manual)
	install -p -m 644 $(manual)*.txt $(manual)*.ps $(manual)*.pdf $(PUBLISHDIR)/$(manual)

validate: $(manual).$(currentlang).sgml
	nsgmls -ges -wall $(manual).$(currentlang).sgml

html: $(manual).$(currentlang).html/index.$(currentlangcn).html
$(manual).$(currentlang).html/index.$(currentlangcn).html: $(sources)
	debiandoc2html -c -l $(currentlang) $<

text: $(manual).$(currentlang).txt
$(manual).$(currentlang).txt: $(sources)
	debiandoc2text -l $(currentlang) $<

$(manual).$(currentlang).info: $(sources)
	debiandoc2info -l $(currentlang) $<
# TODO: rename to .$(currentlang).info?

$(manual).$(currentlang).ps $(manual).$(currentlang).dvi $(manual).$(currentlang).pdf: \
  $(manual).$(currentlang).%: $(sources)
	debiandoc2latex$* -l $(currentlang) $<

ps dvi pdf info: %: $(manual).$(currentlang).%

# generate entities which are dynamically defined by the settings of this
# build run
../dynamic_$(architecture).ent:
ifeq "$(architecture)" ""
	@echo architecture variable must be set
	exit 1
endif
	: > $@			# clear the file
	echo "<!entity architecture     \"$(architecture)\">" >> $@
	echo "<!entity % $(architecture) \"INCLUDE\">" >> $@

.PHONY: ../dynamic.ent
../dynamic.ent: ../dynamic_$(architecture).ent
	rm -f $@
	ln -s $(notdir $<) $@

clean distclean:
	rm -rf $(manual)*.$(currentlang).html
	for ext in txt ps dvi pdf info\* aux log man tex toc sasp\* tpt; do rm -f $(manual)*.$$ext; done
	rm -f head.tmp body.tmp
	rm -f *~ .*~ core tsa* $(patsubst %.po,%.sgml,$(wildcard *.??*.po))

.PHONY: all publish clean distclean validate
