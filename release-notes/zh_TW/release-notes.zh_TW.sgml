<!-- Last translator: Chuan-kai Lin <cklin@debian.org> -->
<!-- original version: 1.134 -->
<!DOCTYPE debiandoc PUBLIC "-//DebianDoc//DTD DebianDoc//EN" [
  <!entity % dynamicdata  SYSTEM "../dynamic.ent"       > %dynamicdata;
  <!entity % shareddata   SYSTEM "../release-notes.ent" > %shareddata;
  <!entity docid "$Id: release-notes.zh_TW.sgml,v 1.1 2003-01-04 00:37:57 joy Exp $">
]>

<debiandoc>
  <book>
  <titlepag>
    <title>&debian; &release; (`&releasename'), &arch-title; 發行情報</title>
      <author>
        <name>Josip Rodin, Bob Hilliard, Adam Di Carlo, Anne Bezemer, Rob
        Bradford</name><email></email>
      </author>
      <author>
        <name></name><email>debian-doc@lists.debian.org</email>
      </author>
      <version>&docid;</version>
    </titlepag>
    <toc detail="sect1">
      <chapt id="whats-new"><heading>&debian; &release; 有什麼新增加的功能？</heading>

        <p>[您永遠可以在 <url id="&url-release-notes;"> 找到這份文件的最新版本。如果您手中所有的已經是一個月前的版本的話，您可能就要考慮下載新的版本了。]</p>

        <p>先前的 &debian; 2.2 版發行 ('potato') 支援了六種不同的電腦硬體平台。在這一次的發行之中，我們除了原有的六種硬體平台之外，又新增了對四種硬體平台的支援（以星號 [*] 標示）。以下是這次發行所有支援平台的列表：</p>

        <p>
          <list>
            <item><p>英特爾 x86 ('i386')</p></item>
            <item><p>摩托羅拉 680x0 ('m68k')</p></item>
            <item><p>Alpha ('alpha')</p></item>
            <item><p>SPARC ('sparc')</p></item>
            <item><p>PowerPC ('powerpc')</p></item>
            <item><p>ARM ('arm')</p></item>
            <item><p>MIPS ('mips' (Big endian) and 'mipsel' (Little endian)) [*]</p></item>
            <item><p>英特爾 Itanium ('ia64') [*]</p></item>
            <item><p>惠普 PA-RISC ('hppa') [*]</p></item>
            <item><p>S/390 ('s390') [*]</p></item>
          </list>
          </p>

<![ %not-i386 [ 
          
<!-- i386 doesn't have a port page - or do they now? -->

          <p>您可以在 <url id="&url-ports;" name="Debian 其他硬體架構網頁">中找到更多關於各個平台程式移植的情況，以及針對您所使用硬體平台的相關資訊。</p>
 
]]>

<![ %hppa %s390 %mips %mipsel %ia64 [ 

          <p>這是 &debian; 在 &arch-title; 平台上的第一次正式發行。我們覺得系統本身已經證明了它有公開發行的水準。然而，因為它從來沒有像其他平台上的發行那樣有過大量曝光（以及被使用者測試）的機會，所以您可能會遭遇一些問題。請利用我們的<url id="&url-bts;" name="錯誤追蹤系統">來回報您所發現的任何問題；在報告中請不要忘了提及您是在 &architecture; 平台上發現這個錯誤的。</p>

]]>

          <p>在 &arch-title; 平台上的 &debian; &release; 發行所使用的系統核心版本為 &kernelversion;。</p>

<![ %default-kernel-2.2 [ 

          <p>2.2 系列的系統核心在反覆的更新和發展過程中，已經引入了許多在系統核心以及和核心功能相關的其他程式上極為有用的改變，包括支援各種新硬體的驅動程式，以及對現有驅動程式的錯誤修正。</p>
          
          <p>這次的發行中也包含了一個 2.4 版的系統核心，以供使用者選擇性的進行安裝。雖然系統核心的發展人員認為 2.4 系列已經十分穩定了，但 &debian; 的發行團隊仍然認為它還沒有成熟到可以做為這次發行的預設系統核心的地步。</p>

]]>
        
        <sect id="newinst"><heading>安裝系統中有什麼新增加的功能？</heading>

          <p>新的 <package>debootstrap</package> 工具負責在基本系統安裝的過程中對 &debian; 套件進行下載、解壓縮、以及安裝的工作。這和以前把整個基本系統包在一個 .tar 檔的安裝方式比較起來是一大進步。在這樣的架構之下，我們可以對所要安裝的基本系統做更多動態的更新動作。</p>

          <p>我們也重新翻修了任務配置 (task) 系統。在先前的發行中，任務配置是由虛擬套件（本身只是其他套件集合的套件）所組成的。新的架構依靠在現存的套件管理系統中加入新的特殊標頭來表示每一個套件分別是屬於哪些任務配置之中。</p>

<!-- this isn't true, is it? We don't have any way for people to pick
part of a task except to pick some packages, right? -->

          <p>這使我們能夠建立更多不同任務配置的選擇，而您也可以更輕易地選擇只安裝某個任務配置中部分的套件，而不必受全有或全無的限制。</p>
         
          
<!-- TODO: 
- Ask on debian-boot how many translated boot-floppies are
available.  
- get the number of packages with po files translated
(international/l10n only has the number of po files).  
- get the number of packages with debconf files translated (idem) -->

          <p>幾乎所有套件在安裝時的設定工作以及後來的重新設定都是透過 Debconf 來完成的，其中並且有多種不同的設定介面可供選擇，包括非互動性的設定，（文字模式的）對話框，以及一個新的 GNOME 前端介面。我們也對 Debconf 的內部引擎進行了大規模的翻修和改進，使得它比以前的任何版本都要來得更具有彈性。簡而言之，Debconf 是使得世界特續運轉的一大動力 :)</p>
        
          <p>使用者應該參考附在第一片光碟以及在 <url id="&url-install-manual;"> 的 Debian 安裝手冊，以瞭解更多關於 Debian 安裝系統的細節。</p>

<![ %i386 [ 

          <p>我們提供了各種不同類別的系統核心映像檔，其中每一種都支援了一組不同的硬體設備。&debian; &release; 在 &arch-title; 提供的核心類別包括：</p>

          <p>
            <taglist>
              <tag>`vanilla'</tag>
              <item><p>這是 Debian 中的標準系統核心套件，其中以模組的形式提供了對幾乎所有 Linux 有支援的硬體的驅動程式：網路設備、SCSI 設備、音效卡、Video4Linux 設備等等。`vanilla' 類別包含一張救援磁片，一張根 (root) 磁片，以及四張驅動程式磁片。</p></item>

              <tag>`ide'</tag> 
              <item><p>它和 `vanilla' 類別十分相似，但它還額外包含了 Andre Hedrick 所撰寫，用來支援 UDMA66 設備的 IDE 驅動程式。</p></item>

              <tag>`compact'</tag>
              <item><p>它和 `vanilla' 類別十分相似，但許多很少被用到的驅動程式（音效支援和 Video4Linux 等等）都被移除了。另一方面，它增加了對包括 NE2000，3COM 3c905，Tulip，Via-Rhine，以及英特爾的 EtherExpress Pro100 等數種常見的 PCI 乙太網路卡的內建支援。這些內建的驅動程式使您能夠完全發揮 Debian 安裝程式的網路安裝能力，來透過網路安裝驅動程式和（或）基本系統，所以您只需要製作根 (root) 磁片和救援磁片即可開始進行安裝。最後，`compact' 也支援了包含 DAC960 以及康柏的 SMART2 等數種常見的磁碟陣列 (RAID) 控制器。`compact' 類別包含了一張救援磁片，一張根 (root) 磁片，以及兩張驅動程式磁片。</p></item>

              <tag>`idepci'</tag> 
              <item><p>`idepci' 系統核心只支援 IDE 和 PCI 裝置（以及非常少數的 ISA 裝置）。如果其他類別系統核心中的 SCSI 驅動程式使得您的系統在啟動時發生當機（可能是由於資源衝突或發生錯誤的驅動程式或附加卡）的話，您就應該試用這個類別的系統核心。在 `idepci' 中的核心也內建了 ide-floppy 驅動程式，因此您就可以透過 LS120 或 ZIP 設備進行安裝。</p></item>

              <tag>`bf2.4`</tag> 
              <item><p>這是一種使用特殊 kernel-image-2.4 套件的類別。它包含了對其他（比較穩定的）類別所不支援的新硬體的驅動程式。它支援更多種類的 USB 硬體，新型的 IDE 控制器，新型的網路卡，以及 Ext3 和 Reiser 檔案系統。和我們主要的 kernel-image-2.4.x-yz 套件中的驅動程式集相比，我們移除了一些非必要的驅動程式，以儘量減少所需的磁片數量。</p></item>

            </taglist>
          </p>

          <p>您可以在各類別的目錄中找到一個名為 'kernel-config' 的檔案，其中所包含的就是系統核心的設定資訊。</p>

]]></sect>

        <sect id="newdistro"><heading>在這次發行中有什麼新功能？</heading>

<![ %default-kernel-2.2 %not-i386 [

           <p>系統在安裝時所採用的核心版本是 &kernelversion;，但發行中也包含了最新的 2.4 穩定系列的系統核心，讓有需要的使用者可以採用。</p>

]]>

           <p>在這次發行中的 Debian 套件管理工具 apt 和 dpkg 都有了顯著的進步。新的 apt 增加了“釘鎖 (pinning)”的功能，讓使用者可以選擇從不同的發行（例如 testing 或 unstable）中下載部分的套件，但仍然把大部分的套件維持在 stable 發佈的版本。APT 會按照相依性會自動從更新的發行中下載並安裝所需的套件。您可以進一步參考 <url id="&url-apt-pin-howto;" name='APT "pinning" howto'> 中的內容。</p>
           
           <p>套件中也加入了製作相依性的資訊，以簡化從原始碼套件的編譯過程。您可以使用 apt-get 的 "build-dep" 方法來在進行編譯前取得需要用到的所有套件。</p>
           
           <p>在 woody 的發行準備過程中，我們的開發人員發展出了許多 apt 的前端介面，以取代已經有相當歷史，也常常遭到批評，但仍然廣為使用的 <package>dselect</package>。對這方面有興趣的使用者應該研究 <package>aptitude</package> 這個套件。</p>
       
           <p>這次的 &debian; 發行包含了歷經重大改良的 XFree86 4.1。它不但提供了更廣泛的硬體支援，有更好的自動偵測功能，而且也對像是 Xinerama 和 3D 加速等先進技術有著更好的支援。我們也提供了 XFree86 3.3.6 供您選擇，以配合 XFree86 4.1 尚未支援的老舊硬體使用。</p>
          
           <p>Debian 3.0 比先前的各種發佈都要來得更為安全。基本系統中所提供可能會成為攻擊目標的服務比以前減少了。Debian 3.0 包含了許多像防火牆管理、系統防護增強、以及入侵偵測等和系統安全相關的應用程式。套件管理系統也經過了改良，可以被設定來自動檢查套件中的數位簽章。如果您有啟動相關的設定選項的話，它會拒絕安裝無法通過數位簽章驗證的 Debian 套件。這個功能降低了意外安裝後門程式的可能性，也使得系統自動從網際網路上進行升級的動作變得更為安全。最後，Debian 現在對注意安全問題的系統管理者提供了大量的說明文件，其中也包含了來自 Debian 文件計畫的 <url id="&url-securing-debian;" name="'Debian 安全管理手冊'">（您也可從 <package/harden-doc/ 套件中取得這份文件）。
</p>

           <p>由於自由軟體翻譯團隊的不斷努力，Debian 3.0 <url id="&url-debian-i18n;" name="國際化">的程度也比以前的發行要來得確實。Debian 提供了比先前的發行還多的語言預設設定，而也有更多的程式作好的國際化的準備。這包含了已經被翻譯為數種語言的 boot-floppies 安裝程式。系統中對法文、德文、意大利文、日文、葡萄牙文、西班牙文、加泰隆尼亞文、以及丹麥文都有廣泛的支援，而現在則有超過十五個團隊正在積極進行翻譯的工作。</p>
          
           <p>&debian; 也是第一次透過 Mozilla、Galeon、和Konqueror 提供了可自由散佈的全功能圖形化網路瀏覽器。隨著 KDE 2.2 第一次被加入系統之中，以及 GNOME 1.4 版的發行，Debian 的桌面環境也有了極大的改善。</p>

           <p>&debian; 的官方光碟發佈包含了六張程式光碟以及一些原始碼套件光碟，除此之外 DVD 版本的發行也已經推出。</p></sect>

      </chapt>

      <chapt id="installing"><heading>新系統的安裝</heading>

        <p>如果您要安裝一個新的 Debian 系統，您就應該要閱讀安裝手冊的內容。您可以在官方光碟上的：

        <example>        
          /dists/&releasename;/main/disks-&architecture;/current/doc/install.txt
          (或 .html)
        
        </example></p>

        <p>或者是在網際網路找到這份文件： <url id="&url-install-manual;"></p>

        <p>雖然支援除了磁片之外許多的安裝媒介，但仍被稱為 <package/boot-floppies/ 的 Debian 安裝系統的作業方式也已經經過改良和一貫化，讓使用者能夠覺得更為方便。</p>
      
      </chapt>


<![ %not-mips [
<![ %not-mipsel [
<![ %not-ia64 [
<![ %not-hppa [
<![ %not-s390 [

      <chapt id="upgrading"><heading>從先前的發行升級系統</heading>

<!-- For doc-writers' convenience:
Debian Supported
release: architectures:

1.3.1 or less i386
2.0           i386,m68k
2.1	      i386,m68k,alpha,sparc
2.2	      i386,m68k,alpha,sparc,powerpc,arm
3.0	        + hppa s390 mips mipsel ia64
-->

        <sect id="information"><heading>系統改變的細節</heading>
        
          <p>******************</p>
          <p>我們需要這項資訊，以及其他任何和各平台移植相關的細節。</p>
          <p>******************</p>

        <sect1 id="renames"><heading>名稱改變的套件</heading>

          <p>以下套件的名稱已經如所示的改變了。在大部分（即使不是全部）的情況下，開發人員都已經提供了適當的 Conflicts:、Replaces:、和 Provides: 欄位，使得新的套件能夠自動地被安裝好，並且（或）安全地取代並移除舊的套件。這也包含了被合併到其他套件中的套件，因為最後的結果和重新名命是相同的。
          <example>

          gimp -&gt gimp1.2 (只限於 GIMP1.2 版)
          dict-web1913 -&gt dictgcide
          amcl -&gt gnome-mud
          rstart -&gt xutils
          rstartd -&gt xutils
          xbookss -&gt xspecs
          xfonts-cjk -&gt xfonts-base
          xcontrib -&gt xbase-clients
          xlib6g-static -&gt xlibs-dev
          listar -&gt ecartis
          cln -&gt libcln2
          cln-dev -&gt libcln-dev
          pgp-i, pgp-us -&gt pgp
          cvs-doc -&gt cvs
          acm -&gt acm4
          user-ja -&gt language-env
          expect5.31, expect5.24 -&gt expect
          sgml-tools -&gt linuxdoc-tools
          sgmltools-2 -&gt sgmltools-lite
          bonnie -&gt bonnie++
          c2ps -&gt a2ps
          camlp4 -&gt ocaml
          corel-util -&gt nwutil
          crossfire-sounds -&gt crossfire-client-sounds
          cslatex, csplain, cstexfonts -&gt tetex
          cspsfonts -&gt tetex-extra
          custom-mule -&gt mule2-support
          docbook2x, cygnus-stylesheets -&gt docbook-utils
          db -&gt db2
          dgs -&gt xfree86
          docbook-stylesheets -&gt docbook-dsssl
          genius, drgeo -&gt drgenius
          egcs1.0 -&gt egcs1.1
          emacs19 -&gt emacs20
          f77reorder -&gt g77
          flim1.13 -&gt flim
          gdict -&gt gnome-utils
          libgmp2, gmp, gmp1 -&gt libgmp3
          gnome-users-guide-en -&gt gnome-user-docs
          gnomehack -&gt nethack
          gpasm -&gt gputils
          gsl-ref-pdf -&gt gsl-ref-ps
          gstep-core -&gt gnustep-core
          gstep-extensions -&gt gnustep-extensions
          gstep-guile -&gt gnustep-guile
          gzilla -&gt dillo
          hanterm -&gt hanterm-xf
          imap -&gt uw-imap
          iplogger -&gt ippl
          jgroff -&gt groff
          lib-sax-java, lib-xp-java, lib-xt-java -&gt xalan2, libxt-java
          libansicolor-perl -&gt perl
          libape -&gt libcommonc++
          libgc4 -&gt libgc6
          libgcj -&gt libgcj2
          libid3 -&gt id3lib
          libmalaga1 -&gt malaga
          libmpeg-mp3info-perl -&gt libmp3-info-perl
          libpth -&gt pth
          libv1.22 -&gt libv1.25
          listar -&gt ecartis
          lvm -&gt lvm10
          mdutils -&gt raidtools2
          mutt-ja -&gt mutt
          myodbc2.50.26 -&gt libmyodbc
          oldncurses, ncurses3.4, ncurses4.2 -&gt ncurses (5.2)
          nfs-server -&gt nfs-user-server
          palm-doctoolkit -&gt pyrite-publisher
          pbm2ppa -&gt pnm2ppa
          pcre, pcre2 -&gt pcre3
          puzzle -&gt tree-puzzle
          rt -&gt root-tail
          selfhtml -&gt chaos, t-gnus
          sgmlspm -&gt libsgmls-perl
          synaptics -&gt tpconfig
          tknamazu -&gt namazu2
          typist -&gt gtypist
          umich-ldap -&gt openldap
          wanderlust2 -&gt wl-beta
          wdsetup -&gt nictools-nopci
          wnn6-dev -&gt wnn6-sdk
          wxftp -&gt axyftp
          xacc -&gt gnucash
          xjscal -&gt libjsw
          zope-siteaccess -&gt zope

          </example></p>

          <p>雖然我們盡全力加入所有相關的資訊，但還是有被更名或合併的套件沒有被包含在這份列表之中。</p></sect1>

        <sect1 id="splits"><heading>被分割的套件</heading>
          
          <p>在 2.2 (`potato') 和 3.0 (`woody') 版的發行之間，有些套件已經被分割成兩個以上的套件了。一般而言，套件會被分割的原因是它提供了許多不同的功能，而只有極少數的使用者會用到所有的功能。有些套件會在安裝時顯示關於套件分割的警告訊息，有些會在套件的說明文件中加入相關的訊息，而有些則沒有提供任何說明。</p>

          <p>如果您發現一個您熟悉的套件缺少了它部分或全部的功能，請檢查以下的列表，以決定您是否需要安裝額外的套件來取得原先所有的功能。如果還是找不到相關資訊的話，請檢視在 <file>/usr/share/doc/<var>package</var>/changelog.Debian.gz</file> 中的套件改版記錄。</p>

          <p>以下是已經被分割的套件列表（這份列表可能並不完全）：

          <example>
         
            isdnutils -&gt ipppd, isdnlog, isdnutils-doc, isdnutils-xtools,
            isdnvboxserver, isdnvboxclient
         
            xpdf -&gt xpdf-reader, xpdf-utils, xpdf-chinese-simplified,
            xpdf-chinese-traditional, xpdf-cyrillic, xpdf-japanese,
            xpdf-korean,xpdf-thai
            
            cupsys -&gt cupsys (CUPS daemon), cupsys-client (CUPS client),
            cupsys-pstoraster (postscript rasterizer)
            
            groff -&gt groff-base, groff, groff-x11
            
            xspectemu -&gt spectemu-common, spectemu-svga, spectemu-x11
            
            ecpg -&gt  libecpg3 (library), postgresql-dev (development
            files)
            
            postgresql-pl -&gt libpgperl, libpgtcl
            
            netbase -&gt netbase, portmap, ifupdown, ipautofw, ipchains,
            ipfwadm, ipmasqadm, iputils, net-tools, netkit-base
            
            uqwk -&gt uqwk, uqwk-spool
            
            tetex-bin -&gt tetex-bin, texi2html
            
            xproxy -&gt lbxproxy, proxymngr, xfwp
            
            xlib6g -&gt xlibs, libxaw6
            
            xlib6g-dev -&gt libxaw6-dev, xlibs-dev  
            
            xbase-clients, xlib6g-dev, xcontrib -&gt xutils

            xconq -&gt xconq, xconq-common
            
            python-imaging-doc -&gt; python-imaging-doc,
            python-imaging-doc-html, python-imaging-doc-pdf
            
            gnumeric -&gt gnumeric, gnumeric-doc, gnumeric-python
            
            latex2rtf -&gt latex2rtf, latex2rtf-doc
            
            glade -&gt glade, glade-gnome, glade-gnome-db, glade-common,
            glade-doc
            
            apmd -&gt apmd, xapm, libapm1, libapm-dev, powermgmt-base

            uudeview -&gt uudeview, xdeview, libuu-dev
            
            sysklogd -&gt sysklogd, klogd 
            
            xtide -&gt xtide, xtide-data
            
            snack -&gt libsnack2, libsnack2-dev, libsnack2-doc
            
            gnapster -&gt gnapster, gnapster-gtk
            
            proftpd -&gt proftpd, proftpd-common, proftpd-doc, proftpd-ldap,
            proftpd-mysql, proftpd-pgsql
            
            alsaplayer -&gt alsaplayer-common, alsaplayer-gtk,
            alsaplayer-nas, alsaplayer-text, libalsaplayer-dev,
            libalsaplayer0
          </example>
          </p>
        </sect1>
        
       	<sect1 id="syntax"><heading>程式語法的重大改變</heading>
       	  <p>Debian 的原則是儘量避免修改原作者發行的套件，因此在原作者發行套件中的改變也會反應在 &debian; 之中。</p>
          
          <p>在 &debian; 2.2 'Potato' 發行中 <prgn>tar</prgn> 是使用 <example>-I</example> 參數來代表 <prgn>bzip</prgn> 壓縮，而現在您則必需改用 <example>-j</example> 參數。您可能也需要依同樣的方法改變腳本程式的內容。</p>
       	</sect1>
        </sect>

        <sect id="backup"><heading>準備系統升級</heading>

          <p>在對您的系統進行升級之前，我們強烈建議您做一次完整的備份，至少您也應該把不可或缺的資料和設定資訊給備份起來。升級所用的工具和過程都是十分可靠的，但在升級過程中發生的硬體錯誤會使得您的系統停留在嚴重受損的狀態之中。</p>

          <p>您會想要備份的內容包括 <file>/etc</file> 目錄和 <file>/var/lib/dpkg</file> 目錄中的內容，以及 <tt>dpkg --get-selections \*</tt> 所輸出的資訊。</p>

          <p>您應該在進行任何升級之前先把您的計畫告知使用者，不過至少利用 ssh 從遠端存取系統的使用者在升級過程中可能不會發現任何異狀，而會希望持續進行他們的工作。如果您要採取額外的預防措施的話，請在升級前備份或卸載使用者的分割區 (<file>/home</file>)。您在升級前後通常並不需要重新開機。</p>

          <p>您應該在本地端透過文字模式的虛擬終端機（或直接連線的序列終端機）或從遠端透過 <prgn/ssh/ 連線進行發行升級的動作。</p>

          <p><em/重要/：您<em/不/應該透過 <prgn/telnet/、<prgn/rlogin/、<prgn/rsh/、或是由您所要升級的系統上的 <prgn/xdm/ 管理的 X 行程進行升級。這是因為這些服務在升級的過程中都可能會中斷，而留下一個只完成了部分升級而<em/無法存取/的系統。</p>


        <sect1><heading>檢查套件的狀態</heading>

          <p>不論您是用什麼方式進行系統的更新，我們都建議您先檢查所有套件的狀態，並確認所有的套件都能夠被順利更新。以下的指示會顯示所有狀態是半安裝 (Half-Installed) 或設定失敗 (Failed-Config) 或有其他任何錯誤的套件。

          <example>
        
            # dpkg --audit
          
          </example></p>
 
          <p>除此之外，檢查系統中所有套件的方法還包括使用 <prgn/dselect/ 或利用以下的指令：

          <example>
         
            # dpkg -l | pager 

          </example></p>

          <p>或是

          <example>
         
            # dpkg --get-selections &gt; ~/curr-pkgs.txt

          </example></p>

          <p>在理想的狀況中，您應該在進行系統升級前移除所有的保留 (hold) 旗標。如果有任何應該升級的關鍵套件被設定為保留狀態，升級的動作就會失敗。您可以用以下的指令找出被設定為保留狀態的套件：
 
          <example>
         
            # dpkg --audit
       
          </example></p>

          <p>如果您自行在系統中編譯了改變過的套件，而沒有把它更名或在版本號碼中使用 epoch，那您就必須把它設定為保留狀態，以防止它被升級到新的版本。您可以用 <prgn/dselect/ 來改變套件的保留狀態（在套件選單中使用 `H' 和 `G' 分別設定和解除套件的保留狀態），或是在

          <example>
        
            dpkg --get-selections &gt; ~/curr-sels.txt
       
          </example></p>

          <p>指令產生的檔案之中把 "hold" 改成 "install"（反之亦然），然後以 root 的權限執行

          <example>
         
           dpkg --set-selections &lt; ~/curr-sels.txt
       
          </example></p></sect1>

        <sect1><heading>SSH 使用者的特別注意事項</heading>

          <p>2.2 版以前的發行在 <package/ssh/ 套件中，或 2.2 版發行在 <package/ssh-nonfree/ 套件中的商用版 SSH 在這次的發行中已經被符合 DFSG 自由定義的 <package/ssh/ 套件 (OpenSSH) 所取代了。我們已經不提供商用的 SSH 實作了，而現在 <package/ssh-nonfree/ 只是一個會安裝 OpenSSH <package/ssh/ 套件的假套件。<package/ssh/ 套件中會透過 Debconf 詢問您是否要重新產生和 OpenSSH 相容的設定檔。</p>
          
          <p>請注意這一次發行中的 <package/ssh/ 套件預設是允許 root 登入的（在 2.2 中預設是關閉這項功能）。如果您不需要這項從遠端存取您的系統的功能，為了安全上的理由，您應該在升級後確認在 <file>/etc/ssh/sshd_config</file> 中的 <tt/PermitRootLogin/ 選項是設成 <tt/no/。您只要自行修改這個檔案的內容，就可以防止 dpkg 自動依照新的預設值來修該它的內容。通常您只需要加上一個空白行就足以達成這個目的了。</p></sect1>

        <sect1><heading>可能需要特別注意的目錄</heading>

          <p>您應該確定 <file>/etc/rcS.d</file> 目錄在升級前就已經存在；不然在安裝 <package/libc6/ 套件時會發生錯誤。</p>

          <p>如果  <file>/usr/share/doc</file> 目錄已經存在的話，它一定不能是個（指向 <file>/usr/doc</file> 的）符號連結，不然會使某些套件發生問題。然而，系統允許您把 <file>/usr/doc</file> 連結到 <file>/usr/share/doc</file> 目錄去。如果您使用了這樣的符號連結，您就會看到許多關於無法移除<file>/usr/doc</file> 目錄的訊息。這是完全正常的，所以您可以直接忽略這些訊息。</p></sect1></sect>


        <sect id="upgrade-process"><heading>準備 APT 的來源設定</heading>

          <p>我們建議的升級方式是直接依以下的指示使用  <prgn/apt-get/。APT 的內建相依性分析能力使得升級安裝的動作變得平順而簡單。</p>

          <p>您<em/不/應該在 <prgn/dselect/ 中使用除了 <prgn/apt/ 之外的任何方法來進行主要的套件升級，因為其他的方法不像 <prgn/apt/ 一樣能在安裝時自動計算套件在邏輯上的先後順序，因此會比較不那麼可靠。除此之外，這些方法並沒有經過詳細的測試，而也不被 Debian 所支援。</p>

          <p>任何套件安裝的動作都需要有系統管理者的權限才能進行，所以您必須以 root 登入，或使用 <prgn/su/ 或 <prgn/sudo/ 來取得所需的權限。</p>

          <p>在開始進行升級前，您必須先設定 <package/apt/ 的套件列表設定檔 <file>/etc/apt/sources.list</file>。</p>
          
          <p><package/apt/ 會把所有可以在 "<tt>deb</tt>" 行中能找到的套件列入考慮，並安裝其中版本號碼最高的套件，並優先從前面列出的來源取得套件（因此當您在許多不同位置都有套件可供使用時，您可以讓系統依本地端硬碟、光碟片、遠端 HTTP/FTP 的順序取得套件）。</p>

<![ %i386 %m68k %sparc %alpha [
        <sect1><heading>更新 Slink 之前的發行版本</heading> 
       
           <p>如果您要更新 &debian; 2.0 版或更早以前的系統，您就會需要在 Debian 映射網站 <url id="http://http.us.debian.org/debian/dists/potato/main/upgrade-&architecture;/"> 目錄或第一片 Debian &release; 光碟 <file>upgrade/</file> 中的 <package/apt/ 和 <package/dpkg/ 套件。</p>

<!-- alternatively they're at:
<url id="http://panic.et.tudelft.nl/~costar/potato/">)
-->

           <p>請下載這兩個套件，並依以下的順序安裝：
  
           <example>
           
             dpkg -i dpkg_version_&architecture;.deb
             dpkg -i apt_version_&architecture;.deb
         
           </example></p>

           <p>這些都是靜態編譯的特別版本，因此可以在任何的 Debian 系統上安裝及執行。</p>


<![ %sparc [
<!-- Is this information still applicable for upgrading to woody??? -->

           <p>在升級 &arch-title; 架構的系統之前，您需要依 <ref id="information"> 中的說明先升級到 2.2.x 系列的 Linux 系統核心。</p>
]]>

        <sect1><heading>透過光碟更新 Slink 發行版本</heading>

           <p>如果您要透過光碟進行升級 &debian; 2.1 ('slink') 版的系統，您就需要安裝靜態編譯的  <package>apt</package> 和 <package>dpkg</package> 套件。您可以在 Debian 映射網站的 <url id="http://http.us.debian.org/debian/dists/potato/main/upgrade-&architecture;/"> 目錄，或第一片 Debian &release; 光碟中的 <file>upgrade/</file> 目錄找到這些套件。</p>
 
           <p>請下載這兩個套件，並依以下的順序安裝：

           <example>
             
             dpkg -i dpkg_version_&architecture;.deb
             dpkg -i apt_version_&architecture;.deb
             
           </example>
           </p>

           <p>如果您是要升級 &debian; 2.1 或以後的系統，而您希望透過網路 (FTP, HTTP) 或本地端的套件映射區（可能是在某個磁碟分割區或是透過 NFS 掛載的檔案系統中）進行升級，則您可以直接使用現有的 <package/apt/ 及 <package/dpkg/ 套件。當然，如果您還沒有安裝 <package/apt/ 的話，請立即把它給裝起來。</p>

           <p>我們建議您現在去閱讀 <manref name="apt-get" section="8"> 和 <manref name="sources.list" section="5"> 的手冊文件。</p>
           
           <p>如果您安裝了靜態連結的 <package/apt/ 和 <package/dpkg/ 套件，那麼在 <package/man-db/ 完成升級之前您只能透過類似像 <tt>man -l /usr/share/man/man8/apt-get.8.gz</tt> 的指令閱覽手冊文件的內容。</p>

</sect1>
]]>

         <sect1 id="network"><heading>加入網際網路上的 APT 套件來源</heading>

           <p>雖然系統的預設設定是由 Debian 在網際網路上的主要伺服器進行安裝，您還是可能會希望修改 <file>/etc/apt/sources.list</file> 以改用網路距離離您最近的映射網站。</p>

           <p>您也可以在 <url id="&url-debian-mirrors;"> 找到 Debian 的 HTTP 或 FTP 映射網站的位址（請參考 "Full list of mirrors" 小節）。HTTP 映射網站的傳輸速度通常會比 FTP 映網站快。</p>

           <p>舉例來說，假設離您最近的 Debian 映射網站是 <tt>&url-debian-mirror-eg;/</tt>。當您透過網路瀏覽器或 FTP 程式來檢視這個網站時，您會發現其中的主要目錄大致上是安排成這個樣子的：

           <example>
           
             &url-debian-mirror-eg;/dists/&releasename;/main/binary-&architecture;/...
             &url-debian-mirror-eg;/dists/&releasename;/contrib/binary-&architecture;/...
       
           </example></p>

           <p>要讓 <prgn/apt/ 使用這個映射網站，請把以下的這一行加入您的 <file/sources.list/ 檔案之中：

           <example>
           
             deb &url-debian-mirror-eg; &releasename; main contrib
 
           </example></p>

           <p>請注意 `<tt>dists</tt>' 是會被自動加到路徑中的，而在發佈名稱後的參數則會被用來展開成多個不同目錄的路徑。</p>

           <p>在您加入了新的 APT 來源之後，請在 <file/sources.list/ 中原有的 "<tt/deb/" 設定行前加入井字符號 (<tt/#/) 以關閉這些套件來源。</p>

           <p>所有從網路上下載安裝的套件都會被存放在 <file>/var/cache/apt/archives</file> 目錄中（而下載中的檔案則會被存在 <file>partial/</file> 子目錄中），所以在嘗試開始安裝前請確保您有足夠的磁碟空間。對一個裝有相當套件的 Debian 系統來說，下載的資料量應該會超過 300 MB。</p>

<!-- At least, that's what one report said - JAB -->

<![ %not-sparc [ 

           <p>注意：如果您使用的是靜態連結的 <package/apt/ 和 <package/dpkg/ 套件，您將無法使用主機和網域名稱查詢的功能（這也就是為什麼透過網路升級時應該要使用一般的 <package/apt/ 的原因）。這個問題的解決方法是直接在 "<tt>deb</tt>" 行中填入映射網站的 IP 位址。（提示：您可以使用 <tt>nslookup some-server</tt>）</p>
           
]]></sect1>

         <sect1 id="localmirror"><heading>增加本地端映射的 APT 套件來源</heading>

           <p>您可能也會想修改 <file>/etc/apt/sources.list</file> 中的設定，以使用本地端（包括透過 NFS 掛載的）磁碟上的映射資料來取代透過 HTTP 或 FTP 存取遠端的套件映射網站。</p>

           <p>舉例來說，如果您的套件映射是放在 <file>/var/ftp/debian/</file> 之下，而主要的目錄看起來是像這樣的話：

           <example>
           
             /var/ftp/debian/dists/&releasename;/main/binary-&architecture;/...
             /var/ftp/debian/dists/&releasename;/contrib/binary-&architecture;/...
           
           </example></p>

           <p>您如果要讓 <prgn/apt/ 使用這個本機上的映射，請把以下的設定行加入 <file/sources.list/ 檔案之中：

           <example>
             deb file:/var/ftp/debian &releasename; main contrib
           </example></p>

           <p>請注意 `<tt>dists</tt>' 是會被自動加到路徑中的，而在發佈名稱後的參數則會被用來展開成多個不同目錄的路徑。</p>

           <p>在您加入了新的 APT 來源之後，請在 <file/sources.list/ 中原有的 "<tt/deb/" 設定行前加入井字符號 (<tt/#/) 以關閉這些套件來源。</p></sect1>

        <sect1 id="cdroms"><heading>增加 CD-ROM 光碟的 APT 套件來源</heading>

          <p>請參考以上的說明，以決定您是否需要依以上的步驟安裝新版本的 <package/apt/ 和 <package/dpkg/ 套件。</p>

          <p>如果您<em/只要/使用光碟，請在 <file/sources.list/ 中原有的 "<tt/deb/" 設定行前加入井字符號 (<tt/#/) 以關閉這些套件來源。</p>

          <p>請確定在 <file>/etc/fstab</file> 中有一行能讓您的光碟機掛載在 <file>/cdrom</file> 下的設定（<prgn/apt-cdrom/ 要求掛載點一定要是 <file>/cdrom</file>）。舉例來說，如果您的光碟機是 <file>/dev/hdc</file>，那麼 <file>/etc/fstab</file> 中就應該要有像這樣的一行設定：

          <example>

             /dev/hdc /cdrom auto defaults,noauto,ro 0 0

          </example></p>

          <p>請注意在第四欄的 <tt>defaults,noauto,ro</tt> 的字中間一定<em/不能有空白字元/。</p>

          <p>要確認您的設定是否正確，請把光碟片插入光碟機中，並試著執行

          <example>
 
            mount /cdrom （這會把光碟掛在掛載點下）
            ls -alF /cdrom （這會顯示光碟的根目錄的內容）
            umount /cdrom （這會卸載光碟）
     
          </example></p>

          <p>接下來對每一張 Debian 的程式光碟執行

          <example>
            apt-cdrom add
          </example></p>

          <p>以把每一張光碟的資料加到 APT 的資料庫中。</p></sect1></sect>

        <sect id="actualupgrade"><heading>進行升級</heading>

          <p>不要忘了用類似以下的指令把所有的分割區（特別是 <file>/usr</file> 和根分割區）重新以可讀寫的模式掛載：

          <example>
            mount -o remount,rw /<var>mountpoint</var>
          </example></p>

          <p>假設您已經依以上的說明把 <package/apt/ 的 <file/sources.list/ 給設定好了，接下來請以 root 的權限執行：

          <example>
            apt-get update
          </example></p>

          <p>這會把套件綜觀檔案和它的來源進行同步化的動作，同時更新系統中關於新增和新版套件的資訊。</p>

          <p>我們強烈建議您使用 <prgn>/usr/bin/script</prgn> 程式來記錄升級的完整過程。如果發生了任何問題，您就有了所發生問題的確實記錄，如果有必要的話，也能在錯誤報告中提供確實的資訊。要開始記錄的工作，請使用

          <example>
            script -a ~/upgrade-to-woody.typescript
          </example></p>

          <p>或類似的指令。請不要把記錄檔放在像是 <file>/tmp</file> 或 <file>/var/tmp</file> 之類的暫存目錄下（這些目錄中的檔案可能會在升級途中或重新開機時遭到清除）。</p>
          
          <p>在您開始進行主要的升級之前，您應該先升級 apt、dpkg、和 debconf 這三個套件。APT 從上一次發行到現在已經有了許多的改進。Debconf 則是一個被新近的套件廣泛使用的重要工具。

          <example>
            apt-get install dpkg apt debconf
          </example></p>

          <p>這會把其餘的安裝步驟所需的最新版 <package/dpkg/、<package/apt/、和 <package/debconf/ 安裝到系統之中。它同時也會把一些必須的系統函式庫升級到最新的版本。</p>

          <p>當 debconf 詢問它所要詢問的問題種類時，請不要選擇 'critical' 選項，因為那會使您錯失許多重要的問題。</p>

<!-- i.e. libc6 and libstdc++ that dpkg and apt depend on - JAB -->


          <p>有些人會喜歡用以下的指令先排練升級的過程

          <example>
            apt-get --fix-broken --show-upgraded --simulate dist-upgrade | pager
          </example></p>

          <p>雖然這會花上不少的時間，但它可以避免在真正的升級過程中遭遇不在預期中的問題。它會告訴您系統出了什麼問題（以及解決的方式），或者是，在大多數的情況下，告訴您在升級過程中所會完成的工作。請注意所有會被“移除 (REMOVED)”的套件，其中不應該包含任何重要的套件。</p>

          <p>在您確定了 <prgn/apt-get/ 應該沒有問題後，執行女7

          <example>
            apt-get --fix-broken --show-upgraded dist-upgrade
          </example></p>

          <p>這會對您的系統進行完整的更新，也就是安裝所有套件所提供最新版本，並解決在不同發行版本之間的套件可能會有的相依性問題。如果有需要的話，它也會安裝一些新的套件（通常是新版的函式庫或是被更名的套件），並移除任何和新版套件發生衝突的過時套件。</p>

          <p>如果您是從光碟集進行升級的話，系統將會在升級進行時要求您更換某張特定的光碟片。您可能會需要反覆插入同一張光碟數次；這個由於相關的套件被分散在多張光碟之中所造成的。</p>
   
          <p>如果更新某些已安裝的套件會改變其他套件的安裝狀態的話，這些套件就會被保留在原來的狀態（並顯示為 "held back"）。因此，您可能需要使用 <prgn/dpkg/ 或 <prgn/dselect/ 來移除或重新安裝一些損壞的套件或相依關係。除此之外，您也可以在 <tt>apt-get -f dist-upgrade</tt> 後輸入 <tt>apt-get dselect-upgrade</tt> 指令（請參考 <manref name="apt-get" section="8"> 的手冊文件）。</p>
  
          <p><tt/--fix-broken/（或只是 <tt/-f/）選項會使得 <package/apt/ 嘗試就地修正系統中錯誤的相依關係。<package/apt/ 不允許系統中有任何相依關係的錯誤。</p>
 
        <sect1 id="trouble"><heading>在升級中或升級後可能發生的問題</heading>

          <p>有時候您會需要開啟 APT::Force-LoopBreak 選項讓 APT 暫時移除一個重要的套件，以解決循環的 Conflicts/Pre-Depends 關係。<prgn/apt-get/ 會對此提出警告，並終止升級的過程。您可以靠著在 <prgn/apt-get/ 的指令行加入 <tt>-o APT::Force-LoopBreak=1</tt> 來解除這個問題。</p>

          <p>系統中的相依關係也可能混亂到需要人工介入才得以解決。通常這代表您需要使用 <prgn/dselect/ 或

          <example>
          
            dpkg --remove <var>packagename</var>
          
          </example></p>

          <p>來清除一些會造成問題的套件，或
 
          <example>

            apt-get --fix-broken --show-upgraded install
            dpkg --configure --pending

          </example></p>

          <p>在極端的情況下，您可能需要利用以下的指令來進行強制重新安裝的動作

          <example>

            dpkg --install /path/to/packagename.deb

          </example></p>

          <p>在問題都修正了之後，您就應該可以重新輸入先前所描述的 <tt/dist-upgrade/ 指令以繼續升級的工作。</p>

          <p>在升級的過程中，系統可能會詢問您一些問題，以對套件做設定或重新設定的工作。當您被問到是否要把在 <file>/etc/init.d</file> 或 <file>/etc/terminfo</file> 目錄中的檔案或 <file>/etc/manpath.config</file> 置換成套件維護者所提供的版本時，您通常必須回答 `yes' 以維護系統的一致性。您可以稍後再選擇復原舊的設定檔，因為它們都會以在檔名後附加 <tt/.dpkg-old/ 的方式被保存起來。</p>

          <p>如果您不太確定要怎麼做的話，把套件或檔案的名稱寫下來，等到有時間的時候再慢慢瞭解實際的狀況。您可以在記錄檔中搜尋在系統升級時出現在螢幕上的資訊。</p></sect1>

        <sect1 id="nownownow"><heading>再下一次重新開機前應該完成的工作</heading>

          <p>當 <tt>apt-get dist-upgrade</tt> 執行完畢後，“形式上的”系統升級就已經完成了，但仍然有一些工作是在您下次重新啟動系統<em/之前/應該要完成的。</p>

          <p>最重要的是，您可能需要安裝 <package/locales/ 和 <package/util-linux/ 套件。您可以靠著以下的指令完成這項工作：

          <example>
            apt-get install locales util-linux
          </example></p>

          <p>如果您是從 Debian 2.0 或更早以前的發行升級上來的，這將會移除 <package/getty/ 套件，因為 <prgn/getty/ 套件現在已經是 <package/util-linux/ 套件的一部分了。</p>

<![ %powerpc [ 

          <p>在 &arch-title; 上，升級到 woody 的過程包含了從 ADB 到 Linux 鍵碼的轉換。您一定已經在更新 <package/console-data/ 套件時注意到相關的警告訊息了。如果您仍然持續地使用 ADB 對映的系統核心，您將會需要改變您的啟動參數，使得 Linux 鍵碼能夠在重新開機後生效。請參考 <url id="&url-ports;keycodes">。</p>

]]> 

          <p>有些同樣也需要安裝的套件可能沒有被 <prgn/apt-get/ 察覺，因為 <prgn/apt-get/ 不會自動選擇不是其他套件所需要（例如被列在 Recommends: 及 Suggests: 欄位中）的套件。您可以輕易地用<prgn/dselect/ 或其他視覺化的前端介面程式來找到這些套件。在 <prgn/dselect/ 的 [A]ccess 畫面中選擇 `apt' 方法（如果您還沒有這麼做的話）並利用 [U]pdate 更新資料庫中的套件資訊。然後，在 [S]elect 畫面中，按下 `o'，`o'，`v' 和 Shift-d 然後尋找

          <example>
          
            --- Obsolete and local packages present on system ---
          
          </example></p>

<!-- Some potato examples would be better; maybe I can provide some at
a later time - JAB -->

          <p>這樣的標頭。在這一節中您就會看到所有這樣的套件。舉例來說，舊的 <package/gimp/ 套件已經被 <package/gimp1.2/ 所取代了。您可以透過 <prgn/dselect/ 安裝新的套件（這會顯示一個 ``dependency conflict resolution'' 畫面，指出您應該移除舊版的套件），或使用

          <example>
 
            apt-get install gimp1.2

          </example></p>

          <p>這會立刻移除舊版的套件（您可能需要確認這個動作）。</p>

          <p>另一個連在  <prgn/dselect/ 中都不會顯示出來的例子，是 telnet 和 talk 的伺服器和客戶端程式，以及 NFS 伺服器，因為它們都是從原本的 <package/netstd/ 套件中分割出來的。您可以用類似以下的指令安裝這些套件：

          <example>
            apt-get install telnet telnetd talk talkd nfs-server
          </example></p>

          <p>從 <package/manpages/ 中分割出來的 <package/manpages-dev/ 套件的狀況也十分相似。</p>

          <p>請參考 &debian; 前一個發行版本的發行情報以取得在那次發行中被分割的套件資訊；然後再回來閱讀 <ref id="renames"> 和 <ref id="splits"> 以瞭解有哪些套件在這一次的發行中被分割了。</p>

<![ %not-sparc [
<![ %not-alpha [

          <p>如果您是從 Debian 2.0 或更早的發行更新上來的，<em/而且/您也安裝了 X 視窗系統，請輸入以下指令：

         <example>

           apt-get remove xbase
           apt-get install xfonts-base xfonts-75dpi xfonts-100dpi xfonts-scalable

         </example>

	 如果您不希望在開機時自動執行 <prgn/xdm/（讓 X 視窗自動啟動），則執行：

         <example>
         
           apt-get remove xdm

         </example></p>

         <p>請參考 <file>/usr/share/doc/xfree86-common/README.Debian-upgrade</file> 以獲得更多關於 X 視窗系統套件升級的資訊。這份文件和所有 Debian 先前發佈的使用者都有關係。簡而言之，這是一份您必讀的文件。</p>

         <p>在 &debian; 2.0 版後系統核心模組的設定方式也有了改變。如果您是從 Debian 2.0 或更早的版本升級上來的，您就必須在下一次重新開機前完成設定的轉換。通常您只要執行 <tt>update-modules force</tt> 就可以完成這項工作；但我們仍建議您應該要閱讀 <manref name="update-modules" section="8"> 手冊文件。</p>
]]>
]]>

<![ %i386 [ 

         <p>如果您是從 &debian; 1.x 版（也就是比 2.0 舊的版本）升級上來的，舊的系統使用的是 `libc5' 函式庫，而新的系統所使用的則是 `libc6'。新的函式庫已經改變了 <file/utmp/ 和 <file/wtmp/ 檔案的格式；您可以利用 <prgn/last/ 指令來確認這一項改變。要解決這個問題，您一定得要重新開機，但在此之前您必須先用以下的指令把舊的檔案複製到其他地方法，然後再把現存的檔案清空：

         <example>
           
           cd /var/log
           mv wtmp wtmp.libc5
           touch wtmp
           cd /var/run
           cp /dev/null utmp
         
         </example></p>

         <p>然後再重新啟動系統（注意：如果您是從 Debian 2.0 或更新的版本升級上來的話，這個步驟就<em/不是/必須的！）。在重新啟動系統後，<prgn/last/ 指令就會恢復顯示正常的資料了。</p>
]]>

         <p>請注意以上的程序並<em/不會/更新您的系統核心。您可能會想自己透過安裝 <package/kernel-image-*/ 其中之一的套件，或從原始碼編譯一個新的系統核心來進行更新的動作。</p>
         
         <p>&debian; 中所附的是比較老舊的 2.2 系列穩定系統核心 &kernelversion;。您可能會因為更廣泛的系統支援或更好的執行效能而希望改用 2.4 系列的系統核心。從第三張光碟開機會自動改用 2.4 系列的核心，您也可以直接安裝已經編譯好的核心套件。

         <example>
           apt-get install kernel-image-2.4.18-{386,586tsc,686}
         </example></p>
         
         <p>對於那些比較富有冒險心的人，我們也提供了一個在 &debian; 編譯自製核心的簡易方法。請安裝 <package>kernel-package</package> 並詳細閱讀在 <file>/usr/share/doc/kernel-package</file> 中的說明文件。</p>
         
         <p>請盡情享受您新的 &debian; &release; 系統！ :-)</p></sect1></sect>
       
      </chapt>

]]>
]]>
]]>
]]>
]]>

      <chapt id="moreinfo">

        <heading>更多關於 &debian; 的資訊</heading>

        <sect id="morereading"> <heading>延伸閱讀</heading>
	<p>除了發行情報和安裝指南之外，Debian 文件計畫 (DDP) 也提供了許多更進一步的說明文件。Debian 文件計畫的目標是為 Debian 的使用者和開發者創作出高品質的文件，包括 Debian 指南、Debian 新維護者指南、以及 Debian 常見問答集，還有其他更多的文件。如果您想瞭解關於這些資源的更多訊息，請參考位在 <url id="&url-ddp;"> 的 DDP 網站。</p>
 
        <p>個別套件的說明文件則是被安裝到 <file>/usr/share/doc/<var>package</var></file> 目錄之中，其中包含了版權資訊，Debian 特有的套件細節，以及任何原作者所提供的說明文件。</p>
 
      </sect> 
      
      <sect id="gethelp"> 
        <heading>取得協助</heading> 
      
        <p>Debian 的使用者可以從許多的管道取得協助、建議、和支援，但您應該只有在查遍各種文件卻依然找不到問題的解答時才考慮尋求協助。這一節簡單的介紹 Debian 的新使用者可能特別會用到的求助管道。</p>
        
      <sect1 id="lists">
        <heading>郵件論壇</heading>
        <p>Debian 的使用者最感興趣的郵件論壇應該是 debian-user（英文）以及其他的 debian-user-<var/language/ 論壇（其他語言）了。您可以在 <url id="&url-debian-list-archives;"> 找到關於這些論壇的細節，以及訂閱的方法。請您在論壇中發言前先檢查過去的論壇文集中是否已經提供了問題的解答，並請遵守郵件論壇上的基本禮節。</p>
      </sect1>

      <sect1 id="irc">
        <heading>IRC 網路聊天室</heading> 
        
        <p>Debian 在專門提供開放原始碼軟體社群合作和交換資訊的 Open Projects IRC 網路上有一個專門為了支援和協助 Debian 使用者的 IRC 頻道。您只要把您慣用的 IRC 客戶端程式指向 &opn-irc-server; 並加入 #debian 就可以連上這個頻道。</p>
        
        <p>請遵循該頻道的規定，並尊重線上其他的使用者。您可以在 Open Projects 的<url id="&url-opn;" name="網站">上找到更多相關的資訊。</p>

      </sect1>
      </sect> 

      <sect id="bugs">
        <heading>回報錯誤</heading>
        
        <p>我們盡心盡力地讓 Debian GNU/Linux 成為一個高品質的作業系統，但這並不表示我們所提供的套件都是完全沒有問題的。為了對我們的使用者提供更好的服務，我們在我們自己的錯誤追蹤系統 (BTS) 中提供了對所有報告過的錯誤的所有資訊，這也和 Debian 一貫的開放發展原則相互呼應。您可以在 <url id="&url-bts;" name="bugs.debian.org"> 瀏覽錯誤追蹤系統的網站。</p>


        <p>如果您在我們的系統發行或其中的套件中發現了任何問題，請向我們回報，這樣我們才能在下一次發行前將它修複。您要有一個合法的電子郵件信箱才能夠回報問題，這樣我們才能追蹤錯誤報告的進展，而開發人員需要更多資訊的時候也才能和原問題報告者連絡。</p>

        <p>您可以透過  <package>reportbug</package> 和 <package>bug</package> 程式（分別存在於同名套件之中）回報錯誤，或者是手動用電子郵件回報錯誤。您可以在參考卡片（安裝在系統上的 <file>/usr/share/doc/debian</file>）或 <url id="&url-bts;" name="錯誤追蹤系統">的線上網頁找到更多關於如何使用錯誤追蹤系統的資訊。</p>
      
      </sect>

      <sect id="contributing">
        <heading>如何對 Debian 做出貢獻</heading>

        <p>您不需要是個專家才能對 Debian 做出貢獻。當您在各個使用者<url id="&url-debian-list-archives;" name="郵件論壇">中協助其他使用者解決問題時，您就是在對整個社群做出貢獻。參與開發者<url id="&url-debian-list-archives;" name="郵件論壇">以協助找出（更重要的是解決）和系統發行相關的問題對我們也是有極大幫助的。為了維護 Debian 系統發行一貫的高品質，請<url id="&url-bts;" name="報告問題">，並協助開發人員決定問題的起因以修正錯誤。如果您有文字方面的天份，您也可以選擇藉由<url id="&url-ddp;" name="文件">的撰寫或把現有的文件<url id="&url-debian-i18n;" name="翻譯">成您所用的語言來做出更直接的貢獻。</p>

        <p>如果您能投注更多的時間的話，您可以負責維護 Debian 中一部分的自由軟體。如果您能夠續接或維護其他使用者希望 Debian 所能提供的軟體的話就更好了，您可以在<url id="&url-wnpp;" name="需要人手以及尚有需求的套件資料庫 (WNPP)"> 中找到相關的資訊。如果您的興趣是集中在特別的領域之中，那您可能會想要參加像是某個特定硬體平台的系統移植，<url id="&url-debian-jr;" name="Debian Jr.">，以及 <url id="&url-debian-med;" name="Debian Med"> 之類在 Debian 中的子計畫。</p>

        <p>不論如何，只要您以任何的方式參加了自由軟體社群的活動，不管是身為使用者、程式員、作者、還是譯者，您就已經對自由軟體的群體努力做出貢獻了。貢獻本身就是一件非常有益而有趣的事情，除了能讓您不斷地遇見新的伙伴之外，也能讓您的心中充滿了溫暖的感覺。</p></sect>

    </chapt>
  </book>
</debiandoc>

<!-- Keep this comment at the end of the file
Local Variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-namecase-general:t
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:nil
sgml-declaration:nil
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

