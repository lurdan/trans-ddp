<!DOCTYPE debiandoc PUBLIC "-//DebianDoc//DTD DebianDoc//EN" [
  <!entity % dynamicdata  SYSTEM "../dynamic.ent"       > %dynamicdata;
  <!entity % shareddata   SYSTEM "../release-notes.ent" > %shareddata;
  <!entity docid "$Id: release-notes.zh_TW.sgml,v 1.4 2005-05-27 17:11:47 fjp Exp $">
]>

<!-- Be careful with automatic reformatting. Please note that the indentation
     in examples is used in the output (plus additional space) as well. -->

<debiandoc>
  <book>
  <titlepag>
    <title>&debian; &release; (`&releasename'), &arch-title; 的發行情報</title>
      <author>
        <name>Josip Rodin, Bob Hilliard, Adam Di Carlo, Anne Bezemer, Rob
        Bradford (current)</name><email></email>
      </author>
      <author>
        <name></name><email>debian-doc@lists.debian.org</email>
      </author>
      <version>&docid;</version>
    </titlepag>
    <toc detail="sect1">
      <chapt id="about"><heading>在發行情報中有什麼新變化</heading>
       
        <p>[這份文件的最新版本可於 <url id="&url-release-notes;"> 取得。
如果在您手上的已經是一個月以前的版本的話，您可能就要考慮下載新的版本了。]</p>

        <p>請注意到，在先前的發行情報之中會包括了在舊有的發行版之前的所有更新資訊。
但這些內容將常常會使得文件過於複雜，
所以我們已決定在此將只會提及自 &debian; 3.0 ('woody') 之後的更新。
如果您必須從更為早期的發行版進行昇級的話，請參閱舊有的發行情報。</p>

      </chapt>
      <chapt id="whats-new"><heading>在 &debian; &release; 中有什麼新增功能</heading>

        <p>自上一個發行版 &debian; 3.0 ('woody') 以來，所支援的平台列表並沒有任何改變。
以下為這個發行版所支援的平台之完整列表。</p>
        
        <p>
          <list>
            <item><p>Intel x86 ('i386')</p></item>
            <item><p>Motorola 680x0 ('m68k')</p></item>
            <item><p>Alpha ('alpha')</p></item>
            <item><p>SPARC ('sparc')</p></item>
            <item><p>PowerPC ('powerpc')</p></item>
            <item><p>ARM ('arm')</p></item>
            <item><p>MIPS ('mips' (Big endian) and 'mipsel' (Little endian))</p></item>
            <item><p>Intel Itanium ('ia64')</p></item>
            <item><p>HP PA-RISC ('hppa')</p></item>
            <item><p>S/390 ('s390')</p></item>
          </list>
        </p>

          <p>您可以在 <url id="&url-ports;" name="Debian 硬體架構網頁"> 中取得更多關於各個平台程式移植的情況，
以及專屬於您所使用的硬體平台的相關資訊。</p>

<![ %secondrelease [

          <p>雖然這僅僅是 &debian; 在 &arch-title; 平台上的第二次正式發行，
但我們覺得系統本身已經證明了它已達到了可公開發行的水準。
然而，因為它從來沒有像其他平台上的發行版那麼的知名，那麼的能被使用者大量測試，
所以您還是可能會遭遇到一些問題。
請利用我們的 <url id="&url-bts;" name="錯誤追蹤系統"> 來回報您所發現的任何問題；
在報告中請不要忘了提及您是在 &architecture; 平台上發現這個錯誤的。</p>

]]>

          <p>在 &arch-title; 平台上的 &debian; &release; 發行版所使用的 Kernel 版本為 &kernelversion;。</p>
<![ %available-2.6 [
          
          <p>在 &arch-title; 平台上也提供了 2.6 版的 Kernel，其版本為 &kernelversion-2.6;。
請注意到，Debian 的 2.6.8 Kernel 套件包含了 2.6.8.1 Kernel 發行版以及許多額外的特定修正檔。</p>
]]>
        
        <sect id="newdistro"><heading>在這次的發行版本中有什麼新變化？</heading> 
           
           <p>比起上個發行版本 &oldreleasename;，新的 Debian 發行版本再度收集了更多的軟體。
這次的發行版本包含了超過 9000 個新套件，而其中約有 6500 個軟體套件（大約佔了 &oldreleasename; 發行版本的的套件數量的 73%）
則是在這次的發行版本裡有了版本上的更新。當然囉，因為種種的原因，也有不少的軟體在這次的發行版本裡被移除掉了。
您會看到這些套件的版本已不再更新，並且在套件的管理介面裡它們會被標記為 '廢棄 (obsolete)'。</p>

           <p>&releasename; 版的 <prgn/aptitude/ 是在主控台 (Console) 上最佳的套件管理程式。
它已証實了在處理相依問題的方面，它的表現優於 <prgn/apt-get/。
<prgn/aptitude/ 支援絕大多數 <prgn/apt-get/ 在命令列下的操作指令。
如果您還在使用 <prgn/dselect/，您不妨試著將 <package/aptitude/ 做為套件管理的前端介面。</p>
       
           <p>這次的 &debian; 發行版包含了歷經重大改良的 XFree86 4.3 發行版。
它不但提供了更廣泛的硬體支援，支援了更佳的自動偵測功能，
而且也對像是 Xinerama 和 3D 加速等先進技術有了更良好的支援。</p>
           
           <p>在這個新的發行版中現已包含了 GNOME 2.8 及 KDE 3.3，而使得 &debian; 前所未有地適用於桌面環境。
而這也是第一次因為 OpenOffice.Org 1.1 的加入而有了完整的辨公室套件。
在這個發行版中，其它富有生產力的工具還包含了群組軟體 Evolution 以及即時通訊用戶端 GAIM。</p>
           
           <p>正式的 &debian; 發行版包含了十三至十五張（視系統架構而定）的程式光碟及數量相當的原始程式碼光碟，
同時 DVD 發行版也已經推出。</p>

        <sect1 id="volatile"><heading>新服務 debian-volatile</heading> 
           
           <p>有個名為 <em/debian-volatile/ 的新服務可以讓使用者輕易得進行 stable 的套件的更新，
因為一些套件，像是病毒掃瞄引擎所使用的特徵碼列表，或是垃圾郵件過濾器的所使用的樣本資訊，往往很快得就過時了。
系統管理者可以輕易得使用和 "security.debian.org" 檔案庫類似的 "volatile.debian.net" 檔案庫，
並能因而取得包含了最新資訊的套件但卻不用擔心會讓整個（或部份）系統冒著使用可能有著潛在問題的套件時所連帶的麻煩及風險。
請到這個檔案庫的<url id="&url-debian-volatile" name="網頁">上來取得更多的詳細資訊及鏡像站之列表。</p>

        </sect1>

        <sect1 id="non-us"><heading>已不再使用 non-US</heading>
           <p>在 &releasename; 發行版中，以前是位於 non-US 區的套件已經被移至一般的檔案庫了。
如果在您的 <file>/etc/apt/sources.list</file> 還有任何項目會參照至 "non-us" 的話，您應該把它們移掉。</p>

        </sect1>
        </sect>

        <sect id="newinst"><heading>安裝系統有何改變？</heading>

          <p>舊有的 &debian; 安裝系統已被另一個名為 <prgn>debian-installer</prgn> 的全新安裝系統所取代。
這個新的安裝系統是以模組化設計，並著重於可擴充性而進行開發的。
它已被完整翻譯成近四十種語言，還有更多語言的翻譯工作也都在進行中；
而趕在 &releasename; 釋出之前，它們也許能及時被收錄其中。</p>
          
          <p>在此安裝系統中也加入了一些新的功能，包含了改善硬體偵測、
支援由 USB 快閃碟開機、在設定 Base System 的過程中，使用<prgn>aptitude</prgn> 來安裝套件、
支援 <prgn>XFS</prgn> 檔案系統以及 <prgn>LVM</prgn>（一個 volume 管理工具）。</p>
          
          <p>若想要知道關於新的 Debian 安裝系統的完整細節，使用者不妨考慮閱讀包含於第一張光碟，
或是位於 <url id="&url-install-manual;"> 的 Debian 安裝指引。
這個安裝指引已經被完整得翻譯成八種語言，而還有更多語言的翻譯工作也都在進行中。
當翻譯工作完成時，您將可以經由網站來取得這些語言的翻譯成果。</p>

<![ %i386 [ 

          <p>在 &arch-title; 平台上，我們特別替視障朋友提供了一系列，名為 "speakup" 的軟碟安裝影像檔。
這些影像檔提供了一個可夠支援盲人點字顯示器的特殊 Kernel，您可以在 brltty 文件中取得已支援模組的完整列表。
請參考 <url id="&url-installer;index#speakup" name="debian-installer release page"> 來取得這些影像檔的更多相關訊息。</p>

          <p>您可以在各類別的目錄中找到一個名為 'kernel-config' 的檔案，
其中所包含的就是 Kernel 的設定資訊。</p>

]]>

<!-- FJP: Maybe a short description of available installation methods could be
          added here: floppy, CD (netinst/business-card/full set), netboot,
          hd-media, USB-stick. -->
           
        </sect>

      </chapt>

      <chapt id="installing"><heading>新系統的安裝</heading>

        <p>名為 <prgn>boot-floppies</prgn> 的舊式 &debian; 安裝系統已被全新架構且功能更為強大，
名為 <prgn>debian-installer</prgn> 的安裝系統所取代。</p>

        <p>這個安裝程式提供了多種不同的安裝方式。您可以依據您硬體架構的不同而有種種不同的安裝方式可供選擇。</p>

        <p>如果您所要進行的是安裝全新的 Debian 系統，您應該閱讀安裝指引。它位於官方光碟上的：

        <example>
/doc/install/manual/<var>language</var>/index.html
        </example>

        或者是位於網際網路上的：<url id="&url-install-manual;"
        name="&releasename; release pages">。您也許還希望能至
        <url id="&url-installer;index#errata" name="errata"> 查看 debian-installer 的相關資訊。</p>

<![ %d-i-avail-2.6 [
          <p>這個安裝系統預設上是使用 2.4 系列的 Kernel，
但在 &arch-title; 上也提供了基於 Kernel 2.6 的安裝程式。
關於該如何操作等更多資訊請您查閱安裝指引。</p>
]]>
<![ %d-i-default-2.6 [
          <p>而在 &arch-title; 上，預設是使用 2.6 系列的 Kernel。</p>
]]>

<![ %alpha [
        <p>這個新的安裝程式目前只能用於安裝支援 SRM 主控台的 alpha 系統。
在啟動安裝程式之前，請務必記得將您的系統切換至 SRM 模式。
如果您的機器只支援 AlphaBIOS/ARC 主控台的話，
您可以藉由安裝（最小的）&oldreleasename; 並隨即進行昇級，來達到安裝 &releasename; 的目的。
如果您想要知道各個主控台的更多相關訊息，請閱讀在
 <url id="http://www.debian.org/ports/alpha" name="Debian alpha 平台 網頁"> 
上的參考資訊。</p>
]]>

<![ %sparc [
      <sect id="sparc_kbd"><heading>Issues with keyboards on &arch-title;</heading>

        <p>如果您所要進行的是安裝全新的 Debian 系統，您應該閱讀安裝指引。它位於官方光碟上的：

        <example>
/doc/install/manual/<var>language</var>/index.html
        </example>

        或者是位於網際網路上的：<url id="&url-install-manual;">。</p>

        <p>名為 <prgn>boot-floppies</prgn> 的舊式 &debian; 安裝系統已被全新架構且功能更為強大，
名為 <prgn>debian-installer</prgn> 的安裝系統所取代。</p>

<![ %sparc [ 
      <sect id="sparc_kbd"><heading>在 &arch-title; 裡的鍵盤相關問題</heading>

        <p>在安裝過程中，有著一些和選擇鍵盤相關的問題。</p>

        <p>第一個是 Sun 用於像是 SunBlade 系統的 USB 鍵盤的問題。
當使用預設的 2.4 版的 Kernel 來進行安裝時，它們會被安裝程式 "誤判" 為一般的 Sun 鍵盤。
在安裝指引裡已寫有解決方案。（請參考上文中的連結，【使用 Debian 安裝程式】一節）。</p>

        <p>第二個問題和 Kernel 有關。2.6 系列的 Kernel 使用了不一樣的輸入層來讓所有的鍵盤
都會看起來像是一般的 PC 鍵盤。也就是說，如果您使用了 2.4 的 Kernel 來進行安裝程式，
並將其設置為 Sun 或是 USB 的鍵盤。然後，（在專家模式裡），選擇在新的系統上使用 2.6 的 Kernel，
在重新開機後，您的鍵盤很可能會無法正常運作。</p>

      </sect>

      <sect id="sparc_fb"><heading>在 &arch-title; 裡的 framebuffer 相關問題</heading>

        <p>由於在某些系統上會在顯示時出現問題，所以在 &arch-title; 裡，
預設上是不支援 framebuffer 的。這會使得一些像是搭配了 ATI 顯示卡，對 framebuffer 支援良好的系統，
在顯示時的效果變差。如果您在安裝程式裡遇到了顯示上的問題，
您可以試著加上 debian-installer/framebuffer=true 參數來啟動安裝程式。</p>

      </sect>
]]>

      <sect id="popcon"><heading>熱門套件競賽</heading>

        <p>因為技術上的因素，新的 &releasename; 在安裝時預設上將不再安裝 <package/popcon/ 套件。
這個問題很可能在日後的發行版本中會加以修正。</p>

        <p><package/popcon/ 能夠向 Debian 專案提供在發行版中哪些套件是最實用的這個極有價值資訊。
這個資訊主要是用來決定該將哪些套件放入安裝光碟的優先順序。
而給 Debian 的開發者也常常根據它的報告來決定是否該放棄某個已經沒有維護者的套件。</p>

        <p>從 <package/popcon/ 所提交的報告是匿名進行的。如果您能安裝這個套件並讓它參與官方的調查工作，
對我們將是極大的幫助！而您將能藉此來促使 Debian 的進步。</p>

      </sect>
      </chapt>


      <chapt id="upgrading"><heading>從先前的發行版進行升級</heading>

<!-- For doc-writers' convenience:
Debian Supported
release: architectures:

1.3.1 or less i386
2.0           i386,m68k
2.1	      i386,m68k,alpha,sparc
2.2	      i386,m68k,alpha,sparc,powerpc,arm
3.0	        + hppa s390 mips mipsel ia64
-->

        <sect id="backup"><heading>系統升級之準備</heading>

          <p>在對您的系統進行升級之前，我們強烈建議您能進行一次完整的備份，
或至少您也應該把那些絕對不能出任何差錯的資料和設定資訊給備份起來。
升級時所使用的工具和升級過程應該不會出什麼差錯，但在升級過程中若發生了什麼硬體錯誤可能會導致系統嚴重受損。</p>

          <p>您可能會想進行備份的內容主要包括了 <file>/etc</file> 目錄和 <file>/var/lib/dpkg</file> 目錄中的內容，
以及 <tt>dpkg --get-selections \*</tt> 所輸出的資訊。</p>

          <p>您應該在進行任何升級之前先把您的計畫告知所有使用者，
雖然像是利用 SSH 從遠端來存取系統的使用者在升級過程中可能不會發現什麼異狀，而且可能還會希望他們的工作能夠不會因而中斷。
如果您希望能採取額外的預防措施的話，請在升級前備份或卸載使用者的分割區 (<file>/home</file>)。
您在升級前後通常並不需要重新開機，除非您計劃同時進行 Kernel 的昇級。</p>

          <p>您應該在本機透過文字模式的虛擬主控台（或直接連線的序列終端機）
或由遠端透過 <prgn/ssh/ 連線來進行發行版的升級動作。</p>

          <p><em/重要/：您<em/不/應該透過 <prgn/telnet/、<prgn/rlogin/、<prgn/rsh/、
或是由您要進行升級的機器上的 <prgn/xdm/、<prgn/gdm/ 或 <prgn/kdm/ 等等所管理的 X 行程來進行升級。
這是因為這些服務在升級的過程中都可能會被中斷，因而將會留下了一個只完成部分升級而<em/無法存取/的系統。</p>
	  
          <p>就如下所述的，建議的升級方式是使用 <prgn/aptitude/。
它內建的相依性分析能力使得升級安裝的動作變得平順而簡單。</p>
	  
	  <p>任何套件安裝的動作都需要有系統管理者的權限才能進行，
所以您必須以 root 登入，或使用 <prgn/su/ 或 <prgn/sudo/ 來取得所需的權限。</p>
          
          <p>第一件工作就是必須安裝 <package>aptitude</package> 套件。要達到這個目的，請使用：</p>

	  <p><example>
apt-get install aptitude
	  </example></p>

          <p>假如您已有可正常運作的 APT 設定，您將會安裝 &releasename; 版本的
          
	  <prgn>aptitude</prgn>。</p>

<![ %glibcneedsnewkernel [

        <sect1 id="new-kernel">
        <heading>檢查 Kernel 是否支援</heading>

<![ %sparc [
           <p>所有使用 64bit SPARC CPU (sun4u) 的機器並不需要特地去考慮有關 Kernel 是否支援等問題就應該能夠順利昇級。</p>

           <p>在 &releasename; 裡，sun4c CPUs 已經<em>不再被支援</em>了。
因為 sun4d CPUs 實在太罕見了，所以實在難以明確知道它們的支援狀況到底是如何。
不過 sun4d CPUs 應該是可以和 MMU 搭配工作的。</p>

           <p>而 sun4m CPUs 則仍被支援中，但在昇級您的系統之前，您必須先將您的 Kernel 昇級至較新的版本。
這是因為較新版本的 glibc 使用了部份機器所無法支援的組合指令，
所以您必須先進行 Kernel 的昇級以便能模擬這些無法支援的指令。</p>

           <p>以技術的眼光來看，只有<em>部份</em> sun4m 的晶片會受此影響，
但是因為 glibc 無法精確地直接判斷某個系統是否受到影響，
所以只要是沒有安裝修正過後的 Kernel，glibc 會拒絕在任何的 32bit SPARC 系統上進行昇級。</p>

           <p>對於那些充滿血淚的細節有興趣的人：
某些由 Cypress/ROSS 所生產的 sun4m 晶片（RT601/CY7C601、還有一些只是名稱不同的晶片），
並沒有完整得實作 <tt>umul</tt> 指令。
它們被用在早期的 SPARCserver 6xxMP 模組。
而較後期的模組則使用 TI 所生產的晶片，但我們目前尚未能明確知曉它們是否也會受到影響。
<!-- Add link to http://www.ultralinux.org/faq.html#q_2_1 ? -->
]]>

<![ %hppa [
          <p>如果是 64bit HPPA 機器，在昇級您的系統之前，您必須先將您的 Kernel 昇級至較新的版本。
這是因為較新版本的 glibc 使用了部份機器所無法支援的組合指令，
所以您必須先進行 Kernel 的昇級以便能模擬這些無法支援的指令。</p>
]]>
<![ %i386 [
          <p>在 &releasename; 裡，真正的 "80386" 處理器已經<em>不再被支援</em>了。
但這並不會影響任何和 "80486"（含以上）相容的處理器。</p>
]]>

<![ %mips-mipsel [
          <p>對 &arch-title; 的機器而言，在進行系統昇級之前，您必須先將 Kernel 昇級至較新的版本。
這是因為在新的 libc 和 Kernel 之間進行傳輸的指令缺乏一致的定義，
所以您必須使用能提供正確的定義的新版本的 Kernel。</p>
]]>

<![ %upgradekernel [
          <sect2 id="kernel-upgrade"><heading>進行 Kernel 的昇級</heading>

          <p>如果（也唯有）在上面的章節中指示您必須在進行系統的昇級<em/之前/先昇級您的 Kernel，
您才有必要在此時就進行這項作業。</p>

          <p>
<![ %not-mips-mipsel [
          您可以從 backports 中取得在安裝 sarge 正在使用的 Kernel 時所需的所有工具。
]]>
          您可以在 <ref id="kernel-upgrade-howto"> 取得要如何才能順利安裝新版本的 Kernel 的詳細步驟。</p>

          </sect2>
]]>
          </sect1>
]]>

	<sect1><heading>關閉 APT 的釘鎖 (Pinning) 功能</heading>

	  <p>如果您將 APT 設定為可以安裝除了 stable 發行版之外的套件，（像是：從 testing），
您可能必須修改您的 APT 的釘鎖 (Pinning) 設定（儲存於 <file>/etc/apt/preferences</file> 中）
來讓將要進行昇級的套件可以昇級為新的 stable 發行版。
您可以在 <manref name="apt_preferences" section="5"> 取得 APT 的釘鎖功能的更多詳盡資訊。</p>
<!-- FJP: Couldn't the advise to hold such packages prevent the upgrade of e.g.
          libc6 if the package depends on the old version! -->

	</sect1>
	
        <sect1><heading>檢查套件的狀態</heading>

          <p>不論您是用什麼方式進行系統的更新，我們都建議您先檢查所有套件的狀態，並確認所有的套件都能夠被順利更新。
以下的指令會顯示所有狀態為半安裝 (Half-Installed) 或設定失敗 (Failed-Config) 或有其他任何錯誤的套件。

          <example>
# dpkg --audit
          </example></p>
 
          <p>除此之外，檢查系統中所有套件狀態的方法還包括使用使用 <prgn/dselect/、<prgn/aptitude/、或是利用以下的指令：

          <example>
# dpkg -l | pager 
          </example>

          或是

          <example>
# dpkg --get-selections &gt; ~/curr-pkgs.txt
          </example></p>

          <p>最佳的做法是在進行系統升級前移除所有的保留 (hold) 套件。
如果在升級過程中有任何的關鍵套件被設定為保留狀態，升級的動作就會失敗。
您可以用以下的指令找出被設定為保留狀態的套件：
 
          <example>
# dpkg --audit
          </example></p>

          <p>如果您自行在系統中變更並重新編譯了某個套件，但卻沒有把它更名或在版本號碼中使用 epoch，
那您就必須把它設定為保留狀態，以防止它被升級到新的版本。您可以用 <prgn/aptitude/ 來改變套件的保留狀態：
	  
      	  <example>
aptitude hold | unhold &lt;package&gt;
      	  </example>
    	    </p>
        </sect1>

        <sect id="upgrade-process"><heading>APT 來源之準備工作</heading>

          <p>在開始進行升級之前，您必須先在 <package/apt/ 的設定檔 <file>/etc/apt/sources.list</file> 中設定套件列表。</p>
          
          <p><package/apt/ 會把所有可以在 "<tt>deb</tt>" 行中找到的套件全數列入考慮，並安裝其中版本號碼最高的套件，
且會依序由列出的來源中取得套件（也因此，當您是由許多不同位置來取得套件時，
您可以讓系統依先由本機硬碟，接下來是由光碟片，然後是遠端 HTTP/FTP 的順序來取得套件）。</p>

         <sect1 id="network"><heading>加入網際網路上的 APT 套件來源</heading>

           <p>雖然系統的預設設定是使用 Debian 在網際網路上的主要伺服器來進行安裝，
但您還是可能會希望修改 <file>/etc/apt/sources.list</file> 來改為使用在網路上離您最近的其它鏡像站。</p>

<!-- FJP: Why is 'default configuration' relevant here? We are talking about
          upgrading existing installations; we really have no idea what
          apt-sources users will have set up here (maybe just a Woody CD-set).
          Note: D-I sets the default configuration to a mirror based on
          the selected country and not the 'main' servers. -->

           <p>您也可以在 <url id="&url-debian-mirrors;"> 取得 Debian 的 HTTP 或 FTP 鏡像站的位址
（請參考 "Full list of mirrors" 小節）。
HTTP 鏡像站的傳輸速度通常會比 FTP 映網站快。</p>
<!-- FJP: 'Otherwise' does not refer back to anything here, so I deleted it
          (unless the intention was to refer to local intr_a_net HTTP
          servers in the previous para). -->

           <p>舉例來說，假設離您最近的 Debian 鏡像站是 <tt>&url-debian-mirror-eg;/</tt>。
當您透過網頁瀏覽器或 FTP 程式來檢視這個網站時，您會發現其中的主要目錄架構會像是這個樣子：

           <example>
&url-debian-mirror-eg;/dists/stable/main/binary-&architecture;/...
&url-debian-mirror-eg;/dists/stable/contrib/binary-&architecture;/...
           </example></p>

           <p>為了要讓 <prgn/apt/ 能夠使用這個鏡像站，請把以下的這一行加入您的 <file/sources.list/ 檔案之中：

           <example>
deb &url-debian-mirror-eg; &releasename; main contrib
           </example></p>

           <p>請注意，`<tt>dists</tt>' 將會被自動加到路徑中，
而在發佈代號之後的參數則會被用來展開成多個不同目錄的路徑。</p>

           <p>在加入了新的 APT 來源之後，
請在 <file/sources.list/ 中原有的 "<tt/deb/" 設定行前加入井字符號 (<tt/#/) 以關閉這些套件來源。</p>

           <p>所有由網路上下載來的安裝所需套件都會被存放在 <file>/var/cache/apt/archives</file> 目錄中
（而下載中的檔案則會被存在 <file>partial/</file> 子目錄中），
所以在嘗試開始安裝前請確認您是否有足夠的磁碟空間。
對一個裝有大量套件的 Debian 系統來說，下載的資料量應該會超過 300 MB。</p>
           
         </sect1>

         <sect1 id="localmirror"><heading>增加 APT 的本機鏡像套件來源</heading>

           <p>您可能也會想修改 <file>/etc/apt/sources.list</file> 中的設定，
以使用本機（像是透過 NFS 掛載的）磁碟上的鏡像資料來取代透過 HTTP 或 FTP 存取遠端的套件鏡像站。</p>

           <p>舉例來說，如果您的套件鏡像是放在 <file>/var/ftp/debian/</file> 之下，而主要的目錄看起來是像這樣的話：

           <example>
/var/ftp/debian/dists/stable/main/binary-&architecture;/...
/var/ftp/debian/dists/stable/contrib/binary-&architecture;/...
           </example></p>

           <p>如果要和 <prgn/apt/ 搭配使用，請把下行加入 <file/sources.list/ 檔案之中：

           <example>
deb file:/var/ftp/debian stable main contrib
           </example></p>

           <p>請注意到，`<tt>dists</tt>' 將會被自動加到路徑中，
而在發佈代號後的參數則會被用來展開成多個不同目錄的路徑。</p>

          <p>在您加入了新的 APT 來源之後，請在 <file/sources.list/ 中原有的 "<tt/deb/" 設定行前加入井字符號 (<tt/#/) 以關閉
這些套件來源。</p></sect1>

        <sect1 id="cdroms"><heading>增加 APT 的 CD-ROM 套件來源</heading>

<!-- FJP: Are these instructions also valid for adding DVD's? -->

          <p>如果光碟是<em/雖一/您想使用的媒體，
請在 <file/sources.list/ 中原有的 "<tt/deb/" 設定行前加入井字符號 (<tt/#/) 以關閉這些套件來源。</p>

<!-- Default cdrom mount point is /cdrom, not /media/cdrom and fixed!, see #282344
     (but the -d option of apt-cdrom allows scanning from somewhere else) -->

          <p>請確定在 <file>/etc/fstab</file> 中有著能讓您的光碟機掛載在 <file>/cdrom</file> 這個掛載點下的設定
（<prgn/apt-cdrom/ 限定掛載點必須是 <file>/cdrom</file>）。
舉例來說，如果您的光碟機的裝置是 <file>/dev/hdc</file>，那麼 <file>/etc/fstab</file> 中就應該要有像這樣的一行設定：

          <example>
/dev/hdc /cdrom auto defaults,noauto,ro 0 0
          </example></p>

          <p>請注意在第四欄的 <tt>defaults,noauto,ro</tt> 的字中間一定<em/不能參雜空白字元/。</p>

          <p>要確認您的設定是否正確，請放入一張光碟片，並試著執行

          <example>
mount /cdrom   # 這樣將會將這張 CD 掛載在該掛載點上
ls -alF /cdrom # 這樣將會列出 CD 的根目錄
umount /cdrom  # 這樣將會卸載這張 CD
          </example></p>

          <p>接下來對每一張 Debian 的程式光碟執行

          <example>
apt-cdrom add
          </example>

          來把每一張光碟的資料加到 APT 的資料庫中。</p>
        </sect1>
        </sect>

	<sect id="upgradingpackages"><heading>進行套件的升級</heading>
	  
	  <p>若要從 &debian; 發行套件進行昇級時，建議的工具是使用套件管理工具 <prgn>aptitude</prgn>。
這個工具在套件安裝上會比起直接執行 <prgn>apt-get</prgn> 來得安全。
	  
	  <p>不要忘了用類似以下的指令把所有會用到的分割區（特別是 <file>/usr</file> 和 root 分割區）重新以可讀寫的模式掛載：

          <example>
mount -o remount,rw /<var>mountpoint</var>
          </example></p>

	  <p>接下來是確認在 <file>/etc/apt/sources.list</file> 中的 APT 來源項目是指向 <tt>'stable'</tt> 發行套件，
且並不是指向它的開發代號。（如：<tt>&oldreleasename;</tt>）。
	  
	  <p>我們強烈建議您使用 <prgn>/usr/bin/script</prgn> 這個程式來記錄升級的完整過程。
因為一旦發生了任何問題，您手上就會有發生了什麼問題的確實記錄，而在必要之時，在錯誤報告中也會因而能提供確實的資訊。
若要開始進行記錄，請使用

          <example>
script -a ~/upgrade-to-&releasename;.typescript
          </example>

	  或類似的指令。請不要把記錄檔放在像是 <file>/tmp</file> 或 <file>/var/tmp</file> 之類的暫存目錄下
（這些目錄中的檔案可能會在升級的過程中或在重新開機時遭到清除）。</p>
 
	  <p>首先，<prgn>aptitude</prgn> 需要從新的發行版中取得新加入、以及有所更新的套件列表。要達到這個目的，可藉由：
	  
	  <p><example>
aptitude update
	  </example></p>

	  <p>等到 <prgn>aptitude</prgn> 取得了所有可用的套件，那麼系統已經可以說是準備好進行完整的昇級了。
但，如果系統已經安裝了 <package>doc-base</package> 套件的話，它必須在事先就進行昇級。
您可以使用以下指令來檢查它是否已被安裝在系統上了：</p> 
          
          <p><example>
dpkg -l doc-base
          </example></p>

          <p>如果輸出的文字是以 "i" 開頭的話，它已經安裝在系統上了，並且在繼續下個動作之前必須先進行昇級。</p>

          <p><example>
aptitude install doc-base
          </example></p>
          <p>那麼，現在已經準備好可以進行昇級作業的重頭戲了。請執行：</p>
	  <p><example>
aptitude -f --with-recommends dist-upgrade
	  </example></p>

	  <p>這會對您的系統進行完整的更新，也就是安裝所有套件目前所提供的最新版本，
並解決套件在不同發行版之間可能會有的相依性問題。
如果有必要的話，它也會安裝一些新的套件（通常是新版的函式庫或是被更名的套件），
並移除任何和新版套件發生衝突的過時套件（像是 <package>console-tools-libs</package>。</p>

          <p>如果您是從光碟組來進行升級的話，
系統將會在升級進行時不時要求您放入某張特定的光碟片。
您可能會需要反覆放入同一張光碟數次；
這是由於相關的套件被分散在多張光碟之中所造成的。</p>
   
	  <p>如果昇級某些已安裝的套件至新版本時會改變其他套件的安裝狀態的話，
這些套件就會被保留在原來的狀態（並顯示為 "保留，held back"）。
可以使用 <prgn>aptitude</prgn> 選擇這些套件並進行安裝，
或是試著鍵入 <tt>aptitude -f install <var>package</var></tt>，就能夠解決這個問題。</p>
            
          <p><tt/--fix-broken/（或只是 <tt/-f/）選項會讓 <package/apt/ 嘗試適當地修正系統中錯誤的相依關係。
<package/apt/ 不允許系統中存在任何在相依關係上的錯誤。</p>

        <sect1 id="trouble"><heading>在升級中可能發生的問題</heading>

          <p>如果在使用 <prgn/aptitude/、<prgn/apt-get/ 或
          <prgn/dpkg/ 的過程中失敗了並產生以下錯誤
<example>
E: Dynamic MMap ran out of room
</example>
          那麼，就表示預設的快取空間不夠了。
您可以把 <file>/etc/apt/sources.list</file> 中您不需要的項目加上註解或是乾脆將它移去，
或是增加快取空間，來解決這個問題。
可以經由設定 <file>/etc/apt/apt.conf</file> 裡的 <tt/APT::Cache-Limit/ 來增加快取空間。
以下的命令應該可以替昇級的動作設定足夠的快取空間：
<example>
echo 'APT::Cache-Limit "12500000";' >> /etc/apt/apt.conf
</example>
          在此假設您還沒有在那個檔案裡替那個變數設定任何的數值。</p>

          <p>有時候您會需要啟用 APT::Force-LoopBreak 選項讓 APT 暫時移除一個重要的套件，
以解決循環的 Conflicts/Pre-Depends 關係。<prgn/aptitude/ 會對此提出警告，並終止升級的進行。
您可以在 <prgn/aptitude/ 的指令行中加入 <tt>-o APT::Force-LoopBreak=1</tt> 來解除這個問題。</p>
<!-- JFS: Shouldn't this mention also Apt's configuration file? -->

          <p>系統中的相依關係也可能混亂到需要手動介入才得以解決。通常這代表您需要使用 <prgn/aptitude/ 或

          <example>
dpkg --remove <var>packagename</var>
          </example>

          來清除一些會造成問題的套件，或
 
          <example>
aptitude --fix-broken install
dpkg --configure --pending
          </example></p>

          <p>在極端的情況下，您可能需要利用類似以下的指令來強制進行重新安裝的動作

          <example>
dpkg --install <var>/path/to/packagename.deb</var>
          </example></p>

          <p>在問題都修正了之後，您就應該可以重新輸入先前所描述的 <tt/dist-upgrade/ 指令並繼續升級的工作了。</p>

          <p>在升級的過程中，系統可能會詢問您一些問題，以便能對套件進行設定或重新設定。
當您被問到是否要把在 <file>/etc/init.d</file> 或 <file>/etc/terminfo</file> 目錄中的檔案
或是 <file>/etc/manpath.config</file> 這個檔案置換成套件維護者所提供的版本時，您通常必須回答 `yes' 以維護系統的一致性。
您可以在稍後再復原為舊的設定檔，因為它們都會以在檔名後附加 <tt/.dpkg-old/ 的方式給保留下來。</p>

          <p>如果您不太確定要怎麼做的話，把套件或檔案的名稱寫下來，
等稍後再慢慢瞭解實際的狀況。
您可以在記錄檔中搜尋，以便能重新檢視在系統升級時出現在螢幕上的資訊。</p></sect1>

        <sect1 id="nownownow"><heading>在重新開機前應該完成的工作</heading>

          <p>當 <tt>aptitude dist-upgrade</tt> 執行完畢後，
『形式上的』系統升級就已經完成了，
但仍然有一些工作是在您下次重新啟動系統<em/之前/應該要加以注意的。</p>
          
  <p>請閱讀
	  <file>/usr/share/doc/xfree86-common/README.Debian-upgrade.gz</file>
來取得在昇級 X Windows System 套件時的更多相關資訊。
這和使用著先前的 Debian 發行版的所有使用者都有關係，簡單得說，您必須先閱讀它。

        <sect2 id="newkernel"><heading>替您的 Kernel 進行昇級</heading>
          
	  <p>請注意到，在這些過程中 <em/並不會/進行 Linux Kernel 的昇級。
您也許會想要自行手動進行，像是安裝 <package/kernel-image-*/ 套件的其中之一，
或是從原始碼中編譯一個自訂的 Kernel。</p>
<!-- JFS: This is not strictly true, if the user was using a non-versioned
  kernel (kernel-image-2.4-686) he _will_ upgrade the kernel if using
  aptitude (post-sarge) -->

	  <![ %available-2.6 [

	 <p>&debian; 包含了屬於 2.4 系列的 &kernelversion; Kernel，也就是較為舊式的穩定版 Linux Kernel 系列。
為了得到更廣泛的硬體支援或是更高的執行效能，您也許會想要使用 2.6 系列的 Kernel。</p>

          <p>然而，在此強烈建議您<strong/不要/將 Kernel 昇級至 2.6 視為
由 &oldreleasename; 昇級至 &releasename; 的計劃的一部份。
一些和昇級至 2.6 的相關問題已寫在 <ref id="upgrade-to-2.6"> 裡。</p>
         
]]>
         
         <p>若想要昇級您的 Kernel，您首先必須選定一個最符合於您所使用的平台的 Kernel。
若想要取得您可以用來安裝的 Kernel 列表，您可以使用：
<!-- FJP: s/subarchitecture/subarchitecture and processor/ ??? -->

         <example>
apt-cache search ^kernel-image
         </example></p>
         
         <p>接下來，您應該使用 <tt/aptitude install/ 來進行安裝。
當新的 Kernel 安裝完畢後，您應當找個適當時機重新開機，以便能享用它所帶來的種種好處。

         <p>請注意到，&oldreleasename;（包括更之前的發行版本）所安裝的系統並<em/沒有/將
Kernel 視為系統上的一個套件。這在 &releasename; 裡將有所改變，而您將可以利用安裝虛擬套件的方式來持續追蹤 Kernel 的變化。
這些套件是以 kernel-image-<tt/VERSION/-<tt/ARCH/ 來命名，其中的 <tt/VERSION/ 是用來對應 Kernel 的版本號碼（2.4 或 2.6），
而 <tt/ARCH/ 則對應至其所支援的硬體架構。
如果您希望能將 Kernel 的安全性支援和套件管理整合在一起，
請在昇級之後安裝最適用於您的硬體的 Kernel 套件。</p>

         <p>對於那些比較富有冒險心的人，
我們也提供了一個在 &debian; 上自行編譯 Kernel 的簡易方法。
請安裝 <package>kernel-package</package> 工具並詳細閱讀在 <file>/usr/share/doc/kernel-package</file> 裡的說明文件。</p>
         
         </sect2></sect1></sect>
         </sect2>
         </sect1>
         </sect>

         <sect id="obsolete"><heading>被廢棄的套件</heading>

<!-- JFS: Providing a full listing might be useful, especially if we can
point to the Bug that was opened when the bug was removed. This list should
be moved to an appendix, instead of adding it inline as we did in the
potato to woody RN -->

         <p>雖然在 &releasename; 裡採用了數千個新的套件，
但它同時也將超過了兩千個曾經包含在 &oldreleasename; 裡的舊套件給撤去並省略了。
它將不會再提供這些已遭廢棄的套件任何的昇級途徑，
雖然我們並不會禁止您企圖來繼續使用這些已遭廢棄的套件，
但依慣例，在 &releasename; 發佈的一年之後 Debian 專案將不會再針對它們繼續提供安全上的支援，
<footnote>或是直到在這段期間內有新的發行版推出為止。基本上，我們只會同時維護兩個 stable 的發行版</footnote>，
而除此之外，我們在這段期間內一般並不會再提供其它方面的支援。
如果可以的話，我們建議您能採用其它的替代方案來取代這些套件。</p>

         <p>而這些套件為什麼會從發行版中移去的原因不一而足：
有的是因為它的原始程式已經沒有人在繼續維護了；
有的是因為已經沒有 Debian 的開發者有意願想要繼續維護這些套件了；
有的是因為它們所提供的功能已經被其它的軟體（或是新的版本）所取代了；
有的是因為它們本身所包含的一些 Bug 使得我們認為它們已無法和 &releasename; 相容。
在此情況下，這些套件很可能是被放在 "unstable" 這個分類裡。</p>

        <p>因為套件管理的前端介面會將這些套件標示為 "廢棄(obsolete)"，
因而我們可以很輕易得就可以判斷在一個已經過昇級後的系統裡，
哪些套件已遭廢棄了。
如果您所使用的是 <prgn>aptitude</prgn>，
您可以在 "廢棄及本機所產生的套件" 這個項目裡看到這些套件的列表。
在 <prgn>dselect</prgn> 裡也提供了類似的功能但它所顯示的列表可能會有點不太一樣。
同時，如果您之前是使用 <prgn>aptitude</prgn> 來手動在 &oldreleasename; 裡安裝套件，
它會持續得追蹤這些您手動安裝的套件，並且如果有某個套件被移除了，
而使得這些套件已經沒有和其它套件有任何相依性的關係時，
它可以找出這些套件並將其標示為 "廢棄(obsolete)"。
而像是 <prgn>deborphan</prgn> 並不會將您手動安裝的套件標示為 "廢棄(obsolete)"；
但 <prgn>aptitude</prgn> 則是完全相反，
即使這些套件是因為相依性才被自動安裝進來的。</p>

         <p>還有一些其它的套件可以讓您用來尋找這些廢棄了的套件，
像是 <prgn>deborphan</prgn>、<prgn>debfoster</prgn> 或 <prgn>cruft</prgn>。
其中推薦使用 <prgn>deborphan</prgn>，因為它在預設的模式下只會報告已遭廢棄了的函式庫：
位於 "libs" 或 "oldlibs" 區的套件就表示它們已不再被其它的套件所使用。
但請不要輕率得依據這些工具所回報的列表就把這些套件給移掉了，
尤其是您在執行時使用的不是預設的，而是較為寬鬆的選項時，
它們很可能會因而做出不正確的判定。
因此在此強烈建議您，在進行移除的動作之前，
您必須親自再重新檢視一次這些將要被移除的套件，包括它們的內容、大小，及它們的詳細說明。</p>

<!-- JFS: Should we recommend purging old packages? This might be
dangerous since the maintainer scripts might try to remove stuff that
didn't belong to them... -->

<!-- JFS: Should we recommend purging old packages? This might be
dangerous since the maintainer scripts might try to remove stuff that
didn't belong to them... -->

         <p>在 <url id="&url-bts;" name="Debian Bug Tracking System"> 裡常常會提供了為什麼某個套件會被移掉的相關資訊。
您可以使用該套件本身的 bug report 資料庫，或是在 <url
         id="&url-bts;/cgi-bin/pkgreport.cgi?pkg=ftp.debian.org&amp;archive=yes"
         name="ftp.debian.org pseudo-package"> 裡的 bug report 資料庫來重新檢視這些資訊。</p>

         <sect1 id="dummy"><heading>虛擬 (Dummy) 套件</heading>

<!-- JFS: If the appendix is kept this section should point there and the packages described here should be moved to that section -->

         <p>有時為了讓系統能更易於管理，
有些原來是包含於 &oldreleasename; 的套件在 &releasename; 裡已被分開成數個套件。
在此況狀下，為了能讓昇級的過程更加順遂，
&releasename; 通常會採取提供 虛擬 (Dummy) 套件的方式：
使用一個和原本是包含於 &oldreleasename; 的套件相同名稱的套件，
但它的內容卻是空的，但利用相依上的關聯性來使得新的套件能被安裝。
這些虛擬套件在昇級之後就會被視同廢棄套件了，您可以放心得移除它們。

         <p>大多（但不是所有）的虛擬套件會在套件的說明中會介紹它們的用途，
雖然它們的說明的格式並不統一，所以您可能會覺得 <prgn>deborphan</prgn> 在搭配
<tt>--guess</tt> 選項時可以方便得把它們從您的系統中找出來。
請注意到，有些虛擬套件並不希望您在昇級後就將其刪除，因為日後您可以替而使用它來追蹤是否有任何新版本出現。</p>

         </sect1>
         </sect>
      </chapt>

<!-- FJP: Add more info here on dealing with obsolete packages?
          Also how to purge packages that were deleted but still have conffiles
          (use "limit" command in aptitude and search for ~c) -->

        <chapt id="information">
        <heading>在 &releasename; 您必須知道的一些問題</heading>

<!-- Controversial, disabled for now, please translate though
        <sect id="german-quotes"><heading>德文的雙引號問題</heading>
        
          <p>德國語系的區域資訊，（像是：de_DE@euro），很可惜得使用了在視覺上並不是很美觀的方式來表現雙引號。
為了和其它的 Linux 發行套件保持相容，我們保留了它的原始樣貌，但有朝一日我們希望這個問題能夠獲得修正。
我們建議您能轉移至某個 UTF-8 區域資訊，（像是：de_DE@euro.UTF-8），它能夠完整支援德語以及修正後的雙引號。
並且，使用 Unicode 編碼同時對於其它的語系也會有較好的支援。</p>

          <p>若要修改系統的區域資訊設定，請使用：
          <example>dpkg-reconfigure locales</example></p>
        </sect>
-->  
<!--   Will be added if relevant information is written here
        <sect id="syntax"><heading>程式語法的重大改變</heading>

       	  <p>Debian 的原則是儘量避免修改原始套件的內容，因此原始套件的任何改變也會反應在 &debian; 的同一版本之中。
這也代表了這些程式的表現方式在各個 &debian; 發行版裡可能會有所不同。</p>

          <p><em>尚未指出有任何改變。</em></p>
        
        </sect>
-->
<sect id="pythonchanges"><heading>Python 套件的改變</heading>

   <p>所有包含在 &releasename; 中的 python2.X 套件都不會包含 'profile' 和 'pstats' 這些標準模組，
因為它們所採用的授權並不符合 DFSG（請參考 bug #293932 來取得更多詳細資訊）。
您可以從位於 Debian 的檔案庫的 non-free 區的 python-profiler 及 python2.X-profiler 套件中取得這兩個模組。</p>
</sect>

<![ %available-2.6 [
        <sect id="upgrade-to-2.6">
        <heading>將 Kernel 昇級至 2.6</heading>

          <p>和 2.4 系列的 Kernel 相較，2.6 系列包含了很多重大的改變。
像是模組的名稱已經有所不同， 有不少的驅動程式有些局部上的更動，甚至有些可以說是完全改寫。
所以要把一些舊有版本的 Kernel 昇級至 2.6 並不會是件容易事。
這段章節的目的就是要讓您知道一些您可能會遇到的問題。

          <p>所以，在此強烈建議您不要把昇級至 2.6 Kernel 做為將 &oldreleasename; 昇級至 &releasename; 的計劃的一部份。
首要工作是您應該先確認您的系統能夠和舊的 Kernel 或是 &releasename; 上的 2.4 系列的 Kernel 搭配時能夠正常運作。
而將 Kernel 昇級至 2.6 則應該視為個別的計劃。

          <p>如果您是自行由原始程式碼來編譯 Kernel 的，
請在使用 2.6 Kernel 來重新開機前確認您已安裝了 <package/module-init-tools/。
這個套件是用來在 2.6 的 Kernel 裡取代 <package/modutils/ 的。
如果您安裝了任何的 <package/kernel-image/ 套件，
這個套件會因相依上的因素而會自動地就被安裝上去了。</p>

          <p>如果您使用了 <em/LVM/，因為 2.6 的 Kernel 並不會直接支援 LVM1，
所以請在重新開機前確認您已安裝了 <package/lvm2/。
而為了能存取 LVM1 的 volumes，因而使用了相容的 <package/lvm2/（dm-mod 模組）。
您還是可以保留已安裝了的 <package/lvm10/；
而進行初始化的 Script 將會進行偵測並自動依所使用的 Kernel 的不同來載入適當的版本。

          <p>如果您在 <file>/etc/modules</file> 檔案（在系統開機時所要載入的模組列表）有自行加入的項目的話，
請您要記得有些模組的名稱已經有所改變，
如果真的如此，您必須修改這個檔案並使用新的模組名稱。</p>

<![ %i386 [
          <p>在一些 SATA 磁碟控制器裡，將指派給磁碟及其分割區的裝置由 <file>/dev/hdX</file> 改變為 <file>/dev/sdX</file>。
如果真的如此，您必須適當得修改您的 <file>/etc/fstab</file> 及開機程式的設定。
否則您的系統可能會無法正常開機。</p>
]]>

          <p>如果您安裝好了您的 2.6 Kernel，請在重新開機之前，
確認您已準備好緊急回覆方案。
首先，請確認在您的開機程式的設定檔裡包含著您新的 Kernel 以及舊的，可正常作業的 2.4 Kernel 的項目。
您應該也要確認在您的手邊有著 "救援 (rescue)" 磁碟片或光碟，
以防止在開機程式的一些錯誤設定讓您連舊的 Kernel 都無法開機。</p>

        <heading>鍵盤的設定</heading>

          <p>在 2.6 Kernel 裡最具衝擊性的改變就是發生在輸入層的根本改變。
這個改變將會使得所有的鍵盤都會看起來像是 "一般" 的 PC 鍵盤。也就是說，
如果您正在使用的鍵盤和一般的有所不同的話，（例： USB-MAC or Sun 鍵盤），
在使用新的 2.6 的 Kernel 重新開機後，您的鍵盤很可能會無法正常運作。</p>
          
          <p>如果您可以從另一個系統來使用 SSH 連進去那台主機，您可以執行 <tt>dpkg-reconfigure console-data</tt>，
並選擇 "Select keymap from full list" 設定，然後選擇 "pc" 鍵盤來解決這個問題。</p>

          <p>如果您在 Consle 所使用的鍵盤受到了影響，
那麼您大概也需要替 X Windows System 重新設定鍵盤。
您可以執行 <tt>dpkg-reconfigure xserver-xfree86</tt> 或是直接編輯 file>/etc/X11/XF86Config-4</file> 來達到這個目的。
請不要忘了要閱讀在 <ref id="nownownow"> 裡所提到的文件。

<![ %i386 [
          <p>這個問題似乎不會影響到 &arch-title; 架構的機器，
因為所有的 PS/2 及絕大多數的 USB 鍵盤應該早已設定為 "一般的" PC 鍵盤了。</p>
]]>
<![ %not-i386 [
          <p>請注意到，如果您正在使用的是 USB 鍵盤，
它可能會被設定為 "一般的" PC 鍵盤或是設定為 USB-MAC 鍵盤。
如果是前者的話，您將不會受到這個問題的影響。</p>
]]>
        </sect1>

        <sect1 id="2.6-mouse">
        <heading>滑鼠的設定</heading>

          <p>再一次地，因為輸入層的改變，
如果您在昇級至 2.6 的 kernel 後滑鼠無法正常運作的話，
您也許得要重新設定 X Window System 及 <package/gpm/ 才行。
這大多是因為負責讀取滑鼠資料的裝置已經改變了，
您也許還得載入不同的模組。</p>

<![ %sparc [
          <p>如果您目前已將 X 設為使用 <file>/dev/sunmouse</file>，
您也許得將其修正為 <file>/dev/psaux</file>。</p>
]]>

        </sect1>

        <sect1 id="2.6-sound">
        <heading>設定聲音</heading>

          <p>在 2.6 系列的 Kernel 裡，比起使用 OSS 音效驅動程式，
使用 ALSA 的音效驅動程式將會是個更佳選擇。
如果您安裝了 <package/alsa-base/，適用於您的音效卡的 ALSA 將會被自動載入，
而這也會自動將 OSS 模組加入 <package/discover/ 和 <package/hotplug/ 的黑名單中以防止它們被載入。
如果您在 <file>/etc/modules</file> 中有加入 OSS 模組，您應該將它們移除。</p>

        </sect1>
]]> <!-- %not-s390 -->

        <sect1 id="2.6-udev">
        <heading>轉換到 2.6 可能會啟用 udev</heading>

        <p><package/udev/ 是一個 devfs 在使用者層級的實作。
它掛載在 <file>/dev/</file> 目錄下並能針對那些已載入了 Kernel 模組的裝置進行即時的目錄配置。
它是藉由和 <package/hotplug/ 搭配合作的方式來偵測新的裝置。
<package/udev/ 僅能和 2.6 的 Kernel 搭配運作。

        <p>由於 <package/udev/ 會因為相依上的關係，如：<package/gnome/，而被自動地安裝。
而使得當昇級至 2.6 的 Kernel 時可能會因而啟用了 <package/udev/。</p>

        <p>雖然 <package/udev/ 已經過了廣泛的測試，
但您還是可能在某些裝置上遇到一些必須加以修正的小小的問題。
最常見的問題是某個裝置的權限及/或所有權上的變更。
在某些狀況下，有些裝置在預設上是不會被建立的。（如：<file>/dev/video</file> 和 <file>/dev/radio</file>）。

        <p><package/udev/ 提供了配置的歷史記錄以便您能處理這些問題。
請查看 <manref name="udev" section="8"> 和 <file>/etc/udev</file> 以取得更詳盡的資訊。</p>

        </sect1>
        </sect>
]]> <!-- %available-2.6 -->

<![ %i386 [

        <sect id="x-mouse">
        <heading>無法載入 X Windows Systems</heading>

          <p>如果在將您的機器重新開機後，
您無法載入 X Window，
並且您在 <file>/var/log/XFree86.0.log</file> 中看到了 "missing core pointer" 這個錯誤訊息，
那麼這個問題很可能是因為 <prgn/hotplug/ 未能及時載入滑鼠的驅動程式的原故。
(bug <url id="http://bugs.debian.org/255744" name="#255744">)。
解決方案是將您的滑鼠的驅動模組（例，psmouse）加到 <file>/etc/modules</file> 裡。</p>

        </sect>

        <sect id="x-transmeta">
        <heading>在 全美達 (Transmeta) Crusoe 系統上的 X Window System</heading>

          <p>搭載於 &releasename; 的 X server 包含了一些經過最佳化的編碼，
但很多的 全美達(TM) 的 Crusoe(TM) 處理器卻無法正確得執行它們。
這將導致在某一段的時間內（在將被暫存起來的 x86 程式碼轉換至 Crusoe 的 VLIW 指令的過程中，
CPU 是處於一個不穩定的狀態），
和它連結的 X 用戶端應用程式將會失敗並留下以下的錯誤資訊：

<example>
X Error of failed request:  BadLength
   (poly request too large or internal Xlib length error)
Major opcode of failed request:  18 (X_ChangeProperty)
Serial number of failed request:  15
Current serial number in output stream:  18
</example></p>

          <p>在實際的狀況中，這表示在開始運作後不久，
應用程式會接二連三地突然關閉；如果這時有某個顯示管理程式 (display manager) 正在執行中，
它會不停得關閉然後試著重新自我啟動。
這個狀況會一直持續直至那個問題多多的 VLIW 全美達程式碼將暫存處理完畢為止。</p>

          <p>因為這個問題可能是出在 Transmeta Code Morphing Software (CMS) 裡，
而且筆記型電腦的 BIOS 只有在開機時才會由供應商的判別碼來檢查 CMS，
所以需要全美達和筆記型電腦的供應商相互合作才能解決這個問題。
有關這個問題的更多相關資訊可以由 <url id="http://www.cs.auc.dk/~fleury/bug_cms/"> 及 Debian 錯誤回報
<url id="http://bugs.debian.org/216933" name="#216933"> 取得。</p>

          <p>能避免這個問題的方法就是安裝在編譯時沒有經過最佳化的 X server，
像是 <package/xserver-xfree86-dbg/ 套件之類的。</p>

        </sect>
]]>

        </chapt>

      <chapt id="moreinfo">

        <heading>更多關於 &debian; 的資訊</heading>

        <sect id="morereading"> <heading>閱讀更多資訊</heading>
        <p>除了發行情報和安裝指引之外，
Debian 文件計畫 (DDP) 也提供了許多 &debian; 更進一步的說明文件。
Debian 文件計畫的目標是替 Debian 的使用者和開發者創作出高品質的文件，
其中包括了 Debian 指引、Debian 新維護者指引、以及 Debian 常見問答集，以及其他更多的文件。
如果您想瞭解關於這些資源的完整訊息，請參考 <url id="&url-ddp;" name="DDP 網站">。</p>
 
        <p>個別套件的說明文件則會被安裝到 <file>/usr/share/doc/<var>package</var></file> 目錄之中，
其中可能會包含了版權資訊，專屬於 Debian 的一些細節，以及任何原作者所提供的說明文件。</p>
 
      </sect> 
      
      <sect id="gethelp"> 
        <heading>取得協助</heading>
      
        <p>Debian 的使用者可以從許多的管道取得協助、建議、和支援，
但您應該只有在用盡了各種手段卻依然找不到問題的解答時才考慮尋求協助。
這一節簡單的介紹了對 Debian 的新使用者可能會很有幫助的求助管道。</p>
        
      <sect1 id="lists">
        <heading>郵件論壇</heading>
        <p>Debian 的使用者最感興趣的郵件論壇應該是 debian-user 論壇（英文）
以及其他的 debian-user-<var/language/ 論壇（其他語言）了。
您可以在 <url id="&url-debian-list-archives;"> 取得這些論壇的相關細節，以及訂閱的方法。
請您在論壇中發言前先檢查過去的論壇存檔中是否已經提供了問題的解答，並請遵守郵件論壇上的基本禮節。</p>
      </sect1>

      <sect1 id="irc">
        <heading>IRC(Internet Relay Chat) 網路聊天室</heading>
        
        <p>Freenode IRC network 主要的目的就是向同儕導向的專案社群提供互動式的服務。
在那裡 Debian 有一個 IRC 頻道是專門用來支援並幫 Debian 的使用者的。
您只要把您慣用的 IRC 客戶端程式指向 &opn-irc-server; 並加入 #debian 就可以連上這個頻道了。</p>
        
        <p>請遵循該頻道的規定，並尊重線上其他的使用者。
您可以在 <url id="&url-opn;" name="網站"> 上取得更多 Freenode 的相關資訊。</p>

      </sect1>
      </sect> 

      <sect id="bugs">
        <heading>回報錯誤</heading>
        
        <p>我們盡心盡力地讓 Debian GNU/Linux 成為一個高品質的作業系統，
但這並不表示我們所提供的套件都是完全沒有任何問題的。
為了和 Debian 一貫的開放發展原則相互呼應，
也為了能對我們的使用者提供更好的服務，
我們在我們自己的錯誤追蹤系統 (BTS) 中提供了對所有報告過的錯誤的所有資訊。
您可以在 <url id="&url-bts;" name="bugs.debian.org"> 瀏覽錯誤追蹤系統的網站。</p>

        <p>如果您在我們的系統發行或其中的套件中發現了任何問題，請向我們回報，
這樣我們才能在下一次發行前將它修復。您需要擁有一個正確的電子郵件信箱才能夠回報問題，
會有這個限定是因為這樣我們才能藉此追蹤錯誤報告的進展，而開發人員需要更多資訊的時候也才能和原問題報告者取得連繫。</p>

        <p>您可以藉由 <package>reportbug</package> 程式或是自行使用電子郵件來進行回報錯誤，
您可以閱讀參考卡片（如果您有安裝 <package>doc-debian</package> 的話，
可以在 <file>/usr/share/doc/debian</file> 裡找到）
或到 <url id="&url-bts;" name="錯誤追蹤系統"> 的線上網頁取得更多如何使用錯誤追蹤系統及其它的相關資訊。</p>

      </sect>

      <sect id="contributing">
        <heading>如何對 Debian 做出貢獻</heading>
        
        <p>您不需要是個專家才能對 Debian 做出貢獻。
當您在各個使用者 <url id="&url-debian-list-archives;" name="郵件論壇"> 中協助其他使用者解決問題時，
您就是在對整個社群做出貢獻。
參與開發者 <url id="&url-debian-list-archives;" name="郵件論壇"> 以協助找出（更重要的是解決）
和系統發行相關的問題對我們也有極大幫助的。
為了維護 Debian 系統發行一貫的高品質，請 <url id="&url-bts;" name="報告問題">，
並協助開發人員找出問題的起因以修正錯誤。
如果您有文字方面的天份，您也可以選擇藉由 <url id="&url-ddp;" name="文件"> 的撰寫
或把現有的文件 <url id="&url-debian-i18n;" name="翻譯"> 成您所使用的語言來做出更直接的貢獻。</p>

        <p>如果您能投注更多的時間的話，
您可以負責維護 Debian 中一部分的自由軟體。
如果您能夠接續或維護其他使用者希望 Debian 所能提供的軟體的話就更好了，
您可以在 <url id="&url-wnpp;" name="需要人手以及尚有需求的套件資料庫 (WNPP)"> 中取得相關的資訊。
如果您的興趣是集中在特別的領域之中，
那您可能會想要參加像是某個特定硬體平台的系統移植，
<url id="&url-debian-jr;" name="Debian Jr.">，
以及 <url id="&url-debian-med;" name="Debian Med"> 之類在 Debian 中的子計畫。</p>

        <p>不論如何，只要您以任何的方式參加了自由軟體社群的活動，
不管是身為使用者、程式員、作者、還是譯者，您就已經對自由軟體的群體努力做出貢獻了。
貢獻本身就是一件非常有益而有趣的事情，除了能讓您不斷地遇見新的伙伴之外，也能讓您的心中充滿了溫暖的感覺。</p></sect>

    </chapt>


<![ %upgradekernel [

    <appendix id="kernel-upgrade-howto"><heading>進行 Kernel 的昇級</heading>

          <p><strong>這個附錄裡的資訊是特別替那些為了確保系統的昇級能夠順利進行，
不得不在系統昇級<em/之前/先昇級 Kernel 的人們所寫的。
請參考 <ref id="new-kernel"> 來決定您的系統是否符合這個情況</strong>。</p>

<![ %mips-mipsel [
          <p>以下的指令將會逐步說明如何安裝新的 Kernel。</p>
]]>
<![ %not-mips-mipsel [
          <p>以下的指令將會逐步說明如何使用可取得的 backported 工具來安裝新的 Kernel。</p>
]]>

          <p><taglist>
               <tag>下載並安裝必須的套件</tag>

<![ %mips-mipsel [
                <item>
<![ %mips [
                <p>如果您的是 <em>SGI IP22</em> 您首先應該先讓它能以 <package>arcboot</package> 啟動，
而不是直接經由 Kernel 開機。
因為 <package>arcboot</package> 已包含於 &oldreleasename; 裡，
使用一般的方式就可以將它安裝起來了。</p>
]]>

                <p>從您慣用的 Debian 鏡像站取得 &releasename; 所使用的 Kernel 套件。
可以使用的套件有：

                <list>
<![ %mips [
                <item><p><url id="http://ftp.debian.org/debian/pool/main/k/kernel-patch-2.4.27-mips/kernel-image-2.4.27-r4k-ip22_2.4.27-8.040815-1_mips.deb"> R4XX0 處理器及 SGI IP22 子系統像是 Indy 和 Indigo2 專用。</p></item>
                <item><p><url id="http://ftp.debian.org/debian/pool/main/k/kernel-patch-2.4.27-mips/kernel-image-2.4.27-r5k-ip22_2.4.27-8.040815-1_mips.deb"> R5000 處理器及 SGI IP22 子系統像是 Indy 和 Indigo2 專用。</p></item>
                <item><p><url id="http://ftp.debian.org/debian/pool/main/k/kernel-patch-2.4.27-mips/kernel-image-2.4.27-sb1-swarm-bn_2.4.27-8.040815-1_mips.deb"> Broadcom BCM91250A (aka SWARM) pass 2.2. 專用。</p></item>
]]>
<![ %mipsel [
                <item><p><url id="http://ftp.debian.org/debian/pool/main/k/kernel-patch-2.4.27-mips/kernel-image-2.4.27-r3k-kn02_2.4.27-8.040815-1_mipsel.deb"> 基於 R3000 的 DEC 工作站並搭配 KN02（或相容的）主機版，像是 DECstation 5000/1xx 系列搭配 xx=20,25,33 及 DECstation 5000/240 專用。</p></item>
                <item><p><url id="http://ftp.debian.org/debian/pool/main/k/kernel-patch-2.4.27-mips/kernel-image-2.4.27-r4k-kn04_2.4.27-8.040815-1_mipsel.deb"> 基於 R4X00 的 DEC 工作站並搭配 KN04（或相容的）主機版，像是 DECstation 5000/150, the Personal DECstation 5000/50 及 the DECstation 5000/260 專用。</p></item>
                <item><p><url id="http://ftp.debian.org/debian/pool/main/k/kernel-patch-2.4.27-mips/kernel-image-2.4.27-r5k-cobalt_2.4.27-8.040815-1_mipsel.deb"> 基於 MIPS 的 Cobalt 機器（像是 Qube、RaQ、Qube2 或 RaQ2）專用。</p></item>
                <item><p><url id="http://ftp.debian.org/debian/pool/main/k/kernel-patch-2.4.27-mips/kernel-image-2.4.27-r5k-lasat_2.4.27-8.040815-1_mipsel.deb"> 在 Lasat Masquerade Pro 上的 R5000 處理器專用。</p></item>
                <item><p><url id="http://ftp.debian.org/debian/pool/main/k/kernel-patch-2.4.27-mips/kernel-image-2.4.27-sb1-swarm-bn_2.4.27-8.040815-1_mipsel.deb"> Broadcom BCM91250A (aka SWARM) pass 2.2 專用。</p></item>
                <item><p><url id="http://ftp.debian.org/debian/pool/main/k/kernel-patch-2.4.27-mips/kernel-image-2.4.27-xxs1500_2.4.27-8.040815-1_mipsel.deb"> 基於 Au1500 的 XXS1500 板專用。</p></item>
]]>
                </list></p>

                <p>然後，使用 <tt>dpkg -i</tt> 來安裝這些套件。
在安裝時它可能會抱怨模組無法相容（來自 <package>modutils</package>）
並詢問是否該繼續進行安裝。
請在此問題上回答 <tt>是</tt> 因為這些無法相容的問題將會在您使用新的 Kernel 來重新開機時獲得解決。</p>

                </item>
]]> <!-- %mips-mipsel -->


<![ %not-mips-mipsel [
               <item>
               <p><em>使用 apt</em>：若要使用 <prgn>apt</prgn> 或是它的眾多介面程式之一來安裝套件，
請將下文中的文字新增至您的 <file>/etc/apt/sources.list</file> 中：

<example>
deb &url-kernel-upgrade;
# sources are also available if you need them
# deb-src &url-kernel-upgrade;
</example></p>

<![ %sparc [
               <p>接下來，安裝以下套件
               <package>kernel-image-2.4.27-2-sparc32</package>,
               <package>modutils</package> 及
               <package>initrd-tools</package>。</p>
]]>
<![ %hppa [
               <p>接下來，安裝以下套件
               <package>kernel-image-2.6.8-2-64</package>、
               <package>module-init-tools</package> 及
               <package>initrd-tools</package>。</p>
]]>

               <p><em>使用 dpkg</em>：若要直接使用 <prgn>dpkg</prgn> 來安裝套件，
您必須先去下載一些必要的檔案。
<![ %hppa [
<!-- note: download URLs not final yet -->
               <p><list>
                 <item><url id="http://ftp.debian.org/debian/pool/main/k/kernel-image-2.6.8-hppa/kernel-image-2.6.8-2-64_2.6.8-6_hppa.deb"></item>
                 <item><url id="&deb-kernel-upgrade;/module-init-tools_3.2-pre1-2.woody1_hppa.deb">
                 <item><url id="&deb-kernel-upgrade;/initrd-tools_0.1.79-0.woody1_all.deb">
                 <item><url id="&deb-kernel-upgrade;/cramfsprogs_1.1-6.woody1_hppa.deb">
               </list></p>

               <p>Kernel 套件相依於 <package>module-init-tools</package>；
<package>initrd-tools</package> 則相依於 <package>cramfsprogs</package>。
而經由一般的方式來使用 &oldreleasename; 的套件就可以解決其它相關套件的相依性的問題。</p>

               <p>如果您使用了 <em/LVM/，因為 2.6 的 Kernel 並不會直接支援 LVM1，
所以請在重新開機前確認您已安裝了 <package/lvm2/。
而為了能存取 LVM1 的 volumes，因而使用了相容的 <package/lvm2/（dm-mod 模組）。
您還是可以保留已安裝了的 <package/lvm10/；
而進行初始化的 Script 將會進行偵測並自動依所使用的 Kernel 的不同來載入適當的版本。</p>
]]>

<![ %sparc [
               <p><list>
                 <item><url id="http://ftp.debian.org/debian/pool/main/k/kernel-image-2.4.27-sparc/kernel-image-2.4.27-2-sparc32_2.4.27-2_sparc.deb">
                 <item><url id="&deb-kernel-upgrade;/modutils_2.4.26-1.2woody1_sparc.deb">
                 <item><url id="&deb-kernel-upgrade;/initrd-tools_0.1.77-0.woody1_all.deb">
                 <item><url id="&deb-kernel-upgrade;/cramfsprogs_1.1-6.woody1_sparc.deb">
               </list></p>

               <p>Kernel 套件相依於 <package>modutils</package>。
<package>initrd-tools</package> 則相依於 <package>cramfsprogs</package>。
而經由一般的方式來使用 &oldreleasename; 的套件就可以解決其它相關套件的相依性的問題。</p>
]]>
               </item>
]]> <!-- %not-mips-mipsel -->

               <tag>請別急著刪除您舊的 Kernel</tag>
               <item><p>您應該先去確認新的 Kernel 能夠正常開機，
且所有在昇級過程中必須用到的硬體（比如說，網路裝置）能夠正常作業。</p></item>

<![ %sparc [
               <tag>讓您的系統能夠開機</tag>
               <item>
               <p>您很可能有必要去修改您的開機程式的設定檔 <file>/etc/silo.conf</file>。
注意到，新的 Kernel 會用到 initrd，而這在 &oldreleasename; 裡的 Debian Kernel 是不需要的。</p>
               </item>
]]>
<!-- ??hppa??
<![ %hppa [
               <tag>讓您的系統能夠開機</tag>
               <item>
               <p>???</p>
               </item>
]]>
-->

               <tag>使用新的 Kernel 重新開機</tag>
               <tag>檢查您的系統</tag>
               <item><p>請小心確認，尤其是輸入裝置、顯示設置、還有會用來存取 &releasename; 套件的設備
（比如說，網路裝置、光碟機... 等等）。有些驅動模組的名稱可能已經有所改變了，
有些裝置在以前是被編譯進 Kernel 的，而現在則是被編譯成模組...</p></item>

          </taglist></p>

    </appendix>
]]>

  </book>
</debiandoc>

<!-- Keep this comment at the end of the file
Local Variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-namecase-general:t
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:nil
sgml-declaration:nil
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
fill-column: 75
End:
-->

