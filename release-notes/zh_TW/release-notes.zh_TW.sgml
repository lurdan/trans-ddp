<!DOCTYPE debiandoc PUBLIC "-//DebianDoc//DTD DebianDoc//EN" [

  <!ENTITY % dynamicdata SYSTEM "../en/../dynamic.ent"> %dynamicdata;
  <!ENTITY % shareddata SYSTEM "../en/../release-notes.ent"> %shareddata;
  <!ENTITY docid "$Id: release-notes.zh_TW.sgml,v 1.12 2007-04-01 14:11:52 jfs Exp $">
]>
<debiandoc>
 <book>
  <titlepag>
   <title>
     &debian; &release; ("&releasename;"), &arch-title; 的發行情報
   </title>
   <author>
     <name>Josip Rodin, Bob Hilliard, Adam Di Carlo, Anne Bezemer, Rob 
     Bradford (現職), Frans Pop (現職), Andreas Barth (現職)</name><email></email>
   </author>
   <author>
     <name></name><email>debian-doc@lists.debian.org</email>
   </author>
   <version>
     &docid;

   </version>
  </titlepag>
  <toc detail="sect1">
 
 <chapt id="about">
  <heading>
    引言
  </heading>
  <p>
    The primary goals of these Release Notes are to inform users of major 
    changes in this release of the &debian; distribution, to provide 
    information on how to upgrade safely from the previous release to the 
    current release and finally to inform users of known potential issues 
    users could encounter when upgrading to or using the &releasename; 
    release.
  </p>
  <p>
    請注意到，要列出所有的已知問題是不可能的任務。因此，這些都是在經過篩選之後，被認為是普遍存在且重大的問題。
  </p>
  <p>
    The most recent version of this document is always available at <url 
    id="&url-release-notes;">. If the version you are reading is more than a 
    month old<footnote><p>On front page of the PDF version and in the footer 
    of the online, HTML, version</p></footnote>, you might wish to obtain 
    the latest version.
  </p>
  <p>
    Please note that we only support and document upgrading from the 
    previous release of Debian (in this case, the upgrade from 
    &oldreleasename;). If you need to upgrade from older releases, we 
    suggest you read previous editions of the release notes and upgrade to 
    &oldreleasename; first.
  </p>
  <sect id="bug_reports">
   <heading>
     Reporting bugs on this document
   </heading>
   <p>
     We have attempted to test all the different upgrade steps described in 
     this document and we have also tried to anticipate all the possible 
     issues our users might encounter.
   </p>
   <p>
     Nevertheless, If you think you have found any bug in this documentation 
     (incorrect information or information that is missing), please file a 
     bug in the <url id="&url-bts;" name="bug tracking system"> against the 
     <package>release-notes</package> package.
   </p>
  </sect>
  <sect id="upgrade_reports">
   <heading>
     Contributing upgrade reports
   </heading>
   <p>
     We welcome any information from users related to upgrades from 
     &oldreleasename; to &releasename;. If you are willing to share 
     information please file a bug in the <url id="&url-bts;" name="bug 
     tracking system"> against the <package>upgrade-reports</package> 
     package with your results.
   </p>
   <p>
     Please provide the following information when submitting your upgrade 
     report:
    <list>
     <item>
      <p>
        Session logs using <package>script</package>, as described in <ref 
        id="record_session">.
      </p>
     </item>
     <item>
      <p>
        The status of your package database before and after the upgrade, 
        using the backup procedure described at <ref id="backup">.
      </p>
     </item>
     <item>
      <p>
        Your aptitude logs, available at <file>/var/log/aptitude</file>.
      </p>
     </item>
    </list>
   </p>
   <p>
     Note: you should take some time to review and remove any sensitive 
     and/or confidential information from the logs before including them in 
     a bug report as the information will be published in a public database.
   </p>
  </sect>
  <sect id="sources">
   <heading>
     Sources for this document
   </heading>
   <p>
     This document uses <package>debiandocsgml</package>. Its sources are 
     available in the <em>Debian Documentation Project</em>'s CVS. You can 
     use the <url id="&url-cvs-release-notes;" name="web interface"> to 
     access its files individually through the web and see their 
     changes. For more information on how to access the CVS please consult 
     the <url id="&url-ddp-cvs-info;" name="Debian Documentation Project CVS 
     pages">.
   </p>
  </sect>
 </chapt>
 <chapt id="whats-new">
  <heading>
    在 &debian; &release; 中有什麼新增功能
  </heading>
  <p>
    This release adds official support for the AMD64 architecture which 
    supports 64-bit processors from both Intel (EM64T) and AMD 
    (AMD64). During the previous release, &debian; 3.1 ('sarge'), an 
    unofficial version of this port was available. <![ %amd64 [ Upgrading 
    from this unofficial version should be possible using these Release 
    Notes, but is not supported. ]]>
  </p>
  <p>
    對於 Motorola 680x0 ('m68k') 平台的官方支援已經停止，因為它無法達到 Debian Release Managers 
    所設定的標準。而最根本的潛在原因是一些基本工具元件的效能及極為有限的原廠支援。然而，即使它無法列入官方穩定發行版，m68k 
    平台移植還是會繼續存在且可取得以進行安裝。
  </p>
  <p>
    以下是 &debian; &releasename; 官方所支援的硬體平台：
  </p>
  <p>
   <list>
    <item>
     <p>
       Intel x86 ('i386')
     </p>
    </item>
    <item>
     <p>
       Alpha ('alpha')
     </p>
    </item>
    <item>
     <p>
       SPARC ('sparc')
     </p>
    </item>
    <item>
     <p>
       PowerPC ('powerpc')
     </p>
    </item>
    <item>
     <p>
       ARM ('arm')
     </p>
    </item>
    <item>
     <p>
       MIPS ('mips' (Big endian) 及 'mipsel' (Little endian))
     </p>
    </item>
    <item>
     <p>
       Intel Itanium ('ia64')
     </p>
    </item>
    <item>
     <p>
       HP PA-RISC ('hppa')
     </p>
    </item>
    <item>
     <p>
       S/390 ('s390')
     </p>
    </item>
    <item>
     <p>
       AMD64 ('amd64')
     </p>
    </item>
   </list>
  </p>
  <p>
    您可以在 <url id="&url-ports;" name="Debian 硬體架構網頁"> 
    中取得更多關於各個平台移植的情況，以及針對移植至您的硬體平台的相關資訊。
  </p>
   <![ %secondrelease [

  <p>
    雖然這僅僅是 &debian; 在 &arch-title; 
    平台上的第二次正式發行，但我們覺得系統本身已經證明了它已達到了可公開發行的水準。然而，因為它從來沒有像其他平台上的發行版那麼的知名，那麼的能被使用者大量測試，所以您還是可能會遭遇到一些問題。請利用我們的 
    <url id="&url-bts;" name="錯誤追蹤系統"> 來回報您所發現的任何問題；在報告中請不要忘了提及您是在 
    &architecture; 平台上發現這個錯誤的。
  </p>
   ]]>

  <p>
    在 &arch-title; 平台上的 &debian; &release; 發行版所使用的 Kernel 版本為 
    &kernelversion;。
  </p>
  <sect id="newdistro">
   <heading>
     在這次的發行版本中有什麼新變化？
   </heading>
   <p>
     This new release of Debian again comes with a lot more software than 
     its predecessor &oldreleasename;; the distribution includes over 6,200 
     new packages, for a total of over 18,000 packages. Most of the software 
     in the distribution has been updated: over 10,500 software packages 
     (this is 67% of all packages in &oldreleasename;). Also, a significant 
     number of packages (over 3400, 22% of the packages in &oldreleasename;) 
     have for various reasons been removed from the distribution. You will 
     not see any updates for these packages and they will be marked as 
     'obsolete' in package management front-ends.
   </p>
   <p>
     從 &debian; 這個發行版本開始，已由 XFree86 轉換為支援了更多的硬體及更佳的自動偵測的 X.Org 7.1 版了。它可以使用 
     Compiz 這個第一個能夠在被支援的裝置上充份利用硬體 OpenGL 加速的 X Window System 複合式視窗管理程式。
   </p>
   <p>
     &debian; again ships with several desktop applications and 
     environments. Amongst others it now includes the desktop environments 
     GNOME 2.14<footnote><p>With some modules from GNOME 
     2.16.</p></footnote>, KDE 3.5.5a, and Xfce 4.4. Productivity 
     applications have also been upgraded, including the office suites 
     OpenOffice.org 2.0.4a and KOffice 1.6 as well as GNUcash 2.0.5, 
     GNUmeric 1.6.3 and Abiword 2.4.6
   </p>
   <p>
     Updates to other desktop applications include the upgrade of Evolution 
     2.6.3 and Gaim 2.0. The Mozilla suite has also been updated, but the 
     main programs have been renamed: <prgn>iceweasel</prgn> (version 
     2.0.0.2) is the unbranded <prgn>Firefox</prgn> web browser and 
     <prgn>icedove</prgn> (version 1.5) is the unbranded 
     <prgn>Thunderbird</prgn> mail client.
   </p>
   <p>
     在此發行版中也包含了以下的軟體更新
   </p>
   <p>
    <list>
     <item>
      <p>
        GNU C 函式庫，2.3.6 版。
      </p>
     </item>
     <item>
      <p>
        將 GNU Compiler Collection 4.1 做為預設的編譯器。
      </p>
     </item>
     <item>
      <p>
        language interpreters: PHP 5.5, Python 2.4.
      </p>
     </item>
     <item>
      <p>
        server software:
      </p>
      <p>
       <list>
        <item>
         <p>
           電子郵件伺服器：Exim 4.63（將是新安裝系統預設的電子郵件伺服器）、Postfix 2.3、Courier 
           0.53、Cyrus 2.2。
         </p>
        </item>
        <item>
         <p>
           Web 伺服器：Apache 2.2、fnord 1.10
         </p>
        </item>
        <item>
         <p>
           資料庫伺服器：MySQL 5.0.32、PostgreSQL 8.1
         </p>
        </item>
        <item>
         <p>
           OpenSSH 伺服器，4.3 版。
         </p>
        </item>
        <item>
         <p>
           名稱伺服器：Bind 9.3、maradns 1.2。
         </p>
        </item>
        <item>
         <p>
           目錄伺服器：OpenLDAP 2.3
         </p>
        </item>
       </list>
      </p>
     </item>
    </list>
   </p>
   <p>
     <prgn>aptitude</prgn> 是在主控台 (Console) 
     上的套件管理程式的第一選擇。<prgn>aptitude</prgn> 支援了大部份的 <prgn>apt-get</prgn> 
     在命令列上的操作指令，且在處理相依問題上，已証實它的表現優於 <prgn>apt-get</prgn>。如果您還在使用 
     <prgn>dselect</prgn>，您應該將套件管理時的官方前端介面轉換為使用 <package>aptitude</package>。
   </p>
   <p>
     The official &debian; distribution now ships on 19 to 23 binary CDs 
     (depending on the architecture) and a similar number of source CDs. A 
     DVD version of the distribution is also available.
   </p>
   <sect1 id="secureapt">
    <heading>
      安全的 APT
    </heading>
    <p>
      <prgn>apt-secure</prgn> (also known as <em>Secure APT</em>) is now 
      available in &releasename;. This feature adds extra security to 
      &debian; systems by easily supporting strong cryptography and digital 
      signatures to validate downloaded packages. This release includes the 
      <prgn>apt-key</prgn> tool for adding new keys to apt's keyring, which 
      by default includes only the current Debian archive signing key, 
      provided in the <package>debian-archive-keyring</package>.
    </p>
    <p>
      In its default configuration, <prgn>apt-secure</prgn> will warn if 
      packages are downloaded from sources that are not 
      authenticated. Future releases might force all packages to be verified 
      before downloading them. Administrators of unofficial apt repositories 
      are encouraged to generate a cryptographic key and sign their Release 
      files, as well as providing a secure way to distribute their public 
      keys.
    </p>
    <p>
      請閱讀 <prgn>apt-secure</prgn> 的說明手冊來取得更詳盡的資訊：<em>加強 Debian 安全手冊</em> 的 
      <url 
      id="http://www.debian.org/doc/manuals/securing-debian-howto/ch7#s-deb-pack-sign" 
      name="Debian 的套件簽名"> 一節，以及<url id="http://wiki.debian.org/SecureApt" 
      name="Wiki 文件">。
    </p>
   </sect1>
   <sect1 id="volatile">
    <heading>
      debian-volatile 現已是官方服務
    </heading>
    <p>
      之前在 &oldreleasename; 裡所介紹的 <em>debian-volatile</em> 非官方服務現已成為官方服務。
    </p>
    <p>
      這表示它已不再使用 <tt>.debian.net</tt> 位址，該位址現已改為 
      <tt>.debian.org</tt>。若您現正使用著該服務，請確認您的 
      <file>/etc/apt/sources.list</file> 是否已正確對應。
    </p>
    <p>
      <em>debian-volatile</em> 服務可以讓使用者輕易得進行 stable 
      的套件更新，因為某些套件，像是病毒掃瞄引擎所使用的特徵碼列表，或是垃圾郵件過濾器所使用的樣本資訊，往往很快得就過時了。請到這個檔案庫的 
      <url id="&url-debian-volatile" name="網頁"> 來取得更多的詳細資訊及鏡像站之列表。
    </p>
   </sect1>
  </sect>
  <sect id="improves_in_etch">
   <heading>
     系統改善
   </heading>
   <p>
     There have been a number of changes in the distribution that will 
     benefit new installations of &releasename;, but may not be 
     automatically applied on upgrades from &oldreleasename;. This section 
     gives an overview of the most relevant changes.
   </p>
   <p>
    <taglist>
     <tag>
       Priority for basic development packages lowered
     </tag>
     <item>
      <p>
        A number of development packages that used to be priority 
        <em>standard</em> are now priority <em>optional</em>, which means 
        they will no longer be installed by default. This includes the 
        standard C/C++-compiler, <package>gcc</package>, as well as some 
        other software (<package>dpkg-dev</package>, 
        <package>flex</package>, <package>make</package>) and development 
        headers (<package>libc6-dev</package>, 
        <package>linux-kernel-headers</package>).
      </p>
      <p>
        If you do wish to have these packages on your system, the easiest 
        way to install them is by installing 
        <package>build-essential</package>, which will pull in most of them.
      </p>
     </item>
     <tag>
       SELinux priority standard, but not enabled by default
     </tag>
     <item>
      <p>
        The packages needed for SELinux support have been promoted to 
        priority <em>standard</em>. This means that they will be installed 
        by default during new installations. For existing systems you can 
        install SELinux using:
       <example>
# aptitude install selinux-basics
       </example>
      </p>
      <p>
        Note that SELinux support is not enabled by default. If you want to 
        secure your system using SELinux, you will need to enable it by 
        adding the kernel boot parameter <tt>selinux=1</tt>. Additional 
        information can be found on the <url id="&url-wiki-selinux" 
        name="Debian Wiki">.
      </p>
     </item>
     <tag>
       New default inet superdaemon
     </tag>
     <item>
      <p>
        The default inet superdaemon for &releasename; is 
        <package>openbsd-inetd</package> instead of 
        <package>netkit-inetd</package>. It will not be started if no 
        services are configured, which is the default. The new default will 
        be installed automatically on upgrading.
      </p>
     </item>
     <tag>
       Default <prgn>vi</prgn> clone changed
     </tag>
     <item>
      <p>
        The <prgn>vi</prgn> clone installed by default is now a compact 
        version of <prgn>vim</prgn> (<package>vim-tiny</package>) instead of 
        <package>nvi</package>.
      </p>
     </item>
     <tag>
       Changes in default features for <tt>ext2</tt>/<tt>ext3</tt>
     </tag>
     <item>
      <p>
        New ext2 and ext3 filesystems will be created with features 
        <em>dir_index</em> and <em>resize_inode</em> enabled by default. The 
        first the so feature speeds up operations on directories with many 
        files; the second makes it possible to resize a file system on-line 
        (i.e. while it is mounted).
      </p>
      <p>
        Users upgrading from &oldreleasename; could consider adding the 
        <em>dir_index</em> flag manually using 
        <prgn>tune2fs</prgn><footnote><p>The flag <em>filetype</em> should 
        already be set on most file systems, except possibly on systems 
        installed before &oldreleasename;. </p></footnote>; the 
        <em>reset_inode</em> flag cannot be added to an existing file 
        system. It is possible to check which flags are set for a file 
        system using <tt>dumpe2fs -h</tt>.
      </p>
     </item>
     <tag>
       Default encoding for &releasename; is UTF-8
     </tag>
     <item>
      <p>
        The default encoding for new &debian installations is UTF-8. A 
        number of applications will also be set up to use UTF-8 by default.
      </p>
      <p>
        Users upgrading to &releasename; that wish to switch to UTF-8 will 
        need to reconfiguring their environment and locale definitions. The 
        system-wide default can be changed using <tt>dpkg-reconfigure 
        locales</tt>; first select a UTF-8 locale for your language and 
        country and then set that as default. Note that switching to UTF-8 
        means that you will probably also need to convert existing files 
        from your previous (legacy) encoding to UTF-8.
      </p>
      <p>
        The package <package>utf8-migration-tool</package> contains a tool 
        that may help the migration, however that package is only available 
        in unstable as it was not ready in time for &releasename;. Making a 
        backup of your data and configuration before using the tool is 
        strongly recommended.
      </p>
      <p>
        Note that not some applications may not yet work correctly in a 
        UTF-8 environment (mostly display issues).
      </p>
     </item>
    </taglist>
   </p>
   <p>
     The <url id="http://wiki.debian.org/Sarge2EtchUpgrade" name="Debian 
     Wiki"> has some additional information about changes between 
     &oldreleasename; and &releasename;.
   </p>
  </sect>
 </chapt>
 <chapt id="installing">
  <heading>
    Installation System
  </heading>
  <p>
    Debian Installer 是 Debian 
    的官方安裝系統。它提供了多種不同的安裝方式。您可以依據您硬體架構的不同而有種種不同的安裝方式可供選擇。
  </p>
  <p>
    可以在 <url id="&url-installer;" name="Debian website"> 上取得 &releasename; 
    的安裝影像檔及安裝指引。
  </p>
  <p>
    安裝指引也同時會包含在 Debian 官方的 CD/DVD 集裡的第一張 CD/DVD 的：
   <example>
/doc/install/manual/<var>language</var>/index.html
        </example>
  </p>
  <p>
    You may also want to check the <url id="&url-installer;index#errata" 
    name="errata"> for debian-installer for a list of known issues.
  </p>
   <![ %alpha [

  <p>
    安裝程式目前只能用於安裝支援 SRM 主控台的 alpha 系統。在啟動安裝程式之前，請務必記得將您的系統切換至 SRM 
    模式。如果您的機器只支援 AlphaBIOS/ARC 主控台的話，您可以藉由安裝（最小的）&oldreleasename; 
    並隨即進行昇級，來達到安裝 &releasename; 的目的。如果您想要知道各個主控台的更多相關訊息，請閱讀在 <url 
    id="http://www.debian.org/ports/alpha" name="Debian alpha 平台移植網頁"> 
    上的參考資訊。
  </p>
   ]]><![ %sparc [

  <sect id="sparc_fb">
   <heading>
     在 &arch-title; 裡的 framebuffer 相關問題
   </heading>
   <p>
     由於在某些系統上會有顯示上的問題，所以在 &arch-title; 裡，大多的顯示卡預設上是不使用 framebuffer 的。這會使得一些對 
     framebuffer 支援良好的系統上的顯示效果變差。如果您在安裝程式裡遇到了顯示上的問題，您可以試著加上 
     <tt>framebuffer=true</tt> 這個參數來啟動安裝程式。如果您的硬體在預設上並不使用 framebuffer 
     但卻能正常運作，請知會我們。
   </p>
  </sect>
   ]]>

  <sect id="inst-new">
   <heading>
     安裝系統有何改變？
   </heading>
   <p>
     自從 Debian Installer 在 &oldreleasename; 
     發行了首次的官方版本後，針對硬體支援及一些有趣的新功能方面又經歷了大量的開發工作。
   </p>
   <p>
     在本發行情報裡，我們只會列出在安裝程式裡的一些重大改變。如果您想知道在 &oldreleasename; 之後它的一些詳盡的改變列表，請檢閱在 
     Debian Installer 的 <url id="&url-installer-news" name="新聞歷程"> 上有關 
     &releasename; beta 及 RC 版發行公告。
   </p>
   <sect1 id="inst-changes">
    <heading>
      主要改變
    </heading>
    <p>
     <taglist>
      <tag>
        在安裝過程中不需重新開機
      </tag>
      <item>
       <p>
         之前的安裝程式會分成兩個步驟：設定 base system 及讓它能夠開機、接下來是重開機然後執行 
         <prgn>base-config</prgn> 來進行像是使用者設定、設定套件的管理系統及使用 tasksel 
         來安裝其它額外的套件。
       </p>
       <p>
         但從 &releasename; 開始，第二個步驟已整合至 Debian Installer 
         裡。這麼做有許多的優點，包含了像是增強了安全性、在安裝完成並重新開機之後，新系統的時區就是正確的、如果您安裝了桌面環境，將會直接啟動圖形使用介面。
       </p>
      </item>
      <tag>
        新系統將預設為使用 UTF-8 編碼
      </tag>
      <item>
       <p>
         安裝程式將會把系統設定為使用 UTF-8 編碼，而不是使用專用於各語系的舊特定編碼（像是 ISO-8859-1、EUC-JP 或 
         KOI-8）。
       </p>
      </item>
      <tag>
        更有彈性的分割程式
      </tag>
      <item>
       <p>
         現已可以利用分割引導程式，在檔案系統上使用 LVM Volume。
       </p>
       <p>
         安裝程式現也可以設定加密檔案系統。若使用手動分割磁碟，您可以選擇使用 <tt>dm-crypt</tt> 或是 
         <tt>loop-aes</tt>、使用密語或隨機的密鑰，同時您還可以調整其它各式各樣的選項。使用分割引導程式，安裝程式將會建立一個加密 
         LVM 分割區，它包含了其它的檔案系統（除了 <file>/boot</file> 之外）的 Logical Volumes。
       </p>
      </item>
       <![ %g-i [

      <tag>
        圖形安裝介面
      </tag>
      <item>
        <![ %i386-amd64 [

       <p>
         如果您比較喜歡使用圖形介面，請試著以 <tt>installgui</tt> 來啟動安裝程式。
       </p>
        ]]><![ %powerpc [

       <p>
         在 &arch-title; 上，只額外提供了一個僅供測試用的圖形介面安裝影像檔。它已知能在大多數裝有 ATI 顯示卡的 CHRP 
         系統上正常運作，但在 &arch-title; 上未經完整測試之前，尚不能將它列為一般的安裝 CD 之一。
       </p>
       <p>
         如果您很想試用圖形介面的安裝程式，請替而使用 "gtk-miniiso" 影像檔。
       </p>
        ]]>

       <p>
         除了在外表上，圖形介面的安裝程式和一般安裝程式的功能幾乎沒有任何差別。但只有一個地方不同：使用圖形介面的安裝程式無法將加密分割區設定為使用隨機金鑰。
       </p>
       <p>
         The major advantage of the graphical user interface is that it 
         supports more languages than the regular user interface 
         (newt). Information about the graphical installer and the most 
         important differences between the graphical and regular installer 
         are documented in an appendix in the installation guide.
       </p>
       <p>
         注意：並不是所有的系統平台都有圖形介面可用。
       </p>
      </item>
       ]]>

      <tag>
        救援模式
      </tag>
      <item>
       <p>
         您可以利用安裝程式來修復您系統上一些像是無法開機的問題。最先的步驟會和一般的安裝步驟極為類似，但安裝程式不會啟動磁碟分割程式，取而代之的它會提供一個列有救援選項的選單。
       </p>
       <p>
         請以 <tt>rescue</tt> 啟動安裝程式，或是在開機時加上 <tt>rescue/enable=true</tt> 
         參數，就能啟動救援模式。
       </p>
      </item>
      <tag>
        使用 sudo 來取代 root 帳號
      </tag>
      <item>
       <p>
         在 expert 安裝模式中，您可以選擇不要設定 root 
         帳號（讓它因而被鎖上）。取而代之的是設定<prgn>sudo</prgn>，讓第一個使用者可以利用它來進行系統管理。
       </p>
      </item>
      <tag>
        替下載到的套件驗証其檢查碼
      </tag>
      <item>
       <p>
         現在，經由安裝程式所下載到的套件會再利用 <prgn>secure apt</prgn> 
         來驗証它的檢查碼。這麼一來，若想攻擊經由網路安裝的系統將會更形不易。
       </p>
      </item>
      <tag>
        簡化的郵件設定
      </tag>
      <item>
       <p>
         The installation system sets up a basic configuration for the 
         system's mail server which will only provide for local e-mail 
         delivery, if the "standard system" is installed. The mail server 
         will be unavailable to other systems connected to the same 
         network. If you want to configure your system to handle e-mail not 
         local to the system (either to send e-mail or to receive it) you 
         will have to reconfigure the mail system after installation.
       </p>
      </item>
      <tag>
        Desktop selection
      </tag>
      <item>
       <p>
         The installation system will install a GNOME desktop as the default 
         desktop if the user asks for one.
       </p>
       <p>
         However, users wishing to install alternate desktop environments 
         can easily do so by adding boot parameters: <tt>tasks="standard, 
         kde-desktop"</tt> for KDE and <tt>tasks="standard, 
         xfce-desktop"</tt> for Xfce. Note that this will not work when 
         installing from a full CD image without using a network mirror as 
         an additional package source; it will work when using a DVD image 
         or any other installation method.
       </p>
       <p>
         There are also separate CD images available that install the KDE or 
         Xfce desktop environment by default.
       </p>
      </item>
       <![ %not-s390 [

      <tag>
        新語系
      </tag>
      <item>
       <p>
         Thanks to the huge efforts of translators, Debian can now be 
         installed in 47 languages using the text-based installation user 
         interface. This is six languages more than in 
         &oldreleasename;. Languages added in this release include 
         Belarusian, Esperanto, Estonian, Kurdish, Macedonian, Tagalog, 
         Vietnamese and Wolof. Languages dropped in this release due to lack 
         of translation updates include Persian and Welsh.
       </p>
        <![ %g-i [

       <p>
         If the graphical user interface is used, an additional eleven 
         languages are supported. These languages can only be selected using 
         this installer as their character sets cannot be presented in a 
         non-graphical environment. The new languages are: Bengali, 
         Dzongkha, Gujarati, Hindi, Georgian, Khmer, Malayalam, Nepali, 
         Punjabi, Tamil and Thai.
       </p>
        ]]>

       <p>
         Users that do not wish to use any locale can now select <em>C</em> 
         as their preferred locale in the installer's language 
         selection. More information on language coverage is available at 
         the <url id="&url-d-i-i18n;" name="d-i languages list">.
       </p>
      </item>
      <tag>
        區域語系及時區選擇上的簡化
      </tag>
      <item>
       <p>
         語系、國家和時區的設定現已經過簡化以減少使用者必須輸入的資料次數。安裝程式現在會根據所選取的語系自動判斷系統的國家及時區，或是在無法判斷時提供精簡的選擇列表。但使用者在必要還是可以使用模糊的組合。
       </p>
      </item>
      <tag>
        Improved system-wide localization
      </tag>
      <item>
       <p>
         Most of the internationalization and localization tasks that were 
         previously handled by the <package>localization-config</package> 
         tool are now included in the stock &debian; installer or in 
         packages themselves. This means that selection of a language will 
         automatically install packages necessary for that language 
         (dictionaries, documentation, fonts...) both in standard and 
         desktop environments. Configuration that is no longer handled 
         automatically include the papersize configuration and some advanced 
         X Windows keyboard settings for some languages.
       </p>
       <p>
         Note that language specific packages will only be installed 
         automatically if they are available during the installation.
       </p>
      </item>
       ]]>

     </taglist>
    </p>
   </sect1>
   <sect1 id="inst-auto">
    <heading>
      自動安裝
    </heading>
    <p>
      在之前的章節中所提到的眾多改變，其中也包含了在安裝程式裡利用事先準備好的設定檔來進行自動安裝。這意謂著，如果您手上有著用來和 
      &oldreleasename; 安裝程式搭配使用的事先準備好的設定檔，若未經修改將難以和新的安裝程式搭配使用。
    </p>
    <p>
      好消息是，在 <url id="&url-install-manual;" name="安裝指引"> 
      上有獨立的附錄，上有如何使用事先準備好的設定檔之大量資訊。
    </p>
    <p>
      &releasename; 版的安裝程式也包含了一些允許更為多樣且更容易進行自動安裝之新奇功能。它也新支援了一些進階的磁碟分割方式，像是使用 
      RAID、LVM 及加密的 LVM。請參關相關文件以取得更詳盡的資訊。
    </p>
   </sect1>
  </sect>
  <sect id="popcon">
   <heading>
     熱門套件競賽
   </heading>
   <p>
     安裝系統將會再次安裝  <package>popularity-contest</package> 套件。在 &oldreleasename; 
     裡，預設上並不會安裝這個套件，但會在更舊的系統上被安裝。
   </p>
   <p>
     <package>popularity-contest</package> 能夠向 Debian 
     專案提供在發行版中哪些套件正在被使用著的這個極有價值資訊。這個資訊主要是用來決定該將哪些套件放入安裝光碟的優先順序。而且 Debian 
     的開發者也常常根據它的報告來決定是否該放棄某個已經沒有維護者的套件。
   </p>
   <p>
     由 <package>popularity-contest</package> 
     所提交的報告是匿名進行的。如果您能參與這個官方的調查工作，對我們將是極大的幫助；而您也能夠藉此來促使 Debian 的進步。
   </p>
  </sect>
 </chapt>
 <chapt id="upgrading">
  <heading>
    從先前的發行版進行升級
  </heading>
  <sect id="backup">
   <heading>
     系統升級之準備
   </heading>
   <p>
     在進行昇級之前，我們建議您能同時參閱 <ref id="information"> 
     所提供的資訊。在那個章節裡包含了一些和昇級程序無直接相關的可能潛在之相關問題。
   </p>
   <sect1>
    <heading>
      Backup any data or configuration information
    </heading>
    <p>
      在升級您的系統之前，我們強烈建議您能進行一次完整的備份，或至少您也應該把那些絕對不能出任何差錯的資料和設定資訊給備份起來。升級時所使用的工具和升級過程應該不會出什麼差錯，但在升級過程中若發生了什麼硬體錯誤可能會導致系統嚴重受損。
    </p>
    <p>
      您可能會想進行備份的內容主要包括了 <file>/etc</file> 目錄和 <file>/var/lib/dpkg</file> 
      目錄中的內容，以及 <tt>dpkg --get-selections "*"</tt>（請別忘了雙引號）所輸出的資訊。
    </p>
    <p>
      這個昇級的程序它本身並不會修改在 <file>/home</file> 目錄裡的任何資料，但是已知有某些應用程式（例如：部份的 
      Mozilla 家族程式及 GNOME、KDE 
      桌面環境）在使用者第一次以新的版本啟動時，會以新的預設值覆蓋使用者原有的設定。為了以防萬一，您也許想要針對在使用者的主目錄裡的隱藏檔案及目錄（"dotfiles"，以 
      . 開頭的檔案或目錄）進行備份。這個備份可以用來回復或重新建立舊有的設定。您也許有必要讓使用者知道有這個問題存在。
    </p>
    <p>
      任何套件安裝的動作都需要有系統管理者的權限才能進行，所以您必須以 root 登入，或使用 <prgn>su</prgn> 或 
      <prgn>sudo</prgn> 來取得所需的權限。
    </p>
    <p>
      昇級有其必要條件，您應該在實地進行昇級之前先行確認一次。
    </p>
   </sect1>
   <sect1>
    <heading>
      Inform users in advance
    </heading>
    <p>
      It's wise to inform all users in advance of any upgrades you're 
      planning, although users accessing your system via an <prgn>ssh</prgn> 
      connection should notice little during the upgrade, and should be able 
      to continue working.
    </p>
    <p>
      If you wish to take extra precautions, back up or unmount users' 
      partitions (<file>/home</file>) before upgrading.
    </p>
    <p>
      You will probably have to do a kernel upgrade when upgrading to 
      &releasename;, so a reboot will normally be necessary. Typically, this 
      will be done after the upgrade is finished.
    </p>
   </sect1>
   <sect1>
    <heading>
      Prepair a safe environment for the upgrade
    </heading>
    <p>
      The distribution upgrade should be done either locally from a textmode 
      virtual console (or a directly connected serial terminal), or remotely 
      via an <prgn>ssh</prgn> link.
    </p>
    <p>
      In order to gain extra safety margin, we suggest you to run upgrade 
      processes in the virtual console provided by the <prgn>screen</prgn> 
      program which enables the safe reconnection and ensures the 
      uninterrupted upgrade processes even if the remote connection process 
      fails by chance.
    </p>
    <p>
      If you are upgrading remotely via an <prgn>ssh</prgn> link it is 
      highly recommended that you take the necessary precautions to be able 
      to access the server through a remote serial terminal. There are 
      chances that, after upgrading the kernel and rebooting, some devices 
      will be renamed (as described in <ref id="device-reorder">) and you 
      will have to fix the system configuration through a local 
      console. Also, if the system is rebooted accidentally in the middle of 
      an upgrade there are chances you will need to recover using a local 
      console.
    </p>
    <p>
      <strong>極重要！</strong>您<em>不應該</em>透過 
      <prgn>telnet</prgn>、<prgn>rlogin</prgn>、<prgn>rsh</prgn>，或是由您要進行升級的機器上的 
      <prgn>xdm</prgn>、<prgn>gdm</prgn> 或 <prgn>kdm</prgn> 等等所管理的 X 
      行程來進行升級。這是因為這些服務在升級的過程中都可能會被中斷，因而將會留下了一個只完成部分升級而<em>無法存取</em>的系統。
    </p>
   </sect1>
   <sect1 id="glibc-kernel">
    <heading>
      已不再支援 2.2 系列的 Kernel
    </heading>
    <p>
      In case you run a kernel prior to 2.4.1, you need to upgrade to (at 
      least) the 2.4-series before upgrading <package>glibc</package>. This 
      should preferably be done before starting the upgrade. It is 
      recommended you directly upgrade to the 2.6-kernel (available in 
      &oldreleasename;, instead of upgrading to a 2.4-kernel series.
    </p>
   </sect1>
  </sect>
  <sect id="system-status">
   <heading>
     檢查系統的狀況
   </heading>
   <p>
     在這個章節中所說明的昇級過程是專門為『純粹』的 &oldreleasename; 
     所寫的，也就是在系統中沒有安裝任何其它協力套件。先將那些套件移除掉或許是明智的做法。
   </p>
   <p>
     而在這個過程中也假設您的系統已更新至 &oldreleasename; 的最新釋出版本。如果您尚未完成或是您根本無從確定，請遵循在 <ref 
     id="old-upgrade"> 裡的相關說明。
   </p>
   <sect1>
    <heading>
      Review actions pending in package manager
    </heading>
    <p>
      In some cases, the use of <prgn>apt-get</prgn> for installing packages 
      instead of <prgn>aptitude</prgn> might make <prgn>aptitude</prgn> 
      consider a package as "unused" and schedule it for removal. In 
      general, the system should be fully up-to-date and "clean".
    </p>
    <p>
      Because of this you should review if there are any pending actions in 
      the package manager <prgn>aptitude</prgn>. If a package is scheduled 
      for removal or update in the package manager, it might impact 
      negatively on the upgrade procedure. Note that this is only possible 
      if your <file>sources.list</file> still points to 
      <em>&oldreleasename</em>; and not to <em>stable</em> or 
      <em>&releasename;</em>; see <ref id="old-sources">.
    </p>
    <p>
      To do this, you have to run <prgn>aptitude</prgn>'s user interface and 
      press 'g' ("Go"). If it shows any actions, you should review them and 
      either fix them or implement the suggested actions. If no actions are 
      suggested you will be presented with a message saying "No packages are 
      scheduled to be installed, removed, or upgraded".
    </p>
   </sect1>
   <sect1>
    <heading>
      關閉 APT 的釘鎖 (Pinning) 功能
    </heading>
    <p>
      如果您將 APT 設定為可以安裝除了 stable 發行版之外的套件，（像是：testing），您可能必須修改您的 APT 的釘鎖 
      (Pinning) 設定（儲存於 <file>/etc/apt/preferences</file> 
      中）來讓將要進行昇級的套件能夠昇級至新的 stable 發行版。您可以在 <manref name="apt_preferences" 
      section="5"> 取得 APT 的釘鎖功能的更多詳盡資訊。
    </p>
   </sect1>
   <sect1>
    <heading>
      檢查套件的狀態
    </heading>
    <p>
      不論您是用什麼方式進行系統的更新，我們都建議您先檢查所有套件的狀態，並確認所有的套件都能夠順利昇級。以下的指令會顯示所有狀態為半安裝 
      (Half-Installed) 或設定失敗 (Failed-Config) 或有其他任何錯誤的套件。
     <example>
# dpkg --audit
          </example>
    </p>
    <p>
      除此之外，檢查系統中所有套件狀態的方法還包括使用使用 
      <prgn>dselect</prgn>、<prgn>aptitude</prgn>、或是利用以下的指令：
     <example>
# dpkg -l | pager 
          </example>
      或是
     <example>
# dpkg --get-selections "*" &gt; ~/curr-pkgs.txt
          </example>
    </p>
    <p>
      最佳的做法是在進行系統升級前將所有的套件解除保留 (hold) 
      狀態。如果在升級過程中有任何的關鍵套件的狀態被設定為保留，那麼升級的作業就會失敗。
    </p>
    <p>
      請注意到，<prgn>aptitude</prgn> 使用了和 <prgn>apt-get</prgn> 及 
      <prgn>dselect</prgn> 迥然不同的方式來登錄哪些是保留套件。您可以使用以下方式來確認哪些套件是被保留住的：
     <example>
# aptitude search "~ahold" | grep "^.h"
          </example>
    </p>
    <p>
      如果您想要檢查那些套件是被 <prgn>apt-get</prgn> 所保留住的，請使用：
     <example>
# dpkg --get-selections | grep hold
          </example>
    </p>
    <p>
      如果您自行在系統中變更並重新編譯了某個套件，但卻沒有將其更名或在版本號碼中使用 
      epoch（自行定義版本號碼），那您就必須把它設定為保留狀態，以防止它被升級到新的版本。
    </p>
    <p>
      若想更改那些在 <prgn>aptitude</prgn> 裡被保留住的套件的狀態（將 <tt>hold</tt> 以 
      <tt>unhold</tt> 取代來消除保留狀態），請使用：
     <example>
# aptitude hold <var>package_name</var>
          </example>
    </p>
    <p>
      如果還有什麼地方尚待修正，最好再次確認您的 <file>sources.list</file> 仍然是指向 
      &oldreleasename;。請參考 <ref id="old-sources"> 裡的說明。
    </p>
   </sect1>
   <sect1 id="backports">
    <heading>
      非官方的來源及 backports
    </heading>
    <p>
      如果在您的系統裡安裝了不是由 Debian 
      所提供的套件，您必須要知道，在昇級的過程中它們可能會因為相依性的關係而被移除掉。如果這些套件是先在 
      <file>/etc/apt/sources.list</file> 
      新增了額外的套件檔案庫然後再加以安裝的，您應該檢查一下那個檔案庫是否也提供了特別為 &releasename; 而編譯的套件，在替 
      Debian 變更套件來源時也同時適當得修改這些套件的來源項目。
    </p>
    <p>
      Some users may have unofficial backported "newer" versions of packages 
      that <em>are</em> in Debian installed on their &oldreleasename; 
      system. Such packages are most likely to cause problems during an 
      upgrade as they may result in file conflicts<footnote><p>Debian's 
      package management system normally does not allow a package to remove 
      or replace a file owned by another package; not unless it has been 
      defined to replace that package.</p></footnote>. Section <ref 
      id="trouble"> has some information on how to deal with file conflicts 
      if they should occur.
    </p>
   </sect1>
  </sect>
  <sect id="handle-conflict">
   <heading>
     Manually unmarking packages
   </heading>
   <p>
     To prevent <prgn>aptitude</prgn> from removing some packages that were 
     pulled in through dependencies, you need to manually unmark them as 
     <em>auto</em> packages. This includes OpenOffice and Vim for desktop 
     installs:
    <example>
# aptitude unmarkauto openoffice.org vim  
</example>
   </p>
   <p>
     And 2.6 kernel images if you have installed them using a kernel 
     metapackage:
    <example>
# aptitude unmarkauto $(dpkg-query -W 'kernel-image-2.6*' | cut -f1)
</example>
   </p>
   <p>
     Note: You can review which packages are marked as <em>auto</em> in 
     aptitude running:
    <example>
# aptitude search 'i~M &lt;package name&gt;'
</example>
   </p>
  </sect>
  <sect id="upgrade-process">
   <heading>
     APT 來源之準備工作
   </heading>
   <p>
     在開始進行升級之前，您必須先在 <package>apt</package> 的設定檔 
     <file>/etc/apt/sources.list</file> 中設定套件列表。
   </p>
   <p>
     <package>apt</package> 會把所有可以在 "<tt>deb</tt>" 
     行中找到的套件全數列入考慮，並安裝其中版本號碼最高的套件，且會依序由列出的來源中取得套件。（也因此，當您是由許多不同位置來取得套件時，您可以讓系統依先由本機硬碟，接下來是由光碟片，然後是遠端 
     HTTP/FTP 的順序來取得套件）
   </p>
   <p>
     發行版通常可以使用它的代碼（如，&oldreleasename;、&releasename;）或是它的狀態名稱（如，oldstable、stable、testing、unstable）來表示。使用發行版的代碼有個好處是您將不用為了新的發行版的到來而感到不安，這也是為什麼會在此提出這個技巧的原因。理所當然的，這也表示了您必須自行去注意發行版是何時發佈的。如果您是替而使用狀態名稱的，在新的發行版發佈的同時，您將會立即發覺大量套件已有新的版本可供更新。
   </p>
   <sect1 id="network">
    <heading>
      加入網際網路上的 APT 套件來源
    </heading>
    <p>
      雖然系統的預設設定是使用 Debian 在網際網路上的主要伺服器來進行安裝，但您還是可能會希望修改 
      <file>/etc/apt/sources.list</file> 來改為使用在網路上離您最近的其它鏡像站。
    </p>
    <p>
      您也可以在 <url id="&url-debian-mirrors;"> 取得 Debian 的 HTTP 或 FTP 
      鏡像站的位址（請參考【Full list of mirrors】小節）。HTTP 鏡像站的傳輸速度通常會比 FTP 鏡像站來得快。
    </p>
    <p>
      舉例來說，假設離您最近的 Debian 鏡像站是 <tt>&url-debian-mirror-eg;/</tt>。當您透過網頁瀏覽器或 
      FTP 程式來檢視這個網站時，您會發現其中的主要目錄架構會像是這個樣子：
     <example>
&url-debian-mirror-eg;/dists/&releasename;/main/binary-&architecture;/...
&url-debian-mirror-eg;/dists/&releasename;/contrib/binary-&architecture;/...
           </example>
    </p>
    <p>
      為了要讓 <prgn>apt</prgn> 能夠使用這個鏡像站，請把以下的這一行加入您的 <file>sources.list</file> 
      檔案之中：
     <example>
deb &url-debian-mirror-eg; &releasename; main contrib
           </example>
    </p>
    <p>
      請注意，`<tt>dists</tt>' 將會被自動加到路徑中，而在發佈代號之後的參數則會被用來展開成多個不同目錄的路徑。
    </p>
    <p>
      在加入了新的 APT 來源之後，請在 <file>sources.list</file> 中原有的 "<tt>deb</tt>" 
      設定行前加入井字符號 (<tt>#</tt>) 以關閉這些套件來源。
    </p>
    <p>
      所有由網路上下載來的安裝所需套件都會被存放在 <file>/var/cache/apt/archives</file> 
      目錄中（而下載中的檔案則會被存在 <file>partial/</file> 
      子目錄中），所以在嘗試開始安裝前請確認您是否有足夠的磁碟空間。對一個裝有大量套件的 Debian 系統來說，下載的資料量應該會超過 300 
      MB。
    </p>
   </sect1>
   <sect1 id="localmirror">
    <heading>
      增加 APT 的本機鏡像套件來源
    </heading>
    <p>
      您可能也會想修改 <file>/etc/apt/sources.list</file> 中的設定，以使用本機（像是透過 NFS 
      掛載的）磁碟上的鏡像資料來取代透過 HTTP 或 FTP 存取遠端的套件鏡像站。
    </p>
    <p>
      舉例來說，如果您的套件鏡像是放在 <file>/var/ftp/debian/</file> 之下，而主要的目錄看起來是像這樣的話：
     <example>
/var/ftp/debian/dists/&releasename;/main/binary-&architecture;/...
/var/ftp/debian/dists/&releasename;/contrib/binary-&architecture;/...
           </example>
    </p>
    <p>
      如果要和 <prgn>apt</prgn> 搭配使用，請把下行加入 <file>sources.list</file> 檔案之中：
     <example>
deb file:/var/ftp/debian &releasename; main contrib
           </example>
    </p>
    <p>
      請注意，`<tt>dists</tt>' 將會被自動加到路徑中，而在發佈代號之後的參數則會被用來展開成多個不同目錄的路徑。
    </p>
    <p>
      在加入了新的 APT 來源之後，請在 <file>sources.list</file> 中原有的 "<tt>deb</tt>" 
      設定行前加入井字符號 (<tt>#</tt>) 以關閉這些套件來源。
    </p>
   </sect1>
   <sect1 id="cdroms">
    <heading>
      增加 APT 的 CD-ROM 或 DVD 的套件來源
    </heading>
    <p>
      如果光碟是<em>唯一</em>您想使用的媒體，請在 <file>/etc/apt/sources.list</file> 中原有的 
      "<tt>deb</tt>" 設定行前加入井字符號 (<tt>#</tt>) 以關閉這些套件來源。
    </p>
    <p>
      請確定在 <file>/etc/fstab</file> 中有著能讓您的光碟機掛載在 <file>/cdrom</file> 
      這個掛載點下的項目（<prgn>apt-cdrom</prgn> 限定掛載點必須是 
      <file>/cdrom</file>）。舉例來說，如果您的光碟機的裝置是 <file>/dev/hdc</file>，那麼 
      <file>/etc/fstab</file> 中就應該要有像這樣的一行：
     <example>
/dev/hdc /cdrom auto defaults,noauto,ro 0 0
          </example>
    </p>
    <p>
      請注意在第四欄的 <tt>defaults,noauto,ro</tt> 的字中間一定<em>不能參雜空白字元</em>。
    </p>
    <p>
      要確認您的設定是否正確，請放入一張光碟片，並試著執行
     <example>
# mount /cdrom    # 這樣將會將這張 CD 掛載在該掛載點上
# ls -alF /cdrom  # 這樣將會列出 CD 的根目錄
# umount /cdrom   # 這樣將會卸載這張 CD
          </example>
    </p>
    <p>
      接下來對每一張 Debian 的程式光碟執行
     <example>
# apt-cdrom add
          </example>
      來把每一張光碟的資料加到 APT 的資料庫中。
    </p>
   </sect1>
  </sect>
  <sect id="upgradingpackages">
   <heading>
     進行套件的升級
   </heading>
   <p>
     若要從舊有的 &debian; 發行套件進行昇級時，建議的方法是使用套件管理工具 
     <prgn>aptitude</prgn>。這個程式在套件安裝上會比起直接執行 <prgn>apt-get</prgn> 來得安全。
   </p>
   <p>
     不要忘了用類似以下的指令把所有會用到的分割區（特別是 <file>/usr</file> 和 root 分割區）重新以可讀寫的模式掛載：
    <example>
# mount -o remount,rw /<var>mountpoint</var>
          </example>
   </p>
   <p>
     Next you should double check that the APT source entries (in 
     <file>/etc/apt/sources.list</file>) refer either to 
     "<tt>&releasename;</tt>" or to "<tt>stable</tt>". There should not be 
     any sources entries pointing to &oldreleasename;. Note: source lines 
     for a CD-ROM will often refer to "<tt>unstable</tt>"; although this may 
     be confusing, you should <em>not</em> change it.
   </p>
   <sect1 id="record_session">
    <heading>
      Recording the session
    </heading>
    <p>
      我們強烈建議您使用 <prgn>/usr/bin/script</prgn> 
      這個程式來記錄升級的完整過程。因為一旦發生了任何問題，您手上就會有發生了什麼問題的確實記錄，而在必要之時，在錯誤報告中也能據此提供確實的資訊。若要開始進行記錄，請使用
     <example>
# script -t -a ~/upgrade-&releasename;.script 2>~/upgrade-&releasename;.time
          </example>
      或類似的指令。請不要把記錄檔放在像是 <file>/tmp</file> 或 <file>/var/tmp</file> 
      之類的暫存目錄下（這些目錄中的檔案可能會在升級的過程中或在重新開機時被清除掉）。
    </p>
    <p>
      The typescript will also allow you to review information that has 
      scrolled off-screen. Just switch to VT2 (using <tt>Alt-F2</tt>) and, 
      after logging in, use <tt>less -R 
      ~root/upgrade-&releasename;.script</tt> to view the file.
    </p>
    <p>
      在您完成昇級作業後，您可以藉由在命令列上鍵入 <tt>exit</tt> 來關閉 <prgn>script</prgn>。
    </p>
    <p>
      如果您在 <prgn>script</prgn> 上使用了 <em>-t</em> 參數，您可以利用 
      <prgn>scriptreplay</prgn> 程式來重新播放整個過程：
     <example>
# scriptreplay ~/upgrade-&releasename;.time ~/upgrade-&releasename;.script
          </example>
    </p>
   </sect1>
   <sect1 id="updating_lists">
    <heading>
      更新套件的列表
    </heading>
    <p>
      First the list of available packages for the new release needs to be 
      fetched. This is done by executing:
    </p>
    <p>
     <example>
# aptitude update
	  </example>
    </p>
    <p>
      Running this the first time new sources are updated will print out 
      some warnings related to the availability of the sources. These 
      warnings are harmless and will not appear if you rerun the command 
      again.
    </p>
   </sect1>
   <sect1>
    <heading>
      確認您有足夠的空間可以用來進行昇級
    </heading>
    <p>
      在進行系統昇級之前，您必須確認在您開始進行 <ref id="upgrading_other"> 
      上寫的全系統昇級之時，您的系統有著足夠的硬碟空間。首先，在包含了 <file>/var/</file> 
      的檔案系統分割區裡必須擁有足夠的硬碟空間以容納那些將會安裝到您的系統上而暫時下載的套件。在下載完成之後，在其它的檔案系統分割區裡您應該會需要更多的空間以用來安裝昇級套件（它們很可能會包含需要更大空間的檔案及資料）以及在昇級過程中會一併安裝的新套件。如果您的系統並沒有足夠的空間，您可能在最後得到的是一個未完全昇級卻又難以還原的系統。
    </p>
    <p>
      <prgn>aptitude</prgn> 及 <prgn>apt</prgn> 
      都會替您顯示在安裝時所需的硬碟空間之詳盡資訊。在進行昇級之前，您可以得到這些估算值。請執行：
    </p>
    <p>
     <example>
# aptitude -y -s -f --with-recommends dist-upgrade
[ ... ]
更新了 XXX、新安裝了 XXX、要移除 XXX 而 XXX 將不會被昇級。
必須下載 xx.xMB/yyyMB 的檔案。在解壓縮之後將會用掉 AAAMB。
將會進行 下載/安裝/移除 套件。
       </example>
    </p>
    <p>
      如果您沒有足夠的空間可供昇級，請在事先就清出磁碟空間。您可以：
    </p>
    <p>
     <list>
      <item>
       <p>
         Remove packages that have been previously downloaded for 
         installation (at <file>/var/cache/apt/archive</file>), cleaning up 
         the package cache by running <prgn>apt-get autoclean</prgn> or 
         <prgn>aptitude autoclean</prgn> will remove unused package 
         files. If that does not give you enough space, you can clean up the 
         package cache further by running <prgn>apt-get clean</prgn> or 
         <prgn>aptitude clean</prgn>.
       </p>
      </item>
      <item>
       <p>
         Remove old packages you no longer use. If you have 
         <prgn>popularity-contest</prgn> installed, you can use 
         <prgn>popcon-largest-unused</prgn> to list the packages you do not 
         use in the system that occupy the most space. You can also use 
         <prgn>deborphan</prgn> or <prgn>debfoster</prgn> to find obsolete 
         packages (see <ref id="obsolete">). Alternatively you can start 
         <prgn>aptitude</prgn> into "visual mode" and find obsolete packages 
         under "Obsolete and Locally Created Packages".
       </p>
      </item>
      <item>
       <p>
         移除佔用了太多空間但目前尚用不著的套件。（您可以在昇級後再把它們重新安裝回來）。您可以利用 
         <prgn>dpigs</prgn>（包含於 <package>debian-goodies</package> 之中）或 
         <prgn>wajig</prgn>（執行 <tt>wajig size</tt>）來列出佔用最多磁碟空間的套件。
       </p>
      </item>
      <item>
       <p>
         把存放在 <file>/var/log/</file> 裡的系統記錄檔暫時移至其它的系統，或是乾脆刪除它們。
       </p>
      </item>
     </list>
    </p>
    <p>
      Note that in order to safely remove packages, it is advisable to 
      switch your <file>sources.list</file> back to &oldreleasename; as 
      described in <ref id="old-sources">.
    </p>
   </sect1>
   <sect1 id="minimal_upgrade">
    <heading>
      Minimal system upgrade
    </heading>
    <p>
      Before you start the full upgrade you have to make a minimal system 
      upgrade to ensure you have the basic system libraries upgraded.
    </p>
    <p>
      First run:
     <example>
# aptitude upgrade
          </example>
    </p>
    <p>
      This will upgrade a number of packages, include 
      <package>base-files</package>, <package>console-common</package>, and 
      <package>debconf</package>. You will be asked information about your 
      console keymap as well as the default level and frontend for package 
      configuration questions.
    </p>
    <p>
      You have to follow the minimal upgrade with:
     <example>
# aptitude install initrd-tools
          </example>
    </p>
    <p>
      This step will automatically upgrade <package>libc6</package> and 
      <package>locales</package> and will pull in SE linux support libraries 
      (<package>libselinux1</package>). At this point, some running services 
      will be restarted, including <prgn>xdm</prgn>, <prgn>gdm</prgn> and 
      <prgn>kdm</prgn>, as a consequence local X11 sessions will be 
      disconnected.
    </p>
    <p>
      The following step depends on your system configuration:
    </p>
    <p>
     <list>
      <item>
       <p>
         If you are running a system with a Desktop environment, you first 
         have to verify if you have <package>libfam0c102</package> and 
         <package>xlibmesa-glu</package> installed. You have them installed 
         if you have selected &oldreleasename;'s Desktop task but if you 
         have a custom-made environment you have to manually verify it:
        <example>
# dpkg -l "libfam*" | grep ^ii
# dpkg -l "xlibmesa-glu*" | grep ^ii
          </example>
         if you have them installed then you have to install the latest 
         versions from &releasename;. The following command will install 
         both, if you have only one of them you should remove the other:
        <example>
# aptitude install libfam0 xlibmesa-glu
          </example>
       </p>
       <p>
         Note that doing this will also install the File Alteration Monitor 
         (<package>fam</package>) as well as the RPC portmapper 
         (<package>portmap</package>) if not already available in your 
         system. Both packages will enable a new network service in the 
         system although they can both be configured to be bound to the 
         (internal) loopback network device.
       </p>
      </item>
      <item>
       <p>
         For all other systems, verify if you have any X Window System 
         packages installed by running the following command:
        <example>
# dpkg -l "xfree86-common*" | grep ^ii
          </example>
         Notice that if you selected some server tasks in &oldreleasename; 
         you might have parts of it installed. If you have the X Window 
         System installed you will need to upgrade to the latest version in 
         &releasename;:
        <example>
# aptitude install x11-common
          </example>
       </p>
       <p>
         If you are running a server system, with no X packages installed, 
         you do not need to do any additional installation steps.
       </p>
      </item>
     </list>
    </p>
    <p>
      Note: After this minimal upgrade has finished you might want to 
      consider upgrading the kernel before upgrading the full system, as 
      described in <ref id="newkernel">. Doing so reduces the timeframe in 
      which the system will not properly boot if rebooted accidentally. This 
      is because the full upgrade described in the next section will install 
      a new version of <prgn>udev</prgn> and will remove 
      <prgn>hotplug</prgn>. This might not be an option for systems with a 
      Desktop environment, as large parts of the system will be removed if 
      you do the kernel upgrade here.
    </p>
   </sect1>
   <sect1 id="upgrading_other">
    <heading>
      昇級系統的其它部份
    </heading>
    <p>
      那麼，現在已經準備好可以進行昇級作業的重頭戲了。請執行：
    </p>
    <p>
     <example>
# aptitude dist-upgrade
	  </example>
    </p>
    <p>
      This will perform a complete upgrade of the system, i.e. install the 
      newest available versions of all packages, and resolve all possible 
      dependency changes between packages in different releases. If 
      necessary, it will install some new packages (usually new library 
      versions, or renamed packages), and remove any conflicting obsoleted 
      packages.
    </p>
    <p>
      如果您是從光碟組來進行升級的話，系統將會在升級進行時不時要求您放入某張特定的光碟片。您可能會需要反覆放入同一張光碟數次；這是由於相關的套件被分散在多張光碟之中所造成的。
    </p>
    <p>
      如果昇級某些已安裝的套件至新版本時會改變其他套件的安裝狀態的話，這些套件就會被保留在原來的狀態（並顯示為 "留置, held 
      back"）。可以使用 <prgn>aptitude</prgn> 選擇這些套件並進行安裝，或是試著鍵入 <tt>aptitude -f 
      install <var>package</var></tt>，就能夠解決這個問題。
    </p>
   </sect1>
   <sect1 id="trouble">
    <heading>
      在升級過程中可能會發生的問題
    </heading>
    <p>
      如果在使用 <prgn>aptitude</prgn>、<prgn>apt-get</prgn> 或 <prgn>dpkg</prgn> 
      的過程中失敗了並顯示以下錯誤
     <example>
E: Dynamic MMap ran out of room
</example>
      那麼，就表示預設的快取空間不夠了。您可以從 <file>/etc/apt/sources.list</file> 
      中將您不需要的項目加上註解或是乾脆將它移去，或是增加快取空間，來解決這個問題。可以經由設定 
      <file>/etc/apt/apt.conf</file> 裡的 <tt>APT::Cache-Limit</tt> 
      來增加快取空間。假設您還沒有在這個檔案裡替這個變數設定任何的數值，那麼以下的命令應該可以替昇級的動作設定足夠的快取空間：<example>
     <example>
# echo 'APT::Cache-Limit "12500000";' >> /etc/apt/apt.conf
</example>
      在此則假設了您尚未在該檔案中設定這個變數。
    </p>
    <p>
      有時候您會需要啟用 APT::Force-LoopBreak 選項讓 APT 暫時移除某個重要的套件，以解決循環的 
      相互衝突(Conflicts) / 相互依存(Pre-Depends) 關係。<prgn>aptitude</prgn> 
      會對此提出警告，並終止升級的進行。您可以在 <<prgn>aptitude</prgn> 的指令行中加入 <tt>-o 
      APT::Force-LoopBreak=1</tt> 來解決這個問題。
    </p>
    <p>
      系統中的相依關係也可能混亂到需要手動介入才得以解決。通常這代表您需要使用 <prgn>aptitude</prgn> 或
     <example>
# dpkg --remove <var>package_name</var>
          </example>
      來清除一些會造成問題的套件，或
     <example>
# aptitude --fix-broken install
# dpkg --configure --pending
          </example>
    </p>
    <p>
      在極端的情況下，您可能需要利用類似以下的指令來強制進行重新安裝的動作：
     <example>
# dpkg --install <var>/path/to/package_name.deb</var>
          </example>
    </p>
    <p>
      如果您是由一個 "純粹" 的 &oldreleasename; 進行昇級的話，應該不會有檔案衝突的情況發生；但如果您安裝了非官方的 
      backports 套件時就不一定了。如果發生檔案衝突時，會產生類似以下的錯誤：
     <example>
Unpacking <var>&lt;package-name&gt;</var> (from <var>&lt;package-foo&gt;</var>) ...
dpkg: error processing <var>&lt;package-name-for-foo&gt;</var> (--install):
 trying to overwrite `<var>&lt;some-file-name&gt;</var>',
 which is also in package <var>&lt;package-bar&gt;</var>
dpkg-deb: subprocess paste killed by signal (Broken pipe)
 Errors were encountered while processing:
 <var>&lt;package-foo&gt;</var>
          </example>
    </p>
    <p>
      您可以強制移除出現在錯誤訊息裡最<em>後</em>一行的那個套件，以解決檔案衝突的問題：
     <example>
# dpkg -r --force-depends <var>package_name</var>
          </example>
    </p>
    <p>
      在問題都修正了之後，您就應該可以重新輸入先前所描述的 <tt>aptitude</tt> 指令並繼續升級的工作了。
    </p>
    <p>
      在升級的過程中，系統可能會詢問您一些問題，以便能對套件進行設定或重新設定。當您被問到是否要把在 
      <file>/etc/init.d</file> 或 <file>/etc/terminfo</file> 目錄中的檔案或是 
      <file>/etc/manpath.config</file> 這個檔案置換成套件維護者所提供的版本時，您通常必須回答 `yes' 
      以維護系統的一致性。您可以在稍後再復原為舊的設定檔，因為它們都會以在檔名後附加 <tt>.dpkg-old</tt> 的方式給保留下來。
    </p>
    <p>
      如果您不太確定要怎麼做的話，把套件或檔案的名稱寫下來，等稍後再慢慢將頭緒理出來。您可以在記錄檔中搜尋，以便能重新檢視在系統升級時出現在螢幕上的資訊。
    </p>
   </sect1>
  </sect>
  <sect id="newkernel">
   <heading>
     替您的 Kernel 及相關套件進行昇級
   </heading>
   <p>
     您應該在將您的套件昇級完畢後再各別進行 Linux Kernel 的昇級。您也許會想要自行手動進行，像是安裝某個 
     <package>linux-image-*</package> 套件，或是從原始碼中編譯一個自訂的 Kernel。請參閱本節中有關在昇級 
     Kernel 時所可能遇到的潛在問題之相關資訊。
   </p>
   <p>
     為了避免名稱上的混淆，所有的 Linux Kernel 套件已由 <package>kernel-*</package> 更名為 
     <package>linux-*</package>。
   </p>
    <![ %defaulted-2.4 [

   <p>
     如果您還在使用著 2.4 系列的 Kernel，也就是舊的穩定版的 Linux Kernel 系列，您應該昇級到 2.6 系列的 
     Kernel，因為 2.4 系列已不再被 &releasename; 支援了。如果您還在使用著 2.2 系列的 
     Kernel，在更新您的套件之前，您（至少）應該昇級到 2.4 系列的 Kernel，若能昇級到 2.6 系列的 Kernel 
     就再好不過了。一些在昇級至 2.6 時所會伴隨出現的常見問題已記述在 <ref id="upgrade-to-2.6"> 了。
   </p>
    ]]>

   <sect1>
    <heading>
      Installing the kernel metapackage
    </heading>
    <p>
      當您由 &oldreleasename; 完整昇級至 &releasename; 後，強烈建議您安裝某個 linux-image-2.6-* 
      虛擬套件。這個套件可能會在完整昇級的過程中被自動安裝。若想確認，請執行：
     <example>
# dpkg -l "linux-image*" | grep ^ii
          </example>
    </p>
    <p>
      如果您沒有看到任何輸出文字，那麼您將得手動安裝一個新的 linux-image 虛擬套件。若想得到可用的 linux-image-2.6 
      虛擬套件列表，請執行：
     <example>
# apt-cache search linux-image-2.6- | grep -v transition
          </example>
    </p>
    <p>
      如果您無法確定該選擇哪一個套件，請執行 <tt>uname -r</tt> 並查看是否有名稱類似的套件。比如說，如果您看到了  
      '2.4.27-3-686'，在此建議您安裝<package>linux-image-2.6-686</package>。您也可以利用 
      <prgn>apt-cache</prgn> 來查看每個套件的詳細說明來讓您能在其中選出最合適的套件。比如說：
     <example>
# apt-cache show linux-image-2.6-686
          </example>
    </p>
    <p>
      接下來，您應該使用 <tt>aptitude install</tt> 來進行安裝。當新的 Kernel 
      安裝完畢後，您應當找個適當時機重新開機，以便能享用新的 Kernel 版本所帶來的種種好處。
    </p>
    <p>
      對於那些比較富有冒險心的人，我們也提供了一個在 &debian; 上自行編譯 Kernel 的簡易方法。請安裝 
      <package>kernel-package</package> 工具並詳細閱讀在 
      <file>/usr/share/doc/kernel-package</file> 裡的說明文件。
    </p>
   </sect1>
   <sect1 id="upgrade-from-2.6">
    <heading>
      由某個 2.6 版的 Kernel 進行昇級
    </heading>
    <p>
      If you are currently running a 2.6 series kernel from &oldreleasename; 
      this upgrade will take place automatically after you do a full upgrade 
      of the system packages (as described in <ref id="upgradingpackages">).
    </p>
    <p>
      Take into account that the <prgn>udev</prgn> version in &releasename; 
      does not support kernel versions earlier than 2.6.15 (which includes 
      &oldreleasename; 2.6.8 kernels). Conversely the <prgn>udev</prgn> 
      version in &oldreleasename; will not work properly with the latest 
      kernels. As a consequence, the previous kernel package will probably 
      not boot properly after this upgrade. Similarly, there is a time 
      window through the upgrade in which <prgn>udev</prgn> has been 
      upgraded but not the latest kernel. If the system were to be rebooted 
      at this point, in the middle of the upgrade, it might not be bootable.
    </p>
    <p>
      Consequently, you might want to upgrade to the latest kernel before 
      doing the full upgrade. Before you can upgrade to the 2.6 series 
      kernel available in &releasename; you will have to upgrade to the 
      latest version of <package>initrd-tools</package>. To upgrade the 
      kernel before the upgrade, take all the steps up to and including the 
      steps related to the a minimal upgrade of the system, as described in 
      <ref id="minimal_upgrade">. Once <package>initrd-tools</package> have 
      been upgraded after those steps you can then do the following 
      (changing the kernel package name to the one most suited to your 
      system by substituting <em>&lt;flavor&gt;</em>):
     <example>
# aptitude install linux-image-2.6-&lt;flavor&gt;
        </example>
    </p>
    <p>
      This step will also update <package>libc6</package>, install 
      <prgn>udev</prgn>, and remove <package>base-config</package> and 
      <package>hotplug</package>.
    </p>
    <p>
      You can also take this step if you are using your own custom kernel 
      and want to use the kernel available in &releasename;. If your kernel 
      version is not supported by <prgn>udev</prgn> then it is recommended 
      you upgrade after the minimal upgrade. If your version is supported by 
      <prgn>udev</prgn> you can safely wait until after the full system 
      upgrade.
    </p>
   </sect1>
   <sect1 id="upgrade-from-2.4">
    <heading>
      Upgrading from a 2.4 kernel
    </heading>
    <p>
      If you have a 2.4 kernel installed, and your system relies on 
      <package>hotplug</package> for its hardware detection you should first 
      upgrade to a 2.6 series kernel from &oldreleasename; before attempting 
      the upgrade. Make sure that the 2.6 series kernel boots your system 
      and all your hardware is properly detected before you perform the 
      upgrade. The <package>hotplug</package> package is removed from the 
      system (in favor of <package>udev</package>) when you do a full system 
      upgrade. If you do not do the kernel upgrade before this your system 
      might not boot up properly from this point on. Once you have done an 
      upgrade to a the 2.6 series kernel in &oldreleasename; you can do a 
      kernel upgrade as described in <ref id="upgrade-from-2.6">.
    </p>
    <p>
      If your system does not rely on 
      <package>hotplug</package><footnote><p>You can have the kernel modules 
      needed by your system loaded statically through proper configuration 
      of <file>/etc/modules</file></p></footnote> you can delay the kernel 
      upgrade to after you have done a full system upgrade, as described in 
      <ref id="upgrading_other">. Once your system has been upgraded you can 
      then do the following (changing the kernel package name to the one 
      most suited to your system by substituting <em>&lt;flavor&gt;</em>):
     <example>
# aptitude install linux-image-2.6-&lt;flavor&gt;
        </example>
    </p>
   </sect1>
   <sect1>
    <heading>
      initrd-tools 己被廢棄
    </heading>
    <p>
      <package>initrd-tools</package> 已不再被支援且已被 
      <package>initramfs-tools</package> 及 <package>yaird</package> 所取代。若要昇級 
      &releasename; 版的 Kernel 將會預設安裝 <package>initramfs-tools</package>。<![ 
      %defaulted-2.4 [ 如果這是您第一次由 2.4 版昇級至 2.6 版的 Kernel，您必須使用 
      <package>initramfs-tools</package>。如果您正在使用著 2.2 或 2.4 版的 Kernel，使用 
      <package>yaird</package> 將會導致 linux-image-2.6 安裝失敗。]]>
    </p>
   </sect1>
   <sect1>
    <heading>
      devfs 己被廢棄
    </heading>
    <p>
      &releasename; 已不再提供對 <prgn>devfs</prgn> 的支援。在此建議使用者替而使用 
      <package>udev</package> 來進行動態的 <file>/dev</file> 管理。Debian Kernel 
      已不再提供對 <prgn>devfs</prgn> 的支援，所以 <prgn>devfs</prgn> 的使用者在昇新至 
      &releasename; 的 Kernel 之前必須手動進行轉換。
    </p>
    <p>
      如果您在 <file>/proc/mounts</file> 裡有看到 'devfs' 這個字串，那麼您十之八九正在使用著 
      <prgn>devfs</prgn>。所有還在使用著 <prgn>devfs</prgn> 版的名稱的設定檔必須要修正為指向 
      <prgn>udev</prgn> 版的名稱。一些很可能會使用著 <prgn>devfs</prgn>版的裝置名稱有 
      <file>/etc/fstab</file>、<file>/etc/lilo.conf</file>、<file>/boot/grub/menu.lst</file> 
      等等。 
    </p>
    <p>
      可以在錯誤回報 <url id="http://bugs.debian.org/341152" name="#341152"> 
      裡取得一些可能的問題的更詳盡資訊。
    </p>
   </sect1>
    <![ %i386-amd64-ia64 [

   <sect1>
    <heading>
      標準的 Kernel 將支援 SMP
    </heading>
    <p>
      Multiprocessor systems no longer require a *-smp flavor of the Linux 
      kernel. For &arch-title;, linux-image packages without the -smp suffix 
      support both uniprocessor and multiprocessor systems.
    </p>
   </sect1>
    ]]><![ %i386 [

   <sect1>
    <heading>
      386 kernel flavor deprecated
    </heading>
    <p>
      Support for the 80386 sub-architecture for &arch-title; has been 
      dropped in &releasename;. The 386 kernel flavor is no longer supported 
      and has been replaced by the new 486 flavor.
    </p>
   </sect1>
    ]]>

   <sect1 id="device-reorder">
    <heading>
      重新排序裝置列表
    </heading>
    <p>
      &releasename; features a more robust mechanism for hardware discovery 
      than previous releases. However, this may cause changes in the order 
      devices are discovered on your system, affecting the order in which 
      device names are assigned. For example, if you have two network 
      adapters that are associated with two different drivers, the devices 
      eth0 and eth1 refer to may be swapped. Please note that the new 
      mechanism means that if you e.g. exchange ethernet adapters in a 
      running &releasename; system, the new adapter will also get a new 
      interface name.
    </p>
    <p>
      For network devices, you can avoid this reordering by using the 
      <prgn>ifrename</prgn> utility to bind physical devices to specific 
      names at boot time. See <manref section="8" name="ifrename"> and 
      <manref section="5" name="iftab"> for more information. You can also 
      avoid this by using <prgn>udev</prgn> rules, more specifically, 
      through the definitions at 
      <file>/etc/udev/rules.d/z25_persistent-net.rules</file><footnote><p>The 
      rules there are automatically generated to have persistent names for 
      network interfaces.</p></footnote>. Both alternatives 
      (<prgn>ifrename</prgn> and <prgn>udev</prgn>) should not be used at 
      the same time.
    </p>
    <p>
      在儲存裝置上，您可以藉由 <package>initramfs-tools</package> 
      並將其設定為使用和目前相同的載入順序來載入儲存裝置的驅動模組以避開這個問題。為此，您可以查看 <prgn>lsmod</prgn> 
      的輸出來確認您的系統載入儲存裝置的驅動模組的順序。<prgn>lsmod</prgn> 
      會以相反的順序列出載入的模組。也就是說，在列表中的第一個模組是最後載入的。
    </p>
    <p>
      但是，在開機後移除或重新載入模組將會影響這份列表的順序。同時，您的 Kernel 也許會以靜態連結至某些模組，所以這些名稱將不會出現在 
      <prgn>lsmod</prgn> 的輸出裡。您也可以經由查看 <file>/var/log/kern.log</file> 或 
      <prgn>dmesg</prgn> 的輸出來辨認出這些驅動的名稱及載入順序。
    </p>
    <p>
      將這些模組名稱以它們在開機時應有的載入順序新增到 <file>/etc/initramfs-tools/modules</file> 
      裡。有些模組名稱在 &oldreleasename; 及 &releasename; 裡是有所不同的。比如說，sym53c8xx_2 
      已變成了 sym53c8xx。
    </p>
    <p>
      然後，您將必須執行 <tt>update-initramfs -k all</tt> 來重新產生您的 initramfs 影像。
    </p>
    <p>
      若您使用的是 &releasename; 版的 Kernel 及 
      <prgn>udev</prgn>，您也許要重新設定您的系統以便能以和驅動載入順序無關的別名來進行存取。這些別名會分門別類得放在 
      <file>/dev/disk/</file> 裡。
    </p>
   </sect1>
    <![ %ia64 [

   <sect1>
    <heading>
      重新排序串列裝置
    </heading>
    <p>
      如果您手上的是 HP 的機器且您正在使用 MP 串列主控台連接埠（在三頭的連接線上，其連接器有標註『console』者），Kernel 
      的昇級將會中斷您的主控台！
    </p>
    <p>
      Upon reboot, the system will show up the message "Loading initrd...." 
      but it will stop there. Notice that systems with outdated firmware 
      will show similar symptoms, although the issue is related to kernel 
      incompatibilities (see <ref id="upgrade-to-2.6">).
    </p>
    <p>
      請在昇級之前閱讀以下資訊。
    </p>
    <p>
     <list>
      <item>
       <p>
         因為主控台裝置將會由 <file>ttyS0</file> 變成 
         <file>ttyS1</file>，<file>ttyS2</file> 或 <file>ttyS3</file>，所以
        <list>
         <item>
          <p>
            請編輯 <file>/etc/inittab</file> 並替 <file>/dev/ttyS1</file> 
            (rx4640, rx5670, rx7620, rx8620, 
            Superdome)，<file>/dev/ttyS2</file> (rx1600) 或 
            <file>/dev/ttyS3</file> (rx2600) 新增一個項目。
          </p>
         </item>
         <item>
          <p>
            編輯 <file>/etc/securetty</file> 以新增 
            <file>ttyS1</file>，<file>ttyS2</file> 或 <file>ttyS3</file>。
          </p>
         </item>
         <item>
          <p>
            保留在 <file>/etc/inittab</file> 中原有的 <file>ttyS0</file> 及 
            <file>/etc/securetty</file> 這樣您才可以繼續以舊的 Kernel 開機。
          </p>
         </item>
        </list>
       </p>
      </item>
      <item>
       <p>
         編輯 <file>/etc/elilo.conf</file> 並移除所有的 "console=" 參數。
       </p>
      </item>
      <item>
       <p>
         執行 <prgn>elilo</prgn> 來以新的設定安裝開機程式。
       </p>
      </item>
      <item>
       <p>
         重新開機並使用 EFI 開機選項管理選單來選擇主控台輸出、輸入及標準錯誤的正確裝置。然後進行冷啟動讓這些設定生效。
       </p>
       <p>
         針對 MP 的主控台，請小心得在目錄中選定 "Acpi(HWP0002,700)/Pci(...)/Uart" 裝置。
       </p>
      </item>
     </list>
    </p>
    <p>
      有關於這些改變及疑難排解技巧的更多詳盡資訊可於 <url 
      id="http://lists.debian.org/debian-ia64/2005/01/msg00008.html"> 取得。
    </p>
   </sect1>
    ]]>

  </sect>
  <sect id="nownownow">
   <heading>
     在重新開機前應該完成的工作
   </heading>
   <p>
     當 <tt>aptitude dist-upgrade</tt> 
     執行完畢後，系統升級「形式上」已經完成了，但仍然有一些工作是在您下次重新啟動系統<em>之前</em>應該要加以注意的。
   </p>
    <![ %sparc [

   <sect1 id="missingdrivers">
    <heading>
      Possible missing drivers in initrd
    </heading>
    <p>
      The &releasename; kernels do not yet have full sysfs support for the 
      native sparc sbus. <package>initramfs-tools</package> relies on this 
      to include drivers for disk controllers in the initrd. If a driver is 
      not included in the initrd, your system may fail to boot.
    </p>
    <p>
      If your system uses the <tt>esp</tt> or <tt>qlogicpti</tt> module to 
      access your hard disks, you will need that module in 
      <file>/etc/initramfs-tools/modules</file> and regenerate the initrd 
      before you reboot your system. The initrd can be regenerated using:
     <example>
# update-initramfs -u -k all
          </example>
    </p>
     ]]><![ %hppa [

   </sect1>
   <sect1 id="missingdrivers">
    <heading>
      Possible missing drivers in initrd
    </heading>
    <p>
      The &releasename; kernels do not yet have full sysfs support for the 
      native HP bus. <package>initramfs-tools</package> relies on this to 
      include drivers for disk controllers in the initrd. If a driver is not 
      included in the initrd, your system may fail to boot.
    </p>
    <p>
      If your system uses the <tt>lasi700</tt> or <tt>zalon7xx</tt> module 
      to access your hard disks, you will need that module in 
      <file>/etc/initramfs-tools/modules</file> and regenerate the initrd 
      before you reboot your system. The initrd can be regenerated using:
     <example>
# update-initramfs -u -k all
          </example>
    </p>
     ]]><![ %i386-amd64 [

   </sect1>
   <sect1 id="rerunlilo">
    <heading>
      重新執行 lilo
    </heading>
    <p>
      If you are using <package>lilo</package> as your bootloader (it is the 
      default bootloader for some installations of &oldreleasename;) it is 
      strongly recommended that you rerun lilo after the upgrade:
     <example>
# /sbin/lilo
          </example>
    </p>
    <p>
      請注意到，如果您並沒有昇級您的系統的 kernel，這個動作還是必要的，因為 lilo 的第二階段可能會因為套件的昇級而改變了。
    </p>
    <p>
      同時，再次查看您的 <file>/etc/kernel-img.conf</file> 內容並確認其中有著 
      <em>do_bootloader = Yes</em>。那麼，在 Kernel 昇級後就會必定會自動執行開機程式了。
    </p>
    <p>
      如果您在執行 <prgn>lilo</prgn> 時遇到了任何問難，請再次檢查在 <file>/</file> 裡指向 
      <file>vmlinuz</file> 及 <file>initrd</file> 的符號連結，以及您的 
      <file>/etc/lilo.conf</file> 的內容是否有什麼不對勁的地方。
    </p>
    <p>
      If you forgot to rerun <prgn>lilo</prgn> before the reboot or the 
      system is accidentally rebooted before you could do this manually, 
      your system might fail to boot. Instead of the lilo prompt, you will 
      only see <em>LI</em> when booting the system<footnote><p>For more 
      information on <prgn>lilo</prgn>'s boot error codes please see <url 
      id="http://tldp.org/HOWTO/Bootdisk-HOWTO/a1483.html" name="The Linux 
      Bootdisk HOWTO">.</p></footnote>. In order to recover from this you 
      will have to start up a media installation disk in <em>rescue</em> 
      mode. For more information on how to do this please review the <url 
      id="http://wiki.debian.org/DebianInstaller/FAQ" name="DebianInstaller 
      FAQ">.
    </p>
   </sect1>
    ]]>

   <sect1 id="mdadm">
    <heading>
      更新 mdadm
    </heading>
    <p>
      mdadm 現在需要設定檔來在 initial ramdisk 及系統初始化過程中建構 MD 
      陣列。在該套件被更新後、<strong>在您重新啟動之前</strong>，請務必閱讀並依照 
      <file>/usr/share/doc/mdadm/README.upgrading-2.5.3.gz</file> 
      的內容進行。這個檔案的最新版可以在 <url 
      id="http://svn.debian.org/wsvn/pkg-mdadm/mdadm/trunk/debian/README.upgrading-2.5.3?op=file"> 
      取得，若遭遇任何問題請不妨參閱。
    </p>
   </sect1>
  </sect>
  <sect id="for_next">
   <heading>
     Preparing for the next release
   </heading>
   <p>
     After the upgrade there are several things you can do to prepare for 
     the next release.
   </p>
   <p>
    <list>
     <item>
      <p>
        If using <prgn>grub</prgn>, edit <file>/etc/kernel-img.conf</file> 
        and adjust the location of the <prgn>update-grub</prgn> program 
        changing <file>/sbin/update-grub</file> to 
        <file>/usr/sbin/update-grub</file>.
      </p>
     </item>
     <item>
      <p>
        Unmark the 2.6 kernel image installed as not an automatic package, 
        so that <prgn>aptitude</prgn> never considers it unused:
       <example>
# aptitude unmarkauto linux-image-2.6-&lt;flavor&gt;
</example>
      </p>
     </item>
     <item>
      <p>
        Remove &oldreleasename;'s kernel metapackages by running:
       <example>
# aptitude purge kernel-image-2.6-&lt;flavor&gt;
</example>
      </p>
     </item>
     <item>
      <p>
        Move any kernel configuration values at 
        <file>/etc/network/options</file> to <file>/etc/sysctl.conf</file>.
      </p>
     </item>
     <item>
      <p>
        Remove obsolete and unused packages as described in <ref 
        id="obsolete">. You should review which configuration files they use 
        and consider purging the packages to remove their configuration 
        files
      </p>
     </item>
    </list>
   </p>
  </sect>
  <sect id="obsolete">
   <heading>
     被廢棄的套件
   </heading>
   <p>
     Introducing several thousand new packages, &releasename; also retires 
     and omits more than two thousand old packages that were in 
     &oldreleasename;. It provides no upgrade path for these obsolete 
     packages. While nothing prevents you from continuing to use an obsolete 
     package where desired, the Debian project will usually discontinue 
     security support for it a year after &releasename;'s 
     release<footnote><p>Or for as long as there is not another release in 
     that time frame. Typically only two stable releases are supported at 
     any given time.</p></footnote>, and will not normally provide other 
     support in the meantime. Replacing them with available alternatives, if 
     any, is recommended.
   </p>
   <p>
     There are many reasons why packages might have been removed from the 
     distribution: they are no longer maintained upstream; there is no 
     longer a Debian Developer interested in maintaining the packages; the 
     functionality they provide has been superseded by different software 
     (or a new version); or they are no longer considered suitable for 
     &releasename; due to bugs in them. In the latter case, packages might 
     still be present in the "unstable" distribution.
   </p>
   <p>
     因為套件管理的前端介面會將這些套件標示為 
     "廢棄(obsolete)"，因而我們可以很輕易得就可以判斷在一個已經過昇級後的系統裡，哪些套件已遭廢棄了。如果您所使用的是 
     <prgn>aptitude</prgn>，您可以在【廢棄及本機所建立的套件, Obsolete and Locally Created 
     Packages】這個項目裡看到這些套件的列表。在 <prgn>dselect</prgn> 
     裡也提供了類似的功能但它所顯示的列表可能會有點不太一樣。同時，如果您之前是手動使用 <prgn>aptitude</prgn> 來安裝 
     &oldreleasename; 
     的套件，它會持續得追蹤這些您手動安裝的套件，並且如果有某個套件被移除了，而使得這些因相依關係而被安裝的套件已經不再有任何作用時，它可以找出這些套件並將其標示為 
     "廢棄"。而像是 <prgn>deborphan</prgn> 並不會將您手動安裝的套件標示為 "廢棄"；但 
     <prgn>aptitude</prgn> 則是完全相反，即使這些套件是因為相依性才被自動安裝進來的。
   </p>
   <p>
     還有一些其它的套件可以讓您用來尋找這些廢棄了的套件，像是 
     <prgn>deborphan</prgn>、<prgn>debfoster</prgn> 或 
     <prgn>cruft</prgn>。其中推薦使用 
     <prgn>deborphan</prgn>，因為它在預設的模式下只會報告已遭廢棄了的函式庫：位於 "libs" 或 "oldlibs" 
     區的套件就表示它們已不再被其它的套件所使用了。但請不要輕率得依據這些工具所回報的列表就把這些套件給移掉了，尤其是您在執行時使用的不是預設的，而是較為寬鬆的選項時，它們很可能會因而做出不正確的判定。因此在此強烈建議您，在進行移除的動作之前，您必須親自再重新檢視一次這些將要被移除的套件，包括它們的內容、大小，及它們的詳細說明。
   </p>
   <p>
     在 <url id="&url-bts;" name="Debian 錯誤追蹤系統"> 
     裡常常會提供了為什麼某個套件會被移掉的相關資訊。您可以使用該套件本身的 bug report 資料庫，或是在 <url 
     id="&url-bts;cgi-bin/pkgreport.cgi?pkg=ftp.debian.org&#38;archive=yes" 
     name="ftp.debian.org pseudo-package"> 裡的 bug report 資料庫來重新檢視這些資訊。
   </p>
   <sect1 id="dummy">
    <heading>
      替代 (Dummy) 套件
    </heading>
    <p>
      有時為了讓系統能更易於管理，有些原來是包含於 &oldreleasename; 的套件在 &releasename; 
      裡已被分開成數個套件。在此況狀下，為了能讓昇級的過程更加順遂，&releasename; 通常會採取提供 替代 (Dummy) 
      套件的方式：使用一個和原本是包含於 &oldreleasename; 
      的套件相同名稱的套件，但它的內容卻是空的，但利用相依上的關聯性來使得新的套件能被安裝。這些替代套件在昇級之後就會被視同廢棄套件了，您可以放心得移除它們。
    </p>
    <p>
      大多數（但不是所有）的替代套件會在套件的說明中會介紹它們的用途，雖然它們的說明的格式並不統一，所以您可能會發現 
      <prgn>deborphan</prgn> 在搭配 <tt>--guess</tt> 
      選項時可以輕易得把它們從您的系統中找出來。請注意，有些替代套件並不希望您在昇級後就將其刪除，因為日後您可以替而使用它來追蹤是否有任何新版本出現。
    </p>
   </sect1>
  </sect>
 </chapt>
 <chapt id="information">
  <heading>
    在 &releasename; 您必須知道的一些問題
  </heading>
  <sect id="problems">
   <heading>
     潛在的問題
   </heading>
   <p>
     有時，更動會產生一些我們無法有效避免的次要問題，或者是會導致我們在其它地方遇到錯誤。我們在此記述了一些我們所知道的問題。請同時參閱勘誤表、相關套件之說明文件、錯誤回報及其它在 
     <ref id="morereading"> 中所提及的資訊。
   </p>
   <sect1 id="window-scaling">
    <heading>
      有些網路站台無法用 TCP 連線。
    </heading>
    <p>
      Since 2.6.17, Linux aggressively uses TCP window scaling which is 
      specified in RFC 1323. Some servers have a broken behavior, and 
      announce wrong window sizes for themselves. Please see the bugs <url 
      id="http://bugs.debian.org/381262" name="#381262"> and <url 
      id="http://bugs.debian.org/395066" name="#395066"> for more 
      information.
    </p>
   </sect1>
    <![ %i386 [

   <sect1 id="poweroff">
    <heading>
      自動關機無法正常運作
    </heading>
    <p>
      在一些較為老舊的系統上，<tt>shutdown -h</tt> 將再也無法將系統關機了。（只能做到停止運作）。這是因為在此必須使用 apm 
      才行。請在像是 <package>grub</package> 或 <package>lilo</package> 的設定檔案裡，在 
      Kernel 的命令列上新增 <tt>acpi=off apm=power_off</tt> 應該就能解決這個問題。請參閱 <url 
      id="http://bugs.debian.org/390547" name="#390547"> 以取得更多詳盡資訊。
    </p>
   </sect1>
    ]]>

   <sect1 id="apt-pdiff">
    <heading>
      Apt 會在更新時下載小檔案
    </heading>
    <p>
      <prgn>apt</prgn> 
      新增了只會下載套件之間的差異檔的功能。這對於那些有著糟糕的網路環境的人們有極大的助益。但有些有著速度不錯的鏡像站的人們可能想要關閉這個功能。要關閉這個功能只要將 
      <tt>Acquire::Pdiffs "false";</tt> 加到 <file>/etc/apt/apt.conf</file> 
      裡即可。
    </p>
   </sect1>
    <![ %i386 [

   <sect1 id="hp-acpi">
    <heading>
      在 &releasename; 的 Kernel 裡，有些 HP 筆記型電腦機種的 ACPI 支援被關閉了
    </heading>
    <p>
      Certain models of HP laptops have an ACPI BIOS that is incompatible 
      with the Linux 2.6.18 kernel shipped in &releasename;, which would 
      prevent the fans from spinning up leading to unnecessary heat 
      stress. Also, fans might not work after the system is suspended. The 
      kernel therefore disables ACPI support internally when it detects 
      certain ACPI BIOS versions. Models known to be affected by this change 
      include the HP nx6125, nx6120, nx6325, nc6120 and nc6000 models.
    </p>
    <p>
      在這些系統上有需要用到 ACPI 支援的使用者可以安裝 Linux 2.6.19 或更新版的 kernel。請參閱 Debian bug 
      <url id="http://bugs.debian.org/404143" name="#404143"> 及 <url 
      id="http://bugs.debian.org/400488" name="#400488">，以及 Linux Kernel 的 
      bugs <url id="http://bugzilla.kernel.org/show_bug.cgi?id=5534" 
      name="#5534"> 及 <url 
      id="http://bugzilla.kernel.org/show_bug.cgi?id=7122" name="#7122"> 
      以取得更多詳盡資訊。
    </p>
   </sect1>
    ]]>

  </sect>
   <![ %defaulted-2.4 [

  <sect id="upgrade-to-2.6">
   <heading>
     將 Kernel 昇級至 2.6
   </heading>
   <p>
     和 2.4 系列的 Kernel 相較，2.6 系列包含了很多重大的改變。像是模組的名稱已經有所不同， 
     有不少的驅動程式被局部甚至是完全改寫。所以要把一些舊有版本的 Kernel 昇級至 2.6 
     並不會是件容易事。這段章節的目的就是要讓您知道一些您可能會遇到的問題。
   </p>
   <p>
     所以，在此強烈建議您不要把昇級至 2.6 Kernel 做為將 &oldreleasename; 昇級至 &releasename; 
     的計劃的一部份。您的首要工作應該是確認您的系統和舊的 Kernel 或是 &releasename; 上的 2.4 系列的 Kernel 
     搭配時能夠正常運作。而將 Kernel 昇級至 2.6 則應該視為個別的計劃。
   </p>
   <p>
     如果您是自行由原始程式碼來編譯 Kernel 的，請在使用 2.6 Kernel 來重新開機前確認您已安裝了 
     <package>module-init-tools</package>。這個套件在 2.6 的 Kernel 裡是用來取代 
     <package>modutils</package> 的。如果您安裝了任何的 <package>linux-image</package> 
     套件，這個套件會因相依上的因素而被自動地安裝上去。
   </p>
   <p>
     如果您使用了 <em>LVM</em>，請在重新開機前確認您已安裝了 <package>lvm2</package>，因為 2.6 的 
     Kernel 並不直接支援 LVM1，而是使用相容的 <package>lvm2</package>（dm-mod 模組）來存取 LVM1 的 
     volumes。您還是可以保留已安裝了的 <package>lvm10</package>；而進行初始化的 Script 
     將會進行偵測並依所使用的 Kernel 的不同而自動載入適當的版本。
   </p>
   <p>
     如果您在 <file>/etc/modules</file> 
     檔案（在系統開機時所要載入的模組列表）有自行加入的項目的話，請您要記得有些模組的名稱已經有所改變，如果真的如此，您必須修改這個檔案並使用新的模組名稱。
   </p>
    <![ %i386-amd64 [

   <p>
     For some SATA disk controllers, the device assigned to a drive and its 
     partitions may change from <file>/dev/hdX</file> to 
     <file>/dev/sdX</file>. If this happens, you will have to modify your 
     <file>/etc/fstab</file> and bootloader configuration 
     accordingly. Unless these changes are made correctly, your system may 
     not boot correctly<footnote><p>It will boot the kernel but will fail 
     when trying to mount the root filesystem and will abort with an error 
     <em>waiting for root filesystem</em> followed by <em>unable to mount 
     /dev/hdX ..not found</em>. You can use the <prgn>initramfs</prgn> shell 
     to fix this issue, after you identify the names newly assigned devices 
     in the kernel boot messages or by reviewing the contents of 
     <file>/dev/disk</file>.</p></footnote>.
   </p>
    ]]><![ %ia64 [

   <p>
     HP Itanium systems running older firmware are incompatible with the 2.6 
     kernel in &releasename;. That means you should upgrade your system to 
     the latest firmware before upgrading your kernel. It is recommended you 
     do this before the system upgrade, as if you are already running a 2.6 
     kernel you will automatically retrieve the latest kernel when upgrading 
     the rest of the system (see <ref id="upgrading_other">). Failing to do 
     this will result in an system that does not boot,
   </p>
    ]]>

   <p>
     Once you have installed your 2.6 kernel, but before you reboot, make 
     sure you have a recovery method. First, make sure that the bootloader 
     configuration has entries for both the new kernel and the old, working 
     2.4 kernel. You should also ensure you have a "rescue" floppy or CD-ROM 
     to hand, in case misconfiguration of the bootloader prevents you 
     booting the old kernel.
   </p>
    <![ %not-s390 [<![ %not-amd64 [

   <sect1 id="2.6-keyboard">
    <heading>
      鍵盤的設定
    </heading>
    <p>
      在 2.6 Kernel 裡最具衝擊性的改變就是發生在輸入層的根本改變。這個改變將會使得所有的鍵盤都會看起來像是 "一般" 的 PC 
      鍵盤。也就是說，如果您正在使用的鍵盤和一般的有所不同的話，（例： USB-MAC 或 Sun 鍵盤），在使用新的 2.6 的 Kernel 
      重新開機後，您的鍵盤很可能會無法正常運作。
    </p>
    <p>
      如果您可以從另一個系統來使用 SSH 連進去那台主機，您可以執行 <tt>dpkg-reconfigure 
      console-data</tt>，並選擇【Select keymap from full 
      list】設定，然後選擇【pc】鍵盤來解決這個問題。
    </p>
    <p>
      如果您在 Consle 所使用的鍵盤受到了影響，那麼您大概也需要替 X Window System 重新設定鍵盤。您可以執行 
      <tt>dpkg-reconfigure xerver-xorg</tt> 或是直接編輯 
      <file>/etc/X11/xorg.conf</file> 來達到這個目的。請不要忘了要閱讀在 <ref id="nownownow"> 
      裡所提到的文件。
    </p>
     <![ %i386 [

    <p>
      這個問題似乎不會影響到 &arch-title; 架構的機器，因為所有的 PS/2 及絕大多數的 USB 鍵盤應該早已設定為 "一般的" 
      PC 鍵盤了。
    </p>
     ]]><![ %not-i386 [

    <p>
      請注意，如果您正在使用的是 USB 鍵盤，它可能會被設定為 "一般的" PC 鍵盤或是設定為 USB-MAC 
      鍵盤。如果是前者的話，您將不會受到這個問題的影響。
    </p>
     ]]>

   </sect1>
    ]]>

   <sect1 id="2.6-mouse">
    <heading>
      滑鼠的設定
    </heading>
    <p>
      再一次地，因為輸入層的改變，如果您在昇級至 2.6 的 kernel 後滑鼠無法正常運作的話，您也許得要重新設定 X Window 
      System 及 <package>gpm</package> 
      才行。這大多是因為負責讀取滑鼠資料的裝置已經改變了，您也許還得載入其它額外的模組。
    </p>
     <![ %sparc [

    <p>
      如果您目前已將 X 設為使用 <file>/dev/sunmouse</file>，您也許得將其修正為 
      <file>/dev/psaux</file>。
    </p>
     ]]>

   </sect1>
   <sect1 id="2.6-sound">
    <heading>
      設定聲音
    </heading>
    <p>
      在 2.6 系列的 Kernel 裡，比起使用舊式的 OSS 音效驅動程式，使用 ALSA 
      的音效驅動程式將會是個更佳選擇。在預設上是以模組的方式提供 ALSA 音效驅動程式。為了讓音效正確運作，必須為您的音效硬體載入適切的 
      ALSA 模組。如果您額外安裝了 <package>alsa-base</package> 
      套件、<package>hotplug</package> 套件或是 <package>discover</package> 
      套件，那麼適切的 ALSA 模組會被自動載入。<package>alsa-base</package> 套件同時也會將 OSS 
      模組"列入黑名單" 以防止它們被 <prgn>hotplug</prgn> 及 <prgn>discover</prgn> 載入。如果您在 
      <file>/etc/modules</file> 中有加入 OSS 模組，您應該將它們移除。
    </p>
   </sect1>
    ]]>

   <sect1 id="2.6-udev">
    <heading>
      轉換到 2.6 後可能會啟用 udev
    </heading>
    <p>
      <package>udev</package> 是一個 devfs 在使用者層級的實作。它掛載在 <file>/dev/</file> 
      目錄下並能針對那些被 Kernel 所支援的裝置進行即時的目錄配置。它是藉由和 <package>hotplug</package> 
      搭配合作的方式來偵測新的裝置，並能夠在移除或載入 Kernel 
      的模組的同時，動態得新增或移除相對應的裝置。<package>udev</package> 僅能和 2.6 的 Kernel 搭配運作。
    </p>
    <p>
      因為 <package>udev</package> 將會因為和 2.6 Kernel 搭配使用的新 initrd 產生程式 
      (<package>initramfs-tools</package>) 有著相依性而被自動安裝。昇級至 2.6 Kernel 一般會啟用 
      <package>udev</package>。如果您安裝了其它的 initrd 產生程式，像是 
      <package>yaird</package>，您可以避免安裝 <package>udev</package>。但在此建議使用 
      <package>initramfs-tools</package> 做為 initrd 的產生程式。
    </p>
    <p>
      雖然 <package>udev</package> 
      已經過了廣泛的測試，但您還是可能在某些裝置上遇到一些必須加以修正的小問題。最常見的問題是某個裝置的權限及/或所有權上的變更。在某些狀況下，有些裝置在預設上是不會被建立的。（如：<file>/dev/video</file> 
      和 <file>/dev/radio</file>）。
    </p>
    <p>
      <package>udev</package> 提供了配置方案以便您能處理這些問題。請查看 <manref name="udev" 
      section="8"> 和 <file>/etc/udev</file> 以取得更詳盡的資訊。
    </p>
   </sect1>
  </sect>
   ]]>

  <sect id="xorg">
   <heading>
     將 XFree86 轉換至 X.Org
   </heading>
   <p>
     The transition to X.Org involves some structural changes. In case all 
     installed packages are from Debian and also included in &releasename;, 
     the upgrade should work without problems. However, experience has shown 
     that there are a few changes to be aware of, as they can potentially 
     cause issues during the upgrade.
   </p>
   <p>
     The most important change is that <file>/usr/X11R6/bin</file> has been 
     dropped and only remains as a symlink to <file>/usr/bin</file>. This 
     means the directory has to be empty at the time the new packages are 
     installed. The new packages conflict with most packages that used 
     <file>/usr/X11R6/bin</file>, but in some cases manual intervention may 
     be needed. Please remember to not run the distribution upgrade from 
     within an X session.
   </p>
   <p>
     萬一在安裝 X.Org 時昇級作業中斷了，您應該檢查是否還有什麼檔案還遺留在 <file>/usr/X11R6/bin</file> 
     裡。您可以使用 <tt>dpkg -S</tt> 來找到是哪些 Debian 套件安裝了那些檔案（如果有的話），然後用 <tt>dpkg 
     --remove</tt> 來移除這些套件。請記下您移除了哪些套件，那麼您可以在稍後再安裝其它的替代套件。在繼續進行昇級之前，在  
     <file>/usr/X11R6/bin</file> 裡的所有檔案必須被清除掉。
   </p>
   <p>
     請參閱 <url id="http://wiki.debian.org/Xorg69To7"> 以取得更多詳盡資訊及其它的問題。
   </p>
  </sect>
  <sect id="exim">
   <heading>
     將 exim 昇級至 exim4
   </heading>
   <p>
     被 &releasename; 釋出版本所廢棄的套件之一是 Mail Transfer Agent (MTA) 
     <package>exim</package>，它已完全被新的 <package>exim4</package> 套件所取代。
   </p>
   <p>
     <prgn>exim</prgn>（3.xx 版）已有多年沒有上游者在繼續維護了，而同時 Debian 
     也中止了對這個版本的支援。如果您還在用著 <prgn>exim</prgn> 3.xx，請手動將您的 
     <package>exim</package> 昇級為 <package>exim4</package>。因為 
     <package>exim4</package> 已包含在 &oldreleasename; 之中，您可以自行選擇是在昇級至 
     &releasename; 之前或之後在您的 &oldreleasename; 系統上進行這項昇級。請牢記，您舊版的 
     <package>exim</package> 套件將不會進行昇級，且安全維護也將在 &oldreleasename; 的支援中止之後停止。
   </p>
   <p>
     在 Debian 裡的 <package>exim4</package> 套件己有眾多的文件。該套件的首頁為在 Debian Wiki 上的 
     <url id="http://wiki.debian.org/PkgExim4">，而 README 檔案可以在 <url 
     id="http://pkg-exim4.alioth.debian.org/README/README.Debian.html"> 
     及套件中找到。
   </p>
   <p>
     在 README 檔案中有個關於 Packaging 的章節，說明了和我們所提供的套件之間的一些差異，它還有一個章節是從 
     <prgn>Exim</prgn> 3 昇級的一些說明，這個將對於您在實地轉換時有所幫助。
   </p>
  </sect>
  <sect id="apache2">
   <heading>
     升級 apache2
   </heading>
   <p>
     Apache 已被昇級為新版的 2.2。雖然對於一般使用者而這並不是很重要，但還是有些潛在的問題必須知道。
   </p>
   <p>
     在 <url id="http://httpd.apache.org/docs/2.2/upgrading.html"> 
     上包含了上游的改變，請參閱這個網頁，並請特別牢記：
    <list>
     <item>
      <p>
        所有的模組必須重新編譯
      </p>
     </item>
     <item>
      <p>
        認証模組已被重新排列並重新命名了
      </p>
     </item>
     <item>
      <p>
        有些設定項目被更名了
      </p>
     </item>
    </list>
   </p>
   <p>
     而僅適於 Debian 的改變包括了 SSL 字串已不再被定義了，因為 ssl 現已被預設的套件所支援
   </p>
  </sect>
  <sect id="php-globals">
   <heading>
     關閉不安全的 php 設定
   </heading>
   <p>
     多年以來，在 PHP 裡啟用 <tt>register_globals</tt> 
     設定是眾所皆知的既不安全且極為冒險的，而這個選項也被多次在預設上被關閉。這個設定終於因為太危險而在 Debian 
     系統裡被關閉了。同樣的問題也發生在 <tt>safe_mode</tt> 及 <tt>open_basedir</tt> 
     上，因為它們已有段時間沒有在繼續維護了。
   </p>
   <p>
     從這個釋出版本開始，Debian 安全團隊將不再替一些已知是不安全的 php 設定提供安全上的支援。最重要的是，將不再關注於因為開啟了 
     <tt>register_globals</tt> 而導致的問題。
   </p>
   <p>
     如果您所運行的老舊應用程式需要使用 <tt>register_globals</tt>，請在各別的頁面中，像是在 Apache 
     的設定檔裡將其啟用。可以在 PHP 
     文件目錄(<file>/usr/share/doc/php4</file>、<file>/usr/share/doc/php5</file>) 
     裡的 <file>README.Debian.security</file> 裡找到更多的詳盡資訊。
   </p>
  </sect>
  <sect id="mozilla-security">
   <heading>
     Mozilla 家族的安全狀態
   </heading>
   <p>
     The Mozilla programs <package>firefox</package> and 
     <package>thunderbird</package> (rebranded in Debian to 
     <package>iceweasel</package> and <package>icedove</package>, 
     respectively), are important tools for many users. Unfortunately the 
     upstream security policy is to urge users to update to new upstream 
     versions, which conflicts with Debian's policy of not shipping large 
     functional changes in security updates. We cannot predict it today, but 
     during the lifetime of &releasename; the Debian Security Team may come 
     to a point where supporting Mozilla products is no longer feasible and 
     announce the end of security support for Mozilla products. You should 
     take this into account when deploying Mozilla and consider alternatives 
     available in Debian if the absence of security support would pose a 
     problem for you.
   </p>
  </sect>
  <sect id="kde-desktop-changes">
   <heading>
     KDE 桌面
   </heading>
   <p>
     在 &releasename; 中所提供的 KDE 媒體管理程式因版本變更，已由使用 <file>device:/</file> 變為使用 
     <file>media:/</file>。有些還在使用著 <file>device:/</file> 
     連結的使用者設定檔必須更正。請注意到，<file>~/.kde/share/apps/konqsidebartng/virtual_folders/services</file> 
     包含了這項設定且可以安全得刪除，讓它不會在設定新的使用者時被再次建立。
   </p>
   <p>
     &oldreleasename; 所搭載的 KDE 桌面環境和 &releasename; 上的版本已有著許多不同，您可以在 <url 
     id="http://www.kde.org/announcements/announce-3.5.php" name="KDE 3.5 
     Release Notes"> 上找到更多的詳盡資訊。
   </p>
  </sect>
  <sect id="gnome-desktop-changes">
   <heading>
     GNOME 桌面的變更和支援
   </heading>
   <p>
     如果您使用著 &oldreleasename; 所搭載的 GNOME 桌面環境，您將無法在 Debian 
     裡一些建議使用的預設設定的改變上得到助益。在一些極端的例子裡，GNOME 桌面環境可能無法正確得使用您舊有的設定，且可能無法適當得運作。
   </p>
   <p>
     如果您對於您的 GNOME 桌面的設定不是很在乎的話，您可以把使用者主目錄裡的 <file>.gconf</file> 目錄更名，（像是 
     <file>.gconf.old</file>），讓它在啟用新的連線時重新以 &releasename; 的預設設定重新產生。
   </p>
   <p>
     在 &releasename; 釋出版裡， Debian 已不再包含大多數和 GNOME 已廢棄的第 1 
     版的套件。雖然有些套件被保留了下來，但也只為了要支援一些尚未昇級到 GNOE 2 的 Debian 套件。而 GTK1.2 
     套件則還是被完整維護著。
   </p>
   <p>
     &oldreleasename; 所搭載的 GNOME 桌面環境和 &releasename; 上的版本已有著許多不同，您可以在 <url 
     id="http://www.gnome.org/start/2.14/notes/en/" name="GNOME 2.14 Release 
     Notes"> 上找到更多的詳盡資訊。
   </p>
  </sect>
  <sect id="default-editor">
   <heading>
     Default editor
   </heading>
   <p>
     If you were using <prgn>vim</prgn> as your default editor, this may be 
     changed to <prgn>nano</prgn> during the upgrade.
   </p>
   <p>
     Administrators who wish to change the default editor for all users will 
     have to update the alternatives system using:
    <example>
# update-alternatives --config editor
          </example>
   </p>
   <p>
     Users wishing to change the default editor can define the environment 
     variable <em>EDITOR</em> by introducing the following lines in their 
     own profiles:
    <example>
EDITOR=vi
export EDITOR
alias editor=$EDITOR
          </example>
   </p>
  </sect>
 </chapt>
 <chapt id="moreinfo">
  <heading>
    更多關於 &debian; 的資訊
  </heading>
  <sect id="morereading">
   <heading>
     閱讀更多資訊
   </heading>
   <p>
     Beyond these release notes and the installation guide, further 
     documentation on &debian; is available from the Debian Documentation 
     Project (DDP), whose goal is to create high quality documentation for 
     Debian users and developers. Documentation, including the Debian 
     Reference, Debian New Maintainers Guide, and Debian FAQ are available, 
     and many more. For full details of the existing resources see the <url 
     id="&url-ddp;" name="DDP website">.
   </p>
   <p>
     個別套件的說明文件則會被安裝到 <file>/usr/share/doc/<var>package</var></file> 
     目錄之中，其中可能會包含了版權資訊，專屬於 Debian 的一些訊息，以及任何原作者所提供的說明文件。
   </p>
  </sect>
  <sect id="gethelp">
   <heading>
     取得協助
   </heading>
   <p>
     Debian 
     的使用者可以從許多的管道取得協助、建議、和支援，但您應該只有在用盡了各種手段卻依然找不到問題的解答時才考慮尋求協助。這一節簡單的介紹了對 
     Debian 的新使用者可能會很有幫助的求助管道。
   </p>
   <sect1 id="lists">
    <heading>
      郵件論壇
    </heading>
    <p>
      Debian 的使用者最感興趣的郵件論壇應該是 debian-user 論壇（英文）以及其他的 
      debian-user-<var>language</var> 論壇（其他語言）了。您可以在 <url 
      id="&url-debian-list-archives;"> 
      取得這些論壇的相關細節，以及訂閱的方法。請您在論壇中發言前先檢查過去的論壇存檔中是否已經提供了問題的解答，並請遵守郵件論壇上的基本禮節。
    </p>
   </sect1>
   <sect1 id="irc">
    <heading>
      IRC(Internet Relay Chat) 網路聊天室
    </heading>
    <p>
      Debian has an IRC channel dedicated to the support and aid of Debian 
      users located on the OFTC IRC network which exists to provide 
      interactive services to peer-directed project communities. To access 
      the channel, point your favorite IRC client at &debian-irc-server; and 
      join #debian.
    </p>
    <p>
      請遵循該頻道的規定，並尊重線上其他的使用者。您可以在 <url id="&url-irc-host;" name="website"> 
      上取得更多 OFTC 的相關資訊。
    </p>
   </sect1>
  </sect>
  <sect id="bugs">
   <heading>
     回報錯誤
   </heading>
   <p>
     我們盡心盡力地讓 Debian GNU/Linux 成為一個高品質的作業系統，但這並不表示我們所提供的套件都是完全沒有任何問題的。為了和 
     Debian 一貫的開放發展原則相互呼應，也為了能對我們的使用者提供更好的服務，我們在我們自己的錯誤追蹤系統 (BTS) 
     中提供了對所有報告過的錯誤的所有資訊。您可以在 <url id="&url-bts;" name="bugs.debian.org"> 
     瀏覽錯誤追蹤系統的網站。
   </p>
   <p>
     If you find a bug in the distribution or in packaged software that is 
     part of it, please report it so that it can be properly fixed for 
     future releases. Reporting bugs requires a valid email address. We ask 
     for this so that we can trace bugs and developers can get in contact 
     with submitters should additional information be needed.
   </p>
   <p>
     您可以藉由 <package>reportbug</package> 程式或是自行使用電子郵件來進行回報錯誤，您可以閱讀參考卡片（如果您有安裝 
     <package>doc-debian</package> 的話，可以在 <file>/usr/share/doc/debian</file> 
     裡找到）或到 <url id="&url-bts;" name="錯誤追蹤系統"> 的線上網頁取得更多如何使用錯誤追蹤系統及其它的相關資訊。
   </p>
  </sect>
  <sect id="contributing">
   <heading>
     如何對 Debian 做出貢獻
   </heading>
   <p>
     You do not need to be an expert to contribute to Debian. By assisting 
     users with problems on the various user support <url 
     id="&url-debian-list-archives;" name="lists"> you are contributing to 
     the community. Identifying (and also solving) problems related to the 
     development of the distribution by participating on the development 
     <url id="&url-debian-list-archives;" name="lists"> is also extremely 
     helpful. To maintain Debian's high quality distribution, <url 
     id="&url-bts;" name="submit bugs"> and help developers track them down 
     and fix them. If you have a way with words then you may want to 
     contribute more actively by helping to write <url id="&url-ddp;" 
     name="documentation"> or <url id="&url-debian-i18n;" name="translate"> 
     existing documentation into your own language.
   </p>
   <p>
     如果您能投注更多的時間的話，您可以負責維護 Debian 中一部分的自由軟體。如果您能夠接續或維護其他使用者希望 Debian 
     所能提供的軟體的話就更好了，您可以在 <url id="&url-wnpp;" name="亟需人手以及受到期待的套件資料庫 (WNPP)"> 
     中取得相關的資訊。如果您的興趣是集中在特別的領域之中，那您可能會想要參加像是某個特定硬體平台的系統移植、<url 
     id="&url-debian-jr;" name="小小 Debian">，以及 <url id="&url-debian-med;" 
     name="Debian Med"> 之類在 Debian 中的子計畫。
   </p>
   <p>
     不論如何，只要您以任何的方式參加了自由軟體社群的活動，不管是身為使用者、程式員、作者、還是譯者，您就已經對自由軟體的群體努力做出貢獻了。貢獻本身就是一件非常有益而有趣的事情，除了能讓您不斷地遇見新的伙伴之外，也能讓您的心中充滿了溫暖的感覺。
   </p>
  </sect>
 </chapt>
 <appendix id="old-stuff">
  <heading>
    管理您的 &oldreleasename; 系統
  </heading>
  <p>
    這個附錄包含了在您昇級至 &releasename; 之前，如何讓您能夠順利地安裝或更新 &oldreleasename; 
    套件的相關說明。這只有在某些特殊狀況之下才會有這個需求。
  </p>
  <sect id="old-upgrade">
   <heading>
     更新您的 &oldreleasename; 系統
   </heading>
   <p>
     基本上，這和您所進行過的 &oldreleasename; 的昇級並沒有什麼不同。唯一的不同是您必須先確認您的套件列表是否還是包含了 
     &oldreleasename; 的套件，請參考在 <ref id="old-sources"> 裡的說明。
   </p>
   <p>
     您至少應該昇級至最新的 &oldreleasename; 釋出版本：r5，於 2007 二月發佈。
   </p>
  </sect>
  <sect id="old-sources">
   <heading>
     檢查您的來源列表
   </heading>
   <p>
     如果在您的 <file>/etc/apt/sources.list</file> 中有任何的項目是參照至 'stable' 
     的話，您可能在實際上已經在 "使用" &releasename; 了。如果您已執行了 <tt>apt-get update</tt> 
     的話，您還是可以輕易得回到原始的狀態，只要您遵照以下的指示即可。
   </p>
   <p>
     如果您已經安裝了來自 &releasename; 的套件，那麼再安裝來自 &oldreleasename; 
     的套件就已經沒有太多意義了。在此狀況之下，您應該要自行決定是否要繼續進行。進行套件的降級並不是不可能的事，但是在此並沒有針對這個加以說明。
   </p>
   <p>
     使用您慣用的編輯器，以 root 的身份開啟 <file>/etc/apt/sources.list</file> 這個檔案，然後檢查所有以 
     <tt>deb http:</tt> 或 <tt>deb ftp:</tt> 開頭的項目，看看是否有參照至 
     "<tt>stable</tt>"。如果有的話，將其中的 <tt>stable</tt> 改為 
     <tt>&oldreleasename;</tt>。
   </p>
   <p>
     如果您有任何項目是以 <tt>deb file:</tt> 開頭的，您必須自行檢查這些項目所提供的是 &oldreleasename; 還是 
     &releasename; 的檔案庫。
   </p>
   <p>
     <strong>極重要！</strong> 不要修改任何以 <tt>deb cdrom:</tt> 
     開頭的項目。否則，這些項目將會因而無法使用，使得您只能再執行一次 <prgn>apt-cdrom</prgn>。如果您發現某個 'cdrom' 
     的來源項目是指向 "<tt>unstable</tt>" 時請不要覺得太訝異。雖然有點奇怪，但這卻是很正常的。
   </p>
   <p>
     如果您進行了任何改變，將檔案儲存並執行
    <example>
# apt-get update
          </example>
     來更新套件的列表。
   </p>
  </sect>
 </appendix>
</book>
</debiandoc>
