<!DOCTYPE debiandoc PUBLIC "-//DebianDoc//DTD DebianDoc//EN" [
  <!entity % dynamicdata  SYSTEM "../dynamic.ent"       > %dynamicdata;
  <!entity % shareddata   SYSTEM "../release-notes.ent" > %shareddata;
  <!entity docid "$Id: release-notes.ja.sgml,v 1.2 2005-01-01 19:31:40 jseidel Exp $">
]>

<!-- original version: 1.10 -->

<debiandoc>
  <book>
  <titlepag>
    <title>&debian; &release; (`&releasename') リリースノート (&arch-title; 用)</title>
      <author>
        <name>Josip Rodin, Bob Hilliard, Adam Di Carlo, Anne Bezemer, Rob
        Bradford (現在のメンテナ)</name><email></email>
      </author>
      <author>
        <name></name><email>debian-doc@lists.debian.org</email>
      </author>
      <version>&docid;</version>
    </titlepag>
    <toc detail="sect1">
      <chapt id="about"><heading>リリースノートの最新情報</heading>

<p>[この文書の最新版は、常に <url id="&url-release-notes;">
から取得できます。もし入手した版が一ヵ月以上古いものでしたら、
最新版をダウンロードした方がよいでしょう。]</p>

<p>以前の版のリリースノートには、
一つ前のリリースよりもさらに古いリリースからの
アップグレード情報が含まれていました。しかし、
そのような内容は時としてドキュメンテーションを複雑にしてしまうので、
この版では &debian; 3.0 ('woody')
からのアップグレードのみを扱うことにしました。
'woody' よりも古いリリースからアップグレードする場合は、
以前の版のリリースノートを読んでください。</p>

      </chapt>
      <chapt id="whats-new"><heading>&debian; &release; の最新情報</heading>

<p>サポートされているアーキテクチャの一覧は、
前回のリリースである &debian; 3.0 ('woody')
から変わっていません。
このリリースでサポートされているアーキテクチャは以下の通りです。</p>

        <p>
          <list>
            <item><p>Intel x86 ('i386')</p></item>
            <item><p>Motorola 680x0 ('m68k')</p></item>
            <item><p>Alpha ('alpha')</p></item>
            <item><p>SPARC ('sparc')</p></item>
            <item><p>PowerPC ('powerpc')</p></item>
            <item><p>ARM ('arm')</p></item>
            <item><p>MIPS ('mips' (ビッグエンディアン) と 'mipsel' (リトルエンディアン))</p></item>
            <item><p>Intel Itanium ('ia64')</p></item>
            <item><p>HP PA-RISC ('hppa')</p></item>
            <item><p>S/390 ('s390')</p></item>
          </list>
        </p>

<![ %not-i386 [ 

<!-- i386 doesn't have a port page - or do they now? -->

<p>移植状況の詳細や、お使いの移植版に特有の情報については、
<url id="&url-ports;" name="Debian の移植版に関するページ">
で読むことができます。</p>

]]>

<![ %hppa %s390 %mips %mipsel %ia64 [ 

<p>これは &arch-title; アーキテクチャ用 &debian;
のまだ 2 回目の公式リリースです。
すでにリリースするには充分安定していると私たちは考えています。
しかし、他のアーキテクチャ版のいくつかほどはまだ広く使われていない
(つまりユーザによるテストも多くない) ことから、
いくつかのバグにでくわす可能性もあります。
何か問題が起きたら、<url id="&url-bts;" name="バグ追跡システム">
を使って報告してください。その際、そのバグが &arch-title;
プラットフォーム上のものであることを必ず書き添えてください。</p>

]]>

<p>&arch-title; アーキテクチャ用 &debian; &release;
でのデフォルトのカーネルのバージョンは &kernelversion; です。</p>

<![ %available-2.6 [

<p>&arch-title; アーキテクチャでは、
2.6 系カーネルも利用可能で、カーネルのバージョンは
&kernelversion-2.6; になります。
Debian のカーネル 2.6.8 には、カーネル 2.6.8.1
リリースおよびその他のパッチが含まれています。</p>

]]>

        <sect id="newinst"><heading>インストールシステムの最新情報</heading>

<p>&debian; の古いインストールシステムは、
<prgn>debian-installer</prgn>
と呼ばれる完全に新しいインストールシステムで置き換えられました。
新しいインストールシステムはモジュール単位に設計されており、
拡張性に配慮して開発されています。</p>

<p>インストールシステムの新しい機能としては、USB
フラッシュデバイスからの起動をサポート、
ファーストステージでのパッケージインストールに
<prgn>aptitude</prgn> を選択、<prgn>XFS</prgn>
ファイルシステムと <prgn>LVM</prgn>
(ボリューム管理ツール) のサポートなどが挙げられます。</p>

<p>Debian の新しいインストールシステムの全詳細については、
一枚目の CD もしくは <url id="&url-install-manual;">
にある Debian インストールガイドを読むようおすすめします。</p>

<![ %i386 [ 

<p>様々な「フレーバー」を持ったカーネルイメージが使えます。
各フレーバーは、それぞれ異なったハードウェア構成をサポートします。
&arch-title; で使える
&debian; &release; のフレーバーは以下の通りです。</p>

          <p>
            <taglist>
              <tag>vanilla</tag>
<item><p>Debian の標準カーネルパッケージに入っているものです。
Linux でサポートされているほとんどすべてのドライバが、
モジュールとして組み込まれています。
これにはネットワークデバイス、SCSI デバイス、
サウンドカード、Video4Linux デバイスなどが含まれます。
`vanilla' フレーバーは、1 枚の boot ディスク、1 枚の root ディスク、
2 枚の driver ディスクからなります。</p></item>

              <tag>speakup</tag>
<item><p>これは上の vanilla カーネルとほとんど同じですが、
点字ディスプレイをサポートしています。
サポートされているモデルの完全な一覧は、
brltty の文書から入手できます。このフレーバーは、
1 枚の boot ディスク、1 枚の root ディスク、1 枚の driver
フロッピーディスクイメージからなります。</p></item>

            </taglist>
<!-- FJP: I feel the info about floppies should be removed from this table as
          floppies are no longer the most used installation method. -->

<p>これらのフレーバーにおけるカーネルの設定ファイルは、
それぞれのディレクトリに `kernel-config' という名前で置いてあります。

]]>

<!-- FJP: Maybe a short description of available installation methods could be
          added here: floppy, CD (netinst/business-card/full set), netboot,
          hd-media, USB-stick. -->

<![ %available-2.6 [
<p>&arch-title; では、
2.6 系カーネルを使ったインストールも可能です。
詳細な利用方法は、インストールガイドを参照してください。</p>
]]>          

        </sect>
        <sect id="newdistro"><heading>ディストリビューションの最新情報</heading> 

<p>古く、悪名高く、しかしまだ良く使われている
<package>dselect</package> を置き換えるため、
多くの apt フロントエンドが
woody のリリース準備期間に開発され続けています。
興味を持ったユーザは <package>aptitude</package>
や <package>synaptic</package>
といったパッケージを調べてみてください。</p>

<p>この &debian; のリリースには、大きな進歩を遂げた
XFree86 4.3 release が含まれています。
より多くのハードウェアをサポートし、
自動検知サポートが改良され、Xinerama や
3D アクセラレーションといった先進的な技術により良く対応しています。</p>

<p>&debian; は、この新しいリリースにおいて GNOME 2.6 や KDE 3.2 を含み、
以前より一層デスクトップ指向になりました。また、OpenOffice.org 1.1
により完全なオフィスツールを取り入れたのもはじめてのことです。
その他、生産性を向上させるツールとしては、Evolution
グループウェアソフトウェアや GAIM
インスタントメッセージングクライアントなどが、
このリリースに収録されています。</p>

<p>公式 &debian; ディストリビューションは、
現在は 13 枚のバイナリ CD と、
ほぼ同数のソース CD のかたちで提供されています。
今では DVD 版のディストリビューションも利用可能となっています。</p></sect>

      </chapt>

      <chapt id="installing"><heading>新たにインストールする</heading>

<p>Debian を新たにインストールしようとしている人は、
インストールマニュアルを読みましょう。
公式 CD の次の場所にあります。

        <example>        
          /dists/&releasename;/main/disks-&architecture;/current/doc/install.txt
          (または .html)

        </example></p>

        <p>あるいはインターネットからなら: <url id="&url-install-manual;"></p>

<p><prgn>boot-floppies</prgn> と呼ばれる &debian;
の古いインストールシステムは、
<prgn>debian-installer</prgn>
と呼ばれるコンポーネント化されたより強力な
インストールシステムに置き換えられました。</p>

      </chapt>


      <chapt id="upgrading"><heading>以前のリリースからアップグレードする</heading>

<!-- For doc-writers' convenience:
Debian Supported
release: architectures:

1.3.1 or less i386
2.0           i386,m68k
2.1	      i386,m68k,alpha,sparc
2.2	      i386,m68k,alpha,sparc,powerpc,arm
3.0	        + hppa s390 mips mipsel ia64
-->

        <sect id="information"><heading>システムの変更の詳細</heading>

<!-- Controversial, disabled for now, please translate though
        <sect1 id="german-quotes"><heading>Problems with German Quotes</heading>

          <p>The locales for German style languages (e.g. de_DE@euro)
          unfortunately use an aesthetically unpleasing way of representing
          open quotation marks.  We have retained it this way in order to
          preserve compatibility with other Linux distributions, and we hope
          that in the future it will be fixed. We suggest that you switch to a
          UTF-8 locale (e.g. de_DE@euro.UTF-8), which fully supports German with
          the correct quotation marks, and, using Unicode encoding, has better
          support for other languages as well.</p>

          <p>To change the system wide locale choice, use:
          <example>dpkg-reconfigure locales</example></p>
-->  
<sect1 id="syntax"><heading>重要なプログラム作法の変更</heading>
<p>Debian は、できるだけ開発元のパッケージを改変しないようにしています。
したがってオリジナルのパッケージでなされた変更は、
&debian; にも存在することになります。これは、&debian;
のリリース間でプログラムの挙動が変わる可能性があるということです。</p>

          <p><em>今のところ変更点はありません。</em></p>

        </sect1>

        </sect>
        <sect id="backup"><heading>アップグレードの準備</heading>

<p>システムをアップグレードする前に、完全なバックアップを取っておくよう
強くおすすめします。少なくとも、
失いたくないデータや設定情報だけでもバックアップしておきましょう。
アップグレードのツールや処理は極めて信頼性の高いものですが、
アップグレードの最中にハードウェア障害が起こると、
システムに大きなダメージを与えることがありえます。</p>

<p>特にバックアップしておくべきものとしては、
<file>/etc</file> と <file>/var/lib/dpkg</file> の中身、
<tt>dpkg --get-selections \*</tt> の出力などが挙げられます。</p>

<p>アップグレードの前には、その予定を全てのユーザに知らせると良いでしょう。
しかしシステムに SSH などでアクセスしてきているユーザは、
アップグレードの最中にもそうとは気付かず、
作業を続行してしまうかもしれません。
万一の用心をしたければ、アップグレードの前に
ユーザのパーティション (<file>/home</file>) をバックアップして、
アンマウントしてしまいましょう。通常は再起動は必要ないでしょう。</p>

<p>ディストリビューションのアップグレードは、
ローカルのテキストモードの仮想コンソール
(あるいは直接接続されたシリアル端末) から行うか、
リモートなら <prgn/ssh/ 接続経由で行いましょう。</p>

<p><em/重要/: <prgn/telnet/, <prgn/rlogin/, <prgn/rsh/
を用いてアップグレードをしては <em/いけません/。
アップグレードマシンの <prgn/xdm/、<prgn/gdm/、<prgn/kdm/ などが管理している
X セッションからのアップグレードも行うべきではありません。
これらのサービスはアップグレードの最中に切断されてしまう可能性が高く、
するとアップグレード途中のシステムへの
<em/接続が不可能になってしまう/
からです。</p>

	<sect1><heading>APT の pinning を無効化する</heading>

<p>特定のパッケージを安定版 (stable)
以外のディストリビューション (例えばテスト版)
からインストールするように APT の設定をしているなら、
新たな安定版リリースでのバージョンのパッケージにアップグレードできるよう、
(<file>/etc/apt/preferences</file> に保存されている) APT の pinning
設定を変更しなければならないかもしれません。APT の pinning
についての詳しい情報は、<manref name="apt_preferences" section="5">
にあります。</p>

<!-- FJP: Couldn't the advise to hold such packages prevent the upgrade of e.g.
          libc6 if the package depends on the old version! -->

	</sect1>

        <sect1><heading>パッケージの状態をチェックする</heading>

<p>アップグレードにどんな方法を取るにせよ、
まず全てのパッケージの状態をチェックし、
アップグレード可能な状態になっているかどうか調べましょう。
以降のコマンドを用いると、不完全インストール (Half-Installed) 状態や
設定に失敗 (Failed-Config) 状態など、
エラー状態にあるパッケージが表示されます。

          <example>

            # dpkg --audit

          </example></p>

<p>システム内にあるすべてのパッケージの状態は、
<prgn/dselect/ や <prgn/aptitude/ でも調査できます。また、

          <example>

            # dpkg -l | pager 

          </example></p>

          <p>や

          <example>

            # dpkg --get-selections &gt; ~/curr-pkgs.txt

          </example></p>

<p>のようなコマンドでも可能です。</p>

<p>パッケージの hold は、アップグレードの前に外しておく方が良いでしょう。
アップグレードに必要不可欠なパッケージが hold されていると、
アップグレードは失敗します。
hold されているパッケージは次のコマンドでわかります。

          <example>

            # dpkg --audit

          </example></p>

<p>パッケージをローカルで変更して再コンパイルしており、
パッケージ名を変更したり、パッケージのバージョンに epoch 
フィールドを追加したりしていない場合には、
それらのパッケージを hold しないとアップグレードされてしまいます。
パッケージの `hold' 状態は、<prgn/aptitude/ で変更できます。
コマンドは以下の通りです。
	  
      	  <example>
      	  aptitude hold | unhold &lt;package&gt;
      	  </example>
    	    </p>
        </sect1>
        <sect1><heading>SSH ユーザ向けの注意</heading>

<p>release 2.2 より前の <package/ssh/ や
release 2.2 での <package/ssh-nonfree/ パッケージに入っていた商用 SSH は、
このリリースから DFSG フリーの <package/ssh/ パッケージ (OpenSSH)
に置き換えられました。商用 SSH のツール類はもう存在しません。
<package/ssh/ パッケージでは、
OpenSSH 互換の設定を再生成するかどうかの質問を
Debconf で行うようになっています。</p>

        <sect1><heading>注意が必要なディレクトリ</heading>

<p>アップグレードの前には、必ず <file>/etc/rcS.d</file>
ディレクトリが存在しなければなりません。これがないと
<package/libc6/ パッケージのインストールに失敗します。</p>

<p><file>/usr/share/doc</file> ディレクトリ
(が既に存在している場合) はシンボリックリンク
(例えば <file>/usr/doc</file> への) であってはなりません。
こうなっているといくつかのパッケージで問題が起こります。
しかし <file>/usr/doc</file> が <file>/usr/share/doc</file>
へのシンボリックリンクになっているのは構いません。
このようなシンボリックリンクを使っていると、
<file>/usr/doc</file> ディレクトリが削除できない、
というメッセージを大量に見ることになります。
これらは問題ではなく、無視してしまってもかまいません。</p></sect1></sect>

        <sect id="upgrade-process"><heading>APT の取得先 (ソース) の準備</heading>

<p>おすすめのアップグレード方法は、ここで述べるように <prgn/aptitude/
を使ったものです。組み込まれた依存関係の解析によって、
アップグレードとインストールがスムーズに行えます。</p>

<p>パッケージインストール作業は、すべてスーパーユーザ権限で行ってください。
root としてログインするか、<prgn/su/ または <prgn/sudo/ を用いて、
必要なアクセス権限を得てください。</p>

<p>アップグレードを始める前に、<package/apt/ の設定ファイル
<file>/etc/apt/sources.list</file> を編集して、
パッケージの取得先を決める必要があります。</p>

<p><package/apt/ は、"<tt/deb/" 行にある全てのパッケージを見比べ、
最も大きなバージョン番号のパッケージをインストールします。
同じパッケージが取得可能な場合は、先に現れた行を優先します
(つまり、複数のミラーを指定している場合は、
最初にローカルのハードディスクを、次に CD-ROM を、
最後に HTTP/FTP ミラーを指定するといいでしょう)。</p>

         <sect1 id="network"><heading>APT の Internet ソースの追加</heading>

<p>デフォルトの設定では、メインの Debian インターネットサーバを
使ってインストールするようになっています。ですがここでは、
<file>/etc/apt/sources.list</file> を編集して、
他のミラー (できればネットワーク的に最も近いミラー)
を使うようにする方が良いでしょう。</p>

<!-- FJP: Why is 'default configuration' relevant here? We are talking about
          upgrading existing installations; we really have no idea what
          apt-sources users will have set up here (maybe just a Woody CD-set).
          Note: D-I sets the default configuration to a mirror based on
          the selected country and not the 'main' servers. -->

<p>Debian の HTTP / FTP ミラーのアドレスは、<url id="&url-debian-mirrors;">
を参照してください。
一般には HTTP ミラーの方が FTP ミラーよりも高速です。</p>

<!-- FJP: 'Otherwise' does not refer back to anything here, so I deleted it
          (unless the intention was to refer to local intr_a_net HTTP
          servers in the previous para). -->

<p>例えば、一番近くにある Debian ミラーが
<tt>&url-debian-mirror-eg;/</tt> だったとしましょう。
このミラーをウェブブラウザや FTP プログラムで見てみると、
main などのディレクトリが以下のように構成されていることがわかります。

           <example>

             &url-debian-mirror-eg;/dists/stable/main/binary-&architecture;/...
             &url-debian-mirror-eg;/dists/stable/contrib/binary-&architecture;/...

           </example></p>

<p>このミラーを <prgn/apt/ で使うには、次の行を
<file/sources.list/ ファイルに追加します。

           <example>

             deb &url-debian-mirror-eg; &releasename; main contrib

           </example></p>

<p>`<tt>dists</tt>' は書かなくても暗黙のうちに追加されます。
そしてリリース名の後の引き数がそれぞれ用いられ、
複数のディレクトリの各々のパス名に展開されます。</p>

<p>これらの新たなソースを追加したら、それまでの
<file/sources.list/ にあった "<tt/deb/" 行の先頭に
シャープ記号 (<tt/#/) を置き、それらを無効にしてください。</p>

<p>インストールに必要なパッケージのうち、
ネットワークから取得されたものは、
<file>/var/cache/apt/archives</file> ディレクトリ
(およびダウンロード中のものは <file>partial/</file> サブディレクトリ)
に置かれます。したがって、インストールを行う前には、
充分な領域があるかどうか確認しなければなりません。
割に大きめのインストールを行う場合には、
ダウンロードデータとして少なくとも 300MB 程度を考慮しておきましょう。</p>

         </sect1>

         <sect1 id="localmirror"><heading>APT のローカルミラーソースの追加</heading>

<p>HTTP や FTP のパッケージミラーを使うのではなく、
ローカルディスク (多分 NFS マウントされたもの) にあるミラーを使うよう、
<file>/etc/apt/sources.list</file>
を変更したいこともあるかもしれません。</p>

<p>例えばパッケージのミラーが
<file>/var/ftp/debian/</file> にあり、
main などのディレクトリが次のように配置されているとします。

           <example>

             /var/ftp/debian/dists/stable/main/binary-&architecture;/...
             /var/ftp/debian/dists/stable/contrib/binary-&architecture;/...

           </example></p>

<p>これを <prgn/apt/ から使うには、次の行を
<file/sources.list/ ファイルに追加します。

           <example>
             deb file:/var/ftp/debian &releasename; main contrib
           </example></p>

<p>`<tt/dists/' は書かなくても暗黙のうちに追加されます。
そしてリリース名の後の引き数がそれぞれ用いられ、
複数のディレクトリの各々のパス名に展開されます。</p>

<p>これらの新たなソースを追加したら、それまでの
<file/sources.list/ にあった "<tt/deb/" 行の先頭に
シャープ記号 (<tt/#/) を置き、それらを無効にしてください。</p>

        <sect1 id="cdroms"><heading>APT の CD-ROM ソースの追加</heading>

<!-- FJP: Are these instructions also valid for adding DVD's? -->

<p>上記のように、最新版の <package/apt/ と <package/dpkg/
パッケージをインストールする必要がある場合は、
上述の説明に従ってください。</p>

<!-- FJP: See above [...], as described above is a bit double.
          Also, I don't think the need to update the package tools and how
          to do that has been descibed 'above' yet. -->

<p>CD <em/だけ/でインストールをしたい場合は、
<file>/etc/apt/sources.list</file> にあった "<tt/deb/" 行の先頭に
シャープ記号 (<tt/#/) を置き、それらを無効にしてください。</p>

<p>CD-ROM ドライブをマウントポイント <file>/cdrom</file>
にマウントすることを許可している行が
<file>/etc/fstab</file> にあるかどうかを確認してください
(<prgn/apt-cdrom/ を使う場合は、マウントポイントを
<file>/cdrom</file> 以外にはできません)。
例えば <file>/dev/hdc</file> が CD-ROM ドライブなら、
<file>/etc/fstab</file> には次のような行が必要です。

          <example>

             /dev/hdc /cdrom auto defaults,noauto,ro 0 0

          </example></p>

<p>第 4 フィールドの <tt>defaults,noauto,ro</tt> の間には
スペースがあってはいけません。</p>

<p>これが正しく機能しているか調べるには、
CD を挿入して以下を実行してみてください。

          <example>

            mount /cdrom (CD をマウントポイントにマウントします)
            ls -alF /cdrom (その CD のルートディレクトリを表示します)
            umount /cdrom (CD をアンマウントします)

          </example></p>

          <p>問題がなければ

          <example>
            apt-cdrom add
          </example></p>

<p>を、Debian Binary CD-ROM それぞれに対して実行してください。
各 CD に関するデータが APT のデータベースに追加されます。</p>

        </sect1>
        </sect>

	<sect id="upgradingpackages"><heading>パッケージのアップグレード</heading>

<p>&debian; リリース間のアップグレード方法のおすすめは、
パッケージ管理ツール <prgn>aptitude</prgn> を用いる方法です。
このツールはパッケージに関する判断を
<prgn>apt-get</prgn> よりも安全に行います。</p>

<p>まず、必要なパーティションが read-write モードで
マウントされていることを忘れずに確認しましょう
 (特にルートと <file>/usr</file> の各パーティション)。
以下のようなコマンドラインが使えます。

          <example>
            mount -o remount,rw /<var>mountpoint</var>
          </example></p>

<p>次に、(<file>/etc/apt/sources.list</file> にある) APT
のソースエントリが <tt>'stable'</tt>
ディストリビューションを参照するようにしてください。
決してコードネーム (例えば <tt>&oldreleasename;</tt>)
で参照してはいけません。</p>

<p>ここで強くお勧めしたいのですが、
<prgn>/usr/bin/script</prgn> プログラムを使って、
このアップグレード作業の記録を取るようにしましょう。
こうすれば何らかの問題が生じたときに、
何が起こったかを記録しておくことができ、
バグ報告の必要が生じた場合に、その正確な情報を提供できます。
記録を開始するには次のように入力します。

          <example>
            script -a ~/upgrade-to-sarge.typescript
          </example></p>

<p>typescript ファイルは <file>/tmp</file> や <file>/var/tmp</file>
のような一時ディレクトリには置かないでください
(これらのディレクトリのファイルは
アップグレードや再起動の際に削除されることがありますから)。</p>

<p>次に、<package>aptitude</package> パッケージをインストールする必要があります。
以下のようにします。
	  
	  <example>
	  apt-get install aptitude
	  </example></p>

<p>上述のように APT の設定をしていると、このコマンドでは &releasename;
バージョンの <prgn>aptitude</prgn> がインストールされます。

<!-- FJP: Will it really? Haven't we have just instructed users to point
          everything to the new release? -->

<p>まず、<prgn>aptitude</prgn> は、
新しいリリースで新規またはアップグレードされたパッケージの一覧を取得する必要があります。
以下のように実行します。
	  
	  <example>
	  aptitude update
	  </example></p>

<p><prgn>aptitude</prgn> が利用可能なパッケージの情報を取得すると、
システムを完全にアップグレードする準備はほぼ整ったと言えます。</p>

<!-- FJP: Why 'almost'? The next command will perform the upgrade.
          'Almost' implies the user needs to do something else first... -->

	  <p><example>
	  aptitude -f --with-suggests --with-recommends dist-upgrade
	  </example></p>

<p>これによってシステムの完全なアップグレードを行います。
すなわち全てのパッケージの最新版を入手し、
パッケージのリリースが変わったことによって生じる
依存関係の変更すべてを解決します。
必要に応じて、新しいパッケージ (通常は更新版のライブラリや、
名前の変わったパッケージ) をインストールしたり、
衝突している古いパッケージを削除したりもします。</p>

<p>CD-ROM のセットからアップグレードする場合には、
アップグレード作業の最中に CD を交換するよう、
数回指定されることになります。
同じ CD を複数回入れなければならないかもしれません。
これはパッケージ間の相互依存関係のせいで、
これらのパッケージは別々の CD に入っていることもあるからです。</p>

<p>現在インストールされているパッケージの更新版が、
他のパッケージのインストール状態を変更しなければならないような場合には、
そのパッケージは現在のバージョンのままになります ("held back" と表示されます)。
この状態は、<prgn>aptitude</prgn>
でこれらのパッケージをインストール対象として選択するか、<tt>aptitude -f install
&lt;package&gt;</tt> を試すかのどちらかで解決できます。</p>

<p><tt/--fix-broken/ (または単に <tt/-f/) オプションを与えると、
<package/apt/ はシステムに存在する壊れた依存関係を修復しようとします。
<package/apt/ は、壊れたパッケージ依存関係がシステムに存在するのを
許しません。</p>

        <sect1 id="trouble"><heading>アップグレード中・アップグレード後の注意点</heading>

<p>場合によっては衝突や依存関係のループのために、
APT の APT::Force-LoopBreak オプションを有効にして、
必須パッケージを一時的に削除しなければならないかもしれません。
その場合 <prgn/aptitude/ はこのことを警告してアップグレードを中断します。
<prgn/aptitude/ のコマンドラインに
<tt>-o APT::Force-LoopBreak=1</tt> を指定すれば、
この状態を回避できます。</p>

<p>システムの依存関係の構造が非常に混乱していて、
手動での介入が必要となることもあります。
通常これは <prgn/aptitude/ を用いるか、あるいは

          <example>

            dpkg --remove <var>packagename</var>

          </example></p>

<p>として、目ざわりなパッケージを消す作業になります。
または次の作業でも良いかもしれません。

          <example>

            aptitude --fix-broken install
            dpkg --configure --pending

          </example></p>

<p>極端な場合には、コマンドラインから

          <example>

            dpkg --install /path/to/packagename.deb

          </example>

のように入力して、再インストールしなければならないかもしれません。</p>

<p>問題が修正できたら、先に示したように
<tt/dist-upgrade/ コマンドを繰り返し入力すれば、
アップグレードを再開できます。</p>

<p>アップグレードの最中に、
いくつかのパッケージの設定・再設定に関する質問が表示されます。
<file>/etc/init.d</file> と <file>/etc/terminfo</file>
ディレクトリに置かれるファイルと
<file>/etc/manpath.config</file> に関しては、
パッケージメンテナのバージョンに置き換えるようにしてください。
システムの整合性を保つためには `yes' と答えることが必要になります。
古いバージョンも <tt/.dpkg-old/ という拡張子で
保存されていますので、戻すのはいつでもできます。</p>

<p>どうすればよいか分からなくなったら、
そのパッケージやファイルの名前を書き留めておいて、
その問題解決は後回しにしましょう。
typescript ファイルを検索すれば、
アップグレードの最中に画面に表示された情報を見直すこともできます。</p></sect1>

        <sect1 id="nownownow"><heading>リブート前にすべきこと</heading>

<p><tt>aptitude dist-upgrade</tt> が終了したら、
「公式」にはアップグレードは終了したことになります。
しかし次にリブートする<em/前に/、
面倒を見てやらなければならないことがいくつかあります。</p>

<p>X Window System 関連のパッケージの
アップグレードに関する詳しい情報は、
<file>/usr/share/doc/xfree86-common/README.Debian-upgrade</file>
を読んでください。これは以前の Debian リリース全てのユーザに
当てはまります。要するに、読め、ということです。</p>

        <sect2 id="newkernel"><heading>カーネルのアップグレード</heading>

<p>Linux カーネルは、以上の手続きによっては更新<em/されません/。
そのようにしたい場合は、<package/kernel-image-*/ パッケージの
どれかひとつをインストールするか、
カスタマイズしたカーネルをソースからコンパイルするかします。</p>
	  
	  <![ %available-2.6 [

<p>&debian; には、&kernelversion; が含まれています。
これは 2.4 系の、やや古くて安定した Linux カーネルシリーズです。
2.6 系のカーネルはハードウェアのサポートも性能も改善されているので、
こちらを使いたい人もいるかもしれません。</p>

]]>

<p>カーネルをアップグレードするには、
まずはじめにお使いのサブアーキテクチャに最適なカーネルを選択する必要があります。
インストールできるカーネルの一覧は、以下のコマンドで得られます。
<!-- FJP: s/subarchitecture/subarchitecture and processor/ ??? -->

         <example>

           apt-cache search ^kernel-image

         </example></p>

<p>インストールするカーネルイメージが決まったら、<tt/aptitude install/
でインストールします。新しいカーネルがインストールされたら、
それを有効にするためにリブートしてください。</p>

<p>もうちょっと冒険したい人には、
自分のカスタムカーネルをコンパイルする方法も &debian; は提供しています。
<package>kernel-package</package> をインストールして、
<file>/usr/share/doc/kernel-package</file> の文書を読んでみてください。</p>

         </sect2></sect1></sect>

      </chapt>


      <chapt id="moreinfo">

        <heading>&debian; に関する更なる情報</heading>

        <sect id="morereading"> <heading>もっと読みたい</heading>
<p>このリリースノートやインストールガイドを越えた、
&debian; に関するより進んだ文書は、
Debian Documentation Project (DDP)
から公開されています。
DDP は Debian のユーザや開発者向けに、
品質の高い文書を作成することを目的としています。
Debian ガイド、Debian メンテナ入門、
Debian FAQ などなど、たくさんの文書があります。
リソースの詳細すべては DDP のウェブサイト
<url id="&url-ddp;"> から得られます。</p>

<p>それぞれのパッケージの文書は
<file>/usr/share/doc/<var>package</var></file> にインストールされています。
ここには、
著作権情報、Debian 固有の詳細、開発元の文書すべて、
などが置かれています。</p>

      </sect> 

      <sect id="gethelp"> 
        <heading>助けを求めるには</heading> 

<p>Debian ユーザ向けのヘルプ・アドバイス・サポートなどは、
いろいろな場所から得られます。しかしこれらを頼りにするのは、
その問題について徹底的に文書を調査してからにしましょう。
このセクションでは新しく Debian ユーザになった人向けに、
これらを簡単に紹介します。</p>

      <sect1 id="lists">
        <heading>メーリングリスト</heading>
<p>Debian ユーザが最も興味を引かれるであろうメーリングリストは
debian-user (英語) リストおよび
debian-user-<var/language/ (各国語) リストでしょう。
これらのリストの詳細や講読のしかたについては、
<url id="&url-debian-list-archives;"> を見てください。
利用にあたっては、
あなたの疑問に対する答えが以前の投稿で既に答えられていないかどうか、
アーカイブをチェックしてください。
また標準的なメーリングリストのエチケットに従うようにしてください。</p>
      </sect1>

      <sect1 id="irc">
        <heading>インターネットリレーチャット (IRC)</heading> 

<p>Debian はサポート用の IRC チャンネルを
Debian ユーザの協力によって運営しています。
このチャンネルは Open Projects IRC ネットワークにあります。
このネットワークは、
オープンソースコミュニティで資源共有や協力をすすめるため、
情報交換に使われているものです。
このチャンネルにアクセスするには、
お好みの IRC クライアントを &opn-irc-server; に接続し、
#debian に join してください。</p>

<p>チャンネルのガイドラインに従い、
他のユーザを大切にしてください。
Open Projects に関する詳細は
<url id="&url-opn;" name="ウェブサイト">
を訪ねてみてください。</p>

      </sect1>
      </sect> 

      <sect id="bugs">
        <heading>バグを報告する</heading>

<p>私たちは Debian GNU/Linux を高品質な
OS にするよう努めていますが、だからといって
私たちの提供するパッケージにバグが絶無というわけにはいきません。
ユーザに対するサービスとして、
私たちは報告されたバグに関する全ての情報を
<url id="&url-bts;" name="bugs.debian.org"> にある
バグ追跡システム (Bug Tracking System: BTS) で提供しています。
これは Debian のオープンな開発体勢と深く関っているのです。</p>

<!-- FJP: I propose to replace the last sentence by:
        Consistent with Debian's 'open development' philosophy and as a 
        service to our users, we provide all the information on reported bugs
        at our own Bug Tracking System (BTS). The BTS is browseable at
        <url id="&url-bts;" name="bugs.debian.org">.
-->

<p>もしディストリビューションや、
その一部であるパッケージされたソフトウェアにバグを見つけたら、
次のリリースで修正できるよう、その問題点の報告をお願いします。
バグを報告するには正しい電子メールアドレスが必要です。
これをお願いしているのは、バグを追跡したり、
開発者がより詳しい情報を必要とした場合に、
報告者に連絡できるようにするためです。</p>

<p>バグ報告には <package>reportbug</package>
というプログラムを使うこともできますし、
マニュアルで電子メールを使っても構いません。
バグ追跡システムに関する詳細やその使い方については、
リファレンスカード
(正しくインストールされたシステムなら
必ず <file>/usr/share/doc/debian</file> にあります)
をお読みいただくか、
または <url id="&url-bts;" name="バグ追跡システム">
のウェブサイトからオンラインで入手することもできます。</p>

<!-- FJP: The 'bug' program and package are obsolete. -->

      </sect>

      <sect id="contributing">
        <heading>Debian に貢献する</heading>

<p>Debian への貢献は専門家でなくてもできます。
問題を抱えたユーザを、いろいろな
<url id="&url-debian-list-archives;" name="サポートメーリングリスト">
の場所で助けてあげることも、立派なコミュニティへの貢献です。
<url id="&url-debian-list-archives;" name="開発メーリングリスト">
に参加して、
ディストリビューション開発に関する問題を見つけたり解決したりする
(もちろん後者のほうが大切) ことも、
もちろん非常に助けになります。
Debian を高品質なディストリビューションに保つため、
<url id="&url-bts;" name="バグを報告して">
その原因の特定や解決に際して開発者を助けてください。
執筆が得意なら、
<url id="&url-ddp;" name="文書"> 作成や
既存文書のご自分の言語への
<url id="&url-debian-i18n;" name="翻訳">
に積極的に参加し、そこで貢献するのも良いでしょう。</p>

<p>もっと時間が自由になるなら、Debian
に属するフリーソフトウェア集の一部を管理してみるのはどうでしょうか。
みんなが Debian に入れてほしいと思っているソフトウェアを
引き受けて管理するのは、特に価値の高い貢献です。
これに関する詳細は、
<url id="&url-wnpp;" name="作業が望まれるパッケージ">
をご覧になってください。
Debian にはいくつかサブプロジェクトが存在しており、
特定のアーキテクチャへの移植、
<url id="&url-debian-jr;" name="Debian Jr.">、
<url id="&url-debian-med;" name="Debian Med">
などが進められています。これらのうち、
あなたが興味を持っているグループに参加するのも良いでしょう。</p>

<p>いずれにしても、
あなたが何らかの形でフリーソフトウェアコミュニティに関っているのなら、
それがユーザとしてであれ、プログラマ、ライター、
翻訳者のいずれとしてであれ、
既にあなたはフリーソフトウェア運動を助けてくださっているのです。
貢献することは報いのあることですし、楽しいことです。
新しい人々に出会う機会も増えます。
きっと暖かな、楽しい気持ちになれるはずです。</p></sect>

    </chapt>
  </book>
</debiandoc>

<!-- Keep this comment at the end of the file
Local Variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-namecase-general:t
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:nil
sgml-declaration:nil
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
fill-column: 75
End:
-->

