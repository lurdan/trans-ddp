<!DOCTYPE debiandoc PUBLIC "-//DebianDoc//DTD DebianDoc//EN" [

  <!ENTITY % dynamicdata SYSTEM "../en/../dynamic.ent"> %dynamicdata;
  <!ENTITY % shareddata SYSTEM "../en/../release-notes.ent"> %shareddata;
  <!ENTITY docid "$Id: release-notes.ja.sgml,v 1.23 2007-04-04 15:48:04 fjp Exp $">
]>
<debiandoc>
 <book>
  <titlepag>
   <title>
     &debian; &release; ("&releasename;") リリースノート (&arch-title; 用)
   </title>
   <author>
     <name>Josip Rodin, Bob Hilliard, Adam Di Carlo, Anne Bezemer, Rob 
     Bradford, Frans Pop (current), Andreas Barth (current), Javier 
     Fern&aacute;ndez-Sanguino Pe&ntilde;a (current), Steve Langasek 
     (current)</name><email></email>
   </author>
   <author>
     <name></name><email>debian-doc@lists.debian.org</email>
   </author>
   <version>
     &docid;

   </version>
  </titlepag>
  <toc detail="sect1">
 
 <chapt id="about">
  <heading>
    はじめに
  </heading>
  <p>
    The primary goals of these Release Notes are to inform users of major 
    changes in this release of the &debian; distribution, to provide 
    information on how to upgrade safely from the previous release to the 
    current release and finally to inform users of known potential issues 
    they could encounter when upgrading to or using the &releasename; 
    release.
  </p>
  <p>
    既知の問題点をすべてリストアップすることは不可能なので、問題点の予想される広がり具合と影響の大きさの両方に基づいて取捨選択していることに注意してください。
  </p>
  <p>
    The most recent version of this document is always available at <url 
    id="&url-release-notes;">. If the version you are reading is more than a 
    month old<footnote><p>as listed on the front page of the PDF version and 
    in the footer of the online HTML version</p></footnote>, you might wish 
    to obtain the latest version.
  </p>
  <p>
    Please note that we only support and document upgrading from the 
    previous release of Debian (in this case, the upgrade from 
    &oldreleasename;). If you need to upgrade from older releases, we 
    suggest you read previous editions of the release notes and upgrade to 
    &oldreleasename; first.
  </p>
  <sect id="bug_reports">
   <heading>
     この文書に関するバグを報告する
   </heading>
   <p>
     筆者たちは、この文書で説明されているすべての異なるアップグレード手順を試し、また、発生する可能性がありユーザが直面するかもしれないすべての問題も予想しようとしました。
   </p>
   <p>
     Nevertheless, if you think you have found any bug in this documentation 
     (incorrect information or information that is missing), please file a 
     bug in the <url id="&url-bts;" name="bug tracking system"> against the 
     <package>release-notes</package> package.
   </p>
  </sect>
  <sect id="upgrade_reports">
   <heading>
     アップグレードについての報告をする
   </heading>
   <p>
     &oldreleasename; から &releasename; 
     へのアップグレードに関連するユーザからの情報はどんなものでも歓迎します。情報を共有するのを厭わない場合は、<package>upgrade-reports</package> 
     パッケージに対するバグ報告にアップグレードの結果を含めて <url id="&url-bts;" 
     name="バグ追跡システム">に提出してください。
   </p>
   <p>
     アップグレードについての報告を提出する際には、以下の情報を提供してください。
    <list>
     <item>
      <p>
        The status of your package database before and after the upgrade: 
        <prgn>dpkg</prgn>'s status database available at 
        <file>/var/lib/dpkg/status</file> and <prgn>aptitudes</prgn>'s 
        package state information, available at 
        <file>/var/lib/aptitude/pkgstates</file>. You should have made a 
        backup before the upgrade as described at <ref id="data-backup">, 
        but you can also find backups of this information in 
        <file>/var/backups</file>.
      </p>
     </item>
     <item>
      <p>
        <package>script</package> を使用してとったセッションのログ (<ref 
        id="record_session"> で説明します)。
      </p>
     </item>
     <item>
      <p>
        aptitude のログ (<file>/var/log/aptitude</file> にあります)。
      </p>
     </item>
    </list>
   </p>
   <p>
     注意: 
     バグ報告に情報を含める前に少し時間をかけてログに機密情報が含まれていないか検査し、機密情報を見つけた場合はそれをログから削除してください。というのも、バグ報告に含まれる情報は公開データベースで公表されるからです。
   </p>
  </sect>
  <sect id="sources">
   <heading>
     この文書のソース
   </heading>
   <p>
     This document is generated using 
     <package>debiandoc-sgml</package>. Sources for the Release Notes are 
     available in the CVS repository of the <em>Debian Documentation 
     Project</em>. You can use the <url id="&url-cvs-release-notes;" 
     name="web interface"> to access its files individually through the web 
     and see their changes. For more information on how to access the CVS 
     please consult the <url id="&url-ddp-cvs-info;" name="Debian 
     Documentation Project CVS pages">.
   </p>
  </sect>
 </chapt>
 <chapt id="whats-new">
  <heading>
    &debian; &release; の最新情報
  </heading>
  <p>
    This release adds official support for the AMD64 architecture which 
    supports 64-bit processors from both Intel (EM64T) and AMD 
    (AMD64). During the previous release, &debian; 3.1 ('sarge'), an 
    unofficial version of this port was available. <![ %amd64 [ Upgrading 
    from this unofficial version should be possible using these Release 
    Notes, but is not officially supported by Debian. ]]>
  </p>
  <p>
    Debian リリースマネージャが課した条件を満たせなかったので、Motorola 680x0 ('m68k') 
    アーキテクチャは公式にはサポートされなくなりました。最も大きな理由は、パフォーマンスの問題と必須ツールチェインコンポーネントの開発元でのサポートが限られたものだったことです。しかし、公式な安定版リリースの一部ではないとはいえ、m68k 
    移植版はまだ動作し、引き続きインストールが可能だと思われます。
  </p>
  <p>
    &debian; &releasename; で公式にサポートされているアーキテクチャは以下のとおりです。
  </p>
  <p>
   <list>
    <item>
     <p>
       Intel x86 ('i386')
     </p>
    </item>
    <item>
     <p>
       Alpha ('alpha')
     </p>
    </item>
    <item>
     <p>
       SPARC ('sparc')
     </p>
    </item>
    <item>
     <p>
       PowerPC ('powerpc')
     </p>
    </item>
    <item>
     <p>
       ARM ('arm')
     </p>
    </item>
    <item>
     <p>
       MIPS ('mips' (big-endian) and 'mipsel' (little-endian))
     </p>
    </item>
    <item>
     <p>
       Intel Itanium ('ia64')
     </p>
    </item>
    <item>
     <p>
       HP PA-RISC ('hppa')
     </p>
    </item>
    <item>
     <p>
       S/390 ('s390')
     </p>
    </item>
    <item>
     <p>
       AMD64 ('amd64')
     </p>
    </item>
   </list>
  </p>
  <p>
    移植状況の詳細や、お使いの移植版に特有の情報については、<url id="&url-ports;" name="Debian 
    の移植版に関するページ">で読むことができます。
  </p>
   <![ %secondrelease [

  <p>
    これは &arch-title; アーキテクチャ用 &debian; のまだ 2 
    回目の公式リリースです。すでにリリースするには十分安定している、と私たちは考えていますが、他のアーキテクチャ版のいくつかほどはまだ広く使われていない 
    (つまりユーザによるテストも多くない) ことから、いくつかのバグにでくわす可能性もあります。何か問題が起きたら、<url 
    id="&url-bts;" name="バグ追跡システム">を使って報告してください。その際、そのバグが &arch-title; 
    プラットフォーム上のものであることを必ず書き添えてください。
  </p>
   ]]><![ %arm [

  <sect id="new-arch">
   <heading>
     What's new for &arch-title;?
   </heading>
   <p>
     RiscPC (RPC) support is incomplete and will be removed after 
     etch. While a kernel for RiscPC is still provided in etch, the 
     installer doesn't support this system.
   </p>
   <p>
     Support for Intel's IXP4xx platform has been added. The installer 
     includes support for the Linksys NSLU2, a small and inexpensive device 
     which allows the usage of attached storage through USB. More 
     information about Debian on the NSLU2 can be found at <url 
     id="http://www.cyrius.com/debian/nslu2/">.
   </p>
   <p>
     Support has also been added for Intel's I/O Processor (IOP) 
     platform. Specifically, &debian; &release; supports IOP 32x based 
     devices. Two Network Attached Storage (NAS) devices based on an IOP 
     chip are supported in the installer: the GLAN Tank from IO-Data and the 
     Thecus N2100. See <url id="http://www.cyrius.com/debian/iop/">.
   </p>
  </sect>
   ]]><![ %mips-mipsel [

  <sect id="new-arch">
   <heading>
     What's new for &arch-title;?
   </heading>
    <![ %mipsel [

   <p>
     DECstation support is incomplete and untested in etch and will be 
     removed completely after this release. This includes both DECstation 
     variants previously supported in Debian, r3k-kn02 and r4k-kn04.
   </p>
   <p>
     Installations on MIPS based Cobalt machines (Qube 2700, RaQ1, Qube2, 
     RaQ2) are now possible without the use of a serial console. By default, 
     installations on Cobalt are now done via SSH. See <url 
     id="http://www.cyrius.com/debian/cobalt/"> for more information.
   </p>
    ]]><![ %mips [

   <p>
     Support for SGI's IP32 platform has been added. The IP32 platform 
     consists of SGI O2 machines with R5000, R5200 or RM7000 
     processors. Installation is possible via frame buffer or the serial 
     console.
   </p>
    ]]>

   <p>
     Support for Broadcom's SB1A evaluation board BCM91480B ("BigSur"), 
     which is based on the BCM1480 quad-core chip, has been added, both to 
     the kernel and the installer. This board is supported both in little 
     and big endian mode.
   </p>
   <p>
     Support for a Qemu machine has been added. The Qemu/MIPS machine 
     emulates a classic ISA PC style machine with a MIPS 4Kc CPU.
   </p>
  </sect>
   ]]><![ %powerpc [

  <sect id="new-arch">
   <heading>
     What's new for &arch-title;?
   </heading>
   <p>
     This release adds support for 64bit PowerPC architectures (IBM pSeries, 
     Apple G5 powermacs). Support for the Apple Apus subarchitecture has 
     been dropped; the Apple Nubus subarchitecture is also not supported.
   </p>
  </sect>
   ]]>

  <sect id="newdistro">
   <heading>
     ディストリビューションの最新情報
   </heading>
   <p>
     This new release of Debian again comes with a lot more software than 
     its predecessor &oldreleasename;; the distribution includes over 
     &packages-new; new packages, for a total of over &packages-total; 
     packages. Most of the software in the distribution has been updated: 
     over &packages-updated; software packages (this is 
     &packages-update-percent;% of all packages in &oldreleasename;). Also, 
     a significant number of packages (over &packages-removed;, 
     &packages-removed-percent;% of the packages in &oldreleasename;) have 
     for various reasons been removed from the distribution. You will not 
     see any updates for these packages and they will be marked as 
     'obsolete' in package management front-ends.
   </p>
   <p>
     With this release, &debian; switches from XFree86 to the 7.1 release of 
     X.Org, which includes support for a greater range of hardware and 
     better autodetection. This allows the use of Compiz, which is one of 
     the first compositing window managers for the X Window System, taking 
     full advantage of hardware OpenGL acceleration for supported devices.
   </p>
   <p>
     &debian; again ships with several desktop applications and 
     environments. Among others it now includes the desktop environments 
     GNOME 2.14<footnote><p>with some modules from GNOME 
     2.16</p></footnote>, KDE 3.5.5a, and Xfce 4.4. Productivity 
     applications have also been upgraded, including the office suites 
     OpenOffice.org 2.0.4a and KOffice 1.6 as well as GNUcash 2.0.5, 
     GNUmeric 1.6.3 and Abiword 2.4.6.
   </p>
   <p>
     Updates of other desktop applications include the upgrade to Evolution 
     2.6.3 and Gaim 2.0. The Mozilla suite has also been updated, with a 
     rename of the main programs: <prgn>iceweasel</prgn> (version 2.0.0.2) 
     is the unbranded <prgn>Firefox</prgn> web browser and 
     <prgn>icedove</prgn> (version 1.5) is the unbranded 
     <prgn>Thunderbird</prgn> mail client.
   </p>
   <p>
     Among many others, this release also includes the following software 
     updates:
   </p>
   <p>
    <list>
     <item>
      <p>
        the GNU C library, version 2.3.6
      </p>
     </item>
     <item>
      <p>
        the GNU Compiler Collection 4.1 as default compiler
      </p>
     </item>
     <item>
      <p>
        language interpreters: PHP 5.2, Python 2.4
      </p>
     </item>
     <item>
      <p>
        server software:
      </p>
      <p>
       <list>
        <item>
         <p>
           メールサーバ: Exim 4.63 (新規インストール時のデフォルトのメールサーバ)、Postfix 2.3、Courier 
           0.53、Cyrus 2.2。
         </p>
        </item>
        <item>
         <p>
           ウェブサーバ: Apache 2.2、fnord 1.10。
         </p>
        </item>
        <item>
         <p>
           データベースサーバ: MySQL 5.0.32、PostgreSQL 8.1。
         </p>
        </item>
        <item>
         <p>
           the OpenSSH server, version 4.3
         </p>
        </item>
        <item>
         <p>
           name servers: Bind 9.3, maradns 1.2
         </p>
        </item>
        <item>
         <p>
           ディレクトリサーバ: OpenLDAP 2.3。
         </p>
        </item>
       </list>
      </p>
     </item>
    </list>
   </p>
   <p>
     The official &debian; distribution now ships on 19 to 23 binary CDs 
     (depending on the architecture) and a similar number of source CDs. A 
     DVD version of the distribution is also available.
   </p>
   <sect1 id="pkgmgmt">
    <heading>
      Package management
    </heading>
    <p>
      <prgn>aptitude</prgn> 
      は、コンソール上でのパッケージ管理に適したプログラムです。<prgn>apt-get</prgn> 
      のコマンドライン操作の大半をサポートしており、<prgn>apt-get</prgn> 
      よりも依存関係の解決の面で優れているとわかっています。まだ <prgn>dselect</prgn> 
      を使用している場合は、公式のパッケージ管理用フロントエンドとして <package>aptitude</package> 
      に移行すべきでしょう。
    </p>
    <p>
      For &releasename; an advanced conflict resolving mechanism has been 
      implemented in <prgn>aptitude</prgn> that will try to find the best 
      solution if conflicts are detected because of changes in dependencies 
      between packages.
    </p>
    <p>
      <em>Secure APT</em> is now available in &releasename;. This feature 
      adds extra security to &debian; systems by easily supporting strong 
      cryptography and digital signatures to validate downloaded 
      packages. This release includes the <prgn>apt-key</prgn> tool for 
      adding new keys to apt's keyring, which by default includes only the 
      current Debian archive signing key, provided in the 
      <package>debian-archive-keyring</package> package.
    </p>
    <p>
      In its default configuration, <prgn>apt</prgn> will now warn if 
      packages are downloaded from sources that are not 
      authenticated. Future releases might force all packages to be verified 
      before downloading them. Administrators of unofficial apt repositories 
      are encouraged to generate a cryptographic key and sign their Release 
      files, as well as providing a secure way to distribute their public 
      keys.
    </p>
    <p>
      For more information please read <manref section="8" name="apt">, the 
      <url 
      id="http://www.debian.org/doc/manuals/securing-debian-howto/ch7#s-deb-pack-sign" 
      name="Package signing in Debian"> chapter of the <em>Securing Debian 
      Manual</em> and the <url id="http://wiki.debian.org/SecureApt" 
      name="Debian Wiki">.
    </p>
    <p>
      Another feature that was added in <prgn>apt</prgn> is the ability to 
      download only the changes in <file>Packages</file> files since your 
      last update. More about this feature in <ref id="apt-pdiff">.
    </p>
   </sect1>
   <sect1 id="volatile">
    <heading>
      debian-volatile が公式サービスに
    </heading>
    <p>
      The <em>debian-volatile</em> service that was introduced as an 
      unofficial service with the release of &oldreleasename; has now become 
      an official &debian; service.
    </p>
    <p>
      This means that it now uses a <tt>.debian.org</tt> 
      address<footnote><p>The old <tt>volatile.debian.net</tt> address will 
      also remain valid for the time being. </p></footnote>. Please make 
      sure to update your <file>/etc/apt/sources.list</file> accordingly if 
      you were already using this service.
    </p>
    <p>
      <em>debian-volatile</em> allows users to easily update stable packages 
      that contain information that quickly goes out of date. Examples are a 
      virus scanner's signatures list or a spam filter's pattern set. For 
      more information and a list of mirrors, please see the archive's <url 
      id="&url-debian-volatile;" name="web page">.
    </p>
   </sect1>
  </sect>
  <sect id="system-changes">
   <heading>
     システムの改良
   </heading>
   <p>
     There have been a number of changes in the distribution that will 
     benefit new installations of &releasename;, but may not be 
     automatically applied on upgrades from &oldreleasename;. This section 
     gives an overview of the most relevant changes.
   </p>
   <p>
    <taglist>
     <tag>
       Priority for basic development packages lowered
     </tag>
     <item>
      <p>
        A number of development packages that used to be priority 
        <em>standard</em> are now priority <em>optional</em>, which means 
        they will no longer be installed by default. This includes the 
        standard C/C++-compiler, <package>gcc</package>, as well as some 
        other software (<package>dpkg-dev</package>, 
        <package>flex</package>, <package>make</package>) and development 
        headers (<package>libc6-dev</package>, 
        <package>linux-kernel-headers</package>).
      </p>
      <p>
        If you do wish to have these packages on your system, the easiest 
        way to install them is by installing 
        <package>build-essential</package>, which will pull in most of them.
      </p>
     </item>
     <tag>
       SELinux priority standard, but not enabled by default
     </tag>
     <item>
      <p>
        The packages needed for SELinux support have been promoted to 
        priority <em>standard</em>. This means that they will be installed 
        by default during new installations. For existing systems you can 
        install SELinux using:
       <example>
# aptitude install selinux-basics
       </example>
      </p>
      <p>
        Note that SELinux support is <em>not</em> enabled by 
        default. Information on setting up and enabling SELinux can be found 
        on the <url id="&url-wiki-selinux;" name="Debian Wiki">.
      </p>
     </item>
     <tag>
       New default inet superdaemon
     </tag>
     <item>
      <p>
        The default inet superdaemon for &releasename; is 
        <package>openbsd-inetd</package> instead of 
        <package>netkit-inetd</package>. It will not be started if no 
        services are configured, which is true by default. The new default 
        daemon will be installed automatically on upgrade.
      </p>
     </item>
     <tag>
       Default <prgn>vi</prgn> clone changed
     </tag>
     <item>
      <p>
        The <prgn>vi</prgn> clone installed by default is now a compact 
        version of <prgn>vim</prgn> (<package>vim-tiny</package>) instead of 
        <package>nvi</package>.
      </p>
     </item>
     <tag>
       Changes in default features for <tt>ext2</tt>/<tt>ext3</tt>
     </tag>
     <item>
      <p>
        New ext2 and ext3 file systems will be created with features 
        <em>dir_index</em> and <em>resize_inode</em> enabled by default. The 
        first feature speeds up operations on directories with many files; 
        the second makes it possible to resize a file system on-line 
        (i.e. while it is mounted).
      </p>
      <p>
        Users upgrading from &oldreleasename; could consider adding the 
        <em>dir_index</em> flag manually using 
        <prgn>tune2fs</prgn><footnote><p>The flag <em>filetype</em> should 
        already be set on most file systems, except possibly on systems 
        installed before &oldreleasename;. </p></footnote>; the 
        <em>resize_inode</em> flag cannot be added to an existing file 
        system. It is possible to check which flags are set for a file 
        system using <tt>dumpe2fs -h</tt>.
      </p>
     </item>
     <tag>
       Default encoding for &releasename; is UTF-8
     </tag>
     <item>
      <p>
        The default encoding for new &debian; installations is UTF-8. A 
        number of applications will also be set up to use UTF-8 by default.
      </p>
      <p>
        Users upgrading to &releasename; that wish to switch to UTF-8 will 
        need to reconfigure their environment and locale definitions. The 
        system-wide default can be changed using <tt>dpkg-reconfigure 
        locales</tt>; first select a UTF-8 locale for your language and 
        country and then set that as default. Note that switching to UTF-8 
        means that you will probably also need to convert existing files 
        from your previous (legacy) encoding to UTF-8.
      </p>
      <p>
        The package <package>utf8-migration-tool</package> contains a tool 
        that may help the migration, however that package is only available 
        in unstable as it was not ready in time for &releasename;. Making a 
        backup of your data and configuration before using the tool is 
        strongly recommended.
      </p>
      <p>
        Note that some applications may not yet work correctly in a UTF-8 
        environment, mostly due to display issues.
      </p>
     </item>
    </taglist>
   </p>
   <p>
     The <url id="http://wiki.debian.org/Sarge2EtchUpgrade" name="Debian 
     Wiki"> has some additional information about changes between 
     &oldreleasename; and &releasename;.
   </p>
  </sect>
  <sect id="kernel-changes">
   <heading>
     Major kernel-related changes
   </heading>
   <p>
     &debian; &release; ships with kernel version &kernelversion; for all 
     architectures; the release is still mostly<footnote><p>Some individual 
     packages may no longer work correctly with a 2.4 kernel; see <ref 
     id="incompatible-2.4">.</p></footnote> compatible with 2.4 kernels, but 
     Debian no longer provides or supports 2.4 kernel packages.
   </p>
   <p>
     There have been major changes both in the kernel itself and in the 
     packaging of the kernel for Debian. Some of these changes complicate 
     the upgrade procedure and can potentially result in problems while 
     rebooting the system after the upgrade to &releasename;. This section 
     gives an overview of the most important changes; potential issues and 
     information on how to work around them is included in later chapters.
   </p>
    <![ %defaulted-2.4 [

   <p>
     If you are currently using a 2.4 kernel, you should read <ref 
     id="upgrade-to-2.6"> carefully.
   </p>
    ]]>

   <sect1 id="kernel-packaging">
    <heading>
      Changes in kernel packaging
    </heading>
    <p>
     <taglist>
      <tag>
        Kernel packages renamed
      </tag>
      <item>
       <p>
         All Linux kernel packages have been renamed from <tt>kernel-*</tt> 
         to <tt>linux-*</tt> to clean up the namespace. This will make it 
         easier to include non-Linux kernels in Debian in the future.
       </p>
      </item>
       <![ %i386 [

      <tag>
        Flavor "386" replaced with "486"
      </tag>
      <item>
       <p>
         Support for the 80386 sub-architecture for Intel x86 has been 
         dropped in &releasename;. The 386 kernel flavor is no longer 
         supported and has been replaced by the new 486 flavor.
       </p>
      </item>
       ]]><![ %amd64 [

      <tag>
        Single generic kernel for &arch-title;
      </tag>
      <item>
       <p>
         In &oldreleasename; there were separate kernel flavors for 
         different processor families of this architecture. Because of 
         changes in the kernel which will automatically optimize the kernel 
         for the processor(s) in the system, there is no longer any real 
         need for seperate kernel flavors.
       </p>
      </item>
       ]]><![ %i386-amd64-ia64 [

      <tag>
        標準のカーネルで SMP を使用できます
      </tag>
      <item>
       <p>
         Multiprocessor systems no longer require an <tt>*-smp</tt> flavor 
         of the Linux kernel. For &arch-title;, <tt>linux-image</tt> 
         packages without the <tt>-smp</tt> suffix support both uniprocessor 
         and multiprocessor systems. <![ %i386 [ (The one exception is the 
         486 flavor, which only supports a single processor.) ]]>
       </p>
      </item>
       ]]><![ %mips [

      <tag>
        r5k-ip22 kernel flavor dropped
      </tag>
      <item>
       <p>
         The kernel image for IP22 machines with an R5000 CPU has been 
         dropped because the r4k-ip22 image now supports IP22 machines with 
         either an R4x000 or an R5000 CPU.
       </p>
      </item>
       ]]>

     </taglist>
    </p>
    <p>
      Where possible, dummy transition packages that depend on the new 
      packages have been provided for the dropped packages.
    </p>
   </sect1>
   <sect1 id="kernel-initrd">
    <heading>
      New utilities to generate initrds
    </heading>
     <![ %no-initrd [

    <p>
      The Debian kernel image packages for &arch-title; do not require an 
      initrd for booting the system. This means that the information in this 
      section may not be relevant for you, but is still included for 
      reference.
    </p>
     ]]>

    <p>
      <![ %uses-initrd [ The Debian kernel image packages for &arch-title; 
      require an initrd for booting the system. ]]> Because of changes in 
      the kernel, the utility used to generate initrds in &oldreleasename;, 
      <package>initrd-tools</package> can no longer be used and has been 
      deprecated. Two new utilities have been developed that replace it: 
      <package>initramfs-tools</package> and <package>yaird</package>. The 
      concepts behind the new utilities are very different; an overview is 
      available on the <url 
      id="http://wiki.debian.org/InitrdReplacementOptions" name="Debian 
      Wiki">. Both will generate an initrd using the <em>initramfs</em> file 
      system, which is a compressed <prgn>cpio</prgn> archive. The default 
      and recommended utility is <package>initramfs-tools</package>.
    </p>
     <![ %uses-initrd [

    <p>
      Upgrading to an &releasename; kernel will cause 
      <package>initramfs-tools</package> to be installed by default. <![ 
      %defaulted-2.4 [ If you are upgrading from a 2.4 kernel to a 2.6 
      Debian kernel, you must use <package>initramfs-tools</package>. Using 
      <package>yaird</package> will cause linux-image-2.6 installations to 
      fail if you are running a 2.2 or 2.4 kernel. ]]>
    </p>
    <p>
      The package <package>initrd-tools</package> is still included in 
      &releasename; because it is needed for upgrades from 
      &oldreleasename;. It will be dropped for the next release.
    </p>
     ]]>

   </sect1>
   <sect1 id="kernel-devfs">
    <heading>
      Dynamic <file>/dev</file> management
    </heading>
    <p>
      &releasename; kernels no longer provide support for <tt>devfs</tt>.
    </p>
    <p>
      The replacement for <tt>devfs</tt> is <package>udev</package>.
    </p>
    <p>
      <package>udev</package> is a userspace implementation of devfs. It is 
      mounted over the <file>/dev</file> directory and will populate that 
      directory with devices supported by the kernel. It will also 
      dynamically add and remove devices as kernel modules are loaded or 
      unloaded respectively, based on events generated by the 
      kernel. <prgn>udev</prgn> is a lot more versatile than <tt>devfs</tt> 
      and offers services that are used by other packages like 
      <package>hal</package> (hardware abstraction layer).
    </p>
     <![ %uses-initrd [

    <p>
      If you install a Debian kernel image, <package>udev</package> will be 
      installed by default as <package>initramfs-tools</package> depends on 
      it.
    </p>
    <p>
      You can avoid installing <package>udev</package> by compiling a custom 
      non-modular kernel or by using an alternative initrd generator, such 
      as <package>yaird</package>. However, 
      <package>initramfs-tools</package> is the recommended initrd 
      generator. ]]>
    </p>
   </sect1>
  </sect>
 </chapt>
 <chapt id="installing">
  <heading>
    Installation System
  </heading>
  <p>
    Debian Installer は公式の Debian 
    インストールシステムです。このインストーラは、様々なインストール方法を提供しています。お使いのシステムにインストールするのにどの方法が利用できるかは、使っているアーキテクチャに依存します。
  </p>
  <p>
    Images of the installer for &releasename; can be found together with the 
    Installation Guide on the <url id="&url-installer;" name="Debian 
    website">.
  </p>
  <p>
    インストールガイドは、Debian 公式 CD/DVD セットの 1 枚目の CD/DVD 内の、次の場所にも含まれています。
   <example>
/doc/install/manual/<var>言語</var>/index.html
        </example>
  </p>
  <p>
    You may also want to check the <url id="&url-installer;index#errata" 
    name="errata"> for debian-installer for a list of known issues.
  </p>
   <![ %alpha [

  <p>
    The installer can only be used to install on alpha systems which support 
    the SRM console. Be sure to switch your system to SRM before starting 
    the installation. If your machine supports only the AlphaBIOS/ARC 
    console, the recommended way to install &releasename; is to first 
    install a (minimal) woody system, the upgrade to &oldreleasename; and 
    finally to &releasename;. For more information about the different 
    consoles please read the references on the <url 
    id="http://www.debian.org/ports/alpha" name="Debian alpha port web 
    pages">.
  </p>
   ]]><![ %sparc [

  <sect id="sparc_fb">
   <heading>
     &arch-title; のフレームバッファに関する問題
   </heading>
   <p>
     一部のシステムで表示に問題があるため、&arch-title; 
     においては、大部分のグラフィックカードでフレームバッファのサポートがデフォルトで無効になっています。そのため、フレームバッファをきちんとサポートしているシステムにおいては、表示が醜くなる可能性があります。インストーラの表示に問題が見られる場合は、<tt>framebuffer=true</tt> 
     をパラメータとして与えて、インストーラを起動してみてください。フレームバッファがデフォルトでは使われないにもかかわらずあなたのハードウェアで有効になってしまっている場合は、どうぞ私たちに教えてください。
   </p>
  </sect>
  <sect id="sparc_illegal_instruction">
   <heading>
     Issues with booting on &arch-title;
   </heading>
   <p>
     It has been reported by several users that the installation CD fails to 
     boot successfully upon the '<tt>boot cdrom</tt>' PROM command, 
     displaying the error '<tt>Illegal Instruction</tt>'.
   </p>
   <p>
     The apparent explanation for this problem is that it doesn't work 
     because the machine had previously been rebooted from Solaris. The 
     workaround is to power the machine off fully, and then boot it directly 
     into the installation CD.
   </p>
   <p>
     The problem was reported by users of various systems (namely, 
     Enterprise 450, Blade 2000, Fire V240, Enterprise 250 and Blade 100 at 
     the time of writing), so it is believed to be generic. Please let us 
     know if you observe similar issues with your hardware.
   </p>
  </sect>
   ]]>

  <sect id="inst-new">
   <heading>
     インストールシステムの最新情報
   </heading>
   <p>
     Debian Installer は、&oldreleasename; 
     での初めての公式リリース以降も大規模に開発されています。その結果、ハードウェアサポートが改良され、ワクワクするような新機能がいくつか追加されました。
   </p>
   <p>
     In these Release Notes we'll only list the major changes in the 
     installer. If you are interested in an overview of the detailed changes 
     since &oldreleasename;, please check the release announcements for the 
     &releasename; beta and RC releases available from the Debian 
     Installer's <url id="&url-installer-news;" name="news history">.
   </p>
   <sect1 id="inst-changes">
    <heading>
      主要な変更点
    </heading>
    <p>
     <taglist>
      <tag>
        インストール中の再起動が不要に
      </tag>
      <item>
       <p>
         Previously, the installation was split into two parts: setting up 
         the base system and making it bootable, followed by a reboot and 
         after that the execution of <prgn>base-config</prgn> which would 
         take care of things like user setup, setup of the package 
         management system and installation of additional packages (using 
         tasksel).
       </p>
       <p>
         &releasename; では、第 2 ステージが Debian Installer 
         本体に統合されました。この統合には多数の利点があります。例えば、セキュリティが強化されます。また、インストールの最後の再起動後には新システムが正しいタイムゾーンを既にもった状態となり、デスクトップ環境をインストールしている場合はすぐにグラフィカルユーザインタフェースが起動されます。
       </p>
      </item>
      <tag>
        新システムでは UTF-8 エンコーディングがデフォルトに
      </tag>
      <item>
       <p>
         インストーラは、古くから使われてきた言語固有のエンコーディング (ISO-8859-1、EUC-JP、KOI-8 など) ではなく 
         UTF-8 エンコーディングを使用するシステムをセットアップします。
       </p>
      </item>
      <tag>
        より柔軟なパーティション分割
      </tag>
      <item>
       <p>
         It is now possible to set up file systems on an LVM volume using 
         guided partitioning.
       </p>
       <p>
         The installer is also able to set up encrypted file systems. Using 
         manual partitioning you have the choice between <tt>dm-crypt</tt> 
         and <tt>loop-aes</tt>, using a passphrase or a random key, and you 
         can tune various other options. Using guided partitioning, the 
         installer will create an encrypted LVM partition that contains any 
         other file systems (except <file>/boot</file>) as logical volumes.
       </p>
      </item>
       <![ %g-i [

      <tag>
        グラフィカルユーザインタフェース
      </tag>
      <item>
        <![ %i386-amd64 [

       <p>
         グラフィカルユーザインタフェースの方が好きな場合は、<tt>installgui</tt> 
         をつけてインストーラを起動してみてください。
       </p>
        ]]><![ %powerpc [

       <p>
         &arch-title; 
         では、通常のインストールイメージとは別に、グラフィカルユーザインタフェースを使用するイメージが試験的に利用可能です。このイメージは、ATI 
         のグラフィックカードのついた CHRP システムの大半では動作することがわかっていますが、&arch-title; 
         においては、通常のインストール CD に含められるほど十分にはテストされていません。
       </p>
       <p>
         グラフィカルインストーラを使用してみたい場合は、"gtk-miniiso" イメージを探してください。
       </p>
        ]]>

       <p>
         グラフィカルインストーラは、表現方法が異なるだけで、機能的には通常のインストーラとほぼ同等です。唯一の例外は、グラフィカルフロントエンドが、ランダムなキーを用いた暗号化パーティションのセットアップをサポートしていないということです。
       </p>
       <p>
         The major advantage of the graphical user interface is that it 
         supports more languages than the regular user interface 
         (newt). Information about the graphical installer and the most 
         important differences between the graphical and regular installer 
         are documented in an appendix in the installation guide.
       </p>
       <p>
         注意: グラフィカルユーザインタフェースは全てのアーキテクチャで利用可能ではありません。
       </p>
      </item>
       ]]>

      <tag>
        レスキューモード
      </tag>
      <item>
       <p>
         起動できないなどの問題がシステムに生じた場合、その解決にインストーラを利用できます。最初のステップは通常のインストールと同様ですが、インストーラはパーティション作成プログラムを起動しません。代わりにレスキューオプションのメニューを表示します。
       </p>
       <p>
         インストーラに <tt>rescue</tt> を与えて起動するかブートパラメータ 
         <tt>rescue/enable=true</tt> を追加して、レスキューモードをアクティブにしてください。
       </p>
      </item>
      <tag>
        root アカウントの代わりに sudo を使用
      </tag>
      <item>
       <p>
         エキスパートモードでのインストール中に、root アカウントをセットアップしないよう選択できます (root 
         アカウントはロックされます)。root アカウントをセットアップしない場合は代わりに <prgn>sudo</prgn> 
         をセットアップし、最初のユーザがシステム管理のためにこのコマンドを使用できるようにします。
       </p>
      </item>
      <tag>
        ダウンロードしたパッケージの暗号署名による検証
      </tag>
      <item>
       <p>
         Packages downloaded with the installer are now cryptographically 
         checked using <prgn>apt</prgn>, making it more difficult to 
         compromise a system being installed over the network.
       </p>
      </item>
      <tag>
        メールの設定が簡単に
      </tag>
      <item>
       <p>
         If the "standard system" is installed, the installer sets up a 
         basic configuration for the system's mail server which will only 
         provide for local e-mail delivery. The mail server will be 
         unavailable to other systems connected to the same network. If you 
         want to configure your system to handle e-mail not local to the 
         system (either to send e-mail or to receive it), you will have to 
         reconfigure the mail system after installation.
       </p>
      </item>
      <tag>
        Desktop selection
      </tag>
      <item>
       <p>
         The installation system will install a GNOME desktop as the default 
         desktop if the user asks for one.
       </p>
       <p>
         However, users wishing to install alternate desktop environments 
         can easily do so by adding boot parameters: <tt>tasks="standard, 
         kde-desktop"</tt> for KDE and <tt>tasks="standard, 
         xfce-desktop"</tt> for Xfce. Note that this will not work when 
         installing from a full CD image without using a network mirror as 
         an additional package source; it will work when using a DVD image 
         or any other installation method.
       </p>
       <p>
         There are also separate CD images available that install the KDE or 
         Xfce desktop environment by default.
       </p>
      </item>
       <![ %not-s390 [

      <tag>
        新言語
      </tag>
      <item>
       <p>
         Thanks to the huge efforts of translators, Debian can now be 
         installed in 47 languages using the text-based installation user 
         interface. This is six languages more than in 
         &oldreleasename;. Languages added in this release include 
         Belarusian, Esperanto, Estonian, Kurdish, Macedonian, Tagalog, 
         Vietnamese and Wolof. Due to lack of translation updates, two 
         languages have been dropped in this release: Persian and Welsh.
       </p>
        <![ %g-i [

       <p>
         If the graphical user interface is used, an additional eleven 
         languages are supported. These languages can only be selected using 
         this installer as their character sets cannot be presented in a 
         non-graphical environment. The new languages are: Bengali, 
         Dzongkha, Gujarati, Hindi, Georgian, Khmer, Malayalam, Nepali, 
         Punjabi, Tamil and Thai.
       </p>
        ]]>

       <p>
         Users that do not wish to use any locale can now select <em>C</em> 
         as their preferred locale in the installer's language 
         selection. More information on language coverage is available at 
         the <url id="&url-d-i-i18n;" name="d-i languages list">.
       </p>
      </item>
      <tag>
        地域化やタイムゾーンの設定が簡単に
      </tag>
      <item>
       <p>
         Configuration of language, countries and timezones has been 
         simplified to reduce the amount of information needed from the 
         user. The installer will now guess what the system's country and 
         timezone is based on the language selected, or will provide a 
         limited selection if it cannot. Users can still introduce obscure 
         combinations if need be.
       </p>
      </item>
      <tag>
        Improved system-wide localization
      </tag>
      <item>
       <p>
         Most of the internationalization and localization tasks that were 
         previously handled by the <package>localization-config</package> 
         tool are now included in the stock Debian installer or in packages 
         themselves. This means that selection of a language will 
         automatically install packages necessary for that language 
         (dictionaries, documentation, fonts...) in both standard and 
         desktop environments. Configuration that is no longer handled 
         automatically includes the papersize configuration and some 
         advanced X Windows keyboard settings for some languages.
       </p>
       <p>
         Note that language-specific packages will only be installed 
         automatically if they are available during the installation.
       </p>
      </item>
       ]]>

     </taglist>
    </p>
   </sect1>
   <sect1 id="inst-auto">
    <heading>
      自動インストール
    </heading>
    <p>
      前のセクションで述べたとおりインストーラに多数の変更が加えられたので、インストーラによる、事前設定ファイルを使用した自動インストールのサポートにも変更がありました。つまり、&oldreleasename; 
      のインストーラで動いた既存の事前設定ファイルがあっても、修正を加えずにそれが新しいインストーラで動くことは期待できません。
    </p>
    <p>
      幸いなことに、事前設定の使用方法に関する豊富な文書を含んだ付録が<url id="&url-install-manual;" 
      name="インストールガイド">につけられました。
    </p>
    <p>
      &releasename; 
      のインストーラには、インストールをさらに、そしてより簡単に自動化できるようにする、ワクワクするような新機能がいくつか追加されました。このインストーラは 
      RAID や LVM、暗号化 LVM を使用した高度なパーティション分割もサポートしています。詳しくは付属文書を参照してください。
    </p>
   </sect1>
  </sect>
  <sect id="popcon">
   <heading>
     人気コンテスト
   </heading>
   <p>
     インストールシステムが昔のように <package>popularity-contest</package> 
     パッケージをインストールするよう提案します。このパッケージは &oldreleasename; 
     にはデフォルトではインストールされませんでしたが、それより前のリリースではインストールされていました。
   </p>
   <p>
     <package>popularity-contest</package> 
     は、ディストリビューション内のどのパッケージが実際に使われているかについての有益な情報を、Debian 
     プロジェクトに提供してくれます。この情報は、主にインストール CD-ROM 
     に収録されるパッケージの優先順位を決めるために使われますが、Debian 
     開発者がもはやメンテナのいないパッケージを引き受けるかどうかを決める際にもよく参照されます。
   </p>
   <p>
     Information from <package>popularity-contest</package> is processed 
     anonymously. We would appreciate it if you would participate in this 
     official survey, helping to improve Debian.
   </p>
  </sect>
 </chapt>
 <chapt id="upgrading">
  <heading>
    以前のリリースからアップグレードする
  </heading>
  <sect id="backup">
   <heading>
     アップグレードの準備
   </heading>
   <p>
     We suggest that before upgrading you also read the information in <ref 
     id="information">. That chapter covers potential issues not directly 
     related to the upgrade process but which could still be important to 
     know about before you begin.
   </p>
   <sect1 id="data-backup">
    <heading>
      Back up any data or configuration information
    </heading>
    <p>
      Before upgrading your system, it is strongly recommended that you make 
      a full backup, or at least back up any data or configuration 
      information you can't afford to lose. The upgrade tools and process 
      are quite reliable, but a hardware failure in the middle of an upgrade 
      could result in a severely damaged system.
    </p>
    <p>
      バックアップしたくなるであろう主な対象としては、<file>/etc</file> や <file>/var/lib/dpkg</file> 
      の中身、<tt>dpkg --get-selections "*"</tt> (引用符を忘れてはいけません) の出力などでしょう。
    </p>
    <p>
      The upgrade process itself does not modify anything in the 
      <file>/home</file> directory. However, some applications (e.g. parts 
      of the Mozilla suite, and the GNOME and KDE desktop environments) are 
      known to overwrite existing user settings with new defaults when a new 
      version of the application is first started by a user. As a 
      precaution, you may want to make a backup of the hidden files and 
      directories ("dotfiles") in users' home directories. This backup may 
      help to restore or recreate the old settings. You may also want to 
      inform users about this.
    </p>
    <p>
      あらゆるパッケージのインストール処理はスーパーユーザ特権で実行されなければならないため、必要なアクセス権を得るために root 
      としてログインするか <prgn>su</prgn> や <prgn>sudo</prgn> を使ってください。
    </p>
    <p>
      アップグレードにあたって事前に整えなければならない条件がいくつかあります。実際にアップグレードを実行する前にそれらを確認してください。
    </p>
   </sect1>
   <sect1>
    <heading>
      Inform users in advance
    </heading>
    <p>
      It's wise to inform all users in advance of any upgrades you're 
      planning, although users accessing your system via an <prgn>ssh</prgn> 
      connection should notice little during the upgrade, and should be able 
      to continue working.
    </p>
    <p>
      If you wish to take extra precautions, back up or unmount users' 
      partitions (<file>/home</file>) before upgrading.
    </p>
    <p>
      You will probably have to do a kernel upgrade when upgrading to 
      &releasename;, so a reboot will normally be necessary. Typically, this 
      will be done after the upgrade is finished.
    </p>
   </sect1>
   <sect1 id="upgrade_preparations">
    <heading>
      Prepare a safe environment for the upgrade
    </heading>
    <p>
      The distribution upgrade should be done either locally from a textmode 
      virtual console (or a directly connected serial terminal), or remotely 
      via an <prgn>ssh</prgn> link.
    </p>
    <p>
      In order to gain extra safety margin when upgrading remotely, we 
      suggest that you run upgrade processes in the virtual console provided 
      by the <prgn>screen</prgn> program, which enables safe reconnection 
      and ensures the upgrade process is not interrupted even if the remote 
      connection process fails.
    </p>
    <p>
      If you are upgrading remotely via an <prgn>ssh</prgn> link it is 
      highly recommended that you take the necessary precautions to be able 
      to access the server through a remote serial terminal. There are 
      chances that, after upgrading the kernel and rebooting, some devices 
      will be renamed (as described in <ref id="device-reorder">) and you 
      will have to fix the system configuration through a local 
      console. Also, if the system is rebooted accidentally in the middle of 
      an upgrade there are chances you will need to recover using a local 
      console.
    </p>
    <p>
      <strong>重要!</strong> 
      <prgn>telnet</prgn>、<prgn>rlogin</prgn>、<prgn>rsh</prgn> 
      を用いてアップグレードをしては<em>いけません</em>。アップグレードマシンの 
      <prgn>xdm</prgn>、<prgn>gdm</prgn>、<prgn>kdm</prgn> などが管理している X 
      セッションからのアップグレードも行うべきではありません。これらのサービスはアップグレードの最中に切断されてしまう可能性が高く、するとアップグレード途中のシステムへの<em>接続が不可能になってしまう</em>からです。
    </p>
   </sect1>
   <sect1 id="glibc-kernel">
    <heading>
      2.2 系カーネルはサポートされなくなりました
    </heading>
    <p>
      In case you run a kernel prior to 2.4.1, you need to upgrade to (at 
      least) the 2.4-series before upgrading <package>glibc</package>. This 
      should be done before starting the upgrade. It is recommended that you 
      directly upgrade to the 2.6.8 kernel available in &oldreleasename;, 
      instead of upgrading to a 2.4 kernel.
    </p>
   </sect1>
  </sect>
  <sect id="system-status">
   <heading>
     システムの状態をチェックする
   </heading>
   <p>
     The upgrade process described in this chapter has been designed for 
     upgrades from "pure" &oldreleasename; systems without third-party 
     packages. In particular, there are known problems with third-party 
     packages which install programs under <file>/usr/X11R6/bin/</file> 
     causing problems with upgrades due to the X.org transition (<ref 
     id="xorg">). For greatest reliability of the upgrade process, you may 
     wish to remove third-party packages from your system before you begin 
     upgrading.
   </p>
   <p>
     またこの手順は、システムが &oldreleasename; 
     の最新リリースにアップデート済であるものと想定しています。そうではなかったり、アップグレード済みかどうか不明なら、<ref 
     id="old-upgrade">内の指示に従ってください。
   </p>
   <sect1>
    <heading>
      Review actions pending in package manager
    </heading>
    <p>
      In some cases, the use of <prgn>apt-get</prgn> for installing packages 
      instead of <prgn>aptitude</prgn> might make <prgn>aptitude</prgn> 
      consider a package as "unused" and schedule it for removal. In 
      general, you should make sure the system is fully up-to-date and 
      "clean" before proceeding with the upgrade.
    </p>
    <p>
      Because of this you should review if there are any pending actions in 
      the package manager <prgn>aptitude</prgn>. If a package is scheduled 
      for removal or update in the package manager, it might negatively 
      impact the upgrade procedure. Note that correcting this is only 
      possible if your <file>sources.list</file> still points to 
      <em>&oldreleasename</em>; and not to <em>stable</em> or 
      <em>&releasename;</em>; see <ref id="old-sources">.
    </p>
    <p>
      To do this, you have to run <prgn>aptitude</prgn>'s user interface and 
      press 'g' ("Go"). If it shows any actions, you should review them and 
      either fix them or implement the suggested actions. If no actions are 
      suggested you will be presented with a message saying "No packages are 
      scheduled to be installed, removed, or upgraded".
    </p>
   </sect1>
   <sect1>
    <heading>
      APT の pin 機能を無効にする
    </heading>
    <p>
      特定のパッケージを安定版以外 (テスト版など) のディストリビューションからインストールするように APT 
      を設定しているなら、当該パッケージが新しい安定版リリース内のバージョンにアップグレードできるように、(<file>/etc/apt/preferences</file> 
      内に保存されている) APT の pin 設定を変更する必要があるかもしれません。APT の pin 
      機能に関するより詳しい情報は、<manref section="5" name="apt_preferences"> にあります。
    </p>
   </sect1>
   <sect1 id="package_status">
    <heading>
      パッケージの状態をチェックする
    </heading>
    <p>
      アップグレードに使う手段に関係なく、まず全パッケージの状態を調べ、全パッケージがアップグレード可能な状態にあることを確認するよう推奨します。次のコマンドは、インストールが中断していたり設定に失敗したパッケージや、何らかのエラー状態にあるパッケージを表示します:
     <example>
# dpkg --audit
          </example>
    </p>
    <p>
      <prgn>dselect</prgn> や 
      <prgn>aptitude</prgn>、あるいは次のようなコマンドを使ってシステムの全パッケージの状態を検査することもできます:
     <example>
# dpkg -l | pager 
          </example>
      または
     <example>
# dpkg --get-selections "*" &gt; ~/curr-pkgs.txt
          </example>
    </p>
    <p>
      アップグレード前に、あらゆる hold 状態を解除しておいたほうがよいでしょう。アップグレードに不可欠なパッケージが hold 
      状態にあるなら、アップグレードに失敗するでしょう。
    </p>
    <p>
      hold 状態にあるパッケージを記録するのに、<prgn>aptitude</prgn> は <prgn>apt-get</prgn> や 
      <prgn>dselect</prgn> とは異なる手法を用いることに注意してください。<prgn>aptitude</prgn> 
      では、以下のように実行して hold 状態にあるパッケージを検出できます:
     <example>
# aptitude search "~ahold" | grep "^.h"
          </example>
    </p>
    <p>
      <prgn>apt-get</prgn> でどのパッケージが hold 状態にあるのかを調べたければ、以下のように実行してください:
     <example>
# dpkg --get-selections | grep hold
          </example>
    </p>
    <p>
      パッケージをローカルで変更したり再コンパイルしており、パッケージの名前を変えたりバージョン番号に epoch 
      フィールドを追加していないなら、アップグレードしないよう hold 状態にしておかなければなりません。
    </p>
    <p>
      The "hold" package state for <prgn>aptitude</prgn> can be changed 
      using:
     <example>
# aptitude hold <var>package_name</var>
          </example>
      Replace <tt>hold</tt> with <tt>unhold</tt> to unset the "hold" state.
    </p>
    <p>
      修正が必要なことがあるなら、<ref id="old-sources">で説明されているように 
      <file>sources.list</file> が &oldreleasename; を指定したままにしておくべきです。
    </p>
   </sect1>
   <sect1 id="backports">
    <heading>
      非公式なソースとバックポート
    </heading>
    <p>
      自分のシステムに非 Debian 
      パッケージがあるなら、依存関係の衝突のためアップグレード中に削除されるかもしれないことに注意すべきです。当該パッケージが 
      <file>/etc/apt/sources.list</file> 
      に特別なパッケージアーカイブを追加することでインストールされたのなら、そのアーカイブが &releasename; 
      用にコンパイルされたパッケージも提供しているかをチェックし、Debian パッケージ用のソース行と一緒にそのソース行も適切に修正すべきです。
    </p>
    <p>
      Some users may have unofficial backported "newer" versions of packages 
      that <em>are</em> in Debian installed on their &oldreleasename; 
      system. Such packages are most likely to cause problems during an 
      upgrade as they may result in file conflicts<footnote><p>Debian's 
      package management system normally does not allow a package to remove 
      or replace a file owned by another package unless it has been defined 
      to replace that package.</p></footnote>. Section <ref id="trouble"> 
      has some information on how to deal with file conflicts if they should 
      occur.
    </p>
   </sect1>
  </sect>
  <sect id="handle-conflict">
   <heading>
     Manually unmarking packages
   </heading>
   <p>
     To prevent <prgn>aptitude</prgn> from removing some packages that were 
     pulled in through dependencies, you need to manually unmark them as 
     <em>auto</em> packages. This includes OpenOffice and Vim for desktop 
     installs:
    <example>
# aptitude unmarkauto openoffice.org vim  
</example>
   </p>
   <p>
     And 2.6 kernel images if you have installed them using a kernel 
     metapackage:
    <example>
# aptitude unmarkauto $(dpkg-query -W 'kernel-image-2.6.*' | cut -f1)
</example>
   </p>
   <p>
     Note: You can review which packages are marked as <em>auto</em> in 
     aptitude by running:
    <example>
# aptitude search 'i~M &lt;package name&gt;'
</example>
   </p>
  </sect>
  <sect id="upgrade-process">
   <heading>
     APT の取得先 (ソース) の準備
   </heading>
   <p>
     アップグレードを始める前に、<package>apt</package> の設定ファイル 
     <file>/etc/apt/sources.list</file> を編集して、パッケージの取得先を決める必要があります。
   </p>
   <p>
     <package>apt</package> は、"<tt>deb</tt>" 
     行にあるすべてのパッケージを見比べ、最も大きなバージョン番号のパッケージをインストールします。同じパッケージが取得可能な場合は、先に現れた行を優先します 
     (つまり、複数のミラーを指定している場合は、最初にローカルのハードディスクを、次に CD-ROM を、最後に HTTP/FTP 
     ミラーを指定するといいでしょう)。
   </p>
   <p>
     リリースを指定するのに、コードネーム (&oldreleasename; や &releasename;) と状態名 
     (旧安定版・安定版・テスト版・不安定版) 
     のどちらもよく使用されます。コードネームによる指定は、新しいリリースが出たときに驚かずに済むという利点があるため、ここではコードネームを使用しています。当然ですが、コードネームを使用している場合は自分でリリースアナウンスに注意を払わなければいけません。代わりに状態名を使用している場合は、リリースの直後にパッケージの更新が大量に利用可能になったことに気づくでしょう。
   </p>
   <sect1 id="network">
    <heading>
      APT の Internet ソースの追加
    </heading>
    <p>
      デフォルトの設定では、メインの Debian 
      インターネットサーバを使ってインストールするようになっています。ですがここでは、<file>/etc/apt/sources.list</file> 
      を編集して、他のミラー (できればネットワーク的に最も近いミラー) を使うようにするほうがよいでしょう。
    </p>
    <p>
      Debian の HTTP/FTP ミラーのアドレスは、<url id="&url-debian-mirrors;"> 
      を参照してください。一般には HTTP ミラーのほうが FTP ミラーよりも高速です。
    </p>
    <p>
      例えば、一番近くにある Debian ミラーが <tt>&url-debian-mirror-eg;/</tt> 
      だったとしましょう。このミラーをウェブブラウザや FTP プログラムで見てみると、main 
      などのディレクトリが以下のように構成されていることがわかります。
     <example>
&url-debian-mirror-eg;/dists/&releasename;/main/binary-&architecture;/...
&url-debian-mirror-eg;/dists/&releasename;/contrib/binary-&architecture;/...
           </example>
    </p>
    <p>
      このミラーを <prgn>apt</prgn> で使うには、次の行を <file>sources.list</file> 
      ファイルに追加します。
     <example>
deb &url-debian-mirror-eg; &releasename; main contrib
           </example>
    </p>
    <p>
      `<tt>dists</tt>' 
      は書かなくても暗黙のうちに追加されます。そしてリリース名の後の引数がそれぞれ用いられ、複数のディレクトリの各々のパス名に展開されます。
    </p>
    <p>
      After adding your new sources, disable the previously existing 
      "<tt>deb</tt>" lines in <file>sources.list</file> by placing a hash 
      sign (<tt>#</tt>) in front of them.
    </p>
   </sect1>
   <sect1 id="localmirror">
    <heading>
      APT のローカルミラーソースの追加
    </heading>
    <p>
      HTTP や FTP のパッケージミラーを使うのではなく、ローカルディスク (多分 NFS マウントされたもの) 
      にあるミラーを使うよう、<file>/etc/apt/sources.list</file> を変更したいこともあるかもしれません。
    </p>
    <p>
      例えばパッケージのミラーが <file>/var/ftp/debian/</file> にあり、main 
      などのディレクトリが次のように配置されているとします。
     <example>
/var/ftp/debian/dists/&releasename;/main/binary-&architecture;/...
/var/ftp/debian/dists/&releasename;/contrib/binary-&architecture;/...
           </example>
    </p>
    <p>
      これを <prgn>apt</prgn> から使うには、次の行を <file>sources.list</file> ファイルに追加します。
     <example>
deb file:/var/ftp/debian &releasename; main contrib
           </example>
    </p>
    <p>
      `<tt>dists</tt>' 
      は書かなくても暗黙のうちに追加されます。そしてリリース名の後の引数がそれぞれ用いられ、複数のディレクトリの各々のパス名に展開されます。
    </p>
    <p>
      After adding your new sources, disable the previously existing 
      "<tt>deb</tt>" lines in <file>sources.list</file> by placing a hash 
      sign (<tt>#</tt>) in front of them.
    </p>
   </sect1>
   <sect1 id="cdroms">
    <heading>
      APT の CD-ROM/DVD ソースの追加
    </heading>
    <p>
      CD <em>だけ</em>でインストールをしたい場合は、<file>/etc/apt/sources.list</file> 中の 
      "<tt>deb</tt>" 行の先頭にシャープ記号 (<tt>#</tt>) を置き、それらを無効にしてください。
    </p>
    <p>
      CD-ROM ドライブをマウントポイント <file>/cdrom</file> にマウントすることを許可している行が 
      <file>/etc/fstab</file> にあるかどうかを確認してください (<prgn>apt-cdrom</prgn> 
      を使う場合は、マウントポイントを <file>/cdrom</file> 以外にはできません)。例えば 
      <file>/dev/hdc</file> が CD-ROM ドライブなら、<file>/etc/fstab</file> 
      には次のような行が必要です。
     <example>
/dev/hdc /cdrom auto defaults,noauto,ro 0 0
          </example>
    </p>
    <p>
      第 4 フィールドの <tt>defaults,noauto,ro</tt> の間にはスペースがあってはいけません。
    </p>
    <p>
      これが正しく機能しているか調べるには、CD を挿入して以下を実行してみてください。
     <example>
# mount /cdrom    # マウントポイントに CD をマウントします
# ls -alF /cdrom  # CD のルートディレクトリを表示します
# umount /cdrom   # CD をアンマウントします
          </example>
    </p>
    <p>
      問題がなければ
     <example>
# apt-cdrom add
          </example>
      を、Debian Binary CD-ROM それぞれに対して実行してください。各 CD に関するデータが APT 
      のデータベースに追加されます。
    </p>
   </sect1>
  </sect>
  <sect id="upgradingpackages">
   <heading>
     パッケージのアップグレード
   </heading>
   <p>
     以前の &debian; からのアップグレード方法のお勧めは、パッケージ管理ツール <prgn>aptitude</prgn> 
     を用いる方法です。このプログラムはパッケージに関する判断を <prgn>apt-get</prgn> よりも安全に行います。
   </p>
   <p>
     まず、必要なパーティションが read-write モードでマウントされていることを忘れずに確認しましょう (特にルートと 
     <file>/usr</file> の各パーティション)。以下のようなコマンドラインが使えます。
    <example>
# mount -o remount,rw /<var>mountpoint</var>
          </example>
   </p>
   <p>
     Next you should double-check that the APT source entries (in 
     <file>/etc/apt/sources.list</file>) refer either to 
     "<tt>&releasename;</tt>" or to "<tt>stable</tt>". There should not be 
     any sources entries pointing to &oldreleasename;. Note: source lines 
     for a CD-ROM will often refer to "<tt>unstable</tt>"; although this may 
     be confusing, you should <em>not</em> change it.
   </p>
   <sect1 id="record_session">
    <heading>
      セッションの記録
    </heading>
    <p>
      ここで強くお勧めしたいのですが、<prgn>/usr/bin/script</prgn> 
      プログラムを使って、このアップグレード作業の記録を取るようにしましょう。こうすれば何らかの問題が生じたときに、何が起こったかを記録しておくことができ、バグ報告の必要が生じた場合に、その正確な情報を提供できます。記録を開始するには次のように入力します。
     <example>
# script -t 2>~/upgrade-&releasename;.time -a ~/upgrade-&releasename;.script
          </example>
      typescript ファイルは <file>/tmp</file> や <file>/var/tmp</file> 
      のような一時ディレクトリには置かないでください 
      (これらのディレクトリのファイルはアップグレードや再起動の際に削除されることがありますから)。
    </p>
    <p>
      typescript 
      はまた、スクロールしてスクリーンから消えた情報を見ることができるようにもしてくれるでしょう。(<tt>Alt-F2</tt> を使って) 2 
      番の仮想コンソールに切り替えて、ログインしてから <tt>less -R 
      ~root/upgrade-&releasename;.script</tt> と実行すれば当該ファイルを見ることができます。
    </p>
    <p>
      アップグレード完了後に <prgn>script</prgn> を停止するには、プロンプトから <tt>exit</tt> 
      と入力してください。
    </p>
    <p>
      <prgn>script</prgn> に <em>-t</em> スイッチをつけておくと、以下のようなコマンドで 
      <prgn>scriptreplay</prgn> プログラムがすべてのセッションをリプレイするようになります。
     <example>
# scriptreplay ~/upgrade-&releasename;.time ~/upgrade-&releasename;.script
          </example>
    </p>
   </sect1>
   <sect1 id="updating_lists">
    <heading>
      パッケージリストの更新
    </heading>
    <p>
      First the list of available packages for the new release needs to be 
      fetched. This is done by executing:
    </p>
    <p>
     <example>
# aptitude update
	  </example>
    </p>
    <p>
      Running this the first time new sources are updated will print out 
      some warnings related to the availability of the sources. These 
      warnings are harmless and will not appear if you rerun the command 
      again.
    </p>
   </sect1>
   <sect1>
    <heading>
      アップグレードするのに十分な領域があることを確認する
    </heading>
    <p>
      You have to make sure before upgrading your system that you have 
      sufficient hard disk space when you start the full system upgrade 
      described in <ref id="upgrading_other">. First, any package needed for 
      installation that is fetched from the network is stored in 
      <file>/var/cache/apt/archives</file> (and the <file>partial/</file> 
      subdirectory, during download), so you must make sure you have enough 
      space on the file system partition that holds <file>/var/</file> to 
      temporarily download the packages that will be installed in your 
      system. After the download, you will probably need more space in other 
      file system partitions in order to both install upgraded packages 
      (which might contain bigger binaries or more data) and new packages 
      that will be pulled in for the upgrade. If your system does not have 
      sufficient space you might end up with an incomplete upgrade that 
      might be difficult to recover from.
    </p>
    <p>
      <prgn>aptitude</prgn> と <prgn>apt</prgn> 
      のどちらを使っても、インストールに必要なディスク領域の詳細な情報が表示されます。アップグレードを実行する前に、次のように実行して必要な領域の推定値を見ることができます。
    </p>
    <p>
     <example>
# aptitude -y -s -f --with-recommends dist-upgrade
[ ... ]
更新: XXX 個、新規インストール: XXX 個、削除: XXX 個、保留: XXX 個。
yyyMB 中 xx.xMB のアーカイブを取得する必要があります。展開後に追加で AAAMB のディスク容量が消費されます。
パッケージのインストールまたは削除。
       </example>
    </p>
    <p>
      アップグレードをするのに十分な領域がない場合、事前に領域を解放するのを忘れないようにしてください。以下のことを実行するとよいでしょう。
    </p>
    <p>
     <list>
      <item>
       <p>
         Remove packages that have been previously downloaded for 
         installation (at <file>/var/cache/apt/archive</file>). Cleaning up 
         the package cache by running <prgn>apt-get clean</prgn> or 
         <prgn>aptitude clean</prgn> will remove all previously downloaded 
         package files.
       </p>
      </item>
      <item>
       <p>
         Remove old packages you no longer use. If you have 
         <prgn>popularity-contest</prgn> installed, you can use 
         <prgn>popcon-largest-unused</prgn> to list the packages you do not 
         use in the system that occupy the most space. You can also use 
         <prgn>deborphan</prgn> or <prgn>debfoster</prgn> to find obsolete 
         packages (see <ref id="obsolete">). Alternatively you can start 
         <prgn>aptitude</prgn> in "visual mode" and find obsolete packages 
         under "Obsolete and Locally Created Packages".
       </p>
      </item>
      <item>
       <p>
         あまりにも大きな領域を占めており現在は必要ないパッケージを削除する 
         (アップグレード後にいつでも再インストール可能なのですから)。<prgn>dpigs</prgn> 
         (<package>debian-goodies</package> パッケージに含まれています。) や 
         <prgn>wajig</prgn> (<tt>wajig size</tt> を実行してください。) 
         を用いると、ディスク領域の大部分を占めているパッケージをリストアップできます。
       </p>
      </item>
      <item>
       <p>
         <file>/var/log/</file> の下にあるシステムログを一時的に他のシステムに移動するか、永久に削除する。
       </p>
      </item>
     </list>
    </p>
    <p>
      Note that in order to safely remove packages, it is advisable to 
      switch your <file>sources.list</file> back to &oldreleasename; as 
      described in <ref id="old-sources">.
    </p>
   </sect1>
   <sect1 id="minimal_upgrade">
    <heading>
      Minimal system upgrade
    </heading>
    <p>
      Because of certain necessary package conflicts between 
      &oldreleasename; and &releasename;, running <tt>aptitude 
      dist-upgrade</tt> directly will often remove large numbers of packages 
      that you will want to keep. We therefore recommend a two-part upgrade 
      process, first a minimal upgrade to overcome these conflicts, then a 
      full <tt>dist-upgrade</tt>.
    </p>
    <p>
      First, run:
     <example>
# aptitude upgrade
          </example>
    </p>
    <p>
      This has the effect of upgrading those packages which can be upgraded 
      without requiring any other packages to be removed or installed.
    </p>
    <p>
      Follow the minimal upgrade with:
     <example>
# aptitude install initrd-tools
          </example>
    </p>
    <p>
      This step will automatically upgrade <package>libc6</package> and 
      <package>locales</package> and will pull in SELinux support libraries 
      (<package>libselinux1</package>). At this point, some running services 
      will be restarted, including <prgn>xdm</prgn>, <prgn>gdm</prgn> and 
      <prgn>kdm</prgn>. As a consequence, local X11 sessions will be 
      disconnected.
    </p>
    <p>
      The next step will vary depending on the set of packages that you have 
      installed. These release notes give general advice about which method 
      should be used, but if in doubt, it is recommended that you examine 
      the package removals proposed by each method before proceeding.
    </p>
    <p>
      Some common packages that are expected to be removed include 
      <package>base-config</package>, <package>hotplug</package>, 
      <package>xlibs</package>, <package>netkit-inetd</package>, 
      <package>python2.3</package>, <package>xfree86-common</package>, and 
      <package>xserver-common</package>. For a more complete list of 
      packages obsoleted in &releasename;, see <ref id="obsolete">.
    </p>
    <sect2 id="minimal_upgrade_desktop">
     <heading>
       Upgrading a desktop system
     </heading>
     <p>
       This upgrade path has been verified to work on systems with the sarge 
       <tt>desktop</tt> task installed. It is probably the method that will 
       give the best results on systems with the <tt>desktop</tt> task 
       installed, or with the <tt>gnome</tt> or <tt>kde</tt> packages 
       installed.
     </p>
     <p>
       It is probably <em>not</em> the correct method to use if you do not 
       already have the <package>libfam0c102</package> and 
       <package>xlibmesa-glu</package> packages installed:
      <example>
# dpkg -l libfam0c102 | grep ^ii
# dpkg -l xlibmesa-glu | grep ^ii
          </example>
     </p>
     <p>
       If you do have a full desktop system installed, run:
      <example>
# aptitude install libfam0 xlibmesa-glu
	  </example>
     </p>
    </sect2>
    <sect2 id="minimal_upgrade_x_server">
     <heading>
       Upgrading a system with some X packages installed
     </heading>
     <p>
       Systems with some X packages installed, but not the full 
       <tt>desktop</tt> task, require a different method. This method 
       applies in general to systems with <package>xfree86-common</package> 
       installed, including some server systems which have 
       <package>tasksel</package> server tasks installed as some of these 
       tasks include graphical management tools. It is likely the correct 
       method to use on systems which run X, but do not have the full 
       <tt>desktop</tt> task installed.
      <example>
# dpkg -l xfree86-common | grep ^ii
        </example>
     </p>
     <p>
       First, check whether you have the <package>libfam0c102</package> and 
       <package>xlibmesa-glu</package> packages installed.
      <example>
# dpkg -l libfam0c102 | grep ^ii
# dpkg -l xlibmesa-glu | grep ^ii
          </example>
     </p>
     <p>
       If you do not have <package>libfam0c102</package> installed, do not 
       include <package>libfam0</package> in the following commandline. If 
       you do not have <package>xlibmesa-glu</package> installed, do not 
       include it in the following commandline. <footnote><p>This command 
       will determine whether you need libfam0 and xlibmesa-glu installed, 
       and auto-select them for you: <example># aptitude install x11-common 
       \ $(dpkg-query --showformat '${Package} ${Status}\n' -W libfam0c102 
       xlibmesa-glu \ | grep 'ok installed$' | sed -e's/ .*//; s/c102//') 
       </example> </p></footnote>
      <example>
# aptitude install x11-common <var>libfam0</var> <var>xlibmesa-glu</var>
          </example>
     </p>
     <p>
       Note that installing <package>libfam0</package> will also install the 
       File Alteration Monitor (<package>fam</package>) as well as the RPC 
       portmapper (<package>portmap</package>) if not already available in 
       your system. Both packages will enable a new network service in the 
       system although they can both be configured to be bound to the 
       (internal) loopback network device.
     </p>
    </sect2>
    <sect2 id="minimal_upgrade_server">
     <heading>
       Upgrading a system with no X support installed
     </heading>
     <p>
       On a system with no X, no additional aptitude install command should 
       be required, and you can move on to the next step.
     </p>
    </sect2>
   </sect1>
   <sect1 id="upgrading_kernel">
    <heading>
      カーネルのアップグレード
    </heading>
    <p>
      The <package>udev</package> version in &releasename; does not support 
      kernel versions earlier than 2.6.15 (which includes &oldreleasename; 
      2.6.8 kernels), and the <package>udev</package> version in 
      &oldreleasename; will not work properly with the latest kernels. In 
      addition, installing the &releasename; version of 
      <package>udev</package> will force the removal of 
      <package>hotplug</package>, used by Linux 2.4 kernels.
    </p>
    <p>
      As a consequence, the previous kernel package will probably not boot 
      properly after this upgrade. Similarly, there is a time window during 
      the upgrade in which <package>udev</package> has been upgraded but the 
      latest kernel has not been installed. If the system were to be 
      rebooted at this point, in the middle of the upgrade, it might not be 
      bootable because of drivers not being properly detected and 
      loaded. (See <ref id="upgrade_preparations"> for recommendations on 
      preparing for this possibility if you are upgrading remotely.)
    </p>
    <p>
      Unless your system has the <tt>desktop</tt> task installed, or other 
      packages that would cause an unacceptable number of package removals, 
      it is therefore recommended that you upgrade the kernel on its own at 
      this point.
    </p>
    <p>
      To proceed with this kernel upgrade, run:
     <example>
# aptitude install linux-image-2.6-<var>flavor</var>
          </example>
      See <ref id="kernel-metapackage"> for help in determining which flavor 
      of kernel package you should install.
    </p>
    <p>
      In the desktop case, it is unfortunately not possible to ensure the 
      new kernel package is installed immediately after the new 
      <package>udev</package> is installed, so there is a window of unknown 
      length when your system will have no kernel installed with full 
      hotplug support. See <ref id="newkernel"> for information on 
      configuring your system to not depend on hotplug for booting.
    </p>
   </sect1>
   <sect1 id="upgrading_other">
    <heading>
      残りのシステムのアップグレード
    </heading>
    <p>
      さて、アップグレードの主要部分を続行する準備が整いました。以下のコマンドを実行してください:
    </p>
    <p>
     <example>
# aptitude dist-upgrade
	  </example>
    </p>
    <p>
      This will perform a complete upgrade of the system, i.e. install the 
      newest available versions of all packages, and resolve all possible 
      dependency changes between packages in different releases. If 
      necessary, it will install some new packages (usually new library 
      versions, or renamed packages), and remove any conflicting obsoleted 
      packages.
    </p>
    <p>
      CD-ROM のセットからアップグレードする場合には、アップグレード作業の最中に CD を交換するよう、数回指定されることになります。同じ 
      CD を複数回入れなければならないかもしれません。これはパッケージ間の相互依存関係のせいで、これらのパッケージが別々の CD 
      に入っていることもあるからです。
    </p>
    <p>
      現在インストールされているパッケージの更新版が、他のパッケージのインストール状態を変更しなければならないような場合には、そのパッケージは現在のバージョンのままになります 
      ("held back" と表示されます)。この状態は、<prgn>aptitude</prgn> 
      でこれらのパッケージをインストール対象として選択するか、<tt>aptitude -f install 
      <var>package</var></tt> を試すかのどちらかで解決できます。
    </p>
   </sect1>
   <sect1 id="get_signatures">
    <heading>
      Getting package signatures
    </heading>
    <p>
      After the upgrade, with the new version of <prgn>apt</prgn> you can 
      now update your package information, which will include the new 
      package signature checking mechanism:
    </p>
    <p>
     <example>
# aptitude update
	  </example>
    </p>
    <p>
      The upgrade will have already retrieved and enabled the signing keys 
      for Debian's package archives. If you add other (unofficial) package 
      sources, <prgn>apt</prgn> will print warnings related to its inability 
      to confirm that packages downloaded from them are legitimate and have 
      not been tampered with. For more information please see <ref 
      id="pkgmgmt">.
    </p>
    <p>
      You will notice that, since you are using the new version of 
      <prgn>apt</prgn>, it will download package differences files 
      (<tt>pdiff</tt>) instead of the full package index list. For more 
      information on this feature please read <ref id="apt-pdiff">.
    </p>
   </sect1>
   <sect1 id="trouble">
    <heading>
      アップグレード中の注意点
    </heading>
    <p>
      If an operation using <prgn>aptitude</prgn>, <prgn>apt-get</prgn>, or 
      <prgn>dpkg</prgn> fails with the error
     <example>
E: Dynamic MMap ran out of room
</example>
      デフォルトのキャッシュ容量では不十分だということです。これを解決するには、<file>/etc/apt/sources.list</file> 
      から不要な行を削除もしくはコメントアウトするか、キャッシュサイズを増やします。キャッシュサイズを増やすには、<file>/etc/apt/apt.conf</file> 
      に <tt>APT::Cache-Limit</tt> 
      を設定します。以下のコマンドを実行すれば、アップグレードするには十分な値が設定されます:
     <example>
# echo 'APT::Cache-Limit "12500000";' >> /etc/apt/apt.conf
</example>
      ここでは、<file>/etc/apt/apt.conf</file> ファイル内にまだこの値を設定していない場合を想定しています。
    </p>
    <p>
      Sometimes it's necessary to enable the <tt>APT::Force-LoopBreak</tt> 
      option in APT to be able to temporarily remove an essential package 
      due to a Conflicts/Pre-Depends loop. <prgn>aptitude</prgn> will alert 
      you of this and abort the upgrade. You can work around that by 
      specifying <tt>-o APT::Force-LoopBreak=1</tt> option on 
      <prgn>aptitude</prgn> command line.
    </p>
    <p>
      システムの依存関係の構造が非常に混乱していて、手動での介入が必要となることもあります。通常これは <prgn>aptitude</prgn> 
      を用いるか、あるいは
     <example>
# dpkg --remove <var>package_name</var>
          </example>
      として、目ざわりなパッケージを消す作業になります。または次の作業でもよいかもしれません。
     <example>
# aptitude --fix-broken install
# dpkg --configure --pending
          </example>
    </p>
    <p>
      極端な場合には、コマンドラインから次のように入力して、再インストールしなければならないかもしれません。
     <example>
# dpkg --install <var>/path/to/package_name.deb</var>
          </example>
    </p>
    <p>
      「純粋な」&oldreleasename; 
      システムからのアップグレードでは、ファイルの競合は起こらないはずですが、非公式なバックポートパッケージをインストールしているなら起こるかもしれません。ファイルの競合が起こると、次のようなエラーになります:
     <example>
Unpacking <var>&lt;package-foo&gt;</var> (from <var>&lt;package-foo-file&gt;</var>) ...
dpkg: error processing <var>&lt;package-foo&gt;</var> (--install):
 trying to overwrite `<var>&lt;some-file-name&gt;</var>',
 which is also in package <var>&lt;package-bar&gt;</var>
dpkg-deb: subprocess paste killed by signal (Broken pipe)
 Errors were encountered while processing:
 <var>&lt;package-foo&gt;</var>
          </example>
    </p>
    <p>
      ファイルの競合を解消するには、エラーメッセージの<em>最後の</em>行に表示されたパッケージを強制的に削除します:
     <example>
# dpkg -r --force-depends <var>package_name</var>
          </example>
    </p>
    <p>
      問題が修正できたら、先に示したように <tt>aptitude</tt> コマンドを繰り返し入力すれば、アップグレードを再開できます。
    </p>
    <p>
      アップグレードの最中に、いくつかのパッケージの設定・再設定に関する質問が表示されます。<file>/etc/init.d</file> と 
      <file>/etc/terminfo</file> ディレクトリに置かれるファイルと 
      <file>/etc/manpath.config</file> 
      に関しては、パッケージメンテナのバージョンに置き換えるようにしてください。システムの整合性を保つためには `yes' 
      と答えることが必要になります。古いバージョンも <tt>.dpkg-old</tt> 
      という拡張子で保存されていますので、戻すのはいつでもできます。
    </p>
    <p>
      If you're not sure what to do, write down the name of the package or 
      file and sort things out at a later time. You can search in the 
      typescript file to review the information that was on the screen 
      during the upgrade.
    </p>
   </sect1>
  </sect>
  <sect id="newkernel">
   <heading>
     カーネルと関連パッケージのアップグレード
   </heading>
   <p>
     Linux 
     カーネルは、他のパッケージとは別にアップグレードすべきです。そのようにしたい場合は、<package>linux-image-*</package> 
     パッケージのどれか一つをインストールするか、カスタマイズしたカーネルをソースからコンパイルします。カーネルのアップグレードに伴って生じる可能性がある問題に関しては、本セクションの情報を参照してください。
   </p>
    <![ %defaulted-2.4 [

   <p>
     If you are currently using a 2.4 kernel, you should also read <ref 
     id="upgrade-to-2.6"> carefully.
   </p>
    ]]>

   <sect1 id="kernel-metapackage">
    <heading>
      Installing the kernel metapackage
    </heading>
    <p>
      &oldreleasename; から &releasename; への dist-upgrade を実行する際には、新しい 
      linux-image-2.6-* メタパッケージをインストールすることを強くお勧めします。このパッケージは、dist-upgrade 
      の過程で自動的にインストールされるかもしれません。次のように実行すると、このパッケージがインストールされたか確認できます。
     <example>
# dpkg -l "linux-image*" | grep ^ii
          </example>
    </p>
    <p>
      何も出力されない場合は、新しい linux-image パッケージを手作業でインストールする必要があります。利用可能な 
      linux-image-2.6 メタパッケージの一覧を見るには次のように実行してください。
     <example>
# apt-cache search linux-image-2.6- | grep -v transition
          </example>
    </p>
    <p>
      If you are unsure about which package to select, run <tt>uname -r</tt> 
      and look for a package with a similar name. For example, if you see 
      '2.4.27-3-686', it is recommended that you install 
      <package>linux-image-2.6-686</package>. <![ %i386 [ (Note that the 386 
      flavor no longer exists; if you are currently using the 386 kernel 
      flavor, you should install the 486 flavor instead.) ]]> You may also 
      use <prgn>apt-cache</prgn> to see a long description of each package 
      in order to help choose the best one available. For example:
     <example>
# apt-cache show linux-image-2.6-686
          </example>
    </p>
    <p>
      インストールするカーネルイメージが決まったら、<tt>aptitude install</tt> 
      でインストールします。新しいカーネルがインストールされたら、再起動できる機会に再起動し、新しいバージョンのカーネルを有効にしてください。
    </p>
    <p>
      もうちょっと冒険したい人には、自分のカスタムカーネルをコンパイルする方法も &debian; 
      は提供しています。<package>kernel-package</package> 
      をインストールして、<file>/usr/share/doc/kernel-package</file> の文書を読んでみてください。
    </p>
   </sect1>
   <sect1 id="upgrade-from-2.6">
    <heading>
      2.6 系カーネルからのアップグレード
    </heading>
    <p>
      If you are currently running a 2.6 series kernel from &oldreleasename; 
      this upgrade will take place automatically after you do a full upgrade 
      of the system packages (as described in <ref id="upgradingpackages">).
    </p>
    <p>
      If possible, it is to your advantage to upgrade the kernel package 
      separately from the main <tt>dist-upgrade</tt> to reduce the chances 
      of a temporarily non-bootable system. See <ref id="upgrading_kernel"> 
      for a description of this process. Note that this should only be done 
      after the minimal upgrade process described in <ref 
      id="minimal_upgrade">.
    </p>
    <p>
      You can also take this step if you are using your own custom kernel 
      and want to use the kernel available in &releasename;. If your kernel 
      version is not supported by <package>udev</package> then it is 
      recommended that you upgrade after the minimal upgrade. If your 
      version is supported by <package>udev</package> you can safely wait 
      until after the full system upgrade.
    </p>
   </sect1>
    <![ %defaulted-2.4 [

   <sect1 id="upgrade-from-2.4">
    <heading>
      Upgrading from a 2.4 kernel
    </heading>
    <p>
      If you have a 2.4 kernel installed, and your system relies on 
      <package>hotplug</package> for its hardware detection you should first 
      upgrade to a 2.6 series kernel from &oldreleasename; before attempting 
      the upgrade. Make sure that the 2.6 series kernel boots your system 
      and all your hardware is properly detected before you perform the 
      upgrade. The <package>hotplug</package> package is removed from the 
      system (in favor of <package>udev</package>) when you do a full system 
      upgrade. If you do not do the kernel upgrade before this your system 
      might not boot up properly from this point on. Once you have done an 
      upgrade to a 2.6 series kernel in &oldreleasename; you can do a kernel 
      upgrade as described in <ref id="upgrade-from-2.6">.
    </p>
    <p>
      If your system does not rely on 
      <package>hotplug</package><footnote><p>You can have the kernel modules 
      needed by your system loaded statically through proper configuration 
      of <file>/etc/modules</file></p></footnote> you can delay the kernel 
      upgrade to after you have done a full system upgrade, as described in 
      <ref id="upgrading_other">. Once your system has been upgraded you can 
      then do the following (changing the kernel package name to the one 
      most suited to your system by substituting <em>&lt;flavor&gt;</em>):
     <example>
# aptitude install linux-image-2.6-&lt;flavor&gt;
        </example>
    </p>
   </sect1>
    ]]>

   <sect1 id="device-reorder">
    <heading>
      デバイスの整列順序の変更
    </heading>
    <p>
      &releasename; features a more robust mechanism for hardware discovery 
      than previous releases. However, this may cause changes in the order 
      devices are discovered on your system, affecting the order in which 
      device names are assigned. For example, if you have two network 
      adapters that are associated with two different drivers, the devices 
      eth0 and eth1 refer to may be swapped. Please note that the new 
      mechanism means that if you e.g. exchange ethernet adapters in a 
      running &releasename; system, the new adapter will also get a new 
      interface name.
    </p>
    <p>
      For network devices, you can avoid this reordering by using 
      <package>udev</package> rules, more specifically, through the 
      definitions at 
      <file>/etc/udev/rules.d/z25_persistent-net.rules</file><footnote><p>The 
      rules there are automatically generated by the script 
      <file>/etc/udev/rules.d/z45_persistent-net-generator.rules</file> to 
      have persistent names for network interfaces. Delete this symlink to 
      disable persistent device naming for NICs by 
      <package>udev</package>.</p></footnote>. Alternatively you can use the 
      <prgn>ifrename</prgn> utility to bind physical devices to specific 
      names at boot time. See <manref section="8" name="ifrename"> and 
      <manref section="5" name="iftab"> for more information. The two 
      alternatives (<package>udev</package> and <prgn>ifrename</prgn>) 
      should not be used at the same time.
    </p>
    <p>
      For storage devices, you can avoid this reordering by using 
      <package>initramfs-tools</package> and configuring it to load storage 
      device driver modules in the same order they are currently loaded. To 
      do this, identify the order the storage modules on your system were 
      loaded by looking at the output of 
      <prgn>lsmod</prgn>. <prgn>lsmod</prgn> lists modules in the reverse 
      order that they were loaded in, i.e., the first module in the list was 
      the last one loaded. Note that this will only work for devices which 
      the kernel enumerates in a stable order (like PCI devices).
    </p>
    <p>
      しかし、最初に起動した後にモジュールを削除したりロードしなおしたりすると、この順序にも影響が出ます。また、カーネルには静的にリンクされたドライバが含まれているかもしれず、そのようなドライバの名前は 
      <prgn>lsmod</prgn> の出力に現れません。<file>/var/log/kern.log</file> や 
      <prgn>dmesg</prgn> の出力に目を通すと、これらのドライバの名前やロード順を解読できるかもしれません。
    </p>
    <p>
      これらのモジュール名を、起動時にロードされるべき順序で <file>/etc/initramfs-tools/modules</file> 
      に追加してください。モジュール名の一部は &oldreleasename; と &releasename; 
      では異なるかもしれません。例えば、sym53c8xx_2 は sym53c8xx になりました。
    </p>
    <p>
      You will then need to regenerate your initramfs image(s) by executing 
      <tt>update-initramfs -u -k all</tt>.
    </p>
    <p>
      Once you are running a &releasename; kernel and 
      <package>udev</package>, you may reconfigure your system to access 
      disks by an alias that is not dependent upon driver load order. These 
      aliases reside in the <file>/dev/disk/</file> hierarchy.
    </p>
   </sect1>
    <![ %ia64 [

   <sect1>
    <heading>
      シリアルデバイスの順序の変更
    </heading>
    <p>
      HP のマシンで MP のシリアルコンソールポート (三頭ケーブルに "console" というラベルのついたコネクタ) 
      を使用している場合、このカーネルのアップグレードでコンソールが壊れます!
    </p>
    <p>
      Upon reboot, the system will show up the message "Loading initrd...." 
      but it will stop there. Notice that systems with outdated firmware 
      will show similar symptoms, although the issue is related to kernel 
      incompatibilities (see <ref id="upgrade-to-2.6">).
    </p>
    <p>
      アップグレード前に以下の情報を読んでください。
    </p>
    <p>
     <list>
      <item>
       <p>
         コンソールデバイスが <file>ttyS0</file> から 
         <file>ttyS1</file>、<file>ttyS2</file>、<file>ttyS3</file> 
         のいずれかに変更されます。したがって、
        <list>
         <item>
          <p>
            <file>/etc/inittab</file> を編集し、<file>/dev/ttyS1</file> 
            (rx4640、rx5670、rx7620、rx8620、Superdome)、<file>/dev/ttyS2</file> 
            (rx1600)、<file>/dev/ttyS3</file> (rx2600) のいずれかの getty 
            エントリを追加してください。
          </p>
         </item>
         <item>
          <p>
            <file>/etc/securetty</file> 
            を編集し、<file>ttyS1</file>、<file>ttyS2</file>、<file>ttyS3</file> 
            のいずれかを追加してください。
          </p>
         </item>
         <item>
          <p>
            これからも古いカーネルを起動できるよう、<file>/etc/inittab</file> と 
            <file>/etc/securetty</file> の既存の <file>ttyS0</file> 
            エントリはそのまま残しておいてください。
          </p>
         </item>
        </list>
       </p>
      </item>
      <item>
       <p>
         <file>/etc/elilo.conf</file> を編集して "console=" 引数を全て削除してください。
       </p>
      </item>
      <item>
       <p>
         <prgn>elilo</prgn> を実行し、新しい設定のブートローダをインストールしてください。
       </p>
      </item>
      <item>
       <p>
         再起動し、EFI 起動オプションメンテナンスメニューを用いてコンソール出力・入力・標準エラー出力にデバイスを 1 
         つだけ選択してください。その上で、コールドリセットを行って変更を有効にしてください。
       </p>
       <p>
         MP コンソールについては、"Acpi(HWP0002,700)/Pci(...)/Uart" 
         をパスに含むデバイスを選択するよう注意してください。
       </p>
      </item>
     </list>
    </p>
    <p>
      これらの変更に関する詳細情報や問題解決のヒントは <url 
      id="http://lists.debian.org/debian-ia64/2005/01/msg00008.html"> 
      で閲覧可能です。
    </p>
   </sect1>
    ]]>

  </sect>
  <sect id="nownownow">
   <heading>
     再起動の前にすべきこと
   </heading>
   <p>
     <tt>aptitude dist-upgrade</tt> 
     が終了したら、「公式」にはアップグレードは終了したことになります。しかし次に再起動する<em>前に</em>、面倒を見てやらなければならないことがいくつかあります。
   </p>
   <sect1 id="convert-devfs">
    <heading>
      Converting from devfs
    </heading>
    <p>
      Debian kernels no longer include support for <tt>devfs</tt>, so 
      <tt>devfs</tt> users will need to convert their systems manually 
      before booting an &releasename; kernel.
    </p>
    <p>
      If you see the string 'devfs' in <file>/proc/mounts</file>, you are 
      most likely using <tt>devfs</tt>. Any config files that reference 
      <tt>devfs</tt>-style names will need to be adjusted to use 
      <package>udev</package>-style names. Files that are likely to refer to 
      <tt>devfs</tt>-style device names include <file>/etc/fstab</file>, 
      <file>/etc/lilo.conf</file>, <file>/boot/grub/menu.lst</file>, and 
      <file>/etc/inittab</file>.
    </p>
    <p>
      生じる可能性がある問題に関するさらに詳しい情報が、バグ報告 <url id="http://bugs.debian.org/341152" 
      name="#341152"> で入手可能です。
    </p>
   </sect1>
    <![ %sparc [

   <sect1 id="missingdrivers">
    <heading>
      Possible missing drivers in initrd
    </heading>
    <p>
      The &releasename; kernels do not yet have full sysfs support for the 
      native sparc sbus. <package>initramfs-tools</package> relies on this 
      to include drivers for disk controllers in the initrd. If a driver is 
      not included in the initrd, your system may fail to boot.
    </p>
    <p>
      If your system uses the <tt>esp</tt> or <tt>qlogicpti</tt> module to 
      access your hard disks, you will need to include that module in 
      <file>/etc/initramfs-tools/modules</file> and regenerate the initrd 
      before you reboot your system. The initrd can be regenerated using:
     <example>
# update-initramfs -u -k all
          </example>
    </p>
     ]]><![ %hppa [

   </sect1>
   <sect1 id="missingdrivers">
    <heading>
      Possible missing drivers in initrd
    </heading>
    <p>
      The &releasename; kernels do not yet have full sysfs support for the 
      native HP bus. <package>initramfs-tools</package> relies on this to 
      include drivers for disk controllers in the initrd. If a driver is not 
      included in the initrd, your system may fail to boot.
    </p>
    <p>
      If your system uses the <tt>lasi700</tt> or <tt>zalon7xx</tt> module 
      to access your hard disks, you will need to include that module in 
      <file>/etc/initramfs-tools/modules</file> and regenerate the initrd 
      before you reboot your system. The initrd can be regenerated using:
     <example>
# update-initramfs -u -k all
          </example>
    </p>
   </sect1>
    ]]><![ %i386-amd64 [

   <sect1 id="rerunlilo">
    <heading>
      lilo の再実行
    </heading>
    <p>
      If you are using <package>lilo</package> as your bootloader (it is the 
      default bootloader for some installations of &oldreleasename;) it is 
      strongly recommended that you rerun <prgn>lilo</prgn> after the 
      upgrade:
     <example>
# /sbin/lilo
          </example>
    </p>
    <p>
      Notice this is needed even if you did not upgrade your system's 
      kernel, as <prgn>lilo</prgn>'s second stage will change due to the 
      package upgrade.
    </p>
    <p>
      また、<file>/etc/kernel-img.conf</file> の内容を調べ、<em>do_bootloader = 
      Yes</em> 
      と書かれていることを確認してください。この設定のとおり、カーネルをアップグレードした後には必ずブートローダが再実行されます。
    </p>
    <p>
      If you encounter any issues when running <prgn>lilo</prgn>, review the 
      symbolic links in <file>/</file> to <file>vmlinuz</file> and 
      <file>initrd</file> and the contents of your 
      <file>/etc/lilo.conf</file> for discrepancies.
    </p>
    <p>
      If you forgot to rerun <prgn>lilo</prgn> before the reboot or the 
      system is accidentally rebooted before you could do this manually, 
      your system might fail to boot. Instead of the lilo prompt, you will 
      only see <em>LI</em> when booting the system<footnote><p>For more 
      information on <prgn>lilo</prgn>'s boot error codes please see <url 
      id="http://tldp.org/HOWTO/Bootdisk-HOWTO/a1483.html" name="The Linux 
      Bootdisk HOWTO">.</p></footnote>. In order to recover from this you 
      will have to start up a media installation disk in <em>rescue</em> 
      mode. For more information on how to do this please review the Debian 
      Installer's Manual chapter <url 
      id="http://www.debian.org/releases/etch/i386/ch08s07.html" 
      name="Recovering a Broken System"> and the <url 
      id="http://wiki.debian.org/DebianInstaller/FAQ" name="Debian Installer 
      FAQ">.
    </p>
   </sect1>
    ]]><![ %s390 [

   <sect1 id="s390-config">
    <heading>
      S/390 hardware configuration
    </heading>
    <p>
      Not all S/390 hardware can be configured automatically. For the 
      &releasename; kernels a new utility 
      <package>sysconfig-hardware</package> is used to correctly set up 
      devices. Unfortunately documentation for this utility and its 
      configuration files is not yet available. The configuration files for 
      <package>sysconfig-hardware</package> can be found under 
      <file>/etc/sysconfig/</file>.
    </p>
    <p>
      Especially if your system is currently running a 2.4 kernel, getting 
      the configuration right can be a challenge. If you need any help, feel 
      free to contact the <url id="http://lists.debian.org/debian-s390" 
      name="Debian S/390 mailing list">.
    </p>
    <p>
      First install the utility and regenerate the initramfs initrd as the 
      utility provides some scripts that need to be included in the initrd:
     <example>
# aptitude install sysconfig-hardware
# update-initramfs -u -k all
	  </example>
    </p>
    <sect2 id="s390-dasd">
     <heading>
       Configuration for disks
     </heading>
     <p>
       This is done by modifying <file>/etc/zipl.conf</file>. The sysconfig 
       utility can use the device path to the root device to enable it, 
       which means that this path needs to be passed in the kernel boot 
       parameters. For a regular dasd, the path is composed as follows:
      <example>
&lt;bus&gt;-&lt;device&gt;
	  </example>
       For the <tt>root</tt> parameter the partition needs to be appended to 
       the path. So if your dasda is <tt>0.0.0122</tt>, instead of 
       <file>root=/dev/dasda1</file> you would include the following in the 
       <tt>parameters</tt> line in <tt>/etc/zipl.conf</tt>:
      <example>
root=/dev/disks/by-path/ccw-0.0.0122-part1
	  </example>
       Or, alternatively you can use the <tt>enable</tt> parameter to 
       specify the device to be enabled; in that case the partition:
      <example>
root=/dev/dasda1 enable=ccw-0.0.0122
	  </example>
       The paths to be used can vary for different devices. For example, for 
       disks on a zFCP fiberchannel host adapter, the path consists of bus, 
       device, driver, wwpn and lun. The parameters for a RAID1 would look 
       like (on a single line):
      <example>
root=/dev/md0 enable=ccw-0.0.2900-zfcp-0x21000020371c93a5:0
enable=ccw-0.0.2900-zfcp-0x21000020371d8f94:0
	  </example>
     </p>
     <p>
       Other dasd devices (dasds not needed to bring up the root file system 
       are enabled through configuration files in 
       <file>/etc/sysconfig/hardware/</file>. For a regular dasd, you just 
       need to touch a file with the device path in its name:
      <example>
# cd /etc/sysconfig/hardware
# touch config-ccw-0.0.0122
	  </example>
       For disks on a zFCP fiberchannel host adapter the individual devices 
       are listed inside the file. Using the same example as above, create a 
       file <file>config-ccw-0.0.2900</file> containing (second device 
       truncated for readability):
      <example>
ZFCP_DEVICES=(0x21000020371c93a5:0x0000000000000000 0x2100...:0x...)
	  </example>
     </p>
    </sect2>
    <sect2 id="s390-other">
     <heading>
       Configuration for network devices
     </heading>
     <p>
       Network devices are enabled through configuration files in 
       <file>/etc/sysconfig/hardware/</file>. For a ctc network device with 
       read channel <tt>0.0.0a00</tt> and write channel <tt>0.0.0a01</tt> 
       and using the S/390 protocol, you would create a file 
       <file>config-ccw-0.0.0a00</file> containing:
      <example>
CCWGROUP_CHANS=(0.0.0a00 0.0.0a01)
CTC_PROTOCOL=0
	  </example>
       For a qeth network device with layer2 mode enabled, this could be a 
       file <file>config-ccw-0.0.0600</file>:
      <example>
CCWGROUP_CHANS=(0.0.0600 0.0.0601 0.0.0602)
QETH_OPTIONS=(layer2)
	  </example>
     </p>
     <p>
       Supported options for ctc are: <tt>CTC_PROTOCOL</tt> and 
       <tt>CTC_BUFFER</tt>; and for qeth: <tt>QETH_PORTNAME</tt>, 
       <tt>QETH_PORTNO</tt> and <tt>QETH_OPTIONS</tt>.
     </p>
     <p>
       As network devices on S/390 do not have a stable MAC address, it is 
       not possible to use <package>udev</package> persistent device 
       naming. Instead you can add an option <tt>INTERFACE_NAME</tt> in the 
       configuration file to rename an interface.
     </p>
    </sect2>
   </sect1>
    ]]>

   <sect1 id="mdadm">
    <heading>
      mdadm のアップグレード
    </heading>
    <p>
      mdadm は、MD アレイ (RAID) を initial ramdisk 
      から再構築したりシステム初期化シーケンス中に再構築するのに設定ファイルを必要とするようになりました。パッケージのアップグレードを終えた後、<strong>再起動する前に</strong>必ず 
      <file>/usr/share/doc/mdadm/README.upgrading-2.5.3.gz</file> 
      に書かれている説明を読み、それに従ってください。このファイルの最新版は <url 
      id="http://svn.debian.org/wsvn/pkg-mdadm/mdadm/trunk/debian/README.upgrading-2.5.3?op=file"> 
      から入手可能です。問題が生じた場合は参考にしてください。
    </p>
   </sect1>
  </sect>
  <sect id="for_next">
   <heading>
     Preparing for the next release
   </heading>
   <p>
     After the upgrade there are several things you can do to prepare for 
     the next release.
   </p>
   <p>
    <list>
     <item>
      <p>
        If using <prgn>grub</prgn>, edit <file>/etc/kernel-img.conf</file> 
        and adjust the location of the <prgn>update-grub</prgn> program 
        changing <file>/sbin/update-grub</file> to 
        <file>/usr/sbin/update-grub</file>.
      </p>
     </item>
     <item>
      <p>
        If the new kernel image metapackage was pulled in as a dependency of 
        the old one, it will be marked as automatically installed, which 
        should be corrected:
       <example>
# aptitude unmarkauto $(dpkg-query -W 'linux-image-2.6-*' | cut -f1)
</example>
      </p>
     </item>
     <item>
      <p>
        Remove &oldreleasename;'s kernel metapackages by running:
       <example>
# aptitude purge kernel-image-2.6-&lt;flavor&gt;
</example>
      </p>
     </item>
     <item>
      <p>
        Move any kernel configuration values at 
        <file>/etc/network/options</file> to <file>/etc/sysctl.conf</file>.
      </p>
     </item>
     <item>
      <p>
        Remove obsolete and unused packages as described in <ref 
        id="obsolete">. You should review which configuration files they use 
        and consider purging the packages to remove their configuration 
        files
      </p>
     </item>
    </list>
   </p>
  </sect>
  <sect id="obsolete">
   <heading>
     時代遅れ (Obsolete) なパッケージ
   </heading>
   <p>
     数千個の新規パッケージが導入された一方で、&releasename; では &oldreleasename; にはあった 2000 
     個以上の古いパッケージが破棄されたり削除されてもいます。これら時代遅れのパッケージをアップグレードする手段は提供されていません。時代遅れのパッケージを使い続けても構いませんが、Debian 
     プロジェクトは通常 &releasename; がリリースされてから 1 
     年後に<footnote><p>あるいはその期間中に別のリリースが出ない限り。ある時点では、通常 2 
     個のみの安定版リリースがサポートされています。</p></footnote>そのようなパッケージへのセキュリティサポートを打ち切り、その後は他のサポートも提供されないのが常です。もし存在するのなら、利用可能な代替品に置き換えることを推奨します。
   </p>
   <p>
     There are many reasons why packages might have been removed from the 
     distribution: they are no longer maintained upstream; there is no 
     longer a Debian Developer interested in maintaining the packages; the 
     functionality they provide has been superseded by different software 
     (or a new version); or they are no longer considered suitable for 
     &releasename; due to bugs in them. In the latter case, packages might 
     still be present in the "unstable" distribution.
   </p>
   <p>
     更新されたシステム内のどのパッケージが "時代遅れ" 
     なのかを検出するのは、パッケージ管理用フロントエンドが当該パッケージにその旨のマークを付けてくれるので簡単です。<prgn>aptitude</prgn> 
     を使っているのなら、当該パッケージが "Obsolete and Locally Created Packages" 
     欄に列記されているのに気づくでしょう。<prgn>dselect</prgn> 
     も同じようなセクションを提供しますが、表示される一覧はわずかに異なっています。さらに、&oldreleasename; 
     で手作業でパッケージをインストールするのに <prgn>aptitude</prgn> 
     を使っていたのなら、手作業でインストールされたパッケージの記録が取られており、依存元パッケージが削除されればもはや不要となる依存関係のみによって導入されたパッケージに時代遅れのマークを付けることができるでしょう。また 
     <prgn>aptitude</prgn> は、<prgn>deborphan</prgn> 
     とは異なり、手作業でインストールしたパッケージには時代遅れのマークを付けません 
     (依存関係によって自動でインストールされたものにはマークを付けます)。
   </p>
   <p>
     時代遅れのパッケージを見つけるのに使える追加ツールとしては、以下のものがあります - <prgn>deborphan</prgn> や 
     <prgn>debfoster</prgn>、<prgn>cruft</prgn>。<prgn>deborphan</prgn> 
     を強く推奨しますが、同プログラムは (デフォルトモードでは) 時代遅れのライブラリ - "libs" や "oldlibs" 
     セクション内にあり、他のパッケージに使われていないパッケージ - 
     しか報告しません。これらのプログラムが表示したパッケージをやみくもに削除しないでください。特に、誤報しやすい非デフォルトのオプションを積極的に使っている場合はなおさらです。実際に削除する前に、削除を提案されたパッケージを手作業で調査 
     (その中身やサイズ、説明文など) することを強く推奨します。
   </p>
   <p>
     <url id="&url-bts;" name="Debian 
     バグ追跡システム">は、パッケージが削除された理由についての情報を提供してくれることがよくあります。あるパッケージ自体についてのアーカイブ化されたバグ報告と、<url 
     id="&url-bts;cgi-bin/pkgreport.cgi?pkg=ftp.debian.org&#38;archive=yes" 
     name="ftp.debian.org pseudo-package"> のアーカイブ化されたバグ報告の両方を調査すべきです。
   </p>
   <sect1 id="dummy">
    <heading>
      ダミーパッケージ
    </heading>
    <p>
      &oldreleasename; のいくつかのパッケージは &releasename; 
      では複数のパッケージに分割されていますが、これは大半がシステムの保守性を改善するためです。この場合におけるアップグレードを容易にするために、&releasename; 
      はしばしば "ダミーの" パッケージ - &oldreleasename; 
      での古いパッケージと同じ名前で、新規パッケージを導入するための依存関係を備えた空のパッケージ - を提供しています。これらの "ダミー" 
      パッケージはアップグレード後は Obsolete 扱いとされ、安全に削除することができます。
    </p>
    <p>
      大半の (すべてではない) 
      ダミーパッケージの説明文には、その目的が記されています。しかしながらダミーパッケージの説明文は統一されていないため、自分のシステム内のダミーパッケージを検出するために 
      <prgn>deborphan</prgn> を <tt>--guess</tt> 
      オプション付で使うこともできます。いくつかのダミーパッケージは、アップグレード後に削除されることを意図しておらず、代わりに時間とともに変化するプログラムの利用可能な最新バージョンの記録用として使われることに注意してください。
    </p>
   </sect1>
  </sect>
 </chapt>
 <chapt id="information">
  <heading>
    &releasename; で知っておくべき問題点
  </heading>
  <sect id="problems">
   <heading>
     生じうる問題
   </heading>
   <p>
     Sometimes, changes have side-effects we cannot reasonably avoid, or we 
     expose bugs somewhere else. We document here the issues we are aware 
     of. Please also read the errata, the relevant packages' documentation, 
     bug reports and other information mentioned in <ref id="morereading">.
   </p>
   <sect1 id="udev">
    <heading>
      Problems with devices related to udev
    </heading>
    <p>
      <package>udev</package> 
      は広範囲にわたってテストされていますが、いくつかのデバイスでは若干の修正が必要になるという問題があるかもしれません。たいていの問題は、デバイスファイルの権限や所有者が変更されるというものです。(<file>/dev/video</file> 
      や <file>/dev/radio</file> など) デフォルトではデバイスファイルが作成されない場合もあります。
    </p>
    <p>
      <package>udev</package> は、これらの問題に対処する設定の仕組みを提供しています。詳しくは、<manref 
      section="8" name="udev"> や <file>/etc/udev</file> を見てください。
    </p>
   </sect1>
    <![ %defaulted-2.4 [

   <sect1 id="incompatible-2.4">
    <heading>
      Some applications may no longer work with a 2.4 kernel
    </heading>
    <p>
      Some applications in &releasename; may no longer work with a 2.4 
      kernel, for example because they require <tt>epoll()</tt> support, 
      which is not available in 2.4 kernels. Such applications may either 
      not work at all or not work correctly until the system has been 
      rebooted with a 2.6 kernel.
    </p>
    <p>
      One example is the HTTP proxy <package>squid</package>.
    </p>
   </sect1>
    ]]>

   <sect1 id="window-scaling">
    <heading>
      Certain network sites cannot be reached by TCP
    </heading>
    <p>
      Since 2.6.17, Linux aggressively uses TCP window scaling which is 
      specified in RFC 1323. Some servers have a broken behavior, and 
      announce wrong window sizes for themselves. Please see the bugs <url 
      id="http://bugs.debian.org/381262" name="#381262"> and <url 
      id="http://bugs.debian.org/395066" name="#395066"> for more 
      information.
    </p>
   </sect1>
    <![ %i386 [

   <sect1 id="poweroff">
    <heading>
      自動電源オフが機能しなくなりました
    </heading>
    <p>
      一部の古いシステムでは、もはや <tt>shutdown -h</tt> で電源がオフにならないかもしれません 
      (しかしシステムの停止だけはします)。これは、電源オフに apm 
      を使用する必要があるためです。<package>grub</package> や <package>lilo</package> 
      の設定ファイルでの指定などを通じて、カーネルのコマンドラインに <tt>acpi=off apm=power_off</tt> 
      を追加すれば、この問題は解決するかもしれません。さらに詳しくはバグ <url 
      id="http://bugs.debian.org/390547" name="#390547"> を参照してください。
    </p>
   </sect1>
    ]]>

   <sect1 id="apt-pdiff">
    <heading>
      Slower updates of APT package index files
    </heading>
    <p>
      By default, the &releasename version of <prgn>apt</prgn> uses a new 
      way to update APT package index files (when you run <tt>aptitude 
      update</tt>) which downloads differences files (instead of the full 
      package index file) called <tt>pdiff</tt>. This new feature should use 
      less bandwidth and be faster for most systems. Unfortunately, it can 
      also have the opposite effect of making the updates slower on systems 
      with fast network connections (or a very nearby mirror) which are 
      infrequently updated, as it might take more time for the system to 
      merge the differences files than to download a full package index. It 
      is possible to disable this feature by adding <tt>Acquire::Pdiffs 
      "false";</tt> to the <file>/etc/apt/apt.conf</file> configuration 
      file.
    </p>
    <p>
      This change mostly affects users of the <em>unstable</em> and 
      <em>testing</em> branch of &debian;, due to the changing nature of 
      these archives. Users of &releasename; will notice this feature mainly 
      when updating their package status for the security archive.
    </p>
   </sect1>
    <![ %i386 [

   <sect1 id="hp-acpi">
    <heading>
      &releasename; のカーネルでは一部の HP ラップトップモデルの ACPI サポートが無効になっています
    </heading>
    <p>
      Certain models of HP laptops have an ACPI BIOS that is incompatible 
      with the Linux 2.6.18 kernel shipped in &releasename;, which would 
      prevent the fans from spinning up leading to unnecessary heat 
      stress. Also, fans might not work after the system is suspended. The 
      kernel therefore disables ACPI support internally when it detects 
      certain ACPI BIOS versions. Models known to be affected by this change 
      include the HP nx6125, nx6120, nx6325, nc6120 and nc6000 models.
    </p>
    <p>
      これらのシステムで ACPI サポートが必要なユーザは、2.6.19 以降の Linux 
      カーネルをインストールするとよいでしょう。さらに詳しい情報は、Debian のバグ <url 
      id="http://bugs.debian.org/404143" name="#404143"> や <url 
      id="http://bugs.debian.org/400488" name="#400488">、そして Linux Kernel 
      のバグ <url id="http://bugzilla.kernel.org/show_bug.cgi?id=5534" 
      name="#5534"> や <url 
      id="http://bugzilla.kernel.org/show_bug.cgi?id=7122" name="#7122"> 
      を参照してください。
    </p>
   </sect1>
    ]]>

   <sect1 id="asynchronous-network-start">
    <heading>
      Asynchronous network initialization may cause unpredictable behavior
    </heading>
    <p>
      On systems which use <package>udev</package> to load drivers for 
      network interfaces, it is possible due to the asynchronous nature of 
      <package>udev</package> that the network driver will not be loaded 
      before <prgn>/etc/init.d/networking</prgn> runs on system 
      boot. Although including <tt>allow-hotplug</tt> to 
      <file>/etc/network/interfaces</file> (in addition to <tt>auto</tt>) 
      will ensure that the network interface is enabled once it becomes 
      available, there is no guarantee that this will finish before the boot 
      sequence begins to start network services, some of which may not 
      behave correctly in the absence of the network interface.
    </p>
   </sect1>
    <![ %not-s390 [

   <sect1 id="wpa">
    <heading>
      Trouble when using WPA secured wireless networks
    </heading>
    <p>
      In &oldreleasename;, the <package>wpasupplicant</package> package was 
      set up as a system service, configured via 
      <file>/etc/default/wpasupplicant</file> and a user-provided 
      <file>/etc/wpasupplicant.conf</file>.
    </p>
    <p>
      In &releasename;, <file>/etc/init.d/wpasupplicant</file> has been 
      dropped and the Debian package now integrates with 
      <file>/etc/network/interfaces</file>, similar to other packages such 
      as <package>wireless-tools</package>. This means 
      <package>wpasupplicant</package> no longer provides a system service 
      directly.
    </p>
    <p>
      For information on configuring wpasupplicant please refer to 
      <file>/usr/share/doc/wpasupplicant/README.modes.gz</file>, which gives 
      examples for <file>/etc/network/interfaces</file> files. Updated 
      information about the usage of the <package>wpasupplicant</package> 
      package in Debian can be found in the <url 
      id="http://wiki.debian.org/WPA" name="Debian Wiki">.
    </p>
   </sect1>
  </sect>
   ]]><![ %defaulted-2.4 [

  <sect id="upgrade-to-2.6">
   <heading>
     2.6 系カーネルへのアップグレード
   </heading>
   <p>
     2.6 系カーネルは、2.4 
     系カーネルから大きな変更が加えられています。モジュールの名称が変更され、多くのドライバが部分的あるいはほとんど完全に書き換えられました。したがって、以前のバージョンから 
     2.6 
     系カーネルへのアップグレードは、それほど簡単に済ませられるものではありません。このセクションは、直面するかもしれない問題のいくつかを知っておいてもらおうというのが狙いです。
   </p>
   <p>
     ソースから自分でカーネルをコンパイルしている人は、2.6 
     系カーネルで再起動する前に、<package>module-init-tools</package> 
     がインストールされているのを確認してください。このパッケージは、<package>modutils</package> を 2.6 
     系カーネル用のものに置き換えます。Debian の <package>linux-image</package> 
     パッケージのどれかを使っている場合は、依存関係により自動的にこのパッケージが入っているはずです。
   </p>
   <p>
     <em>LVM</em> を使っている場合は、2.6 系カーネルで再起動する前に <package>lvm2</package> 
     パッケージもインストールしてください。2.6 系カーネルは LVM1 を直接はサポートしていません。LVM1 
     のボリュームにアクセスするには、<package>lvm2</package> の互換レイヤ (dm-mod モジュール) 
     が使われます。初期化スクリプトがどのバージョンのカーネルが使われているかを検出し、適切なバージョンを実行するので、<package>lvm10</package> 
     はインストールしたままでも構いません。
   </p>
   <p>
     <file>/etc/modules</file> ファイル (システム起動時にロードされるモジュールの一覧) 
     内に記述をしているなら、いくつかのモジュール名が変わっているかもしれないことに注意してください。変わっている場合は、ファイル内の記述を新しいモジュール名で更新しなければならないでしょう。
   </p>
    <![ %i386 [

   <p>
     For some SATA disk controllers, the device assigned to a drive and its 
     partitions may change from <file>/dev/hdX</file> to 
     <file>/dev/sdX</file>. If this happens, you will have to modify your 
     <file>/etc/fstab</file> and bootloader configuration 
     accordingly. Unless these changes are made correctly, your system may 
     not boot correctly<footnote><p>It will boot the kernel but will fail 
     when trying to mount the root file system and will abort with an error 
     <em>waiting for root file system</em> followed by <em>unable to mount 
     /dev/hdX ..not found</em>. You can use the <prgn>initramfs</prgn> shell 
     to fix this issue, after you identify the newly assigned device names 
     in the kernel boot messages or by reviewing the contents of 
     <file>/dev/disk/</file>.</p></footnote>.
   </p>
    ]]><![ %ia64 [

   <p>
     HP Itanium systems running older firmware are incompatible with the 2.6 
     kernel in &releasename;. That means you should upgrade your system to 
     the latest firmware before upgrading your kernel. It is recommended you 
     do this before the system upgrade, as if you are already running a 2.6 
     kernel you will automatically retrieve the latest kernel when upgrading 
     the rest of the system (see <ref id="upgrading_other">). Failing to do 
     this will result in an system that does not boot.
   </p>
    ]]>

   <p>
     Once you have installed your 2.6 kernel, but before you reboot, make 
     sure you have a recovery method. First, make sure that the bootloader 
     configuration has entries for both the new kernel and the old, working 
     2.4 kernel. You should also ensure you have a "rescue" floppy or CD-ROM 
     to hand, in case misconfiguration of the bootloader prevents you from 
     booting the old kernel.
   </p>
    <![ %not-s390 [

   <sect1 id="2.6-keyboard">
    <heading>
      キーボードの設定
    </heading>
    <p>
      2.6 系カーネルでの最も劇的な変化は、入力レイヤの基本部分の変更です。この変更により、すべてのキーボードは「ふつうの」PC 
      キーボードのように扱えます。これは、現在異なるタイプのキーボード (例えば USB-MAC や Sun キーボード) 
      を選択している場合、新しい 2.6 系カーネルで再起動後にキーボードがまったく動かない状態になってしまう可能性が非常に高いということです。
    </p>
    <p>
      別のシステムからそのマシンへ SSH を使ってログインできるのなら、<tt>dpkg-reconfigure 
      console-data</tt> と実行して "Select keymap from full list" オプションを選び、そこから 
      "pc" キーボードを選択することでこの問題を解決できます。
    </p>
    <p>
      コンソールで使っているキーボードが影響を受けたということは、X Window System 
      のキーボードも再度設定する必要があるでしょう。<tt>dpkg-reconfigure xserver-xorg</tt> 
      を実行するか、<file>/etc/X11/xorg.conf</file> を直接編集することになります。<ref 
      id="nownownow">で参照されている文書も読んでおいてください。
    </p>
     <![ %i386 [

    <p>
      この問題は、すべての PS/2 および大半の USB キーボードがすでに "normal" PC キーボードとして設定されている 
      &arch-title; アーキテクチャでは影響がないでしょう。
    </p>
     ]]><![ %not-i386 [

    <p>
      USB キーボードを使っているのなら、"normal" PC キーボードか USB-MAC 
      キーボードとして設定されているでしょう。前者の場合、この問題による影響はありません。
    </p>
     ]]>

   </sect1>
   <sect1 id="2.6-mouse">
    <heading>
      マウスの設定
    </heading>
    <p>
      これも入力レイヤの変更によるものですが、2.6 系カーネルへアップグレードした後でマウスが使えなくなったなら、X Window System 
      と <package>gpm</package> 
      を再設定する必要があるでしょう。よくある原因は、マウスからのデータを受け取るデバイスが変わったせいです。別のモジュールをロードする必要もあるかもしれません。
    </p>
     <![ %sparc [

    <p>
      現在、X で <file>/dev/sunmouse</file> を設定しているなら、おそらく 
      <file>/dev/psaux</file> へ変更する必要があります。
    </p>
     ]]>

   </sect1>
   <sect1 id="2.6-sound">
    <heading>
      サウンドの設定
    </heading>
    <p>
      2.6 カーネル用としては、OSS サウンドドライバよりも ALSA サウンドドライバが推奨されます。ALSA 
      サウンドドライバは、デフォルトではモジュールとして提供されます。サウンドを鳴らすには、あなたのサウンドハードウェアに合ったモジュールがロードされる必要があります。一般に該当モジュールがあり、<package>alsa-base</package> 
      に加えて <package>hotplug</package> パッケージか <package>discover</package> 
      パッケージのいずれかがインストールされていれば、自動的にロードされます。<package>alsa-base</package> 
      パッケージはまた、OSS モジュールが <prgn>hotplug</prgn> や <prgn>discover</prgn> 
      によってロードされないようそれらを "ブラックリスト化" します。<file>/etc/modules</file> 内に OSS 
      モジュールの記述があるなら、それらを削除すべきです。
    </p>
   </sect1>
    ]]>

  </sect>
   ]]>

  <sect id="xorg">
   <heading>
     XFree86 から X.Org への移行
   </heading>
   <p>
     The transition to X.Org involves some structural changes. In case all 
     installed packages are from Debian and also included in &releasename;, 
     the upgrade should work without problems. However, experience has shown 
     that there are a few changes to be aware of, as they can potentially 
     cause issues during the upgrade.
   </p>
   <p>
     The most important change is that <file>/usr/X11R6/bin</file> has been 
     dropped and only remains as a symlink to <file>/usr/bin</file>. This 
     means the directory has to be empty at the time the new packages are 
     installed. The new packages conflict with most packages that used 
     <file>/usr/X11R6/bin</file>, but in some cases manual intervention may 
     be needed. Please remember to not run the distribution upgrade from 
     within an X session.
   </p>
   <p>
     X.Org のインストール中にアップグレードが中断した場合、<file>/usr/X11R6/bin</file> 
     にまだ残っているファイルがあるか調べなければなりません。そうしたら (そこにファイルがあれば) どの Debian 
     パッケージがそのファイルをインストールしたかを <tt>dpkg -S</tt> で調べ、該当するパッケージを <tt>dpkg 
     --remove</tt> 
     で削除できます。後で代わりのパッケージをインストールできるよう、削除したパッケージを書き留めておいてください。アップグレードを続ける前に 
     <file>/usr/X11R6/bin</file> にあるファイルはすべて削除する必要があります。
   </p>
   <p>
     さらに詳しい情報やその他の問題点については <url id="http://wiki.debian.org/Xorg69To7"> 
     を読んでください。
   </p>
  </sect>
  <sect id="xorg-8bit">
   <heading>
     No support for 8-bit displays in many applications
   </heading>
   <p>
     After the upgrade to the Xorg and the latest libraries, X terminals 
     which can only represent colors 8 bits depth will not work. This is 
     because the Cairo 2D vector graphics library 
     (<package>libcairo2</package>) doesn't have 8-bit pseudocolor 
     support. This library is used by the GNOME and Xfce desktops as well as 
     by many desktop applications compiled with the Gtk2+ toolikt, such as 
     <package>abiword</package>.
   </p>
   <p>
     Known systems that are affected by this include some Sun machines and X 
     terminals from Tektronix, NCD, IBM and SGI, as well as some other 
     remote X windowing systems. You should configure these terminals to use 
     16-bit colour, if possible.
   </p>
   <p>
     More information is available in Freedesktop's <url 
     id="https://bugs.freedesktop.org/show_bug.cgi?id=4945" name="bug 
     #4945">.
   </p>
  </sect>
  <sect id="exim">
   <heading>
     exim から exim4 へのアップグレード
   </heading>
   <p>
     &releasename; リリースで時代遅れとして扱われるようになったパッケージの 1 つに、メール転送エージェント (MTA) の 
     <package>exim</package> があります。このパッケージは、完全に新しいパッケージである 
     <package>exim4</package> によって置き換えられました。
   </p>
   <p>
     それだけでなく、<package>exim</package> (バージョン 3.xx) 
     はもう何年もの間、上流でメンテナンスされていないので、Debian ではこのバージョンのサポートを打ち切りました。まだ 
     <package>exim</package> 3.xx を使用している場合は、インストールしている 
     <package>exim</package> を <package>exim4</package> 
     に手作業でアップグレードしてください。<package>exim4</package> は既に &oldreleasename; 
     に含まれているので、&releasename; へのアップグレードの前に &oldreleasename; 
     システム上でこのアップグレード作業を行うか、&releasename; 
     へのアップグレードの後で都合のよいときに行うかは選択可能です。ただ、古い <package>exim</package> 
     パッケージが自動的にアップグレードすることはなく、&oldreleasename; 
     のサポートが打ち切られた後はそのパッケージへのセキュリティサポートは行われないということだけは覚えておいてください。
   </p>
   <p>
     Note that, depending on your configuration of 
     <package>debconf</package>, you may not be asked any configuration 
     question during installation of <package>exim4</package>. If no 
     questions are asked, the system will default to a 'local delivery' 
     setup. Configuration is possible using the command <tt>dpkg-reconfigure 
     exim4-config</tt>.
   </p>
   <p>
     Debian の <package>exim4</package> パッケージ群は大規模に文書化されています。パッケージのホームページは 
     Debian Wiki の <url id="http://wiki.debian.org/PkgExim4"> で、README 
     ファイルはパッケージ内部だけでなく <url 
     id="http://pkg-exim4.alioth.debian.org/README/README.Debian.html"> 
     にもあります。
   </p>
   <p>
     README ファイルにはパッケージ化 (Packaging) に関する章があります。この章では、Debian 
     で提供されている複数の異なるパッケージの差異について説明しています。また README ファイルには <prgn>Exim</prgn> 3 
     からのアップグレード (Updating from Exim 3) に関する章があります。この章は、実際に移行を行う際に役に立つでしょう。
   </p>
  </sect>
  <sect id="apache2">
   <heading>
     apache2 のアップグレード
   </heading>
   <p>
     Apache は新しいバージョン 2.2 
     にアップグレードしました。普通のユーザはこのアップグレードによる影響を受けませんが、知っておくべき、生じる可能性がある問題点がいくつかあります。
   </p>
   <p>
     <url id="http://httpd.apache.org/docs/2.2/upgrading.html"> 
     に、上流での変更が記載されています (訳注: 本リリースノート執筆時点では、リンク先の日本語のページに記載されている情報は 1.3 から 
     2.0 で入った変更なので、2.0 から 2.2 
     で入った変更については英語のページを参照してください)。このページを読み、特に以下の内容を記憶に留めておいてください。
    <list>
     <item>
      <p>
        全てのモジュールを再コンパイルする必要があります
      </p>
     </item>
     <item>
      <p>
        認証モジュールについて、名前の変更や再分類が行われました
      </p>
     </item>
     <item>
      <p>
        設定オプションの一部は名前が変わりました
      </p>
     </item>
    </list>
   </p>
   <p>
     Debian 特有の変更としては、デフォルトパッケージが ssl をサポートするようになったため、SSL 
     という文字列がもう定義されていない、などが挙げられます。
   </p>
   <p>
     If you are using the experimental ITK MPM (from the 
     <package>apache2-mpm-itk</package> package), the cgi module will not be 
     correctly enabled by default. To properly enable it, you will need to 
     manually disable <tt>mod_cgid</tt> and enable <tt>mod_cgi</tt>:
    <example>
# cd /etc/apache2/mods-enabled
# rm cgid.conf cgid.load
# ln -s ../mods-available/cgi.load .
# /etc/init.d/apache2 force-reload
        </example>
   </p>
  </sect>
  <sect id="zope">
   <heading>
     Upgrading Zope and Plone
   </heading>
   <p>
     Zope and all related products have been updated. Many products were 
     also dropped from the distribution (either because they were obsoleted, 
     or because they are incompatible with the newer Zope, CMF or Plone.
   </p>
   <p>
     Unfortunately there is no easy and guaranteed way to upgrade a complex 
     <prgn>zope</prgn> or <prgn>plone</prgn> server. Even though Plone 
     includes a migration tool, experience has shown that automatic 
     migrations can easily fail.
   </p>
   <p>
     For this reason, users are recommended to set up their system so they 
     can continue to run the &oldreleasename; installation of Zope/Plone 
     alongside the new &releasename; versions while testing the migration.
   </p>
   <p>
     The easiest and safest way to achieve this, is to make a copy of your 
     &oldreleasename; system to another hard disk or partition, and then 
     upgrade only one of the two copies. You can then use 
     <prgn>chroot</prgn> to run the &oldreleasename; version in parallel to 
     the &releasename; version.
   </p>
   <p>
     It is not possible to have the old and new versions of Zope/Plone 
     installed together on an &releasename; system, partly because the old 
     packages depend on <package>python2.3</package> which cannot be 
     installed together with <package>python2.4</package>.
   </p>
  </sect>
  <sect id="tar">
   <heading>
     Wildcard expansion (globbing) with GNU tar
   </heading>
   <p>
     Previous versions of GNU <prgn>tar</prgn> assumed shell-style globbing 
     when extracting files from or listing an archive. For example:
    <example>
tar xf foo.tar '*.c'
        </example>
     would extract all files whose names end in '.c'. This behavior was not 
     documented and was incompatible with traditional <prgn>tar</prgn> 
     implementations. Therefore, starting from version 1.15.91, GNU 
     <prgn>tar</prgn> no longer uses globbing by default. For example, the 
     above invocation is now interpreted as a request to extract from the 
     archive the file named '*.c'.
   </p>
   <p>
     See <file>/usr/share/doc/tar/NEWS.gz</file> for further information.
   </p>
  </sect>
  <sect id="nis">
   <heading>
     NIS and Network Manager
   </heading>
   <p>
     The version of <prgn>ypbind</prgn> included with <package>nis</package> 
     for &releasename; contains support for Network Manager. This support 
     causes <prgn>ypbind</prgn> to disable NIS client functionality when 
     Network Manager reports that the computer is disconnected from the 
     network. Since Network Manager will usually report that the computer is 
     disconnected when it is not in use, NIS users with NIS client systems 
     should ensure that Network Manager support is disabled on those 
     systems.
   </p>
   <p>
     This can be done by either uninstalling the 
     <package>network-manager</package> package, or editing 
     <file>/etc/default/nis</file> to add <tt>-no-dbus</tt> to 
     <tt>YPBINDARGS</tt>.
   </p>
   <p>
     The use of <tt>-no-dbus</tt> is the default for new installs of Debian, 
     but was not the default in previous releases.
   </p>
  </sect>
  <sect id="php-globals">
   <heading>
     安全でない php の設定の廃止
   </heading>
   <p>
     長年、PHP で <tt>register_globals</tt> 
     の設定をオンにすることは安全でなく危険であるとわかっており、このオプションはこれまでかなりの期間、デフォルトではオフになっていました。この設定が、あまりにも危険であるとして、ついに 
     Debian システムでは廃止されました。同様のことが <tt>safe_mode</tt> と <tt>open_basedir</tt> 
     の欠陥にも当てはまります。これらの欠陥はやはり、かなりの期間メンテナンスされていません。
   </p>
   <p>
     本リリース以降、Debian セキュリティチームは、安全でないとわかっている PHP 
     の多数の設定についてはセキュリティサポートを提供しません。最も重大なのは、<tt>register_globals</tt> 
     がオンになっているために生じる問題への対処は、もはやなされないということです。
   </p>
   <p>
     <tt>register_globals</tt> を必要とする旧式のアプリケーションを実行する場合は、例えば Apache 
     の設定ファイルを用いて、該当する各パスのみに対してこの設定を有効にしてください。さらに詳しい情報は、PHP の付属文書のディレクトリ 
     (<file>/usr/share/doc/php4</file> や <file>/usr/share/doc/php5</file>) 
     に含まれている <file>README.Debian.security</file> ファイルで入手可能です。
   </p>
  </sect>
  <sect id="mozilla-security">
   <heading>
     Mozilla 製品のセキュリティの状態
   </heading>
   <p>
     The Mozilla programs <package>firefox</package> and 
     <package>thunderbird</package> (rebranded in Debian to 
     <package>iceweasel</package> and <package>icedove</package>, 
     respectively), are important tools for many users. Unfortunately the 
     upstream security policy is to urge users to update to new upstream 
     versions, which conflicts with Debian's policy of not shipping large 
     functional changes in security updates. We cannot predict it today, but 
     during the lifetime of &releasename; the Debian Security Team may come 
     to a point where supporting Mozilla products is no longer feasible and 
     announce the end of security support for Mozilla products. You should 
     take this into account when deploying Mozilla and consider alternatives 
     available in Debian if the absence of security support would pose a 
     problem for you.
   </p>
  </sect>
  <sect id="kde-desktop-changes">
   <heading>
     KDE デスクトップ
   </heading>
   <p>
     &releasename; に含まれているバージョンの KDE では、メディアの取り扱い方法が、<file>device:/</file> 
     を用いたアドレスから <file>media:/</file> を用いたアドレスへと変化しました。一部のユーザ設定ファイルには 
     <file>device:/</file> 
     を用いたリンクが含まれている可能性があるので、それらは新しいアドレスに合うよう修正すべきです。特に、<file>~/.kde/share/apps/konqsidebartng/virtual_folders/services</file> 
     には <file>device:/</file> 
     を用いた参照があります。このファイルは、新規ユーザをセットアップしたときには作成されないので、安全に削除できます。
   </p>
   <p>
     KDE デスクトップ環境は、&oldreleasename; に含まれていたバージョンから &releasename; 
     に含まれているバージョンまでに多くの変更が加えられました。さらに詳しい情報は <url 
     id="http://www.kde.org/announcements/announce-3.5.php" name="KDE 3.5 
     のリリースノート">にあります。
   </p>
  </sect>
  <sect id="gnome-desktop-changes">
   <heading>
     GNOME デスクトップに関する変更とサポート
   </heading>
   <p>
     If you used the GNOME desktop in &oldreleasename; you will not benefit 
     from some of the changes introduced in the default configuration in 
     Debian for &releasename;. In some extreme cases the GNOME desktop might 
     not properly handle your old configuration and might not behave 
     properly.
   </p>
   <p>
     GNOME デスクトップの設定を大幅に変更していないのであれば、ユーザのホームディレクトリ内の <file>.gconf</file> 
     ディレクトリを別の名前 (<file>.gconf.old</file> など) 
     に変更するとよいでしょう。そうすれば、新しいセッションを開始したときに <file>.gconf</file> 
     ディレクトリは作成しなおされ、&releasename; のデフォルトの設定を含むようになります。
   </p>
   <p>
     With the release of &releasename;, Debian no longer contains packages 
     for most of the obsolete version 1 release of GNOME, although some 
     packages remain in order to support some Debian packages which have not 
     yet been updated to GNOME 2. Packages for GTK1.2 remain fully 
     maintained.
   </p>
   <p>
     GNOME デスクトップ環境は、&oldreleasename; に含まれていたバージョンから &releasename; 
     に含まれているバージョンまでに多くの変更が加えられました。さらに詳しい情報は <url 
     id="http://www.gnome.org/start/2.14/notes/en/" name="GNOME 2.14 
     のリリースノート">にあります。
   </p>
  </sect>
  <sect id="default-editor">
   <heading>
     デフォルトのエディタ
   </heading>
   <p>
     <prgn>vim</prgn> をデフォルトのエディタとして使用していた場合、アップグレードの過程でデフォルトのエディタが 
     <prgn>nano</prgn> に変更される可能性があります。
   </p>
   <p>
     Administrators who wish to change the default editor for all users will 
     have to update the alternatives system using:
    <example>
# update-alternatives --config editor
          </example>
   </p>
   <p>
     ユーザは、デフォルトのエディタを変更したい場合、自分のプロファイルに以下のような行を加えて環境変数 <em>EDITOR</em> 
     を設定してください。
    <example>
EDITOR=vi
export EDITOR
alias editor=$EDITOR
          </example>
   </p>
  </sect>
 </chapt>
 <chapt id="moreinfo">
  <heading>
    &debian; に関するさらなる情報
  </heading>
  <sect id="morereading">
   <heading>
     もっと読みたい
   </heading>
   <p>
     Beyond these release notes and the installation guide, further 
     documentation on &debian; is available from the Debian Documentation 
     Project (DDP), whose goal is to create high-quality documentation for 
     Debian users and developers. Documentation, including the Debian 
     Reference, Debian New Maintainers Guide, and Debian FAQ are available, 
     and many more. For full details of the existing resources see the <url 
     id="&url-ddp;" name="DDP website">.
   </p>
   <p>
     Documentation for individual packages is installed into 
     <file>/usr/share/doc/<var>package</var></file>. This may include 
     copyright information, Debian specific details and any upstream 
     documentation.
   </p>
  </sect>
  <sect id="gethelp">
   <heading>
     助けを求めるには
   </heading>
   <p>
     Debian 
     ユーザ向けのヘルプ・アドバイス・サポートなどは、いろいろな場所から得られます。しかしこれらを頼りにするのは、その問題について徹底的に文書を調査してからにしましょう。このセクションでは新しく 
     Debian ユーザになった人向けに、これらを簡単に紹介します。
   </p>
   <sect1 id="lists">
    <heading>
      メーリングリスト
    </heading>
    <p>
      Debian ユーザが最も興味を引かれるであろうメーリングリストは debian-user (英語) リストおよび 
      debian-user-<var>language</var> (各国語) 
      リストでしょう。これらのリストの詳細や講読のしかたについては、<url id="&url-debian-list-archives;"> 
      を見てください。利用にあたっては、あなたの疑問に対する答えが以前の投稿ですでに答えられていないかどうか、アーカイブをチェックしてください。また標準的なメーリングリストのエチケットに従うようにしてください。
    </p>
   </sect1>
   <sect1 id="irc">
    <heading>
      インターネットリレーチャット (IRC)
    </heading>
    <p>
      Debian has an IRC channel dedicated to the support and aid of Debian 
      users located on the OFTC IRC network which exists to provide 
      interactive services to peer-directed project communities. To access 
      the channel, point your favorite IRC client at &debian-irc-server; and 
      join #debian.
    </p>
    <p>
      チャンネルのガイドラインに従い、他のユーザを大切にしてください。OFTC に関する詳細は<url id="&url-irc-host;" 
      name="ウェブサイト">を訪ねてみてください。
    </p>
   </sect1>
  </sect>
  <sect id="bugs">
   <heading>
     バグを報告する
   </heading>
   <p>
     私たちは Debian GNU/Linux を高品質な OS 
     にするよう努めていますが、だからといって私たちの提供するパッケージにバグが皆無というわけにはいきません。Debian 
     の「オープンな開発体制」という考え方に合致し、また、ユーザに対するサービスとして、私たちは報告されたバグに関するすべての情報を <url 
     id="&url-bts;" name="bugs.debian.org"> にあるバグ追跡システム (Bug Tracking 
     System: BTS) で提供しています。
   </p>
   <p>
     If you find a bug in the distribution or in packaged software that is 
     part of it, please report it so that it can be properly fixed for 
     future releases. Reporting bugs requires a valid email address. We ask 
     for this so that we can trace bugs and developers can get in contact 
     with submitters should additional information be needed.
   </p>
   <p>
     バグ報告には <package>reportbug</package> 
     というプログラムを使うこともできますし、電子メールを使っても構いません。バグ追跡システムに関する詳細やその使い方については、リファレンスカード 
     (<package>doc-debian</package> パッケージをインストールしていれば 
     <file>/usr/share/doc/debian</file> にあります) をお読み頂くか、または<url 
     id="&url-bts;" name="バグ追跡システム">のウェブサイトからオンラインで入手することもできます。
   </p>
  </sect>
  <sect id="contributing">
   <heading>
     Debian に貢献する
   </heading>
   <p>
     You do not need to be an expert to contribute to Debian. By assisting 
     users with problems on the various user support <url 
     id="&url-debian-list-archives;" name="lists"> you are contributing to 
     the community. Identifying (and also solving) problems related to the 
     development of the distribution by participating on the development 
     <url id="&url-debian-list-archives;" name="lists"> is also extremely 
     helpful. To maintain Debian's high quality distribution, <url 
     id="&url-bts;" name="submit bugs"> and help developers track them down 
     and fix them. If you have a way with words then you may want to 
     contribute more actively by helping to write <url id="&url-ddp;" 
     name="documentation"> or <url id="&url-debian-i18n;" name="translate"> 
     existing documentation into your own language.
   </p>
   <p>
     If you can dedicate more time, you could manage a piece of the Free 
     Software collection within Debian. Especially helpful is if people 
     adopt or maintain items that people have requested for inclusion within 
     Debian. The <url id="&url-wnpp;" name="Work Needing and Prospective 
     Packages database"> details this information. If you have an interest 
     in specific groups then you may find enjoyment in contributing to some 
     of Debian's subprojects which include ports to particular 
     architectures, <url id="&url-debian-jr;" name="Debian Jr."> and <url 
     id="&url-debian-med;" name="Debian Med">.
   </p>
   <p>
     いずれにしても、あなたが何らかの形でフリーソフトウェアコミュニティに関わっているのなら、それがユーザとしてであれ、プログラマ、ライター、翻訳者のいずれとしてであれ、すでにあなたはフリーソフトウェア運動を助けてくださっているのです。貢献することは報いのあることですし、楽しいことです。新しい人々に出会う機会も増えます。きっと暖かな、楽しい気持ちになれるはずです。
   </p>
  </sect>
 </chapt>
 <appendix id="old-stuff">
  <heading>
    &oldreleasename; システムの管理
  </heading>
  <p>
    この付録には、&releasename; へアップグレードする前に &oldreleasename; 
    パッケージを確実にインストールしたりアップグレードする方法についての情報が述べられています。特定の状況でのみ必要となるでしょう。
  </p>
  <sect id="old-upgrade">
   <heading>
     &oldreleasename; システムのアップグレード
   </heading>
   <p>
     基本的には、これまで行なってきた &oldreleasename; のあらゆるアップグレードと違いはありません。唯一異なるのは、<ref 
     id="old-sources">で説明したようにパッケージリスト内に &oldreleasename; 
     パッケージがまだ含まれているのを確認する必要があることです。
   </p>
   <p>
     If you upgrade your system using a Debian mirror, it will automatically 
     be upgraded to the latest &oldreleasename; point release.
   </p>
  </sect>
  <sect id="old-sources">
   <heading>
     ソースリストのチェック
   </heading>
   <p>
     <file>/etc/apt/sources.list</file> 内で 'stable' を指定している行があるなら、効率よく 
     &releasename; を "使う" 用意ができています。すでに <tt>apt-get update</tt> 
     を実行済みでも、以下の手順に従えば問題なく元に戻すことができます。
   </p>
   <p>
     &releasename; からパッケージのインストールもしてしまっているなら、おそらくこれ以上 &oldreleasename; 
     からパッケージをインストールしても無意味でしょう。この場合、続けるかどうかを自分で決断しなければなりません。パッケージをダウングレードすることはできますが、その方法はここでは扱いません。
   </p>
   <p>
     (root になってから) お気に入りのエディタで <file>/etc/apt/sources.list</file> 
     を開き、<tt>deb http:</tt> や <tt>deb ftp:</tt> で始まるすべて行の中に 
     "<tt>stable</tt>" が指定されているかどうかを調べてください。もしあるなら、<tt>stable</tt> を 
     <tt>&oldreleasename;</tt> に変更してください。
   </p>
   <p>
     If you have any lines starting with <tt>deb file:</tt>, you will have 
     to check for yourself if the location they refer to contains a 
     &oldreleasename; or an &releasename; archive.
   </p>
   <p>
     <strong>重要!</strong>: <tt>deb cdrom:</tt> 
     で始まっている行は、絶対に変更しないでください。変更するとその行は無効になって、もう一度 <prgn>apt-cdrom</prgn> 
     を実行しなければならなくなるでしょう。'cdrom' ソースが "<tt>unstable</tt>" 
     を指定していても心配しないでください。混乱するかもしれませんが、これで正常なのです。
   </p>
   <p>
     変更が済んだら、ファイルを保存してから
    <example>
# apt-get update
          </example>
     と実行して、パッケージリストを更新してください。
   </p>
  </sect>
 </appendix>
</book>
</debiandoc>
