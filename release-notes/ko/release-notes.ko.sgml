<!-- original version: 1.28 -->
<!DOCTYPE debiandoc PUBLIC "-//DebianDoc//DTD DebianDoc//EN" [
  <!entity % dynamicdata  SYSTEM "../dynamic.ent"       > %dynamicdata;
  <!entity % shareddata   SYSTEM "../release-notes.ent" > %shareddata;
  <!entity docid "$Id: release-notes.ko.sgml,v 1.4 2005-06-01 16:32:17 jseidel Exp $">
]>

<!-- Be careful with automatic reformatting. Please note that the indentation
     in examples is used in the output (plus additional space) as well. -->

<debiandoc>
  <book>
  <titlepag>
    <title>&debian; &release; (`&releasename'), &arch-title; 릴리즈 노트</title>
      <author>
        <name>Josip Rodin, Bob Hilliard, Adam Di Carlo, Anne Bezemer, Rob
        Bradford (current)</name><email></email>
      </author>
      <author>
        <name></name><email>debian-doc@lists.debian.org</email>
      </author>
      <version>&docid;</version>
    </titlepag>
    <toc detail="sect1">
      <chapt id="about"><heading>릴리즈 노트에 새로 추가된 내용</heading>
       
        <p>[이 문서의 가장 최신 내용은 항상 <url id="&url-release-notes;">
	에서 구할 수 있다. 여러분이 보고 있는 문서가 한달이상 된거라면 
	가장 최신문서로 받아서 보는게 좋다.]</p>

        <p>지난번 릴리즈보다 오래된 상태에서 업그레이드하는 정보를 포함한
	지난번 릴리즈 노트를 참고하라. 그러한 내용은 문서를 자주 복잡하게
	만들어서 단지 &debian; 3.0 ('woody')에서 업그레이드만 이야기 하기로
	결정했다. 오래된 릴리즈에서 업그레이드가 필요하다면 지난번 릴리즈
	노트를 읽어보라.</p>

      </chapt>
      <chapt id="whats-new"><heading> &debian; &release;에 무엇이 새로운가?</heading>

        <p>지원하는 아키텍처 목록은 지난번 릴리즈 &debian; 3.0 ('woody')
	뒤로 바뀌지 않았다. 이번 릴리즈에 지원하는 아키텍처 목록입니다.
        </p>
        
        <p>
          <list>
            <item><p>Intel x86 ('i386')</p></item>
            <item><p>Motorola 680x0 ('m68k')</p></item>
            <item><p>Alpha ('alpha')</p></item>
            <item><p>SPARC ('sparc')</p></item>
            <item><p>PowerPC ('powerpc')</p></item>
            <item><p>ARM ('arm')</p></item>
            <item><p>MIPS ('mips' (Big endian)과 'mipsel' (Little endian))</p></item>
            <item><p>Intel Itanium ('ia64')</p></item>
            <item><p>HP PA-RISC ('hppa')</p></item>
            <item><p>S/390 ('s390')</p></item>
          </list>
        </p>

          <p>포트 상황과 포트와 관련한 특정 내용을 읽어보면 여러분이 
	  쓰고 있는 아키텍처에 대한 정보를 <url id="&url-ports;"
	  name="Debian port web pages">에서 얻을 수 있다.
          </p>

<![ %secondrelease [

          <p>&arch-title; architecture에 대한 두번째 공식 릴리즈이다. 
	  이 자체로 릴리즈 되기에 충분하다 생각한다. 그런데 사용자들이 아키
	  텍처에 대한 시험을 하는 것과 같은 충분한 외부검토를 거치지 않았기
	  때문에 몇몇 버그가 나타날 수 있다. 이런 문제는 바로 바로 
	  <url id="&url-bts;" name="bug tracking system">를 이용해서
	  보고해달라. 분명히 할 점은 그 버그가 그 &architecture; 플랫폼에
	  문제를 일으켰다고 해야한다.</p>

]]>

          <p>&debian; &release; for the &arch-title; 아키텍처용 &debian; &release;는
	  &kernelversion; 커널버전과 함께 들어간다.</p>
<![ %available-2.6 [
          
          <p>&arch-title; 아키텍처 위에서 2.6 커널이 있다. 이름은 
	   &kernelversion-2.6;으로 되어있다. 데비안의 2.6.8 커널 패키지는
	  2.6.8.1 커널 릴리즈와 선택된 다른 패치를 포함하고 있다.
          </p>
]]>
        
        <sect id="newinst"><heading>설치 시스템에 바뀐점은?</heading>

          <p>예전 &debian; 설치 시스템은 완전히 새로운 설치 시스템인
	  <prgn>debian-installer</prgn>로 대체됐다. 새로운 설치 시스템은
	  디자인에서 모듈화 되어 있어서 확장이 가능하게 만들어졌다.
          </p>
          
          <p>설치 시스템에 새로 들어간 몇몇 특징들은 처음 부트 상태에서
	  패키지를 설치하기 위해 <prgn>aptitude</prgn>를 선택하면서 USB
	  플래쉬 장치로 시작할 수 있게 해주는 지원을 담고 있고 <prgn>XFS</prgn>
	  파일 시스템과 <prgn>LVM</prgn> (volume 관리도구)에 대한 지원을
	  담고 있다.</p>

          <p>새로운 데비안 설치 시스템의 자세한 내용을 알려면 사용자들이 
	  데비안 설치 지침서를 첫번째 CD나 <url id="&url-install-manual;">
	  에서 참조해서 보면 된다.<p>

<![ %i386 [ 

          <p>커널 이미지는 다양한 "취향"대로 있다. 여기에는 다른 종류의
	  하드웨어 지원을 하고 있다. &arch-title;용 &debian; &release;
	  에 들어있는 "취향"에는:</p>

          <p>
            <taglist>
              <tag>바닐라 vanilla</tag>
              <item><p>데비안 표준 커널 패키지가 들어있다. 여기에는 
	      모듈로 리눅스에서 지원하는 모든 드라이버가 들어가 있으며,
	      네트워크 장치와 SCSI 장치, 사운드카드, Video4Linux 장치,
	      등등이 들어있다. `바닐라 vanilla'에는 하나의 부트와 루트,
	      두개의 드라이버 디스크가 있다.</p></item>
              
              <tag>스피크업 speakup</tag>
              <item><p>여기는 바닐라 커널과 다 같은데 브라유식 점자 표시
	      부분이 다르다. 지원하는 전체 모델은 문서에 나와있다.
              여기에는 하나의 부트, 하나의 루트 하나의 드라이버 플로피
	      디스크 이미지가 있다.<p></item>
             
            </taglist>
<!-- FJP: I feel the info about floppies should be removed from this table as
          floppies are no longer the most used installation method. -->

          <p>이 "취향"에 맞는 커널 설정 파일들은 'kernel-config'라는 이름으로
	  각 디렉토리에서 찾을 수 있다.</p>

]]>

<!-- FJP: Maybe a short description of available installation methods could be
          added here: floppy, CD (netinst/business-card/full set), netboot,
          hd-media, USB-stick. -->

<![ %available-2.6 [
          <p>An installer using a 2.6 based kernel is available for
          &arch-title;. For more details on how to use it please consult the
          installation guide.</p>
]]>          
           
        </sect>
        <sect id="newdistro"><heading>배포본에 들어간 새로운 내용은?</heading> 
           
           <p>오래되고 그리 좋진 않지만 아직도 인기있는 <package>dselect</package>
	   를 대체하기 위해 많은 apt 프론트엔드가 우리 릴리즈 사이클동안 
	   개발되어왔다. 관심있는 사용자들은 <package>aptitude</package>와
	   <package>synaptic</package> 패키지를 살펴봐야한다.</p>
       
           <p>이번 &debian; 데비안 릴리즈에는 많이 발전한 XFree86
           4.3 릴리즈가 들어있는데 더 많은 종류의 하드워어를 지원하고 더 나은
	   자동검색 지원과 Xinerama와 3차원 가속기능과 같은 더 나은 기능을
	   지원하고 있다.</p>
           
           <p>&debian;은 어떤 새로운 릴리즈보다 더욱더 데스크탑 환경에 맞게 
	   맞춰져 있는데 여기에는 GNOME 2.8과 KDE 3.3이 들어있다. OpenOffice.org
	   1.1의 오피스군이 포함되어 있다. 여기에는 Evolution 그룹웨어와
	   게임(GAIM) 메신저 클라이언트도 들어가 있다.</p>
           
           <p>공식 &debian; 배포본은 열세개의 바이너리 CD와 비슷한 양의 소스
	   CD로 구성되어 있고 DVD 버전도 얻을 수 있다.</sect>

      </chapt>

      <chapt id="installing"><heading>새로운 설치s</heading>

        <p>데비안을 새로 설치하려 한다면, 설치지침을 읽어야하는데 이것도 
	공식 CD안에 들어있다:

        <example>
/doc/install/manual/<var>language</var>/index.html
        </example>

        그리고 인터넷: <url id="&url-install-manual;">에서도 볼 수 있다.</p>

        <p>예전 &debian; 설치 시스템인 <prgn>boot-floppies</prgn>는 새로운
	구성성분중심이고 더욱 강력한 <prgn>debian-installer</prgn>로 
	대체되었다.</p>

<![ %sparc [ 
      <sect id="sparc_kbd"><heading>&arch-title;에서 작동하는 키보드 문제</heading>

        <p>설치를 하면서 발생하는 키보드 관련 문제들이 있다.</p>

        <p>선블레이드 시스템과 같이 선에서 쓰고 있는 USB 키보드 문제이다. 기본 2.4
	커널을 사용하려한다면, 보통 선 키보드로 인스톨러가 부정확하게 알아차릴
	것이다. 이 문제는 설치 문서에 나와있으니 위 링크에서 
	"데비안 인스톨러 사용하기(Using the Debian Installer)" 부분을 참조하면
	된다.</p>

        <p>두번째 문제는 커널과 관련된 문제인데 2.6 커널은 모든 키보드를 "보통"
	PC 키보드로 만들어버리는 다른 입력 층을 사용한다. 이 이야기는 2.4 커널로
	부팅을 하고 이를 선용 키보드나 USB 키보드로 설정하고 나중에 전문가 모드에서
	2.6 커널을 새로운 시스템에 선택하면 나중에 키보드를 재부팅 뒤에는
	사용할 수 없을 것이다.</p>

      </sect>

      <sect id="sparc_fb"><heading>&arch-title;에서 프레임 버퍼 문제</heading>

        <p>몇몇 시스템에서 발생하는 디스플레이 문제 때문에, 프레임 버퍼 지원이 
	&arch-title;에서 기본으로 안돼있다. 이는 결국 화면을 ATI 그래픽 
	카드를 쓸 경우 화면이 이상하게 나오게 된다. 인스톨러에서 디스플레이가
	문제가 있다면 부팅할 때 옵션으로 "debian-installer/framebuffer=true"
	라고 들어가라.</p>

      </sect>
]]>

      </chapt>


      <chapt id="upgrading"><heading>이전 릴리즈에서 업그레이드</heading>

<!-- For doc-writers' convenience:
Debian Supported
release: architectures:

1.3.1 or less i386
2.0           i386,m68k
2.1	      i386,m68k,alpha,sparc
2.2	      i386,m68k,alpha,sparc,powerpc,arm
3.0	        + hppa s390 mips mipsel ia64
-->

        <sect id="backup"><heading>업그레이에 필요한 준비</heading>

          <p>업그레이드를 하기 전헤 모든 내용을 백업하두고 잃어버릴 수 있는
	  최소의 데이터나 설정을 백업해둔다. 업그레이드 도구나 프로세스는
	  매우 믿을만 하지만, 업그레이드 도중 하드웨어가 문제를 발생시켜
	  시스템에 심각한 문제를 낳을 수 있다.</p>

          <p>여러분인 백업할 주요 파일들은 <file>/etc</file>, <file>/var/lib/dpkg</file>
	  이고 <tt>dpkg --get-selections \*</tt>의 결과내용이다.</p>

          <p>여러분이 계확하는 내용의 업그레이드를 모든 사용자에게 알려주고 
	  SSH 사용자들은 거의 그 변화를 알지 못하겠지만 계속 작업하길 바라기
	  때문에 내용을 알려주면 된다. 다른 주의 사항과 사용자 파티션(
	  <file>/home</file>)백업 마운트 해제가 빌요하다면 하라. 재부팅은
	  필요없을 것이다.</p>

          <p>텍스트모드 가상 콘솔에서 로컬에서 작업해야하며(직접 연결된
	  시리얼 터미널에서), 또는  <prgn/ssh/를 통해서 원격에서 작업
	  할 수 있다.</p>

          <p><em/중요/: <prgn/telnet/, <prgn/rlogin/, <prgn/rsh/,
	  <prgn/xdm/, <prgn/gdm/, <prgn/kdm/과 같은 것을 통해서 업그레이드 
	  해선 <em/안된다/. 이 이유는 업그레이동안 서비스가 끊기고 시스템이 
	  완전히 업그레이드 안된 상세에서 <em/접근할수 없는/ 상황을 
	  만들 수 있다.</p>
	  
          <p>업그레이드하는 가장 좋은 방법은 <prgn/aptitude/를 쓰는 것이다. 내장
	  의존성 분석을 통해 부드럽게 업그레이드하고 쉽게 설치해준다.</p>
	  
	  <p>어떤 패키지를 설치해도 항상 루트로 작업을 해야하는데 <prgn/su/
	  나 <prgn/sudo/를 써서 필요한 접근 권한을 얻으면 된다.</p>
          
          <p>우선 <package>aptitude</package>패키지를 설치해야한다. 이는 
	  다음과 갈이 한다:</p> 

	  <p><example>
apt-get install aptitude
	  </example></p>

          <p>APT 설정파일이 있다면 <prgn>aptitude</prgn>의 예전 버전을 
	  설치할 것이다.</p>

	<sect1><heading>APT 핀 기능 죽이기</heading>

	  <p>테스팅 이상의 배포본에서 어떤 패키지를 설치하기 위해 APT를 설정
	  했다면 <file>/etc/apt/preferences</file>에 들어있는 APT 핀 설정을
	  바꿔서 패키지 업그레이드가 새로운 안정 버전으로 되게 해주면 된다. 
	  APT 핀기능에 대한 나용은 <manref name="apt_preferences" section="5">
	  에서 찾을 수 있다.</p>
<!-- FJP: Couldn't the advise to hold such packages prevent the upgrade of e.g.
          libc6 if the package depends on the old version! -->

	</sect1>
	
        <sect1><heading>패키지 상태 확인하기</heading>

          <p>업그레이드에 필요한 방법을 뭘 쓰던, 우선 모든 패키지를 검토하는
	  게 가장 먼저이고 모든 패키지가 업그레이드 상태인지 확인해야한다.
	  다음 명령은 반정도만 설치됐는지 설정 실패인지 아니면 다른 에러를
	  가진 패키지인지 확인해준다. 

          <example>
# dpkg --audit
          </example></p>
 
          <p>여러분 시스템에 있는 모든 패키지 상태를 <prgn/dselect/, 
	  <prgn/aptitude/,나 다음과 같은 방법으로 확인할 수 있다

          <example>
# dpkg -l | pager 
          </example>

          나

          <example>
# dpkg --get-selections &gt; ~/curr-pkgs.txt
          </example></p>

          <p>업그레이드 하면서 모든 홀드 상태는 다 없애길 바란다. 
	  업그레이드에 필요한 패키지가 홀드상태라면, 업그레이드는 
	  실패할 것이다. 홀드 상태인지 아닌지는 다음으로 확인가능
 
          <example>
# dpkg --audit
          </example></p>

          <p>패키지를 로컬에서 변형했거나 다시 컴파일한 경우는, 이름을 바꾸지
	  않고 그 상태로 두고 싶다면 업그레이드 하지 않도록 홀드상태로 두라.
	  `hold' 패키지 상태는 <prgn/aptitude/를 통해서 다음처럼 하면 된다
	  
      	  <example>
aptitude hold | unhold &lt;package&gt;
      	  </example>
    	    </p>
        </sect1>
        <sect1><heading>SSH 사용자를 특별한 고려사항</heading>

          <p>2.2 릴리즈 전에<package/ssh/에 있던 상용 SSH나 2.2에 있던
	  <package/ssh-nonfree/ 패키지는 <package/ssh/ 패키지로 완전히
	  대체됐다. 상용 SSH 모음은 더이상 없다. <package/ssh/ 패키지는
	  Debconf 질문인 OpenSSH와 호환되는 설정파일을 다시 만들어
	  낼 것이라는 내용을 담고 있다. 
          
</sect>

        <sect id="upgrade-process"><heading>APT 소스 준비하기</heading>


          <p>업그레이드를 시작하기 전에 <package/apt/ 설정 파일을 
	  <file>/etc/apt/sources.list</file>에 맞게 해줘라. </p>
          
          <p><package/apt/는 "<tt>deb</tt>" 줄 내용을 따라서 패키지를 
	  검색하고 높은 버전을 먼저 설치하면서 처음줄에 있는 내용에
	  우선순위를 준다(이런 식으로, 여러 미러가 있을 때, 로컬 하드
	  디스크, CD-ROM, HTTP/FTP 미러순으로 하게된다).</p>

         <sect1 id="network"><heading>APT 인터넷 소스 추가하기</heading>

           <p>기본 설정은 주 데비안 인터넷 서버에서 받아서 설치하게 돼있고
	   <file>/etc/apt/sources.list</file>를 바꿔서 다른 미러를 쓸 수
	   있고 여러분 위치에서 가까운 미러를 쓰면 된다.</p>

<!-- FJP: Why is 'default configuration' relevant here? We are talking about
          upgrading existing installations; we really have no idea what
          apt-sources users will have set up here (maybe just a Woody CD-set).
          Note: D-I sets the default configuration to a mirror based on
          the selected country and not the 'main' servers. -->

           <p>데비안 HTTP나 FTP 미러 주소는 <url id="&url-debian-mirrors;">에서
	   볼 수 있다("모든 미러 목록"을 보라). HTTP 미러는 FTP보다 일반적으로
	   빠르다.</p>
<!-- FJP: 'Otherwise' does not refer back to anything here, so I deleted it
          (unless the intention was to refer to local intr_a_net HTTP
          servers in the previous para). -->

           <p>예를들어, 여러분의 가장 가까운 데비안 미러가 
	   <tt>&url-debian-mirror-eg;/</tt>라고 가정하자. 웹 서버나 FTP 프로그
	   램을 써서 이 미러를 찾아보면 주 디렉토리가 다음과 같이 돼 있을
	   것이다:

           <example>
&url-debian-mirror-eg;/dists/stable/main/binary-&architecture;/...
&url-debian-mirror-eg;/dists/stable/contrib/binary-&architecture;/...
           </example></p>

           <p><prgn/apt/로 이 미러를 쓰려면, 다음 내용을 <file/sources.list/
	   에 더하라:

           <example>
deb &url-debian-mirror-eg; &releasename; main contrib
           </example></p>

           <p>`<tt>dists</tt>'는 이미 있는 것이고 릴리즈 이름 뒤에 오는
	   내용들은 다중 디렉토리로 경로를 확장하는데 쓴다.</p>

           <p>새로운 소스를 더한 뒤에, <file/sources.list/에 있는 이미 있는
	   "<tt/deb/"로 시작하는 라인에 <tt/#/를 맨 앞에 넣어서 사용하지
	   못하도록 한다.</p>

           <p>설치할 모든 패키지는 네트워크로 받아서 
	   <file>/var/cache/apt/archives</file>에 둔다. 다운로드
	   중에는 <file>partial/</file>이라는 내부 디렉토리에 둔다. 
	   그렇게 해서 설치에 필요한 공간이 우선 충분한지 확인해야한다. 
	   확장된 데비안 설치에는 적어도 300MB 다운로드 자료 공간이 든다. 
           </p>
           
         </sect1>

         <sect1 id="localmirror"><heading>로컬 미러에서 APT 소스 추가하기</heading>

           <p>HTTP나 FTP 패키지 미러를 쓰는 대신 <file>/etc/apt/sources.list</file>
	   을 수정해서 NFS로 마운트된 로컬 디스크를 미러로 쓸 수 있다.</p>

           <p>예를 들어, 여러분 패키지 미러를 <file>/var/ftp/debian/</file>
	   에 둘 수 있고 다음과 같이 주 디렉토리로 할 수 있다:

           <example>
/var/ftp/debian/dists/stable/main/binary-&architecture;/...
/var/ftp/debian/dists/stable/contrib/binary-&architecture;/...
           </example></p>

           <p><prgn/apt/로 이를 쓰기 위해선, 다음 내용을 <file/sources.list/
	   에 다음을 더하라:

           <example>
deb file:/var/ftp/debian stable main contrib
           </example></p>

           <p>`<tt>dists</tt>'는 당연히 들어가는 것이고 릴리즈 이름 뒤에
	   들어가는 내용은 다중 디렉토리로 가는 경로를 확장하는데 쓴다. 
           </p>

          <p>새로운 소스를 더하려한다면, 이미 나와있던 "<tt/deb/"을 
	  <file/sources.list/에서 <tt/#/을 맨 앞에 더해서 못쓰게
	  만들면 된다.</p></sect1>

        <sect1 id="cdroms"><heading>CD-ROM에서 APT 소스추가하기</heading>

<!-- FJP: Are these instructions also valid for adding DVD's? -->

          <p><em/단지/ CD를 사용하고자 한다면, <file>/etc/apt/sources.list</file>
	  에 "<tt/deb/"앞에 <tt/#/ 처리를 해서 못쓰게 만든다.</p>

          <p><file>/etc/fstab</file>안에 CD-ROM이 <file>/cdrom</file>로
	  마운트 되는지 확인하라. <file>/cdrom</file> 마운트 지점은
	  <prgn/apt-cdrom/에게 필요하다. 예를 들면, <file>/dev/hdc</file>
	  가 CD-ROM이라면 <file>/etc/fstab</file>에 다음 내용을 담고 있어야
	  한다:

          <example>
/dev/hdc /cdrom auto defaults,noauto,ro 0 0
          </example></p>

          <p>네번째 부분에 <tt>defaults,noauto,ro</tt>에 사이에 <em/어떤 공간도 
	  없다/.</p>

          <p>확인하려면, CD를 넣고 시도해보라

          <example>
mount /cdrom   # CD를 마운트 지점으로 마운트 하고
ls -alF /cdrom # CD의 루트디렉토리를 보여주고
umount /cdrom  # CD를 언마운트한다.
          </example></p>

          <p>다시 실행한다:

          <example>
apt-cdrom add
          </example>

	  각각의 데비안 바이너리 CD-ROM을 가지고 있으면 각 CD를 APT 
	  database에 집어넣도록 한다.</p>
        </sect1>
        </sect>

	<sect id="upgradingpackages"><heading>패키지 업그레이드</heading>
	  
	  <p>&debian; 릴리즈 사이에 업그레이드하는 추천하는 방법은 패키지
	  관리도구인 <prgn>aptitude</prgn>를 쓰는 일이다. 이 도구는 
	  <prgn>apt-get</prgn>을 바로쓰면서 가질 수 있는 위험성을 줄이는
	  도구이다.</p>
	  
	  <p>루트로 작업을 해서 모든 필요한 파티션 마운트작업을 잊지 말고
	  다음 명령으로 파티션을 읽기-쓰기 가능하게 만들어라:

          <example>
mount -o remount,rw /<var>mountpoint</var>
          </example></p>

<!--	  FIXME: build fails for this paragraph, check it and readd.
          <p><file>/etc/apt/sources.list</file>에 APT 소스 항에 <tt>'stable'</tt>
	  배포본을 더하고 코드 이름으로 참조하게 하지마라(예를 들어 
	  <tt>&oldreleasename;</tt>)</p>.
-->	  
	  <p><prgn>/usr/bin/script</prgn> 프로그램을 써서 upgrade 세션 내용을
	  저장하고 만주게 발생하면 버그 리포트에 정확한 정보를 이 저장 내용을
	  바탕으로 주라. 기록을 시작하려면, 다음 내용을 쳐넣어라:

          <example>
script -a ~/upgrade-to-&releasename;.typescript
          </example>

	  typescript파일을 <file>/tmp</file>나 <file>/var/tmp</file>에 
	  두지 마라 이 곳은 업그레이드를 하거나 재부팅을 하면 지워질
	  수 있기 때문이다. </p>
 
	  <p>우선 <prgn>aptitude</prgn>를 써서 새롭고 업데이트 할 패키지 목록을
	  새로운 릴리즈에 맞게 가져온다. 다음과 같이 실행한다:</p>
	  
	  <p><example>
aptitude update
	  </example></p>

	  <p><prgn>aptitude</prgn>는 가능한 모든 패키지 정보를 주며 시스템이
	  완전히 업그레이드 되게 해준다. <package>doc-base</package>를 우선
	  업그레이드를 <em>이 패키지가 설치 됐다면</em> 해야한다. 다음을 
	  이용해서 찾을 수 있다:</p>
          
          <p><example>
dpkg -l doc-base
          </example></p>

          <p>결과 내용에 "i"라고 설치 정보가 나오면 설치된 것이고 계속 작업
	  하기 위해서 업그레이드가 반드시 필요하다.</p>

          <p><example>
aptitude install doc-base
          </example></p>
          <p>업그레이드의 주요 부분을 작업하려면 다음을 실행하라:</p>
	  <p><example>
aptitude -f --with-recommends dist-upgrade
	  </example></p>

	  <p>이는 시스템의 완전한 업그레이드를 해줄것인데 이 뜻은 모든 패키지의 가장
	  최신 버전을 쓰게 해준다는 뜻이고 다른 릴리즈 사이의 패키지 사이에 
	  발생할 수 있는 가능한 의존성 문제를 모두 해결해준다. 필요하다면,
	  몇몇 새로운 패키지(대개는 새로운 라이브러리나 다른 이름으로 바뀐
	  패키지)를 설치할 것이고 충돌문제를 일으키는 오래된 패키지를 모두
	  지워줄 것이다(예를 들어 <package>console-tools-libs</package>).</p>

          <p>CD-ROM에서 업그레이드를 할 경우, 업그레이드 도중 특정 CD를 몇몇
	  특정시점에 넣어야할 것이다. 동일한 CD를 여러번 넣을 때도 있다; 
	  이는 CD에 퍼져있는 서로 연관되 패키지 의존성 때문이다.
          </p>
   
	  <p>다른 패키지의 설치 상태를 바꾸는 일이 없으면 업그레이드가 안되는
	  새로운 버전 패키지는 현재 상태로 "홀드"되어 있을 것입니다. 
	  이는 <prgn>aptitude</prgn>를 통해서 이 패키지를 선택하거나 
	  <tt>aptitude -f install &lt;package&gt;</tt>를 통해 할 수
	  있다.</p>
            
          <p><tt/--fix-broken/ (또는 <tt/-f/) 옵션은 <package/apt/가 깨진 의존성
	  을 수정하려고 할 때 쓴다. <package/apt/는 기본적으로 깨진 
	  패키지는 시스템에 그냥 두지 않게 되어있다.</p>

        <sect1 id="trouble"><heading>업그레이드 도중 가능한 일들</heading>

          <p>때로 APT::Force-LoopBreak 옵션을 써서 임시적으로 필수 패키지를
	  Conflicts/Pre-Depends 순환 때문에 지우게 해줄 수 있다. <prgn/aptitude/
	  는 이를 경고해주고 업그레이드를 말릴 것이다. 
	  <tt>-o APT::Force-LoopBreak=1</tt>을 <prgn/aptitude/ 명령행에
	  정해서 쓸 수 있다.</p>
<!-- JFS: Shouldn't this mention also Apt's configuration file? -->

          <p>시스템 의존성 구조는 수동으로 할 필요가 있을 때가 있다. 
	  이런 경우는 <prgn/aptitude/를 쓰거나 

          <example>
dpkg --remove <var>packagename</var>
          </example>

          를 하면서 다른 패키지에 안좋은 영향을 주는 패키지를 지우거나 
 
          <example>
aptitude --fix-broken install
dpkg --configure --pending
          </example></p>

          <p>극단의 경우 강제 옵션으로 설치를 해야한다. 

          <example>
dpkg --install /path/to/packagename.deb
          </example></p>

          <p>모든 문제를 해결하고 나서, <tt/aptitude/ 명령을 위와같이 
	  다시 해서 업그레이드를 해야한다.</p>

          <p>업그레이드 도중, 몇몇 패키지에 대한 설정 문제와 만날 것이다.
	  <file>/etc/init.d</file>나 <file>/etc/terminfo</file> 디렉토리나
	  <file>/etc/manpath.config</file>에 대한 파일 설정 문제와
	  만난다면, 파일은 패키지 관리자 버전으로 바뀌고 시스템 일관성
	  에 맞추기 위해서 `yes'라고 답을 하는게 필요하다. 오래된 버전으로
	  <tt/.dpkg-old/을 통해서 갈 수 있다. </p>

          <p>무엇을 해야할지 모른다면, 패키지나 파일 이름을 적어두고
	  나중에 정리하라. typescript 파일을 살펴보고 업그레이드 도중
	  일어나는 일에 대한 정보를 알 수 있다.</p></sect1>

        <sect1 id="nownownow"><heading>재부팅 하기 전에 해야할 일</heading>

          <p><tt>aptitude dist-upgrade</tt>가 끝나면, "정상" 업그레이드가
	  끝나지만 재부팅을 하기 <em/전에/ 확인 해야할 부분이 있다.
          </p>
          
  <p>우선 Read
	  <file>/usr/share/doc/xfree86-common/README.Debian-upgrade.gz</file>파일을
	  엑스 윈도우 시스템 패키지에 대한 더 자세한 정보니 꼭 읽기 바라고
	  이는 모든 지난 데비안 릴리즈 사용자에게 해당하는 것이니 꼭 읽기
	  바란다.
	  </p>

        <sect2 id="newkernel"><heading>커널 업그레이드</heading>
          
	  <p>리눅스 커널은 이 과정에서 업그레이드 되지 <em/않는다/. 이를
	  하고자 한다면, <package/kernel-image-*/ 패키지중 하나를 선택해서
	  깔고 소스에서 자신에 맞게 만들어 써야한다. 
	  </p> 
	  
	  <![ %available-2.6 [

	 <p>&debian;은 &kernelversion; 커널과 함께 나오지만 더 나은 성능과 더 
	 나은 하드웨어 지원을 위해서 2.6을 쓸 수 있다.
	 </p>
         
]]>
         
         <p>커널을 업그레이드 하기 위해서. 여러분의 하위아키텍처에 맞는 것을
	 선택하고 모른 커널 목록은 다음 명령으로 찾을 수 있다:
<!-- FJP: s/subarchitecture/subarchitecture and processor/ ??? -->

         <example>
apt-cache search ^kernel-image
         </example></p>
         
         <p>설치를 하기 위해서 <tt/aptitude install/을 해야한다. 새로운 커널을 설치하게
	 되면 재부팅을 해야 동작하게 된다.
         </p>

         <p>더 많은 모험을 좋아한다면, &debian;에서 여러분에 맞는 커널을 
	 컴파일 하는 손쉬운 방법이 있다. <package>kernel-package</package> 도구를
	 설치하고 <file>/usr/share/doc/kernel-package</file>에 있는 문서를
	 읽으면 된다. 
         </p>
         
         </sect2></sect1></sect>

      </chapt>

        <chapt id="information"><heading>자세한 시스템 변화</heading>

<!-- Controversial, disabled for now, please translate though
        <sect id="german-quotes"><heading>Problems with German Quotes</heading>
        
          <p>The locales for German style languages (e.g. de_DE@euro)
          unfortunately use an aesthetically unpleasing way of representing
          open quotation marks.  We have retained it this way in order to
          preserve compatibility with other Linux distributions, and we hope
          that in the future it will be fixed. We suggest that you switch to a
          UTF-8 locale (e.g. de_DE@euro.UTF-8), which fully supports German with
          the correct quotation marks, and, using Unicode encoding, has better
          support for other languages as well.</p>

          <p>To change the system wide locale choice, use:
          <example>dpkg-reconfigure locales</example></p>
        </sect>
-->  
<!--   Will be added if relevant information is written here
        <sect id="syntax"><heading>Important program syntax changes</heading>

       	  <p>Debian attempts to avoid changing upstream packages, therefore
          any changes in the upstream package will be present in the version in
          &debian;. This can mean that program behaviour may change between
          releases of &debian;. </p>

          <p><em>No changes yet reported.</em></p>
        
        </sect>
-->
<sect id="pythonchanges"><heading>파이썬 패키지에 대한 변화</heading>

   <p>&releasename; 있는 파이썬 2.X 패키지의 어떤 것도 'profile'과 'pstats' 표준
   모듈을 포함하지 않는다. 왜냐하면 이들은 DFSG와 호환이 안되는 라이센스를
   가지고 있기 때문이다(버그 #293932를 참조하면 자세한 내용을 알 수 있다).
   이 두 모듈은 python-profiler와 python2.X-profiler 패키지로 찾을 수 
   있고 데비안 아카이브의 non-free에 들어있다. 
   </p>
</sect>

<![ %not-s390 [
        <sect id="kernel_update">
        <heading>2.6커널에서 발생하는 키보드 문제들</heading>

          <p>&releasename;로 업그레이드 한 뒤에, 2.6 커널 이미지를 설치할 수 있다.
	  2.6 커널 입력층 변화가 가장 크다.</p>
	  
          <p>입력층에 대한 변화 때문에 모든 키보드가 "보통" 키보드로 보이게
	  만든다. 이는 선택된 키보드의 다른 형태를 쓴다면(예를 들어 USB-MAC
	  나 선 키보드), 가능성이 크고 결국 새 커널을 쓰면 키보드가 작동을
	  안할 것이다. 
          </p>
          
          <p>SSH를 통해 다른 시스템에서 들어가련 한다면, 이 문제를 
	  'dpkg-reconfigure console-data'를 통해서 해결하는데 
	  "Select keymap from full list"에서 "pc" 키보드를 선택하는 일이
	  중요하다.</p>

<![ %i386 [
          <p>이 문제는 &arch-title; 아키텍처에서 모든 PS/2와 USB 키보드에 영향을 
	  안주고 그냥 "보통" 키보드로 설정할 수 있다.
          </p>
]]>
<![ %not-i386 [
          <p>USB 키보드를 쓴다면 "보통" 키보드나 USB-MAC 키보드로 설정하라. 전자는
	  이 문제로 영향을 안 받을 것이다. 
          </p>
]]>
        </sect>
]]>

        </chapt>

      <chapt id="moreinfo">

        <heading>&debian;에 대한 더 많은 정보</heading>

        <sect id="morereading"><heading>&debian;에 대한 더 읽을 거리</heading>
	<p>문서는 데비안 문서 프로젝트(DDP)에 있는데 여기서는 데비안
	사용자와 개발자를 위해 수준높은 문서를 만드는게 목적이다. 문서는
	데비안 지침, 데비안 새로운 관리자 안내서, 데비안 FAQ가 있고 더
	많은 문서가 있다. 더 많은 목록은 DDP 웹 사이트 <url id="&url-ddp;">
	를 참조하라. 
        </p>
 
        <p>각 패키지에 대한 문서는 <file>/usr/share/doc/<var>package</var></file>
	에 있으며 여기에는 저작권 정보와 데비안에 특정된 내용과 상위
	문서가 들어있다.
        </p>
 
      </sect> 
      
      <sect id="gethelp"> 
        <heading>도움 구하기</heading> 
      
        <p>도움을 주는 내용과 충고와 지원은 많지만 몬서를 잘보면 모든
	해답이 있다는 것을 알 것이다. 여기서는 데비안을 새로 쓰고자 하는
	사람들에게 간략한 소개를 하려고 한다. 
        </p>
        
      <sect1 id="lists">
        <heading>메일링 리스트</heading>
        <p>데비안 사용자들이 관심을 가질만한 리스트는 debian-user 리스트와 다른
	debian-user-<var/language/ 리스트가 있다. 전자는 영어이고 후자는 각국 언어
	이다. 이 리스트에 대한 정보와 자세한 사항과 구독은 <url id="&url-debian-list-archives;">
	를 참조하다. 여러분이 질문할 문제가 이미 나와있는지 우선 찾아보고
	나서 질문을 올리는 예의는 지키면 좋겠다.
        </p>
      </sect1>

      <sect1 id="irc">
        <heading>인터넷 릴레이 채팅</heading> 
        
        <p>데비안은 IRC 채널을 이용해서 사용자들에게 도움을 주고 있다. 
	이 서버는 오픈 프로젝트 IRC 네트워크에 있는데 오픈소스 공동체
	사이에 정보를 나누기 위해 만들어졌다. 여기에 접속하려면 여러
	분이 좋아하는 irc 클라이언트로 &opn-irc-server;로 접속해서
	join #debian으로 들어가라.
        </p>
        
        <p>채널 지침을 잘 따르고 상대방을 존중하면 된다. 자세한 내용은
	<url id="&url-opn;" name="website">를 참조하라. 
        </p>

      </sect1>
      </sect> 

      <sect id="bugs">
        <heading>버그 보고하기</heading>
        
        <p>우리는 데비안 GNU/리눅스를 최상의 품질의 OS로 만들고 있으나
	모든 패키지가 버그가 없는 것은 아니다. 사용자들에게 이런
	서비스를 주고자 버그에 대한 모든 정보를 우리의 버그추적시스템
	(BTS)에서 보여주는데 <url id="&url-bts;" name="bugs.debian.org">
	서 확인가능하며 이는 데비안의 열린 개발정책과 일치한다. 
        </p>
<!-- FJP: I propose to replace the last sentence by:
        Consistent with Debian's 'open development' philosophy and as a 
        service to our users, we provide all the information on reported bugs
        at our own Bug Tracking System (BTS). The BTS is browseable at
        <url id="&url-bts;" name="bugs.debian.org">.
-->

        <p>패키지에 속해있거나 배포본에 있는 버그를 발견했다면 이를 보고해서
	다음 릴리즈에 문제가 없게 만들면 된다. 버그보고에는 이메일
	주소가 필요하고 버그를 추적하고 개발자가 보고자와 이야기를 잘 해서
	더 많은 정보를 얻게 하면 된다. 
        </p>

        <p><package>reportbug</package>을 써서 버그 보고를 하거나 
	하나하나 전자우편으로 보낼 수 있다. 자세한 사항은 버그 추적 시스템
	을 읽고 참조 카드(<file>/usr/share/doc/debian</file>)를 읽거나
	<url id="&url-bts;" name="Bug Tracking System">보고 할 수 있다. 
        </p>
<!-- FJP: The 'bug' program and package are obsolete. -->
<!-- JFS: The reference cards are only available if you have doc-debian installed, which might not always be the case -->

      </sect>

      <sect id="contributing">
        <heading>데비안에 도움주기</heading>
        
        <p>데비안에 도움을 주는데 전문가가 될 필요는 없다. 여러가지 상황에서
	문제를 가진 다른 사용자를 도와주면서(<url id="&url-debian-list-archives;" name="lists">
	공동체에 도움을 줄 수 있다. 개발과 관련된 
	<url id="&url-debian-list-archives;" name="lists">에 문제를 확인하고
	해결책을 주는 일은 매우 좋은 일이다. 데비안을 높은 수준으로 유지 하기
	위해서 <url id="&url-bts;" name="버그 보고">를 통해서 개발자들이
	추적을 하고 수정하게 된다. 데비안 프로젝트에 좀더 많은 도움을
	적즉적으로 주려뎐 <url id="&url-ddp;" name="문서">를 쓰거나
	기존에 있는 문서를 자신의 언어로 id="&url-debian-i18n;" name="번역">
	하는 일이다. 
        </p>

        <p>좀더 시간을 내서 하겠다면, 데비안 안에서 자유소프트웨어 모음을
	관리할 수 있다. 데비안 안에서 패키지 요청을 하는 패키지를 관리하거나
	입양을 하는 일이 도움이 될 것인데 이는 <url id="&url-wnpp;" name="Work Needing
	and Prospective Packages database">에서 자세하게 알아 볼 수 있을
	것이다. 데비안 포팅을 포함한 데비안 안에서 재밌게 할 수 있는 
	부분이 있다면, <url id="&url-debian-jr;" name="Debian
	Jr.">와 <url id="&url-debian-med;" name="Debian Med">도 있으니 참고 바란다. 
        </p>

        <p>어떤 경우라도, 사용자이건, 프로그래머건, 문서 작성을 하건 번역을
	하건 자유 소프트웨어 공동체에서 일하고 있다면 이미 자유 소프트웨어
	에 도움을 주고 있는 것이다. 공동체에 도움을 주는 일은 다시 보답을
	받는 일이면서 즐겁고 새로운 사람들을 만나면서 따뜻한 마음을 갖게
	되는 일이다. 
        </p></sect>

    </chapt>
  </book>
</debiandoc>

<!-- Keep this comment at the end of the file
Local Variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-namecase-general:t
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:nil
sgml-declaration:nil
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
fill-column: 75
End:
-->

