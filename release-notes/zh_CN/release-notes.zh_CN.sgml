<!DOCTYPE debiandoc PUBLIC "-//DebianDoc//DTD DebianDoc//EN" [

  <!ENTITY % dynamicdata SYSTEM "../en/../dynamic.ent"> %dynamicdata;
  <!ENTITY % shareddata SYSTEM "../en/../release-notes.ent"> %shareddata;
  <!ENTITY docid "$Id: release-notes.zh_CN.sgml,v 1.11 2007-03-17 22:44:19 jseidel Exp $">
]>
<debiandoc>
 <book>
  <titlepag>
   <title>
     Release Notes for &debian; &release; ("&releasename"), &arch-title;
   </title>
   <author>
     <name>Josip Rodin, Bob Hilliard, Adam Di Carlo, Anne Bezemer, Rob 
     Bradford (current), Frans Pop (current), Andreas Barth 
     (current)</name><email></email>
   </author>
   <author>
     <name></name><email>debian-doc@lists.debian.org</email>
   </author>
   <version>
     &docid;

   </version>
  </titlepag>
  <toc detail="sect1">
 
 <chapt id="about">
  <heading>
    Introduction
  </heading>
  <p>
    The primary goals of these Release Notes are to inform users of major 
    changes in this release of the Debian distribution, to provide 
    information on how to upgrade safely from the previous to the this 
    release and finally to inform users of known potential issues users 
    could encounter when upgrading to or using the release.
  </p>
  <p>
    Note that it is impossible to list every known issue and that therefore 
    a selection has been made based on a combination of the expected 
    prevalence and impact of issues.
  </p>
  <p>
    The most recent version of this document is always available at <url 
    id="&url-release-notes;">. If your version is more than a month old, you 
    might wish to download the latest version.]
  </p>
  <p>
    请注意我们只支持和讨论从上一发行版（也就是&oldreleasename;）升级。如果您需要从更老的Debian发行版升级，请阅读从前的《发布说明》。
  </p>
 </chapt>
 <chapt id="whats-new">
  <heading>
    &debian; &release;的新特性
  </heading>
  <p>
    这一发行版加入了对AMD64体系架构的支持，包括Intel(EM64T)和AMD(AMD64)的64位处理器。上发行版 
    &debian; 3.1 
    ('sarge')有非官方的AMD64移植可用。从这一非官方版本升级应该没有问题，但我们不准备在本发布说明中介绍。
  </p>
  <p>
    我们将停止对Motorola 680x0 
    ('m68k')体系架构的官方支持，因为它不满足Debian发布管理的标准。关键问题出在它的性能和上游组织对基本工具的支持。然而，即使不再有官方发布版，m68k的移植工作仍然会很活跃，安装也不成问题。
  </p>
  <p>
    下面是&debian;&releasename;中由官方支持的体系架构：
  </p>
  <p>
   <list>
    <item>
     <p>
       Intel x86 ('i386')
     </p>
    </item>
    <item>
     <p>
       Alpha ('alpha')
     </p>
    </item>
    <item>
     <p>
       SPARC ('sparc')
     </p>
    </item>
    <item>
     <p>
       PowerPC ('powerpc')
     </p>
    </item>
    <item>
     <p>
       ARM ('arm')
     </p>
    </item>
    <item>
     <p>
       MIPS ('mips' (Big endian) and 'mipsel' (Little endian))
     </p>
    </item>
    <item>
     <p>
       Intel Itanium ('ia64')
     </p>
    </item>
    <item>
     <p>
       HP PA-RISC ('hppa')
     </p>
    </item>
    <item>
     <p>
       S/390 ('s390')
     </p>
    </item>
    <item>
     <p>
       AMD64 ('amd64')
     </p>
    </item>
   </list>
  </p>
  <p>
    您可以在<url id="&url-ports;" 
  </p>
   <![ %secondrelease [

  <p>
    这仅是 
    &debian;在&arch-title;系统架构上的第二次正式发行。我们觉得系统本身已经证明了它有公开发行的水准。然而，因为它从来没有像其他系统架构上的发行版那样知名(而且因之能被用户测试)，所以您可能会遭遇到一些问题。请利用我们的<url 
    id="&url-bts;" 
  </p>
   ]]>

  <p>
    &arch-title;上的&debian; &release; 使用&kernelversion;内核。
  </p>
  <sect id="newdistro">
   <heading>
     新的发行版
   </heading>
   <p>
     TODO: Update numbers
   </p>
   <p>
     This new release of Debian again comes with a lot more software than 
     its predecessor &oldreleasename;; the distribution includes over 9000 
     new packages. Most of the software in the distribution has been 
     updated: almost 6500 software packages (this is 73% of all packages in 
     &oldreleasename;). Also, a significant number of packages have for 
     various reasons been removed from the distribution. You will not see 
     any updates for these packages and they will be marked as 'obsolete' in 
     package management front-ends.
   </p>
   <p>
     With this release &debian; switches from XFree86 to the 7.1 release of 
     X.Org, which includes support for a greater range of hardware and 
     better autodetection. This allows the use of Compiz, which is one of 
     the first compositing window managers for the X Window System, taking 
     full advantage of hardware OpenGL-acceleration for supported devices.
   </p>
   <p>
     &debian;带有最新的桌面应用程序，比如GNOME 2.14, KDE 3.5 
     和OpenOffice.org 2.0。
   </p>
   <p>
     <prgn>aptitude</prgn> is the preferred program for package management 
     from console. <prgn>aptitude</prgn> supports most command line 
     operations of <prgn>apt-get</prgn> and has proven to be better at 
     dependency resolution than <prgn>apt-get</prgn>. If you are still using 
     <prgn>dselect</prgn>, you should switch to <package>aptitude</package> 
     as the official frontend for package management.
   </p>
   <p>
     官方&debian;发行版包括13至15张(取决于系统架构)binary 
     CD(含有编译后的软件包――译者)和十几张source 
     CD(含有未编译的原代码――译者)，现在也可以使用DVD。
   </p>
   <sect1 id="volatile">
    <heading>
      debian-volatile now an official service
    </heading>
    <p>
      The <em>debian-volatile</em> service that was introduced as an 
      unofficial service with the release of &oldreleasename;, has now 
      become an official &debian; service.
    </p>
    <p>
      This means that it no longer has a <tt>.debian.net</tt> address, but 
      now uses a <tt>.debian.org</tt> address. Please make sure to update 
      your <file>/etc/apt/sources.list</file> accordingly if you were 
      already using this service.
    </p>
    <p>
      <em>debian-volatile</em> allows users to easily update stable packages 
      that contain information that quickly goes out of date. Examples are a 
      virus scanner's signatures list or a spam filter's pattern set. For 
      more information and a list of mirrors, please see the archive's <url 
      id="&url-debian-volatile" name="web page">.
    </p>
   </sect1>
  </sect>
  <sect id="inst-new">
   <heading>
     新的安装系统
   </heading>
   <p>
     There has been a lot of development on the Debian Installer since its 
     first official release with &oldreleasename; resulting in both improved 
     hardware support and some exciting new features.
   </p>
   <p>
     In these Release Notes we'll only list the major changes in the 
     installer. If you are interested in an overview of the detailed changes 
     since &oldreleasename;, please check the release announcements for the 
     &releasename; beta and RC releases avaiable from the project's <url 
     id="&url-installer-news" name="news history">.
   </p>
   <sect1 id="inst-changes">
    <heading>
      Major changes
    </heading>
    <p>
     <taglist>
      <tag>
        No reboot during the installation
      </tag>
      <item>
       <p>
         The installation used to be split into two parts: setting up the 
         base system and making it bootable, followed by a reboot and after 
         that the execution of <prgn>base-config</prgn> which would take 
         care of things like user setup, setup of the package management 
         system and installation of additional packages (using tasksel).
       </p>
       <p>
         For &releasename; the second stage has been integrated into Debian 
         Installer itself. This has a number of advantages, including 
         increased security and the fact that after the reboot at the end of 
         the installation the new system should already have the correct 
         timezone and, if you installed the Desktop environment, will at 
         once start the graphical user interface.
       </p>
      </item>
      <tag>
        UTF-8 encoding default for new systems
      </tag>
      <item>
       <p>
         The installer will set up systems to use UTF-8 encoding rather than 
         the old language-specific encodings (like ISO-8859-1, EUC-JP or 
         KIO-8).
       </p>
      </item>
      <tag>
        More flexible partitioning
      </tag>
      <item>
       <p>
         It is now possible to set up file systems on an LVM volume using 
         guided partitioning.
       </p>
       <p>
         The installer is also able to set up encrypted filesystems. Using 
         manual partitioning you have the choice between <tt>dm-crypt</tt> 
         and <tt>loop-aes</tt>, using a passphrase or a random key, and you 
         can tune various other options. Using guided partitioning, the 
         installer will create an encrypted LVM partition that contains any 
         other filesystems (except <file>/boot</file>) as logical volumes.
       </p>
      </item>
       <![ %i386-amd64 [

      <tag>
        Graphical user interface
      </tag>
      <item>
       <p>
         If you prefer a graphical user interface, try booting the 
         installer with <tt>installgui</tt>.
       </p>
       <p>
         The functionality of the graphical installer is almost identical to 
         the regular installer, only the presentation differs. There is one 
         exception: the graphical frontend does not support setting up 
         encrypted partitions using random keys.
       </p>
       <p>
         Note: the graphical user interface is not available for all 
         architectures.
       </p>
      </item>
       ]]><![ %powerpc [

      <tag>
        Graphical user interface
      </tag>
      <item>
       <p>
         For &arch-title; a separate installation image using a graphical 
         user interface is available on an experimental basis. It is known 
         to work on most CHRP systems that have an ATI graphics card, but 
         has been insufficiently tested on &arch-title; to include it on the 
         normal installation CDs.
       </p>
       <p>
         If you'd like to try the graphical installer, look for the 
         "gtk-miniiso" image.
       </p>
      </item>
       ]]>

      <tag>
        Rescue mode
      </tag>
      <item>
       <p>
         You can use the installer to solve problems with your system, for 
         example when it refuses to boot. The first steps will be just like 
         a regular installation, but the installer will not start the 
         partitioner. Instead it will offer you a menu of rescue options.
       </p>
       <p>
         Activate the rescue mode by booting the installer with 
         <tt>rescue</tt>, or by adding a boot parameter 
         <tt>rescue/enable=true</tt>.
       </p>
      </item>
      <tag>
        Using sudo instead of root account
      </tag>
      <item>
       <p>
         During expert installations you can choose to not set up the root 
         account (it will be locked), but instead set up <prgn>sudo</prgn> 
         so that the first user can use that for system administration.
       </p>
      </item>
      <tag>
        SELinux
      </tag>
      <item>
       <p>
         The packages needed for SELinux support have been promoted to 
         priority "standard". This means that they will be installed by 
         default if you select the Standard task during 
         installation. However, SELinux support is not enabled by 
         default. If you want to secure your system using SELinux, you will 
         need to enable it manually after the installation.
       </p>
      </item>
       <![ %not-s390 [

      <tag>
        New languages
      </tag>
      <item>
       <p>
         Thanks to the huge efforts of translators, Debian can now be 
         installed in up to $FIXME$ languages. <![ %g-i [ If the graphical 
         user interface is used, an additional $FIXME$ languages are 
         supported. ]]>
       </p>
      </item>
       ]]>

     </taglist>
    </p>
   </sect1>
   <sect1 id="inst-auto">
    <heading>
      Automated installation
    </heading>
    <p>
      A lot of the changes mentioned in the previous section also imply 
      changes in the support in the installer for automated installation 
      using preconfiguration files. This means that if you have existing 
      preconfiguration files that worked with the &oldreleasename; 
      installer, you cannot expect these to work with the new installer 
      without modification.
    </p>
    <p>
      The good news is that the <url id="&url-install-manual;" 
      name="Installation Guide"> now has a separate appendix with extensive 
      documentation on using preconfiguration.
    </p>
    <p>
      The &releasename; installer introduces some exciting new features that 
      allow further and easier automation of installs. It also adds support 
      for advanced partitioning using RAID, LVM and encrypted LVM. See the 
      documentation for details.
    </p>
   </sect1>
  </sect>
 </chapt>
 <chapt id="installing">
  <heading>
    全新安装
  </heading>
  <p>
    The Debian Installer is the official installation system for Debian. It 
    offers a variety of installation methods. Which methods are available to 
    install your system depends on your architecture.
  </p>
  <p>
    Images of the installer for &releasename; and the Installation Guide can 
    be found on the <url id="&url-installer;" name="Debian website">.
  </p>
  <p>
    The Installation Guide is also included on the first CD/DVD of the 
    official Debian CD/DVD sets, at:
   <example>
/doc/install/manual/<var>language</var>/index.html
        </example>
  </p>
  <p>
    You may also want to check the <url id="&url-installer;index#errata" 
    name="errata"> for debian-installer.
  </p>
   <![ %alpha [

  <p>
    安装程序只能在那些支持SRM终端的alpha系统上使用。请在开始安 
    装前将系统转换为SRM。如果您的机器只支持 AlphaBIOS/ARC终端，您 
    仍然可以通过安装(最小化)的 &oldreleasename; 随后将其升级来安装 
    &releasename;。要了解关于不同终端的更多的信息，请阅读<url 
    id="http://www.debian.org/ports/alpha" name="Debian alpha port web 
    pages">
  </p>
   ]]><![ %sparc [

  <sect id="sparc_fb">
   <heading>
     &arch-title;上的帧缓冲器问题
   </heading>
   <p>
     Because of display problems on some systems, framebuffer support is 
     disabled by default for &arch-title; for most graphics cards. This can 
     result in ugly display on systems that do properly support the 
     framebuffer. If you see display problems in the installer, you can try 
     booting the installer with the parameter 
     <tt>framebuffer=true</tt>. Please let us know if the framebuffer is not 
     used by default, but works for your hardware.
   </p>
  </sect>
   ]]>

  <sect id="popcon">
   <heading>
     包受欢迎度排名
   </heading>
   <p>
     Unlike for the previous release, the installation system will again 
     offer to install the <package>popularity-contest</package> package.
   </p>
   <p>
     <package>popularity-contest</package>向Debian项目提供在发行版中被使用的软件包信息。这些信息主要用于决定软件包在安装CD-ROM上的顺序，也时常被开发人员用于决定是否继续使用缺少维护者的软件包。
   </p>
   <p>
     Information from <package>popularity-contest</package> is processed 
     anonymously. We would appreciate it if you would participate in this 
     official survey; you will thereby help improve Debian.
   </p>
  </sect>
 </chapt>
 <chapt id="upgrading">
  <heading>
    从旧发行版升级
  </heading>
  <sect id="backup">
   <heading>
     准备升级
   </heading>
   <p>
     We suggest that before upgrading you also read the information in <ref 
     id="information">. That chapter covers potential issues not directly 
     related to the upgrade process but which could still be relevant.
   </p>
   <p>
     在升级之前，强烈建议您完整备份系统或至少备份重要数据和配置文件。升级工具和进程非常可靠，但是在安装过程中的硬件错误会导致系统严重损坏。
   </p>
   <p>
     您需要备份的主要部份是/etc和/var/lib/dpkg中的内容以及dpkg 
     --get-selections "*"（此处双引号不可忽略）的输出信息。
   </p>
   <p>
     升级过程并会修改<file>/home</file>目录中的文件。不过，一些应用程序（比如Mozilla，某些GNOME和KDE程序）会在第一次执行时用新的默认设置覆盖用户配置文件。作为预防措施，您可以把home目录中以句点开头的隐藏文件备份起来，以便恢复原来的设置。同时，通知其它用户这一问题。
   </p>
   <p>
     It's wise to inform all users in advance of any upgrades you're 
     planning, although users accessing your system via an <prgn>ssh</prgn> 
     connection should notice little during the upgrade, and should be able 
     to continue working. If you wish to take extra precautions, back up or 
     unmount users' partitions (<file>/home</file>) before upgrading. A 
     reboot will not normally be necessary, unless you also plan to upgrade 
     your kernel.
   </p>
   <p>
     全面的升级应在文本模式的虚拟控制台(或直连的串行终端)运行，或者远程地通过SSH运行。
   </p>
   <p>
     <strong>重要提示!</strong>不要使用telnet、rlogin、rsh或在要升级的计算机上由xdm、gdm、kdm管理的X会话进行升级。因为它们很可能在升级时被终止，那将造成一个因未完全升级而无法访问的系统。
   </p>
   <p>
     任何软件包安装操作都必须在超级用户权限下运行，所以要以root身份登录或用su/sudo来取得必需的访问权限。
   </p>
   <p>
     The upgrade has a few preconditions; you should check them before 
     actually executing the upgrade.
   </p>
   <sect1>
    <heading>
      Make sure you have sufficient space for the upgrade
    </heading>
    <p>
      You have to make sure before upgrading your system that you have 
      sufficient hard disk space when you start the full system upgrade 
      described in <ref id="upgrading_other">. You will first need enough 
      hard disk on the filesystem partition that holds <file>/var/</file> to 
      temporarily download the packages that will be installed in your 
      system. After the download, you will probably need more space in other 
      filesystem partitions in order to both install upgraded packages 
      (which might contain bigger binaries or more data) and new packages 
      that will be pulled in for the upgrade. If your system does not have 
      sufficient space you might end up with an incomplete upgrade that 
      might be difficult to recover from.
    </p>
    <p>
      Both <prgn>aptitude</prgn> and <prgn>apt</prgn> will show you detailed 
      information of the disk space needed for the installation. You can see 
      this estimate before executing the actual upgrade running:
    </p>
    <p>
     <example>
# aptitude -y -s -f --with-recommends dist-upgrade
[ ... ]
XXX upgraded, XXX newly installed, XXX to remove and XXX not upgraded.
Need to get xx.xMB/yyyMB of archives. After unpacking AAAMB will be used.
Would download/install/remove packages.
</example>
    </p>
    <p>
      If you do not have enough space for the upgrade, make sure you free up 
      space beforehand. You can:
    </p>
    <p>
     <list>
      <item>
       <p>
         Remove packages that have been previously downloaded for 
         installation (at <file>/var/cache/apt/archive</file>), cleaning up 
         the package cache by running <prgn>apt-get clean</prgn>.
       </p>
      </item>
      <item>
       <p>
         Remove old packages you no longer use. If you have 
         <prgn>popularity-contest</prgn> installed you can use 
         <prgn>popcon-largest-unused</prgn> to list the packages you do not 
         use in the system that occupy the most space. You can also use 
         <prgn>deborphan</prgn> or <prgn>debfoster</prgn> to find obsolete 
         packages (see <ref id="obsolete">)
       </p>
      </item>
      <item>
       <p>
         Remove packages that take up too much space and you do not have an 
         immediate need for (you can always reinstall them after the 
         upgrade). You can list packages that take up most of the disk space 
         with <prgn>dpigs</prgn> (available in the 
         <prgn>debian-goodies</prgn> package) or with <prgn>wajig</prgn> 
         (running <prgn>wajig size</prgn>).
       </p>
      </item>
      <item>
       <p>
         Temporarily move to another system, or permanently remove, system 
         logs residing under <file>/var/log/</file>.
       </p>
      </item>
     </list>
    </p>
   </sect1>
   <sect1 id="glibc-kernel">
    <heading>
      Support for 2.2-kernels has been dropped
    </heading>
    <p>
      In case you run a kernel prior to 2.4.1, you need to upgrade to (at 
      least) the 2.4-series before upgrading the <package>glibc</package>, 
      which means: best before starting with the upgrade. It is recommended 
      to upgrade to the 2.6-kernel series.
    </p>
   </sect1>
   <sect1 id="kernelorder">
    <heading>
      Upgrade your kernel or userland first&nbsp;
    </heading>
    <p>
      [FIXME: Needs decision/documentation whether to upgrade userland or 
      kernel first.]
    </p>
   </sect1>
  </sect>
  <sect id="system-status">
   <heading>
     检查系统状态
   </heading>
   <p>
     The upgrade process described in this chapter has been designed for 
     upgrades from "pure" &oldreleasename; systems without 3rd party 
     packages. It may be wise to remove these packages first.
   </p>
   <p>
     在此假定您的系统已经是最新版的&oldreleasename;。如果不是这样或您不清楚，请按<ref 
     id="old-upgrade">操作。
   </p>
   <sect1>
    <heading>
      禁用APT pinning(APT的一种用于安装特定版本软件包的功能――译者)
    </heading>
    <p>
      如果您配置了APT来安装非stable的特定软件包(例如从testing)，您应当改变APT 
      pinning设置(在<file>/etc/apt/preferences</file>)。可在<manref 
      section="5" name="apt_preferences">中找到APT pinning的详细信息。
    </p>
   </sect1>
   <sect1>
    <heading>
      检查软件包状态
    </heading>
    <p>
      不管用什么方法升级，建议您先检查所有软件包的状态，确认所有软件包都处在可升级状态。以下命令会显示任何错误状态，特别是安装不全或配置失败的软件包。
     <example>
# dpkg --audit
          </example>
    </p>
    <p>
      您也可以使用<prgn>dselect</prgn>、<prgn>aptitude</prgn>或用以下命令来检查您系统所有软件包的状态：
     <example>
# dpkg -l | pager 
          </example>
      或
     <example>
# dpkg --get-selections &gt; ~/curr-pkgs.txt
          </example>
    </p>
    <p>
      It is desirable to remove any holds before upgrading. If any package 
      that is essential for the upgrade is on hold, the upgrade will fail.
    </p>
    <p>
      Note that <prgn>aptitude</prgn> uses a different method for 
      registering packages that are on hold than <prgn>apt-get</prgn> and 
      <prgn>dselect</prgn>. You can identify packages on hold for 
      <prgn>aptitude</prgn> with
     <example>
# aptitude search "~ahold" | grep "^.h"
          </example>
    </p>
    <p>
      如果您想查看用<prgn>apt-get</prgn>设定为保持的软件包，可以使用
     <example>
# dpkg --get-selections | grep hold
          </example>
    </p>
    <p>
      如果您在本机修改并编译了一个软件包，且没有重命名或在版本号中加入epoch(软件包中自定义的版本号――译者)，您必须把它置为hold状态来防止它被更新。
    </p>
    <p>
      <prgn>aptitude</prgn>中“hold"状态的包可以这样更改(将 <tt>hold</tt> 
      替换为 <tt>unhold</tt>)：
     <example>
# aptitude hold <var>package_name</var>
          </example>
    </p>
    <p>
      如果需要修复，最好保证<file>sources.list</file>仍然指向 
      &oldreleasename;，正像在<ref id="old-sources">中解释的那样。
    </p>
   </sect1>
   <sect1 id="backports">
    <heading>
      非官方源与backports（backports为Debian提供 
      不需要非Stable链接库就可在Stable版运行的新软件包，有效地弥补了Debian 
      Stable版软件较旧的缺点――译者）
    </heading>
    <p>
      如果您在系统上使用非Debian软件包，请注意这些包可能在升级过程中由于包冲突而被删除。如果这些包是通过在<file>/etc/apt/sources.list</file>中加入非官方源安装的，您应检查这一非官方源是否提供为&releasename;编译的软件包，然后根据实际情况修改相应的行。
    </p>
    <p>
      一些用户在&oldreleasename;中使用非官方backport的较“新”软件包。这些包非常容易在升级中出错，因为它们很可能导致包冲突。<footnote><p>Debian的包管理系统一般不允许一个软件包中的文件替换另一包的文件；除非新的包被定义为那样做。</p></footnote><ref 
      id="trouble">提供如何处理包冲突的办法。
    </p>
   </sect1>
  </sect>
  <sect id="upgrade-process">
   <heading>
     准备APT源
   </heading>
   <p>
     在升级之前，您必须在<file>/etc/apt/sources.list</file>中配置<package>apt</package>来生成软件包列表。
   </p>
   <p>
     <package>apt</package>会以行先后顺序为优先级分析可通过"<tt>deb</tt>"行找到的所有软件包，然后安装具有最高版本号软件包。(这样，在具有许多镜像地址时，一般地，应先写入本地硬盘，然后CD-ROM，再然后HTTP/FTP镜像)
   </p>
   <p>
     一个发行版经常既可以由代号（如&oldreleasename;、&releasename;）也可由状态名（如oldstable、stable、testing、unstable）表示。用代号可使您不会对一个新发行版感到陌生，因此在本说明中我们使用代号。这当然意味着您自己必须关注新版的发行。如果使用状态名，您只会在新版发行时发现可升级的包。
   </p>
   <sect1 id="network">
    <heading>
      添加Internet APT源
    </heading>
    <p>
      默认设置是从主Debian 
      Internet服务器安装，但是您也可以修改<file>/etc/apt/sources.list</file> 
      来使用其它镜像，特别是网络上与您最近的镜像。
    </p>
    <p>
      Debian HTTP或FTP镜像地址可在<url id="&url-debian-mirrors;"> 
      找到(查看"Full list of mirrors"部分)。HTTP服务器总体上比FTP服务器快。
    </p>
    <p>
      例如，假设最近的镜像是<tt>&url-debian-mirror-eg;/</tt>当用浏览器或FTP工具访问它时，您会注意到主要目录是这样组织的：
     <example>
&url-debian-mirror-eg;/dists/&releasename;/main/binary-&architecture;/...
&url-debian-mirror-eg;/dists/&releasename;/contrib/binary-&architecture;/...
           </example>
    </p>
    <p>
      为了让<prgn>apt</prgn>使用这一镜像，在<file>sources.list</file>中加入这一行：
     <example>
deb &url-debian-mirror-eg; &releasename; main contrib
           </example>
    </p>
    <p>
      #-#-#-#-#  choice  #-#-#-#-#
      注意'<tt>dists</tt>'被自动隐含地添加了，且在发行版名称之后的参数被用来把安装路径扩展到不同目录中。
      #-#-#-#-#  choice  #-#-#-#-#
      注意`<tt>dists</tt>' 
      被自动隐含地添加了，且在发行版名称之后的参数被用来把安装路径扩展到不同目录中。
    </p>
    <p>
      #-#-#-#-#  choice  #-#-#-#-#
      添加了新APT源之后，用井号(<tt>#</tt>)添在行前以把 
      <file>sources.list</file>中已有的"<tt>deb</tt>"行禁用。
      #-#-#-#-#  choice  #-#-#-#-#
      添加了新APT源之后，用井号 (<tt>#</tt>)添在行前以把 
      <file>sources.list</file>中已有的"<tt>deb</tt>"行禁用。
    </p>
    <p>
      所有从网上下载的软件包都被储存在<file>/var/cache/apt/archives</file>(以及在下载进程中的<file>partial/</file>)，所以在开始安装之前您必须确保有足够的空间。对于一个适当扩展的Debian安装，至少要有300MB的下载数据。
    </p>
   </sect1>
   <sect1 id="localmirror">
    <heading>
      添加本地APT源
    </heading>
    <p>
      您可以修改<file>/etc/apt/sources.list</file>来使用本地驱动器(可能是挂载的NFS分区)上的镜像。
    </p>
    <p>
      例如，您的镜像在<file>/var/ftp/debian/</file>，它有这样的主目录：
     <example>
/var/ftp/debian/dists/stable/main/binary-&architecture;/...
/var/ftp/debian/dists/stable/contrib/binary-&architecture;/...
           </example>
    </p>
    <p>
      要让<prgn>apt</prgn>使用它，在<file>sources.list</file>中加入这一行：
     <example>
deb file:/var/ftp/debian &releasename; main contrib
           </example>
    </p>
    <p>
      #-#-#-#-#  choice  #-#-#-#-#
      注意'<tt>dists</tt>'被自动隐含地添加了，且在发行版名称之后的参数被用来把安装路径扩展到不同目录中。
      #-#-#-#-#  choice  #-#-#-#-#
      注意`<tt>dists</tt>' 
      被自动隐含地添加了，且在发行版名称之后的参数被用来把安装路径扩展到不同目录中。
    </p>
    <p>
      #-#-#-#-#  choice  #-#-#-#-#
      添加了新APT源之后，用井号(<tt>#</tt>)添在行前以把 
      <file>sources.list</file>中已有的"<tt>deb</tt>"行禁用。
      #-#-#-#-#  choice  #-#-#-#-#
      添加了新APT源之后，用井号 (<tt>#</tt>)添在行前以把 
      <file>sources.list</file>中已有的"<tt>deb</tt>"行禁用。
    </p>
   </sect1>
   <sect1 id="cdroms">
    <heading>
      添加CD-ROM或DVD APT源
    </heading>
    <p>
      如果只想使用CD-ROM，那就把<file>sources.list</file>中已有的<tt>deb</tt>" 
      行用"<tt>#</tt>"注释掉。
    </p>
    <p>
      确保<file>/etc/fstab</file>中有允许在<file>/cdrom</file>挂载CD-ROM的一行(<prgn>apt-cdrom</prgn>需要使用<file>/cdrom</file>挂载点)。例如，如果<file>/dev/hdc</file>是您的CD-ROM驱动器，<file>/etc/fstab</file>应包含这样一行：
     <example>
/dev/hdc /cdrom auto defaults,noauto,ro 0 0
          </example>
    </p>
    <p>
      注意在第四部分的”<tt>defaults,noauto,ro</tt>”中，词之间不能有任何空格。
    </p>
    <p>
      要确认它有效，插入一张CD：
     <example>
# mount /cdrom   # 挂载CD-ROM
# ls -alF /cdrom # 显示CD根目录
# umount /cdrom  # 卸载CD-ROM
          </example>
    </p>
    <p>
      下一步，对于您拥有的每一张Debian Binary CD-ROM运行
     <example>
# apt-cdrom add
          </example>
      来向APT的数据库添加每一CD的信息。
    </p>
   </sect1>
  </sect>
  <sect id="upgradingpackages">
   <heading>
     升级软件包
   </heading>
   <p>
     The recommended way to upgrade from previous &debian; releases is to 
     use the package management tool <prgn>aptitude</prgn>. This program 
     makes safer decisions about package installations than running 
     <prgn>apt-get</prgn> directly.
   </p>
   <p>
     不要忘记以读写模式挂载所有分区(一般是root和<file>/usr</file>分区)：
    <example>
# mount -o remount,rw /<var>mountpoint</var>
          </example>
   </p>
   <p>
     下一步确保APT源(<file>/etc/apt/sources.list</file>)指向"<tt>&releasename;</tt>"或"<tt>stable</tt>"。注意：CD-ROM经常被表示为"<tt>unstable</tt>";虽然这令人迷惑，但<em>不要</em>修改它。
   </p>
   <p>
     强烈建议您使用<prgn>/usr/bin/script</prgn>程序来记录一个升级过程的信息副本。这样如果出现问题，您就有一个日志来验看发生了什么，而且如果需要的话，这可以提供bug报告的确切信息。输入：
    <example>
# script -a ~/upgrade-to-&releasename;.typescript
          </example>
     或类似的命令来开始记录。不要把记录文件放在临时目录中，如<file>/tmp</file>或<file>/var/tmp</file>(在这些目录中的文件会在升级或重启动过程中被删除)。
   </p>
   <p>
     typescript允许您浏览已经滚过屏幕的提示信息。只要转到VT2（Virtual 
     Terminal 2――译者）（使用<tt>alt-F2</tt>），登录以后，用<tt>less 
     ~/upgrade-to-&releasename;.typescript</tt>查看。
   </p>
   <p>
     升级完成之后，您可以输入<tt>exit</tt>命令来结束<prgn>script</prgn>。
   </p>
   <sect1 id="updating_lists">
    <heading>
      更新包列表
    </heading>
    <p>
      首先需要取得新发行版的软件包列表：<footnote><p>我们使用<prgn>apt-get</prgn>因为&oldreleasename;中的<prgn>aptitude</prgn>可能在新源加入<file>sources.list</file>时出错。</p></footnote>
    </p>
    <p>
     <example>
# apt-get update
	  </example>
    </p>
   </sect1>
   <sect1 id="upgrading_aptitude">
    <heading>
      升级aptitude
    </heading>
    <p>
      升级测试表明&releasename;的<prgn>aptitude</prgn>在解决复杂依赖关系时比<prgn>apt-get</prgn>或&oldreleasename;的<prgn>aptitude</prgn>更出色。所以首先应升级它：
     <example>
# aptitude install aptitude
          </example>
    </p>
    <p>
      您会看到一些关于将要进行的修改的提示信息，并被问到是否确认。在确认之前，您应仔细查看要进行的更改，特别是在升级过程中即将被删除的包。
    </p>
    <p>
      某些时候，如果很多软件包被列出来准备删除，您可用<package>aptitude</package>事先升级某些软件来缓解这种情况。举一个例子：当对装有KDE的系统进行检查时，我们会注意到这一过程会删除很多KDE和perl包。这时可以先把perl连同<package>aptitude</package>一起升级来解决。
    </p>
   </sect1>
   <sect1 id="upgrading_other">
    <heading>
      升级系统的其它部分
    </heading>
    <p>
      您现在已经一切就绪来进行升级的主要部分，运行
    </p>
    <p>
     <example>
# aptitude -f --with-recommends dist-upgrade
	  </example>
    </p>
    <p>
      将进行完整的系统升级，也就是说，安装所有最新版本的软件包并解决所有可能的包依赖关系变化问题。如果必要，它会安装一些新软件包(通常是新的链接库，或改名的软件包)，移除任何有冲突的旧包(如<package>console-tools-libs</package>)。
    </p>
    <p>
      当从一组CD-ROM升级时，您会被要求在特定时期插入特定CD。可能必须多次插入同一CD，这取决于分布于CD中的软件包内部关系。
    </p>
    <p>
      只有改变其它包状态才能被更新的软件包会被保留为当前版本(显示为'held 
      back'状态)。这可以通过使用<prgn>aptitude</prgn>来选择这些包来安装或输入<tt>aptitude 
      -f install <var>package</var></tt>来解决。
    </p>
    <p>
      <tt>--fix-broken</tt> (或只是<tt>-f</tt>)设置项使 
      <package>apt</package>尝试修复系统中的依赖性错误。<package>apt</package>不允许系统中存在未满足的包依赖关系。
    </p>
   </sect1>
   <sect1 id="trouble">
    <heading>
      升级过程中可能出现的问题
    </heading>
    <p>
      如果在使用<prgn>aptitude</prgn>、<prgn>apt-get</prgn>或<prgn>dpkg</prgn>时出现如下错误
     <example>
E: Dynamic MMap ran out of room
</example>
      那是因为默认的缓冲区太小。解决办法有二：移除<file>/etc/apt/sources.list</file>中的多余行，增大缓冲区。缓冲区大小可通过<file>/etc/apt/apt.conf</file>中的<tt>APT::Cache-Limit</tt>设定。假设现有<file>/etc/apt/apt.conf</file>中未设定这一变量，可以这样做：
     <example>
# echo 'APT::Cache-Limit "12500000";' >> /etc/apt/apt.conf
</example>
      This assumes that you do not yet have this variable set in that file.
    </p>
    <p>
      启用APT::Force-LoopBreak设置来临时移除在Conflicts/Pre-Depends(A 
      Conflicts B表示A、B不能同时被安装，A Pre-Depends 
      B表示安装A之前必须安装B――译者)循环中的一个基本软件包有时很必要。<prgn>aptitude</prgn>将警告您这种情况并终止升级。您可以通过在<prgn>aptitude</prgn>命令行中加入<tt>-o 
      APT::Force-LoopBreak=1</tt>设置来实现。
    </p>
    <p>
      很有可能的是，系统依赖性结构会非常混乱而需要手动干预。通常这要使用<prgn>aptitude</prgn>或
     <example>
# dpkg --remove <var>package_name</var>
          </example>
      来去除这些不友好的软件包，或者
     <example>
# aptitude --fix-broken install
# dpkg --configure --pending
          </example>
    </p>
    <p>
      在极端情况下您可能要使用以下命令强行重新安装：
     <example>
# dpkg --install <var>/path/to/package_name.deb</var>
          </example>
    </p>
    <p>
      如果从"纯"&oldreleasename;升级，包冲突问题不会出现，但若使用非官方 
      backport包则会出现该问题。包冲突会造成如下错误：
     <example>
Unpacking replacement <var>&lt;package-foo&gt;</var> ...
dpkg: error processing <var>&lt;package-name-for-foo&gt;</var> (--unpack):
 trying to overwrite `<var>&lt;some-file-name&gt;</var>',
 which is also in package <var>&lt;package-bar&gt;</var>
          </example>
    </p>
    <p>
      您可以强行删除出错信息<em>最后</em>一行的软件包：
     <example>
# dpkg -r --force-depends <var>package_name</var>
          </example>
    </p>
    <p>
      修好之后，您应可以通过上面提到的<tt>aptitude</tt>命令方法恢复升级过程。
    </p>
    <p>
      在升级过程中，您会被问一些问题来配置或重新配置部分软件包。如果您被问到任何在<file>/etc/init.d</file>或<file>/etc/terminfo</file>目录中的文件，或<file>/etc/manpath.config</file>文件是否应被包维护者的文件替代时，通常回答'yes'很必要。您可以在任意时候转回旧的文件，因为它们会被标以 
      <tt>.dpkg-old</tt>扩展名储存。
    </p>
    <p>
      如果您不知道应该做什么，记下软件包或者文件的名字，再在升级后解决这些问题。您可以搜索日志文件来复查升级过程中显示的屏幕信息。
    </p>
   </sect1>
  </sect>
  <sect id="newkernel">
   <heading>
     Upgrading your kernel and related packages
   </heading>
   <p>
     You should upgrade the Linux kernel separately from the rest of your 
     packages. You may wish to do so yourself, either by installing one of 
     the <package>linux-image-*</package> packages or by compiling a 
     customized kernel from sources. Please read the information in this 
     section about potential issues with kernel upgrades.
   </p>
   <p>
     All Linux kernel packages have been renamed from <tt>kernel-*</tt> to 
     <tt>linux-*</tt> to clean up the namespace.
   </p>
    <![ %defaulted-2.4 [

   <p>
     If you are currently using a kernel from the 2.4 series, the older 
     stable Linux kernel series, you should upgrade to a 2.6 series kernel, 
     as 2.4 is no longer supported in &releasename;. If you are currently 
     using a kernel from the 2.2 series, you must upgrade to (at least) the 
     2.4 series, better to a 2.6 series kernel prior to upgrading your 
     packages. Some general issues associated with an upgrade to 2.6 are 
     documented in <ref id="upgrade-to-2.6">.
   </p>
    ]]>

   <sect1>
    <heading>
      initrd-tools deprecated
    </heading>
    <p>
      <package>initrd-tools</package> is no longer supported and has been 
      superseded by <package>initramfs-tools</package> and 
      <package>yaird</package>. Upgrading to an &releasename; kernel will 
      cause <package>initramfs-tools</package> to be installed by 
      default. <![ %defaulted-2.4 [ If you are upgrading from a 2.4 kernel 
      to a 2.6 kernel for the first time, you must use 
      <package>initramfs-tools</package>. Using <package>yaird</package> 
      will cause linux-image-2.6 installations to fail if you are running a 
      2.2 or 2.4 kernel. ]]>
    </p>
   </sect1>
   <sect1>
    <heading>
      devfs deprecated
    </heading>
    <p>
      &releasename; no longer provides support for <prgn>devfs</prgn>. It is 
      recommended that users switch to udev for dynamic <file>/dev</file> 
      management. Debian kernels no longer include support for 
      <prgn>devfs</prgn>, so <prgn>devfs</prgn> users will need to manually 
      convert their systems before upgrading to an &releasename; kernel.
    </p>
    <p>
      If you see the string 'devfs' in <file>/proc/mounts</file>, you are 
      likely using devfs. Any config files that reference devfs style names 
      will need to be adjusted to use udev style names. Files that are most 
      likely to refer to devfs style device names include 
      <file>/etc/fstab</file>, <file>/etc/lilo.conf</file>, 
      <file>/boot/grub/menu.lst</file>, etc.
    </p>
    <p>
      More information about potential issues is available in bug report 
      <url id="http://bugs.debian.org/341152" name="#341152">.
    </p>
   </sect1>
    <![ %i386-amd64-ia64 [

   <sect1>
    <heading>
      Standard kernels contain SMP abilities
    </heading>
    <p>
      Multiprocessor systems no longer require a *-smp flavour of the Linux 
      kernel. For &arch-title; linux-image packages without the -smp suffix 
      support both uniprocessor and multiprocessor systems.
    </p>
   </sect1>
    ]]><![ %i386 [

   <sect1>
    <heading>
      386 kernel flavour deprecated
    </heading>
    <p>
      Support for the 80386 sub-archicture for &arch-title; has been dropped 
      in &releasename;. The 386 kernel flavor is no longer supported and has 
      been replaced by the new 486 flavour.
    </p>
   </sect1>
    ]]>

   <sect1>
    <heading>
      Device enumeration reordering
    </heading>
    <p>
      &releasename; features a more robust mechanism for hardware discovery 
      than previous releases. However, this may cause changes in the order 
      devices are discovered on your system affecting the order in which 
      device names are assigned. For example, if you have two network 
      adapters that are associated with two different drivers, the devices 
      eth0 and eth1 refer to may be swapped. Please note that the new 
      mechanism means that if you e.g. exchange ethernet adapters in a 
      running &releasename; system, the new adapter will also get a new 
      interface name.
    </p>
    <p>
      For network devices, you can avoid this reordering by using the 
      <prgn>ifrename</prgn> utility to bind physical devices to specific 
      names at boot time. See <manref section="8" name="ifrename"> and 
      <manref section="5" name="iftab"> for more information.
    </p>
    <p>
      For storage devices, you can avoid this reordering by using 
      <package>initramfs-tools</package> and configuring it to load storage 
      device driver modules in the same order they are currently loaded. To 
      do this, identify the order the storage modules on your system were 
      loaded by looking at the output of 
      <prgn>lsmod</prgn>. <prgn>lsmod</prgn> lists modules in the reverse 
      order that they were loaded in, i.e., the first module in the list was 
      the last one loaded.
    </p>
    <p>
      However, removing and reloading modules after initial boot will affect 
      this order. Also, your kernel may have some drivers linked statically, 
      and these names will not appear in the output of 
      <prgn>lsmod</prgn>. You may be able to decipher these driver names and 
      load order from looking at <file>/var/log/kern.log</file>, or the 
      output of <prgn>dmesg</prgn>.
    </p>
    <p>
      Add these module names to <file>/etc/initramfs-tools/modules</file> in 
      the order they should be loaded at boottime. Some module names may 
      have changed between &oldreleasename; and &releasename;. For example, 
      sym53c8xx_2 has become sym53c8xx.
    </p>
    <p>
      You will then need to regenerate your initramfs image(s) by executing 
      <tt>update-initramfs -k all</tt>.
    </p>
    <p>
      Once you are running an &releasename; kernel and <prgn>udev</prgn>, 
      you may reconfigure your system to access disks by an alias that is 
      not dependent upon driver load order. These aliases reside in the 
      <file>/dev/disk/</file> hierarchy.
    </p>
   </sect1>
    <![ %ia64 [

   <sect1>
    <heading>
      Serial device reordering
    </heading>
    <p>
      If you have an HP machine and you're using the MP serial console port 
      (the connector labelled "console" on the 3-headed cable), this kernel 
      upgrade will break your console!
    </p>
    <p>
      Please read the following information before upgrading.
    </p>
    <p>
     <list>
      <item>
       <p>
         The console device will change from <file>ttyS0</file> to 
         <file>ttyS1</file>, <file>ttyS2</file>, or <file>ttyS3</file> so
        <list>
         <item>
          <p>
            Edit <file>/etc/inittab</file> to add a getty entry for 
            <file>/dev/ttyS1</file> (rx4640, rx5670, rx7620, rx8620, 
            Superdome), <file>/dev/ttyS2</file> (rx1600), or 
            <file>/dev/ttyS3</file> (rx2600).
          </p>
         </item>
         <item>
          <p>
            Edit <file>/etc/securetty</file> to add <file>ttyS1</file>, 
            <file>ttyS2</file>, or <file>ttyS3</file>.
          </p>
         </item>
         <item>
          <p>
            Leave the existing <file>ttyS0</file> entries in 
            <file>/etc/inittab</file> and <file>/etc/securetty</file> so you 
            can still boot old kernels.
          </p>
         </item>
        </list>
       </p>
      </item>
      <item>
       <p>
         Edit <file>/etc/elilo.conf</file> to remove any "console=" 
         arguments.
       </p>
      </item>
      <item>
       <p>
         Run <prgn>elilo</prgn> to install the bootloader with new 
         configuration.
       </p>
      </item>
      <item>
       <p>
         Reboot and use the EFI boot option maintenance menu to select 
         exactly one device for console output, input, and standard 
         error. Then do a cold reset so the changes take effect.
       </p>
       <p>
         For the MP console, be careful to select the device with 
         "Acpi(HWP0002,700)/Pci(...)/Uart" in the path.
       </p>
      </item>
     </list>
    </p>
    <p>
      More details about these changes and troubleshooting hints are 
      available at <url 
      id="http://lists.debian.org/debian-ia64/2005/01/msg00008.html">.
    </p>
   </sect1>
    ]]>

   <sect1>
    <heading>
      Upgrading the kernel
    </heading>
    <p>
      When you dist-upgrade from &oldreleasename; to &releasename;, it is 
      strongly recommended that you install a new linux-image-2.6-* 
      metapackage. This package may be installed automatically by the 
      dist-upgrade process. You can verify this by running:
     <example>
# dpkg -l | grep '^ii  linux-image'
          </example>
    </p>
    <p>
      If you do not see any output, then you will need to install a new 
      linux-image package by hand. To see a list of available 
      linux-image-2.6 metapackages, run:
     <example>
# apt-cache search linux-image-2.6- | grep -v transition
          </example>
    </p>
    <p>
      If you are unsure about which package to select, run <tt>uname -r</tt> 
      and look for a package with a similar name. For example, if you see 
      '2.4.27-3-686', it is recommended that you install 
      <package>linux-image-2.6-686</package>. You may also use apt-cache to 
      see a long description of each package in order to help choose the 
      best one available. For example:
     <example>
# apt-cache show linux-image-2.6-686
          </example>
    </p>
    <p>
      然后您应该使用<tt>aptitude 
      install</tt>来安装它。一旦新内核被安装，您应该重启来使用它，享受它的新功能。
    </p>
    <p>
      如果要更刺激，有一种简单的方法来编译您自己定制的内核。安装<package>kernel-package</package>工具然后阅读<file>/usr/share/doc/kernel-package</file>中的文档。
    </p>
   </sect1>
  </sect>
  <sect id="nownownow">
   <heading>
     重启前的任务
   </heading>
   <p>
     当<tt>aptitude 
     dist-upgrade</tt>完成时，“前期”升级就已经结束了，但是在重启之前还有许多其它事情要做。
   </p>
   <sect1 id="mdadm">
    <heading>
      Upgrading mdadm
    </heading>
    <p>
      mdadm now needs a configuration file to assemble MD arrays (RAID) from 
      the initial ramdisk and during the system initialisation 
      sequence. Please make sure to read and act upon the instructions in 
      <file>/usr/share/doc/mdadm/README.upgrading-2.5.3.gz</file> after the 
      package has been upgraded <strong>and before you reboot</strong>. The 
      latest version of this file is available at <url 
      id="http://svn.debian.org/wsvn/pkg-mdadm/mdadm/trunk/debian/README.upgrading-2.5.3&nbsp;op=file">; 
      please consult it in case of problems.
    </p>
   </sect1>
  </sect>
  <sect id="obsolete">
   <heading>
     废弃的软件包
   </heading>
   <p>
     &releasename;不但新引入了几千个新软件包，也废弃了200多个在&oldreleasename;中的旧软件包。它不为这些废弃软件包提供升级补丁。不过这不影响您在必要时继续使用废弃的软件包，Debian项目通常在&releasename;发布一年后停止对它们的安全支持<footnote><p>或者在&releasename;后新发行版发布时停止， 
     一般只能有两个stable发行版同时被支持。</p></footnote>，而且这期间不会提供其它支持。如果可以的话，就应把它们换为的替代软件。
   </p>
   <p>
     软件包被移去有很多原因：不再被上游开发者维护或没有Debian开发者（即DD――译者）愿意维护；功能被其它软件或新版本更好地取代；错误太严重。在最后一个原因中，软件包很可能还属于unstable。
   </p>
   <p>
     包管理软件会标注出来哪些软件包被废弃，查看这方面信息十分容易。如果用<prgn>aptitude</prgn>，您会在"Obsolete 
     and Locally Created 
     Packages"部分见到这些软件包的列表。<prgn>dselect</prgn>提供一个类似的列表，不过可能有些差异。另外，如果您使用<prgn>aptitude</prgn>手动安装了&oldreleasename;中的软件包，它会记录您手动安装的包并且在包被删除时把由于依赖关系而被安装的包标记为废弃。而且，不像<prgn>deborphan</prgn>，<prgn>aptitude</prgn>不会把您手动安装的包标记为废弃，这不同于由于依赖关系而被自动安装的包。
   </p>
   <p>
     有许多寻找废弃软件包的附加工具，比如<prgn>deborphan</prgn>、 
     <prgn>debfoster</prgn>和<prgn>cruft</prgn>。 
     推荐使用<prgn>deborphan</prgn>，虽然它只报告"libs"和"oldlibs"中的废弃链接库。不要随意删除这些工具显示的软件包，特别是当您使用冒犯性的非默认设置时，它们很容易造成假象。推荐在删除之前仔细查看包的信息（内容，大小和描述）。
   </p>
   <p>
     <url id="&url-bts;" name="Debian Bug Tracking 
     System">经常有之所以软件包被除的更多信息。您可以查看软件包存档的bug报告和<url 
     id="&url-bts;cgi-bin/pkgreport.cgi&nbsp;pkg=ftp.debian.org&#38;archive=yes" 
     name="ftp.debian.org pseudo-package">存档的bug报告。
   </p>
   <sect1 id="dummy">
    <heading>
      Dummy包
    </heading>
    <p>
      一些&oldreleasename;中的软件包在&releasename;中被分成几部分，以提高系统的易维护性。为了简化升级，&releasename;经常提供通过依赖关系安装其它新包的"dummy"包――与&oldreleasename;包有相同名称的空包。"dummy"包在升级后就没用了，可以安全地删除。
    </p>
    <p>
      大多数（不是所有）的dummy包的描述部分说明它们的目的。但是，包描述信息不是唯一的，所以您可能会发现<prgn>deborphan</prgn>加上<tt>--guess</tt>选项对寻找这些包有用。注意有些dummy包在升级后不会被删除，它们被用来记录一个程序的可用版本。
    </p>
   </sect1>
  </sect>
 </chapt>
 <chapt id="information">
  <heading>
    在&releasename;中应注意的问题
  </heading>
  <sect id="problems">
   <heading>
     Potential problems
   </heading>
   <p>
     Sometimes, changes have side-issues we cannot reasonably avoid, or we 
     expose bugs somewhere else. We document here the issues we are aware 
     of. Please also read the errata, the relevant packages' documentation, 
     bug reports and other information mentioned in <ref id="morereading">.
   </p>
   <sect1 id="window-scaling">
    <heading>
      Certain networking site cannot be reached by TCP
    </heading>
    <p>
      Since 2.6.17, Linux uses TCP window scaling which is specified in RFC 
      1323 in an aggressive way. Some servers have a broken behaviour, and 
      announce wrong window sizes for themselves. Please see the bugs <url 
      id="http://bugs.debian.org/381262" name="#381262"> and <url 
      id="http://bugs.debian.org/395066" name="#395066"> for more 
      information.
    </p>
   </sect1>
   <sect1 id="poweroff">
    <heading>
      Automatic poweroff stops working
    </heading>
    <p>
      On some older systems, <prgn>shutdown -h</prgn> may not power off the 
      system anymore (but just stop it). This happens because apm needs to 
      be used there. Adding <tt>acpi=off apm=power_off</tt> to the kernel's 
      command line, e.g. in <package>grub</package> or 
      <package>lilo</package> configuration files should fix this 
      issue. Please see bug <url id="http://bugs.debian.org/390547" 
      name="#390547"> for additional information.
    </p>
   </sect1>
   <sect1 id="apt-pdiff">
    <heading>
      Apt downloads small files with update
    </heading>
    <p>
      There has been support added to <prgn>apt</prgn> to download only the 
      difference between packages files. This is handy for people with bad 
      network connections, but people having a very nearby mirror may want 
      to disable this feature. One can disable it by adding 
      <tt>Acquire::Pdiffs "false";</tt> to <file>/etc/apt/apt.conf</file>.
    </p>
   </sect1>
  </sect>
   <![ %defaulted-2.4 [

  <sect id="upgrade-to-2.6">
   <heading>
     升级到2.6内核
   </heading>
   <p>
     2.6系列内核与2.4系列相比有重大改变。模块被改名，许多驱动程序被部分或全部改写。因此升级到2.6内核不那么容易。这一部分旨在让您了解一些需要注意的地方。
   </p>
   <p>
     强烈建议您不要把升级到2.6内核当作从&oldreleasename;升级到&releasename;的一部分。您应该确保系统在原有内核或&releasename;的2.4内核上正常工作，然后升级到2.6内核。要把升级内核当成一项独立任务！
   </p>
   <p>
     如果您编译新内核，应确保在重启之前安装了<package>module-init-tools</package>。这一软件包在2.6内核下取代<package>modutils</package>。如果您安装<package>linux-image</package>之一，这一软件包会由于依赖关系被自动安装。
   </p>
   <p>
     #-#-#-#-#  choice  #-#-#-#-#
     如果您用<em>LVM</em>，就应当在重启前安装<package>lvm2</package>，因为2.6内核不直接支持LVM1。<package>lvm2</package>(dm-mod模块)被用来访问LVM1卷。您可以安装<package>lvm10</package>――一个在启动时检查哪种内核被使用，然后执行相应模块的脚本。
     #-#-#-#-#  choice  #-#-#-#-#
     如果您用<em>LVM</em>，就应当在重启前安装<package>lvm2</package>，因为2.6内核不直接支持LVM1。<package>lvm2</package>(dm-mod模块)被用来访问LVM1卷。您可以安装<package>lvm10</package> 
     installed;，一个在启动时检查哪种内核被使用，然后执行相应模块的脚本。
   </p>
   <p>
     注意一些模块名称有所改变，请检查修改<file>/etc/modules</file>(在启动时自动执行的模块列表)，把旧名改为新名。
   </p>
    <![ %i386-amd64 [

   <p>
     对于一些SATA磁盘控制器，驱动器的关联文件可能从<file>/dev/hdX</file>变为<file>/dev/sdX</file>。如果出现这种情况，就得修改 
     <file>/etc/fstab</file>与启动程序的配置。只有在正确地修改之后，系统才能正常启动。
   </p>
    ]]>

   <p>
     注意在安装完2.6内核重启之前，要确保有一种恢复措施。首先，确保启动程序可以新内核和旧内核（2.4内核）启动。还需要确保手头有紧急修复软盘或光盘，以防万一启动程序的错误配置导致无法从旧内核启动。
   </p>
    <![ %not-s390 [<![ %not-amd64 [

   <sect1 id="2.6-keyboard">
    <heading>
      键盘配置
    </heading>
    <p>
      2.6内核最扰人的改变是输入层的低级变化。这一变化使所有的键盘都变得像“正常”的PC键盘。这意味着如果您目前有一个不同种类的键盘(例如一个USB-MAC或Sun键盘)，它极有可能在重启后无法工作。
    </p>
    <p>
      如果可以从其它系统通过SSH访问，您可以运行<tt>'dpkg-reconfigure 
      console-data'</tt>来解决问题，只要选择"Select keymap from full 
      list"然后选择"pc"键盘。
    </p>
    <p>
      如果终端键盘也被影响了，您也许还得为X Windows 
      System重新配置键盘。可以执行<tt>dpkg-reconfigure 
      xserver-xfree86</tt>或直接修改<file>/etc/X11/XF86Config-4</file>。 
      不要忘记阅读相关文档<ref id="nownownow">。
    </p>
     <![ %i386 [

    <p>
      这个问题不会影响&arch-title;，因为所有PS/2和大部分USB键盘将被配置为“正常”PC键盘。
    </p>
     ]]><![ %not-i386 [

    <p>
      注意如果您在使用USB键盘，它可能配置为“正常”PC键盘或USB-MAC键盘。在前一种情况下，您不会被这一问题所影响。
    </p>
     ]]>

   </sect1>
    ]]>

   <sect1 id="2.6-mouse">
    <heading>
      鼠标配置
    </heading>
    <p>
      还是由于输入层的变化，如果您的鼠标在2.6内核下不工作，您可能得重新配置X 
      Window 
      System和<package>gpm</package>。最可能的原因是接收鼠标数据的设备变了。您可能还需要载入一些模块。
    </p>
     <![ %sparc [

    <p>
      如果您配置X使用<file>/dev/sunmouse</file>，可能需要改为<file>/dev/psaux</file>。
    </p>
     ]]>

   </sect1>
   <sect1 id="2.6-sound">
    <heading>
      声音配置
    </heading>
    <p>
      对于2.6内核，ALSA声音驱动程序比OSS声音驱动程序更受偏爱。ALSA声音驱动默认以内核模块的形式提供。所以必须加载适当的模块，声音系统才会工作。如果您连同<package>alsa-base</package>安装了<package>hotplug</package>或<package>discover</package>，声卡的ALSA模块会被自动载入；这也会自动把OSS驱动加入<package>discover</package>和<package>hotplug</package>的黑名单来阻止它们被读取。如果在<file>/etc/modules</file>中有OSS驱动，应移除。
    </p>
   </sect1>
    ]]>

   <sect1 id="2.6-udev">
    <heading>
      升级到2.6内核可能会启用udev
    </heading>
    <p>
      <package>udev</package>是devfs在用户层的实现。它挂载在<file>/dev</file>目录并把它与内核支持的硬件相关联。它与<package>hotplug</package>一起来检测新设备，动态地针对模块的装载和卸载进行目录配置。<package>udev</package>仅能在2.6内核下运行。
    </p>
    <p>
      由于<package>udev</package>会因为2.6内核initrd生成器（<package>initramfs-tools</package>）的依赖关系而被自动安装。升级至2.6内核时可能会启用<package>udev</package>。
    </p>
    <p>
      虽然<package>udev</package>已经过了广泛的测试，但您还是可能在某些设备上遇到一些必须修正小问题。最常见的问题是某个设备的权限变更。某些状况下，有些设备是不会被默认建立的。（如：<file>/dev/video</file> 
      和<file>/dev/radio</file>）。
    </p>
    <p>
      <package>udev</package>提供处理这些问题的配置方案。请查看 <manref 
      section="8" name="udev">和<file>/etc/udev</file> 来取得详细信息。
    </p>
   </sect1>
  </sect>
   ]]>

  <sect id="xorg">
   <heading>
     XFree86 to X.Org transition
   </heading>
   <p>
     The transition to X.Org involves some structural changes. In case all 
     installed packages are from Debian and also included in &releasename;, 
     the upgrade should work without problems. Experience has however shown 
     there are a few changes to be aware of as they can potentially cause 
     issues during the upgrade.
   </p>
   <p>
     The most important change is that <file>/usr/X11R6/bin</file> has been 
     dropped and only remains as a symlink to <file>/usr/bin</file>. This 
     means this directory has to be empty at the time the new packages are 
     installed. The new packages conflict with most packages that used 
     <file>/usr/X11R6/bin</file>, but in some cases manual intervention may 
     be needed. Please remember to not run upgrades within an X session.
   </p>
   <p>
     In case the upgrade aborts during X.Org installation, you should check 
     if any files are still left in <file>/usr/X11R6/bin</file>. You can 
     then use <tt>dpkg -S</tt> to find out which Debian package installed 
     that file (if any), and remove such packages with <tt>dpkg 
     --remove</tt>. Please make a note which packages you remove, so that 
     you can install substitute packages later on. Before continuing with 
     the upgrade, all files in <file>/usr/X11R6/bin</file> need to be 
     removed.
   </p>
   <p>
     Please read <url id="http://wiki.debian.org/Xorg69To7"> for more 
     details and other issues.
   </p>
  </sect>
  <sect id="exim">
   <heading>
     Upgrading from exim to exim4
   </heading>
   <p>
     One of the packages that has been obsoleted by the &releasename; 
     release is the Mail Transfer Agent (MTA) exim, which has been replaced 
     by the completely new package exim4.
   </p>
   <p>
     exim (version 3.xx) has been unmaintained upstream for years, and 
     Debian has dropped support for that version as well. If you are still 
     using exim 3.xx, please upgrade your exim installation to exim4 
     manually. Since exim4 is already part of &oldreleasename, you can 
     choose to do the upgrade on your &oldreleasename; system before the 
     upgrade to &releasename;, or after the &releasename; upgrade at your 
     convenience. Just remember that your old exim package is not going to 
     be upgraded and that it won't get security support after support for 
     &oldreleasename; will be discontinued.
   </p>
   <p>
     The exim4 packages in Debian are extensively documented. The package's 
     home page is <url id="http://wiki.debian.org/PkgExim4"> on the Debian 
     Wiki, and the README file can be found at <url 
     id="http://pkg-exim4.alioth.debian.org/README/etch/README.Debian.html"> 
     and inside the packages as well.
   </p>
   <p>
     The README file has a chapter about Packaging, which explains the 
     different package variations we offer, and it has a chapter about 
     Updating from Exim 3, which will help you in doing the actual 
     transition.
   </p>
  </sect>
  <sect id="apache2">
   <heading>
     Upgrading apache2
   </heading>
   <p>
     Apache has been upgraded to the new version 2.2. Although this 
     shouldn't impact the average user, there are some potential issues to 
     be aware of.
   </p>
   <p>
     <url id="http://httpd.apache.org/docs/2.2/upgrading.html"> contains the 
     upstream changes. Please read this page, and remember that especially:
    <list>
     <item>
      <p>
        all modules need to be recompiled
      </p>
     </item>
     <item>
      <p>
        authorization modules have been resorted and renamed
      </p>
     </item>
     <item>
      <p>
        some configuration options have been renamed
      </p>
     </item>
    </list>
   </p>
   <p>
     Debian-specific changes include that the string SSL is no longer 
     defined, as ssl is now supported by the default package.
   </p>
  </sect>
  <sect id="php-globals">
   <heading>
     Deprecated insecure php configurations
   </heading>
   <p>
     For many years, turning on the <tt>register_globals</tt> settings in 
     PHP has been known to be insecure and dangerous, and this option has 
     defaulted to off for some time now. This configuration is now finally 
     deprecated on Debian systems as too dangerous. The same applies to 
     flaws in <tt>safe_mode</tt> and <tt>open_basedir</tt>, which have also 
     been unmaintained for some time.
   </p>
   <p>
     Starting with this release, the Debian security team does not provide 
     security support for a number of PHP configurations which are known to 
     be insecure. Most importantly, issues resulting from 
     <tt>register_globals</tt> being turned on will no longer be addressed.
   </p>
   <p>
     If you run legacy applications that require <tt>register_globals</tt>, 
     enable it for the respective paths only, e.g. through the Apache 
     configuration file. More information is available in the 
     <file>README.Debian.security</file> file in the PHP documentation 
     directory (<file>/usr/share/doc/php4</file>, 
     <file>/usr/share/doc/php5</file>).
   </p>
  </sect>
  <sect id="mozilla-security">
   <heading>
     Security status of mozilla products
   </heading>
   <p>
     The Mozilla programs are important tools for many users. Unfortunately 
     the upstream security policy is to urge users to update to new upstream 
     versions, which conflicts with Debian's policy not to ship large 
     functional changes in security updates. We cannot predict it today, but 
     during lifetime of &releasename; the Debian Security Team may come to a 
     point where supporting Mozilla products is no longer feasible and 
     announce the end of security support for Mozilla products. You should 
     take this into account when deploying Mozilla and consider alternatives 
     available in Debian if the absence of security support would pose a 
     problem for you.
   </p>
  </sect>
 </chapt>
 <chapt id="moreinfo">
  <heading>
    有关&debian;的更多信息
  </heading>
  <sect id="morereading">
   <heading>
     进一步阅读
   </heading>
   <p>
     Beyond these release notes and the installation guide, further 
     documentation on &debian; is available from the Debian Documentation 
     Project (DDP), whose goal is to create high quality documentation for 
     Debian users and developers. Documentation including the Debian 
     Reference, Debian New Maintainers Guide, and Debian FAQ are available, 
     and many more. For full details of the existing resources see the <url 
     id="&url-ddp;" name="DDP website">.
   </p>
   <p>
     为特殊软件包准备的Documentation被安装在 
     <file>/usr/share/doc/<var>package</var></file>，这可能包含copyright信息，Debian专门信息，和一些上游Documentation。
   </p>
  </sect>
  <sect id="gethelp">
   <heading>
     获得帮助
   </heading>
   <p>
     Debian用户可获得各种形式帮助、建议和支持，但是这些只在您细致研究了所有与问题相关的Documentation的情况下才被考虑。这一部分提供对Debian用户有益的简短指导。
   </p>
   <sect1 id="lists">
    <heading>
      邮件列表
    </heading>
    <p>
      Debian用户最喜欢的邮件列表是debian-user列表(英语)和其它debian-user-<var>language</var>列表(别的语言)。查看<url 
      id="&url-debian-list-archives;">以获取这些列表的信息和加入邮件列表的方法。请在发邮件之前检查您问题已有的解答并且要遵循标准邮件列表格式。
    </p>
   </sect1>
   <sect1 id="irc">
    <heading>
      IRC
    </heading>
    <p>
      Debian has an IRC channel dedicated to the support and aid of Debian 
      users located on the OFTC IRC network which exists to provide 
      interactive services to peer-directed project communities. To access 
      the channel, point your favourite IRC client at &debian-irc-server; 
      and join #debian.
    </p>
    <p>
      请遵守频道指南，尊敬其它用户。访问<url id="&url-irc-host;" 
      name="website">来获取OFTC的更多信息。
    </p>
   </sect1>
  </sect>
  <sect id="bugs">
   <heading>
     报告bug
   </heading>
   <p>
     我们努力把Debian打造成高性能操作系统，但是那不意味着我们提供的软件包完全没有bug。作为为用户提供的服务和Debian开放性开发的实践，我们在<url 
     id="&url-bts;" 
     name="bugs.debian.org">的Bug跟踪系统(BTS)中提供所有已报告bug的信息。
   </p>
   <p>
     如果您在发行版或它里面的打包软件中发现了一个bug，请报告这个bug以便它可以在下一发行版中得到修复。报告bug需要一个合法的Email地址，以使我们可以追踪bug，也使开发人员在需要更多信息的情况下与报告者取得联系。
   </p>
   <p>
     您可以使用<package>reportbug</package>或手动地使用Email提交一个bug报告。您可以在装有<package>doc-debian</package>的Debian系统中的<file>/usr/share/doc/debian</file>或在网上<url 
     id="&url-bts;" 
   </p>
  </sect>
  <sect id="contributing">
   <heading>
     为Debian做贡献
   </heading>
   <p>
     来为Debian做贡献，您不必是一名专家。在<url 
     id="&url-debian-list-archives;" 
     name="用户邮件列表">中帮助用户解决问题就是在为Debian社区做贡献。在<url 
     id="&url-debian-list-archives;" 
     name="开发邮件列表">中检查(并且解决)与发行版开发相关的问题对Debian也极其有帮助。可以<url 
     id="&url-bts;" 
     name="报告bug">并且帮助开发人员追踪和修复bug来保持Debian的高性能。如果您语言能力强，您可能会愿意通过写<url 
     id="&url-ddp;" name="documentation">或用您自己的语言<url 
     id="&url-debian-i18n;" 
     name="翻译">已有的Documentation来做更活跃的贡献。
   </p>
   <p>
     如果您有更多时间，您可以在Debian中维护自由软件，<url id="&url-wnpp;" 
     name="Work Needing and Prospective Packages数据库"> 
     会详细介绍这一信息。如果您在某一特殊领域感兴趣，那么您可能在Debian的一些子项目如系统平台移植、<url 
     id="&url-debian-jr;" name="Debian Jr.">和<url id="&url-debian-med;" 
     name="Debian Med">中获得乐趣。
   </p>
   <p>
     在任何情况下，如果您在以任何形式在自由软件社区内工作，不论是以用户、程序员还是写作者、翻译者身份，您已经在帮助自由软件。贡献是光荣而又有趣的，而且让您结识新朋友，这会给您一种来自内心深处的温暖!
   </p>
  </sect>
 </chapt>
 <appendix id="old-stuff">
  <heading>
    管理&oldreleasename;系统
  </heading>
  <p>
    本附录包含在升级到&releasename;之前如何安装或升级&oldreleasename;软件包。这仅在某些特殊情况下有用。
  </p>
  <sect id="old-upgrade">
   <heading>
     升级&oldreleasename;系统
   </heading>
   <p>
     基本上这与从前进行的&oldreleasename;升级没什么区别。仅有的区别在于首先您应确保软件包列表仍指向&oldreleasename;，正如<ref 
     id="old-sources">中解释的。
   </p>
  </sect>
  <sect id="old-sources">
   <heading>
     检查源列表
   </heading>
   <p>
     如果<file>/etc/apt/sources.list</file>中的任何行指向'stable'，您正在“使用”&releasename;。如果您已经执行<tt>apt-get 
     update</tt>，也可以遵循以下操作很轻松地回到&oldreleasename。
   </p>
   <p>
     如果您已经从&releasename;安装了软件包，安装&oldreleasename;的软件包就不太容易了。万一这样，您就要自己决定是否继续。可以进行软件包降级，但这非本说明所及。
   </p>
   <p>
     以root身份，打开<file>/etc/apt/sources.list</file>检查所有以<tt>deb 
     http:</tt>或<tt>deb 
     ftp:</tt>开头的行是否指向"<tt>stable</tt>"。如果有，把<tt>stable</tt>改为<tt>&oldreleasename;</tt>。
   </p>
   <p>
     如果有以<tt>deb 
     file:</tt>开头的行，那您将得自己检查它指向的地址是包含&oldreleasename;还是&releasename;软件。
   </p>
   <p>
     <strong>重要提示！</strong>不要修改以<tt>deb 
     cdrom:</tt>开头的行。否则会出错，以致不得不重新运行apt-cdrom 
     。不要因为'cdrom'行指向"<tt>unstable</tt>"而感到惊讶。虽然令人困惑，但这是正常的。
   </p>
   <p>
     如果您做了修改，保存文件然后执行
    <example>
# apt-get update
          </example>
     来更新软件包列表。
   </p>
  </sect>
 </appendix>
</book>
</debiandoc>
