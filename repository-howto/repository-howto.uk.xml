<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
     "http://docbook.org/xml/4.2/docbookx.dtd">
<article lang="uk">
  <articleinfo>
    <title>Debian Repository HOWTO (Obsolete Documentation)</title>

    <author>
      <firstname>Aaron</firstname>
      <surname>Isotton</surname>
      <affiliation>
        <address><email>aaron@isotton.com</email></address>
      </affiliation>
    </author>

    <othercredit role="traduction" class="translator">
      <firstname>Borys</firstname>
      <surname>Yanovych</surname>
      <contrib>Український переклад</contrib>
      <address><email>borman@univ.kiev.ua</email></address>
    </othercredit>
    
    <abstract>
	<para>Цей документ пояснює, що таке сховище Debian і яким чином
	ви можете його налаштувати.</para>
    </abstract>
  </articleinfo>
  
  <section id="intro">
    <title>Вступ</title>

    <para>Сховище Debian&nbsp;— це набір пакунків Debian, розміщених в спеціальному
      дереві тек, яке також містить деякі додаткові файли з індексами та
      контрольними сумами пакунків. Коли користувач додає сховище до свого
      файлу <filename>/etc/apt/sources.list</filename>, він отримує можливість
      дуже просто переглядати та встановлювати всі доступні в сховищі пакунки,
      точно так само як він це робить з пакунками, котрі входять до Debian.</para>
      
    <para>Сховище може бути як онлайновим, так і офлайновим, автономним (наприклад,
      компакт-диск), хоча перший випадок є більш прийнятним і вживаним.</para>

    <para>В цьому документі пояснюються принципи роботи сховища Debian, розповідається
      про те, як його створювати та правильно додавати до 
      <filename>sources.list</filename>.</para>

    <para>Найновіші версії цього документу можна знайти за адресою <ulink
        url="http://www.isotton.com/debian/docs/repository-howto/"/>.</para>

    <section id="copyright">
      <title>Авторські права та ліцензія</title>

      <para>Власником авторських прав на цей документ, <emphasis>Debian Repository
	  HOWTO</emphasis>, є <emphasis>Aaron Isotton</emphasis>, (c) 2002-2003.
          Дозволяється копіювати, розповсюджувати та/або змінювати цей документ
	  на засадах GNU Free Documentation License, версії 1.1 або будь-якої
	  наступної версії, опублікованої Фондом вільного програмного забезпечення
	  (Free Software Foundation); без тексту передньої обкладинки і без
          тексту задньої обкладинки.</para>
    </section> <!-- copyright  -->

    <section id="feedback">
      <title>Зворотній зв'язок</title>

      <para>Зворотній зв'язок до цього документу є дуже бажаним. Надсилайте
        ваші вдосконалення, коментарі та критику за адресою 
	<email>aaron@isotton.com</email>.
      </para>
    </section> <!-- feedback -->
  </section> <!-- intro -->

  <section id="terms">
    <title>Терміни, які використовуються в даному документі</title>

    <variablelist>
      <varlistentry>
        <term>збірки</term>

        <listitem><para>Три збірки Debian:
          стабільна (<emphasis>stable</emphasis>), тестова (<emphasis>testing</emphasis>)
          та нестабільна (<emphasis>unstable</emphasis>).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>індексні файли</term>

        <listitem><para>Файли <filename>Packages.gz</filename> та
            <filename>Sources.gz</filename>.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="how-it-works">
    <title>Як працюють сховища</title>

    <para>Сховище складається з як мінімум однієї теки, що містить
      деякі DEB-пакунки та два спеціальні файли: <filename>Packages.gz</filename>
      для двійкових та <filename>Sources.gz</filename> джерельних пакунків.</para>

    <para>Якщо ваше сховище правильно додане до <filename>sources.list</filename>
      (детальніше про це нижче), команда <command>apt-get</command>
      завантажить індекси <filename>Packages.gz</filename>
      (для двійкових пакунків; коли вказане ключове слово <literal>deb</literal>)
      та <filename>Sources.gz</filename> (для джерельних пакунків; коли вказане
      ключове слово <literal>deb-src</literal>).</para>
 
    <para>Файл <filename>Packages.gz</filename> містить назву, версію,
      розмір, короткий і довгий описи, та залежності кожного з пакунків плюс
      деяку нецікаву для нас додаткову інформацію. Вся вона показується
      (та використовується) програмами керування пакунками Debian, такими як
      <command>dselect</command> чи
      <command>aptitude</command>.</para>

    <para>Файл <filename>Sources.gz</filename> містить назву, версію
      та залежності необхідні для побудови кожного
      з пакунків (плюс деяка нецікава для нас інформація також);
      ця інформація використовується <command>apt-get source</command>
      та подібними інструментами.</para>

    <para>В необов'язковому файлі <filename>Release</filename>
      міститься деяка інформація про ваше сховище; вона використовується
      для „приколювання“ (<emphasis>Pinning</emphasis>), цікавого прийому,
      на якому я не хочу зупинятися в цьому документі. Ви можете прочитати
      більше про „приколювання“ в <ulink
      url="http://www.debian.org/doc/manuals/apt-howto/">APT
      HOWTO</ulink>.</para>
	  
    <para>Отже, як тільки ви налаштували ваше сховище, ви можете переглядати
      та встановлювати всі ваші пакунки нарівні з іншими пакунками Debian;
      якщо ви оновлюєте пакунок, він оновиться коли користувач виконає
      <command>apt-get update &amp;&amp; apt-get upgrade</command>;
      і кожен користувач буде в змозі легко переглянути короткий опис
      та іншу важливу інформацію про ваші пакунки.</para>

    <para>І більш того. При правильному налаштуванні сховища можуть
      пропонувати різні пакунки для різних збірок та архітектур;
      <literal>apt</literal> автоматично завантажуватиме саме те,
      що підходить для машини користувача, якому навіть не потрібно нічого
      знати про різні архітектури. Також ви можете групувати ваші пакунки,
      подібно до того, як пакунки Debian поділені між 
      розділами <literal>main</literal>, <literal>non-free</literal> або
      <literal>contrib</literal>. Отже ви полюбите сховища пакунків, 
      особливо якщо ваше програмне забезпечення є міжплатформенним.</para>

  </section> <!-- how-it-works -->

  <section id="setting-up">
    <title>Як налаштувати сховище</title>

    <para>Існують сховища двох типів: більш складні, для використання 
      яких користувачу доведеться вказати лише базовий шлях до сховища 
      та бажані збірку і розділ (apt автоматично завантажить пакунки для 
      необхідної архітектури, якщо вони є доступними); і простіші, для 
      використання яких користувачу доведеться вказати точний шлях 
      (і apt не чаклуватиме, щоб з'ясувати, які будуть придатними). Перші
      є дещо складнішими в налаштуванні, але простіші у використанні і
      повинні завжди використовуватись для складних та/або міжплатформенних
      сховищ; сховища другого типу налаштовувати простіше, але їх використання
      обмежується малими або одноархітектурними сховищами.</para>

    <para>Хоча це і не зовсім коректно, але я називатиму сховища
      першого типу <emphasis>автоматичними сховищами</emphasis>
      (<emphasis>Automatic Repositories</emphasis>), а другого&nbsp;—
      <emphasis>тривіальними сховищами</emphasis>
      (<emphasis>Trivial Repositories</emphasis>).</para>
    <section>

      <title>Автоматичні сховища</title>

      <para>Структура тек автоматичного сховища зі стандартними для
        Debian архітектурами та розділами виглядає приблизно так:</para>

      <example id="debian-repository-example">
        <title>Типове сховище Debian</title>

      <screen>(початок вашого сховища) 
| 
+-dists
  | 
  |-stable
  | |-main
  | | |-binary-alpha 
  | | |-binary-arm
  | | |-binary-...
  | | +-source 
  | |-contrib
  | | |-binary-alpha 
  | | |-binary-arm
  | | |-binary-...
  | | +-source 
  | +-non-free
  |   |-binary-alpha
  |   |-binary-arm
  |   |-binary-...
  |   +-source
  |
  |-testing 
  | |-main
  | | |-binary-alpha 
  | | |-binary-arm
  | | |-binary-...
  | | +-source 
  | |-contrib
  | | |-binary-alpha 
  | | |-binary-arm
  | | |-binary-...
  | | +-source 
  | +-non-free
  |   |-binary-alpha
  |   |-binary-arm
  |   |-binary-...
  |   +-source
  |
  +-unstable 
    |-main
    | |-binary-alpha 
    | |-binary-arm
    | |-binary-...
    | +-source 
    |-contrib
    | |-binary-alpha 
    | |-binary-arm
    | |-binary-...
    | +-source 
    +-non-free
      |-binary-alpha
      |-binary-arm
      |-binary-...
      +-source</screen>

      </example>

      <para>Вільні пакунки йдуть в розділ <literal>main</literal>;
        невільні&nbsp;— в <literal>non-free</literal>, а вільні, які
	залежать від невільних&nbsp;— в <literal>contrib</literal>.
	На сьогоднішній день Debian підтримує 11 архітектур; я
	опустив більшість з них задля стислості.
      </para>

      <para>В кожній теці <filename>binary-*</filename> знаходиться
        файл <filename>Packages.gz</filename> та необов'язковий файл
        <filename>Release</filename>; кожна тека
        <filename>source</filename> містить 
        <filename>Sources.gz</filename> та необов'язковий файл
	<filename>Release</filename>. Зверніть увагу, що пакунки
	не повинні знаходитись у тій же теці, що й індексні файли,
	оскільки в індексних файлах вказуються шляхи для кожного
	пакунка окремо; фактично, вони можуть знаходитись в сховищі
	<emphasis>будь-де</emphasis>. Це дозволяє створювати
	<link
        linkend="pools">пули</link>(<link linkend="pools">pools</link>).</para>
	
      <para>Ви вільні створювати багато збірок і розділів та називати їх,
        як вам довподоби; назви тих, що я використовував в прикладі співпадають
        з тими, що використовуються в Debian. Ви можете, наприклад,
	створити збірки <literal>current</literal>
        і <literal>beta</literal> (замість
        <literal>stable</literal>, <literal>testing</literal> і
        <literal>unstable</literal>), та розділи
        <literal>foo</literal>, <literal>bar</literal>,
        <literal>baz</literal> і <literal>qux</literal> (замість
        <literal>main</literal>, <literal>contrib</literal> та
        <literal>non-free</literal>).</para>

      <para>Хоча ви вільні називати розділи як вам заманеться,
        загалом гарної ідеєю є використання стандартних назв
	Debian, звичних для користувачів Debian.</para>

      </section>

    <section>

      <title>Тривіальні сховища</title>

      <para>Тривіальні сховища складаються з однієї кореневої теки
        та стількох підтек, скільки ви хочете. Оскільки користувачам
        доведеться вказувати шлях до початку сховища та відносний
        шлях між початком та текою з індексними файлами, ви вільні
        робити все, що вам заманеться (навіть поміщати все до кореневої
        теки сховища; тоді відносним шляхом буде просто
	<quote><filename>/</filename></quote>).</para>
	
      <example id="trivial-example">
        <title>Тривіальне сховище з двома підтеками</title>
        
        <screen>(початок вашого сховища)
|
|-binary
+-source</screen>
      </example>

    </section>

    <section>
      <title>Створення індексних файлів</title>

      <para>Команда <command>dpkg-scanpackages</command> генерує файл
        <filename>Packages</filename>, а
        <command>dpkg-scansources</command>&nbsp;— відповідно, файл
        <filename>Sources</filename>.</para>

      <para>Обидві вони виводять результат на stdout; отже, щоб
        згенерувати стиснені файли, ви можете використати ланцюжок
        команд, подібний до такого:
        <command>dpkg-scanpackages
        <replaceable>параметри</replaceable> | gzip -9c &gt;
        Packages.gz</command>.</para>

      <para>Ці утиліти працюють схожим чином; вони обидві приймають
        два параметра (насправді їх може бути більше, але я не хочу
        в це детально занурюватись; ви можете почитати man-сторінки,
        якщо хочете дізнатись більше); перший параметр&nbsp;— це тека в
        якій знаходяться пакунки, а другий&nbsp;— <emphasis>файл override</emphasis>.
        Для простих сховищ файли override нам не потрібні, але, оскільки
	цей параметр є обов'язковим, ми просто вказуємо
        <literal>/dev/null</literal>.</para>

      <para><command>dpkg-scanpackages</command> сканує
        <filename>.deb</filename>-пакунки;
        <command>dpkg-scansources</command> сканує
        <filename>.dsc</filename>-файли. Тому, потрібно поміщати
        файли <filename>.orig.gz</filename>,
	<filename>.diff.gz</filename> та <filename>.dsc</filename>
	разом. Файли <filename>.changes</filename> не потрібні.
	</para>
		
        <para>Тому, якщо у вас тривіальне сховище, схоже на те, що
        ми розглядали вище (<xref linkend="trivial-example"/>), 
        ви можете створити два індексні файли наступним чином:</para>
      
      <screen>$ cd my-repository
$ dpkg-scanpackages binary /dev/null | gzip -9c &gt; binary/Packages.gz
$ dpkg-scansources source /dev/null | gzip -9c &gt; source/Sources.gz</screen>

      <para>Якщо у вас складне сховище (<xref
        linkend="debian-repository-example"/>), то вам потрібно буде
        написати деякі сценарії, щоб автоматизувати цей процес.</para>
	      
      <para>Ви могли б також використати параметр
        <replaceable>pathprefix</replaceable> обох утиліт, щоб
        дещо спростити їх синтаксис; залишмо це, як вправу для
        читача (це задокументовано в man-сторінках).</para>
    </section>

    <section id="release">
      <!-- todo: Release should be between <filename> tags, but then
      xmltex won't compile it --> 
      <title>Створення файлів Release</title>

      <para>Якщо ви хочете надати користувачам вашого сховища можливість
        використовувати <emphasis>„приколювання“</emphasis>
        (<emphasis>Pinning</emphasis>) пакунків, вам потрібно включити
        файл <filename>Release</filename> до кожної теки з індексними
        файлами. (Ви можете дізнатись більше про приколювання пакунків,
        прочитавши <ulink
        url="http://www.debian.org/doc/manuals/apt-howto/">APT
        HOWTO</ulink>).</para>

      <para>Файли <filename>Release</filename> є простими і короткими
        файлами наступної форми:</para>

      <screen>Archive: <replaceable>збірка</replaceable>
Component: <replaceable>розділ</replaceable>
Origin: <replaceable>ВашаКомпанія</replaceable>
Label: <replaceable>сховище Debian ВашоїКомпанії</replaceable>
Architecture: <replaceable>архітектура</replaceable></screen>

      <variablelist>
        <varlistentry>
          <term><literal>Archive</literal></term>

          <listitem>
            <para>Назва збірки Debian, до якої належать (або плануються) пакунки
              з цієї теки,
              наприклад, <literal>stable</literal>,
              <literal>testing</literal> або
              <literal>unstable</literal>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>Component</literal></term>

          <listitem>
            <para>Розділ, до якого належать пакунки з цієї теки, наприклад,
            <literal>main</literal>,
            <literal>non-free</literal>, or
            <literal>contrib</literal>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>Origin</literal></term>

          <listitem>
            <para>Ім'я того, хто створив ці пакунки.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>Label</literal></term>

          <listitem>
            <para>Якась мітка, що містить адекватну інформацію про пакунки
              або ваше сховище. Пофантазуйте.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>Architecture</literal></term>

          <listitem>
            <para>Архітектура пакунків з цієї теки, як, наприклад,
              <literal>i386</literal>,
              <literal>sparc</literal> чи
              <literal>source</literal>.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>Важливо правильно задати значення полів <literal>Archive</literal>
        та <literal>Architecture</literal>, оскільки саме вони використовуються
        для приколювання пакунків. Інші поля менш важливі.</para>
    </section>

    <section id="pools">
      <title>Створення пулів</title>

      <para>У випадку автоматичних сховищ, розподіл пакунків по 
        різноманітних теках дуже швидко перетвориться на некероване жахіття.
        Це також марнотратство дискового простору та пропускної
	здатності, оскільки багато пакунків є однаковими для різних
        архітектур (наприклад, документація).</para>

      <para>В таких випадках можливим вирішенням проблеми є <emphasis>пул</emphasis>
        (<emphasis>pool</emphasis>). Пул&nbsp;— це додаткова підтека кореневої
	теки сховища, в якій знаходяться <emphasis>всі</emphasis> пакунки
        (двійкові для усіх архітектур, збірок та розділів, а також всі джерельні).
	Витончено комбінуючи дії файлів override (які не розглядаються в даному
	документі) та сценаріїв, ви можете уникнути багатьох проблем. Чудовим
        прикладом сховища з використанням пулу є власне сховище Debian.</para>
	
      <para>Пули можуть стати в нагоді лише для великих сховищ; я ніколи не займався
        їх створенням і не думаю, що така потреба виникне в найближчому
	майбутньому, ось чому я не пояснюю тут яким чином вони створюються. Якщо 
	ви вважаєте, що такий розділ необхідно додати, не соромтесь, напишіть
        його та зв'яжіться зі мною.</para>

    </section>

    <section>
      <title>Інструменти</title>

      <para>Різні інструменти можуть автоматизувати та полегшити
        створення архівів Debian; я склав список найвідоміших з них.</para>

      <para><command>apt-ftparchive</command> використовується для
        переміщення набору пакунків до сховища належної структури,
	яку мають офіційні сховища Debian. Ця команда є частиною
        пакунку <literal>apt-utils</literal>.</para>
	
      <para><command>apt-move</command> використовується для
        переміщення набору пакунків до сховища належної структури,
        яку маються офіційні сховища Debian.</para>

    </section>

  </section> <!-- setting-up -->

  <section id="using-a-repository">
    <title>Використання сховищ</title>

    <para>Використовувати сховища дуже просто, але це залежить
      того, сховище якого типу ви створили: двійкове чи джерельне,
      автоматичне чи тривіальне.</para>

    <para>Кожне сховище займає один рядок в файлі 
      <filename>sources.list</filename>; для двійкових сховищ використовуйте
      команду <literal>deb</literal>, а для джерельних&nbsp;—
      команду <literal>deb-src</literal>.</para>

    <para>Кожен рядок повинен виглядати так:

      <screen>deb|deb-src <replaceable>uri</replaceable> <replaceable>збірка</replaceable> [<replaceable>розділ1</replaceable>] [<replaceable>розділ2</replaceable>] [...]</screen>

      <replaceable>uri</replaceable>&nbsp;— це URI (уніфікований ідентифікатор ресурсу)
      кореня сховища, наприклад,
      <literal>ftp://ftp.yoursite.com/debian</literal>,
      <literal>http://yoursite.com/debian</literal>, або, для локальних
      файлів,
      <literal>file::///home/joe/my-debian-repository</literal>. Завершальна
      коса риска є необов'язковою.</para>

    <para>Для автоматичних сховищ ви повинні вказати одну збірку
      та один або більше розділів; назву збірки не можна завершувати
      косою рискою.</para>
	    
    <example>
      <!-- todo: sources.list should be tagged as <filename>, but xmltex
      doesn't support that -->
      <title>Два автоматичні сховища з мого <filename>sources.list</filename></title>

      <screen>deb ftp://sunsite.cnlab-switch.ch/mirror/debian/ unstable main contrib non-free
deb-src ftp://sunsite.cnlab-switch.ch/mirror/debian/ unstable main contrib non-free</screen>

    <para>Ці два рядка вказують на автоматичні сховища, двійкове та
      джерельне, корінь 
      <literal>ftp://sunsite.cnlab-switch.ch/mirror/debian/</literal>,
      збірка <literal>unstable</literal> та розділи
      <literal>main</literal>, <literal>contrib</literal> і
      <literal>non-free</literal>.</para>
    </example>

    <para>Якщо сховище не автоматичне, то 
      <emphasis>distribution</emphasis> вказує відносний шлях до індексних файлів
      і повинно завершуватись косою рискою, жодних розділів вказувати не потрібно.
      </para>

    <example>
      <title>Два тривіальних сховища з мого
      <filename>sources.list</filename></title>

      <screen>deb file:///home/aisotton/rep-exact binary/
deb-src file:///home/aisotton/rep-exact source/</screen>

      <para>Перший з цих двох рядків вказує на двійкове сховище в теці
        <filename>/home/aisotton/rep-exact/binary</filename> на моїй
        локальній машині; другий вказує на джерельне сховище в теці
        <filename>/home/aisotton/rep-exact/source</filename>.</para>
    </example>
  </section> <!-- using-a-repository -->

  <section>
    <title>Дивись також</title>

    <itemizedlist>
      <listitem>
        <para>Документацію <command>apt-ftparchive</command></para>
      </listitem>

      <listitem>
        <para>Документацію <command>apt-get</command> та <literal>apt</literal>.</para>
      </listitem>

      <listitem>
        <para>Документацію <command>apt-move</command>.</para>
      </listitem>

      <listitem>
        <para><ulink url="http://www.apt-get.org/"/>, щоб знайти
          більше прикладів реальних світових сховищ.</para>
      </listitem>
        
      <listitem>
        <para><ulink
            url="http://www.debian.org/doc/manuals/apt-howto/">APT
            HOWTO</ulink>.</para>
      </listitem>

      <listitem>
        <para>Документацію <command>dpkg-scanpackages</command>.</para>
      </listitem>

      <listitem>
        <para>Документацію <command>dpkg-scansources</command>.</para>
      </listitem>

      <listitem>
        <para>Man-сторінку <literal>sources.list(5)</literal>.</para>
      </listitem>
    </itemizedlist>

  </section>
</article>
