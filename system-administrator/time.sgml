<!-- Debian System Administration Manual - Time -->

    <chapt id="sysadmin-time">
      <heading>Time</heading>
      <p><email>Tapio.Lehtonen@IKI.FI</email></p>
<p>
Computers have a <strong>clock</strong> to keep time. Usually there is
a hardware clock with battery backup to keep time when the computer is
off. The operating system (for example Linux) runs its own clock, and
from this clock comes the time shown by commands such as
<prgn>date</prgn> in Linux and <prgn>time</prgn> in DOS. </p>

<p>The hardware clock is usually accurate enough, provided that the battery
has not run out. If the computer shows the wrong time when you turn it
on, it is worth checking if the battery is still usable. </p>

<p>The "software" clock usually has drift, either systematic or
random. This drift means the clock runs too fast or too slow. </p>

<p>To see the time on Debian Linux, use the command
<prgn>date</prgn>. For example
<example>
$ date
Fri Oct 23 04:45:51 EEST 1998
</example></p>

<p>The above command shows the day of the week, the month, the day of the
month, the time, the time
zone and the year.  The time zone also shows whether Daylight Saving Time is in
use (in the example, the base time zone is EET,and the extra S means Saving). </p>

<p>If You have root privileges, you can also change the time with the
command <prgn>date</prgn> (see the man page <manref name="date"
section="1">). If you are connected to
the Internet or have other Unix computers on LAN, see section ??? for
easier ways to set time.</p>

<p>example of the confusing time strings???</p>

<p>If you are running X Windows, you may have a clock display somewhere
on the screen. If not, you can obtain it by running the command
<prgn>xclock</prgn>, which is part of the <prgn>xbase</prgn> package.  The
bare <prgn>xclock</prgn> command gives you an analog clock (with big hand,
 little hand, and
an optional seconds hand).  You can get a digital clock (with <prgn>xclock
-digital</prgn>). See the man page <manref name="xclock" section="1">for
more information.</p>

      <sect>
	<heading>Setting time, time zones and Daylight Saving</heading>
        <p>
         When you installed the base system of Debian GNU/Linux, you set
 the <strong>Timezone</strong>. You can check how you have set the Timezone by looking
at the file <prgn>/etc/timezone</prgn>. 
<example>
$ cat /etc/timezone
Europe/Helsinki
$ 
</example>
</p>
<p>The time zone is needed because Unix computers keep time in
<strong>Universal Time</strong> (<strong>UTC</strong>), and <strong>local
 time</strong> is calculated from this. UTC is solar time on meridian 0.
 UTC was previously called Greenwich Mean Time (GMT) because meridian 0
 passes through the old Royal Observatory in Greenwich, which is part
of London, England. </p>

<p>UTC is constant, and is not subject to Daylight Saving Time or other
 changes.  This is what makes it useful for syncronising computers.  As
long as the base time is kept in UTC, computers all over the world can
be synchronised and yet maintain their lcoal time information.</p>

<p>If you were to set your Debian GNU/Linux computer to use local time, 
without taking account of timezones, you would lose the benefit of automatic
DST changes. <strong>We do not recommend this!</strong>  However, it may be
necessary to compromise by setting your hardware clock to local time (see
below.) In this document,
 we assume that you have configured your computer to use UTC. <p>

<p>If the Timezone is correctly set up, and the timezone
configuration files are reasonably current, the local time shown by
the operating system will change to <strong>Daylight Saving Time</strong>
and back to normal time automatically on the correct dates. If the
timezone files you have are old, there may be problems because DST
start and end dates are not determined by a physical phenomenon, but
are chosen by naational institutions. Sometimes these dates are changed, for
example, the European Union changed the end date from the last Sunday in
September to the last Sunday in October in 1995. </p>
<p>For this reason, you should make sure that your <prgn>timezones</prgn>
package is kept reasonably up to date.



<p><strong>Changing the timezone after installation</strong></p>
<p>If the timezone is not set or is wrong, the superuser can run
<prgn>tzconfig</prgn> to configure it after the operating system is
installed (see man page <manref name="tzconfig" section="8">). </p>

 <p><strong>Setting the TZ environment variable. </strong></p>
<p>If you do not have root privileges or want to set for yourself a
different timezone than the one the system uses, you can set the environment
variable <prgn>TZ</prgn>. Use the command <prgn>tzselect</prgn> to
show what value to use for TZ. 
</p>
      </sect>
      <sect>
        <heading>Setting and showing hardware clock</heading>
        <p>
         The command for setting the hardware clock is <prgn>hwclock</prgn>.
 (This was not in Debian
before 2.0.  In earlier releases, the command was <prgn>clock</prgn>.)
        </p>
      </sect>
      <sect>
        <heading>Multiboot with operating systems not understanding timezone</heading>
        <p>
         If you have a multiboot configuration, where you have some
other operating system(s) on the same computer, and during boot choose
which one to start, you may get confused about the correct time. If
the other operating systems do not understand timezones, they think
UTC is the local time and show the wrong time (unless you live in
London, England or some other place in the same timezone). </p>

<p>DOS, OS/2 and Windows except NT do not use timezones. If you <em>need</em>
to have the correct local time in these operating systems, you have to
set the clock to local time. Debian Linux can live with this and it works,
 but if your main operating system(s) understand timezones, use them. </p>
      </sect>

      <sect>
        <heading>Syncing time, rdate and NTP</heading>
        <p>
         If you have another Unix computer which you know keeps the
correct time, with root privileges you can set the time with the command
<prgn>rdate</prgn>. For example:
<example>
rdate <var>somehost.domain.com</var>
</example>
Even if you do not have an accurate time source, it is still a good idea to
set all your computers to the same time, so that you can compare <strong>time
stamps</strong> between hosts. </p>

<p>If you are connected to the Internet, you can install an NTP
client, for example <prgn>xntp3</prgn>. This uses the Network Time
Protocol RFC 1305?? to synchronise clocks to a few tens of milliseconds
precision. If you <em>need</em> this kind of precision or better, see also the
section Radio Clocks ???</p>

<p>See the excellent documentation that comes with <prgn>xntp3</prgn>,
in the Debian package <prgn>xntp3-doc</prgn>. It is very thorough and
    thus long.  If you think reading documents is a waste of time, just
    ask your Internet Service Provider or system administrator for NTP
    server names, or look up the nearest one in "List of Public NTP
    Servers" in http://www.eecis.udel.edu/~mills/ntp/servers.html . If 
    you start using an NTP server, it is usually polite to notify the
    server's administrator of the fact. </p>
<p><em>Do not configure your system to query level 1 NTP servers!  If
you think you need to do this, you are almost certainly wrong!</em></p>

<p>Once you know an NTP server, edit the file
      <prgn>/etc/ntp.conf</prgn> to add at least one server
      line. Here is an example:
<example>
# /etc/ntp.conf, configuration for xntpd

logfile /var/log/xntpd
driftfile /var/lib/ntp/ntp.drift
statsdir /var/log/ntpstats/

statistics loopstats peerstats clockstats
filegen loopstats file loopstats type day enable
filegen peerstats file peerstats type day enable
filegen clockstats file clockstats type day enable

server ntp.somedomain.something
server ntp.something.else
</example></p>

<p>Note, that I changed the actual server name in the above example,
      to prevent all Debian GNU/Linux users from blindly using that one
      server. Everything else except the server lines was there after 
    <prgn>xntp3</prgn> installation. </p>

<!-- We should also mention netdate and ntpdate -->
      </sect>
      <sect>
        <heading>Setting up an NTP server</heading>
        <p>
         If you have several hosts that you want to synchronise, you
      should not let them all separately synchronise to an outside NTP
      server. This puts a load on the NTP server, and if it is a
      public and free service, the people there may start to dislike
      you! At least ask if it is OK to sync all of your machines
      there. 
        </p>

<p>A better way is to set up one of your hosts as an NTP server, sync
that to the outside NTP server and the rest of your hosts to your own
NTP server. The <prgn>xntp3</prgn> package provides the server
component as well, so you just need to configure it. This is not particularly
difficult either, but you should read the documentation and understand
the peer concept and stratum hierarchy. </p>

      </sect>
      <sect>
        <heading>Radio clocks</heading>
        <p>
        If you want better accuracy or cannot synchronise with an NTP server in 
      the public Internet, you can purchase a radio clock. These get
      the time from time servers that use a very accurate clock, and
      broadcast time signals using radio waves. 
        <p>

	<p>There are radio clocks that need a ground based transmitter 
	  near enough to get the signal. If you get one of these, make 
	  sure you can receive the signal on the location where you
	  plan to use it. The transmitters are ground based, so they
	  don't work accross the globe. </p>

	<p>Another kind of radio clock uses a Global Positioning
	  System GPS receiver. GPS satellites circle the globe in low
	  earth orbits, and there should always be at least four above 
	the horizon. They are mainly used for navigation, but the
	  principle they work on is based on sending time signals. For 
	time synchronisation it is enough to get the signal from one
	  satellite, but usually it is necessary to install the GPS
	  antenna outdoors to get good reception.</p>

<p>Pointers on radio clock hardware??? </p>
      </sect>

      <sect>
        <heading>Timestamps</heading>
        <p>
         Timestamps in files are in UTC.  Timestamps can be compared between
separate computers provided that  their clocks are synchronised. 
        <p>
      </sect>

      <sect>
        <heading>I forgot</heading>
        <p>
      what I was going to write here.
        <p>
      </sect>

    
<!--
??? Cron uses local time   
-->

 </chapt>
      
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:"system-administrator.sgml chapt sect"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->