<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>Choosing a Debian distribution</title>
</head>
<body>
This FAQ helps in choosing the proper Debian distribution and possible
questions that might be arising during the process. It does not deal
with "why you should choose Debian" but rather "which distribution of
Debian".
<hr size="5" width="100%">
<ol>
  <li>
    <h3>How many Debian
distributions are there? </h3>
    <p> Read <a
 href="http://www.debian.org/doc/manuals/debian-faq/ch-ftparchives.en.html#s-dists">this
Debian FAQ</a> . As it says, Debian
comes in 3 distributions - stable,
testing, unstable. </p>
    <p> As of Jul 10, 2005 stable
is called Sarge; testing is called
Etch; unstable is popularly known as Sid. </p>
  </li>
  <li>
    <h3>But what about Knoppix,
Ubuntu, Libranet, Morphix, and others? </h3>
    <p> They are not Debian; they
are _Debian based_. Though there are
many similarities and commonalities between them, there are also
crucial differences. </p>
  </li>
  <li>
    <h3>I know that Knoppix is
based on the Debian system. So after
installing Knoppix on the hard disk, can I use 'apt' package tools on
it? </h3>
    <p> Knoppix is Debian based.
But it is not Debian. You will be able
to use apt package tools by pointing the /etc/apt/sources.list file to
the Knoppix repositories. But then you are not running Debian, you are
running Knoppix. They are not the same. </p>
    <p> Knoppix is a Linux
distribution designed to be booted as a live
CD where as Debian is designed to be installed on hard-disk. Knoppix is
great if you want to know whether a particular hardware works, or if
you want to experience how a linux system 'feels' etc., Knoppix is good
for demonstration purposes while Debian is designed to run 24/7.
Moreover the number of packages available, the number of architectures
supported by Debian are far more greater than that of Knoppix. </p>
    <p> If you want Debian, it is
best to install Debian from the
get-go. Although it is possible to install Debian through Knoppix, the
procedure calls for expertise. If you are reading this FAQ, I would
assume that you are new to both Debian and Knoppix. In that case, save
yourself a lot of trouble later and install Debian right at the
beginning. </p>
  </li>
  <li>
    <h3>I installed knoppix on my
hard disk. Now I have a problem. What
should I do? </h3>
    <p> You should ask in the
knoppix-mailing lists after searching
through google. A list of knoppix related links can be found <a
 href="http://www.knopper.net/knoppix-links/index-en.html">
here</a>.
Asking in Debian forums will not be of any help. Remember "knoppix is
not Debian" and now say that 10 times. </p>
  </li>
  <li>
    <h3>Which Debian distribution
(stable/testing/unstable) is better
for me? </h3>
    <p> The answer is a bit
complicated. It really depends on what you
intend to do. One solution would be to ask a friend who runs Debian.
But that does not mean that you cannot make an independent decision. In
fact, you should be able to decide once you complete reading this FAQ. </p>
    <p> If security or stability
are at all important for you : install
stable. period. This is the most preferred way. </p>
    <p> If you are a new user
installing to a desktop machine, start
with stable. Some of the software is quite old, but it's the least
buggy environment to work in. You can easily switch to the more modern
unstable once you are a little more confident. </p>
    <p> If you are a desktop user
with some experience in Linux and
does not mind facing the odd bug now and then, use unstable. It has all
the latest and greatest software, and bugs are usually fixed swiftly. </p>
    <p> If you are running a
server, especially one that has strong
requirements, install stable. This is by far the strongest and safest
choice. </p>
    <p> The following questions
(hopefully) provide more detail on
these choices. After reading this whole FAQ, if you still could not
make a decision, stick with the stable distribution. </p>
  </li>
  <li>
    <h3>You asked me to install
stable, but in stable so and so
hardware is not detected/working. What should I do? </h3>
    <p> Try to google around and
see if someone else is able to get it
working in stable. Most of the hardware should work fine with stable.
But if you have some state-of-the-art, cutting edge hardware, it might
not work with stable. If this is the case, you might want to
install/upgrade to unstable. </p>
    <p> For laptops, <a href="http://www.linux-on-laptops.com/">http://www.linux-on-laptops.com/</a>
is a very good website to see if someone else is able to get it to work
under Linux. The website is not specific to Debian, but is nevertheless
a tremendous resource. I am not aware of any such website for desktops.
    </p>
    <p> Another option would be to
ask in the debian-user mailing list
by sending an email to debian-user@lists.debian.org . Messages can be
posted to the list even without subscribing. The archives can be read
through <a href="http://lists.debian.org/debian-user/">http://lists.debian.org/debian-user/</a>.
Information regarding subscribing to the list can be found at the
location of archives. I strongly encourage to post your questions on
the mailing-list than on <a href="http://www.debian.org/support">irc</a>.
The mailing-list messages are archived, so solution to your problem can
help others with the same issue. </p>
  </li>
  <li>
    <h3>Will there be different
different versions of packages in
different distributions? </h3>
    <p> Yes. Unstable has the most
recent (latest) versions. But the
packages in unstable are not well tested and might have bugs. </p>
    <p> On the other hand, stable
contains old versions of packages.
But this package is well tested and is less likely to have any bugs. </p>
    <p> The packages in testing
fall between these two extremes. </p>
    <p> For example, The last time
I updated this document, the
different versions of the apt package in the various distributions are
as follows <br>
    <br>
stable --- 0.5.28.6<br>
testing --- 0.5.28.6<br>
unstable --- 0.6.38</p>
  </li>
  <li>
    <h3>Man! The stable
distributions really contains outdated
packages. Just look at kde, gnome, XFree86 or even the kernel. They are
very old. Why is it so? </h3>
    <p> Yes. You are in fact
correct. Stable usually contains old
versions of packages. But they have been tested in and out. One can
confidently say that the packages do not have any bugs, security holes
etc., in them. The packages in stable integrate seamlessly with other
stable packages. These characteristics are very important for
production servers which have to work 24 hours a day, 7 days a week. </p>
    <p>On the other hand, packages
in testing or unstable can have
hidden bugs, security holes etc., Moreover, some packages in testing
and unstable might not be working as intended. Usually people working
on a single desktop prefer having the latest and most modern set of
packages. Unstable is the solution for this group of people. </p>
    <p>As you can see, stability
and novelty are two opposing ends of
the spectrum. If stability is required - install stable distribution.
If you want to work with the latest packages, then install unstable. </p>
  </li>
  <li>
    <h3>If I were to decide to
change to another distribution, Can I do
that? </h3>
    <p> It is a one way process.
You can go from stable --&gt; testing
--&gt; unstable. But the reverse direction is not "possible". So
better
be sure if you are planning to install/upgrade to unstable. </p>
Actually, if you are an expert and if you are willing to spend some
time and if you are real careful and if you know what you are doing,
then it might be possible to go from unstable to testing and then to
stable. The installer scripts are not designed to do that. So in the
process, your configuration files might be lost and .... </li>
  <li>
    <h3>OK! so far so good. Could
you tell me whether to install
testing or unstable? </h3>
    <p> This is a rather
subjective issue. There is no perfect answer
but only a "wise guess" could be made while deciding between unstable
and testing. My personal order of preference is Stable, Unstable and
Testing. The issue is like this: </p>
    <p> Stable is rock solid. It
does not break. </p>
    <p> Testing breaks less often
than Unstable. But when it breaks, it
takes a long time for things to get rectified. Sometimes this could be
days and it could be months at times. But in unstable things get
rectified within couple of days. </p>
    <p> But there are times when
tracking testing would be beneficial
as opposed to unstable. I encountered one such situation due to the gcc
transition from gcc3 to gcc4. I was trying to install labplot package
on a machine tracking unstable and it could not be installed in
unstable as some of its dependencies have undergone gcc4 transition and
some have not. But the package in testing is installable on a testing
machine as the gcc4 transitioned packages have not "trickled down" to
testing. </p>
  </li>
  <li>
    <h3>You are talking about
testing being broken. What do you mean by
that? </h3>
    <p> Sometimes, a package might
not be installable through apt-get.
Sometimes, a package might not be available at all. Sometimes, a
package installs but does not behave in the proper way. </p>
    <p> When these things happen,
the distribution is said to be broken.</p>
  </li>
  <li>
    <h3>Why is it that testing
could be broken for months? Wont the fixes introduced in unstable flow
directly down into testing?</h3>
    <p>The bug fixes and
improvements introduced in unstable distribution trickle down to
testing after a certain number of days. Let's say this threshold is 10
days. The packages in unstable go into testing only when there are no
RC-bugs reported against them. If there is a RC-bug filed against a
package in unstable, it will not go into testing after the 10 days. The
idea is that, if the package has any problems, it would be discovered
by people using unstable and will be fixed before it enters testing.
This keeps the testing in an usable state for most period of the time.
Overall a brilliant concept, if you ask me. But things are not so
simple. Consider the following situation.</p>
    <p>Situation:</p>
  </li>
</ol>
<ul>
  <ul>
    <li type="disc">Imagine you are interested
in package XYZ.<br>
    </li>
    <li type="disc">Let's assume that on June
10, the version in testing is XYZ-3.6 and in unstable it is XYZ-3.7<br>
    </li>
    <li type="disc">After 10 days, XYZ-3.7 from unstable migrates into
testing.<br>
    </li>
    <li type="disc">So on June 20, both testing and unstable have
XYZ-3.7 in their repositories.<br>
    </li>
    <li type="disc">Let's say, The user of testing distribution sees
that a new XYZ package is available and updates his XYZ-3.6 to XYZ-3.7<br>
    </li>
    <li type="disc">Now on June 25, someone
using testing or unstable discovers an RC bug in XYZ-3.7 and files it
in the BTS.<br>
    </li>
    <li type="disc">The maintainer of XYZ fixes this bug and uploads it
to unstable say on June 30. Here I have assumed that it takes 5 days
for the maintainer to fix the bug and upload the new version. The
number 5 should not be taken literally. It could be less or more,
depending upon the severity of the RC-bug at hand.<br>
    </li>
    <li type="disc">This new version in unstable, XYZ-3.8 is scheduled
to enter
testing on July 10th.<br>
    </li>
    <li type="disc">But on July 5th some other
person, discovers another RC-bug in XYZ-3.8<br>
      <br>
    </li>
    <li type="disc">Let's say the maintainer of XYZ fixes this new
RC-bug and uploads new version of XYZ after 5 days.<br>
      <br>
    </li>
    <li type="disc">So on July 10, testing has XYZ-3.7 while unstable
has XYZ-3.9<br>
    </li>
    <li type="disc">This new version XYZ-3.9 is now rescheduled to
enter testing on July 20th.<br>
    </li>
    <li type="disc">Now since you are running
testing, and since XYZ-3.7 is buggy, you could probably use XYZ only
after July 20th. That is you essentially ended up with a broken XYZ for
about one month.</li>
  </ul>
</ul>
<div style="margin-left: 40px;">The situation can get much more
complicated, if say, XYZ depends on 4
other packages. This could in turn lead to unusable testing
distribution for months. The above scenario which is artificially
created by me, can occur in the real life. But such occurrences are
rare.<br>
<br>
</div>
<ol start="13">
  <li>
    <h3>From an administrator
point of view, Which distribution
requires more attention? </h3>
    <p>One of the main reasons I chose Debian over other Linux
distributions
is that it
requires very little administration. I wanted a system that just works.
In
general one can say that, stable requires very little maintenance while
testing
and Sid require constant maintenance from the administrator. If you are
running
stable, all you need to worry about is, keeping track of security
updates. If you
are running either testing or unstable it is a good idea to be aware of
the new
bugs discovered in the installed packages, new bugfixes/features
introduced
etc., </p>
    <p>The following pictures, from <a
 href="http://exon.dyndns.org/releasepics/">Matthew
Exon</a>,
illustrate the
maintenance trauma the various distribution options might cause you
over time.
The graph provides a qualitative (but not quantitative) picture of the
amount of
time administrators might be spending. </p>
    <br>
    <img alt="" src="release-names.png"
 style="width: 671px; height: 418px;"><br>
    <img alt="" src="release-types.png"
 style="width: 671px; height: 420px;"></li>
</ol>
<div style="margin-left: 40px;"><br>
<br>
</div>
<ol>
</ol>
<ol start="14">
  <li>
    <h3>What happens when a new
release is made? </h3>
    <p>This question will not help you in choosing a Debian
distribution. But
sooner or
later you will face this question. I included it here just because it
has not been
covered by any other FAQ. </p>
    <p>As of Jul 10, 2005 the stable distribution is referred to as
Sarge; The
next
stable distribution will be called as 'Etch'. Let's consider the
particular case as to what happens
when Etch is released as the new stable version. </p>
  </li>
</ol>
<ul>
  <ul>
    <li type="disc"> oldstable = woody; stable =
sarge; testing = etch; unstable =
sid</li>
  </ul>
</ul>
<ul>
  <ul>
    <li type="disc"> Unstable is always referred
to as sid irrespective of whether a
release is made or not.</li>
  </ul>
</ul>
<ul>
  <ul>
    <li type="disc">packages constantly migrate
from sid to testing (ie etch). But
packages in stable (ie sarge) remain the same except for security
updates.</li>
  </ul>
</ul>
<ul>
  <ul>
    <li type="disc">after sometime testing
becomes frozen. But it will still be
called testing. At this point no new packages from unstable can migrate
to testing unless they include release-critical (RC) bug fixes.</li>
  </ul>
</ul>
<ul>
  <ul>
    <li type="disc">When testing is frozen, all
the new bugfixes introduced, have to
be manualy checked by the members of the release team. This is done to
ensure that there wont be any unknown severe problems in the frozened
testing.</li>
  </ul>
</ul>
<ul>
  <ul>
    <li type="disc"> RC bugs in 'frozen testing'
are reduced to zero.</li>
  </ul>
</ul>
<ul>
  <ul>
    <li type="disc">The 'frozen testing' with
no rc-bugs will be released as the new
stable version. In our example, this new stable release will be called
as etch.</li>
  </ul>
</ul>
<ul>
  <ul>
    <li type="disc">At this stage oldstable =
sarge, stable = etch. The contents of
stable and 'frozen testing' are same at this point.</li>
  </ul>
</ul>
<ul>
  <ul>
    <li type="disc">A new testing is forked
from the current stable.</li>
  </ul>
</ul>
<ul>
  <ul>
    <li type="disc">Packages start coming down
from sid to testing and the Debian
community will be working towards making the next stable release.</li>
  </ul>
</ul>
<ol start="15">
  <li>
    <h3>I have a working
Desktop/cluster with Debian installed. How do
I know which distribution I am running? </h3>
    <p>It is very easy to figure this out. Take a look at the
/etc/apt/sources.list
file. There will be an entry similar to </p>
    <pre>deb http://ftp.us.debian.org/debian/ unstable main contrib non-free <br></pre>
    <p>The third field ('unstable' in the above example) tells about
the
Debian
distribution you are currently tracking. </p>
    <p>However, the story does not stop there. In some sources.list
file, you
might have
multiple entries corresponding to different distributions. This could
happen if
the administrator is tracking different packages from different Debian
distributions. This is frequently referred to as apt-pinning.
Apt-pinning is
totally different ball game and I wont go into it in this document.</p>
  </li>
  <li>
    <h3>I am currently tracking
stable. Can I change to testing or
unstable? If so, How?</h3>
If you are currently running stable, then in the <span
 style="font-family: monospace;">/etc/apt/sources.list </span>file the
third field will be either sarge or stable. You need to change this to
the distribution you want to run. If you want to run testing, then
change the third field of <span style="font-family: monospace;">/etc/apt/sources.list</span>
&nbsp;to testing. If you want to run unstable, then change the
third
field to unstable.<br>
    <br>
Currently testing is called Etch. So, if you change the third field of <span
 style="font-family: monospace;">/etc/apt/sources.list</span>
to etch,
then also you will be running testing. But when Etch becomes stable,
you will still be tracking Etch.<br>
    <br>
Unstable is always called Sid. So if you change the third field of <span
 style="font-family: monospace;">/etc/apt/sources.list</span>
to sid,
then you will be tracking unstable.<br>
    <br>
Currently Debian does not offer any security updates to testing or
unstable. So make sure that you remove the lines relating to security
updates of stable in <span style="font-family: monospace;">/etc/apt/sources.list</span>
.<br>
    <br>
Once you make the above changes, do <span
 style="font-family: monospace;">apt-get update</span>
and then install
the packages that you want. You can also do <span
 style="font-family: monospace;">apt-get upgrade</span>
or <span style="font-family: monospace;">apt-get
dist-upgrade .</span> Read the
documentation on apt-get for more information.</li>
  <li>
    <h3>I am currently tracking
testing (etch). What happens when a
release is made? Will I still be tracking testing or will my machine be
running the new stable distribution? </h3>
It depends on the entries in the <samp>/etc/apt/sources.list</samp>
file. If you are
currently tracking testing, these entries are similar to either
    <pre>deb http://ftp.us.debian.org/debian/ testing main contrib non-free <br></pre>
or
    <pre>deb http://ftp.us.debian.org/debian/ etch main contrib non-free <br></pre>
    <p>If the third field in <samp>/etc/apt/sources.list</samp>
is
'testing' then you
will be tracking testing even after a release is made. So after etch is
released, you will be running ABCDEFG ( where ABCDEFG will be the name
of new testing
distribution ). </p>
    <p>But if the third field contains 'etch' then you will be tracking
stable
(since etch will then be the new stable distribution).</p>
  </li>
  <li>
    <h3>Where can I download the net install image cd for
stable/testing/unstable? </h3>
    <p>The network install images for stable (sarge) can be found at <a
 href="http://www.debian.org/CD/netinst/">http://www.debian.org/CD/netinst/</a>
    </p>
    <p> The network install images for
testing (etch) can be found at <a
 href="http://www.debian.org/devel/debian-installer/">http://www.debian.org/devel/debian-installer/</a>
    </p>
    <p> There are no network install
images for unstable. If you want to
install
unstable, download the image for testing and upgrade to unstable by
changing
/etc/apt/sources.list </p>
  </li>
  <li>
    <h3>Just out of curiosity, which distribution do you run and why? </h3>
    <p>I run unstable (sid) on my
desktop. I am
interested in laying out my hands on the cutting edge software. If
there is a new version
of firefox out there, I would like to try it out immediately without
worrying
about any bugs/security holes etc. That is why I chose unstable. </p>
    <p>But if you are running a server (for example, with web, FTP or
CVS
servers)
where security is of utmost importance, it is strongly advised to stick
to
stable. </p>
  </li>
  <li>
    <h3>Did anyone really ask these questions? </h3>
    <p>Oh yeah. Too many to list here. Read the debian-user mailing
list
archive and
you know what I am talking about. The archives of the debian-user
mailing list
can be found at <a href="http://lists.debian.org/debian-user/">
http://lists.debian.org/debian-user/</a></p>
  </li>
  <li>
    <h3>I am still confused. What did you say I should install? </h3>
    <p>The best bet would be stable distribution. </p>
  </li>
  <li>
    <h3>I have a suggestion to improve this document. What is the best
way
to
contact you? </h3>
    <p>Great! Any suggestions, feedback, comments, criticisms are most
welcome. Please
email me at kamaraju at gmail dot com. I am planning to improve upon
this
document. So if you have any question that you would like to see here
or if
there is a stale link hanging out or if the pictures/description are
out of date
or if you find any grammatical mistakes etc., please get in touch with
me and I
shall incorporate them ASAP.</p>
    <p>If you managed to read this
whole thing, please <a href="mailto:kamaraju@gmail.com">let me know</a>
what you think.
Whether it is useful or not etc.,</p>
  </li>
  <li>
    <h3>Why don't you write this
FAQ in sgml/docbook/texinfo etc? </h3>
Basically I don't have any time to do those cool stuff. However, If you
are willing to convert this FAQ into a more attractive
format,
Please do so. It would be nice if you can email me the final version. I
would be happy to host
it.</li>
</ol>
<br>
<hr>
<a name="copyright"></a>
<h2>Copyright Notice</h2>
<p>
Copyright &copy; 2004, 2005, 2006 Kamaraju Kusumanchi
</p>
<p>Permission is granted to copy,
distribute and/or modify this
document under the
terms of the <code><a href="http://www.gnu.org/copyleft/gpl.html">GNU
General
Public License, Version 2</a></code>
or any later version published by
the Free
Software Foundation. It is distributed in the hope that it will be
useful, but
WITHOUT ANY WARRANTY.
</p>
<p>Permission is granted to make
and distribute verbatim copies of this
document
provided the copyright notice and this permission notice are preserved
on all
copies.
</p>
<p>Permission is granted to copy
and distribute modified versions of
this document
under the conditions for verbatim copying, provided that the entire
resulting
derived work is distributed under the terms of a permission notice
identical to
this one.
</p>
<p>Permission is granted to copy
and distribute translations of this
document into
another language, under the above conditions for modified versions,
except that
this permission notice may be included in translations approved by the
Free
Software Foundation instead of in the original English.
</p>
<hr><br>
<br>
<br>
==============================<br>
Last Updated: Feb 10, 2006<br>
Kamaraju Kusumanchi<br>
graduate student<br>
Mechanical and Aerospace Engg<br>
Cornell University<br>
Ithaca, NY - 14850<br>
http://www.people.cornell.edu/pages/kk288/<br>
kamaraju at gmail dot com<br>
==============================<br>
</body>
</html>
