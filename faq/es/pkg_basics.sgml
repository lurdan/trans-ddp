<chapt id="pkg_basics">Conceptos básicos del Sistema de Gestión de Paquetes de Debian

<sect id="package">¿Qué es un paquete Debian?

<p>Los paquetes normalmente contienen todos los archivos necesarios
para implementar un conjunto de órdenes o características
relacionadas. Hay dos tipos de paquetes Debian:
<list>
<item><em>paquetes Binarios</em>, que contienen ejecutables, archivos de
configuración, páginas man/info, información de copyright, y otra
documentación. Estos paquetes se distribuyen en un
<ref id="deb-format"> específico de Debian;
se distinguen normalmente por tener una extensión de archivo '.deb'.
Los paquetes binarios se pueden desempaquetar usando la utilidad Debian
<tt>dpkg</tt>; se dan detalles en su página de manual.

<item><em>Paquetes Fuente</em>, que consisten en un archivo
<tt>.dsc</tt> que describe el paquete fuente (incluyendo los nombres de los
siguientes archivos), un archivo <tt>.orig.tar.gz</tt> que contiene el
código fuente original sin modificar en formato tar comprimido con gzip,
y usualmente un archivo <tt>.diff.gz</tt> que contiene los cambios
específicos de Debian al código fuente original. La utilidad
<tt>dpkg-source</tt> empaqueta y desempaqueta los archivos fuente de
Debian; se dan detalles en su página de manual.
</list>

<p>La instalación de software por el sistema de paquetes usa
"dependencias" que son cuidadosamente diseñadas por los
encargados del paquete. Estas dependencias están documentadas en el archivo
de <tt>control</tt> asociado con cada paquete. Por ejemplo, el paquete
que contiene el compilador de C de GNU (<tt>gcc</tt>) "depende"
del paquete <tt>binutils</tt> que incluye el enlazador y el ensamblador.
Si un usuario intenta instalar <tt>gcc</tt> sin haber instalado antes
<tt>binutils</tt>, el sistema de paquetes de Debian dará un mensaje de error
avisando de que también necesita <tt>binutils</tt>, e instalará <tt>gcc</tt>
sólo si el usuario acepta instalar <tt>binutils</tt> primero.
(Sin embargo, esta opción puede ser anulada por el usuario persistente).
Ver más <ref id="depends"> abajo.
<p>
Las utilidades de paquetes de Debian se pueden usar para:
<list>
<item>manipular y gestionar paquetes o partes de paquetes,
<item>ayudar al usuario en la fragmentación de paquetes que deben ser
distribuidos a través de un medio de tamaño limitado, como disquetes,
<item>ayudar a los desarrolladores en la construcción de archivos de
paquetes, y
<item>ayudar a los usuarios en la instalación de paquetes que residen en
un servidor de FTP remoto.
</list>

<sect id="deb-format">¿Cuál es el formato de un paquete Debian?

<p>Un "paquete" Debian, o un archivo Debian, contiene los ejecutables,
bibliotecas y documentación asociada con una forma particular de un
programa o conjunto de programas relacionados.  Normalmente un archivo
Debian tiene un nombre que acaba en <tt>.deb</tt>.

Los detalles del formato de los paquetes binarios Debian se describen en la
página de manual <tt>deb</tt>(5). Este formato interno está sujeto a
cambios, así que use siempre <tt>dpkg-deb</tt>(8) para manipular archivos
<tt>.deb</tt>.

<sect id="pkgname">¿Por qué los nombres de los paquetes Debian son tan largos?

<p>Los nombres de los paquetes binarios siguen la siguiente convención:
&lt;nombre&gt;_&lt;NúmeroDeVersión&gt;-&lt;NúmeroDeRevisiónDebian&gt;.deb

<p>Nótese que <tt>nombre</tt> se supone que es el nombre del paquete.
Como prueba, se puede sacar el nombre de paquete asociado con un
archivo Debian concreto (archivo .deb) de una de las siguientes
formas:

<list>
<item>inspeccionar el archivo "Packages" en el directorio donde
se guardaba el paquete en un servidor de FTP de Debian. Este archivo
contiene un párrafo describiendo cada paquete; el primer campo del párrafo
es el nombre formal del paquete.
<item>usar la orden <tt>dpkg --info nombre_VVV-RRR.deb</tt>. Esto manda un
mensaje a STDOUT que da, entre otras cosas, el nombre formal del paquete.
</list>

<p>El componente <tt>VVV</tt> es el número de versión especificado por el
desarrollador original. Aquí no hay estándares establecidos, así que el
número de versión puede tener formatos tan distintos como
"960428" y "2.7.2.l.3".

<p>El componente <tt>RRR</tt> es el número de revisión Debian, y lo
establece el desarrollador Debian (o un usuario individual, si decide
construir el paquete él mismo). Este número corresponde al nivel de
revisión del paquete debian (que incluye el Makefile específico de
Debian, llamado <tt>debian/rules</tt>, así como el archivo de control
Debian, normalmente llamado <tt>debian/control</tt>). De este modo, un
nuevo nivel de revisión normalmente significa cambios en el Makefile
de Debian, el archivo de control, los scripts de instalación o
desinstalación, o en los archivos de configuración usados en el
paquete.

<!--
<p>
The <tt>Arch</tt> component identifies the processor for which the
package was built.  This is commonly <tt>i386</tt>, which refers to
chips compatible to Intel's 386 or later versions.  For other
possibilities see <ref id="dirtree" name="Debian's FTP directory structure">.
-->

<sect id="controlfile">¿Qué es un archivo de control de Debian?

<p>Se dan detalles sobre el contenido de un archivo de control en el
<url id="ftp://ftp.debian.org/debian/doc/package-developer/programmer.ps.gz"
name="manual del programador de dpkg">. Resumiendo, este es un ejemplo de
archivo de control para el paquete hello:
<!-- XXX below 'non-programmers' were better, but this is a verbatim copy -->
<!-- update to Debian 1.2 -->
<example>
Package: hello
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 472
Maintainer: Santiago Vila &lt;sanvila@debian.org&gt;
Architecture: i386
Version: 2.1.1-4
Depends: libc6 (>= 2.2.4-4)
Description: The classic greeting, and a good example
 The GNU hello program produces a familiar, friendly greeting.  It
 allows non-programmers to use a classic computer science tool which
 would otherwise be unavailable to them.
 .
 Seriously, though: this is an example of how to do a Debian package.
 It is the Debian version of the GNU Project's `hello world' program
 (which is itself an example for the GNU Project).
</example>

<p>El campo Package informa del nombre del paquete. Este es el nombre
mediante el cual el paquete se puede manipular con las utilidades de
paquetes de Debian, y normalmente es parecido (aunque no
necesariamente igual) que la primera cadena de caracteres del nombre
del archivo Debian.

<p>El campo Version da a la vez el número de versión del desarrollador
original y (como último componente) el nivel de revisión del paquete
Debian de este programa, tal y como se describe en <ref id="pkgname">.

<!-- XXX missing name -->

<p>El campo Architecture especifica el procesador para el que fué
compilado este binario en concreto.

<p>El campo Depends da una lista de paquetes que tienen que estar
instalados para poder instalar este paquete con éxito.

<p>El campo Installed-Size indica cuanto espacio de disco ocupará el
paquete instalado. Está pensado para que lo usen los programas de
instalación para indicar si existe suficiente espacio de disco para
instalar el programa.
<!--
<p>The Section line gives the "section" where this Debian package
is stored at the Debian FTP sites. This is the name of a subdirectory
(within one of the main directories, see <ref id="dirtree" name="more about
the Debian FTP directory structure">) where the package is stored.
<p>Priority
-->

<p>El campo Maintainer da la dirección de correo electrónico de la
persona actualmente responsable del mantenimiento del paquete.

<p>El campo Description da un pequeño resumen de las características
del paquete.

<!--
<p>The Conflicts field tells the user (and the Debian package maintenance
tools) what other packages cannot co-exist with the programs in this package.
The Replaces field tells what packages will be replaced when this one
is installed. The Provides field tells what packages will be installed
by this package; this is a mechanism by which multiple packages can be
distributed as a single package, which is in some cases an aid to the
package maintenance system.
-->
<p>

<sect id="conffile">¿Qué es un conffile de Debian?

<p>Los conffiles son listas de archivos de configuración, normalmente
guardadas en <tt>/etc</tt>, que el sistema de mantenimiento de
paquetes no sobrescribe cuando se actualiza un paquete. Esto asegura
que los valores locales de los contenidos de estos archivos se
conserven, y es una característica imprescindible para permitir la
actualización de paquetes en un sistema en funcionamiento.

Para determinar exactamente qué archivos se conservan durante una
actualización, ejecute<tt> dpkg --status paquete</tt>.

<sect id="maintscripts">¿Qué son los scripts Debian preinst, postinst,
prerm, y postrm?

<p>Estos archivos son scripts ejecutables que se usan automáticamente
antes o después de que se instale un paquete.  Junto con el archivo
<tt>control</tt>, todos estos archivos forman parte de la sección de
"control" de un archivo Debian.

<p>Los archivos individuales son:
<taglist>
<tag/preinst/
<item>Este script se ejecuta antes de que se desempaquete el
contenido del archivo Debian (".deb").
Muchos scripts 'preinst' detienen los servicios de los paquetes que se
actualizan hasta que su instalación o actualización se completa (después
de la ejecución exitosa del script 'postinst').

<tag/postinst/
<item>Este script normalmente completa cualquier configuración
necesaria en el paquete <tt>nombre</tt> una vez que <tt>nombre</tt> ha
sido desempaquetado de su archivo Debian (".deb").
A veces, los scripts 'postinst' piden al usuario datos, y/o le advierten
de que si acepta los valores por defecto, tendrá que acordarse de volver
atrás y reconfigurar dicho paquete. Muchos scripts 'postinst' ejecutan
las órdenes necesarias para empezar o reanudar un servicio una vez que el
nuevo paquete ha sido instalado o actualizado. <em>Es una buena idea el
repasar el contenido de un script 'postinst' en busca de consejos de
configuración cuando se instale un paquete por primera vez.</em>

<tag/prerm/
<item>Este script normalmente detiene cualquier demonio asociado con
un paquete. Se ejecuta antes de borrar los archivos asociados a un paquete.

<tag/postrm/
<item>Este script normalmente modifica enlaces u otros archivos
asociados con <tt>nombre</tt>. (Ver notas sobre <ref id="virtual">).

</taglist>

Todos los archivos de control se pueden encontrar en
<tt>/var/lib/dpkg/info</tt>.
Los archivos importantes para el paquete <tt>nombre</tt> empiezan con el
nombre "nombre" y tienen extensiones "preinst",
"postinst", etc., como corresponda. El archivo <tt>nombre.list</tt>
en dicho directorio enumera todos los archivos que se instalaron con el
paquete <tt>nombre</tt>.
(Nótese que la localización de estos archivos es información interna de
dpkg; no se debe confiar en ella.)

<sect id="priority">¿Qué es un paquete Requerido/Importante/Estandar/Opcional/Extra?

<p>Cada paquete Debian recibe una <em>prioridad</em> por los
responsables de la distribución, como ayuda al sistema de
mantenimiento de paquetes. Las prioridades son:

<list>
<item><strong>Requerido</strong>
 Los paquetes requeridos son necesarios para el correcto funcionamiento del
 sistema. Esto incluye todas las herramientas necesarias para reparar defectos
 del sistema. No se deben eliminar estos paquetes o su sistema puede volverse
 totalmente inestable y probablemente ni siquiera será capaz de usar dpkg para
 volver a poner las cosas en su sitio. Sistemas con sólo los paquetes
 requeridos probablemente no son utilizables, pero tienen la suficiente
 funcionalidad para permitir al administrador del sistema arrancarlo e
 instalar más programas.

<item>Los paquetes <strong>importantes</strong> están presentes en cualquier sistema
parecido a Unix. Aquí se encuentran los paquetes sin los que el sistema no
funcionará correctamente.
Esto <em>NO</em> incluye Emacs, X11, TeX o cualquier otra aplicación grande.
Estos paquetes sólo constituyen la infraestructura base.

<item>Los paquetes <strong>estándar</strong> son los típicos en cualquier sistema
Linux, incluyendo un sistema en modo carácter razonablemente pequeño,
aunque no muy limitado. Se instalará por defecto si los usuarios no
seleccionan nada más. No incluye demasiadas aplicaciones mayores, aunque
incluye Emacs (que es más una pieza de la infraestructura que una
aplicación) y una parte razonable de Tex y Latex (si es que es posible
usarlos sin X).

<item>Los paquetes <strong>opcionales</strong> incluyen todos los que razonablemente
se desearía instalar a no ser que no se sepa lo que son o exijan requisitos
especiales. Esto incluye X11, una distribución completa de TeX, y montones de
aplicaciones.

<item>Los paquetes <strong>extra</strong> tienen conflictos con otros de mayor
prioridad, o es sólo probable que se usen si ya se sabe lo que son, o tienen
requisitos especiales.
</list>

<sect id="virtual">¿Qué es un paquete virtual?

<p>Un paquete virtual es un nombre genérico que se aplica a uno cualquiera de
un conjunto de paquetes, los cuales proveen todos ellos de una funcionalidad
básica similar. Por ejemplo, los programas <tt>tin</tt> y <tt>trn</tt> son
lectores de noticias los dos, y por tanto satisfacen por igual cualquier
dependencia de un programa que necesite un lector de noticias en el sistema
para funcionar o ser útil.
Se dice que ambos proveen el "paquete virtual" llamado
<tt>lector de noticias</tt>.

<p>Igualmente, <tt>smail</tt> y <tt>sendmail</tt> proveen ambos de la
funcionalidad de un agente de transporte de correo. También se dice
que ambos proporcionan el paquete virtual "agente de transporte de
correo". Si cualquiera de ellos está instalado, cualquier programa
que exija la instalación de un <tt>agente de transporte de correo</tt>
se dará por satisfecho con la existencia de este paquete virtual.

<p>Debian proporciona un mecanismo mediante el cual, si más de un
paquete que permita el mismo paquete virtual se instala en un sistema,
los administradores del sistema pueden marcar uno como el paquete
preferido.  La orden importante es <tt>alternativas de
actualización</tt>, y se describe con detalle en la sección de <ref
id="diverse">.

<sect id="depends">¿A qué se refieren al decir que un archivo
Depende/Recomienda/Sugiere/Entra en conflicto/Reemplaza/Proporciona
otro paquete?

<p>El sistema de paquetes Debian tiene un conjunto de "dependencias"
diseñadas para indicar (mediante un único indicador) el nivel al que puede
operar un Programa A independientemente de la existencia del Programa B en
un sistema dado:
 <list>
 <item>El paquete A <em>depende</em> del paquete B si B tiene que estar
 instalado obligatoriamente para que funcione A. En ese caso, la versión de
 dependencia normalmente es un límite inferior, de modo que A depende de
 cualquier versión de B más reciente que alguna versión especificada.
 <item>El paquete A <em>recomienda</em> al paquete B, si el responsable del
 paquete considera que la mayoría de usuarios no querrán A sin tener la
 funcionalidad permitida por B.
 <item>El paquete A <em>sugiere</em> al paquete B si B contiene archivos que
 están relacionados con (y normalmente mejoran) la funcionalidad de A.
  <item>El paquete A <em>Entra en conflicto</em> con el paquete B cuando A
  no funcionará si B está instalado en el sistema. La mayoría de las veces
  los conflictos son casos en los que A contiene archivos que son una mejora
  respecto a los que contiene B. Los "Conflictos" se combinan
  frecuentemente con "reemplazos".
  <item>El paquete A <em>reemplaza</em> al paquete B cuando archivos instalados
  por B son borrados y (en algunos casos) sobrescritos por archivos en A.
  <item>El paquete A <em>proporciona</em> al paquete B cuando todos los
  archivos y la funcionalidad de B se incorporan en A. Este mecanismo
  proporciona un modo de que los usuarios con espacio de disco reducido
  instalen la parte del paquete A que realmente necesitan.
 </list>

Información más detallada sobre estos temas se puede encontrar en el
<url id="ftp://ftp.debian.org/debian/doc/package-developer/programmer.ps.gz">.
<!-- name="Manual del Programador de Debian" -->

<sect id="pre-depends">¿Qué significa Pre-Dependencia?

<p>"Pre-Dependencia" es una dependencia especial.

<p>En el caso de la mayoría de paquetes, <tt>dpkg</tt> extraerá el contenido del
archivo correspondiente (p.ej., su archivo <tt>.deb</tt>) tanto si los
archivos de los que depende existen en el sistema como si no. Desempaquetar
significa que <tt>dpkg</tt> extraerá los archivos del paquete que se espera
que queden instalados en el sistema de ficheros, y los pondrá en su
localización correspondiente. Si el paquete <em>depende</em> de la existencia
de otro paquete no instalado en el sistema, <tt>dpkg</tt> se negará a
completar la instalación ejecutando su orden "configure" hasta
que los otros paquetes se instalen.

<p>Pero para algunos paquetes, <tt>dpkg</tt> se negará incluso a desempaquetar
los archivos hasta que se resuelvan las dependencias. Se dice de esos
paquetes que "Pre-dependen" de la presencia de algún otro paquete.
El proyecto Debian proporcionó este mecanismo para permitir la actualización
segura de sistemas en formato <tt>a.out</tt> a formato <tt>ELF</tt>, donde el
orden en que se instalan los paquetes era crítico.

Información más detallada sobre el uso de estos términos se puede encontrar
en el
<url
id="ftp://ftp.debian.org/debian/doc/package-developer/programmer.ps.gz"
name="Manual del Programador de Debian">.

<sect id="pkgstatus">¿Qué significa
desconocido/instalar/quitar/borrar/conservar en el estado del paquete?

<p>Estas marcas indican lo que el usuario desea hacer con un paquete (ya sea
mediante las acciones del usuario en la sección "Select" de
<tt>dselect</tt>, o  por las llamadas directas del usuario a <tt>dpkg</tt>).
Sus significados son:
<list>
<item>desconocido  - el usuario no ha dicho si quiere el paquete
<item>instalar - el usuario ha dicho que quiere instalar o actualizar el paquete
<item>quitar - el usuario quiere desinstalar el paquete, pero sin borrar
cualquier fichero de configuración que exista.
<item>Borrar - el usuario quiere eliminar completamente el paquete, incluyendo
ficheros de configuración.
<item>conservar - el usuario no quiere procesar este paquete, quiere mantener
la versión actual con su estado actual, cualquiera que sea.
</list>

<sect1>¿Dónde puedo encontrar información detallada sobre la creación
de paquetes Debian?

<p>Ver <ref id="debiandocs">.
<!--  name="el Manual del Programador de dpkg y el Manual de Normas de Debian"> -->
