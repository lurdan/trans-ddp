<chapt id="ftparchives">Los archivos FTP de Debian

<sect id="dirtree">
¿Qué son todos esos directorios en los archivos de FTP de Debian?

<p>El software que se ha empaquetado para &debian; está disponible en
varios árboles de directorios de cada espejo de Debian.

El directorio <tt>dists</tt> contiene las "distribuciones",
y es ahora la forma canónica de acceder a ellas.

<p>El directorio <tt>pool</tt> contiene los paquetes de verdad.
<!-- Véase id="pools" ¿existe? -->

<p>Existen los siguientes directorios suplementarios:
<taglist>
  <tag><em>/tools/</em>:
    <item>Utilidades DOS para crear discos de arranque, particionar el
     disco duro, comprimir y descomprimir archivos, y arrancar Linux.
  <tag><em>/doc/</em>:
    <item>Documentación básica sobre Debian, como la FAQ, y las
     instrucciones sobre cómo enviar informes de bugs.
  <tag><em>/indices/</em>:
   <item>El fichero Maintainers y los ficheros override.
  <tag><em>/project/</em>:
    <item>material para desarrolladores principalmente, como:
    <taglist>
      <tag><em>project/experimental/</em>:
     <item>Este directorio contiene paquetes y utilidades que se están
     desarrollando específicamente para el Proyecto Debian, y que aún están
     en fase de pruebas. Los usuarios no deberían usar paquetes de aquí,
     porque pueden ser peligrosos y perjudiciales incluso para
     alguien experimentado.
    </taglist>
</taglist>

<sect id="dists">¿Cuántas distribuciones de Debian hay en el directorio
<tt>dists</tt>?

<p>Normalmente hay tres distribuciones, la distribución "stable"
(estable), la distribución "testing" (en pruebas), y la distribución
"unstable" (inestable).

<sect id="codenames">¿Qué son todos esos nombres como slink, potato, etc.?

<p>Son simplemente nombres clave. Cuando una distribución de Debian
está en su fase de desarrollo, no tiene número de versión, solamente
tiene un nombre clave. El objeto de estos nombres clave es hacer que
las distribuciones de Debian sean más fáciles de replicar (si un
directorio real tal y como <tt>unstable</tt> cambiara repentinamente
de nombre a <tt>stable</tt>, habría que volver a traerse un montón de
Megabytes de nuevo).

<p>Actualmente, <tt>stable</tt> es un enlace simbólico a
<tt>&releasename;</tt> (o sea, Debian &release;), y <tt>testing</tt>
es un enlace simbólico a <tt>&testingreleasename;</tt>, lo cual
significa que <tt>&releasename;</tt> es la distribución "stable"
actual y <tt>&testingreleasename;</tt> es la distribución "testing"
actual.

<p><tt>unstable</tt> es un enlace simbólico permanente a <tt>sid</tt>,
dado que <tt>sid</tt> es siempre la distribución unstable.

<sect1 id="oldcodenames">¿Qué otros nombres clave se han utilizado ya?

<p>Otros nombres clave que ya se han utilizado son: <tt>buzz</tt> para
Debian 1.1, <tt>rex</tt> para Debian 1.2, <tt>bo</tt> para Debian
1.3.x, <tt>hamm</tt> para Debian 2.0, <tt>slink</tt> para Debian 2.1,
<tt>potato</tt> para Debian 2.2, y <tt>woody</tt> para Debian 3.0.

<sect1 id="sourceforcodenames">¿De dónde provienen estos nombres clave?

<p>Hasta ahora han sido personajes de la película Toy Story, de los
estudios de animación Pixar.

<sect id="sid">¿Y qué es "sid"?

<p>Es una distribución especial para arquitecturas que todavía no han
sido publicadas por primera vez.

<p>Cuando sid no existía, la organización del FTP tenía un fallo:
Había una presunción de que cuando se creaba una nueva arquitectura en
unstable, sería publicada cuando esa distribución se convertía en la
nueva stable.  Para muchas arquitecturas este no es el caso, lo cual
resultaba en que esos directorios tenían que ser cambiados de lugar en
el momento de la publicación, desperdiciando un montón de ancho de
banda.

<p>Para esas arquitecturas todavía no publicadas, la primera vez que
se publiquen habrá un enlace desde el stable actual hasta sid, y de
ahí en adelante se crearán dentro del árbol unstable de forma
normal. sid no será publicado nunca ni siquiera se accederá a él
directamente, solamente a través de enlaces simbólicos en los árboles
actuales stable, frozen y unstable. Será una mezcla de arquitecturas
publicadas y no publicadas.

<p>El nombre de "sid" tambien proviene de la película "Toy Story",
era el chico de al lado que rompía los juguetes :-)

<sect id="stable">¿Qué contiene el directorio stable?

<p><list>
<item>stable/main/:
Este directorio contiene los paquetes que formalmente constituyen la
distribución más reciente del sistema Linux de Debian.

<item>stable/non-free/: Este directorio contiene paquetes cuya
distribución está restringida en un modo que obliga a que los
distribuidores tengan muy presente ciertos requisitos de copyright. Por
ejemplo, algunos paquetes tienen licencias que prohiben la distribución
comercial. Otros pueden ser distribuidos, aunque de hecho son shareware, y
no freeware.  Las licencias de cada uno de estos paquetes debe ser
estudiada, y posiblemente negociada, antes de que los paquetes se incluyan
en cualquier redistribución (p.ej., en un CD-ROM).

<item>stable/contrib/: Este directorio contiene paquetes que son de
<em>libre distribución</em>, pero que no cumplen con la política de
requisitos de distribución de los paquetes del Proyecto Debian por alguna
razón, p.ej., los paquetes tienen alguna modificación o restricción
inusual, o sólo están disponibles en formato binario. Para estos paquetes,
el proyecto no puede ofrecer al usuario ninguna forma de asegurarse de que
están libres de Caballos de Troya, y no puede adaptarlos a otras
arquitecturas. Paquetes sólo en binario que no sean de libre distribución
se encuentran en el directorio <tt>non-free</tt>.
</list>
<p>

<sect1>¿Qué contiene el directorio unstable?
<p>
unstable contiene una muestra del sistema actual bajo desarrollo. Se
invita a los usuarios a probar estos paquetes, aunque se les advierte
sobre su estado incompleto.

También hay directorios main, contrib y non-free dentro de unstable.

<sect1>
¿Qué son todos esos directorios dentro de <tt>dists/stable/main</tt>?
<p>
Dentro de cada uno de los directorios principales
(<tt>dists/stable/main</tt>, <tt>dists/stable/contrib</tt>,
<tt>dists/stable/non-free</tt>, y <tt>dists/unstable/main/</tt>, etc.
pero no <tt>project/experimental/</tt>, que es demasiado pequeño para ser
subdividido), los paquetes binarios residen en subdirectorios cuyos
nombres indican la arquitectura del chip para el que fueron compilados:
<list>
<item>binary-all, para paquetes que son independientes de la arquitectura.
Esto incluye, por ejemplo, scripts en Perl.

<item>binary-i386, para paquetes que sólo se ejecutan en máquinas 80x86.

<item>binary-m68k, para paquetes que se ejecutan en máquinas basadas en uno
de los procesadores Motorola 680x0. Actualmente se mantiene para
computadoras Atari y Amiga, y para algunas placas industriales basadas en
VME. No hay una implementación de Linux para los Macintosh basados en el
antiguo m68k, porque Apple no suministró la información de hardware
necesaria.

<item>binary-sparc/, para paquetes que se ejecutan en Sparcstations de
Sun.

<item>binary-alpha/, para paquetes que se ejecutan en máquinas DEC de
Alpha.

<item>binary-powerpc/, para paquetes que se ejecutan en máquinas PowerPC

<item>binary-arm/, para paquetes que se ejecutan en máquinas ARM.

<item>binary-hurd-i386/, para paquetes de GNU/Hurd que se ejecutan en
máquinas 80x86.
</list>

<sect1>¿Dónde está el código fuente?

<p>Se incluye código fuente para cualquier cosa en el sistema Debian.
La mayor parte de los términos de licencia de los programas en el
sistema <em>exigen</em> que se distribuya el código fuente junto con
los programas, o que se incluya junto con los programas una oferta
para entregar el código fuente.

<p>Normalmente, el código fuente se distribuye en los directorios
"source", que son paralelos a todos los directorios binary de cada
arquitectura.

<p>El código fuente de los paquetes en los directorios "contrib" y
"non-free" puede estar disponible o no, ya que formalmente no son
parte del sistema Debian.
