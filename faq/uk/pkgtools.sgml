<!-- retain these comments for translator revision tracking -->
<!-- Original version: $Revision: 1.1 $ -->
<chapt id="pkgtools">Інструменти для керування пакунками Debian

<sect id="pkgprogs">Які програми пропонує Debian для керування 
  пакунками?

<p>Для керування пакунками Debian існують численні утиліти, від графічних 
та псевдографічних інтерфейсів до низькорівневих інструментів, 
що використовуються для встановлення пакунків. Всі доступні утиліти 
базуються на низькорівневих інструментах та перераховуються тут 
по мірі зростання їхньої складності.

<p>Важливо зрозуміти, що інструменти вищого рівня, як <prgn/aptitude/ 
чи <prgn/dselect/ залежать від <prgn/apt/, котра, у свою чергу, 
залежить від <prgn/dpkg/.

<p>Перегляньте <url id="http://www.debian.org/doc/manuals/apt-howto/" name="APT
HOWTO">, якщо бажаєте дізнатись більше про інструменти керування пакунками 
Debian. Цей документ є доступним різними мовами та в різних форматах, зверніться
до запису про APT HOWTO на сторінці проекту документації Debian <url
id="http://www.debian.org/doc/user-manuals#apt-howto" 
name="Огляд підручників для користувачів">.

<!-- TODO: Describe tools to automatically build from sources Debian
packages including 'apt-get build-dep foo && apt-get build foo' and
'apt-build' -->

<sect1 id="dpkg">dpkg

<p>Це основна програма керування пакунками. <prgn/dpkg/ можна викликати 
з великою кількістю опцій. Найчастіше вживаються такі:
<list>
  <item>Отримати список опцій: <tt>dpkg --help</tt>.
  <item>Надрукувати файл control (та іншу інформацію) для заданого пакунку:
    <tt>dpkg --info foo_VVV-RRR.deb</tt>
  <item>Встановити пакунок (включаючи розпакування та конфігурування) 
    у файлову систему на жорсткому диску: <tt>dpkg --install foo_VVV-RRR.deb</tt>.
  <item>Розпакувати (але не конфігурувати) архівний файл Debian у файлову систему 
    на жорсткому диску: <tt>dpkg --unpack foo_VVV-RRR.deb</tt>. Зауважте, що ця 
    команда <em>не</em> обов'язково робить пакунок готовим до вжитку; деякі файли 
    можуть потребувати наступного налаштування для правильного запуску. Ця команда 
    видаляє вже встановлену версію програми та запускає зв'язаний з пакунком 
    сценарій preints (див. <ref id="maintscripts">).
  <item>Конфігурувати пакунок, що був попередньо розпакований:
    <tt>dpkg --configure foo</tt>. Окрім іншого, ця команда запускає сценарій 
    postinst (див. <ref id="maintscripts">). Вона також оновлює файли, перелічені 
    у <tt>conffiles</tt>. Зауважте, що операція configure приймає в якості аргументу 
    ім'я пакунку, а <em/не/ назву архівного файлу Debian (для прикладу, правильно 
    буде вказувати foo, а не foo_VVV-RRR.deb). 
  <item>Видобути файл "blurf" (або групу файлів "blurf*") з архівного файлу Debian: 
    <tt>dpkg --fsys-tarfile foo_VVV-RRR.deb | tar -xf - blurf*</tt>.
  <item>Видалити пакунок (але не його конфігураційні файли): 
    <tt>dpkg --remove foo</tt>.
  <item>Видалити пакунок (включно з конфігураційними файлами): 
    <tt>dpkg --purge foo</tt>.
  <item>Перелічити стан встановлення пакунків, що містять послідовність символів 
    (чи регулярний вираз) foo*: <tt>dpkg --list 'foo*'</tt>.
</list>

<sect1 id="apt-get">APT

<p>APT&nbsp;— це вдосконалений пакунковий інструмент (<em>Advanced 
Package Tool</em>), що постачає програму <prgn/apt-get/. 
<prgn/apt-get/ забезпечує простий шлях для отримання та встановлення 
пакунків з декількох джерел за допомогою командного рядка. 
На відміну від <prgn/dpkg/, <prgn/apt-get/ працює не з .deb-файлами, 
а з іменами пакунків і може встановлювати їх лише з місць, котрі 
перелічені у файлі <file>/etc/apt/sources.list</file>. <prgn/apt-get/ 
викликає <prgn/dpkg/ відразу після завантаження архівного .deb-файлу 
з сконфігурованих джерел.

<footnote>Зверніть увагу, що існують портування, котрі дозволяють
використовувати цю утиліту з іншими системами управління пакунками,
наприклад, менеджером пакунків Red Hat, відомого як 
<prgn/rpm/</footnote>.

<p>Ось деякі стандартні методи використання <prgn/apt-get/:

<list>
       <item>Щоб оновити список пакунків, відомих системі, запустіть:
               <example>apt-get update</example>
       (вам потрібно запускати цю команду регулярно для оновлення списку пакунків)

       <item>Щоб оновити всі пакунки у вашій системі, наберіть:
               <example>apt-get upgrade</example>

       <item>Щоб встановити пакунок <var/foo/ разом з усіма залежностями, виконайте:
               <example>apt-get install foo</example>

       <item>Щоб видалити пакунок foo з вашої системи, введіть:
               <example>apt-get remove foo</example>

       <item>Щоб видалити пакунок foo разом з його конфігураційними файлами, наберіть:
               <example>apt-get --purge remove foo</example>

       <item>Щоб оновити всі пакунки у вашій системі до нової версії 
               &debian;, запустіть:
               <example>apt-get dist-upgrade</example>

</list>

<p>Зверніть увагу, що ви повинні бути зареєстровані як root щоб мати
можливість виконувати будь-які команди, котрі змінюють системні пакунки.

<p>Набір інструментів apt включає також утиліту <prgn/apt-cache/ для 
запитів списків пакунків. Ви можете використовувати її щоб знайти пакунки, 
котрі відповідають певним вимогам за допомогою простих текстових запитів 
чи регулярних виразів, або ж запитів щодо залежностей у системі керування 
пакунками.

Ось деякі типові способи використання <prgn/apt-cache/:
<list>
       <item>Знайти пакунки, чий опис містить <var/слово/:
               <example>apt-cache search <var>слово</var></example>

       <item>Роздрукувати детальну інформацію про пакунок:
               <example>apt-cache show <var>ім'я_пакунка</var></example>

       <item>Вивести список пакунків, від котрих залежить даний пакунок:
               <example>apt-cache depends <var>ім'я_пакунка</var></example>

       <item>Показати детальну інформацію про доступні версії даного 
               пакунку та пакунків, від котрих він залежить:
               <example>apt-cache showpkg <var>ім'я_пакунка</var></example>

</list>

<p>Щоб отримати детальнішу інформацію, встановіть пакунок <package/apt/ 
та прочитайте <manref name="apt-get" section="8">, 
<manref name="sources.list" section="5">, встановіть пакунок 
<package/apt-doc/ та прочитайте 
<file>/usr/share/doc/apt-doc/guide.html/index.html</file>.

<sect1 id="aptitude">aptitude

<p><prgn/aptitude/&nbsp;— це керівник пакунків для системи 
&debian;, що являє собою зовнішній інтерфейс до інфраструктури 
керування пакунками apt. <prgn/aptitude/&nbsp;— це програма з 
псевдографічним інтерфейсом, що базується на бібліотеці curses, 
вона може використовуватись для швидкого й зручного керування пакунками.

<p><prgn/aptitude/ забезпечує функціональність <prgn/dselect/ 
і <prgn/apt-get/ та багато додаткових можливостей, котрих немає 
у жодній іншій прогамі:

<list>
       <item><prgn/aptitude/ забезпечує доступ до всіх версії пакунку.

       <item><prgn/aptitude/ веде журнал своїх дій у файлі 
       <file>/var/log/aptitude</file>.

       <item><prgn/aptitude/ полегшує відслідковування застарілого 
       програмного забезпечення ведучи список „Застарілих та локальних 
       пакунків“ (Obsolete and Locally Created Packages).

       <item><prgn/aptitude/ є достатньо потужною системою для 
       пошуку окремих пакунків та виводу короткої інформації про них. 
       Користувачі, котрі знайомі з <prgn/mutt/, швидко засвоять 
       і її, оскільки синтаксис виразів взято саме звідти.

       <item><prgn/aptitude/ відслідковує, які саме пакунки було встановлено 
       завдяки залежностям та видаляє їх, якщо пакунки, які залежали від них, 
       були видалені з системи.

       <item><prgn/aptitude/ може автоматично встановлювати рекомендовані
       (<em>Recommended:</em>) пакунки<footnote>Не зважаючи на те, що це
       часто призводить до встановлення в систему більшої кількості пакунків,
       ніж насправді необхідно для її роботи.</footnote>. 

       <item>В повноекранному режимі <prgn/aptitude/ має вбудовану функціональність 
       суперкористувача та може запускатись звичайним користувачем. Вона викличе 
       програму <prgn/su/ (та запитає пароль суперкористувача, звісно) якщо вам 
       справді знадобляться привілеї системного адміністратора. 

</list>

<p>Ви можете працювати з <prgn/aptitude/ як через візуальний інтерфейс 
(просто запустивши <tt>aptitude</tt>) так і напряму з командного рядка. 
Синтаксис командного рядка дуже подібний до синтаксису <prgn/apt-get/. 
Наприклад, щоб встановити пакунок <var>foo</var>, вам потрібно запустити 
<tt>aptitude install <var>foo</var></tt>.

<p>Зверніть увагу, що для встановлення та/або оновлення вашої системи 
Debian рекомендує саме <prgn/aptitude/.

<p>Для додаткової інформації прочитайте сторінку підручника <manref
name="aptitude" section="8"> та встановіть пакунок <package/aptitude-doc-en/. 

<sect1 id="dselect">dselect

<p>Ця програма являє собою керований у режимі меню інтерфейс до системи 
керування пакунками Debian. Вона є особливо зручною для першого встановлення. 
Деякі користувачі можуть почувати себе зручніше у <prgn/aptitude/, 
котра також рекомендується для масштабних оновлень. Щоб отримати додаткову 
інформацію про aptitude див. <ref id="aptitude">.

<p><prgn/dselect/ може:
<list>
  <item>бути провідником для користувача, котрий вирішив встановити чи видалити 
    котрийсь із пакунків; перевірити, чи не було встановлено пакунків, що конфліктують 
    з іншими та чи встановлено всі пакунки, котрі необхідні для роботи даного пакунка; 
  <item>попередити користувача про суперечливість чи несумісність його вибору;
  <item>визначити порядок встановлення пакунків; 
  <item>автоматично виконати встановлення чи видалення;
  <item>провести користувача через будь-який конфігураційний процес, 
    необхідний для встановлення пакунку.
</list>

<p><prgn/dselect/ розпочинає свою роботу з представлення користувачеві меню 
з 7 елементів, кожен з котрих є наперед визначеною дією. Користувач може обрати 
будь-яку з них за допомогою стрілок, пересуваючи підсвітлений рядок та натиснувши 
<em>&lt;Enter&gt;</em> щоб вибрати підсвітлену дію.

<p>Що користувач побачить на наступному екрані залежить від дії, котру він обрав. 
Якщо він обрав будь-яку з опцій окрім <tt>Access</tt> чи <tt>Select</tt>, 
<prgn/dselect/ просто перейде до виконання заданої дії: наприклад, якщо користувач 
вибрав <tt>Remove</tt>, dselect спробує видалити всі файли, що вибрані для видалення 
користувачем при попередньому відвідуванні екрану <tt>Select</tt>. 

<p>Елементи меню <tt>Access</tt> та <tt>Select</tt> виводять додаткові підменю. 
В обидвох випадках меню представлені у вигляді розділеного екрану: у верхній 
частині знаходиться прокручуваний список можливостей вибору, а в нижній -- 
коротке пояснення для кожного з елементів верхьої частини. 

<p>Додаткова довідка доступна після натиснення в будь-який момент клавіші '?'.

<p>Порядок, в котрому представлені пункти початкового меню <prgn/dselect/ 
аналогічний порядку дій користувача коли він хоче встановити нові пакунки. 
Проте користувач може вибирати будь-який елемент меню стільки разів, 
скільки вважатиме за потрібне (в залежності від того, що він хоче зробити). 

<list>
  <item>Розпочніть з вибору методу доступу (<strong/Access Method/). 
    Тут вибирається спосіб, у котрий користувач планує отримувати пакунки 
    Debian; наприклад, деякі користувачі мають пакунки на компакт-диску, 
    тоді як інші планують отримувати їх з FTP. Вибір методу доступу зберігається 
    по завершенню роботи з <prgn/dselect/, отож вам не потрібно буде вибирати його знову. 

  <item>Далі оновіть (<strong/Update/) список доступних пакунків. Щоб зробити це, 
    <prgn/dselect/ зчитує файл „Packages.gz“	, котрий повинен знаходитись в теці, 
    де зберігаються пакунки Debian (Але якщо його там не виявиться, 
    <prgn/dselect/ зможе створити його для вас). 

  <item>Виберіть (<strong/Select/), які пакунки ви хочете встановити до системи. 
    Після вибору цього пункту меню користувачу спочатку виводиться повноекранна довідка 
    (при умові, що програма запущена без опції '--expert'). Коли користувач покине 
    вікно довідки, він побачить розділений надвоє екран, де він зможе обрати пакунки 
    для встановлення (чи видалення). 

    <p>Верхня частина екрану&nbsp;— це порівняно вузьке вікно зі списком &all-pkgs; 
    пакунків Debian; нижня містить опис вибраного (підсвітленого) пакунку чи групи пакунків. 

    <p>Ви можете вибрати пакунки, з котрими працюватиме програма, підсвітлюючи ім'я 
    пакунку або мітку групи пакунків. Після цього ви можете вибирати пакунки:
    <taglist>
      <tag>для встановлення:
        <item>Це досягається натисненням клавіші '+'.
      <tag>для видалення:
        <item>Пакунки можна видаляти двома способами:
        <list>
          <item>видаляючи (remove): видаляються більшість файлів, пов'язаних з пакунком, 
          але залишаються файли, відмічені як конфігураційні (див. <ref id="conffile">) 
          та конфігураційна інформація про пакунок. Це досягається натисненням клавіші '-'.
          <item>очищуючи (purged): видаляються <em/всі/ файли, котрі відносяться до пакунку. 
          Це досягається натисненням клавіші '_'
        </list>
        Зверніть увагу, що всі пакунки („All Packages“) видалити неможливо. Якщо ви спробуєте 
        зробити це, у вашій системі залишаться базові пакунки.
      <tag>для фіксації:
        <item>Це досягається натисненням клавіші '=' і вказує <prgn/dselect/ не оновлювати 
        пакунок навіть якщо його новіші версії є в сховищах пакунків Debian, котрі
        ви використовуєте (це було визначено, коли ви вибрали метод доступу 
        до пакунків та оновились, обравши відповідний пункт меню). 
        <p>Точно так само ви можете відмінити фіксування пакунку, натиснувши ':'. 
        В цьому випадку <prgn/dselect/ може оновити пакунок, якщо буде доступна 
        його новіша версія. Така поведінка є стандартною.
    </taglist>

    <p>Ви можете вибирати різний порядок сортування пакунків, натискаючи клавішу 
    'o' для циклічного перемикання між різними представленнями. Зазвичай пакунки 
    сортуються за пріоритетом; всередині пріоритету пакунки сортуються за теками (секціями) 
    архіву, у котрому вони зберігаються. В такому порядку деякі пакунки, скажімо, 
    з секції A можуть бути представлені першими, далі йтимуть якісь пакунки з секції B, 
    а після них&nbsp;— інші пакунки з секції A з нижчим пріоритетом.

    <p>Ви також можете розширити значення міток вгорі екрану натиснувши клавішу 'v' 
    (verbose&nbsp;— детально). Ця дія виведе купу тексту, який швидше за все 
    не поміститься на екрані. Щоб його побачити, натисніть праву стрілку; 
    щоб повернутись назад&nbsp;— ліву. 

    <p>Якщо ви вибрали пакунок для встановлення чи видалення, наприклад <package/foo.deb/ 
    і цей пакунок залежить (або рекомендує) інший пакунок, наприклад <package/blurf.deb/, 
    тоді <prgn/dselect/ виведе допоміжне вікно поверх головного. Там ви побачите список 
    залежних пакунків і зможете приймати запропоновані дії (встановлювати чи ні) або ж 
    відкидати їх. Для останнього натисніть Shift-D; щоб повернутись до попереднього, 
    натисніть Shift-U. В будь-якому випадку, ви можете зберегти свій вибір та повернутись 
    до головного вікна вибору, натиснувши Shift-Q. 

  <item>Повернувшись до головного меню, користувач може обрати пункт „Встановлення“ 
    (Install), щоб розпакувати та сконфігурувати вибрані пакунки. Відповідно, 
    користувач, котрий хоче видалити пакунки, повинен вибрати пункт меню „Видалити“ (Remove). 
    І в будь-якому випадку ви можете вибрати „Вихід“ (Quit), щоб завершити роботу з <prgn/dselect/; 
    при цьому все, що ви вибрали (для встановлення, видалення і т.д.), зберігається. 
</list>

<sect1 id="dpkg-extra">Інші інструменти для керування пакунками

<sect2 id="dpkg-deb">dpkg-deb

<p>Ця програма маніпулює архівними (<tt>.deb</tt>) файлами Debian. 
Ось її деякі стандартні опції: 
<list>
  <item>Вивести повний список опцій:  <tt>dpkg-deb --help</tt>.
  <item>Отримати список файлів у архівному файлі:
    <tt>dpkg-deb --contents foo_VVV-RRR.deb</tt>
  <item>Видобути файли з заданого архіву в теку, визначену користувачем:
    <tt>dpkg-deb --extract foo_VVV-RRR.deb tmp</tt> розпаковує всі файли
    з архіву <tt>foo_VVV-RRR.deb</tt> до теки <tt>tmp/</tt>. Це зручно при 
    перевірці вмісту пакунка в локальному каталозі без необхідності встановлення 
    його в кореневу файлову систему.
</list>

<p>Зауважте, що всі пакунки, що були лише розпаковані за допомогою <tt/dpkg-deb
--extract/ не є коректно встановленими, натомість вам потрібно використовувати 
<tt/dpkg --install/.

<p>Більше ви зможете дізнатись, переглянувши сторінку довідки <manref name="dpkg-deb"
section="1">.

<sect2 id="dpkg-split">dpkg-split

<p>Ця програма ділить великі файли пакунків на менші (наприклад, для запису на дискети) 
та об'єднує набір маленьких файлів назад у один великий файл. Вона може використовуватись 
лише в Debian-системі (точніше, в системі, що містить пакунок <package/dpkg/), оскільки 
вона викликає програму <tt>dpkg-deb</tt>, щоб розділити пакунок Debian на складові частини. 

<p>Наприклад, щоб розділити великий „.deb“-файл на N частин, 
<list>
  <item>Запустіть команду <tt>dpkg-split --split foo.deb</tt>.
    Вона створить N файлів довжиною приблизно 460 КБайт в поточному каталозі. 
  <item>Скопіюйте ці файли на дискети.
  <item>Скопіюйте вміст дискет на жорсткий диск на іншій машині. 
  <item>Об'єднайте шматки файлу командою <tt>dpkg-split --join "foo*"</tt>.
</list>

</sect1>

<sect id="updaterunning">Debian стверджує, що може оновити запущену програму; 
  яким чином він це робить?

<p>Ядро (файлова система) в &debian; підтримує заміну файлів,
що використовуються.

<p>Ми також постачаємо програму під назвою <prgn/start-stop-daemon/, котра 
використовується для запуску демонів під час завантаження системи, 
чи їх зупинки під час зміни рівня запуску ядра (наприклад, від багатокористувацього 
режиму в однокористувацький чи ж при вимкненні). Та ж сама програма використовується 
встановлювальними сценаріями, коли встановлюється новий пакунок, що містить демона: 
при зупинці запущених демонів та їх перевантаженні у разі необхідності. 

<sect id="whatpackages">Як мені дізнатись, які пакунки встановлено в системі?

<p>Щоб взнати стан всіх встановлених пакунків у Debian-системі, виконайте команду 
  <example>dpkg --list</example>

Вона виведе однорядкове резюме для кожного пакунку, включаючи 2-літерний код 
стану встановлення (пояснюється у заголовку), ім'я пакунку, <em>встановлену</em> 
версію та короткий опис.

<p>Щоб дізнатись про стан встановлення пакунків, чиї імена збігаються з набором 
літер або виразом, запустіть команду: 
  <example>dpkg --list 'foo*'</example>

<p>Для отримання детальнішого звіту про певний пакунок, наберіть команду:
  <example>dpkg --status packagename</example>

<sect id="filesearch">Як мені дізнатись, що за пакунок встановив котрийсь файл?

<p>Щоб взнати ім'я пакунку, що встановив певний файл виконайте:

<list>
  <item><tt>dpkg --search filename</tt>
    <p>Вона шукає файл <tt>filename</tt> серед встановлених пакунків (на даний момент 
    це еквівалентно пошуку серед файлів з розширенням <tt>.list</tt> в теці 
    <tt>/var/lib/dpkg/info</tt> та виводу тих назв пакунків, котрі містять заданий файл). 

    <p>Швидшою альтернативою є використання утиліти <prgn>dlocate</prgn>.

  <item><tt>zgrep foo Contents-ARCH.gz</tt>
    <p>Ця команда шукає файли, що містять підланцюжок <tt>foo</tt> в своєму 
    повному імені. Файли <tt>Contents-ARCH.gz</tt> (де ARCH -- це назва архітектури) 
    розташовані у основних каталогах (main, non-free, contrib) на FTP-сайті Debian
    (наприклад, в <tt>/debian/dists/&releasename;</tt>). Файли <tt>Contents</tt> 
    містять дані лише про ті пакунки, котрі розташовані у їх підтеці. Таким чином 
    користувачеві може знадобитись здійснювати пошук не в одному файлі <tt>Contents</tt>, 
    щоб знайти пакунок, котрий містить файл <tt>foo</tt>. 

    <p>Цей метод має ту перевагу перед <tt>dpkg --search</tt>, бо пошук здійснюється 
    навіть у пакунках, котрі не встановлені у вашій системі

  <item><tt>apt-file search <var>foo</var></tt>
    <p>Подібно до вищенаведеного, шукаються файли, що містять ланцюжок чи регулярний 
    вираз <tt>foo</tt> в повному імені. Перевага над попереднім прикладом полягає 
    в тому, що вам не потрібно отримувати файли <tt>Contents-ARCH.gz</tt>, оскільки 
    вони оновлюються автоматично для всіх джерел, перелічених у <file>/etc/apt/sources.list</file> 
    під час запуску (як root) <tt>apt-file update</tt>. 
</list>

<sect id="datapackages">Чому не видаляється foo-data під час видалення foo?
Як мені очистити систему від старих пакунків, що вже не використовуються?

<p>Деякі пакунки розділені на власне програму (foo) та дані (foo-data). 
Це справедливо для багатьох ігор, мультимедійних додатків та словників і введено в Debian 
з тих пір, коли користувачі захотіли мати доступ до даних не встановлюючи програму, 
або ж до програми, котра б запускалась без даних, роблячи їх необов'язковими. 

<p>Подібні ситуації виникають і з бібліотеками: зазвичай вони встановлюються,
якщо від них залежать програми з вибраного пакунка. Коли такий пакунок
видаляться, пакунки з бібліотеками залишаються в системі. Або у випадку,
коли пакунок з програмою перестає бути залежним від пакунка з бібліотекою.

<p>В цьому випадку foo-data не залежить від foo, отож, якщо ви видаляєте 
пакунок foo, foo-data не буде автоматично видалено більшістю інструментів 
для керування пакунками. Це саме відбувається при використанні пакунків 
з бібліотеками. Це необхідно ще й для того, щоб уникнути циклічних залежностей. 
Якщо ви використовуєте <prgn>aptitude</prgn> (див. <ref id="aptitude">) у якості 
керівника пакунками, він, окрім іншого, може відслідковувати автоматично встановлені 
пакунки та видаляти їх, якщо в системі не залишилось пакунків, що їх потребують. 
