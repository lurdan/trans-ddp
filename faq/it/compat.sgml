<chapt id="compat">Problemi compatibilità

<sect id="arches">Su quali architetture e/o sistemi hardware funziona &debian;?

<p>&debian; include il codice sorgente per tutti i programmi inclusi,
così dovrebbe funzionare su tutti i sistemi che sono
supportati dal kernel Linux; si veda la <url name="Linux FAQ"
id="http://en.tldp.org/FAQ/Linux-FAQ/intro.html#DOES-LINUX-RUN-ON-MY-COMPUTER">
per i dettagli.

<!-- XXX update for new distros -->
<p>L'attuale release &debian;, &release;, contiene una distribuzione
binaria completa per le seguenti architetture:

<p><em/i386/: questa comprende i PC basati su processori
Intel e compatibili, inclusi gli Intel 386, 486, Pentium, Pentium Pro,
Pentium II (sia Klamath che Celeron) e Pentium III e la maggior parte
dei processori compatibili di AMD, Cyryx e altri.

<p><em/m68k/: questa comprende computer Amiga e Atari con processori
Motorola 680x0 (con x>=2) con MMU.

<p><em/alpha/: sistemi Alpha Compaq/Digital.

<p><em/sparc/: questa comprende i sistemi SPARC della Sun e la maggior parte dei sistemi UltraSPARC.

<p><em/powerpc/: questa comprende alcune macchine PowerPC IBM/Motorola,
incluse le macchine CHRP, PoverMac e PReP.

<p><em/arm/: macchine ARM e StrongARM.

<p><em/mips/: sistemi MIPS big-endian della SGI, Indy e Indigo2;
<em/mipsel/: macchine MIPS little-endian, Digital DECstations.

<p><em/hppa/: macchine PA-RISC della Hewlett-Packard (712, C3000, L2000, A500).

<p><em/ia64/: computer Intel IA-64 ("Itanium").

<p><em/s390/: sistemi mainframe IBM S/390.

<p>Lo sviluppo di distribuzioni binarie di Debian per
architetture Sparc64 (UltraSPARC nativo) è attualmente in corso.

<p>Per ulteriori informazioni su come fare il boot, partizionare il proprio drive,
abilitare i dispositivi PCMCIA (PC Card) e per questioni simili si seguano le istruzioni
date nel manuale di installazione, che è disponibile dal nostro sito WWW su
<url id="http://www.debian.org/releases/stable/installmanual">.

<sect id="otherdistribs">Com'è compatibile Debian con le altre distribuzioni di Linux?
	
<p>Gli sviluppatori Debian comunicano con i produttori delle altre distribuzioni
Linux per fare di tutto per mantenere la compatibilità binaria attraverso le
distribuzioni Linux. La maggior parte dei prodotti commerciali per Linux funziona
bene sotto Debian come sul sistema su cui sono stati compilati.

<p>&debian; aderisce al <url name="Linux Filesystem Hierarchy
Standard" id="http://www.pathname.com/fhs/"> (Standard per la Gerarchia del Filesystem Linux).
Comunque, c'è possibilità di interpretazione in alcune regole all'interno di questo standard,
così ci possono essere differenze tra un sistema Debian e gli altri sistemi Linux.

<sect id="otherunices">In che modo Debian è compatibile con altri sistemi Unix a livello
  di codice sorgente?
	
<p>Per la maggior parte delle applicazioni il codice sorgente di Linux è compatibile con
altri sistemi Unix. Supporta quasi qualsiasi cosa che sia
disponibile per i sistemi Unix basati su System V e i sistemi
liberi e commerciali derivati da BSD. Comunque nel mondo Unix una tale
affermazione non ha quasi nessun valore perché
non c'è modo di provarla. Nell'area di sviluppo del software
è richiesta una completa compatibilità piuttosto della compatibilità
nella "quasi maggioranza" dei casi. Così, anni fa, è sorta la necessità della
presenza di standard e al giorno d'oggi POSIX.1 (IEEE Standard
1003.1-1990) è uno dei maggiori standard per la compatibilità
del codice sorgente nei sistemi operativi Unix-like.

<p>Linux si propone di aderire al POSIX.1, ma gli standard POSIX
hanno un costo elevato e la certificazione di POSIX.1 (e FIPS 151-2)
è abbastanza costosa; questo crea molte difficoltà agli sviluppatori
Linux a lavorare per una completa conformità a POSIX. Il costo
della certificazione rende improbabile che Debian fornisca una
certificazione di conformità ufficiale anche se ha completamente
superato la validation suite. (La validation suite è ora
liberamente disponibile, così è previsto che più persone lavoreranno 
sui problemi di POSIX.1.)

<!-- <p><strong>(The authors would very much like to give you a pointer to
an on-line document that described that standard, but the IEEE is another
one of those organizations that gets away with declaring standards and then
requiring that people PAY to find out what they are.  This makes about as
much sense as having to find out the significance of various colored lights
on traffic signals.)</strong> -->

<p>L'Unifix GmbH (Braunschweig, Germania) ha sviluppato un sistema Linux
che è stato certificato come conforme al FIPS 151-2 (un superset
di POSIX.1). Questa tecnologia era disponibile nella distribuzione di Unifix
chiamata Unifix Linux 2.0 e nel Linux-FT della Lasermoon.
<!-- I had to comment this out for obvious reasons... SVD
 <url name="Linux-FT" url="http://www.lasermoon.co.uk/linux-ft/linux-ft.html">.
Currently Unifix merges its patches into the Linux kernel, gcc and other
tools; so it is expected that their fixes towards POSIX.1 conformance will
be available in Debian (and other distributions).
-->

<!-- TODO: explain better how to unpack .debs onto non-Debian systems -->
<sect id="otherpackages">Si possono usare i pacchetti debian (file ".deb") sul proprio
  sistema Linux RedHat/Slackware/...? Si possono usare i pacchetti RedHat (file ".rpm") sul
  proprio sistema &debian;?

<p>Differenti distribuzioni Linux usano differenti formati dei pacchetti
e differenti programmi di gestione dei pacchetti.

<taglist>
<tag><strong/Probabilmente si può:/
  <item>È disponibile un programma per spacchettare un pacchetto Debian
  all'interno di un host Linux in cui è stata installata una
  distribuzione 'straniera', e generalmente funzionerà,
  nel senso che quei file verranno spacchettati.
  Anche l'inverso è probabilmente vero, cioè, un programma che
  apre un pacchetto RedHat o Slackware su di un host che è basato
  su &debian; probabilmente riuscirà ad spacchettare il
  pacchetto e a mettere la maggior parte dei file nelle
  directory di destinazione appropriate. Questo è in gran parte una
  conseguenza dell'esistenza del (e spiccata aderenza al)
  Linux Filesystem Hierarchy Standard.

<tag><strong/Probabilmente si vuole che:/
  <item>La maggior parte dei gestori dei pacchetti
  scrive alcuni file di amministrazione quando viene usata per
  spacchettare un archivio. Questi file di amministrazione sono
  generalmente non standardizzati. Quindi, l'effetto di aprire un
  pacchetto Debian su un host 'straniero' avrà risultati
  imprevedibili (certamente non utili) sul gestore
  dei pacchetti su quel sistema. Similmente, le utility di un'altra distribuzione
  possono riuscire ad aprire i loro archivi su sistemi
  Debian, ma probabilmente causeranno dei guasti al sistema di
  gestione Debian dei pacchetti al momento di aggiornare o
  rimuovere alcuni pacchetti, o anche semplicemente nel riportare
  esattamente che pacchetti sono presenti sul sistema.

<tag><strong/Un metodo migliore:/
  <item>Il Linux File System Standard (e quindi &debian;) richiede
  che le sottodirectory che si trovano sotto <tt>/usr/local/</tt> siano
  interamente sottoposte alla discrezione dell'utente.
  Quindi, gli utenti possono spacchettare pacchetti 'stranieri' dentro
  queste directory e poi possono gestire individualmente la loro
  configurazione, aggiornamento e rimozione.
</taglist>

<!-- It would be useful to document all the ways in which Debian and RedHat
systems differ.  I believe such a document would do a lot to dispell
fears of using a Unix system. SGK -->

<sect id="a.out">Debian può avviare i miei vecchi programmi "a.out"?

<p>Avete ancora un programma del genere? :-)

<p>Per <em>eseguire</em> un programma il cui binario è in formato <tt>a.out</tt>
(i.e., QMAGIC o ZMAGIC),

<list>
  <item>Ci si assicuri che il proprio kernel abbia il supporto per <tt>a.out</tt> compilato al suo interno,
  direttamente (CONFIG_BINFMT_AOUT=y) o come un modulo (CONFIG_BINFMT_AOUT=m). (Il pacchetto
  kernel-image di Debian contiene il modulo <tt>binfmt_aout</tt>.)

  <p>Se il proprio kernel ha il supporto dei binari <tt>a.out</tt> come modulo, ci si
  assicuri poi che il modulo <tt>binfmt_aout</tt> sia caricato. Si può fare questo
  all'avvio aggiungendo la riga <tt>binfmt_aout</tt> nel file
  <tt>/etc/modules</tt>. Lo si può fare da riga di comando eseguendo il
  comando <tt>insmod DIRNAME/binfmt_aout.o</tt> dove
  <tt>DIRNAME</tt> è il nome della directory dove sono memorizzati i moduli che
  sono stati compilati per la versione del kernel che è ora funzionante.
  Su un sistema con la versione 2.2.17 del kernel, <tt>DIRNAME</tt> è probabilmente
  <tt>/lib/modules/2.2.17/fs/</tt>.

  <item>si installi il pacchetto <package/libc4/, che si può trovare in una delle
  release precedenti alla 2.0 (perché in questo
  momento abbiamo rimosso il pacchetto). Si può vedere in un vecchio
  CD-ROM Debian (Debian 1.3.1 ha ancora questo pacchetto), o
  si veda <url id="ftp://archive.debian.org/debian-archive/"> su Internet.

  <item>Se il programma che si vuole eseguire è un client X nel formato <tt>a.out</tt>,
  allora si installi il pacchetto <package/xcompat/ (si veda sotto per la disponibilità).
</list>

<p>Se si ha un'applicazione commerciale nel formato <tt>a.out</tt>, ora sarebbe il
momento buono per chiedere l'invio dell'aggiornamento a <tt>ELF</tt>.

<sect id="libc5">È in grado Debian di eseguire i miei vecchi programmi in libc5?

<p>Sì. Basta installare le librerie <package/libc5/ richieste, dalla sezione
<tt>oldlibs</tt> (contenente vecchi pacchetti inclusi per la compatibilità
con altre applicazioni).

<sect id="libc5-compile">Debian può essere usata per compilare programmi in libc5?

<p>Sì. Si installino i pacchetti <package/libc5-altdev/ e <package/altgcc/ (dalla
sezione <tt>oldlibs</tt>). Si possono trovare gli appropriati <prgn/gcc/ e <prgn/g++/
compilati con libc5 nella directory <tt>/usr/i486-linuxlibc1/bin</tt>.
Li si metta nella propria variabile $PATH per fare in modo che <prgn/make/ e altri programmi
li eseguano per primi.

<p>Se si ha bisogno di compilare dei client X basati su libc5, si installino i pacchetti
<package/xlib6/ e <package/xlib6-altdev/.

<p>Si faccia attenzione che l'ambiente basato su libc5 non è più
pienamente supportato dagli altri nostri pacchetti.

<sect id="non-debian-programs">Come dovrei installare un programma non-Debian?
	
<p>I file sotto la directory <tt>/usr/local/</tt> non sono sotto il
controllo del sistema Debian di gestione pacchetti. Quindi, è una
buona abitudine mettere il codice sorgente per il proprio programma in
/usr/local/src/. Per esempio, si potrebbe estrarre i file da un pacchetto
che si chiama "foo.tar" dentro la directory <tt>/usr/local/src/foo</tt>. Dopo
averli compilati, si mettano i file binari in <tt>/usr/local/bin/</tt>, le librerie in
<tt>/usr/local/lib/</tt> e i file di configurazione in <tt>/usr/local/etc/</tt>.

<p>Se i propri programmi e/o file devono essere realmente messi in
altre directory, si potrebbe ancora memorizzarli in <tt>/usr/local/</tt>
e creare i link simbolici appropriati dalla locazione richiesta alla loro locazione
in <tt>/usr/local/</tt>, p.e., si potrebbe creare il link
<example>ln -s /usr/local/bin/foo /usr/bin/foo</example>

<p>In ogni caso, se si ottiene un pacchetto il cui copyright permette la
ridistribuzione, si dovrebbe considerare di trasformarlo in un pacchetto
Debian e caricarlo per il sistema Debian. Le linee
guida per iniziare a sviluppare un pacchetto sono incluse nel Debian
Policy manual (si veda <ref id="debiandocs">).

<sect id="xlib6">Perché ottengo l'errore "Can't find libX11.so.6" quando tento di eseguire <tt>foo</tt>?

<p>Questo messaggio d'errore potrebbe significare che il programma è stato linkato con la
versione <tt>libc5</tt> delle librerie X11. In questo caso è
necessario installare il pacchetto <package/xlib6/, dalla sezione <tt>oldlibs</tt>.

<p>Si possono ottenere messaggi d'errore simili che si riferiscono al file
libXpm.so.4, in tal caso è necessario installare la versione di libc5 della
libreria XPM, dal pacchetto <package/xpm4.7/, anch'esso nella sezione <tt>oldlibs</tt>.

<sect id="termcap">Perché non posso compilare programmi che richiedono libtermcap?

<p>Debian usa il database <tt>terminfo</tt> e la libreria di interfaccia
a terminale <tt>ncurses</tt>, piuttosto del database <tt>termcap</tt>
e della libreria <tt>termcap</tt>. Gli utenti che stanno compilando dei programmi che richiedono
alcune conoscenze sulle interfacce dei terminali dovrebbero sostituire i
riferimenti a <tt>libtermcap</tt> con i riferimenti a <tt>libncurses</tt>.

<p>Per supportare i file binari che sono già stati linkati con la libreria
<tt>termcap</tt> e per i quali non si ha il sorgente, Debian fornisce un pacchetto
chiamato <package/termcap-compat/. Questo fornisce sia la <tt>libtermcap.so.2</tt>
che <tt>/etc/termcap</tt>. Si installi questo pacchetto se il programma non riesce 
ad avviarsi con il messaggio d'errore "can't load library 'libtermcap.so.2'", o reclama
la mancanza del file <tt>/etc/termcap</tt> file.

<sect id="accelx">Perché non posso installare AccelX?
	
<p>AccelX usa la libreria <tt>termcap</tt> per l'installazione. Si veda
<ref id="termcap"> sopra.

<sect id="motifnls">Perché le mie vecchie applicazioni Motif per XFree 2.1 vanno in crash?

<p>È necessario installare il pacchetto <package/motifnls/, che fornisce i file
di configurazione di XFree-2.1 necessari a permettere che le
applicazioni Motif, compilate sotto XFree-2.1, possano funzionare
anche sotto XFree-3.1.

<p>Senza questi file, alcune applicazioni Motif compilate su altre
macchine (come Netscape) possono andare in crash nel tentativo di
copiare o incollare da o a un campo di testo, e si possono
presentare anche altri problemi.
