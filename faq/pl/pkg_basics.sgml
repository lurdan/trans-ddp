<chapt id="pkg_basics">Podstawy zarz±dzania systemem pakietów Debiana

<sect id="package">Czym jest pakiet w systemie Debian?

<p>Pakiety ogólnie zawieraj± wszystkie pliki potrzebne aby zaimplementowaæ
zbiór powi±zanych poleceñ lub cech. S± dwa typy pakietów w Debianie:
<list>
  <item><em>Pakiety binarne</em>, które zawieraj± pliki wykonywalne, konfiguracyjne
  , strony man oraz info, informacje o prawach autorskich i inn± dokumentacjê.
  Pakiety te s± rozpowszechniane w specyficznym dla systemu Debian formacie archiwum
  (zobacz <ref id="deb-format">); wyró¿niane s± zazwyczaj przez rozszerzenie pliku
  '.deb'. Pakiety binarne mog± byæ rozpakowane narzêdziem systemu Debian
   <tt>dpkg</tt>; szczegó³y s± opisane w tym dokumencie.
  
  <item><em>Pakiety ¼ród³owe</em>, które sk³adaj± siê z pliku <tt>.dsc</tt>
  opisuj±cego ¼ród³owy pakiet (w³±cznie z nazwami nastêpnych plików)
  , <tt>.orig.tar.gz</tt>  zawieraj±cy oryginalne, niezmodyfikowane
  ¼ród³o w skompresowanym gzipem archiwum tar i plik 
  <tt>.diff.gz</tt> zawieraj±cy zazwyczaj zmiany zwi±zane z systemem 
  Debian wprowadzone w oryginalnym ¼ródle. 
  Narzêdzie <tt>dpkg-source</tt> pakuje i rozpakowuje
  archiwa ¼ród³owe systemu Debian; szczegó³y s± zawarte w tym dokumencie.
</list>

<p>Instalacja oprogramowania przez system pakietów u¿ywa "zale¿no¶ci", które
s± ostro¿nie projektowane przez opiekunów pakietów. Te zale¿no¶ci s±
udokumentowane w pliku <tt>control</tt> zwi±zanym z ka¿dym pakietem.
Dla przyk³adu, pakiet zawieraj±cy kompilator GNU C (<package/gcc/
"zale¿y" od pakietu <package/binutils/, który zawiera konsolidator i
asembler. Je¿eli u¿ytkownik spróbuje zainstalowaæ <package/gcc/ bez wcze¶niej
zainstalowanego <package/binutils/, system zarz±dzania pakietami (dpkg) wy¶le 
wiadomo¶æ z b³êdem, ¿e potrzeba jeszcze <package/binutils/ i zatrzyma instalacjê
<package/gcc/. (Jednak, u³atwienie to mo¿e byæ pominiête przez upartego
u¿ytkownika, zobacz <manref name="dpkg" section="8">.)  Zobacz wiêcej w <ref id="depends">
poni¿ej.

<p>Narzêdzia pakietowe systemu Debian mog± byæ u¿yte do:
<list>
  <item>manipulowania i zarz±dzania pakietami lub czê¶ciami pakietów,
  <item>jako pomoc dla u¿ytkownika przy roz³o¿eniu pakietów, które musz± byæ przeniesione
    za pomoc± ograniczonego rozmiarem no¶nika takiego, jak dyskietka,
  <item>pomocy wykonawcom w tworzeniu archiwum pakietów, i
  <item>pomocy u¿ytkownikom w instalacji pakietów, które znajduj± siê na zdalnym serwerze FTP.
</list>

<sect id="deb-format">Jaki jest format pakietu binarnego w systemie Debian?

<p>"Pakiet" systemu Debian lub plik archiwum systemu Debian zawiera pliki wykonywalne,
biblioteki i dokumentacjê, zwi±zane z poszczególnymi czê¶ciami
programu lub zbiorem powi±zanych programów. Normalnie, plik archiwum systemu Debian ma
nazwê, która koñczy siê na <tt>.deb</tt>.

<p>Wewnêtrzny format pakietu binarnego Debiana jest opisany w instrukcji
 <manref name="deb" section="5">. Ten wewnêtrzny format jest
tematem zmian (pomiêdzy g³ównymi wydaniami systemu &debian;), dlatego 
zawsze u¿ywaj <manref name="dpkg-deb" section="8"> do manipulowania plikami <tt>.deb</tt>
.

<sect id="pkgname">Dlaczego nazwy plików pakietów w systemie Debian s± tak d³ugie? 

<p>Nazwy plików pakietów binarnych systemu Debian s± podporz±dkowane nastêpuj±cej konwencji:
&lt;foo&gt;_&lt;VersionNumber&gt;-&lt;DebianRevisionNumber&gt;.deb

<p>Zauwa¿, ¿e <tt>foo</tt> jest zobowi±zane byæ nazw± pakietu. 
Mo¿na poznaæ nazwê pakietu, zwi±zanego ze szczególnym plikiem archiwum systemu Debian
 (.deb file), wykorzystuj±c do sprawdzenia jeden z nastêpuj±cych sposobów:
<list>
  <item>obejrzyj plik "Packages" w katalogu, gdzie jest on przechowany
  na stronie FTP archiwum systemu Debian. Ten plik zawiera zwrotkê opisuj±c±
  ka¿dy pakiet; pierwsze pole w ka¿dej zwrotce jest formaln± nazw± pakietu.
  <item>u¿yj polecenia <tt>dpkg --info foo_VVV-RRR.deb</tt> (gdzie VVV i
  RRR s± odpowiednio wersj± i poprawk± pakietu w pytaniu).
  Polecenie to wy¶wietli, pomiêdzy innymi rzeczami, rozwiniêt± nazwê pakietu odpowiadaj±c± 
  plikowi archiwum.
</list>

<p>Czê¶æ <tt>VVV</tt> jest numerem wersji ustanawianym przez
g³ównego programistê.  Nie ma standardów w tym miejscu, wiêc numer wersji
mo¿e posiadaæ format tak zró¿nicowany jak "19990513" i "1.3.8pre1".

<p>Czê¶æ <tt>RRR</tt> jest numerem weryfikacji w systemie Debian, i jest
ustalany przez dewelopera Debiana (lub indywidualnego u¿ytkownika je¶li wybierze
zbudowanie pakietu samemu). Ten numer zgadza siê z poziomem weryfikacji
pakietu systemu Debian, dlatego nowy poziom weryfikacji zazwyczaj oznacza
zmiany w pliku Makefile (<tt>debian/rules</tt>), pliku kontroli
(<tt>debian/control</tt>), skryptach instalacyjnych i usuwaj±cych
(<tt>debian/p*</tt>), lub w plikach konfiguracyjnych u¿ytych w pakiecie.

<!--
<p>Czê¶æ <tt>Arch</tt> identyfikuje procesor, dla którego
pakiet zosta³ stworzony. Jest nim zazwyczaj <tt>i386</tt>, który odnosi siê
do chipsetów kompatybilnych z Intel 386 lub pó¼niejszych jego wersji. Aby zobaczyæ pozosta³e
mo¿liwo¶ci <ref id="dirtree" name="Debian's FTP directory structure">.
-->

<sect id="controlfile">Czym jest plik kontroli w pakiecie systemu Debian?

<p>Szczegó³y dotycz±ce tre¶ci pliku kontroli s± zawarte
w instrukcji Debian Packaging, rozdzia³ 4, zobacz <ref id="debiandocs">.

<p>W skrócie, przyk³adowy plik kontroli jest pokazany poni¿ej dla pakietu systemu Debian hello:
<example>
Package: hello
Priority: optional
Section: devel
Installed-Size: 45
Maintainer: Adam Heath &lt;doogie@debian.org&gt;
Architecture: i386
Version: 1.3-16
Depends: libc6 (>= 2.1)
Description: The classic greeting, and a good example
 The GNU hello program produces a familiar, friendly greeting.  It
<!-- XXX below 'non-programmers' were better, but this is a verbatim copy -->
 allows nonprogrammers to use a classic computer science tool which
 would otherwise be unavailable to them.
 .
 Seriously, though: this is an example of how to do a Debian package.
 It is the Debian version of the GNU Project's `hello world' program
 (which is itself an example for the GNU Project).
</example>

<p>Pole Package zawiera nazwê pakietu. To jest nazwa, za pomoc± której
pakiet mo¿e byæ przetwarzany przez narzêdzia pakietowe i zazwyczaj jest podobna,
ale nie koniecznie taka sama, jak pierwsza czê¶æ nazwy pliku archiwum systemu Debian.

<p>Pole Version zawiera numer wersji nadany przez g³ównego programistê 
i (w ostatniej czê¶ci) poziom weryfikacji programu w pakiecie systemu Debian,
tak jak jest to wyja¶nione w <ref id="pkgname">. <!-- XXX missing name -->

<p>Pole Architecture okre¶la chip, dla którego ten konkretny pakiet binarny
zosta³ skompilowany.

<p>Pole Depends podaje listê pakietów, które musz± byæ zainstalowane
w podanej kolejno¶ci, aby z sukcesem zainstalowaæ pakiet.

<p>Pole Installed-Size wskazuje ile miejsca na dysku zabierze zainstalowany
pakiet. Pole to jest przeznaczone do u¿ytku przez programy instaluj±ce,
aby pokazaæ czy jest dostêpna wystarczaj±ca ilo¶æ miejsca na dysku by zainstalowaæ
program.

<p>Linia Section podaje nazwê "sekcji", czyli gdzie ten pakiet systemu Debian jest przechowywany
na stronach FTP systemu Debian.  Jest to nazwa podkatalogu (wewn±trz jednego 
z g³ównych katalogów, zobacz <ref id="dirtree">), gdzie pakiet jest przechowywany.

<p>Pole Priority wskazuje jak wa¿ny jest ten pakiet dla instalacji tak, aby
pseudo-inteligentne programy jak dselect lub console-apt mog³y sortowaæ
pakiety w kategorie np. pakiety opcjonalnie instalowane. Zobacz
<ref id="priority">.

<p>Pole Maintainer zawiera adres e-mail osoby, która jest
aktualnie odpowiedzialna za utrzymywanie tego pakietu.

<p>Pole Description zawiera krótkie podsumowanie cech pakietu.

<p>Wiêcej informacji o wszystkich mo¿liwych polach jakie mo¿e mieæ pakiet, proszê
zobacz Debian Packaging Manual, rozdzia³ 4., "Control files and their fields".

<sect id="conffile">Czym jest plik conffile w systemie Debian?

<p>Conffiles jest list± plików konfiguracyjnych (zazwyczaj umieszczonych w <tt>/etc</tt>),
których system zarz±dzania pakietami nie bêdzie nadpisywa³ gdy pakiet bêdzie
aktualizowany. To gwarantuje, ¿e zawarto¶æ tych plików 
bêdzie zachowana i jest krytycznie wa¿n± cech±, umo¿liwiaj±c± aktualizacjê
pakietu w dzia³aj±cym systemie.

<p>Aby ustaliæ dok³adnie, które pliki s± zachowywane podczas aktualizacji pakietu, uruchom:
  <example>dpkg --status pakiet</example>
I zobacz poni¿ej "Conffiles:".

<sect id="maintscripts">Czym s± w systemie Debian skrypty: preinst, postinst, prerm i postrm ?

<p>Te pliki s± wykonywalnymi skryptami, które s± automatycznie uruchamiane przed
lub po instalacji pakietu. Wraz z plikiem o nazwie <tt>control</tt>,
wszystkie z tych plików s± czê¶ci± sekcji "control" w pliku archiwum systemu Debian.

<p>Indywidualne pliki to:
<taglist>
<tag/preinst/
  <item>Ten skrypt jest uruchomiony przed rozpakowaniem pakietu z jego
  pliku archiwum (".deb"). Wiele skryptów 'preinst' zatrzymuje us³ugi
  dla pakietów, które bêd± aktualizowane, dopóki ich instalacja lub aktualizowanie
  siê nie zakoñczy (nastêpny, po pomy¶lnym wykonaniu skryptu 'preinst' jest skrypt 'postinst').

<tag/postinst/
  <item>Ten skrypt zazwyczaj koñczy jakiekolwiek wymagane konfiguracje
  pakietu <tt>foo</tt>, który by³ ju¿ rozpakowany z jego pliku archiwum
  (".deb"). Czêsto skrypt 'postinst' prosi u¿ytkownika o wprowadzenie informacji,
  i/lub ostrzega u¿ytkownika, ¿e je¶li zaakceptuje domy¶lne warto¶ci, powinien pamiêtaæ
  o tym aby przywróciæ i zrekonfigurowaæ pakiet je¶li wymaga tego sytuacja.
  Wiele skryptów 'postinst' wykonuje potem polecenia potrzebne do uruchomienia lub
  ponownego uruchomienia us³ugi po tym, jak nowy pakiet zosta³ zainstalowany.

<tag/prerm/
  <item>Ten skrypt zazwyczaj zatrzymuje ró¿ne procesy powi±zane z 
  pakietem. Jest uruchamiany przed usuniêciem plików powi±zanych z pakietem.

<tag/postrm/
  <item>Ten skrypty zazwyczaj modyfikuje powi±zania lub inne pliki zwi±zane z
  <tt>foo</tt> i/lub usuwa pliki stworzone przez pakiet. (Zobacz te¿
  <ref id="virtual">.)
</taglist>

<p>Obecnie wszystkie pliki control mo¿na znale¼æ w katalogu
<tt>/var/lib/dpkg/info</tt>. Pliki zwi±zane z pakietem <tt>foo</tt>
zaczynaj± siê od "foo" i maj± rozszerzenie odpowiednio "preinst", "postinst",
itd. . Plik <tt>foo.list</tt> w tym katalogu
zawiera listê wszystkich plików, które by³y zainstalowane z pakietem <tt>foo</tt>.
(Zauwa¿, ¿e pliki te zlokalizowane s± wewn±trz katalogu zwi±zanego z programem dpkg; nie powiniene¶
polegaæ na nim.)

<sect id="priority">Co to jest pakiet <em/Wymagany/, <em/Wa¿ny/, <em/Standardowy/,
  <em/Opcjonalny/ lub <em/Dodatkowy/?

<p>Ka¿dy pakiet systemu Debian ma przydzielony <em>priorytet</em> przez opiekunów
dystrybucji, jako pomoc dla systemu zarz±dzania pakietami. Priorytety to:

<list>
  <item><strong>Wymagany</strong>: pakiety które s± konieczne dla samego
    funkcjonowania systemu.
    <p>Zawiera wszystkie niezbêdne narzêdzia do naprawy wad w systemie.
    Nie mo¿esz usuwaæ tych pakietów, poniewa¿ Twój system mo¿e staæ siê ca³kowicie zepsuty
    i mo¿e byæ nawet niemo¿liwe u¿ycie programu dpkg, aby to odwróciæ.
    Systemy z samymi pakietami wymaganymi s± prawdopodobnie nieu¿yteczne, ale maj±
    wystarczaj±c± funkcjonalno¶æ, aby umo¿liwiæ administratorowi systemu uruchomienie i instalacjê
    programów.
  <item><strong>Wa¿ny</strong> Te pakiety powinny siê znale¼æ w ka¿dym
    systemie rodziny Unix.
    <p>S± to inne pakiety, bez których system nie bêdzie dzia³a³ dobrze lub nie bêdzie
    u¿yteczny. Tutaj <em>NIE S¡</em> zawarte wielkie aplikacje jak np. Emacs, X11 lub TeX.
    Te pakiety stanowi± tylko sam± infrastrukturê.
  <item><strong>Standardowy</strong> Te pakiety s± standardowe w ka¿dym systemie Linux,
    w³±czaj±c do¶æ ma³e systemy, ale te¿ nie s± ograniczone do systemów znakowych.
    <p>S± to pakiety, które bêd± zainstalowane domy¶lnie je¶li u¿ytkownik nie wybierze niczego
    innego. Nie s± tu zawarte du¿e aplikacje, ale znajduje siê tutaj
    Emacs (jest to bardziej czê¶æ infrastruktury ni¿ aplikacja)
    i spora czê¶æ TeX i LaTeX (je¶li to mo¿liwe, aby by³y dostêpne bez systemu X-windows).
  <item><strong>Opcjonalny</strong> Zawarte tu s± te wszystkie pakiety, które mo¿esz chcieæ
    zainstalowaæ, je¶li nie wiesz czym one s± lub nie masz sprecyzowanych
    wymagañ.
    <p>Znajduj± siê tu X11, pe³na dystrybucja TeX i du¿o innych aplikacji.
  <item><strong>Dodatkowy</strong>: Wystêpuj± tu pakiety, które powoduj± konflikt z innymi
    pakietami posiadaj±cymi wy¿szy priorytet, s± zapewnie u¿yteczne je¶li ju¿ wiesz
    czym one s±, albo sprecyzowa³e¶ wymagania, które czyni± te pakiety
    nieodpowiednie dla "Opcjonalny".
</list>

<sect id="virtual">Co to jest wirtualny pakiet?

<p>Wirtualny pakiet jest ogóln± nazw±, która odnosi siê do jednej z grupy pakietów,
w której ka¿dy z pakietów dostarcza podobnej podstawowej funkcjonalno¶ci. Dla przyk³adu
oba programy <tt>tin</tt> i <tt>trn</tt> s± czytnikami wiadomo¶ci i
dlatego powinny spe³niæ zale¿no¶ci programów, które wymagaj± czytnika
wiadomo¶ci w systemie, aby pracowaæ lub byæ u¿ytecznym.
Dlatego te¿ o obu programach mo¿na powiedzieæ, ¿e dostarczaj± "wirtualny pakiet" nazwany
<tt>news-reader</tt>.

<p>Podobnie <tt>smail</tt> i <tt>sendmail</tt>, oba dostarczaj±
funkcjonalno¶ci agenta transportu wiadomo¶ci. Oba mog± powiedzieæ
¿e dostarczaj± wirtualny pakiet "agent transportu wiadomo¶ci".
Je¶li jeden z nich jest zainstalowany, wtedy dowolny program zale¿ny od
instalacji <tt>mail-transport-agent</tt> bêdzie usatysfakcjonowany
przez istnienie wirtualnego pakietu.

<p>System Debian dostarcza mechanizm, który, je¶li jest zainstalowany wiêcej ni¿ jeden pakiet
dostarczaj±cy ten sam wirtualny pakiet, pozwala administratorowi systemu
ustawiæ jeden preferowany pakiet. Odpowiednie polecenie
to <tt>update-alternatives</tt> i jest opisane dalej
w <ref id="diverse">.

<sect id="depends">Co oznacza powiedzenie, ¿e pakiet <em/Zale¿y/,
  <em/Zaleca/, <em/Proponuje/, <em/Wchodzi w konflikt/, <em/Zastêpuje/ lub
  <em/Dostarcza/ inny pakiet?

<p>System pakietów Debiana posiada zasiêg "zale¿no¶ci" pakietu,
który jest zaprojektowany aby wskazywaæ (w pojedynczej fladze) poziom, na którym
Program A mo¿e dzia³aæ niezale¿nie od istnienia Programu B w
danym systemie:
<list>
  <item>Pakiet A <em>zale¿y</em> od Pakietu B, je¶li B absolutnie musi
    byæ w kolejno¶ci zainstalowany aby uruchomiæ A.  W pewnych przypadkach A zale¿y nie tylko
    od B, ale od wersji B.  W tym przypadku zale¿no¶æ wersji jest
    zazwyczaj dolnym limitem, w tym sensie ¿e A zale¿y od dowolnej wersji
    B wiêkszej ni¿ pewna sprecyzowana wersja.
  <item>Pakiet A <em>zaleca</em> Pakiet B, je¶li opiekun pakietu
    oceni, ¿e wiêkszo¶æ u¿ytkowników nie bêdzie chcia³a A bez posiadania
    funkcjonalno¶ci dostarczanej przez B.
  <item>Pakiet A <em>proponuje</em> Pakiet B, je¶li B zawiera pliki, które
    s± powi±zane (i zazwyczaj poszerzaj±) funkcjonalno¶æ A.
  <item>Pakiet A <em>wchodzi w konflikt</em> z Pakietem B, gdy A nie bêdzie
    dzia³aæ, je¶li B jest zainstalowany w systemie. Najczê¶ciej konflikty s±
    przypadkami gdzie A zawiera pliki, które posiadaj± ulepszenia w stosunku do plików w B.
    "wchodzi w konflikt" jest czêsto po³±czone z "zastêpuje".
  <item>Pakiet A <em>zastêpuje</em> Pakiet B, kiedy pliki instalowane
    przez pakiet B s± usuwane i (w pewnych przypadkach) nadpisywane przez pliki z A.
  <item>Pakiet A <em>dostarcza</em> Pakiet B, kiedy wszystkie z plików
    i dzia³añ pakietu B s± w³±czone w A. Ten mechanizm umo¿liwia
    u¿ytkownikom z ograniczonym miejscem na dysku pobranie tylko tych czê¶ci
    pakietu A, które s± naprawdê potrzebne.
</list>

<p>Bardziej szczegó³owe informacje o u¿yciu tych terminów mo¿na znale¼æ
w Packaging manual i Policy manual.

<sect id="pre-depends">Co rozumie siê przez Pre-Depends?

<p>"Pre-Depends" jest specjaln± zale¿no¶ci±. W przypadku wielu pakietów,
<tt>dpkg</tt> rozpakuje ich pliki archiwum (np. s± to pliki <tt>.deb</tt>)
niezale¿nie od tego, czy pliki od których one zale¿± istniej± w systemie
czy nie.  Upraszczaj±c, rozpakowanie oznacza, ¿e <tt>dpkg</tt> wydobêdzie
pliki z pliku archiwum, które zosta³y przeznaczone do zainstalowania w twoim
systemie plików i umie¶ci je we w³a¶ciwym miejscu.  Je¶li te pakiety <em>depend</em>
istniej± w kilku innych pakietach w Twoim systemie, <tt>dpkg</tt> odmówi
dokoñczenia instalacji (przez wykonanie akcji "configure"),
dopóki inne pakiety nie zostan± zainstalowane.

<p>Jakkolwiek dla pewnych pakietów <tt>dpkg</tt> bêdzie odrzuca³ nawet ich rozpakowanie,
dopóki nie zostan± spe³nione pewne zale¿no¶ci . Takie pakiety s± nazywane
"Pre-depend" i zale¿± od obecno¶ci innych pakietów.
System Debian dostarcza ten mechanizm, aby wspieraæ bezpieczne aktualizowanie
wersji systemów z formatu <tt>a.out</tt> do formatu <tt>ELF</tt>, gdzie
<em>porz±dek</em> w którym s± rozpakowywane pakiety jest krytycznie wa¿ny. S± te¿
inne aktualizacje, gdzie metoda ta jest u¿yteczna, np. aktualizacja pakietów
z priorytetem wymagane i ich zale¿no¶æ od LibC.

<p>Tak, jak poprzednio, dok³adniejsze informacje o tym mo¿na znale¼æ
w Packaging manual.

<sect id="pkgstatus">Co oznacza siê przez <em/nieznany/, <em/instalowany/, <em/usuniêty/
  <em/wyczyszczony/ i <em/wstrzymany/ w statusie pakietu?

<p>Te flagi mówi±, co u¿ytkownik chcia³ zrobiæ z pakietem (jako
wskazanie albo przez akcjê u¿ytkownika w czê¶ci "Wybór" programu 
<tt>dselect</tt>, lub bezpo¶rednie wywo³anie programu <tt>dpkg</tt>).

<p>Ich znaczenie to:
<list>
  <item>nieznany     - u¿ytkownik nigdy nie wskaza³ co chce zrobiæ z pakietem.
  <item>instalowany  - u¿ytkownik chcia³ zainstalowaæ lub zaktualizowaæ wersjê pakietu.
  <item>usuniêty     - u¿ytkownik chcia³ usun±æ pakiet, ale nie chcia³
    usuwaæ ¿adnych istniej±cych plików konfiguracyjnych.
  <item>wyczyszczony - u¿ytkownik chcia³ aby pakiet zosta³ usuniêty ca³kowicie,
    w³±czaj±c jego pliki konfiguracyjne.
  <item>wstrzymany   - u¿ytkownik nie chce by ten pakiet by³ przetwarzany, np.
    chce zatrzymaæ obecn± wersjê z obecnym statusem bez wzglêdu na to, jaki on jest.
</list>

<sect id="puttingonhold">Jak mo¿na dokonaæ zatrzymania pakietu?

<p>S± dwie drogi zatrzymania pakietów, u¿ywaj±c dpkg lub dselect.

<p>U¿ywaj±c dpkg mo¿esz wyeksportowaæ listê wyborów pakietów poleceniem:
  <example>dpkg --get-selections \* > selections.txt</example>
Potem wyedytowaæ wynikowy plik <file/selections.txt/, zmieniaj±c liniê
zawieraj±c± pakiet, który chcesz zatrzymaæ, np. <package/libc6/, z tego:
  <example>libc6                                           install</example>
na to:
  <example>libc6                                           hold</example>
Zachowaæ plik i wczytaæ to do bazy dpkg poleceniem:
  <example>dpkg --set-selections < selections.txt</example>

<p>U¿ywaj±c dselect wystarczy wybraæ ekran [S]elect, znale¼æ
pakiet, który chcesz zatrzymaæ w obecnym stanie i nacisn±æ klawisz `=' (lub
`H'). Zmiany wejd± w ¿ycie natychmiast po wyj¶ciu z ekranu [S]elect.

<sect id="sourcepkgs">Jak mogê zainstalowaæ pakiet ¼ród³owy?

<p>Pakiety ¼ród³owe systemu Debian nie mog± byæ aktualnie "zainstalowane", s± one
po prostu rozpakowywane do katalogu, w którym chcesz zbudowaæ pakiety binarne
przez nie tworzone.

<p>Pakiety ¼ród³owe s± rozpowszechniane w wiêkszo¶ci na tych samych serwerach lustrzanych, na których mo¿esz
uzyskaæ pakiety binarne. Je¶li ustawisz swoje APT
<manref name="sources.list" section="5"> aby zawiera³o stosowne linie
"deb-src", bêdziesz zdolny ³atwo ¶ci±gn±æ ka¿dy pakiet ¼ród³owy
uruchamiaj±c

  <example>apt-get source foo</example>

<p>Aby pomóc w tworzeniu aktualnego pakietu, Pakiet ¼ród³owy systemu Debian
dostarcza tak zwanego mechanizmu tworzenia zale¿no¶ci. Oznacza to, ¿e
opiekun pakietu ¼ród³owego utrzymuje listê innych pakietów, które s±
wymagane aby stworzyæ pakiet. Aby zobaczyæ jak jest to u¿yteczne uruchom

  <example>apt-get build-dep foo</example>

przed tworzeniem pakietu.

<sect id="sourcebuild">Jak siê buduje binarne pakiety z pakietu ¼ród³owego?

<p>Aby skompilowaæ ¼ród³a, bêdziesz potrzebowa³ wszystkie pliki typu foo_*.dsc, foo_*.tar.gz
i foo_*.diff.gz (zauwa¿: czasami nie ma plików .diff.gz dla pakietów, które s± rodzime
dla systemu Debian).

<p>Gdy masz pakiety (<ref id="sourcepkgs">) i je¶li masz
pakiet <package/dpkg-dev/ zainstalowany,
nastêpuj±ce polecenia:
  <example>dpkg-source -x foo_version-revision.dsc</example>
rozpakuje pakiet do katalogu nazwanego <tt>foo-version</tt>.

<p>Je¶li chcesz tylko skompilowaæ pakiet, mo¿esz przej¶æ
do katalogu <tt>foo-version</tt> i wydaæ polecenie
  <example>dpkg-buildpackage -rfakeroot -b</example>
aby zbudowaæ pakiet (zauwa¿ ¿e to tak¿e wymaga pakietu
<package/fakeroot/ ) i potem
  <example>dpkg -i ../foo_version-revision_arch.deb</example>
aby zainstalowaæ nowo-zbudowany pakiet.

<sect id="creatingdebs">Jak mogê stworzyæ pakiet systemu Debian samodzielnie?

<p>Bardziej dok³adnego opisu o tym szukaj w Instrukcji dla nowych opiekunów,
dostêpnej w pakiecie <package/maint-guide/ lub na stronie
<url id="http://www.debian.org/doc/devel-manuals#maint-guide">.
