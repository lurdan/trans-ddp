<!--
  english version: 1.5
  russian version: $Id: kernel.ru.sgml,v 1.1 2001-05-04 23:31:38 nidd Exp $
  -->

<chapt id="kernel">Debian и ядро

<sect id="non-debian-kernel">Могу я установить и собрать ядро без
  некоторых специфичных для Debian вещей?

<p>Да. Но вы должны понимать политику Debian в отношении заголовочных файлов.

<p>Библиотеки языка C в Debian построены на самых свежих заголовочных файлах
<em>стабильных</em> выпусках <strong>ядра</strong>.

<p>Например, выпуск Debian-1.2 использует заголовочные файлы версии 5.4.13.
Эта практика идет в разрез с пакетами исходных текстов Linux, распространяемых
на всех FTP-архивах Linux, которые используют самые последние версии
заголовочных файлов. Заголовочные файлы ядра, распространяемые вместе с 
исходными текстами ядра, располагаются в каталоге
<tt>/usr/include/linux/include/</tt>.

<p>Если вам нужно собрать программу с заголовочными файлами ядра, которые
новее, чем те, что находятся в <package/libc6-dev/, тогда вы должны добавить
<tt>-I/usr/src/linux/include/</tt> в вашу командную строку при компиляции.
Это применимо, например, к компиляции демона автоматического монтирования
(<package/amd/). Когда в новых ядрах что-то меняют в работе с NFS, 
<tt>amd</tt> нужно об этом знать. Поэтому требуется включать последние
версии заголовочных файлов ядра.

<sect id="customkernel">Какие инструменты для построения ядра собственной
конфигурации есть в Debian?

<p>Пользователям, которые хотят (или должны) построить собственное ядро,
будет полезен пакет <package/kernel-package/. Он содержит скрипт для
построения пакета ядра и позволяет создавать пакеты kernel-image одной
командой
  <example>make-kpkg kernel_image</example>
(ее нужно запускать находясь в корневом каталоге дерева исходных текстов ядра).
Справку можно почитать командой
  <example>make-kpkg --help</example>
и, конечно, в man-странице <manref name="make-kpkg" section="8">.

<p>Пользователи должны отдельно скачать последнюю версию ядра
(или нужную им версию ядра) со своего любимого Linux-архива, если у них нет
пакета kernel-source-ВЕРСИЯ (где "ВЕРСИЯ" означает версию ядра).

<p>подробные инструкции по использованию пакета <package/kernel-package/
даны в файле <tt>/usr/doc/kernel-package/README</tt>. Вкратце, нужно:

<list>
  <item>Распаковать исходные тексты ядра, и <tt>cd</tt> перейти в появившийся
    каталог.
  <item>Поправить настройки ядра одной из этих команд:
    <list>
      <item><tt>make config</tt>  (это терминальный "строка-за-строкой" интерфейс).
      <item><tt>make menuconfig</tt>  (это меню-интерфейс, основанный на библиотеке ncurses).
        Обратите внимание, что для этой команды требуется установить 
	пакет <package/libncurses5-dev/.
      <item><tt>make xconfig</tt>  (это интерфейс X11).
        Для этой команды должны быть установлены X и Tcl/Tk пакеты.
    </list>
    Любой из вышеприведенных шагов генерирует новый файл <tt>.config</tt> в
    корневом каталоге исходных текстов ядра.
  <item>Выполните команду: <tt>make-kpkg -rev Custom.N kernel_image</tt>,
    где N - номер редакции, назначаемый пользователем.
    Debian по умолчанию назначит редакцию Custom.1, т.е.,
    <tt>kernel-image-2.2.14_Custom.1_i386.deb</tt>
    для ядра Linux версии 2.2.14.
  <item>Установите собранный пакет образа ядра
    <list>
    <item><tt>Запустите dpkg --install /usr/src/kernel-image-VVV_Custom.N.deb</tt>,
      чтобы установить само ядро.  Сценарий установки сделает следующее:
      <list>
        <item>запустит системный загрузчик, LILO (если он установлен),
        <item>установит новое ядро в /boot/vmlinuz_VVV-Custom.N и
          настроит соответствующую символическую связь на ядро наиболее свежей
	  версии.
        <item>предложит пользователю сделать загрузочную дискету. Эта дискета
	  будет сожержать только голое ядро. См. <ref id="custombootdisk">.
      </list>
    <item>В случае вторичных системных загрузчиков, таких как <package/grub/ 
      или <tt/loadlin/, скопируйте образ ядра в другое место (т.е., в
      /boot/grub или на дисковый раздел <tt>MS-DOS</tt>).
  </list>
</list>

<sect id="custombootdisk">Как мне сделать собственную загрузочную дискету?

<p>С этой задачей должен справляться пакет <package/boot-floppies/,
который можно найти в разделе <tt>admin</tt> FTP архива Debian.
Сценарии оболочки в этом пакете создают загрузочные дискеты в формате
<tt>SYSLINUX</tt>. Это отформатированные под систему <tt>MS-DOS</tt>, в которых
основная загрузочная запись напрямую загружает Linux (или другую операционную
систему, которая указана в файле syslinux.cfg на дискете). Другие сценарии
этого пакета создают аварийные root-дискеты и даже создают дискеты для
базовой инсталляции.

<p>Подробности об этом можно прочесть в файле
<tt>/usr/doc/boot-floppies/README</tt> после установки пакета
<package/boot-floppies/.

<sect id="modules">Чем в Debian поддерживаются манипуляции с подгружаемыми 
модулями?

<p>В Debian есть пакет <package/modconf/, содержащий сценарий оболочки
(<tt>/usr/sbin/modconf</tt>), который может использоваться для настройки
модулей. Этот сценарий имеет меню-ориентированный интерфейс, с помощью
которого пользователь может определить какие драйвера устройств должна
загружать система. Указания пользователя будут отображены в файлах
<tt>/etc/modules.conf</tt> (это список псевдонимов и аргументов, используемых
для различных модулей), совместно с файлами в каталоге <tt>/etc/modutils/</tt>,
и <tt>/etc/modules</tt> (это списки модулей, которые должны быть загружены во
время запуска системы).

<p>Аналогично (новым) файлам Configure.help, которые используются при
построении ядер с пользовательской конфигурацией, пакет modconf приходит с
набором файлов справок (в <tt>/usr/lib/modules_help/</tt>), который
подробно описывает соответствующие аргументы для каждого модуля.

<sect id="removeoldkernel">Я могу безопасно удалить пакет со старой версией 
ядра, и, если это возможно, то как?

<p>Да. Скрипт <tt>kernel-image-NNN.prerm</tt> проверяет не птаетесь ли вы 
удалить работающее ядро. Поэтому вы можете удалить ненужные пакеты с образами 
ядра командой:

<example>dpkg --purge --force-remove-essential kernel-image-NNN</example>

(конечно же, нужно заменить "NNN" номером версии и редакции ядра)
