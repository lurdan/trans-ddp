<!-- CVS revision of original english document "1.20" -->

<chapt id="pkg_basics">Les bases du système de gestion des paquets Debian


<sect id="package">Qu'est ce qu'un paquet Debian&nbsp;?

<p>Les paquets contiennent généralement tous les fichiers nécessaires pour
implémenter un ensemble de commandes ou de fonctionnalités.

<p>Il y a deux sortes de paquets Debian&nbsp;:
<list>
  <item><em>Les paquets binaires</em> contenant les exécutables, les fichiers 
  de configuration, les pages de manuel ou d'info, les informations de copyright 
  et d'autres documentations. Ces paquets sont distribués sous un format d'archive 
  spécifique à Debian (voir <ref id="deb-format">). Ils sont habituellement reconnaissables 
  par l'extension «&nbsp;.deb&nbsp;». Ils peuvent être installés en utilisant l'utilitaire 
  <tt>dpkg</tt>&nbsp; vous trouverez plus de détails dans les pages de manuel.
  
  <item><em>Les paquets sources</em> sont constitués d'un fichier <tt>.dsc</tt> décrivant
  le paquet source (incluant le nom des fichiers suivants), un fichier <tt>.orig.tar.gz</tt>
  contenant les sources originales non modifiés au format tar compressé et habituellement un 
  fichier <tt>.diff.gz</tt> contenant les modifications spécifiques à Debian par rapport au source
  original. L'utilitaire <tt>dpkg-source</tt> permet l'archivage et le désarchivage des sources 
  Debian&nbsp; vous trouverez plus de détails dans les pages de manuel.
</list>

<p>L'installation de logiciels par le système de paquet utilise les dépendances qui
sont définies avec attention par le responsable du paquet. Ces dépendances sont
documentées dans le fichier <tt>control</tt> associé à chaque paquet. Par exemple,
le paquet du compilateur GNU C (<package/gcc/) dépend du paquet <package/binutils/ qui
contient l'éditeur de lien et l'assembleur. Si un utilisateur essaye d'installer <package/gcc/
sans avoir préalablement installé <package/binutils/, le système de gestion de paquets (dpkg)
renverra un message d'erreur disant qu'il a aussi besoin de <package/binutils/ et arrêtera 
l'installation de <package/gcc/. (Cependant ceci peut être forcé par un utilisateur insistant,
voir <manref name="dpkg" section="8">). Pour plus d'informations, voir <ref id="depends"> plus
loin.

<p>Les outils de gestion de paquets Debian peuvent être utilisés pour&nbsp;:
<list>
  <item>manipuler ou administrer les paquets ou une partie des paquets,
  <item>aider les utilisateurs dans le découpage de paquets qui doivent être transmis sur
    des médium de taille limitée comme les disquettes,
  <item>aider les développeurs dans la construction de paquets et
  <item>aider les utilisateurs dans l'installation de paquets résidant sur un serveur
    FTP distant.
</list>

<sect id="deb-format">Quel est le format d'un paquet binaire Debian&nbsp;?

<p>Un paquet Debian ou un fichier d'archive Debian, contient les fichiers exécutables, 
les bibliothèques, et la documentation liée à une suite particulière de programme ou à 
un ensemble de programmes. Normalement, un fichier archive Debian a un nom se terminant
par <tt>.deb</tt>.

<p>Les mécanismes internes du format des paquets binaires Debian est décrit dans la page
de manuel de <manref name="deb" section="5">. Ce format interne est susceptible de changer
(entre chaque version principale de &debian;), donc utilisez toujours <manref name="dpkg-deb" section="8">
pour manipuler les fichiers <tt>.deb</tt>.

<sect id="pkgname">Pourquoi les noms des paquets Debian sont-ils si longs&nbsp;?

<p>Le nom des paquets binaires Debian se conforme à la convention suivante&nbsp;:
&lt;foo&gt;_&lt;NuméroVersion&gt;-&lt;NuméroRévisionDebian&gt;.deb

<p>Notez que <tt>foo</tt> est supposé être le nom du paquet. On peut connaître le nom
associé à un fichier d'archive Debian particulier (fichier .deb) d'une de ces manières&nbsp;:
<list>
  <item>inspecter le fichier «&nbsp;Packages&nbsp;» dans le répertoire où il a été stocké sur un site 
  FTP d'archive Debian. Ce fichier contient une description pour chaque paquet&nbsp;; le premier
  champ de chaque description est le nom formel du paquet.
  <item>utiliser la commande <tt>dpkg --info foo_VVV-RRR.deb</tt> (où VVV et RRR sont
  respectivement le numéro de version et de révision du paquet en question). Ceci affiche,
  entre autre, le nom du paquet correspondant au fichier archive.
</list>

<p>Le composant <tt>VVV</tt> est le numéro de version fournit par le développeur amont.
Il n'y a pas de standard ici, donc le numéro de version peut avoir différents formats
comme «&nbsp;19990513&nbsp;» ou «&nbsp;1.3.8pre1&nbsp;».

<p>Le composant <tt>RRR</tt> est le numéro de révision Debian et il est choisi par
le développeur Debian (ou un utilisateur s'il choisit de construire lui-même son paquet).
Ce numéro correspond au niveau de révision du paquet Debian, ainsi, une nouvelle révision
signifie généralement des modifications du Makefile Debian (<tt>debian/rules</tt>), du 
fichier de contrôle Debian <tt>debian/control</tt>), des scripts d'installation ou de 
désinstallation (<tt>debian/p*</tt>) ou des fichiers de configurations utilisés avec le paquet.


<!--
<p>The <tt>Arch</tt> component identifies the processor for which
the package was built.  This is commonly <tt>i386</tt>, which refers to
chips compatible to Intel's 386 or later versions.  For other
possibilities see <ref id="dirtree" name="Debian's FTP directory structure">.
-->

<sect id="controlfile">Qu'est ce qu'un fichier de contrôle&nbsp;?

<p>Des détails concernant le contenu du fichier <tt>control</tt> Debian sont fournis dans la charte Debian,
au chapitre cinq, voir <ref id="debiandocs">.

<p>Brièvement, un fichier <tt>control</tt> est montré ci-dessous pour le paquet Debian hello&nbsp;:

<example>
Package: hello
Priority: optional
Section: devel
Installed-Size: 45
Maintainer: Adam Heath &lt;doogie@debian.org&gt;
Architecture: i386
Version: 1.3-16
Depends: libc6 (>= 2.1)
Description: Le classique et bon exemple
 Le programme bonjour de GNU produit une salutation familière et amicale. Il
<!-- XXX below 'non-programmers' were better, but this is a verbatim copy -->
 permet à des non-programmeurs d'utiliser un outil classique d'informatique 
 qui leur serait autrement indisponible.
 .
 Sérieusement:  c'est un exemple sur comment faire un paquet Debian. 
 C'est la version Debian du programme du projet GNU «&nbsp;bonjour 
 le monde&nbsp;» (qui est lui-même un exemple pour le projet de GNU).
</example>

<p>Le champ «&nbsp;Package&nbsp;» contient le nom du paquet. C'est le nom 
par lequel les outils de gestion de paquet peuvent le manipuler. Il est 
habituellement similaire mais pas nécessairement le même à la première chaîne
composant le nom de l'archive Debian.

<p>Le champ de «&nbsp;Version&nbsp;» donne le numéro de version du développeur amont 
et (dans le dernier composant) le niveau de révision du paquet de Debian de ce programme
comme expliqué dans <ref id="pkgname">. <!-- XXX missing name -->

<p>Le champ «&nbsp;Architecture&nbsp;» indique pour quel processeur ce binaire 
particulier a été compilé.

<p>Le champ «&nbsp;Depends&nbsp;» donne une liste des paquets qui doivent être 
installés afin d'installer ce paquet avec succès.

<p>Le champ «&nbsp;Installed-Size&nbsp;» indique l'espace disque utilisé par le paquet 
une fois installé. Ceci est prévu pour être employé par les programmes d'installation pour 
vérifier s'il y a suffisamment d'espace disque disponible pour installer le programme.

<p>La ligne «&nbsp;Section&nbsp;» indique la section où le paquet Debian est conservé sur
les sites FTP de Debian. C'est le nom d'un sous-répertoire (dans l'un des répertoires
principaux, voir <ref id="dirtree">) où le paquet est conservé.

<p>Le champ «&nbsp;Priority&nbsp;» indique l'importance d'un paquet pour l'installation, 
de sorte que des logiciels semi-intelligents comme dselect ou console-apt peuvent trier 
les paquets dans une catégorie par exemple les paquets installés facultativement.
Voir <ref id="priority">.

<p>Le champ «&nbsp;Maintener&nbsp;» contient l'adresse électronique de la personne
actuellement responsable de la maintenance du paquet.

<p>Le champ «&nbsp;Description&nbsp;» fournit un bref résumé des fonctionnalités
du paquet.

<p>Pour plus d'informations sur les champs disponibles dans un paquet, reportez-vous
au chapitre 5 de la charte Debian, «&nbsp;Fichiers control et leurs champs &nbsp;».

<sect id="conffile">Qu'est ce qu'un Debian conffile&nbsp;? 

<p>Conffiles est une liste de fichiers de configuration (habituellement placés dans <tt>/etc</tt>)
que le système de gestion de paquet n'écrasera pas quand le paquet est mis à jour.
Ceci s'assure que les valeurs locales pour ces fichiers seront préservées, et c'est un 
dispositif critique permettant la mise à niveau des paquets sur un système en fonctionnement.

<p>Pour déterminer exactement quels fichiers sont préservés pendant la mise à jour, lancez&nbsp;:
<example>dpkg --status package</example> 
et regardez la section «&nbsp;Conffiles:&nbsp;».

<sect id="maintscripts">Qu'est-ce qu'un script Debian preinst, postinst, prerm, et postrm&nbsp;?

<p>Ces fichiers sont des scripts exécutables qui sont lancés automatiquement avant
ou après l'installation d'un paquet. Avec le fichier appelé <tt>control</tt>, tous
ces fichiers font partie de la section commande d'une archive Debian.

<p>Les fichiers individuels sont&nbsp;:
<taglist>
<tag/preinst/
  <item>Ce script est exécuté avant que le paquet soit désarchivé du fichier archive (.deb).
  Beaucoup de scripts «&nbsp;preinst&nbsp;» arrêtent les services des paquets
  qui sont mis à jour jusqu'à ce que leurs installations ou leurs mises à jour
  soient terminées (suivant le succès de l'exécution du script «&nbsp;postinst&nbsp;»).

<tag/postinst/
  <item>Ce script termine typiquement n'importe quelle configuration exigée du paquet <tt>foo</tt> une 
  fois que <tt>foo</tt> a été désarchivé à partir du fichier d'archive Debian («&nbsp;deb&nbsp;»). 
  Souvent le script «&nbsp;postinst&nbsp;» demande à l'utilisateur des informations 
  et avertit l'utilisateur que s'il accepte les valeurs par défaut, il devrait se souvenir 
  de revenir en arrière et de reconfigurer le paquet lorsque la situation le demandera.
  Beaucoup de scripts «&nbsp;postinst&nbsp;» exécutent toutes les commandes nécessaires
  au démarrage ou au redémarrage d'un service une fois qu'un nouveau paquet a été 
  installé ou mis à jour.
<tag/prerm/
  <item>Ce script arrête généralement tous les démons qui sont associés avec le paquet.
  Il est exécuté avant la suppression des fichiers associés au paquet.
  
<tag/postrm/
  <item>Ce script modifie généralement les liens ou les autres fichiers associés avec
  <tt>foo</tt> et/ou supprime les fichiers créés par le paquet (Voir aussi
  <ref id="virtual">.)
</taglist>

<p>Actuellement tous les fichiers de commande peuvent être trouvés dans le répertoire
<tt>/var/lib/dpkg/info</tt>. Les fichiers concernant le paquet <tt>foo</tt> commencent 
par le nom "foo" et sont suivis par les extensions "preinst",  "postinst" etc. Le fichier 
<tt>foo.list</tt> dans ce répertoire liste tous les fichiers installés par le paquet <tt>foo</tt>.
(Notez que l'emplacement de ces fichiers est interne à dpkg&nbsp;; vous ne devriez pas compter 
sur eux).

<sect id="priority">Qu'est ce qu'un paquet <em/Essential/ <em/Required/, <em/Important/, <em/Standard/,
  <em/Optional/ ou <em/Extra/&nbsp;?

<p>À chaque paquet Debian est assignée une priorité par les développeurs de la distribution, 
c'est une aide pour le système de gestion de paquet. Les priorités sont&nbsp;:

<list>
  <item>Nécessaire (<strong>Required</strong>)&nbsp;: paquets nécessaire pour le fonctionnement 
    correct du système.
    <p>Ceci inclut tous les outils nécessaires pour la réparation d'un système défectueux.
    Vous ne devez pas supprimer ces paquets ou votre système risque de devenir 
    complètement instable et vous ne pourrez probablement pas utiliser dpkg pour corriger cela.
    Avec seulement les paquets nécessaires, le système sera probablement inutilisable mais
    il aura suffisamment de fonctionnalités pour permettre de démarrer et d'installer plus 
    de logiciels.
  <item><strong>Important</strong>&nbsp;: paquets devant être présents sur tous systèmes de type Unix
    <p>Les autres paquets sans lesquels le système ne fonctionnera pas correctement ou ne sera pas 
	utilisable ont cette priorité. Ceci n'inclut <em>PAS</em> Emacs, X11, TeX ou aucune autre
	grosse application. Ces paquets constituent seulement l'infrastructure de base.
<!-- JFS: Review for etch, since some development packages might be removed
     in the near future #301138 -->
  <item><strong>Standard</strong>&nbsp;: paquets présents sur n'importe quel système Linux, 
    y compris un système raisonnablement petit mais pas limité à un système en  mode console.
    <p> C'est ce qui sera installé par défaut si les utilisateurs ne sélectionnent 
    rien. Cela n'inclut pas les grosses applications, mais intègre certains logiciels
    de développement comme les compilateurs GNU C et C++ (<tt>gcc</tt>, <tt>g++</tt>),
    GNU make, ainsi que l'interpréteur Python et certains serveurs comme OpenSSH, 
    le démon d'impression BSD (<tt>lpr</tt>) et le portmapper RPC (<tt>portmap</tt>).
  <item>Optionnel (<strong>Optional</strong>)&nbsp;: paquets incluant tous ce que vous
    pourriez raisonnablement vouloir installer si vous ne savez pas ce que c'est 
    ou si vous n'avez pas précisé de condition.
    <p>Ceci inclut X11, une distribution TeX complète et beaucoup d'applications.
  <item><strong>Extra</strong>&nbsp;: paquets qui entrent en conflit avec d'autres ayant 
    des priorités plus élevées ou ayant des conditions particulières qui les rendent peu
    convenables pour être optionnels. Ils sont utiles seulement si vous savez déjà ce qu'ils font.
</list>

<p>Si vous faites une installation Debian par défaut tous les paquets ayant une priorité 
<strong>standard</strong> ou supérieur seront installés sur votre système. Si vous 
choisissez des tâches prédéfinies, vous obtiendrez aussi les paquets de priorité plus faible.

<p>De plus, certain paquets sont marqués comme essentiel (<strong>Essential</strong>)
puisqu'ils sont absolument nécessaire pour un fonctionnement correct du système. Les outils
de gestion de paquets refuseront de les supprimer.

<sect id="virtual">Qu'est-ce qu'un paquet virtuel&nbsp;?

<p>Un paquet virtuel est un nom générique qui s'applique à n'importe quel 
groupe de paquets fournissant une fonctionnalité de base semblable. 
Par exemple, les programmes <tt>tin</tt> et <tt>trn</tt> sont des programmes 
de lecture de nouvelles Usenet et devraient donc satisfaire n'importe quelle 
dépendance d'un programme exigeant la présence d'un programme de lecture de 
nouvelles  sur le  système, afin de fonctionner ou pour être utiles. Les deux
sont donc capables de fournir le paquet virtuel appelé <tt>news-reader</tt>.

<p>De la même façon, <tt>smail</tt> et <tt>sendmail</tt> fournissent tous les deux
les fonctionnalités d'un agent de transport de courrier électronique. Les deux
sont donc capables de fournir le paquet virtuel <tt>mail-transport-agent</tt>.
Si l'un ou l'autre est installé, alors n'importe quel programme exigeant l'installation 
d'un agent de transport de courrier électronique sera satisfait par l'existence de ce
paquet virtuel.

<p>Debian fournit un mécanisme de sorte que, si plus d'un paquet fournissant 
le même paquet virtuel est installé sur le système, alors les administrateurs 
peuvent choisir leur paquet préféré. La commande appropriée est
<tt>update-alternatives</tt>, et est décrite plus loin dans <ref id="diverse">.

<sect id="depends">Que signifie qu'un paquet dépend (<em/Depends/), recommande (<em/Recommends/), 
  suggère (<em/Suggests/), est en conflit (<em/Conflicts/), remplace (<em/Replaces/)
  ou fournit (<em/Provides/) un autre paquet&nbsp;?

<p>Le système de paquet Debian a une gamme de «&nbsp;dépendances&nbsp;» sur les paquets
qui permet d'indiquer (avec un simple drapeau) à quel niveau un programme A peut 
fonctionner indépendamment de l'existence du programme B sur un système donné&nbsp;:

<list>
  <item>Le paquet A <em>dépend</em> du paquet B si B doit absolument être installé
    pour pouvoir exécuter A. Dans certain cas, A dépend non seulement de B mais
    d'une version de B. Dans ce cas, la dépendance de version est une limite basse,
    dans le sens que A dépend de toutes versions plus récentes que celle spécifié.
    <item>Le paquet A <em>recommande</em> le paquet B si le responsable du paquet pense que
    la plupart des utilisateurs ne voudraient pas A sans avoir également la fonctionnalité fournie 
    par B.
  <item>Le paquet A <em>suggère</em> le paquet B si B contient des fichiers qui sont liés aux 
    (et augmentent habituellement) fonctionnalités de A.
  <item>Le paquet A est en <em>conflit</em> avec le paquet B quand A ne peut pas 
    fonctionner si B est installé sur le système. Le plus souvent les conflits
    sont des cas où A contient des fichiers qui sont une amélioration de ceux de B.
    Le conflit est souvent combiné avec le remplacement.
  <item>Le paquet A <em>remplace</em> le paquet B quand les fichiers installés par
    B sont supprimés et (dans certains cas) écrasés par les fichiers de A.
  <item>Le paquet A <em>fournit</em> le paquet B quand tous les fichiers et toutes les fonctionnalités
    de B sont incorporés dans A.  Ce mécanisme fournit aux utilisateurs ayant une contrainte d'espace 
    disque un moyen d'obtenir seulement la partie du paquet dont ils ont vraiment besoin.
</list>

<p>Une information plus détaillée sur l'utilisation de chacun de ces termes peut être
trouvée dans la charte Debian.

<sect id="pre-depends">Quel est le sens de «&nbsp;Pre-Depends&nbsp;»&nbsp;?

<p>«&nbsp;Pre-Depends&nbsp;» est une dépendance particuilère. Dans le cas de la plupart
des paquets, <tt>dpkg</tt> désarchivera les fichiers archives (c.-à-d. les fichiers 
<tt>.deb</tt>) indépendamment de l'existance sur le système des fichiers dont il dépend.
De manière simpliste, le désarchivage signifie que <tt>dpkg</tt> extraira
les fichiers à partir du fichier archive qui sont censés être installés sur 
votre système de fichiers, et les mettra en place. 
Si ces paquets dépendent de l'existence de quelques autres paquets sur votre système, 
<tt>dpkg</tt> refusera d'accomplir l'installation (par l'exécution de l'action de
configuration) jusqu'à ce que les autres paquets soient installés.

<p>Cependant, pour certain paquets, <tt>dpkg</tt> refusera de les désarchiver
jusqu'à ce que certaines dépendances soient résolues. De tels paquets sont dits 
«&nbsp;Pré-dépendant&nbsp;» de la présence de quelques autres paquets. Le projet 
Debian fournissait ce mécanisme pour gérer la mise à jour de système utilisant le 
format <tt>a.out</tt> vers le format <tt>ELF</tt>, où l'ordre de désarchivage était critique.
Il y a d'autre situations de mise à jour où cette méthode est utile, par exemple
pour les paquets ayant une priorité «&nbsp;required&nbsp;» et des dépendances sur la libc.

<p>Comme ci-dessus, une information plus détaillée sur l'utilisation de ce terme
peut être trouvée dans la charte Debian.

<sect id="pkgstatus">Quelle est la signification de <em/unknown/, <em/install/, <em/remove/
  <em/purge/ et <em/hold/ dans le statut du paquet&nbsp;?

<p>Ces drapeaux indiquent ce que souhaite faire l'utilisateur avec un paquet
(ils sont positionnés par les actions de l'utilisateur dans la section «&nbsp;Section&nbsp;» 
de <tt>dselect</tt> ou par des appels directs de <tt>dpkg</tt> par l'utilisateur). 

<p>Leurs significations sont&nbsp;:
<list>
  <item>unknown  - L'utilisateur n'a jamais indiqué s'il souhaitait le paquet.
  <item>install  - L'utilisateur souhaite installer ou mettre à jour le paquet. 
  <item>remove   - L'utilisateur souhaite supprimer le paquet, mais ne désire pas
  effacer les fichiers de configuration existants.
  <item>purge    - L'utilisateur souhaite supprimer le paquet complètement, incluant 
  ses fichiers de configuration.
  <item>hold     - L'utilisateur ne souhaite pas traiter le paquet, c.-à-d. qu'il veut conserver
  la version courante avec l'état actuel de celui-ci.
</list>

<sect id="puttingonhold">Comment est-ce que je mets un paquet en «&nbsp;hold&nbsp;»&nbsp;?

<p>Il y a trois moyens de bloquer un paquet, avec dpkg, aptitude ou dselect.

<p>Avec dpkg, vous devez seulement exporter la liste de sélection des paquets, 
avec la commande&nbsp;:
  <example>dpkg --get-selections \* > selections.txt</example>
puis éditer le fichier <file/selections.txt/, changer la ligne contenant
le paquet que vous souhaitez conserver, par exemple pour <package/libc6/, de ceci&nbsp;:
  <example>libc6                                           install</example>
à ceci&nbsp;:
  <example>libc6                                           hold</example>
sauvegarder le fichier et le recharger dans la base de données de dpkg avec&nbsp;:
  <example>dpkg --set-selections < selections.txt</example>

<p>Avec aptitude, vous pouvez conserver un paquet en faisant
  <example>aptitude hold package_name</example>
   et enlever le drapeau «&nbsp;hold&nbsp;» avec
  <example>aptitude unhold package_name</example>

<p>Avec dselect, vous devez entrer dans l'écran [S]elect, trouver le paquet que 
vous souhaitez conserver dans l'état actuel, et appuyer sur la touche '=' (ou sur 'H').
Les changements seront pris en compte à la sortie de l'écran [S]elect.

<sect id="sourcepkgs">Comment est-ce que j'installe un paquet source&nbsp;?

<p>Les paquets sources Debian ne peuvent pas actuellement être installés, ils sont
seulement dépaquetés dans n'importe quel répertoire où vous voulez en construire les
paquets binaires.

<p>Les paquets sources sont distribués sur la plupart des serveurs où vous pouvez
obtenir les paquets binaires.
Si vous configurez votre fichier <manref name="sources.list" section="5"> pour APT
en ajoutant la ligne «&nbsp;deb-src&nbsp;» appropriée, vous pourrez facilement télécharger 
toutes les sources des paquets en lançant la commande

  <example>apt-get source foo</example>

<p>Pour vous aider réellement à la construction du paquet de source, Debian fournit 
un mécanisme pour les dépendances de construction. Ceci signifie que le responsable du 
paquet tient une liste des autres paquets nécessaires à la construction du paquet. 
Pour voir comment cela fonctione, exécutez 
  <example>apt-get build-dep foo</example>

avant de construire les sources.

<sect id="sourcebuild">Comment est-ce que je peux construire les paquets binaires depuis 
	les paquets sources&nbsp;? 

<p>Vous aurez besoin de tous les fichiers foo_*.dsc, foo_*.tar.gz et foo_*.diff.gz pour
compiler les sources (remarquez que pour certain paquets il n'y a pas de fichier .diff.gz,
ce sont les paquets natifs à Debian).

<p>Une fois que vous les avez récupérés (voir <ref id="sourcepkgs">), si vous avez le paquet
<package/dpkg-dev/ installé, la commande suivante&nbsp;:
  <example>dpkg-source -x foo_version-revision.dsc</example>
 désarchivera le paquet dans un répertoire nommé <tt>foo-version</tt>.

<p>Si vous souhaitez juste compiler le paquet, vous devez vous placer dans le répertoire 
<tt>foo-version</tt>  et lancer la commande
  <example>dpkg-buildpackage -rfakeroot -b</example>
pour construire le paquet (notez que la paquet <package/fakeroot/ est 
aussi nécessaire) et faites
  <example>dpkg -i ../foo_version-revision_arch.deb</example>
pour installer le nouveau paquet.

<sect id="creatingdebs">Comment est-ce que je crée un paquet Debian&nbsp;?

<p>Pour une description plus détaillée, lisez le «&nbsp;guide des nouveaux responsables 
Debian&nbsp;» disponible dans le paquet <package/maint-guide/ ou à l'adresse 
<url id="http://www.debian.org/doc/devel-manuals#maint-guide">.
