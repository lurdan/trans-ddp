<!-- CVS revision of original english document "1.10" -->

<chapt id="kernel">Debian et le noyau

<sect id="non-debian-kernel">Puis-je installer et compiler un noyau sans spécificité Debian&nbsp;?

<p>Oui.

<p>La bibliothèque C de Debian est construite avec la version <em>stable</em> la 
plus récente des entêtes du <strong>noyau</strong>. Si vous devez compiler un programme 
avec des entêtes de noyau plus récentes que celles de la branche stable, vous devriez alors 
mettre à jour le paquet contenant les entêtes (<package/libc6-dev/), ou employer les nouvelles 
entêtes incluses dans l'arborescence des sources du nouveau noyau installé. C'est-à-dire, si les 
sources du noyau sont dans <file>/usr/src/linux</file>, alors vous devriez ajouter
<tt>-I/usr/src/linux/include/</tt> à votre ligne de commande pour la compilation.

<sect id="customkernel">Quel est l'outil fourni par Debian pour construire des 
			noyaux personnalisés&nbsp;?

<p>Les utilisateurs qui souhaitent (ou doivent) construire un noyau personnalisé sont
encouragés à installer le paquet <package/kernel-package/. Ce paquet contient le script
permettant de construire le paquet du noyau et fournit la possibilité de créer un paquet
kernel-image simplement en exécutant la commande

  <example>make-kpkg kernel_image</example>
dans le répertoire racine des sources du noyau.
Une aide est disponible avec la commande
  <example>make-kpkg --help</example>
et dans la page de manuel  <manref name="make-kpkg" section="1">.


<p>Les utilisateurs doivent télécharger séparément les sources pour le noyau le plus récent
(ou celui de leur choix) depuis leur site préféré d'archive Linux, à moins qu'un paquet
kernel-source-version soit disponible (où version indique la version du noyau).

<p>Des instructions détaillées sur l'utilisation du paquet <package/kernel-package/ sont
données dans le fichier <file>/usr/share/doc/kernel-package/README.gz</file>.
Brièvement, vous devriez&nbsp;:

<list>
  <item>Désarchiver les sources du noyau et aller (<tt>cd</tt>) dans le nouveau répertoire créé.
  <item>Modifier la configuration du noyau en utilisant une de ces commandes&nbsp;:
    <list>
      <item><tt>make config</tt> (avec interface ligne dans un tty).
      <item><tt>make menuconfig</tt> (avec une interface basée sur ncurses).
        Remarquez que pour utiliser cette option le paquet <package/libncurses5-dev/ doit 
		être installé
      <item><tt>make xconfig</tt> (avec une interface graphique (X11)).
        L'utilisation de cette option nécessite que les paquets X et Tcl/Tk soient installés.
    </list>
   	Toutes ces étapes produisent un nouveau fichier <tt>.config</tt> dans le répertoire racine 
	des sources du noyau.
  <item>Exécuter la commande&nbsp;: <tt>make-kpkg -rev Custom.N kernel_image</tt>,
    où N est le numéro de révision assigné par l'utilisateur. Les nouvelles archives de Debian 
	construites ainsi auront la révision Custom.1, par exemple, <tt>kernel-image-2.2.14_Custom.1_i386.deb</tt> 
	pour le noyau 2.2.14 de Linux.
     <item>Installer le paquet créé.
    <list>
    <item>Lancer <tt>dpkg --install /usr/src/kernel-image-VVV_Custom.N.deb</tt>
      	  pour installer le noyau. Le script d'installation va&nbsp;:
      <list>
        <item>lancer le programme de démarrage, LILO (s'il est installé),
        <item>installer le noyau personnalisé dans /boot/vmlinuz_VVV-Custom.N et 
		  configurer les liens symboliques vers la plus récente version du noyau
        <item>demander à l'utilisateur de faire une disquette de démarrage. Cette disquette
		  contiendra seulement une image du noyau. Voir <ref id="custombootdisk">.
      </list>
    <item>Pour utiliser un programme de démarrage différent tel que <package/grub/ ou  <tt/loadlin/, 
	  copiez cette image à d'autres endroits (par exemple, /boot/grub ou sur une parition 
	  <tt>MSDOS</tt>).
  </list>
</list>

<!-- TODO: check out a new source of details, this README isn't too useful,
I'm told (joy) -->
<sect id="custombootdisk">Comment puis-je faire des disquettes de démarrage personnalisées&nbsp;?

<p>Cette tâche est considérablement facilitée par le paquet <package/boot-floppies/ de Debian, 
que vous trouvez normalement dans la section <tt>admin</tt> des archives ftp de Debian.
Les scripts shell de ce paquet produisent des disquettes de démarrage au format <tt>SYSLINUX</tt>. 
Ce sont des disquettes avec un formatage de type MSDOS dont le mbr (master boot records) a été 
modifié de sorte qu'elles puissent démarrer Linux directement (ou d'autre systèmes d'exploitation 
ayant été définis dans le fichier syslinux.cfg de la disquette). D'autres scripts de ce paquet permettent 
la création de disquettes de restauration et peuvent même reproduire les disques de base.

<p>Vous trouverez plus d'informations sur ce sujet dans le fichier <tt>/usr/doc/boot-floppies/README</tt>
après avoir installé le paquet <package/boot-floppies/.

<sect id="modules">Quelles dispositions spéciales Debian fournit-elle pour manipuler les modules&nbsp;?

<p>Le paquet Debian <package/modconf/ fournit un script shell (<tt>/usr/sbin/modconf</tt>)
qui peut être utilisé pour personnaliser la configuration des modules. Ce script présente 
une interface à base de menus, demandant à l'utilisateur les pilotes de périphérique qui 
doivent être chargés sur son système. Les réponses sont utilisées pour personnaliser les 
fichiers <tt>/etc/modules.conf</tt> (qui liste les alias et les arguments qui doivent être 
utilisés par les différents modules), <tt>/etc/modutils/</tt> et <tt>/etc/modules</tt> 
(qui contient les modules qui doivent être chargés au démarrage).

<p>Comme les (nouveaux) fichiers Configure.help qui sont maintenant disponibles
pour gérer la compilation de noyau personnalisé, le paquet <package/modconf/
est fourni avec un ensemble de fichiers d'aide (dans <tt>/usr/lib/modules_help/</tt>)
qui fournissent des informations détaillées sur les paramètres appropriés pour chaque modules

<sect id="removeoldkernel">Puis-je sans risque désinstaller un vieux paquet de noyau et si oui comment&nbsp;?

<p>Oui. Le script <tt>kernel-image-NNN.prerm</tt> vérifie si le noyau que vous utilisez actuellement
est identique au noyau que vous essayez de désinstaller. Donc vous pouvez supprimer les paquets de
noyau non souhaités en utilisant cette commande&nbsp;:
<example>dpkg --purge --force-remove-essential kernel-image-NNN</example>

(Bien sûr, remplacez «&nbsp;NNN&nbsp;» avec le numéro de version et de révision de votre noyau)
