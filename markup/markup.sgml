<!doctype debiandoc system>
<book>
<title>Debiandoc-SGML markup manual
<author>Ian Jackson <email>ijackson@gnu.ai.mit.edu
<version><date>
<copyright>Copyright &copy;1996 Ian Jackson.
<p>

Debiandoc-SGML, including this manual, is free software; you may
redistribute it and/or modify it under the terms of the GNU General
Public License as published by the Free Software Foundation; either
version 2, or (at your option) any later version.
<p>

This is distributed in the hope that it will be useful, but
<em>without any warranty</em>; without even the implied warranty of
merchantability or fitness for a particular purpose.  See the GNU
General Public License for more details.
<p>

You should have received a copy of the GNU General Public License with
your Debian GNU/Linux system, in <tt>/usr/doc/copyright/GPL</tt>, or
with the <prgn/debiandoc-sgml/ source package as the file
<tt>COPYING</tt>.  If not, write to the Free Software Foundation,
Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

<toc sect>

<chapt id="markup">SGML markup and metacharacters
<p>

As entered in a text editor SGML document consists of text
interspersed with tags denoting the start and end of elements.
<p>

Tags take the form <tt/&lt;<var/element/&gt;/ to start the element
<var/element/ and <tt>&lt;/<var/element/&gt;</> to finish it.
<p>

There are some shorthands you can use:
<tt>&lt;<var/element//<var/contents//</> specifies an element
<var/element/ with contents <var/contents/ - but the <var/contents/
may not contain a slash <tt>/</>.  <tt>&lt;/&gt;</> closes the
innermost currently open element.
<p>

Some types of element start tag can have attributes; these appear
inside the closing angle bracket, and are separated from the element
name by whitespace.  The attributes allowed in a particular element's
start tag are described along with the element.
<p>

If you want to include SGML's markup characters (angle brackets
<tt/&lt;/ <tt/&gt;/ and ampersands <tt/&amp;/) as text you must refer
to them by name (this is called an entity reference in SGML-speak).
<tt/&amp;<var/name/;/ produces the character whose name is <var/name/.
Some useful character names are:
<taglist compact>
<tag><tt/lt/
<item>less than sign (left angle bracket) <tt>&lt;</>;
<tag><tt/gt/
<item>greater than sign (right angle bracket) <tt>&gt;</>;
<tag><tt/amp/
<item>ampersand <tt>&amp;</>;
<tag><tt/copy/
<item>copyright symbol <tt>&copy;</>;
</taglist>
The full list of characters is borrowed from <prgn/linuxdoc-sgml/, in
<prgn/linuxdoc-sgml/'s <tt>rep/latin1/general</> file.
<p>

You can also use <tt/&amp;#<var/number/;/ to refer to the character
whose number is <var/number/ (in ISO-LATIN-1).  <var/number/ should be
in decimal.

<chapt id="structure">Overall structure
<p>

The first line of the document should be
<example>
&lt!doctype debiandoc system&gt
</example>
to indicate that the document is a Debiandoc-SGML file.
<p>

The document should start with the <tt/&lt;book&gt;/ tag and end with
<tt>&lt;/book&gt;</>.
<p>

This should be followed by the <tt/&lt;title&gt;/, one or more
<tt/&lt;author&gt;/-<tt/&lt;email&gt;/ pairs, and optionally a
<tt/&lt;version&gt;/.  Each of these is a piece of marked-up inline
text - see <ref id="inline">.  The <tt/&lt;version&gt;/ may also
contain <tt/&lt;date&gt;/ which stands for the date at the time the
document is formatted.
<p>

Then may come an <tt/&lt;abstract&gt;/ and a <tt/&lt;copyright&gt;/ notice and a
<tt/&lt;toc&gt;/ marker.
<p>

The <tt/&lt;abstract&gt;/ contains a single paragraph.
<p>

The <tt/&lt;copyright&gt;/ notice contains a copyright summary (this
is used, for example, at the bottom of every HTML page) followed by
one or more paragraphs, the first of which must be indicated by a
<tt/&lt;p&gt;/ tag to distinguish it from the summary.
<p>

The <tt/&lt;toc&gt;/ marker specifies that a table of contents is to be
produced.  The <tt/&lt;toc&gt;/ doesn't contain anything in the SGML
source - its contents are generated by the processing systems.  The
<tt/&lt;toc&gt;/ can have an attribute saying how detailed it should be;
for example, <tt/&lt;toc sect1&gt;/ says that subsections should be
included, whereas <tt/&lt;toc chapt&gt;/ says that only chapters should be
included.  The values allowed are <tt/chapt/, <tt/sect/, <tt/sect1/
and <tt/sect2/.
<p>

Following these parts comes the body of the document - one or more
chapters <tt/&lt;chapt&gt;/.
<p>

It is not necessary to mark the end of the <tt/&lt;title&gt;/,
<tt/&lt;author&gt;/s, <tt/&lt;version&gt;/, <tt/&lt;abstract&gt;/ and
<tt/&lt;copyright&gt;/ elements - they are implicitly ended by the
start of the next element.

<chapt id="chaptsectpar">Chapters, sections and paragraphs
<p>

Each chapter starts with a <tt/&lt;chapt&gt;/ tag, followed by the
chapter's title.  The title may contain marked-up inline text, but no
cross-references (see <ref id="inline">).
<p>

The body of the chapter is zero or more paragraphs, the first of which
must be indicated by a <tt/&lt;p&gt/ tag to distinguish it from the
title, and then zero or more sections.
<p>

A section starts with <tt/&lt;sect&gt;/, and has a similar structure:
title, optionally some paragraphs, and then optionally some
subsections.
<p>

Subsections are <tt/&lt;sect1&gt;/; there are also smaller divisions
<tt/&lt;sect2&gt;/, <tt/&lt;sect3&gt;/ and <tt/&lt;sect4&gt;/.
<p>

Paragraphs are introduced by <tt/&lt;p&gt;/.  Sometimes the start of
paragraph tag can be omitted, but it is mandatory after
<tt/&lt;chapt&gt;/, <tt/&lt;sect&gt;/ and so forth.  It is never
necessary to mark the end of a paragraph with <tt>&lt;/p&gt;</>.
<p>

Paragraphs can contain marked up inline text (see <ref id="inline">)
and also lists and examples (<ref id="listexamp">).

<chapt id="inline">Marked-up inline text and character style markup
<p>

Ordinary text (called `inline text' in this document) may contain a
elements for special formatting and cross-referencing.  Inline text
appears in chapter and section titles, in the copyright summary,
inside paragraphs and in other similar places.

<sect>Character style
<p>

There are a number of elements for denoting special significance of
certain pieces of text.  For all of them the end of the special text
must be marked up explicitly, by using an explicit end tag
<tt>&lt;/<var/element/&gt;</>, the abbreviated end tag for closing the
innermost element <tt>&lt;/&gt;</> or the slash <tt>/</> which
finishes the most abbreviated form of element markup (see <ref
id="markup">).

<taglist>
<tag><tt/&lt;em&gt;/ - emphasis

<item>
Indicates that the contained text is more important or more
significant than that surrounding it.
<p>

Typically this will be represented by italics if available, or
emboldened or underlined text, or in plain text formats with no
character highlighting available by surrounding the text with
asterisks like *this*.

<tag><tt/&lt;var&gt;/ - metasyntactic variable
<item>
Indicates that the contained text is a metasyntactic variable.  Ie, it
is the name of an object or piece of syntax which when actually used
would have a real value substituted.
<p>

Typically this will be represented by italics, or in plain text
formats by surrounding the text with angle brackets like &lt;this&gt;.
If several metasyntactic variables appear one after the other they
should each be given their own <tt/&lt;var&gt;/ element.

<tag><tt/&lt;prgn&gt;/ - name of a program or well-known file
<item>
Indicates that the contained text is the name of a program, well-known
filename (usually without paths), function or some similar thing which
has a name in the computer.
<p>

In output formats where character highlighting and various font styles
are available this is usually represented by using a fixed-width font.
In plain text output formats these names are not specially marked at
all, as they occur frequently and introducing quoting would disrupt
the flow of the text.

<tag><tt/&lt;tt&gt;/ - pathname, code or output fragment, command string
<item>
Indicates that the contained text is a general string which came out
of or is going in to a computer.  It should be used for full
pathames, code fragments that should be displayed inline and
wordrapped (see also <ref id="examples"> for an alternative), and so
forth.  It is frequently necessary to introduce metasyntactic
variables into these strings, in which case they should be made part
of the <tt/&lt;tt&gt;/ element rather than elements alongside it.
<p>

This will usually be rendered using a fixed-width font; in plain-text
formats quotes may be used around the element.

<tag><tt/&lt;qref id="<var/refid/"&gt;/ - quiet reference
<item>
Produces a `quiet reference' to the named reference id (see <ref
id="xref">).  This should be used where a cross-reference would be
useful if not intrusive, but where it is not essential and should be
left out if it would need to intrude on the text.
<p>

In formats where cross-references can be made non-intrusively by
making a region of text a hyperlink without introducing in-line text
this element will cause its contained text to become a hyperlink to
the target of the cross-reference.  In other formats this element will
not have any effect.
</taglist>

<sect id="xref">Cross-references
<p>

There are a number of elements for introducing cross-references either
to other parts of the same document or to other documents.
<p>

The intra-document cross-references are based on a scheme of reference
identifiers.  Each chapter, section, subsection etc. may have an
<tt/id/ attribute giving its reference id - for example <tt/&lt;chapt
id="spong"&gt;/ specifies that the chapter being started has reference
id <tt/spong/.  This reference id can then be referred to in other
parts of the document using the special cross-referencing elements.
<p>

The reference identifier will also be used for generating filenames
and reference tokens for formats such as HTML which produce several
output files; if no reference ids are specified then the chapter and
section numbers will be used.  It is a good idea to give at least all
your chapters reference ids so that the filenames will not change if
you change the order of the chapters or sections in your document.
<p>

<taglist>
<tag><tt/&lt;ref id="<var/refid/"&gt;/ - intra-document cross reference
<item>
This generates a cross-reference within the same document to the
section or chapter with id <var/refid/.
<p>

The <tt/&lt;ref&gt;/ element does not have any contents; the section
or chapter number and title and its page number or whatever is
appropriate for the output format will be inserted into the text at
the point where the tag appears.
<p>

Syntactically the cross reference is a noun phrase,
suitable for uses like <tt>(see &lt;ref id="<var/.../"&gt;)</> or
<tt>further info is in &lt;ref id="<var/.../"&gt;.</>.

<tag><tt/&lt;manref name="<var/name/" section="<var/section/"&gt;/ -
manpage
<item>
Generates a cross-reference to the manpage for <var/name/ in section
<var/section/.  This tag does not have any contents; text describing
the page, typically <tt/<var/name/(<var/section/)/, will be inserted
at the point where <tt/&lt;manref&gt;/ appears.

<tag><tt/&lt;email&gt;/ - email address
<item>
Indicates that the contained text is an email address.  The contents
of the tag should be just the text of the email address itself;
character style markup and cross-references are forbidden.  Usually
the end tag <tt>&lt;/email&gt;</> may not be omitted, but it may be
left out when it appears in an <tt/&lt;author&gt;/ as the end of the
<tt/&lt;author&gt;/, implied by the start of the next element, will
imply the end of the email address.
<p>

In some formats this will generate a true cross-reference which might
(for example) be used to send email to the address quoted.  In others
it will just mark the text specially, usually including angle brackets
<tt/&lt;/ <tt/&gt;/ around it.

<tag><tt/&lt;ftpsite&gt;/ - anonymous FTP site name
<tag><tt/&lt;ftppath&gt;/ - path on most recently named FTP site
<item>
<tt/&lt;ftpsite&gt;/ indicates that the content of the element is the
DNS name of an anonymous FTP site, and <tt/&lt;ftppath&gt;/ that it
is a pathname on that site.  Both elements may not contain any
character style markup or cross-references.
<p>

Typically both elements will be rendered in a fixed with font; if
possible, the <tt/&lt;ftppath&gt;/ will be made into a functional
hyperlink to the named file or directory on the most recent
<tt/&lt;ftpsite&gt;/.
<p>

<tt/&lt;ftppath&gt;/ must always have been preceded by a
<tt/&lt;ftpsite&gt;/ in the same chapter, but once one site has been
named several paths may be appear.
</taglist>

<sect>Footnotes
<p>

Footnotes may appear in most inline text, and are indicated 
by <tt>&lt;footnote&gt;<var/.../&lt;/footnote&gt</>.  The text of the
footnote itself will be removed and placed elsewhere (where depends on
the format), and replaced with a reference or hyperlink to the
footnote.
<p>

The contents of the footnote should be one or more paragraphs; the
start of the first paragraph need not be marked explicitly.  Inline
markup elements such as character style do not take effect on the
contents of footnotes defined inside them - the footnote gets a `clean
slate'.
<p>

Footnotes may be nested, but this is rarely a good idea.

<chapt id="listexamp">Lists and examples

<sect>Lists
<p>

There are three kinds of lists:
<list compact>
<item><tt/&lt;list&gt;/ - ordinary (bulleted) list;
<item><tt/&lt;enumlist&gt;/ - numbered list;
<item><tt/&lt;taglist&gt;/ - tagged list.
</list>
<p>

Each entry in an ordinary or numbered list is an item introduced by
<tt/&lt;item&gt;/.  Each entry in a tagged list is one or more
<tt/&lt;tag&gt;/s followed by an <tt/&lt;item&gt;/.
<p>

It is not necessary to mark the end of <tt/&lt;tag&gt;/s or
<tt/&lt;item&gt;/s.
<p>

All three types of list come in two flavours, depending on whether you
specify the <tt/compact/ attribute (eg, <tt>&lt;taglist
compact&gt;</>) or not (eg, <tt/&lt;enumlist&gt;/).  The
<tt/&lt;tag&gt;/ may contain only marked-up inline text.
<p>

The compact versions are intended for use within paragraphs.  The
formatter will not put gaps around the list or between
entries.<footnote>There is a problem with this in HTML.  The HTML
formatter tries not to, by using HTML lists' <tt/compact/ attribute on
the lists it generates, but not many browsers understand it
properly.</footnote> The entries in a compact list should each be a
single paragraph (it is not necessary to mark the start of the
paragraph).  Any lists inside a compact list should themselves be
marked compact (though the formatters will in fact infer for
themselves that they ought to be compact).
<p>

The non-compact versions are intended to stand as paragraphs
themselves.  Each entry in such a list may contain more than one
paragraph (once again, the start of the first paragraph need not be
marked).  The list is separated from the surrounding text, and the
entries from each other, by blank lines as would be expected for
paragraph breaks.

<sect id="examples">Examples
<p>

Examples - multi-line code fragements, scripts, and similar pieces of
computer text - are introduced with <tt/&lt;example&gt;/ and finish
with <tt>&lt;/example&gt;</>.  
<p>

The example will be formatted exactly as it is typed in, with spacing
and newlines reproduced.  It will be displayed in a fixed-width font,
usually the one used for the <tt/&lt;tt&gt;/ character style, even if
the formatter usually uses a proportional font.  Any indentation which
is appropriate will be added by the formatter; the example should be
entered starting in the left hand column.
<p>

Examples may contain marked up character text but may not contain
cross-references or the character style elements <tt/&lt;tt&gt;/,
<tt/&lt;prgn&gt;/ and <tt/&lt;em&gt;/.  See <ref id="inline">.
<p>

An example does not produce a paragraph break; examples are considered
parts of paragraphs.  If an example is to be a paragraph on its own
then paragraph start tags should be added as appropriate.
<p>

Any SGML markup characters in the example must be escaped as usual -
see <ref id="markup">. <tt/&lt;example&gt;/ does not work like TeX's
<tt/verbatim/ environment.

</book>
